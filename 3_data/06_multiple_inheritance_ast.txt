TranslationUnitDecl 0x7fd2ff8326d0 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x7fd2ff832c60 <<invalid sloc>> <invalid sloc> implicit referenced __int128_t '__int128'
| `-BuiltinType 0x7fd2ff832940 '__int128'
|-TypedefDecl 0x7fd2ff832cd0 <<invalid sloc>> <invalid sloc> implicit referenced __uint128_t 'unsigned __int128'
| `-BuiltinType 0x7fd2ff832960 'unsigned __int128'
|-TypedefDecl 0x7fd2ff833018 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x7fd2ff832dc0 'struct __NSConstantString_tag'
|   `-CXXRecord 0x7fd2ff832d28 '__NSConstantString_tag'
|-TypedefDecl 0x7fd2ff8330b0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x7fd2ff833070 'char *'
|   `-BuiltinType 0x7fd2ff832760 'char'
|-TypedefDecl 0x7fd2ff865c00 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x7fd2ff833390 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x7fd2ff8331a0 'struct __va_list_tag'
|     `-CXXRecord 0x7fd2ff833108 '__va_list_tag'
|-NamespaceDecl 0x7fd2ff865c58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:442:1, line:445:1> line:442:11 std
| `-NamespaceDecl 0x7fd2ff865cc0 <line:443:3, line:444:3> <scratch space>:25:1 __1 inline
|-LinkageSpecDecl 0x7fd2ff865dd8 </usr/include/sys/cdefs.h:71:23, line:72:21> line:71:30 C
| |-TypedefDecl 0x7fd2ff865e40 </usr/include/math.h:44:5, col:19> col:19 float_t 'float'
| | `-BuiltinType 0x7fd2ff8328c0 'float'
| |-TypedefDecl 0x7fd2ff865eb0 <line:45:5, col:20> col:20 double_t 'double'
| | `-BuiltinType 0x7fd2ff8328e0 'double'
| |-FunctionDecl 0x7fd2ff865fd8 <line:111:1, col:35> col:12 __math_errhandling 'int (void)' extern
| |-FunctionDecl 0x7fd2ff866198 <line:144:1, col:31> col:12 referenced __fpclassifyf 'int (float)' extern
| | `-ParmVarDecl 0x7fd2ff8660c8 <col:26> col:31 'float'
| |-FunctionDecl 0x7fd2ff866318 <line:145:1, col:32> col:12 referenced __fpclassifyd 'int (double)' extern
| | `-ParmVarDecl 0x7fd2ff866250 <col:26> col:32 'double'
| |-FunctionDecl 0x7fd2ff866498 <line:146:1, col:37> col:12 referenced __fpclassifyl 'int (long double)' extern
| | `-ParmVarDecl 0x7fd2ff8663d0 <col:26, col:31> col:37 'long double'
| |-FunctionDecl 0x7fd2ff8665e0 </usr/include/sys/cdefs.h:300:36, /usr/include/math.h:188:52> col:28 used __inline_isfinitef 'int (float)' inline
| | |-ParmVarDecl 0x7fd2ff866550 <col:47> col:52 'float'
| | `-AlwaysInlineAttr 0x7fd2ff866680 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fd2ff866770 <line:300:36, /usr/include/math.h:189:53> col:28 used __inline_isfinited 'int (double)' inline
| | |-ParmVarDecl 0x7fd2ff8666e0 <col:47> col:53 'double'
| | `-AlwaysInlineAttr 0x7fd2ff866810 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fd2ff866900 <line:300:36, /usr/include/math.h:190:58> col:28 used __inline_isfinitel 'int (long double)' inline
| | |-ParmVarDecl 0x7fd2ff866870 <col:47, col:52> col:58 'long double'
| | `-AlwaysInlineAttr 0x7fd2ff8669a0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fd2ff866a90 <line:300:36, /usr/include/math.h:191:49> col:28 __inline_isinff 'int (float)' inline
| | |-ParmVarDecl 0x7fd2ff866a00 <col:44> col:49 'float'
| | `-AlwaysInlineAttr 0x7fd2ff866b30 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fd2ff8f5630 <line:300:36, /usr/include/math.h:192:50> col:28 __inline_isinfd 'int (double)' inline
| | |-ParmVarDecl 0x7fd2ff866b90 <col:44> col:50 'double'
| | `-AlwaysInlineAttr 0x7fd2ff8f56d0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fd2ff8f57c0 <line:300:36, /usr/include/math.h:193:55> col:28 __inline_isinfl 'int (long double)' inline
| | |-ParmVarDecl 0x7fd2ff8f5730 <col:44, col:49> col:55 'long double'
| | `-AlwaysInlineAttr 0x7fd2ff8f5860 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fd2ff8f5950 <line:300:36, /usr/include/math.h:194:49> col:28 __inline_isnanf 'int (float)' inline
| | |-ParmVarDecl 0x7fd2ff8f58c0 <col:44> col:49 'float'
| | `-AlwaysInlineAttr 0x7fd2ff8f59f0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fd2ff8f5ae0 <line:300:36, /usr/include/math.h:195:50> col:28 __inline_isnand 'int (double)' inline
| | |-ParmVarDecl 0x7fd2ff8f5a50 <col:44> col:50 'double'
| | `-AlwaysInlineAttr 0x7fd2ff8f5b80 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fd2ff8f5c70 <line:300:36, /usr/include/math.h:196:55> col:28 __inline_isnanl 'int (long double)' inline
| | |-ParmVarDecl 0x7fd2ff8f5be0 <col:44, col:49> col:55 'long double'
| | `-AlwaysInlineAttr 0x7fd2ff8f5d10 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fd2ff8f5e00 <line:300:36, /usr/include/math.h:197:52> col:28 __inline_isnormalf 'int (float)' inline
| | |-ParmVarDecl 0x7fd2ff8f5d70 <col:47> col:52 'float'
| | `-AlwaysInlineAttr 0x7fd2ff8f5ea0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fd2ff8f5f90 <line:300:36, /usr/include/math.h:198:53> col:28 __inline_isnormald 'int (double)' inline
| | |-ParmVarDecl 0x7fd2ff8f5f00 <col:47> col:53 'double'
| | `-AlwaysInlineAttr 0x7fd2ff8f6030 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fd2ff8f6120 <line:300:36, /usr/include/math.h:199:58> col:28 __inline_isnormall 'int (long double)' inline
| | |-ParmVarDecl 0x7fd2ff8f6090 <col:47, col:52> col:58 'long double'
| | `-AlwaysInlineAttr 0x7fd2ff8f61c0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fd2ff8f62b0 <line:300:36, /usr/include/math.h:200:51> col:28 __inline_signbitf 'int (float)' inline
| | |-ParmVarDecl 0x7fd2ff8f6220 <col:46> col:51 'float'
| | `-AlwaysInlineAttr 0x7fd2ff8f6350 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fd2ff8f6440 <line:300:36, /usr/include/math.h:201:52> col:28 __inline_signbitd 'int (double)' inline
| | |-ParmVarDecl 0x7fd2ff8f63b0 <col:46> col:52 'double'
| | `-AlwaysInlineAttr 0x7fd2ff8f64e0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fd2ff8f6600 <line:300:36, /usr/include/math.h:202:57> col:28 __inline_signbitl 'int (long double)' inline
| | |-ParmVarDecl 0x7fd2ff8f6540 <col:46, col:51> col:57 'long double'
| | `-AlwaysInlineAttr 0x7fd2ff8f66a0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fd2ff8f6790 prev 0x7fd2ff8665e0 <line:300:36, /usr/include/math.h:206:1> line:204:28 used __inline_isfinitef 'int (float)' inline
| | |-ParmVarDecl 0x7fd2ff8f6700 <col:47, col:53> col:53 used __x 'float'
| | |-CompoundStmt 0x7fd2ff8f6f38 <col:58, line:206:1>
| | | `-ReturnStmt 0x7fd2ff8f6f20 <line:205:5, col:65>
| | |   `-ImplicitCastExpr 0x7fd2ff8f6f08 <col:12, col:65> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fd2ff8f6ee0 <col:12, col:65> '_Bool' '&&'
| | |       |-BinaryOperator 0x7fd2ff8f68f8 <col:12, col:19> '_Bool' '=='
| | |       | |-ImplicitCastExpr 0x7fd2ff8f68c8 <col:12> 'float' <LValueToRValue>
| | |       | | `-DeclRefExpr 0x7fd2ff8f6878 <col:12> 'float' lvalue ParmVar 0x7fd2ff8f6700 '__x' 'float'
| | |       | `-ImplicitCastExpr 0x7fd2ff8f68e0 <col:19> 'float' <LValueToRValue>
| | |       |   `-DeclRefExpr 0x7fd2ff8f68a0 <col:19> 'float' lvalue ParmVar 0x7fd2ff8f6700 '__x' 'float'
| | |       `-BinaryOperator 0x7fd2ff8f6eb8 <col:26, col:65> '_Bool' '!='
| | |         |-CallExpr 0x7fd2ff8f6c00 <col:26, col:45> 'float'
| | |         | |-ImplicitCastExpr 0x7fd2ff8f6be8 <col:26> 'float (*)(float) noexcept' <BuiltinFnToFnPtr>
| | |         | | `-DeclRefExpr 0x7fd2ff8f6b40 <col:26> '<builtin fn type>' Function 0x7fd2ff8f69e8 '__builtin_fabsf' 'float (float) noexcept'
| | |         | `-ImplicitCastExpr 0x7fd2ff8f6c30 <col:42> 'float' <LValueToRValue>
| | |         |   `-DeclRefExpr 0x7fd2ff8f6b68 <col:42> 'float' lvalue ParmVar 0x7fd2ff8f6700 '__x' 'float'
| | |         `-CallExpr 0x7fd2ff8f6e90 <col:50, col:65> 'float'
| | |           `-ImplicitCastExpr 0x7fd2ff8f6e78 <col:50> 'float (*)(void) noexcept' <BuiltinFnToFnPtr>
| | |             `-DeclRefExpr 0x7fd2ff8f6df0 <col:50> '<builtin fn type>' Function 0x7fd2ff8f6d00 '__builtin_inff' 'float (void) noexcept'
| | `-AlwaysInlineAttr 0x7fd2ff8f6830 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fd2ff8f7000 prev 0x7fd2ff866770 <line:300:36, /usr/include/math.h:209:1> line:207:28 used __inline_isfinited 'int (double)' inline
| | |-ParmVarDecl 0x7fd2ff8f6f70 <col:47, col:54> col:54 used __x 'double'
| | |-CompoundStmt 0x7fd2ff8f7838 <col:59, line:209:1>
| | | `-ReturnStmt 0x7fd2ff8f7820 <line:208:5, col:63>
| | |   `-ImplicitCastExpr 0x7fd2ff8f7808 <col:12, col:63> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fd2ff8f77e0 <col:12, col:63> '_Bool' '&&'
| | |       |-BinaryOperator 0x7fd2ff8f7168 <col:12, col:19> '_Bool' '=='
| | |       | |-ImplicitCastExpr 0x7fd2ff8f7138 <col:12> 'double' <LValueToRValue>
| | |       | | `-DeclRefExpr 0x7fd2ff8f70e8 <col:12> 'double' lvalue ParmVar 0x7fd2ff8f6f70 '__x' 'double'
| | |       | `-ImplicitCastExpr 0x7fd2ff8f7150 <col:19> 'double' <LValueToRValue>
| | |       |   `-DeclRefExpr 0x7fd2ff8f7110 <col:19> 'double' lvalue ParmVar 0x7fd2ff8f6f70 '__x' 'double'
| | |       `-BinaryOperator 0x7fd2ff8f77b8 <col:26, col:63> '_Bool' '!='
| | |         |-CallExpr 0x7fd2ff8f7470 <col:26, col:44> 'double'
| | |         | |-ImplicitCastExpr 0x7fd2ff8f7458 <col:26> 'double (*)(double) noexcept' <BuiltinFnToFnPtr>
| | |         | | `-DeclRefExpr 0x7fd2ff8f73b0 <col:26> '<builtin fn type>' Function 0x7fd2ff8f7258 '__builtin_fabs' 'double (double) noexcept'
| | |         | `-ImplicitCastExpr 0x7fd2ff8f74a0 <col:41> 'double' <LValueToRValue>
| | |         |   `-DeclRefExpr 0x7fd2ff8f73d8 <col:41> 'double' lvalue ParmVar 0x7fd2ff8f6f70 '__x' 'double'
| | |         `-CallExpr 0x7fd2ff8f7790 <col:49, col:63> 'double'
| | |           `-ImplicitCastExpr 0x7fd2ff8f7778 <col:49> 'double (*)(void) noexcept' <BuiltinFnToFnPtr>
| | |             `-DeclRefExpr 0x7fd2ff8f76f0 <col:49> '<builtin fn type>' Function 0x7fd2ff8f7600 '__builtin_inf' 'double (void) noexcept'
| | `-AlwaysInlineAttr 0x7fd2ff8f70a0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fd2ff8f7900 prev 0x7fd2ff866900 <line:300:36, /usr/include/math.h:212:1> line:210:28 used __inline_isfinitel 'int (long double)' inline
| | |-ParmVarDecl 0x7fd2ff8f7870 <col:47, col:59> col:59 used __x 'long double'
| | |-CompoundStmt 0x7fd2ff8f80a8 <col:64, line:212:1>
| | | `-ReturnStmt 0x7fd2ff8f8090 <line:211:5, col:65>
| | |   `-ImplicitCastExpr 0x7fd2ff8f8078 <col:12, col:65> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fd2ff8f8050 <col:12, col:65> '_Bool' '&&'
| | |       |-BinaryOperator 0x7fd2ff8f7a68 <col:12, col:19> '_Bool' '=='
| | |       | |-ImplicitCastExpr 0x7fd2ff8f7a38 <col:12> 'long double' <LValueToRValue>
| | |       | | `-DeclRefExpr 0x7fd2ff8f79e8 <col:12> 'long double' lvalue ParmVar 0x7fd2ff8f7870 '__x' 'long double'
| | |       | `-ImplicitCastExpr 0x7fd2ff8f7a50 <col:19> 'long double' <LValueToRValue>
| | |       |   `-DeclRefExpr 0x7fd2ff8f7a10 <col:19> 'long double' lvalue ParmVar 0x7fd2ff8f7870 '__x' 'long double'
| | |       `-BinaryOperator 0x7fd2ff8f8028 <col:26, col:65> '_Bool' '!='
| | |         |-CallExpr 0x7fd2ff8f7d70 <col:26, col:45> 'long double'
| | |         | |-ImplicitCastExpr 0x7fd2ff8f7d58 <col:26> 'long double (*)(long double) noexcept' <BuiltinFnToFnPtr>
| | |         | | `-DeclRefExpr 0x7fd2ff8f7cb0 <col:26> '<builtin fn type>' Function 0x7fd2ff8f7b58 '__builtin_fabsl' 'long double (long double) noexcept'
| | |         | `-ImplicitCastExpr 0x7fd2ff8f7da0 <col:42> 'long double' <LValueToRValue>
| | |         |   `-DeclRefExpr 0x7fd2ff8f7cd8 <col:42> 'long double' lvalue ParmVar 0x7fd2ff8f7870 '__x' 'long double'
| | |         `-CallExpr 0x7fd2ff8f8000 <col:50, col:65> 'long double'
| | |           `-ImplicitCastExpr 0x7fd2ff8f7fe8 <col:50> 'long double (*)(void) noexcept' <BuiltinFnToFnPtr>
| | |             `-DeclRefExpr 0x7fd2ff8f7f60 <col:50> '<builtin fn type>' Function 0x7fd2ff8f7e70 '__builtin_infl' 'long double (void) noexcept'
| | `-AlwaysInlineAttr 0x7fd2ff8f79a0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fd2ff8f8170 prev 0x7fd2ff866a90 <line:300:36, /usr/include/math.h:215:1> line:213:28 referenced __inline_isinff 'int (float)' inline
| | |-ParmVarDecl 0x7fd2ff8f80e0 <col:44, col:50> col:50 used __x 'float'
| | |-CompoundStmt 0x7fd2ff8f83c8 <col:55, line:215:1>
| | | `-ReturnStmt 0x7fd2ff8f83b0 <line:214:5, col:51>
| | |   `-ImplicitCastExpr 0x7fd2ff8f8398 <col:12, col:51> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fd2ff8f8370 <col:12, col:51> '_Bool' '=='
| | |       |-CallExpr 0x7fd2ff8f82c0 <col:12, col:31> 'float'
| | |       | |-ImplicitCastExpr 0x7fd2ff8f82a8 <col:12> 'float (*)(float) noexcept' <BuiltinFnToFnPtr>
| | |       | | `-DeclRefExpr 0x7fd2ff8f8258 <col:12> '<builtin fn type>' Function 0x7fd2ff8f69e8 '__builtin_fabsf' 'float (float) noexcept'
| | |       | `-ImplicitCastExpr 0x7fd2ff8f82f0 <col:28> 'float' <LValueToRValue>
| | |       |   `-DeclRefExpr 0x7fd2ff8f8280 <col:28> 'float' lvalue ParmVar 0x7fd2ff8f80e0 '__x' 'float'
| | |       `-CallExpr 0x7fd2ff8f8348 <col:36, col:51> 'float'
| | |         `-ImplicitCastExpr 0x7fd2ff8f8330 <col:36> 'float (*)(void) noexcept' <BuiltinFnToFnPtr>
| | |           `-DeclRefExpr 0x7fd2ff8f8308 <col:36> '<builtin fn type>' Function 0x7fd2ff8f6d00 '__builtin_inff' 'float (void) noexcept'
| | `-AlwaysInlineAttr 0x7fd2ff8f8210 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fd2ff8f8490 prev 0x7fd2ff8f5630 <line:300:36, /usr/include/math.h:218:1> line:216:28 referenced __inline_isinfd 'int (double)' inline
| | |-ParmVarDecl 0x7fd2ff8f8400 <col:44, col:51> col:51 used __x 'double'
| | |-CompoundStmt 0x7fd2ff8f8ae8 <col:56, line:218:1>
| | | `-ReturnStmt 0x7fd2ff8f8ad0 <line:217:5, col:49>
| | |   `-ImplicitCastExpr 0x7fd2ff8f8ab8 <col:12, col:49> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fd2ff8f8a90 <col:12, col:49> '_Bool' '=='
| | |       |-CallExpr 0x7fd2ff8f85e0 <col:12, col:30> 'double'
| | |       | |-ImplicitCastExpr 0x7fd2ff8f85c8 <col:12> 'double (*)(double) noexcept' <BuiltinFnToFnPtr>
| | |       | | `-DeclRefExpr 0x7fd2ff8f8578 <col:12> '<builtin fn type>' Function 0x7fd2ff8f7258 '__builtin_fabs' 'double (double) noexcept'
| | |       | `-ImplicitCastExpr 0x7fd2ff8f8a10 <col:27> 'double' <LValueToRValue>
| | |       |   `-DeclRefExpr 0x7fd2ff8f85a0 <col:27> 'double' lvalue ParmVar 0x7fd2ff8f8400 '__x' 'double'
| | |       `-CallExpr 0x7fd2ff8f8a68 <col:35, col:49> 'double'
| | |         `-ImplicitCastExpr 0x7fd2ff8f8a50 <col:35> 'double (*)(void) noexcept' <BuiltinFnToFnPtr>
| | |           `-DeclRefExpr 0x7fd2ff8f8a28 <col:35> '<builtin fn type>' Function 0x7fd2ff8f7600 '__builtin_inf' 'double (void) noexcept'
| | `-AlwaysInlineAttr 0x7fd2ff8f8530 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fd2ff8f8bb0 prev 0x7fd2ff8f57c0 <line:300:36, /usr/include/math.h:221:1> line:219:28 referenced __inline_isinfl 'int (long double)' inline
| | |-ParmVarDecl 0x7fd2ff8f8b20 <col:44, col:56> col:56 used __x 'long double'
| | |-CompoundStmt 0x7fd2ff8f8e08 <col:61, line:221:1>
| | | `-ReturnStmt 0x7fd2ff8f8df0 <line:220:5, col:51>
| | |   `-ImplicitCastExpr 0x7fd2ff8f8dd8 <col:12, col:51> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fd2ff8f8db0 <col:12, col:51> '_Bool' '=='
| | |       |-CallExpr 0x7fd2ff8f8d00 <col:12, col:31> 'long double'
| | |       | |-ImplicitCastExpr 0x7fd2ff8f8ce8 <col:12> 'long double (*)(long double) noexcept' <BuiltinFnToFnPtr>
| | |       | | `-DeclRefExpr 0x7fd2ff8f8c98 <col:12> '<builtin fn type>' Function 0x7fd2ff8f7b58 '__builtin_fabsl' 'long double (long double) noexcept'
| | |       | `-ImplicitCastExpr 0x7fd2ff8f8d30 <col:28> 'long double' <LValueToRValue>
| | |       |   `-DeclRefExpr 0x7fd2ff8f8cc0 <col:28> 'long double' lvalue ParmVar 0x7fd2ff8f8b20 '__x' 'long double'
| | |       `-CallExpr 0x7fd2ff8f8d88 <col:36, col:51> 'long double'
| | |         `-ImplicitCastExpr 0x7fd2ff8f8d70 <col:36> 'long double (*)(void) noexcept' <BuiltinFnToFnPtr>
| | |           `-DeclRefExpr 0x7fd2ff8f8d48 <col:36> '<builtin fn type>' Function 0x7fd2ff8f7e70 '__builtin_infl' 'long double (void) noexcept'
| | `-AlwaysInlineAttr 0x7fd2ff8f8c50 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fd2ff8f8ed0 prev 0x7fd2ff8f5950 <line:300:36, /usr/include/math.h:224:1> line:222:28 referenced __inline_isnanf 'int (float)' inline
| | |-ParmVarDecl 0x7fd2ff8f8e40 <col:44, col:50> col:50 used __x 'float'
| | |-CompoundStmt 0x7fd2ff8f9090 <col:55, line:224:1>
| | | `-ReturnStmt 0x7fd2ff8f9078 <line:223:5, col:19>
| | |   `-ImplicitCastExpr 0x7fd2ff8f9060 <col:12, col:19> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fd2ff8f9038 <col:12, col:19> '_Bool' '!='
| | |       |-ImplicitCastExpr 0x7fd2ff8f9008 <col:12> 'float' <LValueToRValue>
| | |       | `-DeclRefExpr 0x7fd2ff8f8fb8 <col:12> 'float' lvalue ParmVar 0x7fd2ff8f8e40 '__x' 'float'
| | |       `-ImplicitCastExpr 0x7fd2ff8f9020 <col:19> 'float' <LValueToRValue>
| | |         `-DeclRefExpr 0x7fd2ff8f8fe0 <col:19> 'float' lvalue ParmVar 0x7fd2ff8f8e40 '__x' 'float'
| | `-AlwaysInlineAttr 0x7fd2ff8f8f70 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fd2ff8f9158 prev 0x7fd2ff8f5ae0 <line:300:36, /usr/include/math.h:227:1> line:225:28 referenced __inline_isnand 'int (double)' inline
| | |-ParmVarDecl 0x7fd2ff8f90c8 <col:44, col:51> col:51 used __x 'double'
| | |-CompoundStmt 0x7fd2ff8f9318 <col:56, line:227:1>
| | | `-ReturnStmt 0x7fd2ff8f9300 <line:226:5, col:19>
| | |   `-ImplicitCastExpr 0x7fd2ff8f92e8 <col:12, col:19> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fd2ff8f92c0 <col:12, col:19> '_Bool' '!='
| | |       |-ImplicitCastExpr 0x7fd2ff8f9290 <col:12> 'double' <LValueToRValue>
| | |       | `-DeclRefExpr 0x7fd2ff8f9240 <col:12> 'double' lvalue ParmVar 0x7fd2ff8f90c8 '__x' 'double'
| | |       `-ImplicitCastExpr 0x7fd2ff8f92a8 <col:19> 'double' <LValueToRValue>
| | |         `-DeclRefExpr 0x7fd2ff8f9268 <col:19> 'double' lvalue ParmVar 0x7fd2ff8f90c8 '__x' 'double'
| | `-AlwaysInlineAttr 0x7fd2ff8f91f8 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fd2ff8f93e0 prev 0x7fd2ff8f5c70 <line:300:36, /usr/include/math.h:230:1> line:228:28 referenced __inline_isnanl 'int (long double)' inline
| | |-ParmVarDecl 0x7fd2ff8f9350 <col:44, col:56> col:56 used __x 'long double'
| | |-CompoundStmt 0x7fd2ff8f95a0 <col:61, line:230:1>
| | | `-ReturnStmt 0x7fd2ff8f9588 <line:229:5, col:19>
| | |   `-ImplicitCastExpr 0x7fd2ff8f9570 <col:12, col:19> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fd2ff8f9548 <col:12, col:19> '_Bool' '!='
| | |       |-ImplicitCastExpr 0x7fd2ff8f9518 <col:12> 'long double' <LValueToRValue>
| | |       | `-DeclRefExpr 0x7fd2ff8f94c8 <col:12> 'long double' lvalue ParmVar 0x7fd2ff8f9350 '__x' 'long double'
| | |       `-ImplicitCastExpr 0x7fd2ff8f9530 <col:19> 'long double' <LValueToRValue>
| | |         `-DeclRefExpr 0x7fd2ff8f94f0 <col:19> 'long double' lvalue ParmVar 0x7fd2ff8f9350 '__x' 'long double'
| | `-AlwaysInlineAttr 0x7fd2ff8f9480 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fd2ff8f9668 prev 0x7fd2ff8f62b0 <line:300:36, /usr/include/math.h:235:1> line:231:28 referenced __inline_signbitf 'int (float)' inline
| | |-ParmVarDecl 0x7fd2ff8f95d8 <col:46, col:52> col:52 used __x 'float'
| | |-CompoundStmt 0x7fd2ff8fb2d8 <col:57, line:235:1>
| | | |-DeclStmt 0x7fd2ff8fafb0 <line:232:5, col:47>
| | | | |-CXXRecordDecl 0x7fd2ff8f9750 <col:5, col:42> col:5 union definition
| | | | | |-FieldDecl 0x7fd2ff8f9890 <col:13, col:19> col:19 referenced __f 'float'
| | | | | |-FieldDecl 0x7fd2ff8f98f0 <col:24, col:37> col:37 referenced __u 'unsigned int'
| | | | | |-CXXConstructorDecl 0x7fd2ff8faa80 <col:5> col:5 implicit used  'void (void) noexcept' inline default trivial
| | | | | | `-CompoundStmt 0x7fd2ff8faf50 <col:5>
| | | | | |-CXXConstructorDecl 0x7fd2ff8fabc8 <col:5> col:5 implicit constexpr  'void (const union (anonymous at /usr/include/math.h:232:5) &)' inline default trivial noexcept-unevaluated 0x7fd2ff8fabc8
| | | | | | `-ParmVarDecl 0x7fd2ff8facf0 <col:5> col:5 'const union (anonymous at /usr/include/math.h:232:5) &'
| | | | | `-CXXConstructorDecl 0x7fd2ff8fad88 <col:5> col:5 implicit constexpr  'void (union (anonymous at /usr/include/math.h:232:5) &&)' inline default trivial noexcept-unevaluated 0x7fd2ff8fad88
| | | | |   `-ParmVarDecl 0x7fd2ff8faeb0 <col:5> col:5 'union (anonymous at /usr/include/math.h:232:5) &&'
| | | | `-VarDecl 0x7fd2ff8faa00 <col:5, col:44> col:44 used __u 'union (anonymous union at /usr/include/math.h:232:5)':'union (anonymous at /usr/include/math.h:232:5)' callinit
| | | |   `-CXXConstructExpr 0x7fd2ff8faf68 <col:44> 'union (anonymous union at /usr/include/math.h:232:5)':'union (anonymous at /usr/include/math.h:232:5)' 'void (void) noexcept'
| | | |-BinaryOperator 0x7fd2ff8fb068 <line:233:5, col:15> 'float' lvalue '='
| | | | |-MemberExpr 0x7fd2ff8faff0 <col:5, col:9> 'float' lvalue .__f 0x7fd2ff8f9890
| | | | | `-DeclRefExpr 0x7fd2ff8fafc8 <col:5> 'union (anonymous union at /usr/include/math.h:232:5)':'union (anonymous at /usr/include/math.h:232:5)' lvalue Var 0x7fd2ff8faa00 '__u' 'union (anonymous union at /usr/include/math.h:232:5)':'union (anonymous at /usr/include/math.h:232:5)'
| | | | `-ImplicitCastExpr 0x7fd2ff8fb050 <col:15> 'float' <LValueToRValue>
| | | |   `-DeclRefExpr 0x7fd2ff8fb028 <col:15> 'float' lvalue ParmVar 0x7fd2ff8f95d8 '__x' 'float'
| | | `-ReturnStmt 0x7fd2ff8fb2c0 <line:234:5, col:31>
| | |   `-CStyleCastExpr 0x7fd2ff8fb298 <col:12, col:31> 'int' <NoOp>
| | |     `-ImplicitCastExpr 0x7fd2ff8fb280 <col:17, col:31> 'int' <IntegralCast>
| | |       `-ParenExpr 0x7fd2ff8fb260 <col:17, col:31> 'unsigned int'
| | |         `-BinaryOperator 0x7fd2ff8fb1f0 <col:18, col:29> 'unsigned int' '>>'
| | |           |-ImplicitCastExpr 0x7fd2ff8fb1d8 <col:18, col:22> 'unsigned int' <LValueToRValue>
| | |           | `-MemberExpr 0x7fd2ff8fb180 <col:18, col:22> 'unsigned int' lvalue .__u 0x7fd2ff8f98f0
| | |           |   `-DeclRefExpr 0x7fd2ff8fb158 <col:18> 'union (anonymous union at /usr/include/math.h:232:5)':'union (anonymous at /usr/include/math.h:232:5)' lvalue Var 0x7fd2ff8faa00 '__u' 'union (anonymous union at /usr/include/math.h:232:5)':'union (anonymous at /usr/include/math.h:232:5)'
| | |           `-IntegerLiteral 0x7fd2ff8fb1b8 <col:29> 'int' 31
| | `-AlwaysInlineAttr 0x7fd2ff8f9708 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fd2ff8fb3b0 prev 0x7fd2ff8f6440 <line:300:36, /usr/include/math.h:240:1> line:236:28 referenced __inline_signbitd 'int (double)' inline
| | |-ParmVarDecl 0x7fd2ff8fb320 <col:46, col:53> col:53 used __x 'double'
| | |-CompoundStmt 0x7fd2ff8fd9b0 <col:58, line:240:1>
| | | |-DeclStmt 0x7fd2ff8fd688 <line:237:5, col:54>
| | | | |-CXXRecordDecl 0x7fd2ff8fb498 <col:5, col:49> col:5 union definition
| | | | | |-FieldDecl 0x7fd2ff8fb5d0 <col:13, col:20> col:20 referenced __f 'double'
| | | | | |-FieldDecl 0x7fd2ff8fb630 <col:25, col:44> col:44 referenced __u 'unsigned long long'
| | | | | |-CXXConstructorDecl 0x7fd2ff8fb770 <col:5> col:5 implicit used  'void (void) noexcept' inline default trivial
| | | | | | `-CompoundStmt 0x7fd2ff8fd628 <col:5>
| | | | | |-CXXConstructorDecl 0x7fd2ff8fb888 <col:5> col:5 implicit constexpr  'void (const union (anonymous at /usr/include/math.h:237:5) &)' inline default trivial noexcept-unevaluated 0x7fd2ff8fb888
| | | | | | `-ParmVarDecl 0x7fd2ff8fd400 <col:5> col:5 'const union (anonymous at /usr/include/math.h:237:5) &'
| | | | | `-CXXConstructorDecl 0x7fd2ff8fd498 <col:5> col:5 implicit constexpr  'void (union (anonymous at /usr/include/math.h:237:5) &&)' inline default trivial noexcept-unevaluated 0x7fd2ff8fd498
| | | | |   `-ParmVarDecl 0x7fd2ff8fd5c0 <col:5> col:5 'union (anonymous at /usr/include/math.h:237:5) &&'
| | | | `-VarDecl 0x7fd2ff8fb6f0 <col:5, col:51> col:51 used __u 'union (anonymous union at /usr/include/math.h:237:5)':'union (anonymous at /usr/include/math.h:237:5)' callinit
| | | |   `-CXXConstructExpr 0x7fd2ff8fd640 <col:51> 'union (anonymous union at /usr/include/math.h:237:5)':'union (anonymous at /usr/include/math.h:237:5)' 'void (void) noexcept'
| | | |-BinaryOperator 0x7fd2ff8fd740 <line:238:5, col:15> 'double' lvalue '='
| | | | |-MemberExpr 0x7fd2ff8fd6c8 <col:5, col:9> 'double' lvalue .__f 0x7fd2ff8fb5d0
| | | | | `-DeclRefExpr 0x7fd2ff8fd6a0 <col:5> 'union (anonymous union at /usr/include/math.h:237:5)':'union (anonymous at /usr/include/math.h:237:5)' lvalue Var 0x7fd2ff8fb6f0 '__u' 'union (anonymous union at /usr/include/math.h:237:5)':'union (anonymous at /usr/include/math.h:237:5)'
| | | | `-ImplicitCastExpr 0x7fd2ff8fd728 <col:15> 'double' <LValueToRValue>
| | | |   `-DeclRefExpr 0x7fd2ff8fd700 <col:15> 'double' lvalue ParmVar 0x7fd2ff8fb320 '__x' 'double'
| | | `-ReturnStmt 0x7fd2ff8fd998 <line:239:5, col:31>
| | |   `-CStyleCastExpr 0x7fd2ff8fd970 <col:12, col:31> 'int' <NoOp>
| | |     `-ImplicitCastExpr 0x7fd2ff8fd958 <col:17, col:31> 'int' <IntegralCast>
| | |       `-ParenExpr 0x7fd2ff8fd938 <col:17, col:31> 'unsigned long long'
| | |         `-BinaryOperator 0x7fd2ff8fd8c8 <col:18, col:29> 'unsigned long long' '>>'
| | |           |-ImplicitCastExpr 0x7fd2ff8fd8b0 <col:18, col:22> 'unsigned long long' <LValueToRValue>
| | |           | `-MemberExpr 0x7fd2ff8fd858 <col:18, col:22> 'unsigned long long' lvalue .__u 0x7fd2ff8fb630
| | |           |   `-DeclRefExpr 0x7fd2ff8fd830 <col:18> 'union (anonymous union at /usr/include/math.h:237:5)':'union (anonymous at /usr/include/math.h:237:5)' lvalue Var 0x7fd2ff8fb6f0 '__u' 'union (anonymous union at /usr/include/math.h:237:5)':'union (anonymous at /usr/include/math.h:237:5)'
| | |           `-IntegerLiteral 0x7fd2ff8fd890 <col:29> 'int' 63
| | `-AlwaysInlineAttr 0x7fd2ff8fb450 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fd2ff8fda88 prev 0x7fd2ff8f6600 <line:300:36, /usr/include/math.h:249:1> line:242:28 referenced __inline_signbitl 'int (long double)' inline
| | |-ParmVarDecl 0x7fd2ff8fd9f8 <col:46, col:58> col:58 used __x 'long double'
| | |-CompoundStmt 0x7fd2ff8ff760 <col:63, line:249:1>
| | | |-DeclStmt 0x7fd2ff8ff338 <line:243:5, line:246:10>
| | | | |-CXXRecordDecl 0x7fd2ff8fdb70 <line:243:5, line:246:5> line:243:5 union definition
| | | | | |-FieldDecl 0x7fd2ff8fdcb0 <line:244:9, col:21> col:21 referenced __ld 'long double'
| | | | | |-CXXRecordDecl 0x7fd2ff8fdcf8 <line:245:9, col:64> col:9 struct definition
| | | | | | |-FieldDecl 0x7fd2ff8fde30 <col:17, col:36> col:36 __m 'unsigned long long'
| | | | | | |-FieldDecl 0x7fd2ff8fde90 <col:41, col:56> col:56 referenced __sexp 'unsigned short'
| | | | | | |-CXXConstructorDecl 0x7fd2ff8fe1a8 <col:9> col:9 implicit  'void (void) noexcept' inline default trivial
| | | | | | |-CXXDestructorDecl 0x7fd2ff8fe288 <col:9> col:9 implicit ~ 'void (void)' inline default trivial noexcept-unevaluated 0x7fd2ff8fe288
| | | | | | |-CXXConstructorDecl 0x7fd2ff8fedc8 <col:9> col:9 implicit constexpr  'void (const struct (anonymous at /usr/include/math.h:245:9) &)' inline default trivial noexcept-unevaluated 0x7fd2ff8fedc8
| | | | | | | `-ParmVarDecl 0x7fd2ff8feef0 <col:9> col:9 'const struct (anonymous at /usr/include/math.h:245:9) &'
| | | | | | `-CXXConstructorDecl 0x7fd2ff8fef88 <col:9> col:9 implicit constexpr  'void (struct (anonymous at /usr/include/math.h:245:9) &&)' inline default trivial noexcept-unevaluated 0x7fd2ff8fef88
| | | | | |   `-ParmVarDecl 0x7fd2ff8ff0b0 <col:9> col:9 'struct (anonymous at /usr/include/math.h:245:9) &&'
| | | | | |-FieldDecl 0x7fd2ff8fdf50 <col:9, col:66> col:66 referenced __p 'struct (anonymous struct at /usr/include/math.h:245:9)':'struct (anonymous at /usr/include/math.h:245:9)'
| | | | | |-CXXConstructorDecl 0x7fd2ff8fe0a0 <line:243:5> col:5 implicit used  'void (void) noexcept' inline default trivial
| | | | | | `-CompoundStmt 0x7fd2ff8ff2d8 <col:5>
| | | | | |-CXXConstructorDecl 0x7fd2ff8fec00 <col:5> col:5 implicit constexpr  'void (const union (anonymous at /usr/include/math.h:243:5) &)' inline default trivial noexcept-unevaluated 0x7fd2ff8fec00
| | | | | | `-ParmVarDecl 0x7fd2ff8fed30 <col:5> col:5 'const union (anonymous at /usr/include/math.h:243:5) &'
| | | | | `-CXXConstructorDecl 0x7fd2ff8ff148 <col:5> col:5 implicit constexpr  'void (union (anonymous at /usr/include/math.h:243:5) &&)' inline default trivial noexcept-unevaluated 0x7fd2ff8ff148
| | | | |   `-ParmVarDecl 0x7fd2ff8ff270 <col:5> col:5 'union (anonymous at /usr/include/math.h:243:5) &&'
| | | | `-VarDecl 0x7fd2ff8fe020 <col:5, line:246:7> col:7 used __u 'union (anonymous union at /usr/include/math.h:243:5)':'union (anonymous at /usr/include/math.h:243:5)' callinit
| | | |   `-CXXConstructExpr 0x7fd2ff8ff2f0 <col:7> 'union (anonymous union at /usr/include/math.h:243:5)':'union (anonymous at /usr/include/math.h:243:5)' 'void (void) noexcept'
| | | |-BinaryOperator 0x7fd2ff8ff3f0 <line:247:5, col:16> 'long double' lvalue '='
| | | | |-MemberExpr 0x7fd2ff8ff378 <col:5, col:9> 'long double' lvalue .__ld 0x7fd2ff8fdcb0
| | | | | `-DeclRefExpr 0x7fd2ff8ff350 <col:5> 'union (anonymous union at /usr/include/math.h:243:5)':'union (anonymous at /usr/include/math.h:243:5)' lvalue Var 0x7fd2ff8fe020 '__u' 'union (anonymous union at /usr/include/math.h:243:5)':'union (anonymous at /usr/include/math.h:243:5)'
| | | | `-ImplicitCastExpr 0x7fd2ff8ff3d8 <col:16> 'long double' <LValueToRValue>
| | | |   `-DeclRefExpr 0x7fd2ff8ff3b0 <col:16> 'long double' lvalue ParmVar 0x7fd2ff8fd9f8 '__x' 'long double'
| | | `-ReturnStmt 0x7fd2ff8ff748 <line:248:5, col:38>
| | |   `-CStyleCastExpr 0x7fd2ff8ff720 <col:12, col:38> 'int' <NoOp>
| | |     `-ParenExpr 0x7fd2ff8ff700 <col:17, col:38> 'int'
| | |       `-BinaryOperator 0x7fd2ff8ff690 <col:18, col:36> 'int' '>>'
| | |         |-ImplicitCastExpr 0x7fd2ff8ff678 <col:18, col:26> 'int' <IntegralCast>
| | |         | `-ImplicitCastExpr 0x7fd2ff8ff660 <col:18, col:26> 'unsigned short' <LValueToRValue>
| | |         |   `-MemberExpr 0x7fd2ff8ff608 <col:18, col:26> 'unsigned short' lvalue .__sexp 0x7fd2ff8fde90
| | |         |     `-MemberExpr 0x7fd2ff8ff5d0 <col:18, col:22> 'struct (anonymous struct at /usr/include/math.h:245:9)':'struct (anonymous at /usr/include/math.h:245:9)' lvalue .__p 0x7fd2ff8fdf50
| | |         |       `-DeclRefExpr 0x7fd2ff8ff5a8 <col:18> 'union (anonymous union at /usr/include/math.h:243:5)':'union (anonymous at /usr/include/math.h:243:5)' lvalue Var 0x7fd2ff8fe020 '__u' 'union (anonymous union at /usr/include/math.h:243:5)':'union (anonymous at /usr/include/math.h:243:5)'
| | |         `-IntegerLiteral 0x7fd2ff8ff640 <col:36> 'int' 15
| | `-AlwaysInlineAttr 0x7fd2ff8fdb28 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fd2ff8ff838 prev 0x7fd2ff8f5e00 <line:300:36, /usr/include/math.h:259:1> line:257:28 referenced __inline_isnormalf 'int (float)' inline
| | |-ParmVarDecl 0x7fd2ff8ff7a8 <col:47, col:53> col:53 used __x 'float'
| | |-CompoundStmt 0x7fd2ff8ffbc0 <col:58, line:259:1>
| | | `-ReturnStmt 0x7fd2ff8ffba8 <line:258:5, <built-in>:145:21>
| | |   `-ImplicitCastExpr 0x7fd2ff8ffb90 </usr/include/math.h:258:12, <built-in>:145:21> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fd2ff8ffb68 </usr/include/math.h:258:12, <built-in>:145:21> '_Bool' '&&'
| | |       |-ImplicitCastExpr 0x7fd2ff8ffb50 </usr/include/math.h:258:12, col:34> '_Bool' <IntegralToBoolean>
| | |       | `-CallExpr 0x7fd2ff8ffa10 <col:12, col:34> 'int'
| | |       |   |-ImplicitCastExpr 0x7fd2ff8ff9f8 <col:12> 'int (*)(float)' <FunctionToPointerDecay>
| | |       |   | `-DeclRefExpr 0x7fd2ff8ff9a0 <col:12> 'int (float)' lvalue Function 0x7fd2ff8f6790 '__inline_isfinitef' 'int (float)'
| | |       |   `-ImplicitCastExpr 0x7fd2ff8ffa40 <col:31> 'float' <LValueToRValue>
| | |       |     `-DeclRefExpr 0x7fd2ff8ff978 <col:31> 'float' lvalue ParmVar 0x7fd2ff8ff7a8 '__x' 'float'
| | |       `-BinaryOperator 0x7fd2ff8ffb28 <col:39, <built-in>:145:21> '_Bool' '>='
| | |         |-CallExpr 0x7fd2ff8ffac0 </usr/include/math.h:258:39, col:58> 'float'
| | |         | |-ImplicitCastExpr 0x7fd2ff8ffaa8 <col:39> 'float (*)(float) noexcept' <BuiltinFnToFnPtr>
| | |         | | `-DeclRefExpr 0x7fd2ff8ffa58 <col:39> '<builtin fn type>' Function 0x7fd2ff8f69e8 '__builtin_fabsf' 'float (float) noexcept'
| | |         | `-ImplicitCastExpr 0x7fd2ff8ffaf0 <col:55> 'float' <LValueToRValue>
| | |         |   `-DeclRefExpr 0x7fd2ff8ffa80 <col:55> 'float' lvalue ParmVar 0x7fd2ff8ff7a8 '__x' 'float'
| | |         `-FloatingLiteral 0x7fd2ff8ffb08 <<built-in>:145:21> 'float' 1.175494e-38
| | `-AlwaysInlineAttr 0x7fd2ff8ff8d8 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fd2ff900090 prev 0x7fd2ff8f5f90 <line:300:36, /usr/include/math.h:262:1> line:260:28 referenced __inline_isnormald 'int (double)' inline
| | |-ParmVarDecl 0x7fd2ff900000 <col:47, col:54> col:54 used __x 'double'
| | |-CompoundStmt 0x7fd2ff900410 <col:59, line:262:1>
| | | `-ReturnStmt 0x7fd2ff9003f8 <line:261:5, <built-in>:159:21>
| | |   `-ImplicitCastExpr 0x7fd2ff9003e0 </usr/include/math.h:261:12, <built-in>:159:21> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fd2ff9003b8 </usr/include/math.h:261:12, <built-in>:159:21> '_Bool' '&&'
| | |       |-ImplicitCastExpr 0x7fd2ff9003a0 </usr/include/math.h:261:12, col:34> '_Bool' <IntegralToBoolean>
| | |       | `-CallExpr 0x7fd2ff900260 <col:12, col:34> 'int'
| | |       |   |-ImplicitCastExpr 0x7fd2ff900248 <col:12> 'int (*)(double)' <FunctionToPointerDecay>
| | |       |   | `-DeclRefExpr 0x7fd2ff9001f8 <col:12> 'int (double)' lvalue Function 0x7fd2ff8f7000 '__inline_isfinited' 'int (double)'
| | |       |   `-ImplicitCastExpr 0x7fd2ff900290 <col:31> 'double' <LValueToRValue>
| | |       |     `-DeclRefExpr 0x7fd2ff9001d0 <col:31> 'double' lvalue ParmVar 0x7fd2ff900000 '__x' 'double'
| | |       `-BinaryOperator 0x7fd2ff900378 <col:39, <built-in>:159:21> '_Bool' '>='
| | |         |-CallExpr 0x7fd2ff900310 </usr/include/math.h:261:39, col:57> 'double'
| | |         | |-ImplicitCastExpr 0x7fd2ff9002f8 <col:39> 'double (*)(double) noexcept' <BuiltinFnToFnPtr>
| | |         | | `-DeclRefExpr 0x7fd2ff9002a8 <col:39> '<builtin fn type>' Function 0x7fd2ff8f7258 '__builtin_fabs' 'double (double) noexcept'
| | |         | `-ImplicitCastExpr 0x7fd2ff900340 <col:54> 'double' <LValueToRValue>
| | |         |   `-DeclRefExpr 0x7fd2ff9002d0 <col:54> 'double' lvalue ParmVar 0x7fd2ff900000 '__x' 'double'
| | |         `-FloatingLiteral 0x7fd2ff900358 <<built-in>:159:21> 'double' 2.225074e-308
| | `-AlwaysInlineAttr 0x7fd2ff900130 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fd2ff9004d8 prev 0x7fd2ff8f6120 <line:300:36, /usr/include/math.h:265:1> line:263:28 referenced __inline_isnormall 'int (long double)' inline
| | |-ParmVarDecl 0x7fd2ff900448 <col:47, col:59> col:59 used __x 'long double'
| | |-CompoundStmt 0x7fd2ff900870 <col:64, line:265:1>
| | | `-ReturnStmt 0x7fd2ff900858 <line:264:5, <built-in>:173:22>
| | |   `-ImplicitCastExpr 0x7fd2ff900840 </usr/include/math.h:264:12, <built-in>:173:22> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fd2ff900818 </usr/include/math.h:264:12, <built-in>:173:22> '_Bool' '&&'
| | |       |-ImplicitCastExpr 0x7fd2ff900800 </usr/include/math.h:264:12, col:34> '_Bool' <IntegralToBoolean>
| | |       | `-CallExpr 0x7fd2ff9006b0 <col:12, col:34> 'int'
| | |       |   |-ImplicitCastExpr 0x7fd2ff900698 <col:12> 'int (*)(long double)' <FunctionToPointerDecay>
| | |       |   | `-DeclRefExpr 0x7fd2ff900640 <col:12> 'int (long double)' lvalue Function 0x7fd2ff8f7900 '__inline_isfinitel' 'int (long double)'
| | |       |   `-ImplicitCastExpr 0x7fd2ff9006e0 <col:31> 'long double' <LValueToRValue>
| | |       |     `-DeclRefExpr 0x7fd2ff900618 <col:31> 'long double' lvalue ParmVar 0x7fd2ff900448 '__x' 'long double'
| | |       `-BinaryOperator 0x7fd2ff9007d8 <col:39, <built-in>:173:22> '_Bool' '>='
| | |         |-CallExpr 0x7fd2ff900760 </usr/include/math.h:264:39, col:58> 'long double'
| | |         | |-ImplicitCastExpr 0x7fd2ff900748 <col:39> 'long double (*)(long double) noexcept' <BuiltinFnToFnPtr>
| | |         | | `-DeclRefExpr 0x7fd2ff9006f8 <col:39> '<builtin fn type>' Function 0x7fd2ff8f7b58 '__builtin_fabsl' 'long double (long double) noexcept'
| | |         | `-ImplicitCastExpr 0x7fd2ff900790 <col:55> 'long double' <LValueToRValue>
| | |         |   `-DeclRefExpr 0x7fd2ff900720 <col:55> 'long double' lvalue ParmVar 0x7fd2ff900448 '__x' 'long double'
| | |         `-FloatingLiteral 0x7fd2ff9007a8 <<built-in>:173:22> 'long double' 0.000000e+00
| | `-AlwaysInlineAttr 0x7fd2ff900578 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fd2ff900938 </usr/include/math.h:322:1, col:25> col:14 used acosf 'float (float)' extern
| | |-ParmVarDecl 0x7fd2ff9008a8 <col:20> col:25 'float'
| | |-ConstAttr 0x7fd2ff9009d8 <col:14> Implicit
| | `-NoThrowAttr 0x7fd2ff900a20 <col:14> Implicit
| |-FunctionDecl 0x7fd2ff900ad8 <line:323:1, col:26> col:15 referenced acos 'double (double)' extern
| | |-ParmVarDecl 0x7fd2ff900a48 <col:20> col:26 'double'
| | |-ConstAttr 0x7fd2ff900b78 <col:15> Implicit
| | `-NoThrowAttr 0x7fd2ff900bc0 <col:15> Implicit
| |-FunctionDecl 0x7fd2ff900c78 <line:324:1, col:37> col:20 used acosl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fd2ff900be8 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fd2ff900d18 <col:20> Implicit
| | `-NoThrowAttr 0x7fd2ff900d60 <col:20> Implicit
| |-FunctionDecl 0x7fd2ff900e18 <line:326:1, col:25> col:14 used asinf 'float (float)' extern
| | |-ParmVarDecl 0x7fd2ff900d88 <col:20> col:25 'float'
| | |-ConstAttr 0x7fd2ff900eb8 <col:14> Implicit
| | `-NoThrowAttr 0x7fd2ff900f00 <col:14> Implicit
| |-FunctionDecl 0x7fd2ff901000 <line:327:1, col:26> col:15 referenced asin 'double (double)' extern
| | |-ParmVarDecl 0x7fd2ff900f28 <col:20> col:26 'double'
| | |-ConstAttr 0x7fd2ff9010a0 <col:15> Implicit
| | `-NoThrowAttr 0x7fd2ff9010e8 <col:15> Implicit
| |-FunctionDecl 0x7fd2ff9011a0 <line:328:1, col:37> col:20 used asinl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fd2ff901110 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fd2ff901240 <col:20> Implicit
| | `-NoThrowAttr 0x7fd2ff901288 <col:20> Implicit
| |-FunctionDecl 0x7fd2ff901340 <line:330:1, col:25> col:14 used atanf 'float (float)' extern
| | |-ParmVarDecl 0x7fd2ff9012b0 <col:20> col:25 'float'
| | |-ConstAttr 0x7fd2ff9013e0 <col:14> Implicit
| | `-NoThrowAttr 0x7fd2ff901428 <col:14> Implicit
| |-FunctionDecl 0x7fd2ff9014e0 <line:331:1, col:26> col:15 referenced atan 'double (double)' extern
| | |-ParmVarDecl 0x7fd2ff901450 <col:20> col:26 'double'
| | |-ConstAttr 0x7fd2ff901580 <col:15> Implicit
| | `-NoThrowAttr 0x7fd2ff9015c8 <col:15> Implicit
| |-FunctionDecl 0x7fd2ff901680 <line:332:1, col:37> col:20 used atanl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fd2ff9015f0 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fd2ff901720 <col:20> Implicit
| | `-NoThrowAttr 0x7fd2ff901768 <col:20> Implicit
| |-FunctionDecl 0x7fd2ff9018e8 <line:334:1, col:33> col:14 used atan2f 'float (float, float)' extern
| | |-ParmVarDecl 0x7fd2ff901790 <col:21> col:26 'float'
| | |-ParmVarDecl 0x7fd2ff901808 <col:28> col:33 'float'
| | |-ConstAttr 0x7fd2ff9019d0 <col:14> Implicit
| | `-NoThrowAttr 0x7fd2ff901a18 <col:14> Implicit
| |-FunctionDecl 0x7fd2ff901b98 <line:335:1, col:35> col:15 atan2 'double (double, double)' extern
| | |-ParmVarDecl 0x7fd2ff901a40 <col:21> col:27 'double'
| | |-ParmVarDecl 0x7fd2ff901ab8 <col:29> col:35 'double'
| | |-ConstAttr 0x7fd2ff901c80 <col:15> Implicit
| | `-NoThrowAttr 0x7fd2ff901cc8 <col:15> Implicit
| |-FunctionDecl 0x7fd2ff901e48 <line:336:1, col:51> col:20 used atan2l 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fd2ff901cf0 <col:27, col:32> col:38 'long double'
| | |-ParmVarDecl 0x7fd2ff901d68 <col:40, col:45> col:51 'long double'
| | |-ConstAttr 0x7fd2ff901f30 <col:20> Implicit
| | `-NoThrowAttr 0x7fd2ff901f78 <col:20> Implicit
| |-FunctionDecl 0x7fd2ff902830 <line:338:1, col:24> col:14 used cosf 'float (float)' extern
| | |-ParmVarDecl 0x7fd2ff901fa0 <col:19> col:24 'float'
| | |-ConstAttr 0x7fd2ff9028d0 <col:14> Implicit
| | `-NoThrowAttr 0x7fd2ff902918 <col:14> Implicit
| |-FunctionDecl 0x7fd2ff9029d0 <line:339:1, col:25> col:15 referenced cos 'double (double)' extern
| | |-ParmVarDecl 0x7fd2ff902940 <col:19> col:25 'double'
| | |-ConstAttr 0x7fd2ff902a70 <col:15> Implicit
| | `-NoThrowAttr 0x7fd2ff902ab8 <col:15> Implicit
| |-FunctionDecl 0x7fd2ff902b70 <line:340:1, col:36> col:20 used cosl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fd2ff902ae0 <col:25, col:30> col:36 'long double'
| | |-ConstAttr 0x7fd2ff902c10 <col:20> Implicit
| | `-NoThrowAttr 0x7fd2ff902c58 <col:20> Implicit
| |-FunctionDecl 0x7fd2ff902d10 <line:342:1, col:24> col:14 used sinf 'float (float)' extern
| | |-ParmVarDecl 0x7fd2ff902c80 <col:19> col:24 'float'
| | |-ConstAttr 0x7fd2ff902db0 <col:14> Implicit
| | `-NoThrowAttr 0x7fd2ff902df8 <col:14> Implicit
| |-FunctionDecl 0x7fd2ff902eb0 <line:343:1, col:25> col:15 referenced sin 'double (double)' extern
| | |-ParmVarDecl 0x7fd2ff902e20 <col:19> col:25 'double'
| | |-ConstAttr 0x7fd2ff902f50 <col:15> Implicit
| | `-NoThrowAttr 0x7fd2ff902f98 <col:15> Implicit
| |-FunctionDecl 0x7fd2ff903050 <line:344:1, col:36> col:20 used sinl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fd2ff902fc0 <col:25, col:30> col:36 'long double'
| | |-ConstAttr 0x7fd2ff9030f0 <col:20> Implicit
| | `-NoThrowAttr 0x7fd2ff903138 <col:20> Implicit
| |-FunctionDecl 0x7fd2ff9031f0 <line:346:1, col:24> col:14 used tanf 'float (float)' extern
| | |-ParmVarDecl 0x7fd2ff903160 <col:19> col:24 'float'
| | |-ConstAttr 0x7fd2ff903290 <col:14> Implicit
| | `-NoThrowAttr 0x7fd2ff9032d8 <col:14> Implicit
| |-FunctionDecl 0x7fd2ff903390 <line:347:1, col:25> col:15 referenced tan 'double (double)' extern
| | |-ParmVarDecl 0x7fd2ff903300 <col:19> col:25 'double'
| | |-ConstAttr 0x7fd2ff903430 <col:15> Implicit
| | `-NoThrowAttr 0x7fd2ff903478 <col:15> Implicit
| |-FunctionDecl 0x7fd2ff903530 <line:348:1, col:36> col:20 used tanl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fd2ff9034a0 <col:25, col:30> col:36 'long double'
| | |-ConstAttr 0x7fd2ff9035d0 <col:20> Implicit
| | `-NoThrowAttr 0x7fd2ff903618 <col:20> Implicit
| |-FunctionDecl 0x7fd2ff9036d0 <line:350:1, col:26> col:14 used acoshf 'float (float)' extern
| | |-ParmVarDecl 0x7fd2ff903640 <col:21> col:26 'float'
| | |-ConstAttr 0x7fd2ff903770 <col:14> Implicit
| | `-NoThrowAttr 0x7fd2ff9037b8 <col:14> Implicit
| |-FunctionDecl 0x7fd2ff904090 <line:351:1, col:27> col:15 referenced acosh 'double (double)' extern
| | |-ParmVarDecl 0x7fd2ff904000 <col:21> col:27 'double'
| | |-ConstAttr 0x7fd2ff904130 <col:15> Implicit
| | `-NoThrowAttr 0x7fd2ff904178 <col:15> Implicit
| |-FunctionDecl 0x7fd2ff904230 <line:352:1, col:38> col:20 used acoshl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fd2ff9041a0 <col:27, col:32> col:38 'long double'
| | |-ConstAttr 0x7fd2ff9042d0 <col:20> Implicit
| | `-NoThrowAttr 0x7fd2ff904318 <col:20> Implicit
| |-FunctionDecl 0x7fd2ff9043d0 <line:354:1, col:26> col:14 used asinhf 'float (float)' extern
| | |-ParmVarDecl 0x7fd2ff904340 <col:21> col:26 'float'
| | |-ConstAttr 0x7fd2ff904470 <col:14> Implicit
| | `-NoThrowAttr 0x7fd2ff9044b8 <col:14> Implicit
| |-FunctionDecl 0x7fd2ff904570 <line:355:1, col:27> col:15 referenced asinh 'double (double)' extern
| | |-ParmVarDecl 0x7fd2ff9044e0 <col:21> col:27 'double'
| | |-ConstAttr 0x7fd2ff904610 <col:15> Implicit
| | `-NoThrowAttr 0x7fd2ff904658 <col:15> Implicit
| |-FunctionDecl 0x7fd2ff904710 <line:356:1, col:38> col:20 used asinhl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fd2ff904680 <col:27, col:32> col:38 'long double'
| | |-ConstAttr 0x7fd2ff9047b0 <col:20> Implicit
| | `-NoThrowAttr 0x7fd2ff9047f8 <col:20> Implicit
| |-FunctionDecl 0x7fd2ff9048b0 <line:358:1, col:26> col:14 used atanhf 'float (float)' extern
| | |-ParmVarDecl 0x7fd2ff904820 <col:21> col:26 'float'
| | |-ConstAttr 0x7fd2ff904950 <col:14> Implicit
| | `-NoThrowAttr 0x7fd2ff904998 <col:14> Implicit
| |-FunctionDecl 0x7fd2ff904a50 <line:359:1, col:27> col:15 referenced atanh 'double (double)' extern
| | |-ParmVarDecl 0x7fd2ff9049c0 <col:21> col:27 'double'
| | |-ConstAttr 0x7fd2ff904af0 <col:15> Implicit
| | `-NoThrowAttr 0x7fd2ff904b38 <col:15> Implicit
| |-FunctionDecl 0x7fd2ff904bf0 <line:360:1, col:38> col:20 used atanhl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fd2ff904b60 <col:27, col:32> col:38 'long double'
| | |-ConstAttr 0x7fd2ff904c90 <col:20> Implicit
| | `-NoThrowAttr 0x7fd2ff904cd8 <col:20> Implicit
| |-FunctionDecl 0x7fd2ff904d90 <line:362:1, col:25> col:14 used coshf 'float (float)' extern
| | |-ParmVarDecl 0x7fd2ff904d00 <col:20> col:25 'float'
| | |-ConstAttr 0x7fd2ff904e30 <col:14> Implicit
| | `-NoThrowAttr 0x7fd2ff904e78 <col:14> Implicit
| |-FunctionDecl 0x7fd2ff904f30 <line:363:1, col:26> col:15 referenced cosh 'double (double)' extern
| | |-ParmVarDecl 0x7fd2ff904ea0 <col:20> col:26 'double'
| | |-ConstAttr 0x7fd2ff904fd0 <col:15> Implicit
| | `-NoThrowAttr 0x7fd2ff905838 <col:15> Implicit
| |-FunctionDecl 0x7fd2ff9058f0 <line:364:1, col:37> col:20 used coshl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fd2ff905860 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fd2ff905990 <col:20> Implicit
| | `-NoThrowAttr 0x7fd2ff9059d8 <col:20> Implicit
| |-FunctionDecl 0x7fd2ff905a90 <line:366:1, col:25> col:14 used sinhf 'float (float)' extern
| | |-ParmVarDecl 0x7fd2ff905a00 <col:20> col:25 'float'
| | |-ConstAttr 0x7fd2ff905b30 <col:14> Implicit
| | `-NoThrowAttr 0x7fd2ff905b78 <col:14> Implicit
| |-FunctionDecl 0x7fd2ff905c30 <line:367:1, col:26> col:15 referenced sinh 'double (double)' extern
| | |-ParmVarDecl 0x7fd2ff905ba0 <col:20> col:26 'double'
| | |-ConstAttr 0x7fd2ff905cd0 <col:15> Implicit
| | `-NoThrowAttr 0x7fd2ff905d18 <col:15> Implicit
| |-FunctionDecl 0x7fd2ff905dd0 <line:368:1, col:37> col:20 used sinhl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fd2ff905d40 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fd2ff905e70 <col:20> Implicit
| | `-NoThrowAttr 0x7fd2ff905eb8 <col:20> Implicit
| |-FunctionDecl 0x7fd2ff905f70 <line:370:1, col:25> col:14 used tanhf 'float (float)' extern
| | |-ParmVarDecl 0x7fd2ff905ee0 <col:20> col:25 'float'
| | |-ConstAttr 0x7fd2ff906010 <col:14> Implicit
| | `-NoThrowAttr 0x7fd2ff906058 <col:14> Implicit
| |-FunctionDecl 0x7fd2ff906110 <line:371:1, col:26> col:15 referenced tanh 'double (double)' extern
| | |-ParmVarDecl 0x7fd2ff906080 <col:20> col:26 'double'
| | |-ConstAttr 0x7fd2ff9061b0 <col:15> Implicit
| | `-NoThrowAttr 0x7fd2ff9061f8 <col:15> Implicit
| |-FunctionDecl 0x7fd2ff9062b0 <line:372:1, col:37> col:20 used tanhl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fd2ff906220 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fd2ff906350 <col:20> Implicit
| | `-NoThrowAttr 0x7fd2ff906398 <col:20> Implicit
| |-FunctionDecl 0x7fd2ff906450 <line:374:1, col:24> col:14 used expf 'float (float)' extern
| | |-ParmVarDecl 0x7fd2ff9063c0 <col:19> col:24 'float'
| | |-ConstAttr 0x7fd2ff9064f0 <col:14> Implicit
| | `-NoThrowAttr 0x7fd2ff906538 <col:14> Implicit
| |-FunctionDecl 0x7fd2ff9065f0 <line:375:1, col:25> col:15 referenced exp 'double (double)' extern
| | |-ParmVarDecl 0x7fd2ff906560 <col:19> col:25 'double'
| | |-ConstAttr 0x7fd2ff906690 <col:15> Implicit
| | `-NoThrowAttr 0x7fd2ff9066d8 <col:15> Implicit
| |-FunctionDecl 0x7fd2ff906800 <line:376:1, col:36> col:20 used expl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fd2ff906700 <col:25, col:30> col:36 'long double'
| | |-ConstAttr 0x7fd2ff9068a0 <col:20> Implicit
| | `-NoThrowAttr 0x7fd2ff9068e8 <col:20> Implicit
| |-FunctionDecl 0x7fd2ff9069a0 <line:378:1, col:25> col:14 used exp2f 'float (float)' extern
| | |-ParmVarDecl 0x7fd2ff906910 <col:20> col:25 'float'
| | |-ConstAttr 0x7fd2ff906a40 <col:14> Implicit
| | `-NoThrowAttr 0x7fd2ff906a88 <col:14> Implicit
| |-FunctionDecl 0x7fd2ff906b40 <line:379:1, col:26> col:15 referenced exp2 'double (double)' extern
| | |-ParmVarDecl 0x7fd2ff906ab0 <col:20> col:26 'double'
| | |-ConstAttr 0x7fd2ff906be0 <col:15> Implicit
| | `-NoThrowAttr 0x7fd2ff906c28 <col:15> Implicit
| |-FunctionDecl 0x7fd2ff906ce0 <line:380:1, col:37> col:20 used exp2l 'long double (long double)' extern
| | |-ParmVarDecl 0x7fd2ff906c50 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fd2ff906d80 <col:20> Implicit
| | `-NoThrowAttr 0x7fd2ff906dc8 <col:20> Implicit
| |-FunctionDecl 0x7fd2ff906e80 <line:382:1, col:26> col:14 used expm1f 'float (float)' extern
| | |-ParmVarDecl 0x7fd2ff906df0 <col:21> col:26 'float'
| | |-ConstAttr 0x7fd2ff906f20 <col:14> Implicit
| | `-NoThrowAttr 0x7fd2ff906f68 <col:14> Implicit
| |-FunctionDecl 0x7fd2ff907020 <line:383:1, col:27> col:15 referenced expm1 'double (double)' extern
| | |-ParmVarDecl 0x7fd2ff906f90 <col:21> col:27 'double'
| | |-ConstAttr 0x7fd2ff9070c0 <col:15> Implicit
| | `-NoThrowAttr 0x7fd2ff907108 <col:15> Implicit
| |-FunctionDecl 0x7fd2ff9071c0 <line:384:1, col:38> col:20 used expm1l 'long double (long double)' extern
| | |-ParmVarDecl 0x7fd2ff907130 <col:27, col:32> col:38 'long double'
| | |-ConstAttr 0x7fd2ff907260 <col:20> Implicit
| | `-NoThrowAttr 0x7fd2ff9072a8 <col:20> Implicit
| |-FunctionDecl 0x7fd2ff907360 <line:386:1, col:24> col:14 used logf 'float (float)' extern
| | |-ParmVarDecl 0x7fd2ff9072d0 <col:19> col:24 'float'
| | |-ConstAttr 0x7fd2ff907400 <col:14> Implicit
| | `-NoThrowAttr 0x7fd2ff907448 <col:14> Implicit
| |-FunctionDecl 0x7fd2ff907500 <line:387:1, col:25> col:15 referenced log 'double (double)' extern
| | |-ParmVarDecl 0x7fd2ff907470 <col:19> col:25 'double'
| | |-ConstAttr 0x7fd2ff9075a0 <col:15> Implicit
| | `-NoThrowAttr 0x7fd2ff9075e8 <col:15> Implicit
| |-FunctionDecl 0x7fd2ff9076a0 <line:388:1, col:36> col:20 used logl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fd2ff907610 <col:25, col:30> col:36 'long double'
| | |-ConstAttr 0x7fd2ff907740 <col:20> Implicit
| | `-NoThrowAttr 0x7fd2ff907788 <col:20> Implicit
| |-FunctionDecl 0x7fd2ff907890 <line:390:1, col:26> col:14 used log10f 'float (float)' extern
| | |-ParmVarDecl 0x7fd2ff907800 <col:21> col:26 'float'
| | |-ConstAttr 0x7fd2ff907930 <col:14> Implicit
| | `-NoThrowAttr 0x7fd2ff907978 <col:14> Implicit
| |-FunctionDecl 0x7fd2ff907a30 <line:391:1, col:27> col:15 referenced log10 'double (double)' extern
| | |-ParmVarDecl 0x7fd2ff9079a0 <col:21> col:27 'double'
| | |-ConstAttr 0x7fd2ff907ad0 <col:15> Implicit
| | `-NoThrowAttr 0x7fd2ff907b18 <col:15> Implicit
| |-FunctionDecl 0x7fd2ff907bd0 <line:392:1, col:38> col:20 used log10l 'long double (long double)' extern
| | |-ParmVarDecl 0x7fd2ff907b40 <col:27, col:32> col:38 'long double'
| | |-ConstAttr 0x7fd2ff907c70 <col:20> Implicit
| | `-NoThrowAttr 0x7fd2ff907cb8 <col:20> Implicit
| |-FunctionDecl 0x7fd2ff907d70 <line:394:1, col:25> col:14 used log2f 'float (float)' extern
| | |-ParmVarDecl 0x7fd2ff907ce0 <col:20> col:25 'float'
| | |-ConstAttr 0x7fd2ff907e10 <col:14> Implicit
| | `-NoThrowAttr 0x7fd2ff907e58 <col:14> Implicit
| |-FunctionDecl 0x7fd2ff907f10 <line:395:1, col:26> col:15 referenced log2 'double (double)' extern
| | |-ParmVarDecl 0x7fd2ff907e80 <col:20> col:26 'double'
| | |-ConstAttr 0x7fd2ff907fb0 <col:15> Implicit
| | `-NoThrowAttr 0x7fd2ff907ff8 <col:15> Implicit
| |-FunctionDecl 0x7fd2ff9080b0 <line:396:1, col:37> col:20 used log2l 'long double (long double)' extern
| | |-ParmVarDecl 0x7fd2ff908020 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fd2ff908150 <col:20> Implicit
| | `-NoThrowAttr 0x7fd2ff908198 <col:20> Implicit
| |-FunctionDecl 0x7fd2ff908250 <line:398:1, col:26> col:14 used log1pf 'float (float)' extern
| | |-ParmVarDecl 0x7fd2ff9081c0 <col:21> col:26 'float'
| | |-ConstAttr 0x7fd2ff9082f0 <col:14> Implicit
| | `-NoThrowAttr 0x7fd2ff908338 <col:14> Implicit
| |-FunctionDecl 0x7fd2ff9083f0 <line:399:1, col:27> col:15 referenced log1p 'double (double)' extern
| | |-ParmVarDecl 0x7fd2ff908360 <col:21> col:27 'double'
| | |-ConstAttr 0x7fd2ff908490 <col:15> Implicit
| | `-NoThrowAttr 0x7fd2ff9084d8 <col:15> Implicit
| |-FunctionDecl 0x7fd2ff908590 <line:400:1, col:38> col:20 used log1pl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fd2ff908500 <col:27, col:32> col:38 'long double'
| | |-ConstAttr 0x7fd2ff908630 <col:20> Implicit
| | `-NoThrowAttr 0x7fd2ff908678 <col:20> Implicit
| |-FunctionDecl 0x7fd2ff908730 <line:402:1, col:25> col:14 used logbf 'float (float)' extern
| | |-ParmVarDecl 0x7fd2ff9086a0 <col:20> col:25 'float'
| | |-ConstAttr 0x7fd2ff9087d0 <col:14> Implicit
| | `-NoThrowAttr 0x7fd2ff909838 <col:14> Implicit
| |-FunctionDecl 0x7fd2ff9098f0 <line:403:1, col:26> col:15 referenced logb 'double (double)' extern
| | |-ParmVarDecl 0x7fd2ff909860 <col:20> col:26 'double'
| | |-ConstAttr 0x7fd2ff909990 <col:15> Implicit
| | `-NoThrowAttr 0x7fd2ff9099d8 <col:15> Implicit
| |-FunctionDecl 0x7fd2ff909a90 <line:404:1, col:37> col:20 used logbl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fd2ff909a00 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fd2ff909b30 <col:20> Implicit
| | `-NoThrowAttr 0x7fd2ff909b78 <col:20> Implicit
| |-FunctionDecl 0x7fd2ff909d18 <line:406:1, col:34> col:14 used modff 'float (float, float *)' extern
| | |-ParmVarDecl 0x7fd2ff909ba0 <col:20> col:25 'float'
| | |-ParmVarDecl 0x7fd2ff909c40 <col:27, col:33> col:34 'float *'
| | `-NoThrowAttr 0x7fd2ff909e00 <col:14> Implicit
| |-FunctionDecl 0x7fd2ff909fd8 <line:407:1, col:36> col:15 modf 'double (double, double *)' extern
| | |-ParmVarDecl 0x7fd2ff909e60 <col:20> col:26 'double'
| | |-ParmVarDecl 0x7fd2ff909f00 <col:28, col:35> col:36 'double *'
| | `-NoThrowAttr 0x7fd2ff90a0c0 <col:15> Implicit
| |-FunctionDecl 0x7fd2ff90a298 <line:408:1, col:52> col:20 used modfl 'long double (long double, long double *)' extern
| | |-ParmVarDecl 0x7fd2ff90a120 <col:26, col:31> col:37 'long double'
| | |-ParmVarDecl 0x7fd2ff90a1c0 <col:39, col:51> col:52 'long double *'
| | `-NoThrowAttr 0x7fd2ff90a380 <col:20> Implicit
| |-FunctionDecl 0x7fd2ff90a538 <line:410:1, col:31> col:14 used ldexpf 'float (float, int)' extern
| | |-ParmVarDecl 0x7fd2ff90a3e0 <col:21> col:26 'float'
| | |-ParmVarDecl 0x7fd2ff90a458 <col:28> col:31 'int'
| | |-ConstAttr 0x7fd2ff90a620 <col:14> Implicit
| | `-NoThrowAttr 0x7fd2ff90a668 <col:14> Implicit
| |-FunctionDecl 0x7fd2ff90b800 <line:411:1, col:32> col:15 referenced ldexp 'double (double, int)' extern
| | |-ParmVarDecl 0x7fd2ff90a690 <col:21> col:27 'double'
| | |-ParmVarDecl 0x7fd2ff90a708 <col:29> col:32 'int'
| | |-ConstAttr 0x7fd2ff90b8f0 <col:15> Implicit
| | `-NoThrowAttr 0x7fd2ff90b938 <col:15> Implicit
| |-FunctionDecl 0x7fd2ff90bab8 <line:412:1, col:43> col:20 used ldexpl 'long double (long double, int)' extern
| | |-ParmVarDecl 0x7fd2ff90b960 <col:27, col:32> col:38 'long double'
| | |-ParmVarDecl 0x7fd2ff90b9d8 <col:40> col:43 'int'
| | |-ConstAttr 0x7fd2ff90bba0 <col:20> Implicit
| | `-NoThrowAttr 0x7fd2ff90bbe8 <col:20> Implicit
| |-FunctionDecl 0x7fd2ff90bd88 <line:414:1, col:33> col:14 used frexpf 'float (float, int *)' extern
| | |-ParmVarDecl 0x7fd2ff90bc10 <col:21> col:26 'float'
| | |-ParmVarDecl 0x7fd2ff90bcb0 <col:28, col:32> col:33 'int *'
| | `-NoThrowAttr 0x7fd2ff90be70 <col:14> Implicit
| |-FunctionDecl 0x7fd2ff90c028 <line:415:1, col:34> col:15 referenced frexp 'double (double, int *)' extern
| | |-ParmVarDecl 0x7fd2ff90bed0 <col:21> col:27 'double'
| | |-ParmVarDecl 0x7fd2ff90bf48 <col:29, col:33> col:34 'int *'
| | `-NoThrowAttr 0x7fd2ff90c110 <col:15> Implicit
| |-FunctionDecl 0x7fd2ff90c2c8 <line:416:1, col:45> col:20 used frexpl 'long double (long double, int *)' extern
| | |-ParmVarDecl 0x7fd2ff90c170 <col:27, col:32> col:38 'long double'
| | |-ParmVarDecl 0x7fd2ff90c1e8 <col:40, col:44> col:45 'int *'
| | `-NoThrowAttr 0x7fd2ff90c3b0 <col:20> Implicit
| |-FunctionDecl 0x7fd2ff90c4a0 <line:418:1, col:24> col:12 used ilogbf 'int (float)' extern
| | |-ParmVarDecl 0x7fd2ff90c410 <col:19> col:24 'float'
| | |-ConstAttr 0x7fd2ff90c578 <col:12> Implicit
| | `-NoThrowAttr 0x7fd2ff90c5c0 <col:12> Implicit
| |-FunctionDecl 0x7fd2ff90c678 <line:419:1, col:24> col:12 referenced ilogb 'int (double)' extern
| | |-ParmVarDecl 0x7fd2ff90c5e8 <col:18> col:24 'double'
| | |-ConstAttr 0x7fd2ff90c758 <col:12> Implicit
| | `-NoThrowAttr 0x7fd2ff90c7a0 <col:12> Implicit
| |-FunctionDecl 0x7fd2ff90d890 <line:420:1, col:30> col:12 used ilogbl 'int (long double)' extern
| | |-ParmVarDecl 0x7fd2ff90d800 <col:19, col:24> col:30 'long double'
| | |-ConstAttr 0x7fd2ff90d968 <col:12> Implicit
| | `-NoThrowAttr 0x7fd2ff90d9b0 <col:12> Implicit
| |-FunctionDecl 0x7fd2ff90dae8 <line:422:1, col:32> col:14 used scalbnf 'float (float, int)' extern
| | |-ParmVarDecl 0x7fd2ff90d9d8 <col:22> col:27 'float'
| | |-ParmVarDecl 0x7fd2ff90da50 <col:29> col:32 'int'
| | |-ConstAttr 0x7fd2ff90db90 <col:14> Implicit
| | `-NoThrowAttr 0x7fd2ff90dbd8 <col:14> Implicit
| |-FunctionDecl 0x7fd2ff90dd10 <line:423:1, col:33> col:15 referenced scalbn 'double (double, int)' extern
| | |-ParmVarDecl 0x7fd2ff90dc00 <col:22> col:28 'double'
| | |-ParmVarDecl 0x7fd2ff90dc78 <col:30> col:33 'int'
| | |-ConstAttr 0x7fd2ff90ddb8 <col:15> Implicit
| | `-NoThrowAttr 0x7fd2ff90de00 <col:15> Implicit
| |-FunctionDecl 0x7fd2ff90df38 <line:424:1, col:44> col:20 used scalbnl 'long double (long double, int)' extern
| | |-ParmVarDecl 0x7fd2ff90de28 <col:28, col:33> col:39 'long double'
| | |-ParmVarDecl 0x7fd2ff90dea0 <col:41> col:44 'int'
| | |-ConstAttr 0x7fd2ff90dfe0 <col:20> Implicit
| | `-NoThrowAttr 0x7fd2ff90e028 <col:20> Implicit
| |-FunctionDecl 0x7fd2ff90e1a8 <line:426:1, col:38> col:14 used scalblnf 'float (float, long)' extern
| | |-ParmVarDecl 0x7fd2ff90e050 <col:23> col:28 'float'
| | |-ParmVarDecl 0x7fd2ff90e0c8 <col:30, col:35> col:38 'long'
| | |-ConstAttr 0x7fd2ff90e290 <col:14> Implicit
| | `-NoThrowAttr 0x7fd2ff90e2d8 <col:14> Implicit
| |-FunctionDecl 0x7fd2ff90e458 <line:427:1, col:39> col:15 referenced scalbln 'double (double, long)' extern
| | |-ParmVarDecl 0x7fd2ff90e300 <col:23> col:29 'double'
| | |-ParmVarDecl 0x7fd2ff90e378 <col:31, col:36> col:39 'long'
| | |-ConstAttr 0x7fd2ff90e540 <col:15> Implicit
| | `-NoThrowAttr 0x7fd2ff90e588 <col:15> Implicit
| |-FunctionDecl 0x7fd2ff90e708 <line:428:1, col:50> col:20 used scalblnl 'long double (long double, long)' extern
| | |-ParmVarDecl 0x7fd2ff90e5b0 <col:29, col:34> col:40 'long double'
| | |-ParmVarDecl 0x7fd2ff90e628 <col:42, col:47> col:50 'long'
| | |-ConstAttr 0x7fd2ff90e7f0 <col:20> Implicit
| | `-NoThrowAttr 0x7fd2ff90e838 <col:20> Implicit
| |-FunctionDecl 0x7fd2ff90e8f0 <line:430:1, col:25> col:14 used fabsf 'float (float)' extern
| | |-ParmVarDecl 0x7fd2ff90e860 <col:20> col:25 'float'
| | |-NoThrowAttr 0x7fd2ff90e990 <col:14> Implicit
| | `-ConstAttr 0x7fd2ff90e9d8 <col:14> Implicit
| |-FunctionDecl 0x7fd2ff90ea90 <line:431:1, col:26> col:15 used fabs 'double (double)' extern
| | |-ParmVarDecl 0x7fd2ff90ea00 <col:20> col:26 'double'
| | |-NoThrowAttr 0x7fd2ff90eb30 <col:15> Implicit
| | `-ConstAttr 0x7fd2ff90eb78 <col:15> Implicit
| |-FunctionDecl 0x7fd2ff90ec30 <line:432:1, col:37> col:20 used fabsl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fd2ff90eba0 <col:26, col:31> col:37 'long double'
| | |-NoThrowAttr 0x7fd2ff90ecd0 <col:20> Implicit
| | `-ConstAttr 0x7fd2ff90ed18 <col:20> Implicit
| |-FunctionDecl 0x7fd2ff90edd0 <line:434:1, col:25> col:14 used cbrtf 'float (float)' extern
| | |-ParmVarDecl 0x7fd2ff90ed40 <col:20> col:25 'float'
| | |-ConstAttr 0x7fd2ff90ee70 <col:14> Implicit
| | `-NoThrowAttr 0x7fd2ff90eeb8 <col:14> Implicit
| |-FunctionDecl 0x7fd2ff90ef70 <line:435:1, col:26> col:15 referenced cbrt 'double (double)' extern
| | |-ParmVarDecl 0x7fd2ff90eee0 <col:20> col:26 'double'
| | |-ConstAttr 0x7fd2ff90f010 <col:15> Implicit
| | `-NoThrowAttr 0x7fd2ff90f058 <col:15> Implicit
| |-FunctionDecl 0x7fd2ff90f110 <line:436:1, col:37> col:20 used cbrtl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fd2ff90f080 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fd2ff90f1b0 <col:20> Implicit
| | `-NoThrowAttr 0x7fd2ff90f1f8 <col:20> Implicit
| |-FunctionDecl 0x7fd2ff90f330 <line:438:1, col:33> col:14 used hypotf 'float (float, float)' extern
| | |-ParmVarDecl 0x7fd2ff90f220 <col:21> col:26 'float'
| | |-ParmVarDecl 0x7fd2ff90f298 <col:28> col:33 'float'
| | |-ConstAttr 0x7fd2ff90f3d8 <col:14> Implicit
| | `-NoThrowAttr 0x7fd2ff90f420 <col:14> Implicit
| |-FunctionDecl 0x7fd2ff90f558 <line:439:1, col:35> col:15 hypot 'double (double, double)' extern
| | |-ParmVarDecl 0x7fd2ff90f448 <col:21> col:27 'double'
| | |-ParmVarDecl 0x7fd2ff90f4c0 <col:29> col:35 'double'
| | |-ConstAttr 0x7fd2ff90f600 <col:15> Implicit
| | `-NoThrowAttr 0x7fd2ff90f648 <col:15> Implicit
| |-FunctionDecl 0x7fd2ff90f800 <line:440:1, col:51> col:20 used hypotl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fd2ff90f670 <col:27, col:32> col:38 'long double'
| | |-ParmVarDecl 0x7fd2ff90f6e8 <col:40, col:45> col:51 'long double'
| | |-ConstAttr 0x7fd2ff90f8a8 <col:20> Implicit
| | `-NoThrowAttr 0x7fd2ff90f8f0 <col:20> Implicit
| |-FunctionDecl 0x7fd2ff90fa28 <line:442:1, col:31> col:14 used powf 'float (float, float)' extern
| | |-ParmVarDecl 0x7fd2ff90f918 <col:19> col:24 'float'
| | |-ParmVarDecl 0x7fd2ff90f990 <col:26> col:31 'float'
| | |-ConstAttr 0x7fd2ff90fad0 <col:14> Implicit
| | `-NoThrowAttr 0x7fd2ff90fb18 <col:14> Implicit
| |-FunctionDecl 0x7fd2ff90fc50 <line:443:1, col:33> col:15 pow 'double (double, double)' extern
| | |-ParmVarDecl 0x7fd2ff90fb40 <col:19> col:25 'double'
| | |-ParmVarDecl 0x7fd2ff90fbb8 <col:27> col:33 'double'
| | |-ConstAttr 0x7fd2ff90fcf8 <col:15> Implicit
| | `-NoThrowAttr 0x7fd2ff90fd40 <col:15> Implicit
| |-FunctionDecl 0x7fd2ff90fe78 <line:444:1, col:49> col:20 used powl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fd2ff90fd68 <col:25, col:30> col:36 'long double'
| | |-ParmVarDecl 0x7fd2ff90fde0 <col:38, col:43> col:49 'long double'
| | |-ConstAttr 0x7fd2ff90ff20 <col:20> Implicit
| | `-NoThrowAttr 0x7fd2ff90ff68 <col:20> Implicit
| |-FunctionDecl 0x7fd2ff910020 <line:446:1, col:25> col:14 used sqrtf 'float (float)' extern
| | |-ParmVarDecl 0x7fd2ff90ff90 <col:20> col:25 'float'
| | |-ConstAttr 0x7fd2ff9100c0 <col:14> Implicit
| | `-NoThrowAttr 0x7fd2ff910108 <col:14> Implicit
| |-FunctionDecl 0x7fd2ff9101c0 <line:447:1, col:26> col:15 used sqrt 'double (double)' extern
| | |-ParmVarDecl 0x7fd2ff910130 <col:20> col:26 'double'
| | |-ConstAttr 0x7fd2ff910260 <col:15> Implicit
| | `-NoThrowAttr 0x7fd2ff9102a8 <col:15> Implicit
| |-FunctionDecl 0x7fd2ff910360 <line:448:1, col:37> col:20 used sqrtl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fd2ff9102d0 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fd2ff910400 <col:20> Implicit
| | `-NoThrowAttr 0x7fd2ff910448 <col:20> Implicit
| |-FunctionDecl 0x7fd2ff910500 <line:450:1, col:24> col:14 used erff 'float (float)' extern
| | |-ParmVarDecl 0x7fd2ff910470 <col:19> col:24 'float'
| | |-ConstAttr 0x7fd2ff9105a0 <col:14> Implicit
| | `-NoThrowAttr 0x7fd2ff9105e8 <col:14> Implicit
| |-FunctionDecl 0x7fd2ff9106a0 <line:451:1, col:25> col:15 referenced erf 'double (double)' extern
| | |-ParmVarDecl 0x7fd2ff910610 <col:19> col:25 'double'
| | |-ConstAttr 0x7fd2ff910740 <col:15> Implicit
| | `-NoThrowAttr 0x7fd2ff910788 <col:15> Implicit
| |-FunctionDecl 0x7fd2ff910890 <line:452:1, col:36> col:20 used erfl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fd2ff910800 <col:25, col:30> col:36 'long double'
| | |-ConstAttr 0x7fd2ff910930 <col:20> Implicit
| | `-NoThrowAttr 0x7fd2ff910978 <col:20> Implicit
| |-FunctionDecl 0x7fd2ff910a30 <line:454:1, col:25> col:14 used erfcf 'float (float)' extern
| | |-ParmVarDecl 0x7fd2ff9109a0 <col:20> col:25 'float'
| | |-ConstAttr 0x7fd2ff910ad0 <col:14> Implicit
| | `-NoThrowAttr 0x7fd2ff910b18 <col:14> Implicit
| |-FunctionDecl 0x7fd2ff910bd0 <line:455:1, col:26> col:15 referenced erfc 'double (double)' extern
| | |-ParmVarDecl 0x7fd2ff910b40 <col:20> col:26 'double'
| | |-ConstAttr 0x7fd2ff910c70 <col:15> Implicit
| | `-NoThrowAttr 0x7fd2ff910cb8 <col:15> Implicit
| |-FunctionDecl 0x7fd2ff910d70 <line:456:1, col:37> col:20 used erfcl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fd2ff910ce0 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fd2ff910e10 <col:20> Implicit
| | `-NoThrowAttr 0x7fd2ff910e58 <col:20> Implicit
| |-FunctionDecl 0x7fd2ff910f10 <line:461:1, col:27> col:14 used lgammaf 'float (float)' extern
| | |-ParmVarDecl 0x7fd2ff910e80 <col:22> col:27 'float'
| | `-NoThrowAttr 0x7fd2ff910fb0 <col:14> Implicit
| |-FunctionDecl 0x7fd2ff9110a0 <line:462:1, col:28> col:15 referenced lgamma 'double (double)' extern
| | |-ParmVarDecl 0x7fd2ff911010 <col:22> col:28 'double'
| | `-NoThrowAttr 0x7fd2ff911140 <col:15> Implicit
| |-FunctionDecl 0x7fd2ff911230 <line:463:1, col:39> col:20 used lgammal 'long double (long double)' extern
| | |-ParmVarDecl 0x7fd2ff9111a0 <col:28, col:33> col:39 'long double'
| | `-NoThrowAttr 0x7fd2ff9112d0 <col:20> Implicit
| |-FunctionDecl 0x7fd2ff9113c0 <line:465:1, col:27> col:14 used tgammaf 'float (float)' extern
| | |-ParmVarDecl 0x7fd2ff911330 <col:22> col:27 'float'
| | |-ConstAttr 0x7fd2ff911460 <col:14> Implicit
| | `-NoThrowAttr 0x7fd2ff9114a8 <col:14> Implicit
| |-FunctionDecl 0x7fd2ff911560 <line:466:1, col:28> col:15 referenced tgamma 'double (double)' extern
| | |-ParmVarDecl 0x7fd2ff9114d0 <col:22> col:28 'double'
| | |-ConstAttr 0x7fd2ff911600 <col:15> Implicit
| | `-NoThrowAttr 0x7fd2ff911648 <col:15> Implicit
| |-FunctionDecl 0x7fd2ff911700 <line:467:1, col:39> col:20 used tgammal 'long double (long double)' extern
| | |-ParmVarDecl 0x7fd2ff911670 <col:28, col:33> col:39 'long double'
| | |-ConstAttr 0x7fd2ff9117a0 <col:20> Implicit
| | `-NoThrowAttr 0x7fd2ff9117e8 <col:20> Implicit
| |-FunctionDecl 0x7fd3008000a8 <line:469:1, col:25> col:14 used ceilf 'float (float)' extern
| | |-ParmVarDecl 0x7fd300800018 <col:20> col:25 'float'
| | |-NoThrowAttr 0x7fd300800148 <col:14> Implicit
| | `-ConstAttr 0x7fd300800190 <col:14> Implicit
| |-FunctionDecl 0x7fd300800248 <line:470:1, col:26> col:15 referenced ceil 'double (double)' extern
| | |-ParmVarDecl 0x7fd3008001b8 <col:20> col:26 'double'
| | |-NoThrowAttr 0x7fd3008002e8 <col:15> Implicit
| | `-ConstAttr 0x7fd300800330 <col:15> Implicit
| |-FunctionDecl 0x7fd3008003e8 <line:471:1, col:37> col:20 used ceill 'long double (long double)' extern
| | |-ParmVarDecl 0x7fd300800358 <col:26, col:31> col:37 'long double'
| | |-NoThrowAttr 0x7fd300800488 <col:20> Implicit
| | `-ConstAttr 0x7fd3008004d0 <col:20> Implicit
| |-FunctionDecl 0x7fd300800588 <line:473:1, col:26> col:14 used floorf 'float (float)' extern
| | |-ParmVarDecl 0x7fd3008004f8 <col:21> col:26 'float'
| | |-NoThrowAttr 0x7fd300800628 <col:14> Implicit
| | `-ConstAttr 0x7fd300800670 <col:14> Implicit
| |-FunctionDecl 0x7fd300800728 <line:474:1, col:27> col:15 referenced floor 'double (double)' extern
| | |-ParmVarDecl 0x7fd300800698 <col:21> col:27 'double'
| | |-NoThrowAttr 0x7fd3008007c8 <col:15> Implicit
| | `-ConstAttr 0x7fd300800810 <col:15> Implicit
| |-FunctionDecl 0x7fd3008008c8 <line:475:1, col:38> col:20 used floorl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fd300800838 <col:27, col:32> col:38 'long double'
| | |-NoThrowAttr 0x7fd300800968 <col:20> Implicit
| | `-ConstAttr 0x7fd3008009b0 <col:20> Implicit
| |-FunctionDecl 0x7fd300800a68 <line:477:1, col:30> col:14 used nearbyintf 'float (float)' extern
| | |-ParmVarDecl 0x7fd3008009d8 <col:25> col:30 'float'
| | |-NoThrowAttr 0x7fd300800b08 <col:14> Implicit
| | `-ConstAttr 0x7fd300800b50 <col:14> Implicit
| |-FunctionDecl 0x7fd300800c08 <line:478:1, col:31> col:15 referenced nearbyint 'double (double)' extern
| | |-ParmVarDecl 0x7fd300800b78 <col:25> col:31 'double'
| | |-NoThrowAttr 0x7fd300800ca8 <col:15> Implicit
| | `-ConstAttr 0x7fd300800cf0 <col:15> Implicit
| |-FunctionDecl 0x7fd300800da8 <line:479:1, col:42> col:20 used nearbyintl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fd300800d18 <col:31, col:36> col:42 'long double'
| | |-NoThrowAttr 0x7fd300800e48 <col:20> Implicit
| | `-ConstAttr 0x7fd300800e90 <col:20> Implicit
| |-FunctionDecl 0x7fd300800f48 <line:481:1, col:25> col:14 used rintf 'float (float)' extern
| | |-ParmVarDecl 0x7fd300800eb8 <col:20> col:25 'float'
| | |-NoThrowAttr 0x7fd300800fe8 <col:14> Implicit
| | `-ConstAttr 0x7fd300801038 <col:14> Implicit
| |-FunctionDecl 0x7fd3008010f0 <line:482:1, col:26> col:15 referenced rint 'double (double)' extern
| | |-ParmVarDecl 0x7fd300801060 <col:20> col:26 'double'
| | |-NoThrowAttr 0x7fd300801190 <col:15> Implicit
| | `-ConstAttr 0x7fd3008011d8 <col:15> Implicit
| |-FunctionDecl 0x7fd300801290 <line:483:1, col:37> col:20 used rintl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fd300801200 <col:26, col:31> col:37 'long double'
| | |-NoThrowAttr 0x7fd300801330 <col:20> Implicit
| | `-ConstAttr 0x7fd300801378 <col:20> Implicit
| |-FunctionDecl 0x7fd300801468 <line:485:1, col:29> col:17 used lrintf 'long (float)' extern
| | |-ParmVarDecl 0x7fd3008013a0 <col:24> col:29 'float'
| | |-ConstAttr 0x7fd300801548 <col:17> Implicit
| | `-NoThrowAttr 0x7fd300801590 <col:17> Implicit
| |-FunctionDecl 0x7fd300801688 <line:486:1, col:29> col:17 referenced lrint 'long (double)' extern
| | |-ParmVarDecl 0x7fd3008015b8 <col:23> col:29 'double'
| | |-ConstAttr 0x7fd300801768 <col:17> Implicit
| | `-NoThrowAttr 0x7fd3008017b0 <col:17> Implicit
| |-FunctionDecl 0x7fd3008018a8 <line:487:1, col:35> col:17 used lrintl 'long (long double)' extern
| | |-ParmVarDecl 0x7fd3008017d8 <col:24, col:29> col:35 'long double'
| | |-ConstAttr 0x7fd300801988 <col:17> Implicit
| | `-NoThrowAttr 0x7fd3008019d0 <col:17> Implicit
| |-FunctionDecl 0x7fd300801a88 <line:489:1, col:26> col:14 used roundf 'float (float)' extern
| | |-ParmVarDecl 0x7fd3008019f8 <col:21> col:26 'float'
| | |-NoThrowAttr 0x7fd300801b28 <col:14> Implicit
| | `-ConstAttr 0x7fd300801b70 <col:14> Implicit
| |-FunctionDecl 0x7fd300801c28 <line:490:1, col:27> col:15 referenced round 'double (double)' extern
| | |-ParmVarDecl 0x7fd300801b98 <col:21> col:27 'double'
| | |-NoThrowAttr 0x7fd300801cc8 <col:15> Implicit
| | `-ConstAttr 0x7fd300801d10 <col:15> Implicit
| |-FunctionDecl 0x7fd300801dc8 <line:491:1, col:38> col:20 used roundl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fd300801d38 <col:27, col:32> col:38 'long double'
| | |-NoThrowAttr 0x7fd300801e68 <col:20> Implicit
| | `-ConstAttr 0x7fd300801eb0 <col:20> Implicit
| |-FunctionDecl 0x7fd300801f68 <line:493:1, col:30> col:17 used lroundf 'long (float)' extern
| | |-ParmVarDecl 0x7fd300801ed8 <col:25> col:30 'float'
| | |-ConstAttr 0x7fd300802008 <col:17> Implicit
| | `-NoThrowAttr 0x7fd300802050 <col:17> Implicit
| |-FunctionDecl 0x7fd300802108 <line:494:1, col:30> col:17 referenced lround 'long (double)' extern
| | |-ParmVarDecl 0x7fd300802078 <col:24> col:30 'double'
| | |-ConstAttr 0x7fd3008021a8 <col:17> Implicit
| | `-NoThrowAttr 0x7fd3008021f0 <col:17> Implicit
| |-FunctionDecl 0x7fd3008022a8 <line:495:1, col:36> col:17 used lroundl 'long (long double)' extern
| | |-ParmVarDecl 0x7fd300802218 <col:25, col:30> col:36 'long double'
| | |-ConstAttr 0x7fd300802348 <col:17> Implicit
| | `-NoThrowAttr 0x7fd300802390 <col:17> Implicit
| |-FunctionDecl 0x7fd300802488 <line:500:1, col:35> col:22 used llrintf 'long long (float)' extern
| | |-ParmVarDecl 0x7fd3008023b8 <col:30> col:35 'float'
| | |-ConstAttr 0x7fd300802568 <col:22> Implicit
| | `-NoThrowAttr 0x7fd3008025b0 <col:22> Implicit
| |-FunctionDecl 0x7fd3008026a8 <line:501:1, col:35> col:22 referenced llrint 'long long (double)' extern
| | |-ParmVarDecl 0x7fd3008025d8 <col:29> col:35 'double'
| | |-ConstAttr 0x7fd300802788 <col:22> Implicit
| | `-NoThrowAttr 0x7fd3008027d0 <col:22> Implicit
| |-FunctionDecl 0x7fd3008028c8 <line:502:1, col:41> col:22 used llrintl 'long long (long double)' extern
| | |-ParmVarDecl 0x7fd3008027f8 <col:30, col:35> col:41 'long double'
| | |-ConstAttr 0x7fd3008029a8 <col:22> Implicit
| | `-NoThrowAttr 0x7fd3008029f0 <col:22> Implicit
| |-FunctionDecl 0x7fd300802aa8 <line:504:1, col:36> col:22 used llroundf 'long long (float)' extern
| | |-ParmVarDecl 0x7fd300802a18 <col:31> col:36 'float'
| | |-ConstAttr 0x7fd300802b48 <col:22> Implicit
| | `-NoThrowAttr 0x7fd300802b90 <col:22> Implicit
| |-FunctionDecl 0x7fd300802c48 <line:505:1, col:36> col:22 referenced llround 'long long (double)' extern
| | |-ParmVarDecl 0x7fd300802bb8 <col:30> col:36 'double'
| | |-ConstAttr 0x7fd300802ce8 <col:22> Implicit
| | `-NoThrowAttr 0x7fd300802d30 <col:22> Implicit
| |-FunctionDecl 0x7fd300802de8 <line:506:1, col:42> col:22 used llroundl 'long long (long double)' extern
| | |-ParmVarDecl 0x7fd300802d58 <col:31, col:36> col:42 'long double'
| | |-ConstAttr 0x7fd300802e88 <col:22> Implicit
| | `-NoThrowAttr 0x7fd300802ed0 <col:22> Implicit
| |-FunctionDecl 0x7fd300803000 <line:509:1, col:26> col:14 used truncf 'float (float)' extern
| | |-ParmVarDecl 0x7fd300802ef8 <col:21> col:26 'float'
| | |-NoThrowAttr 0x7fd3008030a0 <col:14> Implicit
| | `-ConstAttr 0x7fd3008030e8 <col:14> Implicit
| |-FunctionDecl 0x7fd3008031a0 <line:510:1, col:27> col:15 referenced trunc 'double (double)' extern
| | |-ParmVarDecl 0x7fd300803110 <col:21> col:27 'double'
| | |-NoThrowAttr 0x7fd300803240 <col:15> Implicit
| | `-ConstAttr 0x7fd300803288 <col:15> Implicit
| |-FunctionDecl 0x7fd300803340 <line:511:1, col:38> col:20 used truncl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fd3008032b0 <col:27, col:32> col:38 'long double'
| | |-NoThrowAttr 0x7fd3008033e0 <col:20> Implicit
| | `-ConstAttr 0x7fd300803428 <col:20> Implicit
| |-FunctionDecl 0x7fd300803560 <line:513:1, col:32> col:14 used fmodf 'float (float, float)' extern
| | |-ParmVarDecl 0x7fd300803450 <col:20> col:25 'float'
| | |-ParmVarDecl 0x7fd3008034c8 <col:27> col:32 'float'
| | |-ConstAttr 0x7fd300803608 <col:14> Implicit
| | `-NoThrowAttr 0x7fd300803650 <col:14> Implicit
| |-FunctionDecl 0x7fd300803788 <line:514:1, col:34> col:15 fmod 'double (double, double)' extern
| | |-ParmVarDecl 0x7fd300803678 <col:20> col:26 'double'
| | |-ParmVarDecl 0x7fd3008036f0 <col:28> col:34 'double'
| | |-ConstAttr 0x7fd300803830 <col:15> Implicit
| | `-NoThrowAttr 0x7fd300803878 <col:15> Implicit
| |-FunctionDecl 0x7fd3008039b0 <line:515:1, col:50> col:20 used fmodl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fd3008038a0 <col:26, col:31> col:37 'long double'
| | |-ParmVarDecl 0x7fd300803918 <col:39, col:44> col:50 'long double'
| | |-ConstAttr 0x7fd300803a58 <col:20> Implicit
| | `-NoThrowAttr 0x7fd300803aa0 <col:20> Implicit
| |-FunctionDecl 0x7fd300803bd8 <line:517:1, col:37> col:14 used remainderf 'float (float, float)' extern
| | |-ParmVarDecl 0x7fd300803ac8 <col:25> col:30 'float'
| | |-ParmVarDecl 0x7fd300803b40 <col:32> col:37 'float'
| | |-ConstAttr 0x7fd300803c80 <col:14> Implicit
| | `-NoThrowAttr 0x7fd300803cc8 <col:14> Implicit
| |-FunctionDecl 0x7fd300803e00 <line:518:1, col:39> col:15 remainder 'double (double, double)' extern
| | |-ParmVarDecl 0x7fd300803cf0 <col:25> col:31 'double'
| | |-ParmVarDecl 0x7fd300803d68 <col:33> col:39 'double'
| | |-ConstAttr 0x7fd300803ea8 <col:15> Implicit
| | `-NoThrowAttr 0x7fd300803ef0 <col:15> Implicit
| |-FunctionDecl 0x7fd300804038 <line:519:1, col:55> col:20 used remainderl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fd300803f18 <col:31, col:36> col:42 'long double'
| | |-ParmVarDecl 0x7fd300803f90 <col:44, col:49> col:55 'long double'
| | |-ConstAttr 0x7fd3008040e0 <col:20> Implicit
| | `-NoThrowAttr 0x7fd300804128 <col:20> Implicit
| |-FunctionDecl 0x7fd300804328 <line:521:1, col:41> col:14 used remquof 'float (float, float, int *)' extern
| | |-ParmVarDecl 0x7fd300804150 <col:22> col:27 'float'
| | |-ParmVarDecl 0x7fd3008041c8 <col:29> col:34 'float'
| | `-ParmVarDecl 0x7fd300804240 <col:36, col:40> col:41 'int *'
| |-FunctionDecl 0x7fd3008045c8 <line:522:1, col:43> col:15 remquo 'double (double, double, int *)' extern
| | |-ParmVarDecl 0x7fd3008043f0 <col:22> col:28 'double'
| | |-ParmVarDecl 0x7fd300804468 <col:30> col:36 'double'
| | `-ParmVarDecl 0x7fd3008044e0 <col:38, col:42> col:43 'int *'
| |-FunctionDecl 0x7fd300804868 <line:523:1, col:59> col:20 used remquol 'long double (long double, long double, int *)' extern
| | |-ParmVarDecl 0x7fd300804690 <col:28, col:33> col:39 'long double'
| | |-ParmVarDecl 0x7fd300804708 <col:41, col:46> col:52 'long double'
| | `-ParmVarDecl 0x7fd300804780 <col:54, col:58> col:59 'int *'
| |-FunctionDecl 0x7fd300804a40 <line:525:1, col:36> col:14 used copysignf 'float (float, float)' extern
| | |-ParmVarDecl 0x7fd300804930 <col:24> col:29 'float'
| | |-ParmVarDecl 0x7fd3008049a8 <col:31> col:36 'float'
| | |-NoThrowAttr 0x7fd300804ae8 <col:14> Implicit
| | `-ConstAttr 0x7fd300804b30 <col:14> Implicit
| |-FunctionDecl 0x7fd300804c68 <line:526:1, col:38> col:15 copysign 'double (double, double)' extern
| | |-ParmVarDecl 0x7fd300804b58 <col:24> col:30 'double'
| | |-ParmVarDecl 0x7fd300804bd0 <col:32> col:38 'double'
| | |-NoThrowAttr 0x7fd300804d10 <col:15> Implicit
| | `-ConstAttr 0x7fd300804d58 <col:15> Implicit
| |-FunctionDecl 0x7fd300804e90 <line:527:1, col:54> col:20 used copysignl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fd300804d80 <col:30, col:35> col:41 'long double'
| | |-ParmVarDecl 0x7fd300804df8 <col:43, col:48> col:54 'long double'
| | |-NoThrowAttr 0x7fd300804f38 <col:20> Implicit
| | `-ConstAttr 0x7fd300804f80 <col:20> Implicit
| |-FunctionDecl 0x7fd3008050c8 <line:529:1, col:31> col:14 nanf 'float (const char *)' extern
| | |-ParmVarDecl 0x7fd300805000 <col:19, col:30> col:31 'const char *'
| | |-NoThrowAttr 0x7fd3008051a8 <col:14> Implicit
| | `-ConstAttr 0x7fd3008051f0 <col:14> Implicit
| |-FunctionDecl 0x7fd3008052e8 <line:530:1, col:31> col:15 nan 'double (const char *)' extern
| | |-ParmVarDecl 0x7fd300805218 <col:19, col:30> col:31 'const char *'
| | |-NoThrowAttr 0x7fd3008053c8 <col:15> Implicit
| | `-ConstAttr 0x7fd300805410 <col:15> Implicit
| |-FunctionDecl 0x7fd300805508 <line:531:1, col:37> col:20 nanl 'long double (const char *)' extern
| | |-ParmVarDecl 0x7fd300805438 <col:25, col:36> col:37 'const char *'
| | |-NoThrowAttr 0x7fd3008055e8 <col:20> Implicit
| | `-ConstAttr 0x7fd300805630 <col:20> Implicit
| |-FunctionDecl 0x7fd300805768 <line:533:1, col:37> col:14 used nextafterf 'float (float, float)' extern
| | |-ParmVarDecl 0x7fd300805658 <col:25> col:30 'float'
| | |-ParmVarDecl 0x7fd3008056d0 <col:32> col:37 'float'
| | |-ConstAttr 0x7fd300805810 <col:14> Implicit
| | `-NoThrowAttr 0x7fd300805858 <col:14> Implicit
| |-FunctionDecl 0x7fd300805990 <line:534:1, col:39> col:15 nextafter 'double (double, double)' extern
| | |-ParmVarDecl 0x7fd300805880 <col:25> col:31 'double'
| | |-ParmVarDecl 0x7fd3008058f8 <col:33> col:39 'double'
| | |-ConstAttr 0x7fd300805a38 <col:15> Implicit
| | `-NoThrowAttr 0x7fd300805a80 <col:15> Implicit
| |-FunctionDecl 0x7fd300805bb8 <line:535:1, col:55> col:20 used nextafterl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fd300805aa8 <col:31, col:36> col:42 'long double'
| | |-ParmVarDecl 0x7fd300805b20 <col:44, col:49> col:55 'long double'
| | |-ConstAttr 0x7fd300805c60 <col:20> Implicit
| | `-NoThrowAttr 0x7fd300805ca8 <col:20> Implicit
| |-FunctionDecl 0x7fd300805e28 <line:537:1, col:45> col:15 referenced nexttoward 'double (double, long double)' extern
| | |-ParmVarDecl 0x7fd300805cd0 <col:26> col:32 'double'
| | |-ParmVarDecl 0x7fd300805d48 <col:34, col:39> col:45 'long double'
| | |-ConstAttr 0x7fd300805f10 <col:15> Implicit
| | `-NoThrowAttr 0x7fd300805f58 <col:15> Implicit
| |-FunctionDecl 0x7fd3008080d8 <line:538:1, col:44> col:14 used nexttowardf 'float (float, long double)' extern
| | |-ParmVarDecl 0x7fd300805f80 <col:26> col:31 'float'
| | |-ParmVarDecl 0x7fd300808000 <col:33, col:38> col:44 'long double'
| | |-ConstAttr 0x7fd3008081c0 <col:14> Implicit
| | `-NoThrowAttr 0x7fd300808208 <col:14> Implicit
| |-FunctionDecl 0x7fd300808340 <line:539:1, col:56> col:20 used nexttowardl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fd300808230 <col:32, col:37> col:43 'long double'
| | |-ParmVarDecl 0x7fd3008082a8 <col:45, col:50> col:56 'long double'
| | |-ConstAttr 0x7fd3008083e8 <col:20> Implicit
| | `-NoThrowAttr 0x7fd300808430 <col:20> Implicit
| |-FunctionDecl 0x7fd300808568 <line:541:1, col:32> col:14 used fdimf 'float (float, float)' extern
| | |-ParmVarDecl 0x7fd300808458 <col:20> col:25 'float'
| | |-ParmVarDecl 0x7fd3008084d0 <col:27> col:32 'float'
| | |-ConstAttr 0x7fd300808610 <col:14> Implicit
| | `-NoThrowAttr 0x7fd300808658 <col:14> Implicit
| |-FunctionDecl 0x7fd300808790 <line:542:1, col:34> col:15 fdim 'double (double, double)' extern
| | |-ParmVarDecl 0x7fd300808680 <col:20> col:26 'double'
| | |-ParmVarDecl 0x7fd3008086f8 <col:28> col:34 'double'
| | |-ConstAttr 0x7fd300808838 <col:15> Implicit
| | `-NoThrowAttr 0x7fd300808880 <col:15> Implicit
| |-FunctionDecl 0x7fd3008089b8 <line:543:1, col:50> col:20 used fdiml 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fd3008088a8 <col:26, col:31> col:37 'long double'
| | |-ParmVarDecl 0x7fd300808920 <col:39, col:44> col:50 'long double'
| | |-ConstAttr 0x7fd300808a60 <col:20> Implicit
| | `-NoThrowAttr 0x7fd300808aa8 <col:20> Implicit
| |-FunctionDecl 0x7fd300808be0 <line:545:1, col:32> col:14 used fmaxf 'float (float, float)' extern
| | |-ParmVarDecl 0x7fd300808ad0 <col:20> col:25 'float'
| | |-ParmVarDecl 0x7fd300808b48 <col:27> col:32 'float'
| | |-NoThrowAttr 0x7fd300808c88 <col:14> Implicit
| | `-ConstAttr 0x7fd300808cd0 <col:14> Implicit
| |-FunctionDecl 0x7fd300808e08 <line:546:1, col:34> col:15 fmax 'double (double, double)' extern
| | |-ParmVarDecl 0x7fd300808cf8 <col:20> col:26 'double'
| | |-ParmVarDecl 0x7fd300808d70 <col:28> col:34 'double'
| | |-NoThrowAttr 0x7fd300808eb0 <col:15> Implicit
| | `-ConstAttr 0x7fd300808ef8 <col:15> Implicit
| |-FunctionDecl 0x7fd30080c038 <line:547:1, col:50> col:20 used fmaxl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fd300808f20 <col:26, col:31> col:37 'long double'
| | |-ParmVarDecl 0x7fd300808f98 <col:39, col:44> col:50 'long double'
| | |-NoThrowAttr 0x7fd30080c0e0 <col:20> Implicit
| | `-ConstAttr 0x7fd30080c128 <col:20> Implicit
| |-FunctionDecl 0x7fd30080c260 <line:549:1, col:32> col:14 used fminf 'float (float, float)' extern
| | |-ParmVarDecl 0x7fd30080c150 <col:20> col:25 'float'
| | |-ParmVarDecl 0x7fd30080c1c8 <col:27> col:32 'float'
| | |-NoThrowAttr 0x7fd30080c308 <col:14> Implicit
| | `-ConstAttr 0x7fd30080c350 <col:14> Implicit
| |-FunctionDecl 0x7fd30080c488 <line:550:1, col:34> col:15 fmin 'double (double, double)' extern
| | |-ParmVarDecl 0x7fd30080c378 <col:20> col:26 'double'
| | |-ParmVarDecl 0x7fd30080c3f0 <col:28> col:34 'double'
| | |-NoThrowAttr 0x7fd30080c530 <col:15> Implicit
| | `-ConstAttr 0x7fd30080c578 <col:15> Implicit
| |-FunctionDecl 0x7fd30080c6b0 <line:551:1, col:50> col:20 used fminl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fd30080c5a0 <col:26, col:31> col:37 'long double'
| | |-ParmVarDecl 0x7fd30080c618 <col:39, col:44> col:50 'long double'
| | |-NoThrowAttr 0x7fd30080c758 <col:20> Implicit
| | `-ConstAttr 0x7fd30080c7a0 <col:20> Implicit
| |-FunctionDecl 0x7fd30080c9a8 <line:553:1, col:38> col:14 used fmaf 'float (float, float, float)' extern
| | |-ParmVarDecl 0x7fd30080c7c8 <col:19> col:24 'float'
| | |-ParmVarDecl 0x7fd30080c840 <col:26> col:31 'float'
| | |-ParmVarDecl 0x7fd30080c8b8 <col:33> col:38 'float'
| | |-ConstAttr 0x7fd30080caa8 <col:14> Implicit
| | `-NoThrowAttr 0x7fd30080caf0 <col:14> Implicit
| |-FunctionDecl 0x7fd30080ccf8 <line:554:1, col:41> col:15 fma 'double (double, double, double)' extern
| | |-ParmVarDecl 0x7fd30080cb18 <col:19> col:25 'double'
| | |-ParmVarDecl 0x7fd30080cb90 <col:27> col:33 'double'
| | |-ParmVarDecl 0x7fd30080cc08 <col:35> col:41 'double'
| | |-ConstAttr 0x7fd30080cdf8 <col:15> Implicit
| | `-NoThrowAttr 0x7fd30080ce40 <col:15> Implicit
| |-FunctionDecl 0x7fd2ff90c888 <line:555:1, col:62> col:20 used fmal 'long double (long double, long double, long double)' extern
| | |-ParmVarDecl 0x7fd30080ce68 <col:25, col:30> col:36 'long double'
| | |-ParmVarDecl 0x7fd30080cee0 <col:38, col:43> col:49 'long double'
| | |-ParmVarDecl 0x7fd30080cf58 <col:51, col:56> col:62 'long double'
| | |-ConstAttr 0x7fd2ff90c988 <col:20> Implicit
| | `-NoThrowAttr 0x7fd2ff90c9d0 <col:20> Implicit
| |-FunctionDecl 0x7fd2ff90ca88 <line:565:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:565:14 __inff 'float (void)' extern
| | `-AvailabilityAttr 0x7fd2ff90cb20 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
| |-FunctionDecl 0x7fd2ff90cc68 </usr/include/math.h:566:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:566:15 __inf 'double (void)' extern
| | `-AvailabilityAttr 0x7fd2ff90cd00 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
| |-FunctionDecl 0x7fd2ff90ce48 </usr/include/math.h:567:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:567:20 __infl 'long double (void)' extern
| | `-AvailabilityAttr 0x7fd2ff90cee0 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
| |-FunctionDecl 0x7fd2ff90d028 </usr/include/math.h:569:1, /usr/include/AvailabilityInternal.h:20677:124> /usr/include/math.h:569:14 __nan 'float (void)' extern
| | `-AvailabilityAttr 0x7fd2ff90d0c0 </usr/include/AvailabilityInternal.h:20677:87, col:122> macos 10.0 0 0 "" ""
| |-FunctionDecl 0x7fd2ff90d218 </usr/include/math.h:597:1, /usr/include/AvailabilityInternal.h:21622:124> /usr/include/math.h:597:14 __exp10f 'float (float)' extern
| | |-ParmVarDecl 0x7fd2ff90d178 <col:23> col:28 'float'
| | |-AvailabilityAttr 0x7fd2ff90d2b8 </usr/include/AvailabilityInternal.h:21622:87, col:122> macos 10.9 0 0 "" ""
| | |-ConstAttr 0x7fd2ff90d358 </usr/include/math.h:597:14> Implicit
| | `-NoThrowAttr 0x7fd2ff90d368 <col:14> Implicit
| |-FunctionDecl 0x7fd2ff90d430 <line:598:1, /usr/include/AvailabilityInternal.h:21622:124> /usr/include/math.h:598:15 __exp10 'double (double)' extern
| | |-ParmVarDecl 0x7fd2ff90d390 <col:23> col:29 'double'
| | |-AvailabilityAttr 0x7fd2ff90d4d0 </usr/include/AvailabilityInternal.h:21622:87, col:122> macos 10.9 0 0 "" ""
| | |-ConstAttr 0x7fd2ff90d570 </usr/include/math.h:598:15> Implicit
| | `-NoThrowAttr 0x7fd2ff90d580 <col:15> Implicit
| |-FunctionDecl 0x7fd30080f000 </usr/include/sys/cdefs.h:300:36, /usr/include/math.h:604:78> col:29 __sincosf 'void (float, float *, float *)' inline
| | |-ParmVarDecl 0x7fd2ff90d5a8 <col:39, col:45> col:45 __x 'float'
| | |-ParmVarDecl 0x7fd2ff90d620 <col:50, col:57> col:57 __sinp 'float *'
| | |-ParmVarDecl 0x7fd2ff90d698 <col:65, col:72> col:72 __cosp 'float *'
| | `-AlwaysInlineAttr 0x7fd30080f0b0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fd30080f2e0 <line:300:36, /usr/include/math.h:605:80> col:29 __sincos 'void (double, double *, double *)' inline
| | |-ParmVarDecl 0x7fd30080f110 <col:38, col:45> col:45 __x 'double'
| | |-ParmVarDecl 0x7fd30080f188 <col:50, col:58> col:58 __sinp 'double *'
| | |-ParmVarDecl 0x7fd30080f200 <col:66, col:74> col:74 __cosp 'double *'
| | `-AlwaysInlineAttr 0x7fd30080f390 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fd30080f490 </usr/include/math.h:614:1, /usr/include/AvailabilityInternal.h:21622:124> /usr/include/math.h:614:14 __cospif 'float (float)' extern
| | |-ParmVarDecl 0x7fd30080f3f0 <col:23> col:28 'float'
| | |-AvailabilityAttr 0x7fd30080f530 </usr/include/AvailabilityInternal.h:21622:87, col:122> macos 10.9 0 0 "" ""
| | |-ConstAttr 0x7fd30080f5d0 </usr/include/math.h:614:14> Implicit
| | `-NoThrowAttr 0x7fd30080f5e0 <col:14> Implicit
| |-FunctionDecl 0x7fd30080f6a8 <line:615:1, /usr/include/AvailabilityInternal.h:21622:124> /usr/include/math.h:615:15 __cospi 'double (double)' extern
| | |-ParmVarDecl 0x7fd30080f608 <col:23> col:29 'double'
| | |-AvailabilityAttr 0x7fd30080f748 </usr/include/AvailabilityInternal.h:21622:87, col:122> macos 10.9 0 0 "" ""
| | |-ConstAttr 0x7fd30080f7e8 </usr/include/math.h:615:15> Implicit
| | `-NoThrowAttr 0x7fd30080f7f8 <col:15> Implicit
| |-FunctionDecl 0x7fd30080f8c0 <line:616:1, /usr/include/AvailabilityInternal.h:21622:124> /usr/include/math.h:616:14 __sinpif 'float (float)' extern
| | |-ParmVarDecl 0x7fd30080f820 <col:23> col:28 'float'
| | |-AvailabilityAttr 0x7fd30080f960 </usr/include/AvailabilityInternal.h:21622:87, col:122> macos 10.9 0 0 "" ""
| | |-ConstAttr 0x7fd30080fa00 </usr/include/math.h:616:14> Implicit
| | `-NoThrowAttr 0x7fd30080fa10 <col:14> Implicit
| |-FunctionDecl 0x7fd30080fad8 <line:617:1, /usr/include/AvailabilityInternal.h:21622:124> /usr/include/math.h:617:15 __sinpi 'double (double)' extern
| | |-ParmVarDecl 0x7fd30080fa38 <col:23> col:29 'double'
| | |-AvailabilityAttr 0x7fd30080fb78 </usr/include/AvailabilityInternal.h:21622:87, col:122> macos 10.9 0 0 "" ""
| | |-ConstAttr 0x7fd30080fc18 </usr/include/math.h:617:15> Implicit
| | `-NoThrowAttr 0x7fd30080fc28 <col:15> Implicit
| |-FunctionDecl 0x7fd30080fcf0 <line:618:1, /usr/include/AvailabilityInternal.h:21622:124> /usr/include/math.h:618:14 __tanpif 'float (float)' extern
| | |-ParmVarDecl 0x7fd30080fc50 <col:23> col:28 'float'
| | |-AvailabilityAttr 0x7fd30080fd90 </usr/include/AvailabilityInternal.h:21622:87, col:122> macos 10.9 0 0 "" ""
| | |-ConstAttr 0x7fd30080fe30 </usr/include/math.h:618:14> Implicit
| | `-NoThrowAttr 0x7fd30080fe40 <col:14> Implicit
| |-FunctionDecl 0x7fd30080ff08 <line:619:1, /usr/include/AvailabilityInternal.h:21622:124> /usr/include/math.h:619:15 __tanpi 'double (double)' extern
| | |-ParmVarDecl 0x7fd30080fe68 <col:23> col:29 'double'
| | |-AvailabilityAttr 0x7fd300816000 </usr/include/AvailabilityInternal.h:21622:87, col:122> macos 10.9 0 0 "" ""
| | |-ConstAttr 0x7fd3008160a0 </usr/include/math.h:619:15> Implicit
| | `-NoThrowAttr 0x7fd3008160b0 <col:15> Implicit
| |-FunctionDecl 0x7fd300816260 </usr/include/sys/cdefs.h:300:36, /usr/include/math.h:645:80> col:29 __sincospif 'void (float, float *, float *)' inline
| | |-ParmVarDecl 0x7fd3008160d8 <col:41, col:47> col:47 __x 'float'
| | |-ParmVarDecl 0x7fd300816150 <col:52, col:59> col:59 __sinp 'float *'
| | |-ParmVarDecl 0x7fd3008161c8 <col:67, col:74> col:74 __cosp 'float *'
| | `-AlwaysInlineAttr 0x7fd300816310 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fd3008164f8 <line:300:36, /usr/include/math.h:646:82> col:29 __sincospi 'void (double, double *, double *)' inline
| | |-ParmVarDecl 0x7fd300816370 <col:40, col:47> col:47 __x 'double'
| | |-ParmVarDecl 0x7fd3008163e8 <col:52, col:60> col:60 __sinp 'double *'
| | |-ParmVarDecl 0x7fd300816460 <col:68, col:76> col:76 __cosp 'double *'
| | `-AlwaysInlineAttr 0x7fd3008165a8 </usr/include/sys/cdefs.h:313:68> always_inline
| |-CXXRecordDecl 0x7fd3008165f0 </usr/include/math.h:653:1, col:51> col:8 struct __float2 definition
| | |-CXXRecordDecl 0x7fd300816718 <col:1, col:8> col:8 implicit struct __float2
| | |-FieldDecl 0x7fd3008167c8 <col:19, col:25> col:25 referenced __sinval 'float'
| | |-FieldDecl 0x7fd300816828 <col:35, col:41> col:41 referenced __cosval 'float'
| | |-CXXDestructorDecl 0x7fd30081e068 <col:8> col:8 implicit referenced ~__float2 'void (void) noexcept' inline default trivial
| | |-CXXConstructorDecl 0x7fd30081e168 <col:8> col:8 implicit __float2 'void (void)' inline default trivial noexcept-unevaluated 0x7fd30081e168
| | |-CXXConstructorDecl 0x7fd30081e278 <col:8> col:8 implicit constexpr __float2 'void (const struct __float2 &)' inline default trivial noexcept-unevaluated 0x7fd30081e278
| | | `-ParmVarDecl 0x7fd30081e3a0 <col:8> col:8 'const struct __float2 &'
| | `-CXXConstructorDecl 0x7fd30081e438 <col:8> col:8 implicit used constexpr __float2 'void (struct __float2 &&) noexcept' inline default trivial
| |   |-ParmVarDecl 0x7fd30081e560 <col:8> col:8 used 'struct __float2 &&'
| |   |-CXXCtorInitializer Field 0x7fd3008167c8 '__sinval' 'float'
| |   | `-ImplicitCastExpr 0x7fd30081e6b8 <col:8> 'float' <LValueToRValue>
| |   |   `-MemberExpr 0x7fd30081e680 <col:8> 'float' xvalue .__sinval 0x7fd3008167c8
| |   |     `-CXXStaticCastExpr 0x7fd30081e650 <col:8> 'struct __float2' xvalue static_cast<struct __float2 &&> <NoOp>
| |   |       `-DeclRefExpr 0x7fd30081e618 <col:8> 'struct __float2' lvalue ParmVar 0x7fd30081e560 '' 'struct __float2 &&'
| |   |-CXXCtorInitializer Field 0x7fd300816828 '__cosval' 'float'
| |   | `-ImplicitCastExpr 0x7fd30081e798 <col:8> 'float' <LValueToRValue>
| |   |   `-MemberExpr 0x7fd30081e760 <col:8> 'float' xvalue .__cosval 0x7fd300816828
| |   |     `-CXXStaticCastExpr 0x7fd30081e730 <col:8> 'struct __float2' xvalue static_cast<struct __float2 &&> <NoOp>
| |   |       `-DeclRefExpr 0x7fd30081e6f8 <col:8> 'struct __float2' lvalue ParmVar 0x7fd30081e560 '' 'struct __float2 &&'
| |   `-CompoundStmt 0x7fd30081e7e8 <col:8>
| |-CXXRecordDecl 0x7fd300816890 <line:654:1, col:54> col:8 struct __double2 definition
| | |-CXXRecordDecl 0x7fd3008169b8 <col:1, col:8> col:8 implicit struct __double2
| | |-FieldDecl 0x7fd300816a68 <col:20, col:27> col:27 referenced __sinval 'double'
| | |-FieldDecl 0x7fd300816ac8 <col:37, col:44> col:44 referenced __cosval 'double'
| | |-CXXDestructorDecl 0x7fd30081fa88 <col:8> col:8 implicit referenced ~__double2 'void (void) noexcept' inline default trivial
| | |-CXXConstructorDecl 0x7fd30081fb88 <col:8> col:8 implicit __double2 'void (void)' inline default trivial noexcept-unevaluated 0x7fd30081fb88
| | |-CXXConstructorDecl 0x7fd30081fc98 <col:8> col:8 implicit constexpr __double2 'void (const struct __double2 &)' inline default trivial noexcept-unevaluated 0x7fd30081fc98
| | | `-ParmVarDecl 0x7fd30081fdc0 <col:8> col:8 'const struct __double2 &'
| | `-CXXConstructorDecl 0x7fd30081fe58 <col:8> col:8 implicit used constexpr __double2 'void (struct __double2 &&) noexcept' inline default trivial
| |   |-ParmVarDecl 0x7fd30081ff80 <col:8> col:8 used 'struct __double2 &&'
| |   |-CXXCtorInitializer Field 0x7fd300816a68 '__sinval' 'double'
| |   | `-ImplicitCastExpr 0x7fd3008200d8 <col:8> 'double' <LValueToRValue>
| |   |   `-MemberExpr 0x7fd3008200a0 <col:8> 'double' xvalue .__sinval 0x7fd300816a68
| |   |     `-CXXStaticCastExpr 0x7fd300820070 <col:8> 'struct __double2' xvalue static_cast<struct __double2 &&> <NoOp>
| |   |       `-DeclRefExpr 0x7fd300820038 <col:8> 'struct __double2' lvalue ParmVar 0x7fd30081ff80 '' 'struct __double2 &&'
| |   |-CXXCtorInitializer Field 0x7fd300816ac8 '__cosval' 'double'
| |   | `-ImplicitCastExpr 0x7fd3008201b8 <col:8> 'double' <LValueToRValue>
| |   |   `-MemberExpr 0x7fd300820180 <col:8> 'double' xvalue .__cosval 0x7fd300816ac8
| |   |     `-CXXStaticCastExpr 0x7fd300820150 <col:8> 'struct __double2' xvalue static_cast<struct __double2 &&> <NoOp>
| |   |       `-DeclRefExpr 0x7fd300820118 <col:8> 'struct __double2' lvalue ParmVar 0x7fd30081ff80 '' 'struct __double2 &&'
| |   `-CompoundStmt 0x7fd300820208 <col:8>
| |-FunctionDecl 0x7fd300816c90 <line:656:1, col:45> col:24 used __sincosf_stret 'struct __float2 (float)' extern
| | `-ParmVarDecl 0x7fd300816b48 <col:40> col:45 'float'
| |-FunctionDecl 0x7fd300816e90 <line:657:1, col:46> col:25 used __sincos_stret 'struct __double2 (double)' extern
| | `-ParmVarDecl 0x7fd300816d48 <col:40> col:46 'double'
| |-FunctionDecl 0x7fd30081da00 <line:658:1, col:47> col:24 used __sincospif_stret 'struct __float2 (float)' extern
| | `-ParmVarDecl 0x7fd300816f48 <col:42> col:47 'float'
| |-FunctionDecl 0x7fd30081db50 <line:659:1, col:48> col:25 used __sincospi_stret 'struct __double2 (double)' extern
| | `-ParmVarDecl 0x7fd30081dab8 <col:42> col:48 'double'
| |-FunctionDecl 0x7fd30081dd90 prev 0x7fd30080f000 </usr/include/sys/cdefs.h:300:36, /usr/include/math.h:664:1> line:661:29 __sincosf 'void (float, float *, float *)' inline
| | |-ParmVarDecl 0x7fd30081dc08 <col:39, col:45> col:45 used __x 'float'
| | |-ParmVarDecl 0x7fd30081dc80 <col:50, col:57> col:57 used __sinp 'float *'
| | |-ParmVarDecl 0x7fd30081dcf8 <col:65, col:72> col:72 used __cosp 'float *'
| | |-CompoundStmt 0x7fd30081f5e0 <col:80, line:664:1>
| | | |-DeclStmt 0x7fd30081e850 <line:662:5, col:57>
| | | | `-VarDecl 0x7fd30081dea8 <col:5, col:56> col:27 used __stret 'const struct __float2':'const struct __float2' cinit
| | | |   `-ExprWithCleanups 0x7fd30081e838 <col:37, col:56> 'const struct __float2':'const struct __float2'
| | | |     `-CXXConstructExpr 0x7fd30081e800 <col:37, col:56> 'const struct __float2':'const struct __float2' 'void (struct __float2 &&) noexcept' elidable
| | | |       `-MaterializeTemporaryExpr 0x7fd30081e5c8 <col:37, col:56> 'struct __float2':'struct __float2' xvalue
| | | |         `-CallExpr 0x7fd30081e020 <col:37, col:56> 'struct __float2':'struct __float2'
| | | |           |-ImplicitCastExpr 0x7fd30081e008 <col:37> 'struct __float2 (*)(float)' <FunctionToPointerDecay>
| | | |           | `-DeclRefExpr 0x7fd30081df88 <col:37> 'struct __float2 (float)' lvalue Function 0x7fd300816c90 '__sincosf_stret' 'struct __float2 (float)'
| | | |           `-ImplicitCastExpr 0x7fd30081e050 <col:53> 'float' <LValueToRValue>
| | | |             `-DeclRefExpr 0x7fd30081df60 <col:53> 'float' lvalue ParmVar 0x7fd30081dc08 '__x' 'float'
| | | |-BinaryOperator 0x7fd30081e940 <line:663:5, col:23> 'float' lvalue '='
| | | | |-UnaryOperator 0x7fd30081e8a8 <col:5, col:6> 'float' lvalue prefix '*'
| | | | | `-ImplicitCastExpr 0x7fd30081e890 <col:6> 'float *' <LValueToRValue>
| | | | |   `-DeclRefExpr 0x7fd30081e868 <col:6> 'float *' lvalue ParmVar 0x7fd30081dc80 '__sinp' 'float *'
| | | | `-ImplicitCastExpr 0x7fd30081e928 <col:15, col:23> 'float' <LValueToRValue>
| | | |   `-MemberExpr 0x7fd30081e8f0 <col:15, col:23> 'const float' lvalue .__sinval 0x7fd3008167c8
| | | |     `-DeclRefExpr 0x7fd30081e8c8 <col:15> 'const struct __float2':'const struct __float2' lvalue Var 0x7fd30081dea8 '__stret' 'const struct __float2':'const struct __float2'
| | | `-BinaryOperator 0x7fd30081f5b8 <col:33, col:51> 'float' lvalue '='
| | |   |-UnaryOperator 0x7fd30081f520 <col:33, col:34> 'float' lvalue prefix '*'
| | |   | `-ImplicitCastExpr 0x7fd30081f508 <col:34> 'float *' <LValueToRValue>
| | |   |   `-DeclRefExpr 0x7fd30081f4e0 <col:34> 'float *' lvalue ParmVar 0x7fd30081dcf8 '__cosp' 'float *'
| | |   `-ImplicitCastExpr 0x7fd30081f5a0 <col:43, col:51> 'float' <LValueToRValue>
| | |     `-MemberExpr 0x7fd30081f568 <col:43, col:51> 'const float' lvalue .__cosval 0x7fd300816828
| | |       `-DeclRefExpr 0x7fd30081f540 <col:43> 'const struct __float2':'const struct __float2' lvalue Var 0x7fd30081dea8 '__stret' 'const struct __float2':'const struct __float2'
| | `-AlwaysInlineAttr 0x7fd30081de40 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fd30081f7b0 prev 0x7fd30080f2e0 <line:300:36, /usr/include/math.h:669:1> line:666:29 __sincos 'void (double, double *, double *)' inline
| | |-ParmVarDecl 0x7fd30081f628 <col:38, col:45> col:45 used __x 'double'
| | |-ParmVarDecl 0x7fd30081f6a0 <col:50, col:58> col:58 used __sinp 'double *'
| | |-ParmVarDecl 0x7fd30081f718 <col:66, col:74> col:74 used __cosp 'double *'
| | |-CompoundStmt 0x7fd3008205e0 <col:82, line:669:1>
| | | |-DeclStmt 0x7fd300820270 <line:667:5, col:57>
| | | | `-VarDecl 0x7fd30081f8c8 <col:5, col:56> col:28 used __stret 'const struct __double2':'const struct __double2' cinit
| | | |   `-ExprWithCleanups 0x7fd300820258 <col:38, col:56> 'const struct __double2':'const struct __double2'
| | | |     `-CXXConstructExpr 0x7fd300820220 <col:38, col:56> 'const struct __double2':'const struct __double2' 'void (struct __double2 &&) noexcept' elidable
| | | |       `-MaterializeTemporaryExpr 0x7fd30081ffe8 <col:38, col:56> 'struct __double2':'struct __double2' xvalue
| | | |         `-CallExpr 0x7fd30081fa40 <col:38, col:56> 'struct __double2':'struct __double2'
| | | |           |-ImplicitCastExpr 0x7fd30081fa28 <col:38> 'struct __double2 (*)(double)' <FunctionToPointerDecay>
| | | |           | `-DeclRefExpr 0x7fd30081f9a8 <col:38> 'struct __double2 (double)' lvalue Function 0x7fd300816e90 '__sincos_stret' 'struct __double2 (double)'
| | | |           `-ImplicitCastExpr 0x7fd30081fa70 <col:53> 'double' <LValueToRValue>
| | | |             `-DeclRefExpr 0x7fd30081f980 <col:53> 'double' lvalue ParmVar 0x7fd30081f628 '__x' 'double'
| | | |-BinaryOperator 0x7fd300820360 <line:668:5, col:23> 'double' lvalue '='
| | | | |-UnaryOperator 0x7fd3008202c8 <col:5, col:6> 'double' lvalue prefix '*'
| | | | | `-ImplicitCastExpr 0x7fd3008202b0 <col:6> 'double *' <LValueToRValue>
| | | | |   `-DeclRefExpr 0x7fd300820288 <col:6> 'double *' lvalue ParmVar 0x7fd30081f6a0 '__sinp' 'double *'
| | | | `-ImplicitCastExpr 0x7fd300820348 <col:15, col:23> 'double' <LValueToRValue>
| | | |   `-MemberExpr 0x7fd300820310 <col:15, col:23> 'const double' lvalue .__sinval 0x7fd300816a68
| | | |     `-DeclRefExpr 0x7fd3008202e8 <col:15> 'const struct __double2':'const struct __double2' lvalue Var 0x7fd30081f8c8 '__stret' 'const struct __double2':'const struct __double2'
| | | `-BinaryOperator 0x7fd3008205b8 <col:33, col:51> 'double' lvalue '='
| | |   |-UnaryOperator 0x7fd300820520 <col:33, col:34> 'double' lvalue prefix '*'
| | |   | `-ImplicitCastExpr 0x7fd300820508 <col:34> 'double *' <LValueToRValue>
| | |   |   `-DeclRefExpr 0x7fd3008204e0 <col:34> 'double *' lvalue ParmVar 0x7fd30081f718 '__cosp' 'double *'
| | |   `-ImplicitCastExpr 0x7fd3008205a0 <col:43, col:51> 'double' <LValueToRValue>
| | |     `-MemberExpr 0x7fd300820568 <col:43, col:51> 'const double' lvalue .__cosval 0x7fd300816ac8
| | |       `-DeclRefExpr 0x7fd300820540 <col:43> 'const struct __double2':'const struct __double2' lvalue Var 0x7fd30081f8c8 '__stret' 'const struct __double2':'const struct __double2'
| | `-AlwaysInlineAttr 0x7fd30081f860 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fd3008207b0 prev 0x7fd300816260 <line:300:36, /usr/include/math.h:674:1> line:671:29 __sincospif 'void (float, float *, float *)' inline
| | |-ParmVarDecl 0x7fd300820628 <col:41, col:47> col:47 used __x 'float'
| | |-ParmVarDecl 0x7fd3008206a0 <col:52, col:59> col:59 used __sinp 'float *'
| | |-ParmVarDecl 0x7fd300820718 <col:67, col:74> col:74 used __cosp 'float *'
| | |-CompoundStmt 0x7fd300820d08 <col:82, line:674:1>
| | | |-DeclStmt 0x7fd300820a98 <line:672:5, col:59>
| | | | `-VarDecl 0x7fd3008208c8 <col:5, col:58> col:27 used __stret 'const struct __float2':'const struct __float2' cinit
| | | |   `-ExprWithCleanups 0x7fd300820a80 <col:37, col:58> 'const struct __float2':'const struct __float2'
| | | |     `-CXXConstructExpr 0x7fd300820a48 <col:37, col:58> 'const struct __float2':'const struct __float2' 'void (struct __float2 &&) noexcept' elidable
| | | |       `-MaterializeTemporaryExpr 0x7fd300820a30 <col:37, col:58> 'struct __float2':'struct __float2' xvalue
| | | |         `-CallExpr 0x7fd3008209e8 <col:37, col:58> 'struct __float2':'struct __float2'
| | | |           |-ImplicitCastExpr 0x7fd3008209d0 <col:37> 'struct __float2 (*)(float)' <FunctionToPointerDecay>
| | | |           | `-DeclRefExpr 0x7fd3008209a8 <col:37> 'struct __float2 (float)' lvalue Function 0x7fd30081da00 '__sincospif_stret' 'struct __float2 (float)'
| | | |           `-ImplicitCastExpr 0x7fd300820a18 <col:55> 'float' <LValueToRValue>
| | | |             `-DeclRefExpr 0x7fd300820980 <col:55> 'float' lvalue ParmVar 0x7fd300820628 '__x' 'float'
| | | |-BinaryOperator 0x7fd300820b88 <line:673:5, col:23> 'float' lvalue '='
| | | | |-UnaryOperator 0x7fd300820af0 <col:5, col:6> 'float' lvalue prefix '*'
| | | | | `-ImplicitCastExpr 0x7fd300820ad8 <col:6> 'float *' <LValueToRValue>
| | | | |   `-DeclRefExpr 0x7fd300820ab0 <col:6> 'float *' lvalue ParmVar 0x7fd3008206a0 '__sinp' 'float *'
| | | | `-ImplicitCastExpr 0x7fd300820b70 <col:15, col:23> 'float' <LValueToRValue>
| | | |   `-MemberExpr 0x7fd300820b38 <col:15, col:23> 'const float' lvalue .__sinval 0x7fd3008167c8
| | | |     `-DeclRefExpr 0x7fd300820b10 <col:15> 'const struct __float2':'const struct __float2' lvalue Var 0x7fd3008208c8 '__stret' 'const struct __float2':'const struct __float2'
| | | `-BinaryOperator 0x7fd300820ce0 <col:33, col:51> 'float' lvalue '='
| | |   |-UnaryOperator 0x7fd300820c48 <col:33, col:34> 'float' lvalue prefix '*'
| | |   | `-ImplicitCastExpr 0x7fd300820c30 <col:34> 'float *' <LValueToRValue>
| | |   |   `-DeclRefExpr 0x7fd300820c08 <col:34> 'float *' lvalue ParmVar 0x7fd300820718 '__cosp' 'float *'
| | |   `-ImplicitCastExpr 0x7fd300820cc8 <col:43, col:51> 'float' <LValueToRValue>
| | |     `-MemberExpr 0x7fd300820c90 <col:43, col:51> 'const float' lvalue .__cosval 0x7fd300816828
| | |       `-DeclRefExpr 0x7fd300820c68 <col:43> 'const struct __float2':'const struct __float2' lvalue Var 0x7fd3008208c8 '__stret' 'const struct __float2':'const struct __float2'
| | `-AlwaysInlineAttr 0x7fd300820860 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fd300820ed8 prev 0x7fd3008164f8 <line:300:36, /usr/include/math.h:679:1> line:676:29 __sincospi 'void (double, double *, double *)' inline
| | |-ParmVarDecl 0x7fd300820d50 <col:40, col:47> col:47 used __x 'double'
| | |-ParmVarDecl 0x7fd300820dc8 <col:52, col:60> col:60 used __sinp 'double *'
| | |-ParmVarDecl 0x7fd300820e40 <col:68, col:76> col:76 used __cosp 'double *'
| | |-CompoundStmt 0x7fd300821840 <col:84, line:679:1>
| | | |-DeclStmt 0x7fd3008211c0 <line:677:5, col:59>
| | | | `-VarDecl 0x7fd300820ff0 <col:5, col:58> col:28 used __stret 'const struct __double2':'const struct __double2' cinit
| | | |   `-ExprWithCleanups 0x7fd3008211a8 <col:38, col:58> 'const struct __double2':'const struct __double2'
| | | |     `-CXXConstructExpr 0x7fd300821170 <col:38, col:58> 'const struct __double2':'const struct __double2' 'void (struct __double2 &&) noexcept' elidable
| | | |       `-MaterializeTemporaryExpr 0x7fd300821158 <col:38, col:58> 'struct __double2':'struct __double2' xvalue
| | | |         `-CallExpr 0x7fd300821110 <col:38, col:58> 'struct __double2':'struct __double2'
| | | |           |-ImplicitCastExpr 0x7fd3008210f8 <col:38> 'struct __double2 (*)(double)' <FunctionToPointerDecay>
| | | |           | `-DeclRefExpr 0x7fd3008210d0 <col:38> 'struct __double2 (double)' lvalue Function 0x7fd30081db50 '__sincospi_stret' 'struct __double2 (double)'
| | | |           `-ImplicitCastExpr 0x7fd300821140 <col:55> 'double' <LValueToRValue>
| | | |             `-DeclRefExpr 0x7fd3008210a8 <col:55> 'double' lvalue ParmVar 0x7fd300820d50 '__x' 'double'
| | | |-BinaryOperator 0x7fd3008212b0 <line:678:5, col:23> 'double' lvalue '='
| | | | |-UnaryOperator 0x7fd300821218 <col:5, col:6> 'double' lvalue prefix '*'
| | | | | `-ImplicitCastExpr 0x7fd300821200 <col:6> 'double *' <LValueToRValue>
| | | | |   `-DeclRefExpr 0x7fd3008211d8 <col:6> 'double *' lvalue ParmVar 0x7fd300820dc8 '__sinp' 'double *'
| | | | `-ImplicitCastExpr 0x7fd300821298 <col:15, col:23> 'double' <LValueToRValue>
| | | |   `-MemberExpr 0x7fd300821260 <col:15, col:23> 'const double' lvalue .__sinval 0x7fd300816a68
| | | |     `-DeclRefExpr 0x7fd300821238 <col:15> 'const struct __double2':'const struct __double2' lvalue Var 0x7fd300820ff0 '__stret' 'const struct __double2':'const struct __double2'
| | | `-BinaryOperator 0x7fd300821818 <col:33, col:51> 'double' lvalue '='
| | |   |-UnaryOperator 0x7fd300821370 <col:33, col:34> 'double' lvalue prefix '*'
| | |   | `-ImplicitCastExpr 0x7fd300821358 <col:34> 'double *' <LValueToRValue>
| | |   |   `-DeclRefExpr 0x7fd300821330 <col:34> 'double *' lvalue ParmVar 0x7fd300820e40 '__cosp' 'double *'
| | |   `-ImplicitCastExpr 0x7fd300821800 <col:43, col:51> 'double' <LValueToRValue>
| | |     `-MemberExpr 0x7fd3008213b8 <col:43, col:51> 'const double' lvalue .__cosval 0x7fd300816ac8
| | |       `-DeclRefExpr 0x7fd300821390 <col:43> 'const struct __double2':'const struct __double2' lvalue Var 0x7fd300820ff0 '__stret' 'const struct __double2':'const struct __double2'
| | `-AlwaysInlineAttr 0x7fd300820f88 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fd300821928 </usr/include/math.h:687:1, /usr/include/AvailabilityInternal.h:20677:124> /usr/include/math.h:687:15 j0 'double (double)' extern
| | |-ParmVarDecl 0x7fd300821888 <col:18> col:24 'double'
| | `-AvailabilityAttr 0x7fd3008219c8 </usr/include/AvailabilityInternal.h:20677:87, col:122> macos 10.0 0 0 "" ""
| |-FunctionDecl 0x7fd300821b20 </usr/include/math.h:688:1, /usr/include/AvailabilityInternal.h:20677:124> /usr/include/math.h:688:15 j1 'double (double)' extern
| | |-ParmVarDecl 0x7fd300821a80 <col:18> col:24 'double'
| | `-AvailabilityAttr 0x7fd300821bc0 </usr/include/AvailabilityInternal.h:20677:87, col:122> macos 10.0 0 0 "" ""
| |-FunctionDecl 0x7fd300821dd8 </usr/include/math.h:689:1, /usr/include/AvailabilityInternal.h:20677:124> /usr/include/math.h:689:15 jn 'double (int, double)' extern
| | |-ParmVarDecl 0x7fd300821c78 <col:18> col:21 'int'
| | |-ParmVarDecl 0x7fd300821cf0 <col:23> col:29 'double'
| | `-AvailabilityAttr 0x7fd300821e80 </usr/include/AvailabilityInternal.h:20677:87, col:122> macos 10.0 0 0 "" ""
| |-FunctionDecl 0x7fd300821fd8 </usr/include/math.h:690:1, /usr/include/AvailabilityInternal.h:20677:124> /usr/include/math.h:690:15 y0 'double (double)' extern
| | |-ParmVarDecl 0x7fd300821f38 <col:18> col:24 'double'
| | `-AvailabilityAttr 0x7fd300822078 </usr/include/AvailabilityInternal.h:20677:87, col:122> macos 10.0 0 0 "" ""
| |-FunctionDecl 0x7fd3008221d0 </usr/include/math.h:691:1, /usr/include/AvailabilityInternal.h:20677:124> /usr/include/math.h:691:15 y1 'double (double)' extern
| | |-ParmVarDecl 0x7fd300822130 <col:18> col:24 'double'
| | `-AvailabilityAttr 0x7fd300822270 </usr/include/AvailabilityInternal.h:20677:87, col:122> macos 10.0 0 0 "" ""
| |-FunctionDecl 0x7fd300822448 </usr/include/math.h:692:1, /usr/include/AvailabilityInternal.h:20677:124> /usr/include/math.h:692:15 yn 'double (int, double)' extern
| | |-ParmVarDecl 0x7fd300822328 <col:18> col:21 'int'
| | |-ParmVarDecl 0x7fd3008223a0 <col:23> col:29 'double'
| | `-AvailabilityAttr 0x7fd3008224f0 </usr/include/AvailabilityInternal.h:20677:87, col:122> macos 10.0 0 0 "" ""
| |-FunctionDecl 0x7fd3008226b8 </usr/include/math.h:693:1, col:35> col:15 scalb 'double (double, double)' extern
| | |-ParmVarDecl 0x7fd3008225a8 <col:21> col:27 'double'
| | `-ParmVarDecl 0x7fd300822620 <col:29> col:35 'double'
| |-VarDecl 0x7fd300822778 <line:694:1, col:12> col:12 signgam 'int' extern
| |-FunctionDecl 0x7fd3008248a0 <line:751:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:751:17 rinttol 'long (double)' extern
| | |-ParmVarDecl 0x7fd300824800 <col:25> col:31 'double'
| | `-AvailabilityAttr 0x7fd300824940 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
| |-FunctionDecl 0x7fd300824a98 </usr/include/math.h:753:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:753:17 roundtol 'long (double)' extern
| | |-ParmVarDecl 0x7fd3008249f8 <col:26> col:32 'double'
| | `-AvailabilityAttr 0x7fd300824b38 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
| |-FunctionDecl 0x7fd300824d10 </usr/include/math.h:755:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:755:15 drem 'double (double, double)' extern
| | |-ParmVarDecl 0x7fd300824bf0 <col:20> col:26 'double'
| | |-ParmVarDecl 0x7fd300824c68 <col:28> col:34 'double'
| | `-AvailabilityAttr 0x7fd300824db8 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
| |-FunctionDecl 0x7fd300824f10 </usr/include/math.h:757:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:757:12 finite 'int (double)' extern
| | |-ParmVarDecl 0x7fd300824e70 <col:19> col:25 'double'
| | `-AvailabilityAttr 0x7fd300824fb0 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
| |-FunctionDecl 0x7fd300825108 </usr/include/math.h:759:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:759:15 gamma 'double (double)' extern
| | |-ParmVarDecl 0x7fd300825068 <col:21> col:27 'double'
| | `-AvailabilityAttr 0x7fd3008251a8 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
| `-FunctionDecl 0x7fd300825300 </usr/include/math.h:761:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:761:15 significand 'double (double)' extern
|   |-ParmVarDecl 0x7fd300825260 <col:27> col:33 'double'
|   `-AvailabilityAttr 0x7fd3008253a0 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
|-LinkageSpecDecl 0x7fd2ff8f6998 </usr/include/math.h:205:26> col:26 implicit C
| `-FunctionDecl 0x7fd2ff8f69e8 <col:26> col:26 implicit used __builtin_fabsf 'float (float) noexcept' extern
|   |-ParmVarDecl 0x7fd2ff8f6a80 <<invalid sloc>> <invalid sloc> 'float'
|   |-NoThrowAttr 0x7fd2ff8f6ae8 <col:26> Implicit
|   `-ConstAttr 0x7fd2ff8f6b30 <col:26> Implicit
|-LinkageSpecDecl 0x7fd2ff8f6cb0 <col:50> col:50 implicit C
| `-FunctionDecl 0x7fd2ff8f6d00 <col:50> col:50 implicit used __builtin_inff 'float (void) noexcept' extern
|   |-NoThrowAttr 0x7fd2ff8f6d98 <col:50> Implicit
|   `-ConstAttr 0x7fd2ff8f6de0 <col:50> Implicit
|-LinkageSpecDecl 0x7fd2ff8f7208 <line:208:26> col:26 implicit C
| `-FunctionDecl 0x7fd2ff8f7258 <col:26> col:26 implicit used __builtin_fabs 'double (double) noexcept' extern
|   |-ParmVarDecl 0x7fd2ff8f72f0 <<invalid sloc>> <invalid sloc> 'double'
|   |-NoThrowAttr 0x7fd2ff8f7358 <col:26> Implicit
|   `-ConstAttr 0x7fd2ff8f73a0 <col:26> Implicit
|-LinkageSpecDecl 0x7fd2ff8f7520 <col:49> col:49 implicit C
| `-FunctionDecl 0x7fd2ff8f7600 <col:49> col:49 implicit used __builtin_inf 'double (void) noexcept' extern
|   |-NoThrowAttr 0x7fd2ff8f7698 <col:49> Implicit
|   `-ConstAttr 0x7fd2ff8f76e0 <col:49> Implicit
|-LinkageSpecDecl 0x7fd2ff8f7b08 <line:211:26> col:26 implicit C
| `-FunctionDecl 0x7fd2ff8f7b58 <col:26> col:26 implicit used __builtin_fabsl 'long double (long double) noexcept' extern
|   |-ParmVarDecl 0x7fd2ff8f7bf0 <<invalid sloc>> <invalid sloc> 'long double'
|   |-NoThrowAttr 0x7fd2ff8f7c58 <col:26> Implicit
|   `-ConstAttr 0x7fd2ff8f7ca0 <col:26> Implicit
|-LinkageSpecDecl 0x7fd2ff8f7e20 <col:50> col:50 implicit C
| `-FunctionDecl 0x7fd2ff8f7e70 <col:50> col:50 implicit used __builtin_infl 'long double (void) noexcept' extern
|   |-NoThrowAttr 0x7fd2ff8f7f08 <col:50> Implicit
|   `-ConstAttr 0x7fd2ff8f7f50 <col:50> Implicit
|-LinkageSpecDecl 0x7fd3008254e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:307:1, line:1485:1> line:307:8 C++
| |-TypedefDecl 0x7fd300825550 </usr/local/Cellar/llvm/5.0.0/bin/../lib/clang/5.0.0/include/stddef.h:51:1, col:26> col:26 ptrdiff_t 'long'
| | `-BuiltinType 0x7fd2ff8327e0 'long'
| |-TypedefDecl 0x7fd3008255c0 <line:62:1, col:23> col:23 referenced size_t 'unsigned long'
| | `-BuiltinType 0x7fd2ff832880 'unsigned long'
| |-TypedefDecl 0x7fd300825630 </usr/local/Cellar/llvm/5.0.0/bin/../lib/clang/5.0.0/include/__stddef_max_align_t.h:32:1, col:21> col:21 max_align_t 'long double'
| | `-BuiltinType 0x7fd2ff832900 'long double'
| |-NamespaceDecl 0x7fd300825688 prev 0x7fd2ff865c58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__nullptr:55:1, line:58:1> line:55:11 std
| | |-original Namespace 0x7fd2ff865c58 'std'
| | `-TypedefDecl 0x7fd300825748 <line:57:5, col:31> col:31 referenced nullptr_t 'decltype(nullptr)':'nullptr_t'
| |   `-DecltypeType 0x7fd300825710 'decltype(nullptr)' sugar
| |     |-CXXNullPtrLiteralExpr 0x7fd3008256f0 <col:22> 'nullptr_t'
| |     `-BuiltinType 0x7fd2ff832c10 'nullptr_t'
| |-NamespaceDecl 0x7fd300829400 prev 0x7fd300825688 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:438:37, line:439:38> line:438:47 std
| | |-original Namespace 0x7fd2ff865c58 'std'
| | `-NamespaceDecl 0x7fd300829468 prev 0x7fd2ff865cc0 <col:52, line:439:36> <scratch space>:343:1 __1 inline
| |   |-original Namespace 0x7fd2ff865cc0 '__1'
| |   |-UsingDecl 0x7fd3008294f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cstddef:49:1, col:9> col:9 ::ptrdiff_t
| |   |-UsingShadowDecl 0x7fd300829540 <col:9> col:9 implicit Typedef 0x7fd300825550 'ptrdiff_t'
| |   | `-<<<NULL>>>
| |   |-UsingDecl 0x7fd300829590 <line:50:1, col:9> col:9 ::size_t
| |   |-UsingShadowDecl 0x7fd3008295e0 <col:9> col:9 implicit Typedef 0x7fd3008255c0 'size_t'
| |   | `-TypedefType 0x7fd30181be80 'size_t' sugar
| |   |   |-Typedef 0x7fd3008255c0 'size_t'
| |   |   `-BuiltinType 0x7fd2ff832880 'unsigned long'
| |   |-UsingDecl 0x7fd300829630 <line:55:1, col:9> col:9 ::max_align_t
| |   `-UsingShadowDecl 0x7fd300829680 <col:9> col:9 implicit Typedef 0x7fd300825630 'max_align_t'
| |     `-<<<NULL>>>
| |-NamespaceDecl 0x7fd3008296c8 prev 0x7fd300829400 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:438:37, line:439:38> line:438:47 std
| | |-original Namespace 0x7fd2ff865c58 'std'
| | `-NamespaceDecl 0x7fd300829730 prev 0x7fd300829468 <col:52, line:439:36> <scratch space>:344:1 __1 inline
| |   |-original Namespace 0x7fd2ff865cc0 '__1'
| |   |-ClassTemplateDecl 0x7fd300829a40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:398:1, col:61> col:61 pair
| |   | |-TemplateTypeParmDecl 0x7fd300829798 <col:11, col:17> col:17 class depth 0 index 0 _T1
| |   | |-TemplateTypeParmDecl 0x7fd300829838 <col:22, col:28> col:28 class depth 0 index 1 _T2
| |   | `-CXXRecordDecl 0x7fd3008299a8 <col:33, col:61> col:61 struct pair
| |   |   `-TypeVisibilityAttr 0x7fd300829c78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |-ClassTemplateDecl 0x7fd300829e08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:399:1, col:49> col:49 reference_wrapper
| |   | |-TemplateTypeParmDecl 0x7fd300829cc0 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd300829d70 <col:22, col:49> col:49 class reference_wrapper
| |   |   `-TypeVisibilityAttr 0x7fd30082a018 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |-ClassTemplateDecl 0x7fd30082a1a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:400:1, col:50> col:50 hash
| |   | |-TemplateTypeParmDecl 0x7fd30082a060 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd30082a110 <col:22, col:50> col:50 struct hash
| |   |   `-TypeVisibilityAttr 0x7fd30082a3b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |-ClassTemplateDecl 0x7fd30082bd18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:402:1, line:403:38> col:8 __void_t
| |   | |-TemplateTypeParmDecl 0x7fd30082bc00 <line:402:11> col:11 class depth 0 index 0
| |   | `-CXXRecordDecl 0x7fd30082bc80 <line:403:1, col:38> col:8 struct __void_t definition
| |   |   |-CXXRecordDecl 0x7fd30082bf90 <col:1, col:8> col:8 implicit struct __void_t
| |   |   `-TypedefDecl 0x7fd30082c038 <col:19, col:32> col:32 type 'void'
| |   |     `-BuiltinType 0x7fd2ff832720 'void'
| |   |-ClassTemplateDecl 0x7fd30082c1c8 <line:405:1, line:406:39> col:8 __identity
| |   | |-TemplateTypeParmDecl 0x7fd30082c0b0 <line:405:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd30082c130 <line:406:1, col:39> col:8 struct __identity definition
| |   |   |-CXXRecordDecl 0x7fd30082c440 <col:1, col:8> col:8 implicit struct __identity
| |   |   `-TypedefDecl 0x7fd30082c4e8 <col:21, col:33> col:33 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7fd30082c0f0 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fd30082c0b0 '_Tp'
| |   |-ClassTemplateDecl 0x7fd30082c718 <line:408:1, line:409:60> col:29 __dependent_type
| |   | |-TemplateTypeParmDecl 0x7fd30082c560 <line:408:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fd30082c5d8 <col:22> col:26 '_Bool' depth 0 index 1
| |   | `-CXXRecordDecl 0x7fd30082c680 <line:409:1, col:60> col:29 struct __dependent_type definition
| |   |   |-public '_Tp'
| |   |   |-TypeVisibilityAttr 0x7fd30082c9e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd30082ca68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:409:1, col:29> col:29 implicit struct __dependent_type
| |   |-ClassTemplateDecl 0x7fd30082cd88 <line:411:1, line:412:63> col:33 conditional
| |   | |-NonTypeTemplateParmDecl 0x7fd30082cb30 <line:411:11, col:16> col:16 '_Bool' depth 0 index 0 _Bp
| |   | |-TemplateTypeParmDecl 0x7fd30082cb88 <col:21, col:27> col:27 referenced class depth 0 index 1 _If
| |   | |-TemplateTypeParmDecl 0x7fd30082cc00 <col:32, col:38> col:38 class depth 0 index 2 _Then
| |   | `-CXXRecordDecl 0x7fd30082ccf0 <line:412:5, col:63> col:33 struct conditional definition
| |   |   |-TypeVisibilityAttr 0x7fd30082d090 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fd30082d0d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:412:5, col:33> col:33 implicit struct conditional
| |   |   `-TypedefDecl 0x7fd30082d180 <col:46, col:58> col:58 type '_If'
| |   |     `-TemplateTypeParmType 0x7fd30082cbd0 '_If' dependent depth 0 index 1
| |   |       `-TemplateTypeParm 0x7fd30082cb88 '_If'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd30082d4f8 <line:413:1, line:414:84> col:33 struct conditional definition
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateTypeParmDecl 0x7fd30082d1f8 <line:413:11, col:17> col:17 referenced class depth 0 index 0 _If
| |   | |-TemplateTypeParmDecl 0x7fd30082d268 <col:22, col:28> col:28 referenced class depth 0 index 1 _Then
| |   | |-TypeVisibilityAttr 0x7fd30082d690 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fd30082d830 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:414:5, col:33> col:33 implicit struct conditional
| |   | `-TypedefDecl 0x7fd30082d8d8 <col:65, col:79> col:79 type '_Then'
| |   |   `-TemplateTypeParmType 0x7fd30082d2b0 '_Then' dependent depth 0 index 1
| |   |     `-TemplateTypeParm 0x7fd30082d268 '_Then'
| |   |-TypeAliasTemplateDecl 0x7fd30082ed30 <line:417:1, col:106> col:45 conditional_t
| |   | |-NonTypeTemplateParmDecl 0x7fd30082d960 <col:11, col:16> col:16 referenced '_Bool' depth 0 index 0 _Bp
| |   | |-TemplateTypeParmDecl 0x7fd30082d9b8 <col:21, col:27> col:27 referenced class depth 0 index 1 _If
| |   | |-TemplateTypeParmDecl 0x7fd30082da28 <col:32, col:38> col:38 referenced class depth 0 index 2 _Then
| |   | `-TypeAliasDecl 0x7fd30082ecd0 <col:45, col:106> col:51 conditional_t 'typename conditional<_Bp, _If, _Then>::type'
| |   |   `-DependentNameType 0x7fd30082ec60 'typename conditional<_Bp, _If, _Then>::type' dependent
| |   |-ClassTemplateDecl 0x7fd30082ef40 <line:420:1, col:74> col:56 __lazy_enable_if
| |   | |-NonTypeTemplateParmDecl 0x7fd30082ed90 <col:11> col:15 '_Bool' depth 0 index 0
| |   | |-TemplateTypeParmDecl 0x7fd30082ede8 <col:17, col:23> col:23 class depth 0 index 1 _Tp
| |   | `-CXXRecordDecl 0x7fd30082eea8 <col:28, col:74> col:56 struct __lazy_enable_if definition
| |   |   |-TypeVisibilityAttr 0x7fd30082f200 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd30082f248 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:420:28, col:56> col:56 implicit struct __lazy_enable_if
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd30082f510 <line:421:1, col:111> col:50 struct __lazy_enable_if definition
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fd30082f300 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fd30082f680 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fd30082f7f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:421:22, col:50> col:50 implicit struct __lazy_enable_if
| |   | `-TypedefDecl 0x7fd30082f970 <col:79, col:106> col:106 type 'typename _Tp::type'
| |   |   `-DependentNameType 0x7fd30082f900 'typename _Tp::type' dependent
| |   |-ClassTemplateDecl 0x7fd30082fbb0 <line:423:1, col:74> col:63 enable_if
| |   | |-NonTypeTemplateParmDecl 0x7fd30082f9f8 <col:11> col:15 '_Bool' depth 0 index 0
| |   | |-TemplateTypeParmDecl 0x7fd30082fa60 <col:17, col:29> col:23 class depth 0 index 1 _Tp
| |   | | `-TemplateArgument type 'void'
| |   | |-CXXRecordDecl 0x7fd30082fb18 <col:35, col:74> col:63 struct enable_if definition
| |   | | |-TypeVisibilityAttr 0x7fd30082fe70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | | `-CXXRecordDecl 0x7fd30082feb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:423:35, col:63> col:63 implicit struct enable_if
| |   | |-ClassTemplateSpecializationDecl 0x7fd3018cde80 <col:1, col:74> col:63 struct enable_if definition
| |   | | |-TemplateArgument integral 0
| |   | | |-TemplateArgument type 'double'
| |   | | `-CXXRecordDecl 0x7fd3018ce110 prev 0x7fd3018cde80 <col:35, col:63> col:63 implicit struct enable_if
| |   | |-ClassTemplateSpecializationDecl 0x7fd3008b8788 <col:1, col:74> col:63 struct enable_if definition
| |   | | |-TemplateArgument integral 0
| |   | | |-TemplateArgument type 'int'
| |   | | `-CXXRecordDecl 0x7fd3008b8a68 prev 0x7fd3008b8788 <col:35, col:63> col:63 implicit struct enable_if
| |   | |-ClassTemplateSpecializationDecl 0x7fd3008bab38 <col:1, col:74> col:63 struct enable_if definition
| |   | | |-TemplateArgument integral 0
| |   | | |-TemplateArgument type 'long long'
| |   | | `-CXXRecordDecl 0x7fd3008badd0 prev 0x7fd3008bab38 <col:35, col:63> col:63 implicit struct enable_if
| |   | `-ClassTemplateSpecializationDecl 0x7fd2ff912be8 <col:1, col:74> col:63 struct enable_if definition
| |   |   |-TemplateArgument integral 0
| |   |   |-TemplateArgument type 'long'
| |   |   `-CXXRecordDecl 0x7fd2ff912e80 prev 0x7fd2ff912be8 <col:35, col:63> col:63 implicit struct enable_if
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd300830180 <line:424:1, col:89> col:50 struct enable_if definition
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fd30082ff70 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fd3008302f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fd300830460 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:424:22, col:50> col:50 implicit struct enable_if
| |   | `-TypedefDecl 0x7fd300830508 <col:72, col:84> col:84 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fd30082ffb0 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fd30082ff70 '_Tp'
| |   |-TypeAliasTemplateDecl 0x7fd3008308a0 <line:427:1, col:89> col:39 enable_if_t
| |   | |-NonTypeTemplateParmDecl 0x7fd300830590 <col:11, col:16> col:16 referenced '_Bool' depth 0 index 0 _Bp
| |   | |-TemplateTypeParmDecl 0x7fd3008305f8 <col:21, col:33> col:27 referenced class depth 0 index 1 _Tp
| |   | | `-TemplateArgument type 'void'
| |   | `-TypeAliasDecl 0x7fd300830840 <col:39, col:89> col:45 enable_if_t 'typename enable_if<_Bp, _Tp>::type'
| |   |   `-DependentNameType 0x7fd3008307d0 'typename enable_if<_Bp, _Tp>::type' dependent
| |   |-FunctionTemplateDecl 0x7fd300830cc8 <line:433:1, line:440:1> line:437:1 addressof
| |   | |-TemplateTypeParmDecl 0x7fd3008308f0 <line:433:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fd300830c30 <line:434:1, line:440:1> line:437:1 addressof '_Tp *(_Tp &) noexcept' inline
| |   |   |-ParmVarDecl 0x7fd300830ab8 <col:11, col:16> col:16 referenced __x '_Tp &'
| |   |   |-CompoundStmt 0x7fd300831098 <line:438:1, line:440:1>
| |   |   | `-ReturnStmt 0x7fd300831080 <line:439:5, col:35>
| |   |   |   `-CallExpr 0x7fd300831050 <col:12, col:35> '<dependent type>'
| |   |   |     |-DeclRefExpr 0x7fd300831000 <col:12> '<builtin fn type>' Function 0x7fd300830ea8 '__builtin_addressof' 'void *(void &) noexcept'
| |   |   |     `-DeclRefExpr 0x7fd300831028 <col:32> '_Tp' lvalue ParmVar 0x7fd300830ab8 '__x' '_Tp &'
| |   |   |-AlwaysInlineAttr 0x7fd300830d20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   |-VisibilityAttr 0x7fd300830d68 <col:51, col:74> Hidden
| |   |   `-NoSanitizeAttr 0x7fd300830d78 <line:296:39, col:60> cfi
| |   |-FunctionTemplateDecl 0x7fd300831380 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:496:1, col:50> col:27 addressof
| |   | |-TemplateTypeParmDecl 0x7fd3008310b8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fd3008312e8 <col:22, col:50> col:27 addressof '_Tp *(const _Tp &&) noexcept' delete
| |   |   `-ParmVarDecl 0x7fd3008311a8 <col:37, col:46> col:48 'const _Tp &&'
| |   |-CXXRecordDecl 0x7fd3008313d8 <line:499:1, col:28> col:8 referenced struct __two definition
| |   | |-CXXRecordDecl 0x7fd3008314f8 <col:1, col:8> col:8 implicit struct __two
| |   | `-FieldDecl 0x7fd3008315d0 <col:15, col:26> col:20 __lx 'char [2]'
| |   |-ClassTemplateDecl 0x7fd3008317f8 <line:503:1, line:515:1> line:504:29 integral_constant
| |   | |-TemplateTypeParmDecl 0x7fd300831638 <line:503:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fd3008316b8 <col:22, col:26> col:26 referenced '_Tp' depth 0 index 1 __v
| |   | |-CXXRecordDecl 0x7fd300831760 <line:504:1, line:515:1> line:504:29 struct integral_constant definition
| |   | | |-TypeVisibilityAttr 0x7fd300831ac0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | | |-CXXRecordDecl 0x7fd300831b08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:504:1, col:29> col:29 implicit referenced struct integral_constant
| |   | | |-VarDecl 0x7fd301800000 <line:506:5, col:53> col:45 referenced value 'const _Tp' static constexpr cinit
| |   | | | `-DeclRefExpr 0x7fd301800060 <col:53> '_Tp' NonTypeTemplateParm 0x7fd3008316b8 '__v' '_Tp'
| |   | | |-TypedefDecl 0x7fd301800098 <line:507:5, col:31> col:31 referenced value_type '_Tp'
| |   | | | `-TemplateTypeParmType 0x7fd300831680 '_Tp' dependent depth 0 index 0
| |   | | |   `-TemplateTypeParm 0x7fd300831638 '_Tp'
| |   | | |-TypedefDecl 0x7fd301800100 <line:508:5, col:31> col:31 type 'integral_constant<_Tp, __v>'
| |   | | | `-InjectedClassNameType 0x7fd300831a30 'integral_constant<_Tp, __v>' dependent
| |   | | |   `-CXXRecord 0x7fd300831760 'integral_constant'
| |   | | |-CXXConversionDecl 0x7fd301800298 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:510:79> col:27 constexpr operator type-parameter-0-0 'std::__1::integral_constant::value_type (void) const noexcept'
| |   | | | |-CompoundStmt 0x7fd301800568 <col:65, col:79>
| |   | | | | `-ReturnStmt 0x7fd301800550 <col:66, col:73>
| |   | | | |   `-DeclRefExpr 0x7fd301800528 <col:73> 'const _Tp' lvalue Var 0x7fd301800000 'value' 'const _Tp'
| |   | | | |-AlwaysInlineAttr 0x7fd301800330 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | | `-VisibilityAttr 0x7fd301800378 <col:51, col:74> Hidden
| |   | | `-CXXMethodDecl 0x7fd3018003e8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:513:75> col:31 constexpr operator() 'std::__1::integral_constant::value_type (void) const noexcept'
| |   | |   |-CompoundStmt 0x7fd3018005c8 <col:61, col:75>
| |   | |   | `-ReturnStmt 0x7fd3018005b0 <col:62, col:69>
| |   | |   |   `-DeclRefExpr 0x7fd301800588 <col:69> 'const _Tp' lvalue Var 0x7fd301800000 'value' 'const _Tp'
| |   | |   |-AlwaysInlineAttr 0x7fd301800480 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | |   `-VisibilityAttr 0x7fd3018004c8 <col:51, col:74> Hidden
| |   | |-ClassTemplateSpecializationDecl 0x7fd301800aa8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:503:1, line:515:1> line:504:29 struct integral_constant definition
| |   | | |-TemplateArgument type '_Bool'
| |   | | |-TemplateArgument integral 1
| |   | | |-CXXRecordDecl 0x7fd301803058 prev 0x7fd301800aa8 <col:1, col:29> col:29 implicit struct integral_constant
| |   | | |-VarDecl 0x7fd301803100 <line:506:5, col:53> col:45 value 'const _Bool':'const _Bool' static constexpr cinit
| |   | | | `-SubstNonTypeTemplateParmExpr 0x7fd301803188 <col:53> '_Bool'
| |   | | |   `-CXXBoolLiteralExpr 0x7fd301803170 <col:53> '_Bool' true
| |   | | |-TypedefDecl 0x7fd301803218 <line:507:5, col:31> col:31 value_type '_Bool':'_Bool'
| |   | | | `-SubstTemplateTypeParmType 0x7fd301800a70 '_Bool' sugar
| |   | | |   |-TemplateTypeParmType 0x7fd300831680 '_Tp' dependent depth 0 index 0
| |   | | |   | `-TemplateTypeParm 0x7fd300831638 '_Tp'
| |   | | |   `-BuiltinType 0x7fd2ff832740 '_Bool'
| |   | | |-TypedefDecl 0x7fd301803280 <line:508:5, col:31> col:31 type 'struct std::__1::integral_constant<_Bool, true>'
| |   | | | `-RecordType 0x7fd301800bb0 'struct std::__1::integral_constant<_Bool, true>'
| |   | | |   `-ClassTemplateSpecialization 0x7fd301800aa8 'integral_constant'
| |   | | |-CXXConversionDecl 0x7fd301803368 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:510:79> col:27 constexpr operator bool 'std::__1::integral_constant<_Bool, true>::value_type (void) const noexcept'
| |   | | | `-AlwaysInlineAttr 0x7fd301803438 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-CXXMethodDecl 0x7fd3018034b0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:513:75> col:31 constexpr operator() 'std::__1::integral_constant<_Bool, true>::value_type (void) const noexcept'
| |   | |   `-AlwaysInlineAttr 0x7fd301803558 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | |-ClassTemplateSpecializationDecl 0x7fd301800d80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:503:1, line:515:1> line:504:29 struct integral_constant definition
| |   | | |-TemplateArgument type '_Bool'
| |   | | |-TemplateArgument integral 0
| |   | | |-CXXRecordDecl 0x7fd301801ea8 prev 0x7fd301800d80 <col:1, col:29> col:29 implicit struct integral_constant
| |   | | |-VarDecl 0x7fd301801f50 <line:506:5, col:53> col:45 referenced value 'const _Bool':'const _Bool' static constexpr cinit
| |   | | | `-SubstNonTypeTemplateParmExpr 0x7fd301801fd8 <col:53> '_Bool'
| |   | | |   `-CXXBoolLiteralExpr 0x7fd301801fc0 <col:53> '_Bool' false
| |   | | |-TypedefDecl 0x7fd301802068 <line:507:5, col:31> col:31 value_type '_Bool':'_Bool'
| |   | | | `-SubstTemplateTypeParmType 0x7fd301800a70 '_Bool' sugar
| |   | | |   |-TemplateTypeParmType 0x7fd300831680 '_Tp' dependent depth 0 index 0
| |   | | |   | `-TemplateTypeParm 0x7fd300831638 '_Tp'
| |   | | |   `-BuiltinType 0x7fd2ff832740 '_Bool'
| |   | | |-TypedefDecl 0x7fd3018020d0 <line:508:5, col:31> col:31 type 'struct std::__1::integral_constant<_Bool, false>'
| |   | | | `-RecordType 0x7fd301800e80 'struct std::__1::integral_constant<_Bool, false>'
| |   | | |   `-ClassTemplateSpecialization 0x7fd301800d80 'integral_constant'
| |   | | |-CXXConversionDecl 0x7fd301802208 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:510:79> col:27 constexpr operator bool 'std::__1::integral_constant<_Bool, false>::value_type (void) const noexcept'
| |   | | | `-AlwaysInlineAttr 0x7fd3018022d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-CXXMethodDecl 0x7fd301802350 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:513:75> col:31 constexpr operator() 'std::__1::integral_constant<_Bool, false>::value_type (void) const noexcept'
| |   | |   `-AlwaysInlineAttr 0x7fd301802c00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | `-ClassTemplateSpecializationDecl 0x7fd30184a300 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:503:1, line:515:1> line:504:29 struct integral_constant definition
| |   |   |-TemplateArgument type 'unsigned long'
| |   |   |-TemplateArgument integral 0
| |   |   |-CXXRecordDecl 0x7fd30184a530 prev 0x7fd30184a300 <col:1, col:29> col:29 implicit struct integral_constant
| |   |   |-VarDecl 0x7fd30184a600 <line:506:5, col:53> col:45 value 'const unsigned long':'const unsigned long' static constexpr cinit
| |   |   | `-SubstNonTypeTemplateParmExpr 0x7fd30184a690 <col:53> 'unsigned long'
| |   |   |   `-IntegerLiteral 0x7fd30184a670 <col:53> 'unsigned long' 0
| |   |   |-TypedefDecl 0x7fd30184a720 <line:507:5, col:31> col:31 value_type 'unsigned long':'unsigned long'
| |   |   | `-SubstTemplateTypeParmType 0x7fd30184a2b0 'unsigned long' sugar
| |   |   |   |-TemplateTypeParmType 0x7fd300831680 '_Tp' dependent depth 0 index 0
| |   |   |   | `-TemplateTypeParm 0x7fd300831638 '_Tp'
| |   |   |   `-BuiltinType 0x7fd2ff832880 'unsigned long'
| |   |   |-TypedefDecl 0x7fd30184a788 <line:508:5, col:31> col:31 type 'struct std::__1::integral_constant<unsigned long, 0>'
| |   |   | `-RecordType 0x7fd30184a400 'struct std::__1::integral_constant<unsigned long, 0>'
| |   |   |   `-ClassTemplateSpecialization 0x7fd30184a300 'integral_constant'
| |   |   |-CXXConversionDecl 0x7fd30184a8b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:510:79> col:27 constexpr operator unsigned long 'std::__1::integral_constant<unsigned long, 0>::value_type (void) const noexcept'
| |   |   | `-AlwaysInlineAttr 0x7fd30184a988 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-CXXMethodDecl 0x7fd30184aa00 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:513:75> col:31 constexpr operator() 'std::__1::integral_constant<unsigned long, 0>::value_type (void) const noexcept'
| |   |     `-AlwaysInlineAttr 0x7fd30184aaa8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |-VarDecl 0x7fd301800970 parent 0x7fd300831760 prev 0x7fd301800000 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:517:1, line:518:58> col:58 value 'const _Tp' constexpr
| |   |-TypedefDecl 0x7fd301800cc0 <line:528:1, col:38> col:38 referenced true_type 'integral_constant<_Bool, (true)>':'struct std::__1::integral_constant<_Bool, true>'
| |   | `-TemplateSpecializationType 0x7fd301800bd0 'integral_constant<_Bool, (true)>' sugar integral_constant
| |   |   |-TemplateArgument type '_Bool'
| |   |   |-TemplateArgument expr
| |   |   | `-ParenExpr 0x7fd301800a38 <line:525:59, col:63> '_Bool'
| |   |   |   `-CXXBoolLiteralExpr 0x7fd301800a20 <line:528:31> '_Bool' true
| |   |   `-RecordType 0x7fd301800bb0 'struct std::__1::integral_constant<_Bool, true>'
| |   |     `-ClassTemplateSpecialization 0x7fd301800aa8 'integral_constant'
| |   |-TypedefDecl 0x7fd301800f90 <line:529:1, col:38> col:38 referenced false_type 'integral_constant<_Bool, (false)>':'struct std::__1::integral_constant<_Bool, false>'
| |   | `-TemplateSpecializationType 0x7fd301800ea0 'integral_constant<_Bool, (false)>' sugar integral_constant
| |   |   |-TemplateArgument type '_Bool'
| |   |   |-TemplateArgument expr
| |   |   | `-ParenExpr 0x7fd301800d40 <line:525:59, col:63> '_Bool'
| |   |   |   `-CXXBoolLiteralExpr 0x7fd301800d28 <line:529:31> '_Bool' false
| |   |   `-RecordType 0x7fd301800e80 'struct std::__1::integral_constant<_Bool, false>'
| |   |     `-ClassTemplateSpecialization 0x7fd301800d80 'integral_constant'
| |   |-ClassTemplateDecl 0x7fd3018015b0 <line:535:1, line:536:8> col:8 __lazy_and_impl
| |   | |-NonTypeTemplateParmDecl 0x7fd301801400 <line:535:11, col:16> col:16 '_Bool' depth 0 index 0 _Last
| |   | |-TemplateTypeParmDecl 0x7fd301801458 <col:23, col:32> col:32 class depth 0 index 1 ... _Preds
| |   | |-CXXRecordDecl 0x7fd301801518 <line:536:1, col:8> col:8 struct __lazy_and_impl
| |   | `-ClassTemplateSpecialization 0x7fd301802d78 '__lazy_and_impl'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd301801b50 <line:538:1, line:539:56> col:8 struct __lazy_and_impl definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0...'
| |   | |-TemplateTypeParmDecl 0x7fd301801898 <line:538:11, col:20> col:20 referenced class depth 0 index 0 ... _Preds
| |   | `-CXXRecordDecl 0x7fd301802c98 <line:539:1, col:8> col:8 implicit struct __lazy_and_impl
| |   |-ClassTemplateSpecializationDecl 0x7fd301802d78 <line:541:1, line:542:43> col:8 struct __lazy_and_impl definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument pack
| |   | `-CXXRecordDecl 0x7fd3018035f0 <col:1, col:8> col:8 implicit struct __lazy_and_impl
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd3018038c0 <line:544:1, line:545:84> col:8 struct __lazy_and_impl definition
| |   | |-public 'integral_constant<_Bool, _Pred::type::value>'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fd3018036a8 <line:544:11, col:17> col:17 referenced class depth 0 index 0 _Pred
| |   | `-CXXRecordDecl 0x7fd3018041f8 <line:545:1, col:8> col:8 implicit struct __lazy_and_impl
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd3018045e0 <line:547:1, line:548:88> col:8 struct __lazy_and_impl definition
| |   | |-public '__lazy_and_impl<_Hp::type::value, _Tp...>'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | `-TemplateArgument type 'type-parameter-0-1...'
| |   | |-TemplateTypeParmDecl 0x7fd3018042b0 <line:547:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-TemplateTypeParmDecl 0x7fd301804318 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Tp
| |   | `-CXXRecordDecl 0x7fd301804b78 <line:548:1, col:8> col:8 implicit struct __lazy_and_impl
| |   |-ClassTemplateDecl 0x7fd301804dc0 <line:550:1, line:551:64> col:8 __lazy_and
| |   | |-TemplateTypeParmDecl 0x7fd301804c30 <line:550:11, col:17> col:17 class depth 0 index 0 _P1
| |   | |-TemplateTypeParmDecl 0x7fd301804c98 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Pr
| |   | `-CXXRecordDecl 0x7fd301804d28 <line:551:1, col:64> col:8 struct __lazy_and definition
| |   |   |-public '__lazy_and_impl<_P1::type::value, _Pr...>'
| |   |   `-CXXRecordDecl 0x7fd3018052f8 <col:1, col:8> col:8 implicit struct __lazy_and
| |   |-ClassTemplateDecl 0x7fd301805540 <line:555:1, line:556:8> col:8 __lazy_or_impl
| |   | |-NonTypeTemplateParmDecl 0x7fd3018053c0 <line:555:11, col:16> col:16 '_Bool' depth 0 index 0 _List
| |   | |-TemplateTypeParmDecl 0x7fd301805418 <col:23, col:32> col:32 class depth 0 index 1 ... _Preds
| |   | |-CXXRecordDecl 0x7fd3018054a8 <line:556:1, col:8> col:8 struct __lazy_or_impl
| |   | `-ClassTemplateSpecialization 0x7fd301805e30 '__lazy_or_impl'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd301805a50 <line:558:1, line:559:53> col:8 struct __lazy_or_impl definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0...'
| |   | |-TemplateTypeParmDecl 0x7fd3018057f8 <line:558:11, col:20> col:20 referenced class depth 0 index 0 ... _Preds
| |   | `-CXXRecordDecl 0x7fd301805d50 <line:559:1, col:8> col:8 implicit struct __lazy_or_impl
| |   |-ClassTemplateSpecializationDecl 0x7fd301805e30 <line:561:1, line:562:44> col:8 struct __lazy_or_impl definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument pack
| |   | `-CXXRecordDecl 0x7fd3018060b8 <col:1, col:8> col:8 implicit struct __lazy_or_impl
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd3018064a0 <line:564:1, line:566:53> line:565:8 struct __lazy_or_impl definition
| |   | |-public '__lazy_or_impl<_Hp::type::value, _Tp...>'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | `-TemplateArgument type 'type-parameter-0-1...'
| |   | |-TemplateTypeParmDecl 0x7fd301806170 <line:564:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-TemplateTypeParmDecl 0x7fd3018061d8 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Tp
| |   | `-CXXRecordDecl 0x7fd301806a38 <line:565:1, col:8> col:8 implicit struct __lazy_or_impl
| |   |-ClassTemplateDecl 0x7fd301806c80 <line:568:1, line:569:62> col:8 __lazy_or
| |   | |-TemplateTypeParmDecl 0x7fd301806af0 <line:568:11, col:17> col:17 class depth 0 index 0 _P1
| |   | |-TemplateTypeParmDecl 0x7fd301806b58 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Pr
| |   | `-CXXRecordDecl 0x7fd301806be8 <line:569:1, col:62> col:8 struct __lazy_or definition
| |   |   |-public '__lazy_or_impl<_P1::type::value, _Pr...>'
| |   |   `-CXXRecordDecl 0x7fd301807188 <col:1, col:8> col:8 implicit struct __lazy_or
| |   |-ClassTemplateDecl 0x7fd301807358 <line:573:1, line:574:67> col:8 __lazy_not
| |   | |-TemplateTypeParmDecl 0x7fd301807240 <line:573:11, col:17> col:17 class depth 0 index 0 _Pred
| |   | `-CXXRecordDecl 0x7fd3018072c0 <line:574:1, col:67> col:8 struct __lazy_not definition
| |   |   |-public 'integral_constant<_Bool, !_Pred::type::value>'
| |   |   `-CXXRecordDecl 0x7fd301807818 <col:1, col:8> col:8 implicit struct __lazy_not
| |   |-ClassTemplateDecl 0x7fd3018079e8 <line:577:1, col:27> col:27 __and_
| |   | |-TemplateTypeParmDecl 0x7fd3018078d0 <col:10> col:10 class depth 0 index 0 ...
| |   | |-CXXRecordDecl 0x7fd301807950 <col:20, col:27> col:27 struct __and_
| |   | `-ClassTemplateSpecialization 0x7fd301807c68 '__and_'
| |   |-ClassTemplateSpecializationDecl 0x7fd301807c68 <line:578:1, col:41> col:19 struct __and_ definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument pack
| |   | `-CXXRecordDecl 0x7fd301807ea0 <col:12, col:19> col:19 implicit struct __and_
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd301808108 <line:580:1, col:47> col:28 struct __and_ definition
| |   | |-public '_B0'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fd301807f58 <col:10, col:16> col:16 referenced class depth 0 index 0 _B0
| |   | `-CXXRecordDecl 0x7fd3018083b0 <col:21, col:28> col:28 implicit struct __and_
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd3018086f8 <line:582:1, line:583:68> col:8 struct __and_ definition
| |   | |-public 'conditional<_B0::value, _B1, _B0>::type'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | `-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateTypeParmDecl 0x7fd301808468 <line:582:10, col:16> col:16 referenced class depth 0 index 0 _B0
| |   | |-TemplateTypeParmDecl 0x7fd3018084d8 <col:21, col:27> col:27 referenced class depth 0 index 1 _B1
| |   | `-CXXRecordDecl 0x7fd301808d00 <line:583:1, col:8> col:8 implicit struct __and_
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd3018092b8 <line:585:1, line:587:73> line:586:8 struct __and_ definition
| |   | |-public 'conditional<_B0::value, __and_<_B1, _B2, _Bn...>, _B0>::type'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | |-TemplateArgument type 'type-parameter-0-1'
| |   | | |-TemplateArgument type 'type-parameter-0-2'
| |   | | `-TemplateArgument type 'type-parameter-0-3...'
| |   | |-TemplateTypeParmDecl 0x7fd301808db8 <line:585:10, col:16> col:16 referenced class depth 0 index 0 _B0
| |   | |-TemplateTypeParmDecl 0x7fd301808e28 <col:21, col:27> col:27 referenced class depth 0 index 1 _B1
| |   | |-TemplateTypeParmDecl 0x7fd301808e98 <col:32, col:38> col:38 referenced class depth 0 index 2 _B2
| |   | |-TemplateTypeParmDecl 0x7fd301808f08 <col:43, col:52> col:52 referenced class depth 0 index 3 ... _Bn
| |   | `-CXXRecordDecl 0x7fd301809bf0 <line:586:1, col:8> col:8 implicit struct __and_
| |   |-ClassTemplateDecl 0x7fd301809dc8 <line:590:1, col:27> col:27 __or_
| |   | |-TemplateTypeParmDecl 0x7fd301809ca8 <col:10> col:10 class depth 0 index 0 ...
| |   | |-CXXRecordDecl 0x7fd301809d30 <col:20, col:27> col:27 struct __or_
| |   | `-ClassTemplateSpecialization 0x7fd30180a088 '__or_'
| |   |-ClassTemplateSpecializationDecl 0x7fd30180a088 <line:591:1, col:41> col:19 struct __or_ definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument pack
| |   | `-CXXRecordDecl 0x7fd30180a2c0 <col:12, col:19> col:19 implicit struct __or_
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd30180a518 <line:593:1, col:46> col:28 struct __or_ definition
| |   | |-public '_B0'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fd30180a378 <col:10, col:16> col:16 referenced class depth 0 index 0 _B0
| |   | `-CXXRecordDecl 0x7fd30180a7c0 <col:21, col:28> col:28 implicit struct __or_
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd30180ab08 <line:595:1, line:596:67> col:8 struct __or_ definition
| |   | |-public 'conditional<_B0::value, _B0, _B1>::type'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | `-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateTypeParmDecl 0x7fd30180a878 <line:595:10, col:16> col:16 referenced class depth 0 index 0 _B0
| |   | |-TemplateTypeParmDecl 0x7fd30180a8e8 <col:21, col:27> col:27 referenced class depth 0 index 1 _B1
| |   | `-CXXRecordDecl 0x7fd30180b110 <line:596:1, col:8> col:8 implicit struct __or_
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd30180b668 <line:598:1, line:600:73> line:599:8 struct __or_ definition
| |   | |-public 'conditional<_B0::value, _B0, __or_<_B1, _B2, _Bn...> >::type'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | |-TemplateArgument type 'type-parameter-0-1'
| |   | | |-TemplateArgument type 'type-parameter-0-2'
| |   | | `-TemplateArgument type 'type-parameter-0-3...'
| |   | |-TemplateTypeParmDecl 0x7fd30180b1c8 <line:598:10, col:16> col:16 referenced class depth 0 index 0 _B0
| |   | |-TemplateTypeParmDecl 0x7fd30180b238 <col:21, col:27> col:27 referenced class depth 0 index 1 _B1
| |   | |-TemplateTypeParmDecl 0x7fd30180b2a8 <col:32, col:38> col:38 referenced class depth 0 index 2 _B2
| |   | |-TemplateTypeParmDecl 0x7fd30180b318 <col:43, col:52> col:52 referenced class depth 0 index 3 ... _Bn
| |   | `-CXXRecordDecl 0x7fd30180d000 <line:599:1, col:8> col:8 implicit struct __or_
| |   |-ClassTemplateDecl 0x7fd30180d1d8 <line:603:1, line:604:71> col:8 __not_
| |   | |-TemplateTypeParmDecl 0x7fd30180d0b8 <line:603:10, col:16> col:16 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd30180d140 <line:604:1, col:71> col:8 struct __not_ definition
| |   |   |-public 'conditional<_Tp::value, false_type, true_type>::type'
| |   |   `-CXXRecordDecl 0x7fd30180d780 <col:1, col:8> col:8 implicit struct __not_
| |   |-ClassTemplateDecl 0x7fd30180d988 <line:610:1, col:91> col:50 is_const
| |   | |-TemplateTypeParmDecl 0x7fd30180d838 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd30180d8f0 <col:22, col:91> col:50 struct is_const definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TypeVisibilityAttr 0x7fd30180dc00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd30180dc88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:610:22, col:50> col:50 implicit struct is_const
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd30180ded8 <line:611:1, col:90> col:50 struct is_const definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'const type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fd30180dd40 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fd30180e038 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fd30180e1b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:611:22, col:50> col:50 implicit struct is_const
| |   |-ClassTemplateDecl 0x7fd30180e3b8 <line:620:1, col:97> col:50 is_volatile
| |   | |-TemplateTypeParmDecl 0x7fd30180e268 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd30180e320 <col:22, col:97> col:50 struct is_volatile definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TypeVisibilityAttr 0x7fd30180e630 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd30180e6b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:620:22, col:50> col:50 implicit struct is_volatile
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd30180e908 <line:621:1, col:96> col:50 struct is_volatile definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'volatile type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fd30180e770 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fd30180ea48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fd30180ebc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:621:22, col:50> col:50 implicit struct is_volatile
| |   |-ClassTemplateDecl 0x7fd30180edc8 <line:630:1, col:92> col:50 remove_const
| |   | |-TemplateTypeParmDecl 0x7fd30180ec78 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fd30180ed30 <col:22, col:92> col:50 struct remove_const definition
| |   | | |-TypeVisibilityAttr 0x7fd301811068 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | | |-CXXRecordDecl 0x7fd3018110b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:630:22, col:50> col:50 implicit struct remove_const
| |   | | `-TypedefDecl 0x7fd301811158 <col:75, col:87> col:87 type '_Tp'
| |   | |   `-TemplateTypeParmType 0x7fd30180ecc0 '_Tp' dependent depth 0 index 0
| |   | |     `-TemplateTypeParm 0x7fd30180ec78 '_Tp'
| |   | `-ClassTemplateSpecializationDecl 0x7fd301896138 <col:1, col:92> col:50 struct remove_const definition
| |   |   |-TemplateArgument type 'double'
| |   |   |-CXXRecordDecl 0x7fd301896380 prev 0x7fd301896138 <col:22, col:50> col:50 implicit struct remove_const
| |   |   `-TypedefDecl 0x7fd301896458 <col:75, col:87> col:87 referenced type 'double':'double'
| |   |     `-SubstTemplateTypeParmType 0x7fd301896420 'double' sugar
| |   |       |-TemplateTypeParmType 0x7fd30180ecc0 '_Tp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fd30180ec78 '_Tp'
| |   |       `-BuiltinType 0x7fd2ff8328e0 'double'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd301811368 <line:631:1, col:92> col:50 struct remove_const definition
| |   | |-TemplateArgument type 'const type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fd3018111d0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fd3018114a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fd3018115e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:631:22, col:50> col:50 implicit struct remove_const
| |   | `-TypedefDecl 0x7fd301811688 <col:75, col:87> col:87 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fd301811210 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fd3018111d0 '_Tp'
| |   |-TypeAliasTemplateDecl 0x7fd301811940 <line:633:1, col:73> col:22 remove_const_t
| |   | |-TemplateTypeParmDecl 0x7fd301811700 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fd3018118e0 <col:22, col:73> col:28 remove_const_t 'typename remove_const<_Tp>::type'
| |   |   `-DependentNameType 0x7fd301811870 'typename remove_const<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fd301811ad8 <line:638:1, col:98> col:50 remove_volatile
| |   | |-TemplateTypeParmDecl 0x7fd301811990 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fd301811a40 <col:22, col:98> col:50 struct remove_volatile definition
| |   | | |-TypeVisibilityAttr 0x7fd301811d50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | | |-CXXRecordDecl 0x7fd301811d98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:638:22, col:50> col:50 implicit struct remove_volatile
| |   | | `-TypedefDecl 0x7fd301811e40 <col:81, col:93> col:93 type '_Tp'
| |   | |   `-TemplateTypeParmType 0x7fd3018119d0 '_Tp' dependent depth 0 index 0
| |   | |     `-TemplateTypeParm 0x7fd301811990 '_Tp'
| |   | `-ClassTemplateSpecializationDecl 0x7fd301896540 <col:1, col:98> col:50 struct remove_volatile definition
| |   |   |-TemplateArgument type 'double'
| |   |   |-CXXRecordDecl 0x7fd3018cd590 prev 0x7fd301896540 <col:22, col:50> col:50 implicit struct remove_volatile
| |   |   `-TypedefDecl 0x7fd3018cd668 <col:81, col:93> col:93 referenced type 'double':'double'
| |   |     `-SubstTemplateTypeParmType 0x7fd3018cd630 'double' sugar
| |   |       |-TemplateTypeParmType 0x7fd3018119d0 '_Tp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fd301811990 '_Tp'
| |   |       `-BuiltinType 0x7fd2ff8328e0 'double'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd301812088 <line:639:1, col:98> col:50 struct remove_volatile definition
| |   | |-TemplateArgument type 'volatile type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fd301811eb8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fd3018121c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fd301812300 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:639:22, col:50> col:50 implicit struct remove_volatile
| |   | `-TypedefDecl 0x7fd3018123a8 <col:81, col:93> col:93 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fd301811f00 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fd301811eb8 '_Tp'
| |   |-TypeAliasTemplateDecl 0x7fd301812660 <line:641:1, col:79> col:22 remove_volatile_t
| |   | |-TemplateTypeParmDecl 0x7fd301812420 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fd301812600 <col:22, col:79> col:28 remove_volatile_t 'typename remove_volatile<_Tp>::type'
| |   |   `-DependentNameType 0x7fd301812590 'typename remove_volatile<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fd3018127f8 <line:646:1, line:647:80> line:646:50 remove_cv
| |   | |-TemplateTypeParmDecl 0x7fd3018126b0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fd301812760 <col:22, line:647:80> line:646:50 struct remove_cv definition
| |   | | |-TypeVisibilityAttr 0x7fd301812a70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | | |-CXXRecordDecl 0x7fd301812ab8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:646:22, col:50> col:50 implicit struct remove_cv
| |   | | `-TypedefDecl 0x7fd301812e10 <line:647:2, col:75> col:75 type 'typename remove_volatile<typename remove_const<_Tp>::type>::type'
| |   | |   `-DependentNameType 0x7fd301812da0 'typename remove_volatile<typename remove_const<_Tp>::type>::type' dependent
| |   | `-ClassTemplateSpecializationDecl 0x7fd301895e58 <line:646:1, line:647:80> line:646:50 struct remove_cv definition
| |   |   |-TemplateArgument type 'double'
| |   |   |-CXXRecordDecl 0x7fd301896068 prev 0x7fd301895e58 <col:22, col:50> col:50 implicit struct remove_cv
| |   |   `-TypedefDecl 0x7fd3018cd750 <line:647:2, col:75> col:75 referenced type 'typename remove_volatile<typename remove_const<double>::type>::type':'double'
| |   |     `-ElaboratedType 0x7fd3018cd700 'typename remove_volatile<typename remove_const<double>::type>::type' sugar
| |   |       `-TypedefType 0x7fd3018cd6e0 'std::__1::remove_volatile<double>::type' sugar
| |   |         |-Typedef 0x7fd3018cd668 'type'
| |   |         `-SubstTemplateTypeParmType 0x7fd3018cd630 'double' sugar
| |   |           |-TemplateTypeParmType 0x7fd3018119d0 '_Tp' dependent depth 0 index 0
| |   |           | `-TemplateTypeParm 0x7fd301811990 '_Tp'
| |   |           `-BuiltinType 0x7fd2ff8328e0 'double'
| |   |-TypeAliasTemplateDecl 0x7fd3018130d0 <line:649:1, col:67> col:22 remove_cv_t
| |   | |-TemplateTypeParmDecl 0x7fd301812e88 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fd301813070 <col:22, col:67> col:28 remove_cv_t 'typename remove_cv<_Tp>::type'
| |   |   `-DependentNameType 0x7fd301813000 'typename remove_cv<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fd301813238 <line:654:1, col:73> col:29 __libcpp_is_void
| |   | |-TemplateTypeParmDecl 0x7fd301813120 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fd3018131a0 <col:22, col:73> col:29 struct __libcpp_is_void definition
| |   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | | `-CXXRecordDecl 0x7fd3018134f0 <col:22, col:29> col:29 implicit struct __libcpp_is_void
| |   | `-ClassTemplateSpecialization 0x7fd3018135c8 '__libcpp_is_void'
| |   |-ClassTemplateSpecializationDecl 0x7fd3018135c8 <line:655:1, col:72> col:29 struct __libcpp_is_void definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'void'
| |   | `-CXXRecordDecl 0x7fd301813830 <col:22, col:29> col:29 implicit struct __libcpp_is_void
| |   |-ClassTemplateDecl 0x7fd301813a38 <line:657:1, line:658:63> line:657:50 is_void
| |   | |-TemplateTypeParmDecl 0x7fd3018138e8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd3018139a0 <col:22, line:658:63> line:657:50 struct is_void definition
| |   |   |-public '__libcpp_is_void<typename remove_cv<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fd301813cb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd301813f18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:657:22, col:50> col:50 implicit struct is_void
| |   |-ClassTemplateDecl 0x7fd301814518 <line:667:1, col:76> col:29 __is_nullptr_t_impl
| |   | |-TemplateTypeParmDecl 0x7fd301814400 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fd301814480 <col:22, col:76> col:29 struct __is_nullptr_t_impl definition
| |   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | | `-CXXRecordDecl 0x7fd3018147d0 <col:22, col:29> col:29 implicit struct __is_nullptr_t_impl
| |   | `-ClassTemplateSpecialization 0x7fd3018148d0 '__is_nullptr_t_impl'
| |   |-ClassTemplateSpecializationDecl 0x7fd3018148d0 <line:668:1, col:80> col:29 struct __is_nullptr_t_impl definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'nullptr_t'
| |   | `-CXXRecordDecl 0x7fd301814b40 <col:22, col:29> col:29 implicit struct __is_nullptr_t_impl
| |   |-ClassTemplateDecl 0x7fd301814d48 <line:670:1, line:671:66> line:670:50 __is_nullptr_t
| |   | |-TemplateTypeParmDecl 0x7fd301814bf8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd301814cb0 <col:22, line:671:66> line:670:50 struct __is_nullptr_t definition
| |   |   |-public '__is_nullptr_t_impl<typename remove_cv<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fd301814fc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd301815228 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:670:22, col:50> col:50 implicit struct __is_nullptr_t
| |   |-ClassTemplateDecl 0x7fd301815498 <line:674:1, line:675:66> line:674:50 is_null_pointer
| |   | |-TemplateTypeParmDecl 0x7fd3018152e0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd301815400 <col:22, line:675:66> line:674:50 struct is_null_pointer definition
| |   |   |-public '__is_nullptr_t_impl<typename remove_cv<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fd301815710 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd301815928 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:674:22, col:50> col:50 implicit struct is_null_pointer
| |   |-ClassTemplateDecl 0x7fd301815af8 <line:685:1, col:91> col:29 __libcpp_is_integral
| |   | |-TemplateTypeParmDecl 0x7fd3018159e0 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fd301815a60 <col:22, col:91> col:29 struct __libcpp_is_integral definition
| |   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | | `-CXXRecordDecl 0x7fd301815db0 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   | |-ClassTemplateSpecialization 0x7fd301815e88 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fd3018161c8 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fd301816510 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fd301816860 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fd301816ba8 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fd301816ee8 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fd301817228 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fd301817588 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fd3018178d0 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fd301817c20 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fd301817f70 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fd3018182c0 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fd301818610 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fd301818960 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fd301818cb0 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fd301819020 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fd301819400 '__libcpp_is_integral'
| |   | `-ClassTemplateSpecializationDecl 0x7fd3018cd840 <col:1, col:91> col:29 struct __libcpp_is_integral definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TemplateArgument type 'double'
| |   |   `-CXXRecordDecl 0x7fd3018cda60 prev 0x7fd3018cd840 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fd301815e88 <line:686:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type '_Bool'
| |   | `-CXXRecordDecl 0x7fd3018160f0 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fd3018161c8 <line:687:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'char'
| |   | `-CXXRecordDecl 0x7fd301816430 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fd301816510 <line:688:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'signed char'
| |   | `-CXXRecordDecl 0x7fd301816780 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fd301816860 <line:689:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'unsigned char'
| |   | `-CXXRecordDecl 0x7fd301816ad0 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fd301816ba8 <line:690:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'wchar_t'
| |   | `-CXXRecordDecl 0x7fd301816e10 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fd301816ee8 <line:692:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'char16_t'
| |   | `-CXXRecordDecl 0x7fd301817150 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fd301817228 <line:693:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'char32_t'
| |   | `-CXXRecordDecl 0x7fd3018174a8 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fd301817588 <line:695:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'short'
| |   | `-CXXRecordDecl 0x7fd3018177f0 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fd3018178d0 <line:696:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'unsigned short'
| |   | `-CXXRecordDecl 0x7fd301817b40 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fd301817c20 <line:697:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'int'
| |   | `-CXXRecordDecl 0x7fd301817e90 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fd301817f70 <line:698:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'unsigned int'
| |   | `-CXXRecordDecl 0x7fd3018181e0 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fd3018182c0 <line:699:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'long'
| |   | `-CXXRecordDecl 0x7fd301818530 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fd301818610 <line:700:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'unsigned long'
| |   | `-CXXRecordDecl 0x7fd301818880 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fd301818960 <line:701:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'long long'
| |   | `-CXXRecordDecl 0x7fd301818bd0 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fd301818cb0 <line:702:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'unsigned long long'
| |   | `-CXXRecordDecl 0x7fd301818f20 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fd301819020 <line:704:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type '__int128'
| |   | `-CXXRecordDecl 0x7fd301819290 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fd301819400 <line:705:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'unsigned __int128'
| |   | `-CXXRecordDecl 0x7fd301819670 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateDecl 0x7fd301819878 <line:708:1, line:709:67> line:708:50 is_integral
| |   | |-TemplateTypeParmDecl 0x7fd301819728 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fd3018197e0 <col:22, line:709:67> line:708:50 struct is_integral definition
| |   | | |-public '__libcpp_is_integral<typename remove_cv<_Tp>::type>'
| |   | | |-TypeVisibilityAttr 0x7fd301819af0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | | `-CXXRecordDecl 0x7fd301819d58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:708:22, col:50> col:50 implicit struct is_integral
| |   | `-ClassTemplateSpecializationDecl 0x7fd301895c08 <col:1, line:709:67> line:708:50 struct is_integral definition
| |   |   |-public '__libcpp_is_integral<typename remove_cv<double>::type>':'struct std::__1::__libcpp_is_integral<double>'
| |   |   |-TemplateArgument type 'double'
| |   |   `-CXXRecordDecl 0x7fd3018cdb48 prev 0x7fd301895c08 <col:22, col:50> col:50 implicit struct is_integral
| |   |-ClassTemplateDecl 0x7fd301819f28 <line:718:1, col:90> col:29 __libcpp_is_floating_point
| |   | |-TemplateTypeParmDecl 0x7fd301819e10 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fd301819e90 <col:22, col:90> col:29 struct __libcpp_is_floating_point definition
| |   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | | `-CXXRecordDecl 0x7fd30181a1e0 <col:22, col:29> col:29 implicit struct __libcpp_is_floating_point
| |   | |-ClassTemplateSpecialization 0x7fd30181a2c0 '__libcpp_is_floating_point'
| |   | |-ClassTemplateSpecialization 0x7fd30181a610 '__libcpp_is_floating_point'
| |   | `-ClassTemplateSpecialization 0x7fd30181a960 '__libcpp_is_floating_point'
| |   |-ClassTemplateSpecializationDecl 0x7fd30181a2c0 <line:719:1, col:89> col:29 struct __libcpp_is_floating_point definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'float'
| |   | `-CXXRecordDecl 0x7fd30181a530 <col:22, col:29> col:29 implicit struct __libcpp_is_floating_point
| |   |-ClassTemplateSpecializationDecl 0x7fd30181a610 <line:720:1, col:89> col:29 struct __libcpp_is_floating_point definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'double'
| |   | `-CXXRecordDecl 0x7fd30181a880 <col:22, col:29> col:29 implicit struct __libcpp_is_floating_point
| |   |-ClassTemplateSpecializationDecl 0x7fd30181a960 <line:721:1, col:89> col:29 struct __libcpp_is_floating_point definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'long double'
| |   | `-CXXRecordDecl 0x7fd30181abd0 <col:22, col:29> col:29 implicit struct __libcpp_is_floating_point
| |   |-ClassTemplateDecl 0x7fd30181add8 <line:723:1, line:724:73> line:723:50 is_floating_point
| |   | |-TemplateTypeParmDecl 0x7fd30181ac88 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd30181ad40 <col:22, line:724:73> line:723:50 struct is_floating_point definition
| |   |   |-public '__libcpp_is_floating_point<typename remove_cv<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fd30181b050 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd30181b2b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:723:22, col:50> col:50 implicit struct is_floating_point
| |   |-ClassTemplateDecl 0x7fd30181b4c8 <line:733:1, line:734:26> line:733:50 is_array
| |   | |-TemplateTypeParmDecl 0x7fd30181b370 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd30181b430 <col:22, line:734:26> line:733:50 struct is_array definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TypeVisibilityAttr 0x7fd30181b740 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd30181b7c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:733:22, col:50> col:50 implicit struct is_array
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd30181ba88 <line:735:1, line:736:25> line:735:50 struct is_array definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 []'
| |   | |-TemplateTypeParmDecl 0x7fd30181b880 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fd30181bbd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fd30181bd50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:735:22, col:50> col:50 implicit struct is_array
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd30181c0f8 <line:737:1, line:738:25> line:737:62 struct is_array definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
| |   | |-TemplateTypeParmDecl 0x7fd30181be08 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fd30181beb0 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Np
| |   | |-TypeVisibilityAttr 0x7fd30181c248 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fd30181c400 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:737:34, col:62> col:62 implicit struct is_array
| |   |-ClassTemplateDecl 0x7fd30181c5d8 <line:747:1, col:76> col:29 __libcpp_is_pointer
| |   | |-TemplateTypeParmDecl 0x7fd30181c4b8 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd30181c540 <col:22, col:76> col:29 struct __libcpp_is_pointer definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   `-CXXRecordDecl 0x7fd30181c890 <col:22, col:29> col:29 implicit struct __libcpp_is_pointer
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd30181cae8 <line:748:1, col:75> col:29 struct __libcpp_is_pointer definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 *'
| |   | |-TemplateTypeParmDecl 0x7fd30181c948 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd30181cd60 <col:22, col:29> col:29 implicit struct __libcpp_is_pointer
| |   |-ClassTemplateDecl 0x7fd30181cf68 <line:750:1, line:751:66> line:750:50 is_pointer
| |   | |-TemplateTypeParmDecl 0x7fd30181ce18 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd30181ced0 <col:22, line:751:66> line:750:50 struct is_pointer definition
| |   |   |-public '__libcpp_is_pointer<typename remove_cv<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fd30181d1e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd30181e260 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:750:22, col:50> col:50 implicit struct is_pointer
| |   |-ClassTemplateDecl 0x7fd30181e468 <line:760:1, col:97> col:50 is_lvalue_reference
| |   | |-TemplateTypeParmDecl 0x7fd30181e318 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd30181e3d0 <col:22, col:97> col:50 struct is_lvalue_reference definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TypeVisibilityAttr 0x7fd30181e6e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd30181e768 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:760:22, col:50> col:50 implicit struct is_lvalue_reference
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd30181e9e8 <line:761:1, col:96> col:50 struct is_lvalue_reference definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateTypeParmDecl 0x7fd30181e820 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fd30181eb28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fd30181eca0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:761:22, col:50> col:50 implicit struct is_lvalue_reference
| |   |-ClassTemplateDecl 0x7fd30181eea8 <line:763:1, col:98> col:50 is_rvalue_reference
| |   | |-TemplateTypeParmDecl 0x7fd30181ed58 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd30181ee10 <col:22, col:98> col:50 struct is_rvalue_reference definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TypeVisibilityAttr 0x7fd30181f120 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd30181fa00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:763:22, col:50> col:50 implicit struct is_rvalue_reference
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd30181fcb8 <line:765:1, col:97> col:50 struct is_rvalue_reference definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 &&'
| |   | |-TemplateTypeParmDecl 0x7fd30181fab8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fd30181fdf8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fd30181ff70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:765:22, col:50> col:50 implicit struct is_rvalue_reference
| |   |-ClassTemplateDecl 0x7fd301820178 <line:768:1, col:91> col:50 is_reference
| |   | |-TemplateTypeParmDecl 0x7fd301820028 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd3018200e0 <col:22, col:91> col:50 struct is_reference definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TypeVisibilityAttr 0x7fd3018203f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd301820478 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:768:22, col:50> col:50 implicit struct is_reference
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd3018206f8 <line:769:1, col:90> col:50 struct is_reference definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateTypeParmDecl 0x7fd301820530 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fd301820838 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fd301821a00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:769:22, col:50> col:50 implicit struct is_reference
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd301821c88 <line:771:1, col:90> col:50 struct is_reference definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 &&'
| |   | |-TemplateTypeParmDecl 0x7fd301821ab8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fd301821dc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fd301821f40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:771:22, col:50> col:50 implicit struct is_reference
| |   |-ClassTemplateDecl 0x7fd301822148 <line:788:1, line:789:56> line:788:50 is_union
| |   | |-TemplateTypeParmDecl 0x7fd301821ff8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd3018220b0 <col:22, line:789:56> line:788:50 struct is_union definition
| |   |   |-public 'integral_constant<_Bool, __is_union(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fd3018223c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd3018225a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:788:22, col:50> col:50 implicit struct is_union
| |   |-ClassTemplateDecl 0x7fd3018227a8 <line:808:1, line:809:56> line:808:50 is_class
| |   | |-TemplateTypeParmDecl 0x7fd301822660 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd301822710 <col:22, line:809:56> line:808:50 struct is_class definition
| |   |   |-public 'integral_constant<_Bool, __is_class(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fd301822a68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd301822c48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:808:22, col:50> col:50 implicit struct is_class
| |   |-ClassTemplateDecl 0x7fd301822ec0 <line:831:1, col:100> col:61 is_same
| |   | |-TemplateTypeParmDecl 0x7fd301822d00 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fd301822d68 <col:22, col:28> col:28 class depth 0 index 1 _Up
| |   | `-CXXRecordDecl 0x7fd301822e28 <col:33, col:100> col:61 struct is_same definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TypeVisibilityAttr 0x7fd301823160 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd3018231e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:831:33, col:61> col:61 implicit struct is_same
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd3018234a0 <line:832:1, col:99> col:61 struct is_same definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fd3018232a0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fd301823608 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fd3018237b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:832:33, col:61> col:61 implicit struct is_same
| |   |-NamespaceDecl 0x7fd301823868 <line:841:1, line:849:1> line:841:11 __libcpp_is_function_imp
| |   | |-CXXRecordDecl 0x7fd3018238d0 <line:843:1, col:22> col:8 referenced struct __dummy_type definition
| |   | | `-CXXRecordDecl 0x7fd301824a00 <col:1, col:8> col:8 implicit struct __dummy_type
| |   | |-FunctionTemplateDecl 0x7fd301824d18 <line:844:1, col:39> col:28 __test
| |   | | |-TemplateTypeParmDecl 0x7fd301824ab8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | | `-FunctionDecl 0x7fd301824c80 <col:22, col:39> col:28 __test 'char (_Tp *)'
| |   | |   `-ParmVarDecl 0x7fd301824b78 <col:35, col:38> col:39 '_Tp *'
| |   | |-FunctionTemplateDecl 0x7fd301824f58 <line:845:1, col:46> col:27 __test
| |   | | |-TemplateTypeParmDecl 0x7fd301824d70 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | | `-FunctionDecl 0x7fd301824ec0 <col:22, col:46> col:27 __test 'char (struct std::__1::__libcpp_is_function_imp::__dummy_type)'
| |   | |   `-ParmVarDecl 0x7fd301824e00 <col:34> col:46 'struct std::__1::__libcpp_is_function_imp::__dummy_type'
| |   | |-FunctionTemplateDecl 0x7fd301825118 <line:846:1, col:38> col:28 __test
| |   | | |-TemplateTypeParmDecl 0x7fd301824fb0 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | | `-FunctionDecl 0x7fd301825080 <col:22, col:38> col:28 __test 'struct std::__1::__two (...)'
| |   | |-FunctionTemplateDecl 0x7fd3018253d8 <line:847:1, col:40> col:28 __source
| |   | | |-TemplateTypeParmDecl 0x7fd301825168 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | | `-FunctionDecl 0x7fd301825340 <col:22, col:40> col:28 __source '_Tp &(int)'
| |   | |   `-ParmVarDecl 0x7fd301825208 <col:37> col:40 'int'
| |   | `-FunctionTemplateDecl 0x7fd301825598 <line:848:1, col:47> col:35 __source
| |   |   |-TemplateTypeParmDecl 0x7fd301825430 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   |   `-FunctionDecl 0x7fd301825500 <col:22, col:47> col:35 __source 'struct std::__1::__libcpp_is_function_imp::__dummy_type (...)'
| |   |-ClassTemplateDecl 0x7fd301826170 <line:851:1, line:858:6> line:856:8 __libcpp_is_function
| |   | |-TemplateTypeParmDecl 0x7fd3018255e8 <line:851:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fd301826060 <col:22, line:855:50> line:851:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7fd301826028 <col:29, line:855:50> '<dependent type>' '||'
| |   | |     |-BinaryOperator 0x7fd301825ef8 <line:851:29, line:854:48> '<dependent type>' '||'
| |   | |     | |-BinaryOperator 0x7fd3018259a8 <line:851:29, line:853:43> '<dependent type>' '||'
| |   | |     | | |-BinaryOperator 0x7fd301825878 <line:851:29, line:852:44> '<dependent type>' '||'
| |   | |     | | | |-DependentScopeDeclRefExpr 0x7fd301825728 <line:851:29, col:44> '<dependent type>' lvalue
| |   | |     | | | `-DependentScopeDeclRefExpr 0x7fd301825838 <line:852:29, col:44> '<dependent type>' lvalue
| |   | |     | | `-DependentScopeDeclRefExpr 0x7fd301825968 <line:853:29, col:43> '<dependent type>' lvalue
| |   | |     | `-DependentScopeDeclRefExpr 0x7fd301825eb8 <line:854:29, col:48> '<dependent type>' lvalue
| |   | |     `-DependentScopeDeclRefExpr 0x7fd301825fe8 <line:855:29, col:50> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fd3018260d8 <line:856:1, line:858:6> line:856:8 struct __libcpp_is_function definition
| |   |   |-public 'integral_constant<_Bool, sizeof (__libcpp_is_function_imp::__test<_Tp>(__libcpp_is_function_imp::__source<_Tp>(0))) == 1>'
| |   |   `-CXXRecordDecl 0x7fd3018268c8 <col:1, col:8> col:8 implicit struct __libcpp_is_function
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd301826b60 <line:859:1, col:82> col:29 struct __libcpp_is_function definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fd301826980 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd301826e30 <col:22, col:29> col:29 implicit struct __libcpp_is_function
| |   |-ClassTemplateDecl 0x7fd301827038 <line:861:1, line:862:41> line:861:50 is_function
| |   | |-TemplateTypeParmDecl 0x7fd301826ee8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd301826fa0 <col:22, line:862:41> line:861:50 struct is_function definition
| |   |   |-public '__libcpp_is_function<_Tp>'
| |   |   |-TypeVisibilityAttr 0x7fd3018272b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd301827a28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:861:22, col:50> col:50 implicit struct is_function
| |   |-ClassTemplateDecl 0x7fd301827cd8 <line:875:1, line:878:1> line:876:8 __member_pointer_traits_imp
| |   | |-TemplateTypeParmDecl 0x7fd301827ae0 <line:875:11, col:17> col:17 class depth 0 index 0 _MP
| |   | |-NonTypeTemplateParmDecl 0x7fd301827b58 <col:22, col:27> col:27 '_Bool' depth 0 index 1 _IsMemberFunctionPtr
| |   | |-NonTypeTemplateParmDecl 0x7fd301827bc0 <col:49, col:54> col:54 '_Bool' depth 0 index 2 _IsMemberObjectPtr
| |   | `-CXXRecordDecl 0x7fd301827c40 <line:876:1, line:878:1> line:876:8 struct __member_pointer_traits_imp definition
| |   |   `-CXXRecordDecl 0x7fd3018280e0 <col:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   |-ClassTemplateDecl 0x7fd3018282b8 <line:881:1, line:882:26> line:881:29 __libcpp_is_member_function_pointer
| |   | |-TemplateTypeParmDecl 0x7fd301828198 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd301828220 <col:22, line:882:26> line:881:29 struct __libcpp_is_member_function_pointer definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   `-CXXRecordDecl 0x7fd301828570 <col:22, col:29> col:29 implicit struct __libcpp_is_member_function_pointer
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd3018288c8 <line:884:1, line:886:33> line:885:8 struct __libcpp_is_member_function_pointer definition
| |   | |-public 'is_function<_Ret>'
| |   | |-TemplateArgument type 'type-parameter-0-0 type-parameter-0-1::*'
| |   | |-TemplateTypeParmDecl 0x7fd301828628 <line:884:11, col:17> col:17 referenced class depth 0 index 0 _Ret
| |   | |-TemplateTypeParmDecl 0x7fd301828698 <col:23, col:29> col:29 class depth 0 index 1 _Class
| |   | `-CXXRecordDecl 0x7fd301828bc8 <line:885:1, col:8> col:8 implicit struct __libcpp_is_member_function_pointer
| |   |-ClassTemplateDecl 0x7fd301828e00 <line:888:1, line:889:88> line:888:50 is_member_function_pointer
| |   | |-TemplateTypeParmDecl 0x7fd301828c80 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd301828d30 <col:22, line:889:88> line:888:50 struct is_member_function_pointer definition
| |   |   |-public '__libcpp_is_member_function_pointer<typename remove_cv<_Tp>::type>::type'
| |   |   |-TypeVisibilityAttr 0x7fd301829080 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd3018293c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:888:22, col:50> col:50 implicit struct is_member_function_pointer
| |   |-ClassTemplateDecl 0x7fd301829598 <line:898:1, col:100> col:40 __libcpp_is_member_pointer
| |   | |-TemplateTypeParmDecl 0x7fd301829478 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd301829500 <col:33, col:100> col:40 struct __libcpp_is_member_pointer definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   `-CXXRecordDecl 0x7fd301829850 <col:33, col:40> col:40 implicit struct __libcpp_is_member_pointer
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd301829b78 <line:899:1, col:99> col:40 struct __libcpp_is_member_pointer definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 type-parameter-0-1::*'
| |   | |-TemplateTypeParmDecl 0x7fd301829908 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fd301829978 <col:22, col:28> col:28 class depth 0 index 1 _Up
| |   | `-CXXRecordDecl 0x7fd301829e00 <col:33, col:40> col:40 implicit struct __libcpp_is_member_pointer
| |   |-ClassTemplateDecl 0x7fd30182a008 <line:901:1, line:902:73> line:901:50 is_member_pointer
| |   | |-TemplateTypeParmDecl 0x7fd301829eb8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd301829f70 <col:22, line:902:73> line:901:50 struct is_member_pointer definition
| |   |   |-public '__libcpp_is_member_pointer<typename remove_cv<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fd30182a280 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd30182a4e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:901:22, col:50> col:50 implicit struct is_member_pointer
| |   |-ClassTemplateDecl 0x7fd30182a6e8 <line:911:1, line:913:79> line:911:50 is_member_object_pointer
| |   | |-TemplateTypeParmDecl 0x7fd30182a5a0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd30182a650 <col:22, line:913:79> line:911:50 struct is_member_object_pointer definition
| |   |   |-public 'integral_constant<_Bool, is_member_pointer<_Tp>::value && !is_member_function_pointer<_Tp>::value>'
| |   |   |-TypeVisibilityAttr 0x7fd30182a960 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd30182ae00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:911:22, col:50> col:50 implicit struct is_member_object_pointer
| |   |-ClassTemplateDecl 0x7fd30182b008 <line:924:1, line:925:55> line:924:50 is_enum
| |   | |-TemplateTypeParmDecl 0x7fd30182aeb8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd30182af70 <col:22, line:925:55> line:924:50 struct is_enum definition
| |   |   |-public 'integral_constant<_Bool, __is_enum(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fd30182b280 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd30182b468 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:924:22, col:50> col:50 implicit struct is_enum
| |   |-ClassTemplateDecl 0x7fd30182b668 <line:950:1, line:952:70> line:950:50 is_arithmetic
| |   | |-TemplateTypeParmDecl 0x7fd30182b520 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd30182b5d0 <col:22, line:952:70> line:950:50 struct is_arithmetic definition
| |   |   |-public 'integral_constant<_Bool, is_integral<_Tp>::value || is_floating_point<_Tp>::value>'
| |   |   |-TypeVisibilityAttr 0x7fd30182b8e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd30182bd18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:950:22, col:50> col:50 implicit struct is_arithmetic
| |   |-ClassTemplateDecl 0x7fd30182c548 <line:961:1, line:964:66> line:961:50 is_fundamental
| |   | |-TemplateTypeParmDecl 0x7fd30182c400 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd30182c4b0 <col:22, line:964:66> line:961:50 struct is_fundamental definition
| |   |   |-public 'integral_constant<_Bool, is_void<_Tp>::value || __is_nullptr_t<_Tp>::value || is_arithmetic<_Tp>::value>'
| |   |   |-TypeVisibilityAttr 0x7fd30182c7c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd30182cd18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:961:22, col:50> col:50 implicit struct is_fundamental
| |   |-ClassTemplateDecl 0x7fd30182cf18 <line:973:1, line:978:71> line:973:50 is_scalar
| |   | |-TemplateTypeParmDecl 0x7fd30182cdd0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fd30182ce80 <col:22, line:978:71> line:973:50 struct is_scalar definition
| |   | | |-public 'integral_constant<_Bool, is_arithmetic<_Tp>::value || is_member_pointer<_Tp>::value || is_pointer<_Tp>::value || __is_nullptr_t<_Tp>::value || is_enum<_Tp>::value>'
| |   | | |-TypeVisibilityAttr 0x7fd30182d190 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | | `-CXXRecordDecl 0x7fd30182d988 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:973:22, col:50> col:50 implicit struct is_scalar
| |   | `-ClassTemplateSpecialization 0x7fd30182da90 'is_scalar'
| |   |-ClassTemplateSpecializationDecl 0x7fd30182da90 <line:980:1, col:82> col:41 struct is_scalar definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'nullptr_t'
| |   | |-TypeVisibilityAttr 0x7fd30182dbc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fd30182dd40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:980:13, col:41> col:41 implicit struct is_scalar
| |   |-ClassTemplateDecl 0x7fd30182df48 <line:989:1, line:993:63> line:989:50 is_object
| |   | |-TemplateTypeParmDecl 0x7fd30182ddf8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd30182deb0 <col:22, line:993:63> line:989:50 struct is_object definition
| |   |   |-public 'integral_constant<_Bool, is_scalar<_Tp>::value || is_array<_Tp>::value || is_union<_Tp>::value || is_class<_Tp>::value>'
| |   |   |-TypeVisibilityAttr 0x7fd30182e1c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd30182e868 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:989:22, col:50> col:50 implicit struct is_object
| |   |-ClassTemplateDecl 0x7fd30182ea68 <line:1002:1, line:1003:68> line:1002:50 is_compound
| |   | |-TemplateTypeParmDecl 0x7fd30182e920 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd30182e9d0 <col:22, line:1003:68> line:1002:50 struct is_compound definition
| |   |   |-public 'integral_constant<_Bool, !is_fundamental<_Tp>::value>'
| |   |   |-TypeVisibilityAttr 0x7fd30182ece0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd30182efd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1002:22, col:50> col:50 implicit struct is_compound
| |   |-CXXRecordDecl 0x7fd30182f090 <line:1013:1, line:1016:1> line:1013:8 struct __is_referenceable_impl definition
| |   | |-CXXRecordDecl 0x7fd30182f1b8 <col:1, col:8> col:8 implicit struct __is_referenceable_impl
| |   | |-FunctionTemplateDecl 0x7fd30182f4c0 <line:1014:5, col:48> col:38 __test
| |   | | |-TemplateTypeParmDecl 0x7fd30182f250 <col:15, col:21> col:21 referenced class depth 0 index 0 _Tp
| |   | | `-CXXMethodDecl 0x7fd30182f428 <col:26, col:48> col:38 __test '_Tp &(int)' static
| |   | |   `-ParmVarDecl 0x7fd30182f2e8 <col:45> col:48 'int'
| |   | `-FunctionTemplateDecl 0x7fd30182f658 <line:1015:5, col:49> col:39 __test
| |   |   |-TemplateTypeParmDecl 0x7fd30182f518 <col:15, col:21> col:21 class depth 0 index 0 _Tp
| |   |   `-CXXMethodDecl 0x7fd30182f5c0 <col:26, col:49> col:39 __test 'struct std::__1::__two (...)' static
| |   |-ClassTemplateDecl 0x7fd30182f7e8 <line:1018:1, line:1020:81> line:1019:8 __is_referenceable
| |   | |-TemplateTypeParmDecl 0x7fd30182f6c8 <line:1018:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd30182f750 <line:1019:1, line:1020:81> line:1019:8 struct __is_referenceable definition
| |   |   |-public 'integral_constant<_Bool, !is_same<decltype(struct __is_referenceable_impl::__test<_Tp>(0)), struct __two>::value>'
| |   |   `-CXXRecordDecl 0x7fd30182ff88 <col:1, col:8> col:8 implicit struct __is_referenceable
| |   |-ClassTemplateDecl 0x7fd301830548 <line:1025:1, line:1028:50> col:8 __add_const
| |   | |-TemplateTypeParmDecl 0x7fd301830040 <line:1025:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fd301830438 <col:22, line:1027:44> line:1025:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7fd301830400 <col:29, line:1027:44> '<dependent type>' '||'
| |   | |     |-BinaryOperator 0x7fd3018302c8 <line:1025:29, line:1026:47> '<dependent type>' '||'
| |   | |     | |-DependentScopeDeclRefExpr 0x7fd301830178 <line:1025:29, col:48> '<dependent type>' lvalue
| |   | |     | `-DependentScopeDeclRefExpr 0x7fd301830288 <line:1026:29, col:47> '<dependent type>' lvalue
| |   | |     `-DependentScopeDeclRefExpr 0x7fd3018303b8 <line:1027:29, col:44> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fd3018304b0 <line:1028:1, col:50> col:8 struct __add_const definition
| |   |   |-CXXRecordDecl 0x7fd301830810 <col:1, col:8> col:8 implicit struct __add_const
| |   |   `-TypedefDecl 0x7fd3018308b8 <col:33, col:45> col:45 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7fd301830080 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fd301830040 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd301830b10 <line:1030:1, line:1031:56> col:8 struct __add_const definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fd301830930 <line:1030:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fd301830da0 <line:1031:1, col:8> col:8 implicit struct __add_const
| |   | `-TypedefDecl 0x7fd301830e48 <col:33, col:51> col:51 type 'const _Tp'
| |   |   `-QualType 0x7fd301830971 'const _Tp' const
| |   |     `-TemplateTypeParmType 0x7fd301830970 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fd301830930 '_Tp'
| |   |-ClassTemplateDecl 0x7fd301831008 <line:1033:1, line:1034:51> line:1033:50 add_const
| |   | |-TemplateTypeParmDecl 0x7fd301830ec0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd301830f70 <col:22, line:1034:51> line:1033:50 struct add_const definition
| |   |   |-TypeVisibilityAttr 0x7fd301831280 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fd3018312c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1033:22, col:50> col:50 implicit struct add_const
| |   |   `-TypedefDecl 0x7fd3018318c0 <line:1034:6, col:46> col:46 type 'typename __add_const<_Tp>::type'
| |   |     `-DependentNameType 0x7fd301831850 'typename __add_const<_Tp>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fd301831b80 <line:1037:1, col:67> col:22 add_const_t
| |   | |-TemplateTypeParmDecl 0x7fd301831938 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fd301831b20 <col:22, col:67> col:28 add_const_t 'typename add_const<_Tp>::type'
| |   |   `-DependentNameType 0x7fd301831ab0 'typename add_const<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fd3018320d0 <line:1042:1, line:1045:53> col:8 __add_volatile
| |   | |-TemplateTypeParmDecl 0x7fd301831bd0 <line:1042:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fd301831fc0 <col:22, line:1044:47> line:1042:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7fd301831f88 <col:29, line:1044:47> '<dependent type>' '||'
| |   | |     |-BinaryOperator 0x7fd301831e58 <line:1042:29, line:1043:47> '<dependent type>' '||'
| |   | |     | |-DependentScopeDeclRefExpr 0x7fd301831d08 <line:1042:29, col:48> '<dependent type>' lvalue
| |   | |     | `-DependentScopeDeclRefExpr 0x7fd301831e18 <line:1043:29, col:47> '<dependent type>' lvalue
| |   | |     `-DependentScopeDeclRefExpr 0x7fd301831f48 <line:1044:29, col:47> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fd301832038 <line:1045:1, col:53> col:8 struct __add_volatile definition
| |   |   |-CXXRecordDecl 0x7fd301832a00 <col:1, col:8> col:8 implicit struct __add_volatile
| |   |   `-TypedefDecl 0x7fd301832aa8 <col:36, col:48> col:48 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7fd301831c10 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fd301831bd0 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd301832d00 <line:1047:1, line:1048:62> col:8 struct __add_volatile definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fd301832b20 <line:1047:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fd301832f90 <line:1048:1, col:8> col:8 implicit struct __add_volatile
| |   | `-TypedefDecl 0x7fd301833038 <col:36, col:57> col:57 type 'volatile _Tp'
| |   |   `-QualType 0x7fd301832b64 'volatile _Tp' volatile
| |   |     `-TemplateTypeParmType 0x7fd301832b60 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fd301832b20 '_Tp'
| |   |-ClassTemplateDecl 0x7fd3018331f8 <line:1050:1, line:1051:54> line:1050:50 add_volatile
| |   | |-TemplateTypeParmDecl 0x7fd3018330b0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd301833160 <col:22, line:1051:54> line:1050:50 struct add_volatile definition
| |   |   |-TypeVisibilityAttr 0x7fd301833470 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fd3018334b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1050:22, col:50> col:50 implicit struct add_volatile
| |   |   `-TypedefDecl 0x7fd3018340a0 <line:1051:6, col:49> col:49 type 'typename __add_volatile<_Tp>::type'
| |   |     `-DependentNameType 0x7fd301834030 'typename __add_volatile<_Tp>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fd301834360 <line:1054:1, col:73> col:22 add_volatile_t
| |   | |-TemplateTypeParmDecl 0x7fd301834118 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fd301834300 <col:22, col:73> col:28 add_volatile_t 'typename add_volatile<_Tp>::type'
| |   |   `-DependentNameType 0x7fd301834290 'typename add_volatile<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fd3018344f8 <line:1059:1, line:1060:78> line:1059:50 add_cv
| |   | |-TemplateTypeParmDecl 0x7fd3018343b0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd301834460 <col:22, line:1060:78> line:1059:50 struct add_cv definition
| |   |   |-TypeVisibilityAttr 0x7fd301834770 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fd3018347b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1059:22, col:50> col:50 implicit struct add_cv
| |   |   `-TypedefDecl 0x7fd301834b10 <line:1060:6, col:73> col:73 type 'typename add_const<typename add_volatile<_Tp>::type>::type'
| |   |     `-DependentNameType 0x7fd301834aa0 'typename add_const<typename add_volatile<_Tp>::type>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fd301834dd0 <line:1063:1, col:61> col:22 add_cv_t
| |   | |-TemplateTypeParmDecl 0x7fd301834b88 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fd301834d70 <col:22, col:61> col:28 add_cv_t 'typename add_cv<_Tp>::type'
| |   |   `-DependentNameType 0x7fd301834d00 'typename add_cv<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fd301834f68 <line:1068:1, col:92> col:50 remove_reference
| |   | |-TemplateTypeParmDecl 0x7fd301834e20 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd301834ed0 <col:22, col:92> col:50 struct remove_reference definition
| |   |   |-TypeVisibilityAttr 0x7fd301835830 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fd301835878 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1068:22, col:50> col:50 implicit struct remove_reference
| |   |   `-TypedefDecl 0x7fd301835920 <col:75, col:87> col:87 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7fd301834e60 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fd301834e20 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd301835b68 <line:1069:1, col:92> col:50 struct remove_reference definition
| |   | |-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateTypeParmDecl 0x7fd301835998 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fd301835ca8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fd301835de0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1069:22, col:50> col:50 implicit struct remove_reference
| |   | `-TypedefDecl 0x7fd301835e88 <col:75, col:87> col:87 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fd3018359e0 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fd301835998 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd3018360c8 <line:1071:1, col:92> col:50 struct remove_reference definition
| |   | |-TemplateArgument type 'type-parameter-0-0 &&'
| |   | |-TemplateTypeParmDecl 0x7fd301835f00 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fd301836208 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fd301836340 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1071:22, col:50> col:50 implicit struct remove_reference
| |   | `-TypedefDecl 0x7fd3018363e8 <col:75, col:87> col:87 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fd301835f40 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fd301835f00 '_Tp'
| |   |-TypeAliasTemplateDecl 0x7fd301836ca0 <line:1075:1, col:81> col:22 remove_reference_t
| |   | |-TemplateTypeParmDecl 0x7fd301836460 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fd301836c40 <col:22, col:81> col:28 remove_reference_t 'typename remove_reference<_Tp>::type'
| |   |   `-DependentNameType 0x7fd3018365d0 'typename remove_reference<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fd301836f88 <line:1080:1, col:128> col:68 __add_lvalue_reference_impl
| |   | |-TemplateTypeParmDecl 0x7fd301836cf0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fd301836e78 <col:22, col:54> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fd301836e28 <col:29, col:54> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fd301836ef0 <col:61, col:128> col:68 struct __add_lvalue_reference_impl definition
| |   |   |-CXXRecordDecl 0x7fd301837250 <col:61, col:68> col:68 implicit struct __add_lvalue_reference_impl
| |   |   `-TypedefDecl 0x7fd3018372f8 <col:109, col:122> col:122 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7fd301836d30 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fd301836cf0 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd301837550 <line:1081:1, col:128> col:68 struct __add_lvalue_reference_impl definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fd301837370 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fd3018377e0 <col:61, col:68> col:68 implicit struct __add_lvalue_reference_impl
| |   | `-TypedefDecl 0x7fd3018378b8 <col:109, col:122> col:122 type '_Tp &'
| |   |   `-LValueReferenceType 0x7fd301837880 '_Tp &' dependent
| |   |     `-TemplateTypeParmType 0x7fd3018373b0 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fd301837370 '_Tp'
| |   |-ClassTemplateDecl 0x7fd301837a78 <line:1083:1, line:1084:63> line:1083:50 add_lvalue_reference
| |   | |-TemplateTypeParmDecl 0x7fd301837930 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd3018379e0 <col:22, line:1084:63> line:1083:50 struct add_lvalue_reference definition
| |   |   |-TypeVisibilityAttr 0x7fd301837d30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fd301837d78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1083:22, col:50> col:50 implicit struct add_lvalue_reference
| |   |   `-TypedefDecl 0x7fd301838110 <line:1084:2, col:58> col:58 type 'typename __add_lvalue_reference_impl<_Tp>::type'
| |   |     `-DependentNameType 0x7fd3018380a0 'typename __add_lvalue_reference_impl<_Tp>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fd3018383d0 <line:1087:1, col:89> col:22 add_lvalue_reference_t
| |   | |-TemplateTypeParmDecl 0x7fd301838188 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fd301838370 <col:22, col:89> col:28 add_lvalue_reference_t 'typename add_lvalue_reference<_Tp>::type'
| |   |   `-DependentNameType 0x7fd301838300 'typename add_lvalue_reference<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fd3018386b8 <line:1092:1, col:129> col:68 __add_rvalue_reference_impl
| |   | |-TemplateTypeParmDecl 0x7fd301838420 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fd3018385a8 <col:22, col:54> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fd301838558 <col:29, col:54> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fd301838620 <col:61, col:129> col:68 struct __add_rvalue_reference_impl definition
| |   |   |-CXXRecordDecl 0x7fd301838980 <col:61, col:68> col:68 implicit struct __add_rvalue_reference_impl
| |   |   `-TypedefDecl 0x7fd301838a28 <col:109, col:123> col:123 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7fd301838460 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fd301838420 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd30183ccd0 <line:1093:1, col:129> col:68 struct __add_rvalue_reference_impl definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fd301838aa0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fd30183cf60 <col:61, col:68> col:68 implicit struct __add_rvalue_reference_impl
| |   | `-TypedefDecl 0x7fd30183d038 <col:109, col:123> col:123 type '_Tp &&'
| |   |   `-RValueReferenceType 0x7fd30183d000 '_Tp &&' dependent
| |   |     `-TemplateTypeParmType 0x7fd301838ae0 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fd301838aa0 '_Tp'
| |   |-ClassTemplateDecl 0x7fd30183d1f8 <line:1095:1, line:1096:63> line:1095:50 add_rvalue_reference
| |   | |-TemplateTypeParmDecl 0x7fd30183d0b0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd30183d160 <col:22, line:1096:63> line:1095:50 struct add_rvalue_reference definition
| |   |   |-TypeVisibilityAttr 0x7fd30183d470 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fd30183d4b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1095:22, col:50> col:50 implicit struct add_rvalue_reference
| |   |   `-TypedefDecl 0x7fd30183d830 <line:1096:2, col:58> col:58 type 'typename __add_rvalue_reference_impl<_Tp>::type'
| |   |     `-DependentNameType 0x7fd30183d7c0 'typename __add_rvalue_reference_impl<_Tp>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fd30183daf0 <line:1099:1, col:89> col:22 add_rvalue_reference_t
| |   | |-TemplateTypeParmDecl 0x7fd30183d8a8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fd30183da90 <col:22, col:89> col:28 add_rvalue_reference_t 'typename add_rvalue_reference<_Tp>::type'
| |   |   `-DependentNameType 0x7fd30183da20 'typename add_rvalue_reference<_Tp>::type' dependent
| |   |-FunctionTemplateDecl 0x7fd30183ddc8 <line:1106:1, col:41> col:28 __declval
| |   | |-TemplateTypeParmDecl 0x7fd30183db40 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fd30183dd30 <col:22, col:41> col:28 __declval '_Tp &&(int)'
| |   |   `-ParmVarDecl 0x7fd30183dc00 <col:38> col:41 'int'
| |   |-FunctionTemplateDecl 0x7fd30183e058 <line:1107:1, col:42> col:28 __declval
| |   | |-TemplateTypeParmDecl 0x7fd30183de20 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fd30183dfc0 <col:22, col:42> col:28 __declval '_Tp (long)'
| |   |   `-ParmVarDecl 0x7fd30183deb8 <col:38> col:42 'long'
| |   |-FunctionTemplateDecl 0x7fd30183e450 <line:1109:1, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:758:21> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1111:1 declval
| |   | |-TemplateTypeParmDecl 0x7fd30183e0b0 <line:1109:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fd30183e3b8 <line:1110:1, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:758:21> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1111:1 declval 'decltype(std::__1::__declval<_Tp>(0)) (void) noexcept'
| |   |-ClassTemplateDecl 0x7fd30183e5b8 <line:1123:1, line:1126:1> line:1124:8 __uncvref
| |   | |-TemplateTypeParmDecl 0x7fd30183e4a0 <line:1123:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd30183e520 <line:1124:1, line:1126:1> line:1124:8 struct __uncvref definition
| |   |   |-CXXRecordDecl 0x7fd30183e830 <col:1, col:8> col:8 implicit struct __uncvref
| |   |   `-TypedefDecl 0x7fd30183eb90 <line:1125:5, col:76> col:76 type 'typename remove_cv<typename remove_reference<_Tp>::type>::type'
| |   |     `-DependentNameType 0x7fd30183eb20 'typename remove_cv<typename remove_reference<_Tp>::type>::type' dependent
| |   |-ClassTemplateDecl 0x7fd30183ed38 <line:1128:1, line:1131:1> line:1129:8 __unconstref
| |   | |-TemplateTypeParmDecl 0x7fd30183ec20 <line:1128:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd30183eca0 <line:1129:1, line:1131:1> line:1129:8 struct __unconstref definition
| |   |   |-CXXRecordDecl 0x7fd30183efb0 <col:1, col:8> col:8 implicit struct __unconstref
| |   |   `-TypedefDecl 0x7fd30183f310 <line:1130:5, col:79> col:79 type 'typename remove_const<typename remove_reference<_Tp>::type>::type'
| |   |     `-DependentNameType 0x7fd30183f2a0 'typename remove_const<typename remove_reference<_Tp>::type>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fd30183f5d0 <line:1134:1, line:1135:46> col:1 __uncvref_t
| |   | |-TemplateTypeParmDecl 0x7fd30183f388 <line:1134:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fd30183f570 <line:1135:1, col:46> col:7 __uncvref_t 'typename __uncvref<_Tp>::type'
| |   |   `-DependentNameType 0x7fd30183f500 'typename __uncvref<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fd30183f7b0 <line:1140:1, line:1142:68> line:1141:8 __is_same_uncvref
| |   | |-TemplateTypeParmDecl 0x7fd30183f620 <line:1140:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fd30183f688 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | `-CXXRecordDecl 0x7fd30183f718 <line:1141:1, line:1142:68> line:1141:8 struct __is_same_uncvref definition
| |   |   |-public 'is_same<typename __uncvref<_Tp>::type, typename __uncvref<_Up>::type>'
| |   |   `-CXXRecordDecl 0x7fd301810288 <col:1, col:8> col:8 implicit struct __is_same_uncvref
| |   |-CXXRecordDecl 0x7fd301810340 <line:1144:1, line:1147:1> line:1144:8 referenced struct __any definition
| |   | |-CXXRecordDecl 0x7fd301810468 <col:1, col:8> col:8 implicit referenced struct __any
| |   | `-CXXConstructorDecl 0x7fd3018105a0 <line:1146:5, col:14> col:5 __any 'void (...)'
| |   |-ClassTemplateDecl 0x7fd3018107b8 <line:1151:1, col:104> col:50 remove_pointer
| |   | |-TemplateTypeParmDecl 0x7fd301810668 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd301810720 <col:22, col:104> col:50 struct remove_pointer definition
| |   |   |-TypeVisibilityAttr 0x7fd301810a30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fd301810a78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1151:22, col:50> col:50 implicit struct remove_pointer
| |   |   `-TypedefDecl 0x7fd301810b20 <col:87, col:99> col:99 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7fd3018106b0 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fd301810668 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd301810d68 <line:1152:1, col:104> col:50 struct remove_pointer definition
| |   | |-TemplateArgument type 'type-parameter-0-0 *'
| |   | |-TemplateTypeParmDecl 0x7fd301810b98 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fd301810ea8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fd301841600 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1152:22, col:50> col:50 implicit struct remove_pointer
| |   | `-TypedefDecl 0x7fd3018416a8 <col:87, col:99> col:99 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fd301810be0 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fd301810b98 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd3018418e8 <line:1153:1, col:104> col:50 struct remove_pointer definition
| |   | |-TemplateArgument type 'type-parameter-0-0 *const'
| |   | |-TemplateTypeParmDecl 0x7fd301841720 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fd301841a28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fd301841b60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1153:22, col:50> col:50 implicit struct remove_pointer
| |   | `-TypedefDecl 0x7fd301841c08 <col:87, col:99> col:99 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fd301841760 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fd301841720 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd301841e48 <line:1154:1, col:104> col:50 struct remove_pointer definition
| |   | |-TemplateArgument type 'type-parameter-0-0 *volatile'
| |   | |-TemplateTypeParmDecl 0x7fd301841c80 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fd301841f88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fd3018420c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1154:22, col:50> col:50 implicit struct remove_pointer
| |   | `-TypedefDecl 0x7fd301842168 <col:87, col:99> col:99 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fd301841cc0 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fd301841c80 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd3018423a8 <line:1155:1, col:104> col:50 struct remove_pointer definition
| |   | |-TemplateArgument type 'type-parameter-0-0 *const volatile'
| |   | |-TemplateTypeParmDecl 0x7fd3018421e0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fd3018424e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fd301842668 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1155:22, col:50> col:50 implicit struct remove_pointer
| |   | `-TypedefDecl 0x7fd301842710 <col:87, col:99> col:99 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fd301842220 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fd3018421e0 '_Tp'
| |   |-TypeAliasTemplateDecl 0x7fd3018429d0 <line:1158:1, col:77> col:22 remove_pointer_t
| |   | |-TemplateTypeParmDecl 0x7fd301842788 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fd301842970 <col:22, col:77> col:28 remove_pointer_t 'typename remove_pointer<_Tp>::type'
| |   |   `-DependentNameType 0x7fd301842900 'typename remove_pointer<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fd301842fa0 <line:1163:1, line:1167:57> line:1166:8 __add_pointer_impl
| |   | |-TemplateTypeParmDecl 0x7fd301842a20 <line:1163:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fd301842e90 <line:1164:9, line:1165:63> line:1164:14 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7fd301842e58 <col:16, line:1165:63> '<dependent type>' '||'
| |   | |     |-DependentScopeDeclRefExpr 0x7fd301842b58 <line:1164:16, col:41> '<dependent type>' lvalue
| |   | |     `-DependentScopeDeclRefExpr 0x7fd301842e18 <line:1165:17, col:63> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fd301842f08 <line:1166:1, line:1167:57> line:1166:8 struct __add_pointer_impl definition
| |   |   |-CXXRecordDecl 0x7fd301843260 <col:1, col:8> col:8 implicit struct __add_pointer_impl
| |   |   `-TypedefDecl 0x7fd301843480 <line:1167:6, col:52> col:52 type 'typename remove_reference<_Tp>::type *'
| |   |     `-PointerType 0x7fd301843430 'typename remove_reference<_Tp>::type *' dependent
| |   |       `-DependentNameType 0x7fd3018433b0 'typename remove_reference<_Tp>::type' dependent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd301844730 <line:1168:1, line:1169:23> line:1168:29 struct __add_pointer_impl definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fd3018434f8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fd3018449c0 <col:22, col:29> col:29 implicit struct __add_pointer_impl
| |   | `-TypedefDecl 0x7fd301844a68 <line:1169:6, col:18> col:18 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fd301843540 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fd3018434f8 '_Tp'
| |   |-ClassTemplateDecl 0x7fd301844c28 <line:1171:1, line:1172:58> line:1171:50 add_pointer
| |   | |-TemplateTypeParmDecl 0x7fd301844ae0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd301844b90 <col:22, line:1172:58> line:1171:50 struct add_pointer definition
| |   |   |-TypeVisibilityAttr 0x7fd301844ea0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fd301844ee8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1171:22, col:50> col:50 implicit struct add_pointer
| |   |   `-TypedefDecl 0x7fd3018454b0 <line:1172:6, col:53> col:53 type 'typename __add_pointer_impl<_Tp>::type'
| |   |     `-DependentNameType 0x7fd301845440 'typename __add_pointer_impl<_Tp>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fd3018457b0 <line:1175:1, col:71> col:22 add_pointer_t
| |   | |-TemplateTypeParmDecl 0x7fd301845528 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fd301845750 <col:22, col:71> col:28 add_pointer_t 'typename add_pointer<_Tp>::type'
| |   |   `-DependentNameType 0x7fd3018456e0 'typename add_pointer<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fd301845a98 <line:1180:1, line:1181:82> col:8 __libcpp_is_signed_impl
| |   | |-TemplateTypeParmDecl 0x7fd301845800 <line:1180:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fd301845988 <col:22, col:47> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fd301845938 <col:29, col:47> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fd301845a00 <line:1181:1, col:82> col:8 struct __libcpp_is_signed_impl definition
| |   |   |-public 'integral_constant<_Bool, (_Tp(-1) < _Tp(0))>'
| |   |   `-CXXRecordDecl 0x7fd301845ff8 <col:1, col:8> col:8 implicit struct __libcpp_is_signed_impl
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd301846290 <line:1183:1, line:1184:64> col:8 struct __libcpp_is_signed_impl definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fd3018460b0 <line:1183:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd301846560 <line:1184:1, col:8> col:8 implicit struct __libcpp_is_signed_impl
| |   |-ClassTemplateDecl 0x7fd3018468b8 <line:1186:1, line:1187:66> col:8 __libcpp_is_signed
| |   | |-TemplateTypeParmDecl 0x7fd301846620 <line:1186:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fd3018467a8 <col:22, col:49> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fd301846758 <col:29, col:49> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fd301846820 <line:1187:1, col:66> col:8 struct __libcpp_is_signed definition
| |   |   |-public '__libcpp_is_signed_impl<_Tp>'
| |   |   `-CXXRecordDecl 0x7fd301846db8 <col:1, col:8> col:8 implicit struct __libcpp_is_signed
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd301847050 <line:1189:1, col:81> col:29 struct __libcpp_is_signed definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fd301846e70 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd301847320 <col:22, col:29> col:29 implicit struct __libcpp_is_signed
| |   |-ClassTemplateDecl 0x7fd301847528 <line:1191:1, col:94> col:50 is_signed
| |   | |-TemplateTypeParmDecl 0x7fd3018473d8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd301847490 <col:22, col:94> col:50 struct is_signed definition
| |   |   |-public '__libcpp_is_signed<_Tp>'
| |   |   |-TypeVisibilityAttr 0x7fd301847830 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd301847ab8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1191:22, col:50> col:50 implicit struct is_signed
| |   |-ClassTemplateDecl 0x7fd301847e08 <line:1200:1, line:1201:84> col:8 __libcpp_is_unsigned_impl
| |   | |-TemplateTypeParmDecl 0x7fd301847b70 <line:1200:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fd301847cf8 <col:22, col:47> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fd301847ca8 <col:29, col:47> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fd301847d70 <line:1201:1, col:84> col:8 struct __libcpp_is_unsigned_impl definition
| |   |   |-public 'integral_constant<_Bool, (_Tp(0) < _Tp(-1))>'
| |   |   `-CXXRecordDecl 0x7fd301848368 <col:1, col:8> col:8 implicit struct __libcpp_is_unsigned_impl
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd301848600 <line:1203:1, line:1204:67> col:8 struct __libcpp_is_unsigned_impl definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fd301848420 <line:1203:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd3018488d0 <line:1204:1, col:8> col:8 implicit struct __libcpp_is_unsigned_impl
| |   |-ClassTemplateDecl 0x7fd301848c28 <line:1206:1, line:1207:70> col:8 __libcpp_is_unsigned
| |   | |-TemplateTypeParmDecl 0x7fd301848988 <line:1206:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fd301848b18 <col:22, col:49> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fd301848ac8 <col:29, col:49> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fd301848b90 <line:1207:1, col:70> col:8 struct __libcpp_is_unsigned definition
| |   |   |-public '__libcpp_is_unsigned_impl<_Tp>'
| |   |   `-CXXRecordDecl 0x7fd301849128 <col:1, col:8> col:8 implicit struct __libcpp_is_unsigned
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd3018493c0 <line:1209:1, col:83> col:29 struct __libcpp_is_unsigned definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fd3018491e0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd3018496a8 <col:22, col:29> col:29 implicit struct __libcpp_is_unsigned
| |   |-ClassTemplateDecl 0x7fd3018498a8 <line:1211:1, col:98> col:50 is_unsigned
| |   | |-TemplateTypeParmDecl 0x7fd301849760 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd301849810 <col:22, col:98> col:50 struct is_unsigned definition
| |   |   |-public '__libcpp_is_unsigned<_Tp>'
| |   |   |-TypeVisibilityAttr 0x7fd301849b20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd301849da8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1211:22, col:50> col:50 implicit struct is_unsigned
| |   |-ClassTemplateDecl 0x7fd301849fa8 <line:1220:1, line:1221:44> line:1220:50 rank
| |   | |-TemplateTypeParmDecl 0x7fd301849e60 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd301849f10 <col:22, line:1221:44> line:1220:50 struct rank definition
| |   |   |-public 'integral_constant<size_t, 0>':'struct std::__1::integral_constant<unsigned long, 0>'
| |   |   |-TypeVisibilityAttr 0x7fd30184a220 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd30184ab40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1220:22, col:50> col:50 implicit struct rank
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd30184add8 <line:1222:1, line:1223:63> line:1222:50 struct rank definition
| |   | |-public 'integral_constant<size_t, rank<_Tp>::value + 1>'
| |   | |-TemplateArgument type 'type-parameter-0-0 []'
| |   | |-TemplateTypeParmDecl 0x7fd30184abf8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fd30184af28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fd30184b348 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1222:22, col:50> col:50 implicit struct rank
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd30184b688 <line:1224:1, line:1225:63> line:1224:62 struct rank definition
| |   | |-public 'integral_constant<size_t, rank<_Tp>::value + 1>'
| |   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
| |   | |-TemplateTypeParmDecl 0x7fd30184b400 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fd30184b478 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Np
| |   | |-TypeVisibilityAttr 0x7fd30184b7d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fd30184bb88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1224:34, col:62> col:62 implicit struct rank
| |   |-ClassTemplateDecl 0x7fd30184be38 <line:1234:1, line:1235:44> line:1234:68 extent
| |   | |-TemplateTypeParmDecl 0x7fd30184bc40 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fd30184bce0 <col:22, col:37> col:31 'unsigned int' depth 0 index 1 _Ip
| |   | | `-TemplateArgument expr
| |   | |   `-ImplicitCastExpr 0x7fd30184bd38 <col:37> 'unsigned int' <IntegralCast>
| |   | |     `-IntegerLiteral 0x7fd30184bca8 <col:37> 'int' 0
| |   | `-CXXRecordDecl 0x7fd30184bda0 <col:40, line:1235:44> line:1234:68 struct extent definition
| |   |   |-public 'integral_constant<size_t, 0>':'struct std::__1::integral_constant<unsigned long, 0>'
| |   |   |-TypeVisibilityAttr 0x7fd30184c100 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd30184c288 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1234:40, col:68> col:68 implicit struct extent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd30184c600 <line:1236:1, line:1237:44> line:1236:50 struct extent definition
| |   | |-public 'integral_constant<size_t, 0>':'struct std::__1::integral_constant<unsigned long, 0>'
| |   | |-TemplateArgument type 'type-parameter-0-0 []'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fd30184c340 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fd30184c788 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fd30184ca38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1236:22, col:50> col:50 implicit struct extent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd30184cdc0 <line:1238:1, line:1239:68> line:1238:64 struct extent definition
| |   | |-public 'integral_constant<size_t, extent<_Tp, _Ip - 1>::value>'
| |   | |-TemplateArgument type 'type-parameter-0-0 []'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fd30184cc68 <col:78> 'unsigned int' NonTypeTemplateParm 0x7fd30184cb70 '_Ip' 'unsigned int'
| |   | |-TemplateTypeParmDecl 0x7fd30184caf0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fd30184cb70 <col:22, col:31> col:31 referenced 'unsigned int' depth 0 index 1 _Ip
| |   | |-TypeVisibilityAttr 0x7fd30184cf28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fd30184d458 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1238:36, col:64> col:64 implicit struct extent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd30184d830 <line:1240:1, line:1241:46> line:1240:62 struct extent definition
| |   | |-public 'integral_constant<size_t, _Np>'
| |   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fd30184d510 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fd30184d588 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Np
| |   | |-TypeVisibilityAttr 0x7fd30184d9b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fd30184dcb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1240:34, col:62> col:62 implicit struct extent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd30184e0f0 <line:1242:1, line:1243:68> line:1242:76 struct extent definition
| |   | |-public 'integral_constant<size_t, extent<_Tp, _Ip - 1>::value>'
| |   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fd30184df90 <col:93> 'unsigned int' NonTypeTemplateParm 0x7fd30184de58 '_Ip' 'unsigned int'
| |   | |-TemplateTypeParmDecl 0x7fd30184dd70 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fd30184dde8 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Np
| |   | |-NonTypeTemplateParmDecl 0x7fd30184de58 <col:34, col:43> col:43 referenced 'unsigned int' depth 0 index 2 _Ip
| |   | |-TypeVisibilityAttr 0x7fd30184e258 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fd30184e7b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1242:48, col:76> col:76 implicit struct extent
| |   |-ClassTemplateDecl 0x7fd30184e9b8 <line:1252:1, line:1253:23> line:1252:50 remove_extent
| |   | |-TemplateTypeParmDecl 0x7fd30184e870 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd30184e920 <col:22, line:1253:23> line:1252:50 struct remove_extent definition
| |   |   |-TypeVisibilityAttr 0x7fd30184ec30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fd30184ec78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1252:22, col:50> col:50 implicit struct remove_extent
| |   |   `-TypedefDecl 0x7fd30184ed20 <line:1253:6, col:18> col:18 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7fd30184e8b0 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fd30184e870 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd30184ef78 <line:1254:1, line:1255:23> line:1254:50 struct remove_extent definition
| |   | |-TemplateArgument type 'type-parameter-0-0 []'
| |   | |-TemplateTypeParmDecl 0x7fd30184ed98 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fd30184f0c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fd30184f200 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1254:22, col:50> col:50 implicit struct remove_extent
| |   | `-TypedefDecl 0x7fd30184f2a8 <line:1255:6, col:18> col:18 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fd30184ede0 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fd30184ed98 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd30184f600 <line:1256:1, line:1257:23> line:1256:62 struct remove_extent definition
| |   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
| |   | |-TemplateTypeParmDecl 0x7fd30184f320 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fd30184f398 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Np
| |   | |-TypeVisibilityAttr 0x7fd30184f748 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fd30184f880 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1256:34, col:62> col:62 implicit struct remove_extent
| |   | `-TypedefDecl 0x7fd30184f928 <line:1257:6, col:18> col:18 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fd30184f360 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fd30184f320 '_Tp'
| |   |-TypeAliasTemplateDecl 0x7fd30184fbe0 <line:1260:1, col:75> col:22 remove_extent_t
| |   | |-TemplateTypeParmDecl 0x7fd30184f9a0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fd30184fb80 <col:22, col:75> col:28 remove_extent_t 'typename remove_extent<_Tp>::type'
| |   |   `-DependentNameType 0x7fd30184fb10 'typename remove_extent<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fd30184fd78 <line:1265:1, line:1266:23> line:1265:50 remove_all_extents
| |   | |-TemplateTypeParmDecl 0x7fd30184fc30 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd30184fce0 <col:22, line:1266:23> line:1265:50 struct remove_all_extents definition
| |   |   |-TypeVisibilityAttr 0x7fd30184fff0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fd301850038 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1265:22, col:50> col:50 implicit struct remove_all_extents
| |   |   `-TypedefDecl 0x7fd3018500e0 <line:1266:6, col:18> col:18 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7fd30184fc70 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fd30184fc30 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd301850338 <line:1267:1, line:1268:58> line:1267:50 struct remove_all_extents definition
| |   | |-TemplateArgument type 'type-parameter-0-0 []'
| |   | |-TemplateTypeParmDecl 0x7fd301850158 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fd301850488 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fd301850600 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1267:22, col:50> col:50 implicit struct remove_all_extents
| |   | `-TypedefDecl 0x7fd301850800 <line:1268:6, col:53> col:53 type 'typename remove_all_extents<_Tp>::type'
| |   |   `-DependentNameType 0x7fd301850790 'typename remove_all_extents<_Tp>::type' dependent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd301850b08 <line:1269:1, line:1270:58> line:1269:62 struct remove_all_extents definition
| |   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
| |   | |-TemplateTypeParmDecl 0x7fd301850878 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fd3018508f8 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Np
| |   | |-TypeVisibilityAttr 0x7fd301850c58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fd301850d90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1269:34, col:62> col:62 implicit struct remove_all_extents
| |   | `-TypedefDecl 0x7fd301850f50 <line:1270:6, col:53> col:53 type 'typename remove_all_extents<_Tp>::type'
| |   |   `-DependentNameType 0x7fd301850ee0 'typename remove_all_extents<_Tp>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fd3018511d0 <line:1273:1, col:85> col:22 remove_all_extents_t
| |   | |-TemplateTypeParmDecl 0x7fd301850fc8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fd301851170 <col:22, col:85> col:28 remove_all_extents_t 'typename remove_all_extents<_Tp>::type'
| |   |   `-DependentNameType 0x7fd301851100 'typename remove_all_extents<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fd3018513a8 <line:1278:1, line:1281:1> line:1279:8 __decay
| |   | |-TemplateTypeParmDecl 0x7fd301851220 <line:1278:11, col:17> col:17 referenced class depth 0 index 0 _Up
| |   | |-NonTypeTemplateParmDecl 0x7fd301851298 <col:22> col:26 '_Bool' depth 0 index 1
| |   | `-CXXRecordDecl 0x7fd301851310 <line:1279:1, line:1281:1> line:1279:8 struct __decay definition
| |   |   |-CXXRecordDecl 0x7fd301852690 <col:1, col:8> col:8 implicit struct __decay
| |   |   `-TypedefDecl 0x7fd301852850 <line:1280:5, col:43> col:43 type 'typename remove_cv<_Up>::type'
| |   |     `-DependentNameType 0x7fd3018527e0 'typename remove_cv<_Up>::type' dependent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd301852ab0 <line:1283:1, line:1297:1> line:1284:8 struct __decay definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fd3018528c8 <line:1283:11, col:17> col:17 referenced class depth 0 index 0 _Up
| |   | |-CXXRecordDecl 0x7fd301852d40 <line:1284:1, col:8> col:8 implicit struct __decay
| |   | |-AccessSpecDecl 0x7fd301852dd8 <line:1285:1, col:7> col:1 public
| |   | `-TypedefDecl 0x7fd301853870 <line:1286:5, line:1296:30> col:30 type 'typename conditional<is_array<_Up>::value, typename remove_extent<_Up>::type *, typename conditional<is_function<_Up>::value, typename add_pointer<_Up>::type, typename remove_cv<_Up>::type>::type>::type'
| |   |   `-DependentNameType 0x7fd301853800 'typename conditional<is_array<_Up>::value, typename remove_extent<_Up>::type *, typename conditional<is_function<_Up>::value, typename add_pointer<_Up>::type, typename remove_cv<_Up>::type>::type>::type' dependent
| |   |-ClassTemplateDecl 0x7fd301853a38 <line:1299:1, line:1306:1> line:1300:29 decay
| |   | |-TemplateTypeParmDecl 0x7fd3018538e8 <line:1299:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd3018539a0 <line:1300:1, line:1306:1> line:1300:29 struct decay definition
| |   |   |-TypeVisibilityAttr 0x7fd301853cb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fd301853cf8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1300:1, col:29> col:29 implicit struct decay
| |   |   |-AccessSpecDecl 0x7fd301853d90 <line:1302:1, col:8> col:1 private
| |   |   |-TypedefDecl 0x7fd301853ee0 <line:1303:5, col:50> col:50 referenced _Up 'typename remove_reference<_Tp>::type'
| |   |   | `-DependentNameType 0x7fd301853e70 'typename remove_reference<_Tp>::type' dependent
| |   |   |-AccessSpecDecl 0x7fd301853f38 <line:1304:1, col:7> col:1 public
| |   |   `-TypedefDecl 0x7fd301854300 <line:1305:5, col:73> col:73 type 'typename __decay<_Up, __is_referenceable<_Up>::value>::type'
| |   |     `-DependentNameType 0x7fd301854290 'typename __decay<_Up, __is_referenceable<_Up>::value>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fd301854600 <line:1309:1, col:59> col:22 decay_t
| |   | |-TemplateTypeParmDecl 0x7fd301854378 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fd301854560 <col:22, col:59> col:28 decay_t 'typename decay<_Tp>::type'
| |   |   `-DependentNameType 0x7fd3018544f0 'typename decay<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fd301854798 <line:1314:1, line:1315:59> line:1314:50 is_abstract
| |   | |-TemplateTypeParmDecl 0x7fd301854650 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd301854700 <col:22, line:1315:59> line:1314:50 struct is_abstract definition
| |   |   |-public 'integral_constant<_Bool, __is_abstract(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fd301854a10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd301854bf8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1314:22, col:50> col:50 implicit struct is_abstract
| |   |-ClassTemplateDecl 0x7fd301854df8 <line:1325:1, line:1326:70> col:1 __libcpp_is_final
| |   | |-TemplateTypeParmDecl 0x7fd301854cb0 <line:1325:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd301854d60 <col:22, line:1326:70> col:1 struct __libcpp_is_final definition
| |   |   |-public 'integral_constant<_Bool, __is_final(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fd301855070 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd301855258 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1325:22, line:1326:1> col:1 implicit struct __libcpp_is_final
| |   |-ClassTemplateDecl 0x7fd301855458 <line:1333:1, line:1334:61> col:1 is_final
| |   | |-TemplateTypeParmDecl 0x7fd301855310 <line:1333:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd3018553c0 <col:22, line:1334:61> col:1 struct is_final definition
| |   |   |-public 'integral_constant<_Bool, __is_final(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fd3018556e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd301855868 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1333:22, line:1334:1> col:1 implicit struct is_final
| |   |-ClassTemplateDecl 0x7fd301855ae0 <line:1359:1, line:1361:63> line:1360:29 is_base_of
| |   | |-TemplateTypeParmDecl 0x7fd301855920 <line:1359:11, col:17> col:17 referenced class depth 0 index 0 _Bp
| |   | |-TemplateTypeParmDecl 0x7fd301855988 <col:22, col:28> col:28 referenced class depth 0 index 1 _Dp
| |   | `-CXXRecordDecl 0x7fd301855a48 <line:1360:1, line:1361:63> line:1360:29 struct is_base_of definition
| |   |   |-public 'integral_constant<_Bool, __is_base_of(_Bp, _Dp)>'
| |   |   |-TypeVisibilityAttr 0x7fd301855d80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd301855f78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1360:1, col:29> col:29 implicit struct is_base_of
| |   |-ClassTemplateDecl 0x7fd3018561f0 <line:1399:1, line:1401:65> line:1399:61 is_convertible
| |   | |-TemplateTypeParmDecl 0x7fd301856030 <col:11, col:17> col:17 referenced class depth 0 index 0 _T1
| |   | |-TemplateTypeParmDecl 0x7fd301856098 <col:22, col:28> col:28 referenced class depth 0 index 1 _T2
| |   | `-CXXRecordDecl 0x7fd301856158 <col:33, line:1401:65> line:1399:61 struct is_convertible definition
| |   |   |-public 'integral_constant<_Bool, __is_convertible_to(_T1, _T2) && !is_abstract<_T2>::value>'
| |   |   |-TypeVisibilityAttr 0x7fd301856490 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd301857848 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1399:33, col:61> col:61 implicit struct is_convertible
| |   |-ClassTemplateDecl 0x7fd301857a48 <line:1489:1, line:1491:56> line:1490:29 is_empty
| |   | |-TemplateTypeParmDecl 0x7fd301857900 <line:1489:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd3018579b0 <line:1490:1, line:1491:56> line:1490:29 struct is_empty definition
| |   |   |-public 'integral_constant<_Bool, __is_empty(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fd301857cc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd301857ea8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1490:1, col:29> col:29 implicit struct is_empty
| |   |-ClassTemplateDecl 0x7fd3018580a8 <line:1525:1, line:1527:62> line:1526:29 is_polymorphic
| |   | |-TemplateTypeParmDecl 0x7fd301857f60 <line:1525:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd301858010 <line:1526:1, line:1527:62> line:1526:29 struct is_polymorphic definition
| |   |   |-public 'integral_constant<_Bool, __is_polymorphic(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fd301858320 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd301858508 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1526:1, col:29> col:29 implicit struct is_polymorphic
| |   |-ClassTemplateDecl 0x7fd301858708 <line:1550:1, line:1551:70> line:1550:50 has_virtual_destructor
| |   | |-TemplateTypeParmDecl 0x7fd3018585c0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd301858670 <col:22, line:1551:70> line:1550:50 struct has_virtual_destructor definition
| |   |   |-public 'integral_constant<_Bool, __has_virtual_destructor(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fd301858980 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd301858b68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1550:22, col:50> col:50 implicit struct has_virtual_destructor
| |   |-ClassTemplateDecl 0x7fd301858d68 <line:1567:1, line:1568:59> line:1567:50 alignment_of
| |   | |-TemplateTypeParmDecl 0x7fd301858c20 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd301858cd0 <col:22, line:1568:59> line:1567:50 struct alignment_of definition
| |   |   |-public 'integral_constant<size_t, __alignof(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fd301858fe0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd3018591c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1567:22, col:50> col:50 implicit struct alignment_of
| |   |-ClassTemplateDecl 0x7fd301859410 <line:1577:1, line:1582:1> line:1578:8 __type_list
| |   | |-TemplateTypeParmDecl 0x7fd301859280 <line:1577:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-TemplateTypeParmDecl 0x7fd3018592e8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Tp
| |   | |-CXXRecordDecl 0x7fd301859378 <line:1578:1, line:1582:1> line:1578:8 struct __type_list definition
| |   | | |-CXXRecordDecl 0x7fd3018596f0 <col:1, col:8> col:8 implicit struct __type_list
| |   | | |-TypedefDecl 0x7fd301859798 <line:1580:5, col:17> col:17 _Head '_Hp'
| |   | | | `-TemplateTypeParmType 0x7fd3018592c0 '_Hp' dependent depth 0 index 0
| |   | | |   `-TemplateTypeParm 0x7fd301859280 '_Hp'
| |   | | `-TypedefDecl 0x7fd301859800 <line:1581:5, col:17> col:17 _Tail '_Tp'
| |   | |   `-TemplateTypeParmType 0x7fd301859330 '_Tp' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fd3018592e8 '_Tp'
| |   | |-ClassTemplateSpecializationDecl 0x7fd30185d518 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<int *>'
| |   | | `-TemplateArgument type 'struct std::__1::__nat'
| |   | |-ClassTemplateSpecializationDecl 0x7fd30185d730 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<struct std::__1::__struct_double4>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat>'
| |   | |-ClassTemplateSpecializationDecl 0x7fd30185d940 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<struct std::__1::__struct_double>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> >'
| |   | |-ClassTemplateSpecializationDecl 0x7fd30185db50 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<long double>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > >'
| |   | |-ClassTemplateSpecializationDecl 0x7fd30185de00 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<double>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > >'
| |   | |-ClassTemplateSpecializationDecl 0x7fd30185e010 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<unsigned long long>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > >'
| |   | |-ClassTemplateSpecializationDecl 0x7fd30185e220 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<unsigned long>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > >'
| |   | |-ClassTemplateSpecializationDecl 0x7fd30185e430 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<unsigned int>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<unsigned long>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > > >'
| |   | |-ClassTemplateSpecializationDecl 0x7fd30185e640 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<unsigned short>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<unsigned int>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > > > >'
| |   | |-ClassTemplateSpecializationDecl 0x7fd30185e850 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<unsigned char>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<unsigned short>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned int>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > > > > >'
| |   | |-ClassTemplateSpecializationDecl 0x7fd30187c8e8 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type '__int128'
| |   | | `-TemplateArgument type 'struct std::__1::__nat'
| |   | |-ClassTemplateSpecializationDecl 0x7fd30187cb00 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'long long'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<__int128, struct std::__1::__nat>'
| |   | |-ClassTemplateSpecializationDecl 0x7fd30187cd10 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'long'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> >'
| |   | |-ClassTemplateSpecializationDecl 0x7fd30187cf20 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'int'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > >'
| |   | |-ClassTemplateSpecializationDecl 0x7fd30187d130 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'short'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > >'
| |   | |-ClassTemplateSpecializationDecl 0x7fd30187d340 <line:1577:1, line:1582:1> line:1578:8 struct __type_list definition
| |   | | |-TemplateArgument type 'signed char'
| |   | | |-TemplateArgument type 'struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > >'
| |   | | |-CXXRecordDecl 0x7fd301885088 prev 0x7fd30187d340 <col:1, col:8> col:8 implicit struct __type_list
| |   | | |-TypedefDecl 0x7fd301885158 <line:1580:5, col:17> col:17 referenced _Head 'signed char':'signed char'
| |   | | | `-SubstTemplateTypeParmType 0x7fd301885120 'signed char' sugar
| |   | | |   |-TemplateTypeParmType 0x7fd3018592c0 '_Hp' dependent depth 0 index 0
| |   | | |   | `-TemplateTypeParm 0x7fd301859280 '_Hp'
| |   | | |   `-BuiltinType 0x7fd2ff832780 'signed char'
| |   | | `-TypedefDecl 0x7fd3018851e8 <line:1581:5, col:17> col:17 _Tail 'struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > >':'struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > >'
| |   | |   `-SubstTemplateTypeParmType 0x7fd3018851b0 'struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > >' sugar
| |   | |     |-TemplateTypeParmType 0x7fd301859330 '_Tp' dependent depth 0 index 1
| |   | |     | `-TemplateTypeParm 0x7fd3018592e8 '_Tp'
| |   | |     `-RecordType 0x7fd30187d230 'struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > >'
| |   | |       `-ClassTemplateSpecialization 0x7fd30187d130 '__type_list'
| |   | |-ClassTemplateSpecializationDecl 0x7fd30187d640 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'unsigned __int128'
| |   | | `-TemplateArgument type 'struct std::__1::__nat'
| |   | |-ClassTemplateSpecializationDecl 0x7fd30187d850 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'unsigned long long'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat>'
| |   | |-ClassTemplateSpecializationDecl 0x7fd30187da60 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'unsigned long'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> >'
| |   | |-ClassTemplateSpecializationDecl 0x7fd30187dc70 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'unsigned int'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > >'
| |   | |-ClassTemplateSpecializationDecl 0x7fd30187de90 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'unsigned short'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > >'
| |   | `-ClassTemplateSpecializationDecl 0x7fd30187e0a0 <line:1577:1, line:1582:1> line:1578:8 struct __type_list definition
| |   |   |-TemplateArgument type 'unsigned char'
| |   |   |-TemplateArgument type 'struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > >'
| |   |   |-CXXRecordDecl 0x7fd30188c968 prev 0x7fd30187e0a0 <col:1, col:8> col:8 implicit struct __type_list
| |   |   |-TypedefDecl 0x7fd30188ca38 <line:1580:5, col:17> col:17 referenced _Head 'unsigned char':'unsigned char'
| |   |   | `-SubstTemplateTypeParmType 0x7fd30188ca00 'unsigned char' sugar
| |   |   |   |-TemplateTypeParmType 0x7fd3018592c0 '_Hp' dependent depth 0 index 0
| |   |   |   | `-TemplateTypeParm 0x7fd301859280 '_Hp'
| |   |   |   `-BuiltinType 0x7fd2ff832820 'unsigned char'
| |   |   `-TypedefDecl 0x7fd30188cac8 <line:1581:5, col:17> col:17 _Tail 'struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > >':'struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > >'
| |   |     `-SubstTemplateTypeParmType 0x7fd30188ca90 'struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > >' sugar
| |   |       |-TemplateTypeParmType 0x7fd301859330 '_Tp' dependent depth 0 index 1
| |   |       | `-TemplateTypeParm 0x7fd3018592e8 '_Tp'
| |   |       `-RecordType 0x7fd30187df90 'struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > >'
| |   |         `-ClassTemplateSpecialization 0x7fd30187de90 '__type_list'
| |   |-CXXRecordDecl 0x7fd301859878 <line:1584:1, line:1592:1> line:1584:8 referenced struct __nat definition
| |   | |-CXXRecordDecl 0x7fd301859998 <col:1, col:8> col:8 implicit referenced struct __nat
| |   | |-CXXConstructorDecl 0x7fd301859a98 <line:1587:5, col:20> col:5 __nat 'void (void)' delete trivial
| |   | |-CXXConstructorDecl 0x7fd301859c40 <line:1588:5, col:32> col:5 __nat 'void (const struct std::__1::__nat &)' delete trivial
| |   | | `-ParmVarDecl 0x7fd301859b78 <col:11, col:22> col:23 'const struct std::__1::__nat &'
| |   | |-CXXMethodDecl 0x7fd301859df0 <line:1589:5, col:43> col:12 operator= 'struct std::__1::__nat &(const struct std::__1::__nat &)' delete trivial
| |   | | `-ParmVarDecl 0x7fd301859d00 <col:22, col:33> col:34 'const struct std::__1::__nat &'
| |   | `-CXXDestructorDecl 0x7fd301859ee0 <line:1590:5, col:21> col:5 ~__nat 'void (void)' delete trivial noexcept-unevaluated 0x7fd301859ee0
| |   |-ClassTemplateDecl 0x7fd30185a0d8 <line:1594:1, line:1599:1> line:1595:8 __align_type
| |   | |-TemplateTypeParmDecl 0x7fd301859fb8 <line:1594:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fd30185a040 <line:1595:1, line:1599:1> line:1595:8 struct __align_type definition
| |   | | |-CXXRecordDecl 0x7fd30185a350 <col:1, col:8> col:8 implicit struct __align_type
| |   | | |-VarDecl 0x7fd30185a3f8 <line:1597:5, col:52> col:25 value 'const size_t':'const unsigned long' static cinit
| |   | | | `-DependentScopeDeclRefExpr 0x7fd30185a528 <col:33, col:52> '<dependent type>' lvalue
| |   | | `-TypedefDecl 0x7fd30185a578 <line:1598:5, col:17> col:17 type '_Tp'
| |   | |   `-TemplateTypeParmType 0x7fd30185a000 '_Tp' dependent depth 0 index 0
| |   | |     `-TemplateTypeParm 0x7fd301859fb8 '_Tp'
| |   | |-ClassTemplateSpecializationDecl 0x7fd30185af00 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
| |   | | `-TemplateArgument type 'unsigned char'
| |   | |-ClassTemplateSpecializationDecl 0x7fd30185b0d0 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
| |   | | `-TemplateArgument type 'unsigned short'
| |   | |-ClassTemplateSpecializationDecl 0x7fd30185b2a0 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
| |   | | `-TemplateArgument type 'unsigned int'
| |   | |-ClassTemplateSpecializationDecl 0x7fd30185b470 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
| |   | | `-TemplateArgument type 'unsigned long'
| |   | |-ClassTemplateSpecializationDecl 0x7fd30185b640 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
| |   | | `-TemplateArgument type 'unsigned long long'
| |   | |-ClassTemplateSpecializationDecl 0x7fd30185b810 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
| |   | | `-TemplateArgument type 'double'
| |   | |-ClassTemplateSpecializationDecl 0x7fd30185ce00 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
| |   | | `-TemplateArgument type 'long double'
| |   | |-ClassTemplateSpecializationDecl 0x7fd30185cfc8 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
| |   | | `-TemplateArgument type 'struct std::__1::__struct_double'
| |   | |-ClassTemplateSpecializationDecl 0x7fd30185d188 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
| |   | | `-TemplateArgument type 'struct std::__1::__struct_double4'
| |   | `-ClassTemplateSpecializationDecl 0x7fd30185d350 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
| |   |   `-TemplateArgument type 'int *'
| |   |-CXXRecordDecl 0x7fd30185aa00 <line:1601:1, col:42> col:8 referenced struct __struct_double definition
| |   | |-CXXRecordDecl 0x7fd30185ab28 <col:1, col:8> col:8 implicit struct __struct_double
| |   | `-FieldDecl 0x7fd30185abd8 <col:25, col:37> col:37 __lx 'long double'
| |   |-CXXRecordDecl 0x7fd30185ac40 <line:1602:1, col:41> col:8 referenced struct __struct_double4 definition
| |   | |-CXXRecordDecl 0x7fd30185ad68 <col:1, col:8> col:8 implicit struct __struct_double4
| |   | `-FieldDecl 0x7fd30185ae80 <col:26, col:39> col:33 __lx 'double [4]'
| |   |-TypedefDecl 0x7fd30185ea60 <line:1604:1, line:1616:25> col:25 referenced __all_types '__type_list<__align_type<unsigned char>, __type_list<__align_type<unsigned short>, __type_list<__align_type<unsigned int>, __type_list<__align_type<unsigned long>, __type_list<__align_type<unsigned long long>, __type_list<__align_type<double>, __type_list<__align_type<long double>, __type_list<__align_type<struct std::__1::__struct_double>, __type_list<__align_type<struct std::__1::__struct_double4>, __type_list<__align_type<int *>, struct std::__1::__nat> > > > > > > > > >':'struct std::__1::__type_list<struct std::__1::__align_type<unsigned char>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned short>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned int>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > > > > > >'
| |   | `-TemplateSpecializationType 0x7fd30185e970 '__type_list<__align_type<unsigned char>, __type_list<__align_type<unsigned short>, __type_list<__align_type<unsigned int>, __type_list<__align_type<unsigned long>, __type_list<__align_type<unsigned long long>, __type_list<__align_type<double>, __type_list<__align_type<long double>, __type_list<__align_type<struct std::__1::__struct_double>, __type_list<__align_type<struct std::__1::__struct_double4>, __type_list<__align_type<int *>, struct std::__1::__nat> > > > > > > > > >' sugar __type_list
| |   |   |-TemplateArgument type '__align_type<unsigned char>':'struct std::__1::__align_type<unsigned char>'
| |   |   |-TemplateArgument type '__type_list<__align_type<unsigned short>, __type_list<__align_type<unsigned int>, __type_list<__align_type<unsigned long>, __type_list<__align_type<unsigned long long>, __type_list<__align_type<double>, __type_list<__align_type<long double>, __type_list<__align_type<struct std::__1::__struct_double>, __type_list<__align_type<struct std::__1::__struct_double4>, __type_list<__align_type<int *>, struct std::__1::__nat> > > > > > > > >':'struct std::__1::__type_list<struct std::__1::__align_type<unsigned short>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned int>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > > > > >'
| |   |   `-RecordType 0x7fd30185e950 'struct std::__1::__type_list<struct std::__1::__align_type<unsigned char>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned short>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned int>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > > > > > >'
| |   |     `-ClassTemplateSpecialization 0x7fd30185e850 '__type_list'
| |   |-ClassTemplateDecl 0x7fd30185ec48 <line:1618:1, col:44> col:44 __find_pod
| |   | |-TemplateTypeParmDecl 0x7fd30185eab8 <col:11, col:17> col:17 class depth 0 index 0 _TL
| |   | |-NonTypeTemplateParmDecl 0x7fd30185eb38 <col:22, col:29> col:29 'size_t':'unsigned long' depth 0 index 1 _Align
| |   | `-CXXRecordDecl 0x7fd30185ebb0 <col:37, col:44> col:44 struct __find_pod
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd30185f2b0 <line:1620:1, line:1628:1> line:1621:8 struct __find_pod definition
| |   | |-TemplateArgument type '__type_list<type-parameter-0-0, struct std::__1::__nat>'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fd30185f150 <col:44> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fd30185ef68 '_Align' 'size_t':'unsigned long'
| |   | |-TemplateTypeParmDecl 0x7fd30185eee8 <line:1620:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-NonTypeTemplateParmDecl 0x7fd30185ef68 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Align
| |   | |-CXXRecordDecl 0x7fd30185f580 <line:1621:1, col:8> col:8 implicit struct __find_pod
| |   | `-TypedefDecl 0x7fd30185f9c0 <line:1623:5, line:1627:34> col:34 type 'typename conditional<_Align == _Hp::value, typename _Hp::type, void>::type'
| |   |   `-DependentNameType 0x7fd30185f950 'typename conditional<_Align == _Hp::value, typename _Hp::type, void>::type' dependent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd30185fe70 <line:1630:1, line:1638:1> line:1631:8 struct __find_pod definition
| |   | |-TemplateArgument type '__type_list<type-parameter-0-0, type-parameter-0-1>'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fd30185fcc0 <col:42> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fd30185fb28 '_Align' 'size_t':'unsigned long'
| |   | |-TemplateTypeParmDecl 0x7fd30185fa38 <line:1630:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-TemplateTypeParmDecl 0x7fd30185faa8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fd30185fb28 <col:33, col:40> col:40 referenced 'size_t':'unsigned long' depth 0 index 2 _Align
| |   | |-CXXRecordDecl 0x7fd301860140 <line:1631:1, col:8> col:8 implicit struct __find_pod
| |   | `-TypedefDecl 0x7fd301860790 <line:1633:5, line:1637:34> col:34 type 'typename conditional<_Align == _Hp::value, typename _Hp::type, typename __find_pod<_Tp, _Align>::type>::type'
| |   |   `-DependentNameType 0x7fd301860720 'typename conditional<_Align == _Hp::value, typename _Hp::type, typename __find_pod<_Tp, _Align>::type>::type' dependent
| |   |-ClassTemplateDecl 0x7fd301860998 <line:1640:1, col:42> col:42 __find_max_align
| |   | |-TemplateTypeParmDecl 0x7fd301860808 <col:11, col:17> col:17 class depth 0 index 0 _TL
| |   | |-NonTypeTemplateParmDecl 0x7fd301860888 <col:22, col:29> col:29 'size_t':'unsigned long' depth 0 index 1 _Len
| |   | `-CXXRecordDecl 0x7fd301860900 <col:35, col:42> col:42 struct __find_max_align
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd301860f60 <line:1642:1, line:1643:104> col:8 struct __find_max_align definition
| |   | |-public 'integral_constant<size_t, _Hp::value>'
| |   | |-TemplateArgument type '__type_list<type-parameter-0-0, struct std::__1::__nat>'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fd301860e00 <col:50> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fd301860c78 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateTypeParmDecl 0x7fd301860bf8 <line:1642:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-NonTypeTemplateParmDecl 0x7fd301860c78 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Len
| |   | `-CXXRecordDecl 0x7fd301861448 <line:1643:1, col:8> col:8 implicit struct __find_max_align
| |   |-ClassTemplateDecl 0x7fd3018616f8 <line:1645:1, line:1653:1> line:1646:8 __select_align
| |   | |-NonTypeTemplateParmDecl 0x7fd301861510 <line:1645:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-NonTypeTemplateParmDecl 0x7fd301861578 <col:24, col:31> col:31 referenced 'size_t':'unsigned long' depth 0 index 1 _A1
| |   | |-NonTypeTemplateParmDecl 0x7fd3018615e0 <col:36, col:43> col:43 referenced 'size_t':'unsigned long' depth 0 index 2 _A2
| |   | `-CXXRecordDecl 0x7fd301861660 <line:1646:1, line:1653:1> line:1646:8 struct __select_align definition
| |   |   |-CXXRecordDecl 0x7fd301861a50 <col:1, col:8> col:8 implicit struct __select_align
| |   |   |-AccessSpecDecl 0x7fd301861ae8 <line:1648:1, col:8> col:1 private
| |   |   |-VarDecl 0x7fd301861b20 <line:1649:5, col:51> col:25 referenced __min 'const size_t':'const unsigned long' static cinit
| |   |   | `-ConditionalOperator 0x7fd301861c48 <col:33, col:51> 'size_t':'unsigned long'
| |   |   |   |-BinaryOperator 0x7fd301861bd0 <col:33, col:39> '_Bool' '<'
| |   |   |   | |-DeclRefExpr 0x7fd301861b80 <col:33> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fd3018615e0 '_A2' 'size_t':'unsigned long'
| |   |   |   | `-DeclRefExpr 0x7fd301861ba8 <col:39> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fd301861578 '_A1' 'size_t':'unsigned long'
| |   |   |   |-DeclRefExpr 0x7fd301861bf8 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fd3018615e0 '_A2' 'size_t':'unsigned long'
| |   |   |   `-DeclRefExpr 0x7fd301861c20 <col:51> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fd301861578 '_A1' 'size_t':'unsigned long'
| |   |   |-VarDecl 0x7fd301861c88 <line:1650:5, col:51> col:25 referenced __max 'const size_t':'const unsigned long' static cinit
| |   |   | `-ConditionalOperator 0x7fd301861db0 <col:33, col:51> 'size_t':'unsigned long'
| |   |   |   |-BinaryOperator 0x7fd301861d38 <col:33, col:39> '_Bool' '<'
| |   |   |   | |-DeclRefExpr 0x7fd301861ce8 <col:33> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fd301861578 '_A1' 'size_t':'unsigned long'
| |   |   |   | `-DeclRefExpr 0x7fd301861d10 <col:39> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fd3018615e0 '_A2' 'size_t':'unsigned long'
| |   |   |   |-DeclRefExpr 0x7fd301861d60 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fd3018615e0 '_A2' 'size_t':'unsigned long'
| |   |   |   `-DeclRefExpr 0x7fd301861d88 <col:51> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fd301861578 '_A1' 'size_t':'unsigned long'
| |   |   |-AccessSpecDecl 0x7fd301862200 <line:1651:1, col:7> col:1 public
| |   |   `-VarDecl 0x7fd301862238 <line:1652:5, col:56> col:25 value 'const size_t':'const unsigned long' static cinit
| |   |     `-ImplicitCastExpr 0x7fd3018623a8 <col:33, col:56> 'size_t':'unsigned long' <LValueToRValue>
| |   |       `-ConditionalOperator 0x7fd301862378 <col:33, col:56> 'const size_t':'const unsigned long' lvalue
| |   |         |-BinaryOperator 0x7fd301862300 <col:33, col:40> '_Bool' '<'
| |   |         | |-DeclRefExpr 0x7fd301862298 <col:33> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fd301861510 '_Len' 'size_t':'unsigned long'
| |   |         | `-ImplicitCastExpr 0x7fd3018622e8 <col:40> 'size_t':'unsigned long' <LValueToRValue>
| |   |         |   `-DeclRefExpr 0x7fd3018622c0 <col:40> 'const size_t':'const unsigned long' lvalue Var 0x7fd301861c88 '__max' 'const size_t':'const unsigned long'
| |   |         |-DeclRefExpr 0x7fd301862328 <col:48> 'const size_t':'const unsigned long' lvalue Var 0x7fd301861b20 '__min' 'const size_t':'const unsigned long'
| |   |         `-DeclRefExpr 0x7fd301862350 <col:56> 'const size_t':'const unsigned long' lvalue Var 0x7fd301861c88 '__max' 'const size_t':'const unsigned long'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd3018627c0 <line:1655:1, line:1657:118> line:1656:8 struct __find_max_align definition
| |   | |-public 'integral_constant<size_t, __select_align<_Len, _Hp::value, __find_max_align<_Tp, _Len>::value>::value>'
| |   | |-TemplateArgument type '__type_list<type-parameter-0-0, type-parameter-0-1>'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fd301862660 <col:48> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fd3018624c8 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateTypeParmDecl 0x7fd3018623e0 <line:1655:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-TemplateTypeParmDecl 0x7fd301862448 <col:22, col:28> col:28 referenced class depth 0 index 1 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fd3018624c8 <col:33, col:40> col:40 referenced 'size_t':'unsigned long' depth 0 index 2 _Len
| |   | `-CXXRecordDecl 0x7fd3018630d8 <line:1656:1, col:8> col:8 implicit struct __find_max_align
| |   |-ClassTemplateDecl 0x7fd301863538 <line:1659:1, line:1669:1> line:1660:29 aligned_storage
| |   | |-NonTypeTemplateParmDecl 0x7fd3018631a0 <line:1659:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-NonTypeTemplateParmDecl 0x7fd3018633f8 <col:24, col:77> col:31 referenced 'size_t':'unsigned long' depth 0 index 1 _Align
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fd3018633a8 <col:40, col:77> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fd3018634a0 <line:1660:1, line:1669:1> line:1660:29 struct aligned_storage definition
| |   |   |-TypeVisibilityAttr 0x7fd301863820 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fd301863868 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1660:1, col:29> col:29 implicit struct aligned_storage
| |   |   |-TypedefDecl 0x7fd301863b20 <line:1662:5, col:60> col:60 referenced _Aligner 'typename __find_pod<__all_types, _Align>::type'
| |   |   | `-DependentNameType 0x7fd301863ab0 'typename __find_pod<__all_types, _Align>::type' dependent
| |   |   |-StaticAssertDecl 0x7fd301863dc0 <line:1663:5, col:48> col:5
| |   |   | |-UnaryOperator 0x7fd301863cf8 <col:19, col:39> '<dependent type>' prefix '!'
| |   |   | | `-DependentScopeDeclRefExpr 0x7fd301863cb8 <col:20, col:39> '<dependent type>' lvalue
| |   |   | `-StringLiteral 0x7fd301863d98 <col:46> 'const char [1]' lvalue ""
| |   |   `-CXXRecordDecl 0x7fd301863df8 <line:1664:5, line:1668:5> line:1664:11 union type definition
| |   |     |-CXXRecordDecl 0x7fd301863f18 <col:5, col:11> col:11 implicit union type
| |   |     |-FieldDecl 0x7fd301863fc0 <line:1666:9, col:18> col:18 __align 'std::__1::aligned_storage::_Aligner':'typename __find_pod<__all_types, _Align>::type'
| |   |     `-FieldDecl 0x7fd301864628 <line:1667:9, col:65> col:23 __data 'unsigned char [(_Len + _Align - 1) / _Align * _Align]'
| |   |-TypeAliasTemplateDecl 0x7fd301864b30 <line:1672:1, line:1673:71> col:5 aligned_storage_t
| |   | |-NonTypeTemplateParmDecl 0x7fd3018646c0 <line:1672:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-NonTypeTemplateParmDecl 0x7fd301864888 <col:24, col:77> col:31 referenced 'size_t':'unsigned long' depth 0 index 1 _Align
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fd301864838 <col:40, col:77> '<dependent type>' lvalue
| |   | `-TypeAliasDecl 0x7fd301864ad0 <line:1673:5, col:71> col:11 aligned_storage_t 'typename aligned_storage<_Len, _Align>::type'
| |   |   `-DependentNameType 0x7fd301864a60 'typename aligned_storage<_Len, _Align>::type' dependent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd301864dc0 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fd301864c30 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fd301864b90 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 1
| |   | |-NonTypeTemplateParmDecl 0x7fd301864b90 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fd301864f28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fd301865090 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fd301865148 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fd301865268 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fd301865128 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1686:40> 'int' 1
| |   |   |-CXXRecordDecl 0x7fd3018652b8 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fd301865588 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 1 - 1) / 1 * 1]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd301866c60 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fd301866ad0 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fd301866a30 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 2
| |   | |-NonTypeTemplateParmDecl 0x7fd301866a30 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fd301866dc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fd301866f30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fd301866fe8 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fd301867108 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fd301866fc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1687:40> 'int' 2
| |   |   |-CXXRecordDecl 0x7fd301867158 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fd301867428 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 2 - 1) / 2 * 2]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd3018676f0 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fd301867560 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fd3018674c0 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 4
| |   | |-NonTypeTemplateParmDecl 0x7fd3018674c0 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fd301867858 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fd301867a00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fd301867ab8 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fd301867bd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fd301867a98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1688:40> 'int' 4
| |   |   |-CXXRecordDecl 0x7fd301867c28 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fd301867ef8 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 4 - 1) / 4 * 4]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd3018681c0 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fd301868030 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fd301867f90 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 8
| |   | |-NonTypeTemplateParmDecl 0x7fd301867f90 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fd301868328 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fd301868490 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fd301868548 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fd301868668 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fd301868528 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1689:40> 'int' 8
| |   |   |-CXXRecordDecl 0x7fd3018686b8 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fd301868988 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 8 - 1) / 8 * 8]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd301868c60 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fd301868ad0 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fd301868a30 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 16
| |   | |-NonTypeTemplateParmDecl 0x7fd301868a30 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fd301868dc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fd301868f30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fd301868fe8 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fd301869108 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fd301868fc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1690:40> 'int' 16
| |   |   |-CXXRecordDecl 0x7fd301869158 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fd301869428 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 16 - 1) / 16 * 16]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd3018696f0 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fd301869560 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fd3018694c0 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 32
| |   | |-NonTypeTemplateParmDecl 0x7fd3018694c0 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fd301869858 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fd3018699c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fd301869a78 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fd301869b98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fd301869a58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1691:40> 'int' 32
| |   |   |-CXXRecordDecl 0x7fd301869be8 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fd301869eb8 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 32 - 1) / 32 * 32]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd30186a180 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fd301869ff0 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fd301869f50 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 64
| |   | |-NonTypeTemplateParmDecl 0x7fd301869f50 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fd30186a2e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fd30186a450 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fd30186a508 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fd30186a628 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fd30186a4e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1692:40> 'int' 64
| |   |   |-CXXRecordDecl 0x7fd30186a678 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fd30186a948 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 64 - 1) / 64 * 64]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd30186ac30 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fd30186aaa0 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fd30186aa00 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 128
| |   | |-NonTypeTemplateParmDecl 0x7fd30186aa00 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fd30186ad98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fd30186af00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fd30186afb8 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fd30186b0d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fd30186af98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1693:40> 'int' 128
| |   |   |-CXXRecordDecl 0x7fd30186b128 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fd30186b3f8 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 128 - 1) / 128 * 128]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd30186b6c0 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fd30186b530 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fd30186b490 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 256
| |   | |-NonTypeTemplateParmDecl 0x7fd30186b490 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fd30186b828 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fd30186b990 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fd30186ba48 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fd30186bb68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fd30186ba28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1694:40> 'int' 256
| |   |   |-CXXRecordDecl 0x7fd30186bbb8 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fd30186be88 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 256 - 1) / 256 * 256]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd30186c150 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fd30186bfc0 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fd30186bf20 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 512
| |   | |-NonTypeTemplateParmDecl 0x7fd30186bf20 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fd30186c2b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fd30186c420 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fd30186c4d8 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fd30186c5f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fd30186c4b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1695:40> 'int' 512
| |   |   |-CXXRecordDecl 0x7fd30186c648 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fd30186c918 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 512 - 1) / 512 * 512]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd30186cc30 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fd30186caa0 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fd30186ca00 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 1024
| |   | |-NonTypeTemplateParmDecl 0x7fd30186ca00 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fd30186cd98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fd30186cf00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fd30186cfb8 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fd30186d0d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fd30186cf98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1696:40> 'int' 1024
| |   |   |-CXXRecordDecl 0x7fd30186d128 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fd30186d3f8 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 1024 - 1) / 1024 * 1024]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd30186d6c0 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fd30186d530 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fd30186d490 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 2048
| |   | |-NonTypeTemplateParmDecl 0x7fd30186d490 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fd30186d828 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fd30186d990 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fd30186da48 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fd30186db68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fd30186da28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1697:40> 'int' 2048
| |   |   |-CXXRecordDecl 0x7fd30186dbb8 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fd30186de88 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 2048 - 1) / 2048 * 2048]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd30186e150 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fd30186dfc0 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fd30186df20 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 4096
| |   | |-NonTypeTemplateParmDecl 0x7fd30186df20 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fd30186e2b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fd30186e420 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fd30186e4d8 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fd30186e5f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fd30186e4b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1698:40> 'int' 4096
| |   |   |-CXXRecordDecl 0x7fd30186e648 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fd30186e918 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 4096 - 1) / 4096 * 4096]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd30186ec30 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fd30186eaa0 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fd30186ea00 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 8192
| |   | |-NonTypeTemplateParmDecl 0x7fd30186ea00 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fd30186ed98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fd30186ef00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fd30186efb8 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fd30186f0d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fd30186ef98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1699:40> 'int' 8192
| |   |   |-CXXRecordDecl 0x7fd30186f128 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fd30186f3f8 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 8192 - 1) / 8192 * 8192]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd30186f6c0 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fd30186f530 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fd30186f490 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 16384
| |   | |-NonTypeTemplateParmDecl 0x7fd30186f490 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fd30186f828 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fd30186f990 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fd30186fa48 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fd30186fb68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fd30186fa28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1702:40> 'int' 16384
| |   |   |-CXXRecordDecl 0x7fd30186fbb8 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fd30186fe88 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 16384 - 1) / 16384 * 16384]'
| |   |-ClassTemplateDecl 0x7fd301870098 <line:1711:1, line:1712:8> col:8 __static_max
| |   | |-NonTypeTemplateParmDecl 0x7fd30186ff20 <line:1711:11, col:18> col:18 'size_t':'unsigned long' depth 0 index 0 _I0
| |   | |-NonTypeTemplateParmDecl 0x7fd30186ff88 <col:23, col:33> col:33 'size_t':'unsigned long' depth 0 index 1 ... _In
| |   | `-CXXRecordDecl 0x7fd301870000 <line:1712:1, col:8> col:8 struct __static_max
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd301870510 <line:1714:1, line:1718:1> line:1715:8 struct __static_max definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fd3018703e8 <col:21> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fd301870378 '_I0' 'size_t':'unsigned long'
| |   | |-TemplateArgument pack
| |   | |-NonTypeTemplateParmDecl 0x7fd301870378 <line:1714:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _I0
| |   | |-CXXRecordDecl 0x7fd3018707a0 <line:1715:1, col:8> col:8 implicit struct __static_max
| |   | `-VarDecl 0x7fd301870848 <line:1717:5, col:33> col:25 value 'const size_t':'const unsigned long' static cinit
| |   |   `-DeclRefExpr 0x7fd3018708a8 <col:33> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fd301870378 '_I0' 'size_t':'unsigned long'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd301870ce0 <line:1720:1, line:1725:1> line:1721:8 struct __static_max definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fd301870a80 <col:21> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fd301870900 '_I0' 'size_t':'unsigned long'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument expr
| |   | | | `-DeclRefExpr 0x7fd301870aa8 <col:26> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fd301870968 '_I1' 'size_t':'unsigned long'
| |   | | `-TemplateArgument expr
| |   | |   `-PackExpansionExpr 0x7fd301870af8 <col:31, col:34> '<dependent type>'
| |   | |     `-DeclRefExpr 0x7fd301870ad0 <col:31> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fd301870a00 '_In' 'size_t':'unsigned long'
| |   | |-NonTypeTemplateParmDecl 0x7fd301870900 <line:1720:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _I0
| |   | |-NonTypeTemplateParmDecl 0x7fd301870968 <col:23, col:30> col:30 referenced 'size_t':'unsigned long' depth 0 index 1 _I1
| |   | |-NonTypeTemplateParmDecl 0x7fd301870a00 <col:35, col:45> col:45 referenced 'size_t':'unsigned long' depth 0 index 2 ... _In
| |   | |-CXXRecordDecl 0x7fd301870fe0 <line:1721:1, col:8> col:8 implicit struct __static_max
| |   | `-VarDecl 0x7fd301871088 <line:1723:5, line:1724:73> line:1723:25 value 'const size_t':'const unsigned long' static cinit
| |   |   `-ConditionalOperator 0x7fd3018715b8 <col:33, line:1724:73> '<dependent type>'
| |   |     |-BinaryOperator 0x7fd301871138 <line:1723:33, col:40> '_Bool' '>='
| |   |     | |-DeclRefExpr 0x7fd3018710e8 <col:33> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fd301870900 '_I0' 'size_t':'unsigned long'
| |   |     | `-DeclRefExpr 0x7fd301871110 <col:40> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fd301870968 '_I1' 'size_t':'unsigned long'
| |   |     |-DependentScopeDeclRefExpr 0x7fd301871348 <col:46, col:73> '<dependent type>' lvalue
| |   |     `-DependentScopeDeclRefExpr 0x7fd301871578 <line:1724:46, col:73> '<dependent type>' lvalue
| |   |-ClassTemplateDecl 0x7fd301871838 <line:1727:1, line:1735:1> line:1728:8 aligned_union
| |   | |-NonTypeTemplateParmDecl 0x7fd301871618 <line:1727:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TemplateTypeParmDecl 0x7fd301871670 <col:24, col:30> col:30 referenced class depth 0 index 1 _Type0
| |   | |-TemplateTypeParmDecl 0x7fd3018716d8 <col:38, col:47> col:47 referenced class depth 0 index 2 ... _Types
| |   | `-CXXRecordDecl 0x7fd3018717a0 <line:1728:1, line:1735:1> line:1728:8 struct aligned_union definition
| |   |   |-CXXRecordDecl 0x7fd301871bd0 <col:1, col:8> col:8 implicit struct aligned_union
| |   |   |-VarDecl 0x7fd301871c78 <line:1730:5, line:1731:81> line:1730:25 referenced alignment_value 'const size_t':'const unsigned long' static cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fd301871ed8 <col:43, line:1731:81> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fd301871f28 <line:1732:5, line:1733:66> line:1732:25 referenced __len 'const size_t':'const unsigned long' static cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fd301872208 <col:33, line:1733:66> '<dependent type>' lvalue
| |   |   `-TypedefDecl 0x7fd3018724b0 <line:1734:5, col:68> col:68 type 'typename aligned_storage<__len, alignment_value>::type'
| |   |     `-DependentNameType 0x7fd301872440 'typename aligned_storage<__len, alignment_value>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fd3018728d0 <line:1738:1, col:106> col:41 aligned_union_t
| |   | |-NonTypeTemplateParmDecl 0x7fd301872538 <col:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TemplateTypeParmDecl 0x7fd301872590 <col:24, col:33> col:33 referenced class depth 0 index 1 ... _Types
| |   | `-TypeAliasDecl 0x7fd301872870 <col:41, col:106> col:47 aligned_union_t 'typename aligned_union<_Len, _Types...>::type'
| |   |   `-DependentNameType 0x7fd301872800 'typename aligned_union<_Len, _Types...>::type' dependent
| |   |-ClassTemplateDecl 0x7fd301873898 <line:1743:1, line:1760:1> line:1744:8 __numeric_type
| |   | |-TemplateTypeParmDecl 0x7fd301872920 <line:1743:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fd301873800 <line:1744:1, line:1760:1> line:1744:8 struct __numeric_type definition
| |   | | |-CXXRecordDecl 0x7fd301873b10 <col:1, col:8> col:8 implicit struct __numeric_type
| |   | | |-CXXMethodDecl 0x7fd301873bf8 <line:1746:4, col:26> col:16 __test 'void (...)' static
| |   | | |-CXXMethodDecl 0x7fd301873d38 <line:1747:4, col:29> col:17 __test 'float (float)' static
| |   | | | `-ParmVarDecl 0x7fd301873ca8 <col:24> col:29 'float'
| |   | | |-CXXMethodDecl 0x7fd301873eb8 <line:1748:4, col:29> col:18 __test 'double (char)' static
| |   | | | `-ParmVarDecl 0x7fd301873de8 <col:25> col:29 'char'
| |   | | |-CXXMethodDecl 0x7fd301874038 <line:1749:4, col:28> col:18 __test 'double (int)' static
| |   | | | `-ParmVarDecl 0x7fd301873f70 <col:25> col:28 'int'
| |   | | |-CXXMethodDecl 0x7fd3018741b8 <line:1750:4, col:33> col:18 __test 'double (unsigned int)' static
| |   | | | `-ParmVarDecl 0x7fd3018740f0 <col:25> col:33 'unsigned int'
| |   | | |-CXXMethodDecl 0x7fd301874338 <line:1751:4, col:29> col:18 __test 'double (long)' static
| |   | | | `-ParmVarDecl 0x7fd301874270 <col:25> col:29 'long'
| |   | | |-CXXMethodDecl 0x7fd3018744b8 <line:1752:4, col:38> col:18 __test 'double (unsigned long)' static
| |   | | | `-ParmVarDecl 0x7fd3018743f0 <col:25, col:34> col:38 'unsigned long'
| |   | | |-CXXMethodDecl 0x7fd301874638 <line:1753:4, col:34> col:18 __test 'double (long long)' static
| |   | | | `-ParmVarDecl 0x7fd301874570 <col:25, col:30> col:34 'long long'
| |   | | |-CXXMethodDecl 0x7fd3018747b8 <line:1754:4, col:43> col:18 __test 'double (unsigned long long)' static
| |   | | | `-ParmVarDecl 0x7fd3018746f0 <col:25, col:39> col:43 'unsigned long long'
| |   | | |-CXXMethodDecl 0x7fd301874900 <line:1755:4, col:31> col:18 __test 'double (double)' static
| |   | | | `-ParmVarDecl 0x7fd301874870 <col:25> col:31 'double'
| |   | | |-CXXMethodDecl 0x7fd301874a48 <line:1756:4, col:41> col:23 __test 'long double (long double)' static
| |   | | | `-ParmVarDecl 0x7fd3018749b8 <col:30, col:35> col:41 'long double'
| |   | | |-TypedefDecl 0x7fd301874d08 <line:1758:4, col:45> col:45 referenced type 'decltype(__test(declval<_Tp>()))'
| |   | | | `-DecltypeType 0x7fd301874cd0 'decltype(__test(declval<_Tp>()))' dependent
| |   | | |   `-CallExpr 0x7fd301874c60 <col:21, col:42> '<dependent type>'
| |   | | |     |-UnresolvedLookupExpr 0x7fd301874ae8 <col:21> '<dependent type>' lvalue (no ADL) = '__test' 0x7fd301874a48 0x7fd301874900 0x7fd3018747b8 0x7fd301874638 0x7fd3018744b8 0x7fd301874338 0x7fd3018741b8 0x7fd301874038 0x7fd301873eb8 0x7fd301873d38 0x7fd301873bf8
| |   | | |     `-CallExpr 0x7fd301874c38 <col:28, col:41> '<dependent type>'
| |   | | |       `-UnresolvedLookupExpr 0x7fd301874ba0 <col:28, col:39> '<dependent type>' lvalue (ADL) = 'declval' 0x7fd30183e450
| |   | | `-VarDecl 0x7fd301874d70 <line:1759:4, col:52> col:22 value 'const _Bool' static cinit
| |   | |   `-UnaryOperator 0x7fd301874f98 <col:30, col:52> '<dependent type>' prefix '!'
| |   | |     `-DependentScopeDeclRefExpr 0x7fd301874f58 <col:31, col:52> '<dependent type>' lvalue
| |   | `-ClassTemplateSpecialization 0x7fd301874ff8 '__numeric_type'
| |   |-ClassTemplateSpecializationDecl 0x7fd301874ff8 <line:1762:1, line:1766:1> line:1763:8 struct __numeric_type definition
| |   | |-TemplateArgument type 'void'
| |   | |-CXXRecordDecl 0x7fd301875220 <col:1, col:8> col:8 implicit struct __numeric_type
| |   | `-VarDecl 0x7fd3018752c8 <line:1765:4, col:30> col:22 referenced value 'const _Bool' static cinit
| |   |   `-CXXBoolLiteralExpr 0x7fd301875328 <col:30> '_Bool' true
| |   |-ClassTemplateDecl 0x7fd301876ea0 <line:1770:1, line:1778:1> line:1774:7 __promote_imp
| |   | |-TemplateTypeParmDecl 0x7fd3018753b8 <line:1770:11, col:17> col:17 referenced class depth 0 index 0 _A1
| |   | |-TemplateTypeParmDecl 0x7fd301875438 <col:22, col:34> col:28 referenced class depth 0 index 1 _A2
| |   | | `-TemplateArgument type 'void'
| |   | |-TemplateTypeParmDecl 0x7fd3018754b8 <col:40, col:52> col:46 referenced class depth 0 index 2 _A3
| |   | | `-TemplateArgument type 'void'
| |   | |-NonTypeTemplateParmDecl 0x7fd301876d80 <line:1771:11, line:1773:39> line:1771:16 '_Bool' depth 0 index 3
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7fd301876d48 <col:18, line:1773:39> '<dependent type>' '&&'
| |   | |     |-BinaryOperator 0x7fd301875798 <line:1771:18, line:1772:39> '<dependent type>' '&&'
| |   | |     | |-DependentScopeDeclRefExpr 0x7fd3018755f8 <line:1771:18, col:39> '<dependent type>' lvalue
| |   | |     | `-DependentScopeDeclRefExpr 0x7fd301875758 <line:1772:18, col:39> '<dependent type>' lvalue
| |   | |     `-DependentScopeDeclRefExpr 0x7fd301876d08 <line:1773:18, col:39> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fd301876e08 <line:1774:1, line:1778:1> line:1774:7 class __promote_imp definition
| |   |   |-CXXRecordDecl 0x7fd3018771c0 <col:1, col:7> col:7 implicit class __promote_imp
| |   |   |-AccessSpecDecl 0x7fd301877258 <line:1776:1, col:7> col:1 public
| |   |   `-VarDecl 0x7fd301877290 <line:1777:5, col:31> col:23 value 'const _Bool' static cinit
| |   |     `-CXXBoolLiteralExpr 0x7fd3018772f0 <col:31> '_Bool' false
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd3018776e0 <line:1780:1, line:1790:1> line:1781:7 class __promote_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument type 'type-parameter-0-2'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fd301877328 <line:1780:11, col:17> col:17 referenced class depth 0 index 0 _A1
| |   | |-TemplateTypeParmDecl 0x7fd301877398 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| |   | |-TemplateTypeParmDecl 0x7fd301877408 <col:33, col:39> col:39 referenced class depth 0 index 2 _A3
| |   | |-CXXRecordDecl 0x7fd301877a20 <line:1781:1, col:7> col:7 implicit class __promote_imp
| |   | |-AccessSpecDecl 0x7fd301877ab8 <line:1783:1, col:8> col:1 private
| |   | |-TypedefDecl 0x7fd301878090 <line:1784:5, col:47> col:47 referenced __type1 'typename __promote_imp<_A1>::type'
| |   | | `-DependentNameType 0x7fd301878020 'typename __promote_imp<_A1>::type' dependent
| |   | |-TypedefDecl 0x7fd301878640 <line:1785:5, col:47> col:47 referenced __type2 'typename __promote_imp<_A2>::type'
| |   | | `-DependentNameType 0x7fd3018785d0 'typename __promote_imp<_A2>::type' dependent
| |   | |-TypedefDecl 0x7fd301879600 <line:1786:5, col:47> col:47 referenced __type3 'typename __promote_imp<_A3>::type'
| |   | | `-DependentNameType 0x7fd301878b80 'typename __promote_imp<_A3>::type' dependent
| |   | |-AccessSpecDecl 0x7fd301879658 <line:1787:1, col:7> col:1 public
| |   | |-TypedefDecl 0x7fd301879858 <line:1788:5, col:57> col:57 type 'decltype(std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type1() + std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type2() + std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type3())'
| |   | | `-DecltypeType 0x7fd301879820 'decltype(std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type1() + std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type2() + std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type3())' dependent
| |   | |   `-BinaryOperator 0x7fd3018797b8 <col:22, col:54> '<dependent type>' '+'
| |   | |     |-BinaryOperator 0x7fd301879738 <col:22, col:42> '<dependent type>' '+'
| |   | |     | |-CXXUnresolvedConstructExpr 0x7fd3018796b0 <col:22, col:30> 'std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type1':'typename __promote_imp<_A1>::type'
| |   | |     | `-CXXUnresolvedConstructExpr 0x7fd301879710 <col:34, col:42> 'std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type2':'typename __promote_imp<_A2>::type'
| |   | |     `-CXXUnresolvedConstructExpr 0x7fd301879790 <col:46, col:54> 'std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type3':'typename __promote_imp<_A3>::type'
| |   | `-VarDecl 0x7fd3018798c0 <line:1789:5, col:31> col:23 value 'const _Bool' static cinit
| |   |   `-CXXBoolLiteralExpr 0x7fd301879920 <col:31> '_Bool' true
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd301879c90 <line:1792:1, line:1801:1> line:1793:7 class __promote_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument type 'void'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fd301879958 <line:1792:11, col:17> col:17 referenced class depth 0 index 0 _A1
| |   | |-TemplateTypeParmDecl 0x7fd3018799c8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| |   | |-CXXRecordDecl 0x7fd301879fd0 <line:1793:1, col:7> col:7 implicit class __promote_imp
| |   | |-AccessSpecDecl 0x7fd30187a068 <line:1795:1, col:8> col:1 private
| |   | |-TypedefDecl 0x7fd30187a4c0 <line:1796:5, col:47> col:47 referenced __type1 'typename __promote_imp<_A1>::type'
| |   | | `-DependentNameType 0x7fd30187a450 'typename __promote_imp<_A1>::type' dependent
| |   | |-TypedefDecl 0x7fd30187a950 <line:1797:5, col:47> col:47 referenced __type2 'typename __promote_imp<_A2>::type'
| |   | | `-DependentNameType 0x7fd30187a8e0 'typename __promote_imp<_A2>::type' dependent
| |   | |-AccessSpecDecl 0x7fd30187a9a8 <line:1798:1, col:7> col:1 public
| |   | |-TypedefDecl 0x7fd30187ab28 <line:1799:5, col:45> col:45 type 'decltype(std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, void, true>::__type1() + std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, void, true>::__type2())'
| |   | | `-DecltypeType 0x7fd30187aaf0 'decltype(std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, void, true>::__type1() + std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, void, true>::__type2())' dependent
| |   | |   `-BinaryOperator 0x7fd30187aa88 <col:22, col:42> '<dependent type>' '+'
| |   | |     |-CXXUnresolvedConstructExpr 0x7fd30187aa00 <col:22, col:30> 'std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, void, true>::__type1':'typename __promote_imp<_A1>::type'
| |   | |     `-CXXUnresolvedConstructExpr 0x7fd30187aa60 <col:34, col:42> 'std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, void, true>::__type2':'typename __promote_imp<_A2>::type'
| |   | `-VarDecl 0x7fd30187ab90 <line:1800:5, col:31> col:23 value 'const _Bool' static cinit
| |   |   `-CXXBoolLiteralExpr 0x7fd30187abf0 <col:31> '_Bool' true
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd30187aef0 <line:1803:1, line:1809:1> line:1804:7 class __promote_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'void'
| |   | |-TemplateArgument type 'void'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fd30187ac28 <line:1803:11, col:17> col:17 referenced class depth 0 index 0 _A1
| |   | |-CXXRecordDecl 0x7fd30187b230 <line:1804:1, col:7> col:7 implicit class __promote_imp
| |   | |-AccessSpecDecl 0x7fd30187b2c8 <line:1806:1, col:7> col:1 public
| |   | |-TypedefDecl 0x7fd30187b440 <line:1807:5, col:48> col:48 type 'typename __numeric_type<_A1>::type'
| |   | | `-DependentNameType 0x7fd30187b3d0 'typename __numeric_type<_A1>::type' dependent
| |   | `-VarDecl 0x7fd30187b4a8 <line:1808:5, col:31> col:23 value 'const _Bool' static cinit
| |   |   `-CXXBoolLiteralExpr 0x7fd30187b508 <col:31> '_Bool' true
| |   |-ClassTemplateDecl 0x7fd30187bf68 <line:1811:1, line:1812:56> col:7 __promote
| |   | |-TemplateTypeParmDecl 0x7fd30187b540 <line:1811:11, col:17> col:17 referenced class depth 0 index 0 _A1
| |   | |-TemplateTypeParmDecl 0x7fd30187b5b8 <col:22, col:34> col:28 referenced class depth 0 index 1 _A2
| |   | | `-TemplateArgument type 'void'
| |   | |-TemplateTypeParmDecl 0x7fd30187be38 <col:40, col:52> col:46 referenced class depth 0 index 2 _A3
| |   | | `-TemplateArgument type 'void'
| |   | `-CXXRecordDecl 0x7fd30187bed0 <line:1812:1, col:56> col:7 class __promote definition
| |   |   |-public '__promote_imp<_A1, _A2, _A3>'
| |   |   `-CXXRecordDecl 0x7fd30187c798 <col:1, col:7> col:7 implicit class __promote
| |   |-TypedefDecl 0x7fd30187d550 <line:1816:1, line:1829:15> col:15 referenced __signed_types '__type_list<signed char, __type_list<short, __type_list<int, __type_list<long, __type_list<long long, __type_list<__int128_t, struct std::__1::__nat> > > > > >':'struct std::__1::__type_list<signed char, struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > > >'
| |   | `-TemplateSpecializationType 0x7fd30187d460 '__type_list<signed char, __type_list<short, __type_list<int, __type_list<long, __type_list<long long, __type_list<__int128_t, struct std::__1::__nat> > > > > >' sugar __type_list
| |   |   |-TemplateArgument type 'signed char'
| |   |   |-TemplateArgument type '__type_list<short, __type_list<int, __type_list<long, __type_list<long long, __type_list<__int128_t, struct std::__1::__nat> > > > >':'struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > >'
| |   |   `-RecordType 0x7fd30187d440 'struct std::__1::__type_list<signed char, struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > > >'
| |   |     `-ClassTemplateSpecialization 0x7fd30187d340 '__type_list'
| |   |-TypedefDecl 0x7fd30187e2b0 <line:1831:1, line:1844:15> col:15 referenced __unsigned_types '__type_list<unsigned char, __type_list<unsigned short, __type_list<unsigned int, __type_list<unsigned long, __type_list<unsigned long long, __type_list<__uint128_t, struct std::__1::__nat> > > > > >':'struct std::__1::__type_list<unsigned char, struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > > >'
| |   | `-TemplateSpecializationType 0x7fd30187e1c0 '__type_list<unsigned char, __type_list<unsigned short, __type_list<unsigned int, __type_list<unsigned long, __type_list<unsigned long long, __type_list<__uint128_t, struct std::__1::__nat> > > > > >' sugar __type_list
| |   |   |-TemplateArgument type 'unsigned char'
| |   |   |-TemplateArgument type '__type_list<unsigned short, __type_list<unsigned int, __type_list<unsigned long, __type_list<unsigned long long, __type_list<__uint128_t, struct std::__1::__nat> > > > >':'struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > >'
| |   |   `-RecordType 0x7fd30187e1a0 'struct std::__1::__type_list<unsigned char, struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > > >'
| |   |     `-ClassTemplateSpecialization 0x7fd30187e0a0 '__type_list'
| |   |-ClassTemplateDecl 0x7fd30187e650 <line:1846:1, col:100> col:100 __find_first
| |   | |-TemplateTypeParmDecl 0x7fd30187e308 <col:11, col:17> col:17 class depth 0 index 0 _TypeList
| |   | |-NonTypeTemplateParmDecl 0x7fd30187e388 <col:28, col:35> col:35 referenced 'size_t':'unsigned long' depth 0 index 1 _Size
| |   | |-NonTypeTemplateParmDecl 0x7fd30187e538 <col:42, col:90> col:47 '_Bool' depth 0 index 2
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7fd30187e500 <col:49, col:90> '_Bool' '<='
| |   | |     |-DeclRefExpr 0x7fd30187e3e0 <col:49> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fd30187e388 '_Size' 'size_t':'unsigned long'
| |   | |     `-UnaryExprOrTypeTraitExpr 0x7fd30187e4e0 <col:58, col:90> 'unsigned long' sizeof 'typename _TypeList::_Head'
| |   | `-CXXRecordDecl 0x7fd30187e5b8 <col:93, col:100> col:100 struct __find_first
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd30187ed78 <line:1848:1, line:1852:1> line:1849:8 struct __find_first definition
| |   | |-TemplateArgument type '__type_list<type-parameter-0-0, type-parameter-0-1>'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fd30187eba0 <col:44> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fd30187ea08 '_Size' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fd30187e918 <line:1848:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-TemplateTypeParmDecl 0x7fd30187e988 <col:22, col:28> col:28 referenced class depth 0 index 1 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fd30187ea08 <col:33, col:40> col:40 referenced 'size_t':'unsigned long' depth 0 index 2 _Size
| |   | |-CXXRecordDecl 0x7fd30187f0b0 <line:1849:1, col:8> col:8 implicit struct __find_first
| |   | `-TypedefDecl 0x7fd30187f158 <line:1851:5, col:17> col:17 type '_Hp'
| |   |   `-TemplateTypeParmType 0x7fd30187e960 '_Hp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fd30187e918 '_Hp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd30187f628 <line:1854:1, line:1858:1> line:1855:8 struct __find_first definition
| |   | |-TemplateArgument type '__type_list<type-parameter-0-0, type-parameter-0-1>'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fd30187f450 <col:44> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fd30187f2b8 '_Size' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fd30187f1d0 <line:1854:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-TemplateTypeParmDecl 0x7fd30187f238 <col:22, col:28> col:28 referenced class depth 0 index 1 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fd30187f2b8 <col:33, col:40> col:40 referenced 'size_t':'unsigned long' depth 0 index 2 _Size
| |   | |-CXXRecordDecl 0x7fd30187f960 <line:1855:1, col:8> col:8 implicit struct __find_first
| |   | `-TypedefDecl 0x7fd30187fe00 <line:1857:5, col:53> col:53 type 'typename __find_first<_Tp, _Size>::type'
| |   |   `-DependentNameType 0x7fd30187fd40 'typename __find_first<_Tp, _Size>::type' dependent
| |   |-ClassTemplateDecl 0x7fd3018805c8 <line:1860:1, line:1865:1> line:1862:8 __apply_cv
| |   | |-TemplateTypeParmDecl 0x7fd30187fe78 <line:1860:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fd30187fee8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-NonTypeTemplateParmDecl 0x7fd3018801d8 <col:33, col:88> col:38 '_Bool' depth 0 index 2
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fd301880188 <col:40, col:88> '<dependent type>' lvalue
| |   | |-NonTypeTemplateParmDecl 0x7fd3018804a8 <line:1861:30, col:88> col:35 '_Bool' depth 0 index 3
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fd301880458 <col:37, col:88> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fd301880530 <line:1862:1, line:1865:1> line:1862:8 struct __apply_cv definition
| |   |   |-CXXRecordDecl 0x7fd301880910 <col:1, col:8> col:8 implicit struct __apply_cv
| |   |   `-TypedefDecl 0x7fd3018809b8 <line:1864:5, col:17> col:17 type '_Up'
| |   |     `-TemplateTypeParmType 0x7fd30187ff30 '_Up' dependent depth 0 index 1
| |   |       `-TemplateTypeParm 0x7fd30187fee8 '_Up'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd301880d70 <line:1867:1, line:1871:1> line:1868:8 struct __apply_cv definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fd301880a30 <line:1867:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fd301880a98 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7fd3018810c0 <line:1868:1, col:8> col:8 implicit struct __apply_cv
| |   | `-TypedefDecl 0x7fd301881168 <line:1870:5, col:23> col:23 type 'const _Up'
| |   |   `-QualType 0x7fd301880ae1 'const _Up' const
| |   |     `-TemplateTypeParmType 0x7fd301880ae0 '_Up' dependent depth 0 index 1
| |   |       `-TemplateTypeParm 0x7fd301880a98 '_Up'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd301881520 <line:1873:1, line:1877:1> line:1874:8 struct __apply_cv definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fd3018811e0 <line:1873:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fd301881248 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7fd301881870 <line:1874:1, col:8> col:8 implicit struct __apply_cv
| |   | `-TypedefDecl 0x7fd301881918 <line:1876:5, col:26> col:26 type 'volatile _Up'
| |   |   `-QualType 0x7fd301881294 'volatile _Up' volatile
| |   |     `-TemplateTypeParmType 0x7fd301881290 '_Up' dependent depth 0 index 1
| |   |       `-TemplateTypeParm 0x7fd301881248 '_Up'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd301881cd0 <line:1879:1, line:1883:1> line:1880:8 struct __apply_cv definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fd301881990 <line:1879:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fd3018819f8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7fd301882070 <line:1880:1, col:8> col:8 implicit struct __apply_cv
| |   | `-TypedefDecl 0x7fd301882118 <line:1882:5, col:32> col:32 type 'const volatile _Up'
| |   |   `-QualType 0x7fd301881a45 'const volatile _Up' const volatile
| |   |     `-TemplateTypeParmType 0x7fd301881a40 '_Up' dependent depth 0 index 1
| |   |       `-TemplateTypeParm 0x7fd3018819f8 '_Up'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd301882500 <line:1885:1, line:1889:1> line:1886:8 struct __apply_cv definition
| |   | |-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fd301882190 <line:1885:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fd3018821f8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7fd301882850 <line:1886:1, col:8> col:8 implicit struct __apply_cv
| |   | `-TypedefDecl 0x7fd301882958 <line:1888:5, col:18> col:18 type '_Up &'
| |   |   `-LValueReferenceType 0x7fd301882920 '_Up &' dependent
| |   |     `-TemplateTypeParmType 0x7fd301882240 '_Up' dependent depth 0 index 1
| |   |       `-TemplateTypeParm 0x7fd3018821f8 '_Up'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd301882d40 <line:1891:1, line:1895:1> line:1892:8 struct __apply_cv definition
| |   | |-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fd3018829d0 <line:1891:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fd301882a38 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7fd301883090 <line:1892:1, col:8> col:8 implicit struct __apply_cv
| |   | `-TypedefDecl 0x7fd301883198 <line:1894:5, col:24> col:24 type 'const _Up &'
| |   |   `-LValueReferenceType 0x7fd301883160 'const _Up &' dependent
| |   |     `-QualType 0x7fd301882a81 'const _Up' const
| |   |       `-TemplateTypeParmType 0x7fd301882a80 '_Up' dependent depth 0 index 1
| |   |         `-TemplateTypeParm 0x7fd301882a38 '_Up'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd301883580 <line:1897:1, line:1901:1> line:1898:8 struct __apply_cv definition
| |   | |-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fd301883210 <line:1897:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fd301883278 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7fd3018838d0 <line:1898:1, col:8> col:8 implicit struct __apply_cv
| |   | `-TypedefDecl 0x7fd3018839d8 <line:1900:5, col:27> col:27 type 'volatile _Up &'
| |   |   `-LValueReferenceType 0x7fd3018839a0 'volatile _Up &' dependent
| |   |     `-QualType 0x7fd3018832c4 'volatile _Up' volatile
| |   |       `-TemplateTypeParmType 0x7fd3018832c0 '_Up' dependent depth 0 index 1
| |   |         `-TemplateTypeParm 0x7fd301883278 '_Up'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd301883e00 <line:1903:1, line:1907:1> line:1904:8 struct __apply_cv definition
| |   | |-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fd301883a50 <line:1903:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fd301883ab8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7fd301884150 <line:1904:1, col:8> col:8 implicit struct __apply_cv
| |   | `-TypedefDecl 0x7fd301884258 <line:1906:5, col:33> col:33 type 'const volatile _Up &'
| |   |   `-LValueReferenceType 0x7fd301884220 'const volatile _Up &' dependent
| |   |     `-QualType 0x7fd301883b05 'const volatile _Up' const volatile
| |   |       `-TemplateTypeParmType 0x7fd301883b00 '_Up' dependent depth 0 index 1
| |   |         `-TemplateTypeParm 0x7fd301883ab8 '_Up'
| |   |-ClassTemplateDecl 0x7fd3018846a0 <line:1909:1, line:1910:23> col:8 __make_signed
| |   | |-TemplateTypeParmDecl 0x7fd3018842d0 <line:1909:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fd301884590 <col:22, col:70> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7fd301884558 <col:29, col:70> '<dependent type>' '||'
| |   | |     |-DependentScopeDeclRefExpr 0x7fd301884408 <col:29, col:47> '<dependent type>' lvalue
| |   | |     `-DependentScopeDeclRefExpr 0x7fd301884518 <col:56, col:70> '<dependent type>' lvalue
| |   | |-CXXRecordDecl 0x7fd301884608 <line:1910:1, col:23> col:8 struct __make_signed definition
| |   | | `-CXXRecordDecl 0x7fd301884960 <col:1, col:8> col:8 implicit struct __make_signed
| |   | |-ClassTemplateSpecialization 0x7fd3018855d0 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7fd301885938 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7fd301885d18 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7fd301887918 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7fd301887cf8 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7fd3018880d8 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7fd3018884b8 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7fd301888898 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7fd301888c78 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7fd301889050 '__make_signed'
| |   | `-ClassTemplateSpecialization 0x7fd301889418 '__make_signed'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd301884c00 <line:1912:1, line:1916:1> line:1913:8 struct __make_signed definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fd301884a18 <line:1912:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fd301884e90 <line:1913:1, col:8> col:8 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fd301885520 <line:1915:5, col:70> col:70 type 'typename __find_first<__signed_types, sizeof(_Tp)>::type'
| |   |   `-DependentNameType 0x7fd3018854b0 'typename __find_first<__signed_types, sizeof(_Tp)>::type' dependent
| |   |-ClassTemplateSpecializationDecl 0x7fd3018855d0 <line:1918:1, col:61> col:20 struct __make_signed definition
| |   | |-TemplateArgument type '_Bool'
| |   | |-TemplateArgument integral 1
| |   | `-CXXRecordDecl 0x7fd301885840 <col:13, col:20> col:20 implicit struct __make_signed
| |   |-ClassTemplateSpecializationDecl 0x7fd301885938 <line:1919:1, col:84> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'short'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fd301885bb0 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fd301885c60 <col:61, col:79> col:79 type 'short'
| |   |   `-BuiltinType 0x7fd2ff8327a0 'short'
| |   |-ClassTemplateSpecializationDecl 0x7fd301885d18 <line:1920:1, col:84> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'unsigned short'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fd3018877b0 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fd301887860 <col:61, col:79> col:79 type 'short'
| |   |   `-BuiltinType 0x7fd2ff8327a0 'short'
| |   |-ClassTemplateSpecializationDecl 0x7fd301887918 <line:1921:1, col:84> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'int'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fd301887b90 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fd301887c40 <col:61, col:79> col:79 type 'int'
| |   |   `-BuiltinType 0x7fd2ff8327c0 'int'
| |   |-ClassTemplateSpecializationDecl 0x7fd301887cf8 <line:1922:1, col:84> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'unsigned int'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fd301887f70 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fd301888020 <col:61, col:79> col:79 type 'int'
| |   |   `-BuiltinType 0x7fd2ff8327c0 'int'
| |   |-ClassTemplateSpecializationDecl 0x7fd3018880d8 <line:1923:1, col:84> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'long'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fd301888350 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fd301888400 <col:61, col:79> col:79 type 'long'
| |   |   `-BuiltinType 0x7fd2ff8327e0 'long'
| |   |-ClassTemplateSpecializationDecl 0x7fd3018884b8 <line:1924:1, col:84> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'unsigned long'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fd301888730 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fd3018887e0 <col:61, col:79> col:79 type 'long'
| |   |   `-BuiltinType 0x7fd2ff8327e0 'long'
| |   |-ClassTemplateSpecializationDecl 0x7fd301888898 <line:1925:1, col:84> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'long long'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fd301888b10 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fd301888bc0 <col:61, col:79> col:79 type 'long long'
| |   |   `-BuiltinType 0x7fd2ff832800 'long long'
| |   |-ClassTemplateSpecializationDecl 0x7fd301888c78 <line:1926:1, col:84> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'unsigned long long'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fd301888ef0 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fd301888fa0 <col:61, col:79> col:79 type 'long long'
| |   |   `-BuiltinType 0x7fd2ff832800 'long long'
| |   |-ClassTemplateSpecializationDecl 0x7fd301889050 <line:1928:1, col:85> col:20 struct __make_signed definition
| |   | |-TemplateArgument type '__int128'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fd3018892c0 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fd301889368 <col:61, col:80> col:80 type '__int128_t':'__int128'
| |   |   `-TypedefType 0x7fd301818ff0 '__int128_t' sugar
| |   |     |-Typedef 0x7fd2ff832c60 '__int128_t'
| |   |     `-BuiltinType 0x7fd2ff832940 '__int128'
| |   |-ClassTemplateSpecializationDecl 0x7fd301889418 <line:1929:1, col:85> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'unsigned __int128'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fd3018896c0 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fd301889768 <col:61, col:80> col:80 type '__int128_t':'__int128'
| |   |   `-TypedefType 0x7fd301818ff0 '__int128_t' sugar
| |   |     |-Typedef 0x7fd2ff832c60 '__int128_t'
| |   |     `-BuiltinType 0x7fd2ff832940 '__int128'
| |   |-ClassTemplateDecl 0x7fd301889928 <line:1932:1, line:1936:1> line:1933:29 make_signed
| |   | |-TemplateTypeParmDecl 0x7fd3018897e0 <line:1932:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd301889890 <line:1933:1, line:1936:1> line:1933:29 struct make_signed definition
| |   |   |-TypeVisibilityAttr 0x7fd301889ba0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fd301889be8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1933:1, col:29> col:29 implicit struct make_signed
| |   |   `-TypedefDecl 0x7fd30188a8a0 <line:1935:5, col:105> col:105 type 'typename __apply_cv<_Tp, typename __make_signed<typename remove_cv<_Tp>::type>::type>::type'
| |   |     `-DependentNameType 0x7fd30188a830 'typename __apply_cv<_Tp, typename __make_signed<typename remove_cv<_Tp>::type>::type>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fd30188ab60 <line:1939:1, col:71> col:22 make_signed_t
| |   | |-TemplateTypeParmDecl 0x7fd30188a918 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fd30188ab00 <col:22, col:71> col:28 make_signed_t 'typename make_signed<_Tp>::type'
| |   |   `-DependentNameType 0x7fd30188aa90 'typename make_signed<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fd30188af80 <line:1942:1, line:1943:25> col:8 __make_unsigned
| |   | |-TemplateTypeParmDecl 0x7fd30188abb0 <line:1942:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fd30188ae70 <col:22, col:70> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7fd30188ae38 <col:29, col:70> '<dependent type>' '||'
| |   | |     |-DependentScopeDeclRefExpr 0x7fd30188ace8 <col:29, col:47> '<dependent type>' lvalue
| |   | |     `-DependentScopeDeclRefExpr 0x7fd30188adf8 <col:56, col:70> '<dependent type>' lvalue
| |   | |-CXXRecordDecl 0x7fd30188aee8 <line:1943:1, col:25> col:8 struct __make_unsigned definition
| |   | | `-CXXRecordDecl 0x7fd30188b240 <col:1, col:8> col:8 implicit struct __make_unsigned
| |   | |-ClassTemplateSpecialization 0x7fd30188ceb0 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7fd30188d218 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7fd30188d5f8 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7fd30188d9d8 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7fd30188ddb8 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7fd30188e198 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7fd301896600 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7fd3018969d8 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7fd301896db8 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7fd301897190 '__make_unsigned'
| |   | `-ClassTemplateSpecialization 0x7fd301897558 '__make_unsigned'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd30188b4e0 <line:1945:1, line:1949:1> line:1946:8 struct __make_unsigned definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fd30188b2f8 <line:1945:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fd30188c770 <line:1946:1, col:8> col:8 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fd30188ce00 <line:1948:5, col:72> col:72 type 'typename __find_first<__unsigned_types, sizeof(_Tp)>::type'
| |   |   `-DependentNameType 0x7fd30188cd90 'typename __find_first<__unsigned_types, sizeof(_Tp)>::type' dependent
| |   |-ClassTemplateSpecializationDecl 0x7fd30188ceb0 <line:1951:1, col:63> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type '_Bool'
| |   | |-TemplateArgument integral 1
| |   | `-CXXRecordDecl 0x7fd30188d120 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   |-ClassTemplateSpecializationDecl 0x7fd30188d218 <line:1952:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'short'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fd30188d490 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fd30188d540 <col:63, col:90> col:90 type 'unsigned short'
| |   |   `-BuiltinType 0x7fd2ff832840 'unsigned short'
| |   |-ClassTemplateSpecializationDecl 0x7fd30188d5f8 <line:1953:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'unsigned short'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fd30188d870 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fd30188d920 <col:63, col:90> col:90 type 'unsigned short'
| |   |   `-BuiltinType 0x7fd2ff832840 'unsigned short'
| |   |-ClassTemplateSpecializationDecl 0x7fd30188d9d8 <line:1954:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'int'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fd30188dc50 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fd30188dd00 <col:63, col:90> col:90 type 'unsigned int'
| |   |   `-BuiltinType 0x7fd2ff832860 'unsigned int'
| |   |-ClassTemplateSpecializationDecl 0x7fd30188ddb8 <line:1955:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'unsigned int'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fd30188e030 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fd30188e0e0 <col:63, col:90> col:90 type 'unsigned int'
| |   |   `-BuiltinType 0x7fd2ff832860 'unsigned int'
| |   |-ClassTemplateSpecializationDecl 0x7fd30188e198 <line:1956:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'long'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fd30188e410 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fd30188e4c0 <col:63, col:90> col:90 type 'unsigned long'
| |   |   `-BuiltinType 0x7fd2ff832880 'unsigned long'
| |   |-ClassTemplateSpecializationDecl 0x7fd301896600 <line:1957:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'unsigned long'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fd301896870 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fd301896920 <col:63, col:90> col:90 type 'unsigned long'
| |   |   `-BuiltinType 0x7fd2ff832880 'unsigned long'
| |   |-ClassTemplateSpecializationDecl 0x7fd3018969d8 <line:1958:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'long long'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fd301896c50 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fd301896d00 <col:63, col:90> col:90 type 'unsigned long long'
| |   |   `-BuiltinType 0x7fd2ff8328a0 'unsigned long long'
| |   |-ClassTemplateSpecializationDecl 0x7fd301896db8 <line:1959:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'unsigned long long'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fd301897030 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fd3018970e0 <col:63, col:90> col:90 type 'unsigned long long'
| |   |   `-BuiltinType 0x7fd2ff8328a0 'unsigned long long'
| |   |-ClassTemplateSpecializationDecl 0x7fd301897190 <line:1961:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type '__int128'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fd301897400 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fd3018974a8 <col:63, col:90> col:90 type '__uint128_t':'unsigned __int128'
| |   |   `-TypedefType 0x7fd301819360 '__uint128_t' sugar
| |   |     |-Typedef 0x7fd2ff832cd0 '__uint128_t'
| |   |     `-BuiltinType 0x7fd2ff832960 'unsigned __int128'
| |   |-ClassTemplateSpecializationDecl 0x7fd301897558 <line:1962:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'unsigned __int128'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fd3018977d0 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fd301897878 <col:63, col:90> col:90 type '__uint128_t':'unsigned __int128'
| |   |   `-TypedefType 0x7fd301819360 '__uint128_t' sugar
| |   |     |-Typedef 0x7fd2ff832cd0 '__uint128_t'
| |   |     `-BuiltinType 0x7fd2ff832960 'unsigned __int128'
| |   |-ClassTemplateDecl 0x7fd301897a38 <line:1965:1, line:1969:1> line:1966:29 make_unsigned
| |   | |-TemplateTypeParmDecl 0x7fd3018978f0 <line:1965:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd3018979a0 <line:1966:1, line:1969:1> line:1966:29 struct make_unsigned definition
| |   |   |-TypeVisibilityAttr 0x7fd301897cb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fd301897cf8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1966:1, col:29> col:29 implicit struct make_unsigned
| |   |   `-TypedefDecl 0x7fd3018988b0 <line:1968:5, col:107> col:107 type 'typename __apply_cv<_Tp, typename __make_unsigned<typename remove_cv<_Tp>::type>::type>::type'
| |   |     `-DependentNameType 0x7fd301898840 'typename __apply_cv<_Tp, typename __make_unsigned<typename remove_cv<_Tp>::type>::type>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fd301898b70 <line:1972:1, col:75> col:22 make_unsigned_t
| |   | |-TemplateTypeParmDecl 0x7fd301898928 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fd301898b10 <col:22, col:75> col:28 make_unsigned_t 'typename make_unsigned<_Tp>::type'
| |   |   `-DependentNameType 0x7fd301898aa0 'typename make_unsigned<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fd301898d08 <line:2010:1, line:2011:42> col:29 common_type
| |   | |-TemplateTypeParmDecl 0x7fd301898bc0 <line:2010:11, col:20> col:20 class depth 0 index 0 ... _Tp
| |   | `-CXXRecordDecl 0x7fd301898c70 <line:2011:1, col:42> col:29 struct common_type definition
| |   |   |-TypeVisibilityAttr 0x7fd301898fe0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd301899028 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2011:1, col:29> col:29 implicit struct common_type
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd3018992a8 <line:2015:1, line:2017:37> line:2016:29 struct common_type definition
| |   | |-public 'common_type<_Tp, _Tp>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fd3018990e0 <line:2015:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fd301899418 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fd3018996f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2016:1, col:29> col:29 implicit struct common_type
| |   |-ClassTemplateDecl 0x7fd3018999c8 <line:2021:1, line:2022:28> col:8 __common_type2_imp
| |   | |-TemplateTypeParmDecl 0x7fd3018997b0 <line:2021:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fd301899818 <col:22, col:28> col:28 class depth 0 index 1 _Up
| |   | |-TemplateTypeParmDecl 0x7fd301899898 <col:33, col:41> col:33 class depth 0 index 2
| |   | | `-TemplateArgument type 'void'
| |   | `-CXXRecordDecl 0x7fd301899930 <line:2022:1, col:28> col:8 struct __common_type2_imp definition
| |   |   `-CXXRecordDecl 0x7fd301899ca0 <col:1, col:8> col:8 implicit struct __common_type2_imp
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd30189a498 <line:2024:1, line:2033:1> line:2025:8 struct __common_type2_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument type 'typename __void_t<decltype(true ? std::__1::declval<_Tp>() : std::__1::declval<_Up>())>::type'
| |   | |-TemplateTypeParmDecl 0x7fd301899d58 <line:2024:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fd301899dc8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7fd30189abc0 <line:2025:1, col:8> col:8 implicit struct __common_type2_imp
| |   | `-TypedefDecl 0x7fd30189b080 <line:2030:5, line:2032:14> col:14 type 'typename decay<decltype(true ? std::__1::declval<_Tp>() : std::__1::declval<_Up>())>::type'
| |   |   `-DependentNameType 0x7fd30189b010 'typename decay<decltype(true ? std::__1::declval<_Tp>() : std::__1::declval<_Up>())>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fd30189bf90 <line:2035:1, line:2043:6> line:2038:1 __common_type2
| |   | |-TemplateTypeParmDecl 0x7fd30189b0f8 <line:2035:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fd30189b168 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-TemplateTypeParmDecl 0x7fd30189b300 <line:2036:11, col:45> col:17 referenced class depth 0 index 2 _DTp
| |   | | `-TemplateArgument type 'typename decay<_Tp>::type'
| |   | |-TemplateTypeParmDecl 0x7fd30189b520 <line:2037:11, col:45> col:17 referenced class depth 0 index 3 _DUp
| |   | | `-TemplateArgument type 'typename decay<_Up>::type'
| |   | `-TypeAliasDecl 0x7fd30189bf30 <line:2038:1, line:2043:6> line:2038:7 __common_type2 'typename conditional<is_same<_Tp, _DTp>::value && is_same<_Up, _DUp>::value, __common_type2_imp<_Tp, _Up>, common_type<_DTp, _DUp> >::type'
| |   |   `-DependentNameType 0x7fd30189bec0 'typename conditional<is_same<_Tp, _DTp>::value && is_same<_Up, _DUp>::value, __common_type2_imp<_Tp, _Up>, common_type<_DTp, _DUp> >::type' dependent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd30189c298 <line:2045:1, line:2047:33> line:2046:29 struct common_type definition
| |   | |-public '__common_type2<_Tp, _Up>':'typename conditional<is_same<type-parameter-0-0, typename decay<type-parameter-0-0>::type>::value && is_same<type-parameter-0-1, typename decay<type-parameter-0-1>::type>::value, __common_type2_imp<type-parameter-0-0, type-parameter-0-1, void>, common_type<typename decay<type-parameter-0-0>::type, typename decay<type-parameter-0-1>::type> >::type'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | `-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateTypeParmDecl 0x7fd30189bfe0 <line:2045:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fd30189c048 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-TypeVisibilityAttr 0x7fd30189c448 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fd30189e2c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2046:1, col:29> col:29 implicit struct common_type
| |   |-ClassTemplateDecl 0x7fd30189e498 <line:2051:1, col:31> col:31 __common_types
| |   | |-TemplateTypeParmDecl 0x7fd30189e378 <col:11, col:20> col:20 class depth 0 index 0 ... Tp
| |   | `-CXXRecordDecl 0x7fd30189e400 <col:24, col:31> col:31 struct __common_types
| |   |-ClassTemplateDecl 0x7fd30189e8b0 <line:2053:1, line:2054:28> col:8 __common_type_impl
| |   | |-TemplateTypeParmDecl 0x7fd30189e708 <line:2053:11> col:11 class depth 0 index 0
| |   | |-TemplateTypeParmDecl 0x7fd30189e788 <col:18, col:26> col:18 class depth 0 index 1
| |   | | `-TemplateArgument type 'void'
| |   | `-CXXRecordDecl 0x7fd30189e818 <line:2054:1, col:28> col:8 struct __common_type_impl definition
| |   |   `-CXXRecordDecl 0x7fd30189eb50 <col:1, col:8> col:8 implicit struct __common_type_impl
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd30189f3a0 <line:2056:1, line:2062:1> line:2057:8 struct __common_type_impl definition
| |   | |-TemplateArgument type '__common_types<type-parameter-0-0, type-parameter-0-1>'
| |   | |-TemplateArgument type 'typename __void_t<typename common_type<type-parameter-0-0, type-parameter-0-1>::type>::type'
| |   | |-TemplateTypeParmDecl 0x7fd30189ec08 <line:2056:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fd30189ec78 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7fd30189f720 <line:2057:1, col:8> col:8 implicit struct __common_type_impl
| |   | `-TypedefDecl 0x7fd30189f980 <line:2061:3, col:48> col:48 type 'typename common_type<_Tp, _Up>::type'
| |   |   `-DependentNameType 0x7fd30189f910 'typename common_type<_Tp, _Up>::type' dependent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd3018a0200 <line:2064:1, line:2071:1> line:2065:8 struct __common_type_impl definition
| |   | |-public '__common_type_impl<__common_types<typename common_type<_Tp, _Up>::type, _Vp...> >'
| |   | |-TemplateArgument type '__common_types<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2...>'
| |   | |-TemplateArgument type 'typename __void_t<typename common_type<type-parameter-0-0, type-parameter-0-1>::type>::type'
| |   | |-TemplateTypeParmDecl 0x7fd30189f9f8 <line:2064:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fd30189fa68 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-TemplateTypeParmDecl 0x7fd30189fad8 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Vp
| |   | `-CXXRecordDecl 0x7fd3018a09e8 <line:2065:1, col:8> col:8 implicit struct __common_type_impl
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd3018a0e78 <line:2073:1, line:2075:62> line:2074:29 struct common_type definition
| |   | |-public '__common_type_impl<__common_types<_Tp, _Up, _Vp...> >'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | |-TemplateArgument type 'type-parameter-0-1'
| |   | | `-TemplateArgument type 'type-parameter-0-2...'
| |   | |-TemplateTypeParmDecl 0x7fd3018a0aa0 <line:2073:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fd3018a0b08 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-TemplateTypeParmDecl 0x7fd3018a0b78 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Vp
| |   | |-TypeVisibilityAttr 0x7fd3018a1068 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fd3018a1518 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2074:1, col:29> col:29 implicit struct common_type
| |   |-TypeAliasTemplateDecl 0x7fd3018a18b0 <line:2078:1, col:77> col:25 common_type_t
| |   | |-TemplateTypeParmDecl 0x7fd3018a1600 <col:11, col:20> col:20 referenced class depth 0 index 0 ... _Tp
| |   | `-TypeAliasDecl 0x7fd3018a1850 <col:25, col:77> col:31 common_type_t 'typename common_type<_Tp...>::type'
| |   |   `-DependentNameType 0x7fd3018a17e0 'typename common_type<_Tp...>::type' dependent
| |   |-ClassTemplateDecl 0x7fd3018a1a90 <line:2085:1, col:74> col:41 __select_2nd
| |   | |-TemplateTypeParmDecl 0x7fd3018a1900 <col:10> col:10 typename depth 0 index 0
| |   | |-TemplateTypeParmDecl 0x7fd3018a1968 <col:20, col:29> col:29 referenced typename depth 0 index 1 _Tp
| |   | `-CXXRecordDecl 0x7fd3018a19f8 <col:34, col:74> col:41 struct __select_2nd definition
| |   |   |-CXXRecordDecl 0x7fd3018a1d30 <col:34, col:41> col:41 implicit struct __select_2nd
| |   |   `-TypedefDecl 0x7fd3018a1dd8 <col:56, col:68> col:68 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7fd3018a19b0 '_Tp' dependent depth 0 index 1
| |   |       `-TemplateTypeParm 0x7fd3018a1968 '_Tp'
| |   |-FunctionTemplateDecl 0x7fd3018a25c8 <line:2087:1, line:2089:25> col:1 __is_assignable_test
| |   | |-TemplateTypeParmDecl 0x7fd3018a1e50 <line:2087:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fd3018a1eb8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | `-FunctionDecl 0x7fd3018a2530 <line:2088:1, line:2089:25> col:1 __is_assignable_test 'typename __select_2nd<decltype((std::__1::declval<_Tp>() = std::__1::declval<_Arg>())), true_type>::type (int)'
| |   |   `-ParmVarDecl 0x7fd3018a2418 <col:22> col:25 'int'
| |   |-FunctionTemplateDecl 0x7fd3018a2838 <line:2091:1, line:2092:36> col:12 __is_assignable_test
| |   | |-TemplateTypeParmDecl 0x7fd3018a2620 <line:2091:11> col:11 class depth 0 index 0
| |   | |-TemplateTypeParmDecl 0x7fd3018a2688 <col:18> col:18 class depth 0 index 1
| |   | `-FunctionDecl 0x7fd3018a27a0 <line:2092:1, col:36> col:12 __is_assignable_test 'std::__1::false_type (...)'
| |   |-ClassTemplateDecl 0x7fd3018a2d28 <line:2095:1, line:2097:69> line:2096:8 __is_assignable_imp
| |   | |-TemplateTypeParmDecl 0x7fd3018a2888 <line:2095:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fd3018a28f8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | |-NonTypeTemplateParmDecl 0x7fd3018a2c10 <col:34, col:79> col:39 '_Bool' depth 0 index 2
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7fd3018a2bd8 <col:41, col:79> '<dependent type>' '||'
| |   | |     |-DependentScopeDeclRefExpr 0x7fd3018a2a38 <col:41, col:55> '<dependent type>' lvalue
| |   | |     `-DependentScopeDeclRefExpr 0x7fd3018a2b98 <col:64, col:79> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fd3018a2c90 <line:2096:1, line:2097:69> line:2096:8 struct __is_assignable_imp definition
| |   |   |-public 'decltype((std::__1::__is_assignable_test<_Tp, _Arg>(0)))'
| |   |   `-CXXRecordDecl 0x7fd3018a3298 <col:1, col:8> col:8 implicit struct __is_assignable_imp
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd3018b06a0 <line:2099:1, line:2103:1> line:2100:8 struct __is_assignable_imp definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fd3018a3350 <line:2099:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fd3018a33b8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | `-CXXRecordDecl 0x7fd3018b09c0 <line:2100:1, col:8> col:8 implicit struct __is_assignable_imp
| |   |-ClassTemplateDecl 0x7fd3018b0c10 <line:2105:1, line:2107:46> line:2106:8 is_assignable
| |   | |-TemplateTypeParmDecl 0x7fd3018b0a78 <line:2105:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fd3018b0ae8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | `-CXXRecordDecl 0x7fd3018b0b78 <line:2106:1, line:2107:46> line:2106:8 struct is_assignable definition
| |   |   |-public '__is_assignable_imp<_Tp, _Arg>'
| |   |   `-CXXRecordDecl 0x7fd3018b12a8 <col:1, col:8> col:8 implicit struct is_assignable
| |   |-ClassTemplateDecl 0x7fd3018b14a8 <line:2116:1, line:2118:88> line:2116:50 is_copy_assignable
| |   | |-TemplateTypeParmDecl 0x7fd3018b1360 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd3018b1410 <col:22, line:2118:88> line:2116:50 struct is_copy_assignable definition
| |   |   |-public 'is_assignable<typename add_lvalue_reference<_Tp>::type, typename add_lvalue_reference<typename add_const<_Tp>::type>::type>'
| |   |   |-TypeVisibilityAttr 0x7fd3018b1720 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd3018b1c88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2116:22, col:50> col:50 implicit struct is_copy_assignable
| |   |-ClassTemplateDecl 0x7fd3018b1e88 <line:2127:1, line:2130:71> line:2127:50 is_move_assignable
| |   | |-TemplateTypeParmDecl 0x7fd3018b1d40 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd3018b1df0 <col:22, line:2130:71> line:2127:50 struct is_move_assignable definition
| |   |   |-public 'is_assignable<typename add_lvalue_reference<_Tp>::type, typename add_rvalue_reference<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fd3018b2100 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd3018b24c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2127:22, col:50> col:50 implicit struct is_move_assignable
| |   |-ClassTemplateDecl 0x7fd3018b2698 <line:2149:1, line:2150:52> col:8 __is_destructible_apply
| |   | |-TemplateTypeParmDecl 0x7fd3018b2580 <line:2149:11> col:11 class depth 0 index 0
| |   | `-CXXRecordDecl 0x7fd3018b2600 <line:2150:1, col:52> col:8 struct __is_destructible_apply definition
| |   |   |-CXXRecordDecl 0x7fd3018b2910 <col:1, col:8> col:8 implicit struct __is_destructible_apply
| |   |   `-TypedefDecl 0x7fd3018b29c0 <col:34, col:46> col:46 type 'int'
| |   |     `-BuiltinType 0x7fd2ff8327c0 'int'
| |   |-ClassTemplateDecl 0x7fd3018b2b58 <line:2152:1, line:2163:1> line:2153:8 __is_destructor_wellformed
| |   | |-TemplateTypeParmDecl 0x7fd3018b2a38 <line:2152:11, col:20> col:20 referenced typename depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd3018b2ac0 <line:2153:1, line:2163:1> line:2153:8 struct __is_destructor_wellformed definition
| |   |   |-CXXRecordDecl 0x7fd3018b2dd0 <col:1, col:8> col:8 implicit struct __is_destructor_wellformed
| |   |   |-FunctionTemplateDecl 0x7fd3018b34e8 <line:2154:5, line:2157:5> line:2155:18 __test
| |   |   | |-TemplateTypeParmDecl 0x7fd3018b2e68 <line:2154:15, col:24> col:24 referenced typename depth 1 index 0 _Tp1
| |   |   | `-CXXMethodDecl 0x7fd3018b3450 <line:2155:5, line:2157:5> line:2155:18 __test 'char (typename __is_destructible_apply<decltype(std::__1::declval<_Tp1 &>().~_Tp1())>::type)' static
| |   |   |   `-ParmVarDecl 0x7fd3018b3320 <line:2156:9, col:86> line:2157:5 'typename __is_destructible_apply<decltype(std::__1::declval<_Tp1 &>().~_Tp1())>::type'
| |   |   |-FunctionTemplateDecl 0x7fd3018b3678 <line:2159:5, line:2160:29> col:18 __test
| |   |   | |-TemplateTypeParmDecl 0x7fd3018b3540 <line:2159:15, col:24> col:24 typename depth 1 index 0 _Tp1
| |   |   | `-CXXMethodDecl 0x7fd3018b35e0 <line:2160:5, col:29> col:18 __test 'struct std::__1::__two (...)' static
| |   |   `-VarDecl 0x7fd3018b36d8 <line:2162:5, col:69> col:23 value 'const _Bool' static cinit
| |   |     `-BinaryOperator 0x7fd3018b38c0 <col:31, col:69> '_Bool' '=='
| |   |       |-UnaryExprOrTypeTraitExpr 0x7fd3018b3870 <col:31, col:53> 'unsigned long' sizeof
| |   |       | `-ParenExpr 0x7fd3018b3850 <col:37, col:53> '<dependent type>'
| |   |       |   `-CallExpr 0x7fd3018b3820 <col:38, col:52> '<dependent type>'
| |   |       |     |-UnresolvedLookupExpr 0x7fd3018b3760 <col:38, col:48> '<dependent type>' lvalue (no ADL) = '__test' 0x7fd3018b3678 0x7fd3018b34e8
| |   |       |     `-IntegerLiteral 0x7fd3018b3800 <col:50> 'int' 12
| |   |       `-UnaryExprOrTypeTraitExpr 0x7fd3018b38a0 <col:58, col:69> 'unsigned long' sizeof 'char'
| |   |-ClassTemplateDecl 0x7fd3018b3a98 <line:2165:1, line:2166:8> col:8 __destructible_imp
| |   | |-TemplateTypeParmDecl 0x7fd3018b3908 <line:2165:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fd3018b3988 <col:22> col:26 '_Bool' depth 0 index 1
| |   | `-CXXRecordDecl 0x7fd3018b3a00 <line:2166:1, col:8> col:8 struct __destructible_imp
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd3018b3ee0 <line:2168:1, line:2171:92> line:2169:8 struct __destructible_imp definition
| |   | |-public 'std::__1::integral_constant<_Bool, __is_destructor_wellformed<typename std::__1::remove_all_extents<_Tp>::type>::value>':'integral_constant<_Bool, __is_destructor_wellformed<typename std::__1::remove_all_extents<_Tp>::type>::value>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fd3018b3cf8 <line:2168:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd3018b4a18 <line:2169:1, col:8> col:8 implicit struct __destructible_imp
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd3018b4cb0 <line:2173:1, line:2175:32> line:2174:8 struct __destructible_imp definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fd3018b4ad0 <line:2173:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd3018b4ff0 <line:2174:1, col:8> col:8 implicit struct __destructible_imp
| |   |-ClassTemplateDecl 0x7fd3018b5238 <line:2177:1, line:2178:8> col:8 __destructible_false
| |   | |-TemplateTypeParmDecl 0x7fd3018b50a8 <line:2177:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fd3018b5128 <col:22> col:26 '_Bool' depth 0 index 1
| |   | `-CXXRecordDecl 0x7fd3018b51a0 <line:2178:1, col:8> col:8 struct __destructible_false
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd3018b5680 <line:2180:1, line:2181:108> col:8 struct __destructible_false definition
| |   | |-public '__destructible_imp<_Tp, std::__1::is_reference<_Tp>::value>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fd3018b5498 <line:2180:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd3018b5bc8 <line:2181:1, col:8> col:8 implicit struct __destructible_false
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd3018b5e60 <line:2183:1, line:2184:68> col:8 struct __destructible_false definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fd3018b5c80 <line:2183:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd3018b61a0 <line:2184:1, col:8> col:8 implicit struct __destructible_false
| |   |-ClassTemplateDecl 0x7fd3018b6378 <line:2186:1, line:2188:73> line:2187:8 is_destructible
| |   | |-TemplateTypeParmDecl 0x7fd3018b6258 <line:2186:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fd3018b62e0 <line:2187:1, line:2188:73> line:2187:8 struct is_destructible definition
| |   | | |-public '__destructible_false<_Tp, std::__1::is_function<_Tp>::value>'
| |   | | `-CXXRecordDecl 0x7fd3018b68a8 <col:1, col:8> col:8 implicit struct is_destructible
| |   | `-ClassTemplateSpecialization 0x7fd3018b6ec8 'is_destructible'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd3018b6b28 <line:2190:1, line:2192:33> line:2191:8 struct is_destructible definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'type-parameter-0-0 []'
| |   | |-TemplateTypeParmDecl 0x7fd3018b6960 <line:2190:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd3018b6df0 <line:2191:1, col:8> col:8 implicit struct is_destructible
| |   |-ClassTemplateSpecializationDecl 0x7fd3018b6ec8 <line:2194:1, line:2196:33> line:2195:8 struct is_destructible definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'void'
| |   | `-CXXRecordDecl 0x7fd3018b7170 <col:1, col:8> col:8 implicit struct is_destructible
| |   |-FunctionTemplateDecl 0x7fd3018b7638 <line:2207:1, line:2214:1> line:2210:1 move
| |   | |-TemplateTypeParmDecl 0x7fd3018b7228 <line:2207:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fd3018b75a0 <line:2208:1, line:2214:1> line:2210:1 constexpr move 'typename remove_reference<_Tp>::type &&(_Tp &&) noexcept' inline
| |   |   |-ParmVarDecl 0x7fd3018b7418 <col:6, col:12> col:12 referenced __t '_Tp &&'
| |   |   |-CompoundStmt 0x7fd3018b7950 <line:2211:1, line:2214:1>
| |   |   | |-DeclStmt 0x7fd3018b7868 <line:2212:5, col:53>
| |   |   | | `-TypedefDecl 0x7fd3018b7810 <col:5, col:50> col:50 referenced _Up 'typename remove_reference<_Tp>::type'
| |   |   | |   `-DependentNameType 0x7fd3018b77a0 'typename remove_reference<_Tp>::type' dependent
| |   |   | `-ReturnStmt 0x7fd3018b7938 <line:2213:5, col:34>
| |   |   |   `-CXXStaticCastExpr 0x7fd3018b7908 <col:12, col:34> '_Up':'typename remove_reference<_Tp>::type' xvalue static_cast<_Up &&> <Dependent>
| |   |   |     `-DeclRefExpr 0x7fd3018b78a0 <col:31> '_Tp' lvalue ParmVar 0x7fd3018b7418 '__t' '_Tp &&'
| |   |   |-AlwaysInlineAttr 0x7fd3018b7690 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fd3018b76d8 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fd3018b7d80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2216:1, line:2222:1> line:2219:1 forward
| |   | |-TemplateTypeParmDecl 0x7fd3018b7978 <line:2216:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fd3018b7ce8 <line:2217:1, line:2222:1> line:2219:1 constexpr forward '_Tp &&(typename remove_reference<_Tp>::type &) noexcept' inline
| |   |   |-ParmVarDecl 0x7fd3018b7bb0 <col:9, col:47> col:47 referenced __t 'typename remove_reference<_Tp>::type &'
| |   |   |-CompoundStmt 0x7fd3018b7eb0 <line:2220:1, line:2222:1>
| |   |   | `-ReturnStmt 0x7fd3018b7e98 <line:2221:5, col:34>
| |   |   |   `-CXXStaticCastExpr 0x7fd3018b7e68 <col:12, col:34> '_Tp' xvalue static_cast<_Tp &&> <Dependent>
| |   |   |     `-DeclRefExpr 0x7fd3018b7e30 <col:31> 'typename remove_reference<_Tp>::type' lvalue ParmVar 0x7fd3018b7bb0 '__t' 'typename remove_reference<_Tp>::type &'
| |   |   |-AlwaysInlineAttr 0x7fd3018b7dd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fd3018b7e20 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fd3018b82a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2224:1, line:2232:1> line:2227:1 forward
| |   | |-TemplateTypeParmDecl 0x7fd3018b7ed0 <line:2224:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fd3018b8208 <line:2225:1, line:2232:1> line:2227:1 constexpr forward '_Tp &&(typename remove_reference<_Tp>::type &&) noexcept' inline
| |   |   |-ParmVarDecl 0x7fd3018b80d0 <col:9, col:48> col:48 referenced __t 'typename remove_reference<_Tp>::type &&'
| |   |   |-CompoundStmt 0x7fd3018b8618 <line:2228:1, line:2232:1>
| |   |   | |-DeclStmt 0x7fd3018b8580 <line:2229:5, line:2230:60>
| |   |   | | `-StaticAssertDecl 0x7fd3018b8548 <line:2229:5, line:2230:59> line:2229:5
| |   |   | |   |-UnaryOperator 0x7fd3018b8458 <col:19, col:46> '<dependent type>' prefix '!'
| |   |   | |   | `-DependentScopeDeclRefExpr 0x7fd3018b8418 <col:20, col:46> '<dependent type>' lvalue
| |   |   | |   `-StringLiteral 0x7fd3018b84f8 <line:2230:19> 'const char [39]' lvalue "can not forward an rvalue as an lvalue"
| |   |   | `-ReturnStmt 0x7fd3018b8600 <line:2231:5, col:34>
| |   |   |   `-CXXStaticCastExpr 0x7fd3018b85d0 <col:12, col:34> '_Tp' xvalue static_cast<_Tp &&> <Dependent>
| |   |   |     `-DeclRefExpr 0x7fd3018b8598 <col:31> 'typename remove_reference<_Tp>::type' lvalue ParmVar 0x7fd3018b80d0 '__t' 'typename remove_reference<_Tp>::type &&'
| |   |   |-AlwaysInlineAttr 0x7fd3018b82f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fd3018b8340 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fd3018b8a00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2277:1, line:2283:1> line:2280:1 __decay_copy
| |   | |-TemplateTypeParmDecl 0x7fd3018b8640 <line:2277:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fd3018b8940 <line:2278:1, line:2283:1> line:2280:1 __decay_copy 'typename decay<_Tp>::type (_Tp &&)' inline
| |   |   |-ParmVarDecl 0x7fd3018b8828 <col:14, col:20> col:20 referenced __t '_Tp &&'
| |   |   |-CompoundStmt 0x7fd3018b8c18 <line:2281:1, line:2283:1>
| |   |   | `-ReturnStmt 0x7fd3018b8c00 <line:2282:5, col:35>
| |   |   |   `-CallExpr 0x7fd3018b8bd0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2282:35> '<dependent type>'
| |   |   |     |-UnresolvedLookupExpr 0x7fd3018b8b08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2282:30> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fd3018b7d80 0x7fd3018b82a0
| |   |   |     `-DeclRefExpr 0x7fd3018b8ba8 <col:32> '_Tp' lvalue ParmVar 0x7fd3018b8828 '__t' '_Tp &&'
| |   |   |-AlwaysInlineAttr 0x7fd3018b8a58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fd3018b8aa0 <col:51, col:74> Hidden
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd3018b91b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2299:1, line:2305:1> line:2300:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...)'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fd3018b8c38 <line:2299:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fd3018b8ca8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fd3018b8d18 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fd3018b94d0 <line:2300:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fd3018b9578 <line:2302:5, col:20> col:20 _ClassType '_Class'
| |   | | `-TemplateTypeParmType 0x7fd3018b8cf0 '_Class' dependent depth 0 index 1
| |   | |   `-TemplateTypeParm 0x7fd3018b8ca8 '_Class'
| |   | |-TypedefDecl 0x7fd3018b95e0 <line:2303:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fd3018b8c80 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fd3018b8c38 '_Rp'
| |   | `-TypedefDecl 0x7fd3018b96d8 <line:2304:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fd3018b8f10 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fd3018b8ed0 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fd3018b8c80 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fd3018b8c38 '_Rp'
| |   |       `-PackExpansionType 0x7fd3018b8df0 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fd3018b8d60 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fd3018b8d18 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd3018b9cc8 <line:2307:1, line:2313:1> line:2308:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...)'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fd3018b9750 <line:2307:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fd3018b97b8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fd3018b9828 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fd3018b9fe0 <line:2308:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fd3018ba088 <line:2310:5, col:20> col:20 _ClassType '_Class'
| |   | | `-TemplateTypeParmType 0x7fd3018b9800 '_Class' dependent depth 0 index 1
| |   | |   `-TemplateTypeParm 0x7fd3018b97b8 '_Class'
| |   | |-TypedefDecl 0x7fd3018ba0f0 <line:2311:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fd3018b9790 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fd3018b9750 '_Rp'
| |   | `-TypedefDecl 0x7fd3018ba1e8 <line:2312:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fd3018b9a20 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fd3018b99e0 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fd3018b9790 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fd3018b9750 '_Rp'
| |   |       |-PackExpansionType 0x7fd3018b9900 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fd3018b9870 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fd3018b9828 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd3018ba7d8 <line:2315:1, line:2321:1> line:2316:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fd3018ba260 <line:2315:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fd3018ba2c8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fd3018ba338 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fd3018bb350 <line:2316:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fd3018bb3f8 <line:2318:5, col:26> col:26 _ClassType 'const _Class'
| |   | | `-QualType 0x7fd3018ba311 'const _Class' const
| |   | |   `-TemplateTypeParmType 0x7fd3018ba310 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fd3018ba2c8 '_Class'
| |   | |-TypedefDecl 0x7fd3018bb460 <line:2319:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fd3018ba2a0 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fd3018ba260 '_Rp'
| |   | `-TypedefDecl 0x7fd3018bb5c8 <line:2320:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fd3018bb570 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fd3018bb530 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fd3018ba2a0 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fd3018ba260 '_Rp'
| |   |       `-PackExpansionType 0x7fd3018ba410 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fd3018ba380 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fd3018ba338 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd3018bbbb8 <line:2323:1, line:2329:1> line:2324:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) const'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fd3018bb640 <line:2323:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fd3018bb6a8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fd3018bb718 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fd3018bbed0 <line:2324:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fd3018bbf78 <line:2326:5, col:26> col:26 _ClassType 'const _Class'
| |   | | `-QualType 0x7fd3018bb6f1 'const _Class' const
| |   | |   `-TemplateTypeParmType 0x7fd3018bb6f0 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fd3018bb6a8 '_Class'
| |   | |-TypedefDecl 0x7fd3018bbfe0 <line:2327:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fd3018bb680 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fd3018bb640 '_Rp'
| |   | `-TypedefDecl 0x7fd3018bc148 <line:2328:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fd3018bc0f0 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fd3018bc0b0 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fd3018bb680 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fd3018bb640 '_Rp'
| |   |       |-PackExpansionType 0x7fd3018bb7f0 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fd3018bb760 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fd3018bb718 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd3018bc738 <line:2331:1, line:2337:1> line:2332:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) volatile'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fd3018bc1c0 <line:2331:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fd3018bc228 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fd3018bc298 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fd3018bca50 <line:2332:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fd3018bcaf8 <line:2334:5, col:29> col:29 _ClassType 'volatile _Class'
| |   | | `-QualType 0x7fd3018bc274 'volatile _Class' volatile
| |   | |   `-TemplateTypeParmType 0x7fd3018bc270 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fd3018bc228 '_Class'
| |   | |-TypedefDecl 0x7fd3018bcb60 <line:2335:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fd3018bc200 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fd3018bc1c0 '_Rp'
| |   | `-TypedefDecl 0x7fd3018bccc8 <line:2336:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fd3018bcc70 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fd3018bcc30 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fd3018bc200 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fd3018bc1c0 '_Rp'
| |   |       `-PackExpansionType 0x7fd3018bc370 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fd3018bc2e0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fd3018bc298 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd3018bdf18 <line:2339:1, line:2345:1> line:2340:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) volatile'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fd3018bcd40 <line:2339:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fd3018bcda8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fd3018bce18 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fd3018be230 <line:2340:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fd3018be2d8 <line:2342:5, col:29> col:29 _ClassType 'volatile _Class'
| |   | | `-QualType 0x7fd3018bcdf4 'volatile _Class' volatile
| |   | |   `-TemplateTypeParmType 0x7fd3018bcdf0 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fd3018bcda8 '_Class'
| |   | |-TypedefDecl 0x7fd3018be340 <line:2343:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fd3018bcd80 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fd3018bcd40 '_Rp'
| |   | `-TypedefDecl 0x7fd3018be4a8 <line:2344:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fd3018be450 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fd3018be410 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fd3018bcd80 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fd3018bcd40 '_Rp'
| |   |       |-PackExpansionType 0x7fd3018bcef0 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fd3018bce60 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fd3018bce18 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd3018bea98 <line:2347:1, line:2353:1> line:2348:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const volatile'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fd3018be520 <line:2347:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fd3018be588 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fd3018be5f8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fd3018bedb0 <line:2348:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fd3018bee58 <line:2350:5, col:35> col:35 _ClassType 'const volatile _Class'
| |   | | `-QualType 0x7fd3018be5d5 'const volatile _Class' const volatile
| |   | |   `-TemplateTypeParmType 0x7fd3018be5d0 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fd3018be588 '_Class'
| |   | |-TypedefDecl 0x7fd3018beec0 <line:2351:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fd3018be560 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fd3018be520 '_Rp'
| |   | `-TypedefDecl 0x7fd3018bf028 <line:2352:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fd3018befd0 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fd3018bef90 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fd3018be560 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fd3018be520 '_Rp'
| |   |       `-PackExpansionType 0x7fd3018be6d0 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fd3018be640 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fd3018be5f8 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd3018bf618 <line:2355:1, line:2361:1> line:2356:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) const volatile'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fd3018bf0a0 <line:2355:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fd3018bf108 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fd3018bf178 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fd3018bf930 <line:2356:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fd3018bf9d8 <line:2358:5, col:35> col:35 _ClassType 'const volatile _Class'
| |   | | `-QualType 0x7fd3018bf155 'const volatile _Class' const volatile
| |   | |   `-TemplateTypeParmType 0x7fd3018bf150 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fd3018bf108 '_Class'
| |   | |-TypedefDecl 0x7fd3018bfa40 <line:2359:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fd3018bf0e0 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fd3018bf0a0 '_Rp'
| |   | `-TypedefDecl 0x7fd3018bfba8 <line:2360:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fd3018bfb50 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fd3018bfb10 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fd3018bf0e0 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fd3018bf0a0 '_Rp'
| |   |       |-PackExpansionType 0x7fd3018bf250 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fd3018bf1c0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fd3018bf178 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd3018c0d98 <line:2366:1, line:2372:1> line:2367:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) &'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fd3018bfc20 <line:2366:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fd3018bfc88 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fd3018bfcf8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fd3018c10b0 <line:2367:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fd3018c1188 <line:2369:5, col:21> col:21 _ClassType '_Class &'
| |   | | `-LValueReferenceType 0x7fd3018c1150 '_Class &' dependent
| |   | |   `-TemplateTypeParmType 0x7fd3018bfcd0 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fd3018bfc88 '_Class'
| |   | |-TypedefDecl 0x7fd3018c11f0 <line:2370:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fd3018bfc60 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fd3018bfc20 '_Rp'
| |   | `-TypedefDecl 0x7fd3018c1358 <line:2371:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fd3018c1300 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fd3018c12c0 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fd3018bfc60 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fd3018bfc20 '_Rp'
| |   |       `-PackExpansionType 0x7fd3018bfdd0 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fd3018bfd40 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fd3018bfcf8 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd3018c1948 <line:2374:1, line:2380:1> line:2375:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) &'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fd3018c13d0 <line:2374:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fd3018c1438 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fd3018c14a8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fd3018c1c60 <line:2375:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fd3018c1d38 <line:2377:5, col:21> col:21 _ClassType '_Class &'
| |   | | `-LValueReferenceType 0x7fd3018c1d00 '_Class &' dependent
| |   | |   `-TemplateTypeParmType 0x7fd3018c1480 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fd3018c1438 '_Class'
| |   | |-TypedefDecl 0x7fd3018c1da0 <line:2378:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fd3018c1410 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fd3018c13d0 '_Rp'
| |   | `-TypedefDecl 0x7fd3018c1f08 <line:2379:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fd3018c1eb0 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fd3018c1e70 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fd3018c1410 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fd3018c13d0 '_Rp'
| |   |       |-PackExpansionType 0x7fd3018c1580 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fd3018c14f0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fd3018c14a8 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd3018c24f8 <line:2382:1, line:2388:1> line:2383:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const &'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fd3018c1f80 <line:2382:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fd3018c1fe8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fd3018c2058 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fd3018c2810 <line:2383:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fd3018c28e8 <line:2385:5, col:27> col:27 _ClassType 'const _Class &'
| |   | | `-LValueReferenceType 0x7fd3018c28b0 'const _Class &' dependent
| |   | |   `-QualType 0x7fd3018c2031 'const _Class' const
| |   | |     `-TemplateTypeParmType 0x7fd3018c2030 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fd3018c1fe8 '_Class'
| |   | |-TypedefDecl 0x7fd3018c2950 <line:2386:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fd3018c1fc0 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fd3018c1f80 '_Rp'
| |   | `-TypedefDecl 0x7fd3018c36f8 <line:2387:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fd3018c36a0 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fd3018c3660 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fd3018c1fc0 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fd3018c1f80 '_Rp'
| |   |       `-PackExpansionType 0x7fd3018c2130 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fd3018c20a0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fd3018c2058 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd3018c3ce8 <line:2390:1, line:2396:1> line:2391:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) const &'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fd3018c3770 <line:2390:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fd3018c37d8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fd3018c3848 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fd3018c4000 <line:2391:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fd3018c40d8 <line:2393:5, col:27> col:27 _ClassType 'const _Class &'
| |   | | `-LValueReferenceType 0x7fd3018c40a0 'const _Class &' dependent
| |   | |   `-QualType 0x7fd3018c3821 'const _Class' const
| |   | |     `-TemplateTypeParmType 0x7fd3018c3820 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fd3018c37d8 '_Class'
| |   | |-TypedefDecl 0x7fd3018c4140 <line:2394:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fd3018c37b0 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fd3018c3770 '_Rp'
| |   | `-TypedefDecl 0x7fd3018c42a8 <line:2395:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fd3018c4250 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fd3018c4210 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fd3018c37b0 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fd3018c3770 '_Rp'
| |   |       |-PackExpansionType 0x7fd3018c3920 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fd3018c3890 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fd3018c3848 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd3018c4898 <line:2398:1, line:2404:1> line:2399:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) volatile &'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fd3018c4320 <line:2398:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fd3018c4388 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fd3018c43f8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fd3018c4bb0 <line:2399:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fd3018c4c88 <line:2401:5, col:30> col:30 _ClassType 'volatile _Class &'
| |   | | `-LValueReferenceType 0x7fd3018c4c50 'volatile _Class &' dependent
| |   | |   `-QualType 0x7fd3018c43d4 'volatile _Class' volatile
| |   | |     `-TemplateTypeParmType 0x7fd3018c43d0 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fd3018c4388 '_Class'
| |   | |-TypedefDecl 0x7fd3018c4cf0 <line:2402:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fd3018c4360 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fd3018c4320 '_Rp'
| |   | `-TypedefDecl 0x7fd3018c4e58 <line:2403:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fd3018c4e00 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fd3018c4dc0 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fd3018c4360 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fd3018c4320 '_Rp'
| |   |       `-PackExpansionType 0x7fd3018c44d0 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fd3018c4440 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fd3018c43f8 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd3018c5448 <line:2406:1, line:2412:1> line:2407:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) volatile &'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fd3018c4ed0 <line:2406:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fd3018c4f38 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fd3018c4fa8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fd3018c5f70 <line:2407:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fd3018c6048 <line:2409:5, col:30> col:30 _ClassType 'volatile _Class &'
| |   | | `-LValueReferenceType 0x7fd3018c6010 'volatile _Class &' dependent
| |   | |   `-QualType 0x7fd3018c4f84 'volatile _Class' volatile
| |   | |     `-TemplateTypeParmType 0x7fd3018c4f80 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fd3018c4f38 '_Class'
| |   | |-TypedefDecl 0x7fd3018c60b0 <line:2410:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fd3018c4f10 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fd3018c4ed0 '_Rp'
| |   | `-TypedefDecl 0x7fd3018c6218 <line:2411:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fd3018c61c0 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fd3018c6180 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fd3018c4f10 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fd3018c4ed0 '_Rp'
| |   |       |-PackExpansionType 0x7fd3018c5080 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fd3018c4ff0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fd3018c4fa8 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd3018c6808 <line:2414:1, line:2420:1> line:2415:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const volatile &'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fd3018c6290 <line:2414:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fd3018c62f8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fd3018c6368 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fd3018c6b20 <line:2415:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fd3018c6bf8 <line:2417:5, col:36> col:36 _ClassType 'const volatile _Class &'
| |   | | `-LValueReferenceType 0x7fd3018c6bc0 'const volatile _Class &' dependent
| |   | |   `-QualType 0x7fd3018c6345 'const volatile _Class' const volatile
| |   | |     `-TemplateTypeParmType 0x7fd3018c6340 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fd3018c62f8 '_Class'
| |   | |-TypedefDecl 0x7fd3018c6c60 <line:2418:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fd3018c62d0 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fd3018c6290 '_Rp'
| |   | `-TypedefDecl 0x7fd3018c6dc8 <line:2419:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fd3018c6d70 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fd3018c6d30 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fd3018c62d0 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fd3018c6290 '_Rp'
| |   |       `-PackExpansionType 0x7fd3018c6440 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fd3018c63b0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fd3018c6368 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd3018c73b8 <line:2422:1, line:2428:1> line:2423:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) const volatile &'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fd3018c6e40 <line:2422:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fd3018c6ea8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fd3018c6f18 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fd3018c76d0 <line:2423:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fd3018c77a8 <line:2425:5, col:36> col:36 _ClassType 'const volatile _Class &'
| |   | | `-LValueReferenceType 0x7fd3018c7770 'const volatile _Class &' dependent
| |   | |   `-QualType 0x7fd3018c6ef5 'const volatile _Class' const volatile
| |   | |     `-TemplateTypeParmType 0x7fd3018c6ef0 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fd3018c6ea8 '_Class'
| |   | |-TypedefDecl 0x7fd3018c7810 <line:2426:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fd3018c6e80 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fd3018c6e40 '_Rp'
| |   | `-TypedefDecl 0x7fd3018c7978 <line:2427:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fd3018c7920 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fd3018c78e0 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fd3018c6e80 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fd3018c6e40 '_Rp'
| |   |       |-PackExpansionType 0x7fd3018c6ff0 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fd3018c6f60 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fd3018c6f18 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd301839998 <line:2430:1, line:2436:1> line:2431:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) &&'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fd3018c79f0 <line:2430:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fd3018c7a58 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fd3018c7ac8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fd301839cb0 <line:2431:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fd301839db8 <line:2433:5, col:22> col:22 _ClassType '_Class &&'
| |   | | `-RValueReferenceType 0x7fd301839d80 '_Class &&' dependent
| |   | |   `-TemplateTypeParmType 0x7fd3018c7aa0 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fd3018c7a58 '_Class'
| |   | |-TypedefDecl 0x7fd301839e20 <line:2434:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fd3018c7a30 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fd3018c79f0 '_Rp'
| |   | `-TypedefDecl 0x7fd301839f88 <line:2435:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fd301839f30 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fd301839ef0 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fd3018c7a30 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fd3018c79f0 '_Rp'
| |   |       `-PackExpansionType 0x7fd3018c7ba0 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fd3018c7b10 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fd3018c7ac8 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd30183a578 <line:2438:1, line:2444:1> line:2439:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) &&'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fd30183a000 <line:2438:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fd30183a068 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fd30183a0d8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fd30183a890 <line:2439:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fd30183a968 <line:2441:5, col:22> col:22 _ClassType '_Class &&'
| |   | | `-RValueReferenceType 0x7fd30183a930 '_Class &&' dependent
| |   | |   `-TemplateTypeParmType 0x7fd30183a0b0 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fd30183a068 '_Class'
| |   | |-TypedefDecl 0x7fd30183a9d0 <line:2442:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fd30183a040 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fd30183a000 '_Rp'
| |   | `-TypedefDecl 0x7fd30183ab38 <line:2443:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fd30183aae0 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fd30183aaa0 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fd30183a040 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fd30183a000 '_Rp'
| |   |       |-PackExpansionType 0x7fd30183a1b0 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fd30183a120 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fd30183a0d8 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd30183b128 <line:2446:1, line:2452:1> line:2447:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const &&'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fd30183abb0 <line:2446:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fd30183ac18 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fd30183ac88 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fd30183b440 <line:2447:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fd30183b548 <line:2449:5, col:28> col:28 _ClassType 'const _Class &&'
| |   | | `-RValueReferenceType 0x7fd30183b510 'const _Class &&' dependent
| |   | |   `-QualType 0x7fd30183ac61 'const _Class' const
| |   | |     `-TemplateTypeParmType 0x7fd30183ac60 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fd30183ac18 '_Class'
| |   | |-TypedefDecl 0x7fd30183b5b0 <line:2450:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fd30183abf0 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fd30183abb0 '_Rp'
| |   | `-TypedefDecl 0x7fd30183b718 <line:2451:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fd30183b6c0 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fd30183b680 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fd30183abf0 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fd30183abb0 '_Rp'
| |   |       `-PackExpansionType 0x7fd30183ad60 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fd30183acd0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fd30183ac88 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd3018c8d08 <line:2454:1, line:2460:1> line:2455:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) const &&'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fd30183b790 <line:2454:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fd3018c8800 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fd3018c8868 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fd3018c9020 <line:2455:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fd3018c90f8 <line:2457:5, col:28> col:28 _ClassType 'const _Class &&'
| |   | | `-RValueReferenceType 0x7fd3018c90c0 'const _Class &&' dependent
| |   | |   `-QualType 0x7fd3018c8841 'const _Class' const
| |   | |     `-TemplateTypeParmType 0x7fd3018c8840 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fd3018c8800 '_Class'
| |   | |-TypedefDecl 0x7fd3018c9160 <line:2458:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fd30183b7d0 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fd30183b790 '_Rp'
| |   | `-TypedefDecl 0x7fd3018c92c8 <line:2459:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fd3018c9270 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fd3018c9230 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fd30183b7d0 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fd30183b790 '_Rp'
| |   |       |-PackExpansionType 0x7fd3018c8940 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fd3018c88b0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fd3018c8868 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd3018c98b8 <line:2462:1, line:2468:1> line:2463:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) volatile &&'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fd3018c9340 <line:2462:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fd3018c93a8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fd3018c9418 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fd3018c9bd0 <line:2463:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fd3018c9cd8 <line:2465:5, col:31> col:31 _ClassType 'volatile _Class &&'
| |   | | `-RValueReferenceType 0x7fd3018c9ca0 'volatile _Class &&' dependent
| |   | |   `-QualType 0x7fd3018c93f4 'volatile _Class' volatile
| |   | |     `-TemplateTypeParmType 0x7fd3018c93f0 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fd3018c93a8 '_Class'
| |   | |-TypedefDecl 0x7fd3018c9d40 <line:2466:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fd3018c9380 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fd3018c9340 '_Rp'
| |   | `-TypedefDecl 0x7fd3018c9ea8 <line:2467:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fd3018c9e50 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fd3018c9e10 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fd3018c9380 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fd3018c9340 '_Rp'
| |   |       `-PackExpansionType 0x7fd3018c94f0 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fd3018c9460 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fd3018c9418 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd3018ca498 <line:2470:1, line:2476:1> line:2471:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) volatile &&'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fd3018c9f20 <line:2470:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fd3018c9f88 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fd3018c9ff8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fd3018ca800 <line:2471:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fd3018ca8d8 <line:2473:5, col:31> col:31 _ClassType 'volatile _Class &&'
| |   | | `-RValueReferenceType 0x7fd3018ca8a0 'volatile _Class &&' dependent
| |   | |   `-QualType 0x7fd3018c9fd4 'volatile _Class' volatile
| |   | |     `-TemplateTypeParmType 0x7fd3018c9fd0 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fd3018c9f88 '_Class'
| |   | |-TypedefDecl 0x7fd3018ca940 <line:2474:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fd3018c9f60 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fd3018c9f20 '_Rp'
| |   | `-TypedefDecl 0x7fd3018caaa8 <line:2475:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fd3018caa50 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fd3018caa10 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fd3018c9f60 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fd3018c9f20 '_Rp'
| |   |       |-PackExpansionType 0x7fd3018ca0d0 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fd3018ca040 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fd3018c9ff8 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd3018cb098 <line:2478:1, line:2484:1> line:2479:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const volatile &&'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fd3018cab20 <line:2478:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fd3018cab88 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fd3018cabf8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fd3018cb3b0 <line:2479:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fd3018cb4b8 <line:2481:5, col:37> col:37 _ClassType 'const volatile _Class &&'
| |   | | `-RValueReferenceType 0x7fd3018cb480 'const volatile _Class &&' dependent
| |   | |   `-QualType 0x7fd3018cabd5 'const volatile _Class' const volatile
| |   | |     `-TemplateTypeParmType 0x7fd3018cabd0 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fd3018cab88 '_Class'
| |   | |-TypedefDecl 0x7fd3018cb520 <line:2482:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fd3018cab60 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fd3018cab20 '_Rp'
| |   | `-TypedefDecl 0x7fd3018cb688 <line:2483:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fd3018cb630 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fd3018cb5f0 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fd3018cab60 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fd3018cab20 '_Rp'
| |   |       `-PackExpansionType 0x7fd3018cacd0 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fd3018cac40 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fd3018cabf8 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd3018cbc78 <line:2486:1, line:2492:1> line:2487:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) const volatile &&'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fd3018cb700 <line:2486:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fd3018cb768 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fd3018cb7d8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fd3018cbf90 <line:2487:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fd3018cc068 <line:2489:5, col:37> col:37 _ClassType 'const volatile _Class &&'
| |   | | `-RValueReferenceType 0x7fd3018cc030 'const volatile _Class &&' dependent
| |   | |   `-QualType 0x7fd3018cb7b5 'const volatile _Class' const volatile
| |   | |     `-TemplateTypeParmType 0x7fd3018cb7b0 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fd3018cb768 '_Class'
| |   | |-TypedefDecl 0x7fd3018cc0d0 <line:2490:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fd3018cb740 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fd3018cb700 '_Rp'
| |   | `-TypedefDecl 0x7fd3018cc238 <line:2491:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fd3018cc1e0 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fd3018cc1a0 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fd3018cb740 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fd3018cb700 '_Rp'
| |   |       |-PackExpansionType 0x7fd3018cb8b0 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fd3018cb820 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fd3018cb7d8 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd3018cc608 <line:2756:1, line:2761:1> line:2757:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 type-parameter-0-1::*'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fd3018cc2b0 <line:2756:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fd3018cc318 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-CXXRecordDecl 0x7fd30000fd50 <line:2757:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fd30000fdf8 <line:2759:5, col:20> col:20 _ClassType '_Class'
| |   | | `-TemplateTypeParmType 0x7fd3018cc360 '_Class' dependent depth 0 index 1
| |   | |   `-TemplateTypeParm 0x7fd3018cc318 '_Class'
| |   | `-TypedefDecl 0x7fd30000fe60 <line:2760:5, col:17> col:17 _ReturnType '_Rp'
| |   |   `-TemplateTypeParmType 0x7fd3018cc2f0 '_Rp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fd3018cc2b0 '_Rp'
| |   |-ClassTemplateDecl 0x7fd30000fff8 <line:2763:1, line:2772:1> line:2764:8 __member_pointer_traits
| |   | |-TemplateTypeParmDecl 0x7fd30000fed8 <line:2763:11, col:17> col:17 referenced class depth 0 index 0 _MP
| |   | `-CXXRecordDecl 0x7fd30000ff60 <line:2764:1, line:2772:1> line:2764:8 struct __member_pointer_traits definition
| |   |   |-public '__member_pointer_traits_imp<typename remove_cv<_MP>::type, is_member_function_pointer<_MP>::value, is_member_object_pointer<_MP>::value>'
| |   |   `-CXXRecordDecl 0x7fd300010778 <col:1, col:8> col:8 implicit struct __member_pointer_traits
| |   |-ClassTemplateDecl 0x7fd300010948 <line:2775:1, line:2776:37> col:8 __member_pointer_class_type
| |   | |-TemplateTypeParmDecl 0x7fd300010830 <line:2775:11, col:17> col:17 class depth 0 index 0 _DecayedFp
| |   | `-CXXRecordDecl 0x7fd3000108b0 <line:2776:1, col:37> col:8 struct __member_pointer_class_type definition
| |   |   `-CXXRecordDecl 0x7fd300010bc0 <col:1, col:8> col:8 implicit struct __member_pointer_class_type
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd300010ee8 <line:2778:1, line:2781:1> line:2779:8 struct __member_pointer_class_type definition
| |   | |-TemplateArgument type 'type-parameter-0-0 type-parameter-0-1::*'
| |   | |-TemplateTypeParmDecl 0x7fd300010c78 <line:2778:11, col:17> col:17 referenced class depth 0 index 0 _Ret
| |   | |-TemplateTypeParmDecl 0x7fd300010ce8 <col:23, col:29> col:29 referenced class depth 0 index 1 _ClassType
| |   | |-CXXRecordDecl 0x7fd300011130 <line:2779:1, col:8> col:8 implicit struct __member_pointer_class_type
| |   | `-TypedefDecl 0x7fd3000111d8 <line:2780:3, col:22> col:22 type '_ClassType'
| |   |   `-TemplateTypeParmType 0x7fd300010d30 '_ClassType' dependent depth 0 index 1
| |   |     `-TemplateTypeParm 0x7fd300010ce8 '_ClassType'
| |   |-ClassTemplateDecl 0x7fd300011368 <line:2785:1, col:34> col:34 result_of
| |   | |-TemplateTypeParmDecl 0x7fd300011250 <col:11, col:17> col:17 class depth 0 index 0 _Callable
| |   | `-CXXRecordDecl 0x7fd3000112d0 <col:28, col:34> col:34 class result_of
| |   |-NamespaceDecl 0x7fd300011578 <line:2937:1, line:2940:1> line:2937:11 __is_construct
| |   | `-CXXRecordDecl 0x7fd3000115e0 <line:2939:1, col:15> col:8 struct __nat definition
| |   |   `-CXXRecordDecl 0x7fd300011708 <col:1, col:8> col:8 implicit struct __nat
| |   |-ClassTemplateDecl 0x7fd300011980 <line:3059:1, line:3062:6> line:3060:29 is_constructible
| |   | |-TemplateTypeParmDecl 0x7fd3000117c0 <line:3059:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fd300011828 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | `-CXXRecordDecl 0x7fd3000118e8 <line:3060:1, line:3062:6> line:3060:29 struct is_constructible definition
| |   |   |-public 'integral_constant<_Bool, __is_constructible(_Tp, _Args...)>'
| |   |   |-TypeVisibilityAttr 0x7fd300832290 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd300832498 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3060:1, col:29> col:29 implicit struct is_constructible
| |   |-ClassTemplateDecl 0x7fd300832698 <line:3250:1, line:3253:6> line:3251:29 is_default_constructible
| |   | |-TemplateTypeParmDecl 0x7fd300832550 <line:3250:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd300832600 <line:3251:1, line:3253:6> line:3251:29 struct is_default_constructible definition
| |   |   |-public 'is_constructible<_Tp>'
| |   |   |-TypeVisibilityAttr 0x7fd300832910 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd300832a78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3251:1, col:29> col:29 implicit struct is_default_constructible
| |   |-ClassTemplateDecl 0x7fd300832c78 <line:3262:1, line:3265:88> line:3263:29 is_copy_constructible
| |   | |-TemplateTypeParmDecl 0x7fd300832b30 <line:3262:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd300832be0 <line:3263:1, line:3265:88> line:3263:29 struct is_copy_constructible definition
| |   |   |-public 'is_constructible<_Tp, typename add_lvalue_reference<typename add_const<_Tp>::type>::type>'
| |   |   |-TypeVisibilityAttr 0x7fd300832ef0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd3008332e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3263:1, col:29> col:29 implicit struct is_copy_constructible
| |   |-ClassTemplateDecl 0x7fd3008334e8 <line:3274:1, line:3281:6> line:3275:29 is_move_constructible
| |   | |-TemplateTypeParmDecl 0x7fd3008333a0 <line:3274:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd300833450 <line:3275:1, line:3281:6> line:3275:29 struct is_move_constructible definition
| |   |   |-public 'is_constructible<_Tp, typename add_rvalue_reference<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fd300833760 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd300833a48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3275:1, col:29> col:29 implicit struct is_move_constructible
| |   |-ClassTemplateDecl 0x7fd300833cc0 <line:3294:1, line:3298:1> line:3295:29 is_trivially_constructible
| |   | |-TemplateTypeParmDecl 0x7fd300833b00 <line:3294:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fd300833b68 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | `-CXXRecordDecl 0x7fd300833c28 <line:3295:1, line:3298:1> line:3295:29 struct is_trivially_constructible definition
| |   |   |-public 'integral_constant<_Bool, __is_trivially_constructible(_Tp, _Args...)>'
| |   |   |-TypeVisibilityAttr 0x7fd300833fc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd300806000 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3295:1, col:29> col:29 implicit struct is_trivially_constructible
| |   |-ClassTemplateDecl 0x7fd300806208 <line:3422:1, line:3424:6> line:3422:50 is_trivially_default_constructible
| |   | |-TemplateTypeParmDecl 0x7fd3008060b8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd300806170 <col:22, line:3424:6> line:3422:50 struct is_trivially_default_constructible definition
| |   |   |-public 'is_trivially_constructible<_Tp>'
| |   |   |-TypeVisibilityAttr 0x7fd300806480 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd3008065e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3422:22, col:50> col:50 implicit struct is_trivially_default_constructible
| |   |-ClassTemplateDecl 0x7fd3008067e8 <line:3433:1, line:3435:6> line:3433:50 is_trivially_copy_constructible
| |   | |-TemplateTypeParmDecl 0x7fd3008066a0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd300806750 <col:22, line:3435:6> line:3433:50 struct is_trivially_copy_constructible definition
| |   |   |-public 'is_trivially_constructible<_Tp, typename add_lvalue_reference<const _Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fd300806a60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd300806dd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3433:22, col:50> col:50 implicit struct is_trivially_copy_constructible
| |   |-ClassTemplateDecl 0x7fd300806fd8 <line:3444:1, line:3450:6> line:3444:50 is_trivially_move_constructible
| |   | |-TemplateTypeParmDecl 0x7fd300806e90 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd300806f40 <col:22, line:3450:6> line:3444:50 struct is_trivially_move_constructible definition
| |   |   |-public 'is_trivially_constructible<_Tp, typename add_rvalue_reference<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fd300807250 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd300807538 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3444:22, col:50> col:50 implicit struct is_trivially_move_constructible
| |   |-ClassTemplateDecl 0x7fd300807780 <line:3461:1, line:3465:1> line:3462:8 is_trivially_assignable
| |   | |-TemplateTypeParmDecl 0x7fd3008075f0 <line:3461:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fd300807658 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | `-CXXRecordDecl 0x7fd3008076e8 <line:3462:1, line:3465:1> line:3462:8 struct is_trivially_assignable definition
| |   |   |-public 'integral_constant<_Bool, __is_trivially_assignable(_Tp, _Arg)>'
| |   |   `-CXXRecordDecl 0x7fd300807bd8 <col:1, col:8> col:8 implicit struct is_trivially_assignable
| |   |-ClassTemplateDecl 0x7fd300807dd8 <line:3502:1, line:3504:88> line:3502:50 is_trivially_copy_assignable
| |   | |-TemplateTypeParmDecl 0x7fd300807c90 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd300807d40 <col:22, line:3504:88> line:3502:50 struct is_trivially_copy_assignable definition
| |   |   |-public 'is_trivially_assignable<typename add_lvalue_reference<_Tp>::type, typename add_lvalue_reference<typename add_const<_Tp>::type>::type>'
| |   |   |-TypeVisibilityAttr 0x7fd300810068 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd300810538 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3502:22, col:50> col:50 implicit struct is_trivially_copy_assignable
| |   |-ClassTemplateDecl 0x7fd300810738 <line:3513:1, line:3520:6> line:3513:50 is_trivially_move_assignable
| |   | |-TemplateTypeParmDecl 0x7fd3008105f0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd3008106a0 <col:22, line:3520:6> line:3513:50 struct is_trivially_move_assignable definition
| |   |   |-public 'is_trivially_assignable<typename add_lvalue_reference<_Tp>::type, typename add_rvalue_reference<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fd3008109b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd300810d78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3513:22, col:50> col:50 implicit struct is_trivially_move_assignable
| |   |-ClassTemplateDecl 0x7fd300810f78 <line:3531:1, line:3532:101> line:3531:50 is_trivially_destructible
| |   | |-TemplateTypeParmDecl 0x7fd300810e30 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd300810ee0 <col:22, line:3532:101> line:3531:50 struct is_trivially_destructible definition
| |   |   |-public 'integral_constant<_Bool, is_destructible<_Tp>::value && __has_trivial_destructor(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fd3008111f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd300811538 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3531:22, col:50> col:50 implicit struct is_trivially_destructible
| |   |-ClassTemplateDecl 0x7fd300811860 <line:3568:1, col:57> col:57 __libcpp_is_nothrow_constructible
| |   | |-NonTypeTemplateParmDecl 0x7fd300811600 <col:11> col:15 '_Bool' depth 0 index 0
| |   | |-NonTypeTemplateParmDecl 0x7fd300811668 <col:17> col:21 '_Bool' depth 0 index 1
| |   | |-TemplateTypeParmDecl 0x7fd3008116c0 <col:23, col:29> col:29 class depth 0 index 2 _Tp
| |   | |-TemplateTypeParmDecl 0x7fd300811728 <col:34, col:43> col:43 class depth 0 index 3 ... _Args
| |   | `-CXXRecordDecl 0x7fd3008117c8 <col:50, col:57> col:57 struct __libcpp_is_nothrow_constructible
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd300812000 <line:3570:1, line:3574:1> line:3571:8 struct __libcpp_is_nothrow_constructible definition
| |   | |-public 'integral_constant<_Bool, noexcept(_Tp(declval<_Args>()...))>'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-1...'
| |   | |-TemplateTypeParmDecl 0x7fd300811ba8 <line:3570:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fd300811c18 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | `-CXXRecordDecl 0x7fd300812648 <line:3571:1, col:8> col:8 implicit struct __libcpp_is_nothrow_constructible
| |   |-FunctionTemplateDecl 0x7fd300812930 <line:3576:1, line:3577:47> col:6 __implicit_conversion_to
| |   | |-TemplateTypeParmDecl 0x7fd300812700 <line:3576:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fd300812898 <line:3577:1, col:47> col:6 __implicit_conversion_to 'void (_Tp) noexcept'
| |   |   |-ParmVarDecl 0x7fd300812790 <col:31> col:34 '_Tp'
| |   |   `-CompoundStmt 0x7fd300812988 <col:45, col:47>
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd300812d10 <line:3579:1, line:3583:1> line:3580:8 struct __libcpp_is_nothrow_constructible definition
| |   | |-public 'integral_constant<_Bool, noexcept(__implicit_conversion_to<_Tp>(declval<_Arg>()))>'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateTypeParmDecl 0x7fd3008129a0 <line:3579:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fd300812a08 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | `-CXXRecordDecl 0x7fd3008133c8 <line:3580:1, col:8> col:8 implicit struct __libcpp_is_nothrow_constructible
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd3008138a0 <line:3585:1, line:3589:1> line:3586:8 struct __libcpp_is_nothrow_constructible definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fd3008135f8 <col:69> '_Bool' NonTypeTemplateParm 0x7fd3008134f8 '_IsReference' '_Bool'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-2...'
| |   | |-TemplateTypeParmDecl 0x7fd300813480 <line:3585:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fd3008134f8 <col:22, col:27> col:27 referenced '_Bool' depth 0 index 1 _IsReference
| |   | |-TemplateTypeParmDecl 0x7fd300813550 <col:41, col:50> col:50 referenced class depth 0 index 2 ... _Args
| |   | `-CXXRecordDecl 0x7fd300813c40 <line:3586:1, col:8> col:8 implicit struct __libcpp_is_nothrow_constructible
| |   |-ClassTemplateDecl 0x7fd300813ec0 <line:3591:1, line:3595:1> line:3592:29 is_nothrow_constructible
| |   | |-TemplateTypeParmDecl 0x7fd300813cf8 <line:3591:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fd300813d68 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | `-CXXRecordDecl 0x7fd300813e28 <line:3592:1, line:3595:1> line:3592:29 struct is_nothrow_constructible definition
| |   |   |-public '__libcpp_is_nothrow_constructible<is_constructible<_Tp, _Args...>::value, is_reference<_Tp>::value, _Tp, _Args...>'
| |   |   |-TypeVisibilityAttr 0x7fd3008142b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd300814808 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3592:1, col:29> col:29 implicit struct is_nothrow_constructible
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd300814b70 <line:3597:1, line:3601:1> line:3598:29 struct is_nothrow_constructible definition
| |   | |-public '__libcpp_is_nothrow_constructible<is_constructible<_Tp>::value, is_reference<_Tp>::value, _Tp>'
| |   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
| |   | |-TemplateArgument pack
| |   | |-TemplateTypeParmDecl 0x7fd3008148c0 <line:3597:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fd300814938 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Ns
| |   | |-TypeVisibilityAttr 0x7fd300814cd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fd300815218 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3598:1, col:29> col:29 implicit struct is_nothrow_constructible
| |   |-ClassTemplateDecl 0x7fd300815418 <line:3720:1, line:3722:6> line:3720:50 is_nothrow_default_constructible
| |   | |-TemplateTypeParmDecl 0x7fd3008152d0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd300815380 <col:22, line:3722:6> line:3720:50 struct is_nothrow_default_constructible definition
| |   |   |-public 'is_nothrow_constructible<_Tp>'
| |   |   |-TypeVisibilityAttr 0x7fd300815690 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd3008157f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3720:22, col:50> col:50 implicit struct is_nothrow_default_constructible
| |   |-ClassTemplateDecl 0x7fd3008159f8 <line:3731:1, line:3733:88> line:3731:50 is_nothrow_copy_constructible
| |   | |-TemplateTypeParmDecl 0x7fd3008158b0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd300815960 <col:22, line:3733:88> line:3731:50 struct is_nothrow_copy_constructible definition
| |   |   |-public 'is_nothrow_constructible<_Tp, typename add_lvalue_reference<typename add_const<_Tp>::type>::type>'
| |   |   |-TypeVisibilityAttr 0x7fd300815c70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd300841a78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3731:22, col:50> col:50 implicit struct is_nothrow_copy_constructible
| |   |-ClassTemplateDecl 0x7fd300841c78 <line:3742:1, line:3748:6> line:3742:50 is_nothrow_move_constructible
| |   | |-TemplateTypeParmDecl 0x7fd300841b30 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd300841be0 <col:22, line:3748:6> line:3742:50 struct is_nothrow_move_constructible definition
| |   |   |-public 'is_nothrow_constructible<_Tp, typename add_rvalue_reference<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fd300841ef0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd3008421d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3742:22, col:50> col:50 implicit struct is_nothrow_move_constructible
| |   |-ClassTemplateDecl 0x7fd300842498 <line:3759:1, col:47> col:47 __libcpp_is_nothrow_assignable
| |   | |-NonTypeTemplateParmDecl 0x7fd3008422a0 <col:11> col:15 '_Bool' depth 0 index 0
| |   | |-TemplateTypeParmDecl 0x7fd3008422f8 <col:17, col:23> col:23 class depth 0 index 1 _Tp
| |   | |-TemplateTypeParmDecl 0x7fd300842368 <col:28, col:34> col:34 class depth 0 index 2 _Arg
| |   | `-CXXRecordDecl 0x7fd300842400 <col:40, col:47> col:47 struct __libcpp_is_nothrow_assignable
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd300842a08 <line:3761:1, line:3765:1> line:3762:8 struct __libcpp_is_nothrow_assignable definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateTypeParmDecl 0x7fd300842738 <line:3761:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fd3008427a8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | `-CXXRecordDecl 0x7fd300842d30 <line:3762:1, col:8> col:8 implicit struct __libcpp_is_nothrow_assignable
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd3008430b8 <line:3767:1, line:3771:1> line:3768:8 struct __libcpp_is_nothrow_assignable definition
| |   | |-public 'integral_constant<_Bool, noexcept(std::__1::declval<_Tp>() = std::__1::declval<_Arg>())>'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateTypeParmDecl 0x7fd300842de8 <line:3767:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fd300842e58 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | `-CXXRecordDecl 0x7fd300843758 <line:3768:1, col:8> col:8 implicit struct __libcpp_is_nothrow_assignable
| |   |-ClassTemplateDecl 0x7fd300845a00 <line:3773:1, line:3777:1> line:3774:29 is_nothrow_assignable
| |   | |-TemplateTypeParmDecl 0x7fd300843810 <line:3773:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fd300843878 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | `-CXXRecordDecl 0x7fd300843938 <line:3774:1, line:3777:1> line:3774:29 struct is_nothrow_assignable definition
| |   |   |-public '__libcpp_is_nothrow_assignable<is_assignable<_Tp, _Arg>::value, _Tp, _Arg>'
| |   |   |-TypeVisibilityAttr 0x7fd300845ca0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd300846018 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3774:1, col:29> col:29 implicit struct is_nothrow_assignable
| |   |-ClassTemplateDecl 0x7fd300846218 <line:3830:1, line:3832:88> line:3830:50 is_nothrow_copy_assignable
| |   | |-TemplateTypeParmDecl 0x7fd3008460d0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd300846180 <col:22, line:3832:88> line:3830:50 struct is_nothrow_copy_assignable definition
| |   |   |-public 'is_nothrow_assignable<typename add_lvalue_reference<_Tp>::type, typename add_lvalue_reference<typename add_const<_Tp>::type>::type>'
| |   |   |-TypeVisibilityAttr 0x7fd300846490 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd300846968 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3830:22, col:50> col:50 implicit struct is_nothrow_copy_assignable
| |   |-ClassTemplateDecl 0x7fd300846b68 <line:3841:1, line:3848:6> line:3841:50 is_nothrow_move_assignable
| |   | |-TemplateTypeParmDecl 0x7fd300846a20 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd300846ad0 <col:22, line:3848:6> line:3841:50 struct is_nothrow_move_assignable definition
| |   |   |-public 'is_nothrow_assignable<typename add_lvalue_reference<_Tp>::type, typename add_rvalue_reference<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fd300846de0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd3008471a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3841:22, col:50> col:50 implicit struct is_nothrow_move_assignable
| |   |-ClassTemplateDecl 0x7fd3008473f0 <line:3859:1, col:35> col:35 __libcpp_is_nothrow_destructible
| |   | |-NonTypeTemplateParmDecl 0x7fd300847270 <col:11> col:15 '_Bool' depth 0 index 0
| |   | |-TemplateTypeParmDecl 0x7fd3008472c8 <col:17, col:23> col:23 class depth 0 index 1 _Tp
| |   | `-CXXRecordDecl 0x7fd300847358 <col:28, col:35> col:35 struct __libcpp_is_nothrow_destructible
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd300847830 <line:3861:1, line:3865:1> line:3862:8 struct __libcpp_is_nothrow_destructible definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fd300847648 <line:3861:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd300847b00 <line:3862:1, col:8> col:8 implicit struct __libcpp_is_nothrow_destructible
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd300847da0 <line:3867:1, line:3871:1> line:3868:8 struct __libcpp_is_nothrow_destructible definition
| |   | |-public 'integral_constant<_Bool, noexcept(std::__1::declval<_Tp>().~_Tp())>'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fd300847bb8 <line:3867:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd300848348 <line:3868:1, col:8> col:8 implicit struct __libcpp_is_nothrow_destructible
| |   |-ClassTemplateDecl 0x7fd300848548 <line:3873:1, line:3877:1> line:3874:29 is_nothrow_destructible
| |   | |-TemplateTypeParmDecl 0x7fd300848400 <line:3873:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd3008484b0 <line:3874:1, line:3877:1> line:3874:29 struct is_nothrow_destructible definition
| |   |   |-public '__libcpp_is_nothrow_destructible<is_destructible<_Tp>::value, _Tp>'
| |   |   |-TypeVisibilityAttr 0x7fd3008487c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd300848a78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3874:1, col:29> col:29 implicit struct is_nothrow_destructible
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd300848db8 <line:3879:1, line:3883:1> line:3880:29 struct is_nothrow_destructible definition
| |   | |-public 'is_nothrow_destructible<_Tp>'
| |   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
| |   | |-TemplateTypeParmDecl 0x7fd300848b30 <line:3879:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fd300848ba8 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Ns
| |   | |-TypeVisibilityAttr 0x7fd300848f08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fd3008490f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3880:1, col:29> col:29 implicit struct is_nothrow_destructible
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd300849378 <line:3885:1, line:3889:1> line:3886:29 struct is_nothrow_destructible definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateTypeParmDecl 0x7fd3008491b0 <line:3885:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fd3008494b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fd300849630 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3886:1, col:29> col:29 implicit struct is_nothrow_destructible
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd3008498b8 <line:3893:1, line:3897:1> line:3894:29 struct is_nothrow_destructible definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 &&'
| |   | |-TemplateTypeParmDecl 0x7fd3008496e8 <line:3893:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fd300849a00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fd300849b80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3894:1, col:29> col:29 implicit struct is_nothrow_destructible
| |   |-ClassTemplateDecl 0x7fd300849d88 <line:3925:1, line:3926:54> line:3925:50 is_pod
| |   | |-TemplateTypeParmDecl 0x7fd300849c38 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd300849cf0 <col:22, line:3926:54> line:3925:50 struct is_pod definition
| |   |   |-public 'integral_constant<_Bool, __is_pod(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fd30084a000 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd30084a1e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3925:22, col:50> col:50 implicit struct is_pod
| |   |-ClassTemplateDecl 0x7fd30084a3e8 <line:3945:1, line:3952:6> line:3945:50 is_literal_type
| |   | |-TemplateTypeParmDecl 0x7fd30084a2a0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd30084a350 <col:22, line:3952:6> line:3945:50 struct is_literal_type definition
| |   |   |-public 'integral_constant<_Bool, __is_literal(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fd30084a660 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd30084a848 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3945:22, col:50> col:50 implicit struct is_literal_type
| |   |-ClassTemplateDecl 0x7fd30084aa48 <line:3961:1, line:3967:6> line:3961:50 is_standard_layout
| |   | |-TemplateTypeParmDecl 0x7fd30084a900 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd30084a9b0 <col:22, line:3967:6> line:3961:50 struct is_standard_layout definition
| |   |   |-public 'integral_constant<_Bool, __is_standard_layout(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fd30084acc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd30084aea8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3961:22, col:50> col:50 implicit struct is_standard_layout
| |   |-ClassTemplateDecl 0x7fd30084b0a8 <line:3976:1, line:3984:6> line:3976:50 is_trivially_copyable
| |   | |-TemplateTypeParmDecl 0x7fd30084af60 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd30084b010 <col:22, line:3984:6> line:3976:50 struct is_trivially_copyable definition
| |   |   |-public 'integral_constant<_Bool, __is_trivially_copyable(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fd30084b320 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd30084b508 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3976:22, col:50> col:50 implicit struct is_trivially_copyable
| |   |-ClassTemplateDecl 0x7fd30084b708 <line:3993:1, line:4000:6> line:3993:50 is_trivial
| |   | |-TemplateTypeParmDecl 0x7fd30084b5c0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd30084b670 <col:22, line:4000:6> line:3993:50 struct is_trivial definition
| |   |   |-public 'integral_constant<_Bool, __is_trivial(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fd30084b980 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fd30084db78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3993:22, col:50> col:50 implicit struct is_trivial
| |   |-ClassTemplateDecl 0x7fd30084dd48 <line:4007:1, col:78> col:29 __is_reference_wrapper_impl
| |   | |-TemplateTypeParmDecl 0x7fd30084dc30 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd30084dcb0 <col:22, col:78> col:29 struct __is_reference_wrapper_impl definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   `-CXXRecordDecl 0x7fd30084e000 <col:22, col:29> col:29 implicit struct __is_reference_wrapper_impl
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd30084e2d8 <line:4008:1, col:102> col:29 struct __is_reference_wrapper_impl definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'reference_wrapper<type-parameter-0-0>'
| |   | |-TemplateTypeParmDecl 0x7fd30084e0b8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd30084e580 <col:22, col:29> col:29 implicit struct __is_reference_wrapper_impl
| |   |-ClassTemplateDecl 0x7fd30084e758 <line:4009:1, line:4010:74> line:4009:29 __is_reference_wrapper
| |   | |-TemplateTypeParmDecl 0x7fd30084e638 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd30084e6c0 <col:22, line:4010:74> line:4009:29 struct __is_reference_wrapper definition
| |   |   |-public '__is_reference_wrapper_impl<typename remove_cv<_Tp>::type>'
| |   |   `-CXXRecordDecl 0x7fd30084ebe8 <col:22, col:29> col:29 implicit struct __is_reference_wrapper
| |   |-ClassTemplateDecl 0x7fd30084edb8 <line:4016:1, col:32> col:32 __check_complete
| |   | |-TemplateTypeParmDecl 0x7fd30084eca0 <col:11, col:20> col:20 class depth 0 index 0 ... _Tp
| |   | |-CXXRecordDecl 0x7fd30084ed20 <col:25, col:32> col:32 struct __check_complete
| |   | `-ClassTemplateSpecialization 0x7fd30084f038 '__check_complete'
| |   |-ClassTemplateSpecializationDecl 0x7fd30084f038 <line:4018:1, line:4021:1> line:4019:8 struct __check_complete definition
| |   | |-TemplateArgument pack
| |   | `-CXXRecordDecl 0x7fd30084f230 <col:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd30084f698 <line:4023:1, line:4028:1> line:4024:8 struct __check_complete definition
| |   | |-private '__check_complete<_Hp>'
| |   | |-private '__check_complete<_T0, _Tp...>'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | |-TemplateArgument type 'type-parameter-0-1'
| |   | | `-TemplateArgument type 'type-parameter-0-2...'
| |   | |-TemplateTypeParmDecl 0x7fd30084f2e8 <line:4023:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-TemplateTypeParmDecl 0x7fd30084f358 <col:22, col:28> col:28 referenced class depth 0 index 1 _T0
| |   | |-TemplateTypeParmDecl 0x7fd30084f3c8 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Tp
| |   | `-CXXRecordDecl 0x7fd30084fce0 <line:4024:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd30084ffa8 <line:4030:1, line:4034:1> line:4031:8 struct __check_complete definition
| |   | |-private '__check_complete<_Hp>'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | `-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fd30084fd98 <line:4030:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | `-CXXRecordDecl 0x7fd300850368 <line:4031:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd300850568 <line:4036:1, line:4040:1> line:4037:8 struct __check_complete definition
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fd300850420 <line:4036:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fd3008507d0 <line:4037:1, col:8> col:8 implicit struct __check_complete
| |   | `-StaticAssertDecl 0x7fd3008509b8 <line:4039:5, col:60> col:5
| |   |   |-BinaryOperator 0x7fd3008508d0 <col:19, col:33> '_Bool' '>'
| |   |   | |-UnaryExprOrTypeTraitExpr 0x7fd300850878 <col:19, col:29> 'unsigned long' sizeof '_Tp'
| |   |   | `-ImplicitCastExpr 0x7fd3008508b8 <col:33> 'unsigned long' <IntegralCast>
| |   |   |   `-IntegerLiteral 0x7fd300850898 <col:33> 'int' 0
| |   |   `-StringLiteral 0x7fd300850978 <col:36> 'const char [23]' lvalue "Type must be complete."
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd300850bd8 <line:4042:1, line:4046:1> line:4043:8 struct __check_complete definition
| |   | |-private '__check_complete<_Tp>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateTypeParmDecl 0x7fd300850a10 <line:4042:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd300850f28 <line:4043:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd3008511a8 <line:4048:1, line:4052:1> line:4049:8 struct __check_complete definition
| |   | |-private '__check_complete<_Tp>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 &&'
| |   | |-TemplateTypeParmDecl 0x7fd300850fe0 <line:4048:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd3008514f8 <line:4049:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd300851a00 <line:4054:1, line:4058:1> line:4055:8 struct __check_complete definition
| |   | |-private '__check_complete<_Rp>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (*)(type-parameter-0-1...)'
| |   | |-TemplateTypeParmDecl 0x7fd3008515b0 <line:4054:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fd300851618 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Param
| |   | `-CXXRecordDecl 0x7fd300851d68 <line:4055:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd300852188 <line:4060:1, line:4063:1> line:4061:8 struct __check_complete definition
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'void (*)(type-parameter-0-0...)'
| |   | |-TemplateTypeParmDecl 0x7fd300851e20 <line:4060:11, col:20> col:20 referenced class depth 0 index 0 ... _Param
| |   | `-CXXRecordDecl 0x7fd300852410 <line:4061:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd3008527d8 <line:4065:1, line:4069:1> line:4066:8 struct __check_complete definition
| |   | |-private '__check_complete<_Rp>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1...)'
| |   | |-TemplateTypeParmDecl 0x7fd3008524c8 <line:4065:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fd300852538 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Param
| |   | `-CXXRecordDecl 0x7fd300852b38 <line:4066:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd300852e78 <line:4071:1, line:4074:1> line:4072:8 struct __check_complete definition
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'void (type-parameter-0-0...)'
| |   | |-TemplateTypeParmDecl 0x7fd300852bf0 <line:4071:11, col:20> col:20 referenced class depth 0 index 0 ... _Param
| |   | `-CXXRecordDecl 0x7fd3008530f0 <line:4072:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd3008535f8 <line:4076:1, line:4080:1> line:4077:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...)'
| |   | |-TemplateTypeParmDecl 0x7fd3008531a8 <line:4076:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fd300853218 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fd300853288 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fd300853a00 <line:4077:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd300853f08 <line:4082:1, line:4086:1> line:4083:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const'
| |   | |-TemplateTypeParmDecl 0x7fd300853ab8 <line:4082:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fd300853b28 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fd300853b98 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fd300854278 <line:4083:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd300854778 <line:4088:1, line:4092:1> line:4089:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) volatile'
| |   | |-TemplateTypeParmDecl 0x7fd300854330 <line:4088:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fd300854398 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fd300854408 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fd300854ae8 <line:4089:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd300854fe8 <line:4094:1, line:4098:1> line:4095:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const volatile'
| |   | |-TemplateTypeParmDecl 0x7fd300854ba0 <line:4094:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fd300854c08 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fd300854c78 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fd300855358 <line:4095:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd300855858 <line:4100:1, line:4104:1> line:4101:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) &'
| |   | |-TemplateTypeParmDecl 0x7fd300855410 <line:4100:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fd300855478 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fd3008554e8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fd300855bd8 <line:4101:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd3008560d8 <line:4106:1, line:4110:1> line:4107:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const &'
| |   | |-TemplateTypeParmDecl 0x7fd300855c90 <line:4106:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fd300855cf8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fd300855d68 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fd300856448 <line:4107:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd300856948 <line:4112:1, line:4116:1> line:4113:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) volatile &'
| |   | |-TemplateTypeParmDecl 0x7fd300856500 <line:4112:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fd300856568 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fd3008565d8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fd300856cb8 <line:4113:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd3008571b8 <line:4118:1, line:4122:1> line:4119:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const volatile &'
| |   | |-TemplateTypeParmDecl 0x7fd300856d70 <line:4118:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fd300856dd8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fd300856e48 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fd300857528 <line:4119:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd300857a40 <line:4124:1, line:4128:1> line:4125:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) &&'
| |   | |-TemplateTypeParmDecl 0x7fd3008575e0 <line:4124:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fd300857648 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fd3008576b8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fd300857da8 <line:4125:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd3008582a8 <line:4130:1, line:4134:1> line:4131:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const &&'
| |   | |-TemplateTypeParmDecl 0x7fd300857e60 <line:4130:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fd300857ec8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fd300857f38 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fd300858618 <line:4131:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd300858b18 <line:4136:1, line:4140:1> line:4137:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) volatile &&'
| |   | |-TemplateTypeParmDecl 0x7fd3008586d0 <line:4136:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fd300858738 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fd3008587a8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fd300858e88 <line:4137:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd300859388 <line:4142:1, line:4146:1> line:4143:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const volatile &&'
| |   | |-TemplateTypeParmDecl 0x7fd300858f40 <line:4142:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fd300858fa8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fd300859018 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fd3008596f8 <line:4143:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd300859a88 <line:4148:1, line:4152:1> line:4149:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 type-parameter-0-1::*'
| |   | |-TemplateTypeParmDecl 0x7fd3008597b0 <line:4148:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fd300859818 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | `-CXXRecordDecl 0x7fd300859de8 <line:4149:1, col:8> col:8 implicit struct __check_complete
| |   |-TypeAliasTemplateDecl 0x7fd30085aaa0 <line:4155:1, line:4163:8> line:4159:1 __enable_if_bullet1
| |   | |-TemplateTypeParmDecl 0x7fd300859ea0 <line:4155:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fd300859f08 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fd30085a0a0 <line:4156:10, col:48> col:16 referenced class depth 0 index 2 _DecayFp
| |   | | `-TemplateArgument type 'typename decay<_Fp>::type'
| |   | |-TemplateTypeParmDecl 0x7fd30085a230 <line:4157:10, col:48> col:16 referenced class depth 0 index 3 _DecayA0
| |   | | `-TemplateArgument type 'typename decay<_A0>::type'
| |   | |-TemplateTypeParmDecl 0x7fd30085a450 <line:4158:10, col:74> col:16 referenced class depth 0 index 4 _ClassT
| |   | | `-TemplateArgument type 'typename __member_pointer_class_type<_DecayFp>::type'
| |   | `-TypeAliasDecl 0x7fd30085aa40 <line:4159:1, line:4163:8> line:4159:7 __enable_if_bullet1 'typename enable_if<is_member_function_pointer<_DecayFp>::value && is_base_of<_ClassT, _DecayA0>::value>::type'
| |   |   `-DependentNameType 0x7fd30085a9d0 'typename enable_if<is_member_function_pointer<_DecayFp>::value && is_base_of<_ClassT, _DecayA0>::value>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fd30085b3f0 <line:4165:1, line:4172:8> line:4168:1 __enable_if_bullet2
| |   | |-TemplateTypeParmDecl 0x7fd30085aaf0 <line:4165:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fd30085ab58 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fd30085acf0 <line:4166:10, col:48> col:16 referenced class depth 0 index 2 _DecayFp
| |   | | `-TemplateArgument type 'typename decay<_Fp>::type'
| |   | |-TemplateTypeParmDecl 0x7fd30085ae80 <line:4167:10, col:48> col:16 referenced class depth 0 index 3 _DecayA0
| |   | | `-TemplateArgument type 'typename decay<_A0>::type'
| |   | `-TypeAliasDecl 0x7fd30085b390 <line:4168:1, line:4172:8> line:4168:7 __enable_if_bullet2 'typename enable_if<is_member_function_pointer<_DecayFp>::value && __is_reference_wrapper<_DecayA0>::value>::type'
| |   |   `-DependentNameType 0x7fd30085b320 'typename enable_if<is_member_function_pointer<_DecayFp>::value && __is_reference_wrapper<_DecayA0>::value>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fd30085d210 <line:4174:1, line:4183:8> line:4178:1 __enable_if_bullet3
| |   | |-TemplateTypeParmDecl 0x7fd30085b440 <line:4174:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fd30085b4a8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fd30085b640 <line:4175:10, col:48> col:16 referenced class depth 0 index 2 _DecayFp
| |   | | `-TemplateArgument type 'typename decay<_Fp>::type'
| |   | |-TemplateTypeParmDecl 0x7fd30085b7d0 <line:4176:10, col:48> col:16 referenced class depth 0 index 3 _DecayA0
| |   | | `-TemplateArgument type 'typename decay<_A0>::type'
| |   | |-TemplateTypeParmDecl 0x7fd30085b960 <line:4177:10, col:74> col:16 referenced class depth 0 index 4 _ClassT
| |   | | `-TemplateArgument type 'typename __member_pointer_class_type<_DecayFp>::type'
| |   | `-TypeAliasDecl 0x7fd30085d1b0 <line:4178:1, line:4183:8> line:4178:7 __enable_if_bullet3 'typename enable_if<is_member_function_pointer<_DecayFp>::value && !is_base_of<_ClassT, _DecayA0>::value && !__is_reference_wrapper<_DecayA0>::value>::type'
| |   |   `-DependentNameType 0x7fd30085d140 'typename enable_if<is_member_function_pointer<_DecayFp>::value && !is_base_of<_ClassT, _DecayA0>::value && !__is_reference_wrapper<_DecayA0>::value>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fd30085dd30 <line:4185:1, line:4193:8> line:4189:1 __enable_if_bullet4
| |   | |-TemplateTypeParmDecl 0x7fd30085d260 <line:4185:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fd30085d2c8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fd30085d460 <line:4186:10, col:48> col:16 referenced class depth 0 index 2 _DecayFp
| |   | | `-TemplateArgument type 'typename decay<_Fp>::type'
| |   | |-TemplateTypeParmDecl 0x7fd30085d5f0 <line:4187:10, col:48> col:16 referenced class depth 0 index 3 _DecayA0
| |   | | `-TemplateArgument type 'typename decay<_A0>::type'
| |   | |-TemplateTypeParmDecl 0x7fd30085d780 <line:4188:10, col:74> col:16 referenced class depth 0 index 4 _ClassT
| |   | | `-TemplateArgument type 'typename __member_pointer_class_type<_DecayFp>::type'
| |   | `-TypeAliasDecl 0x7fd30085dcd0 <line:4189:1, line:4193:8> line:4189:7 __enable_if_bullet4 'typename enable_if<is_member_object_pointer<_DecayFp>::value && is_base_of<_ClassT, _DecayA0>::value>::type'
| |   |   `-DependentNameType 0x7fd30085dc60 'typename enable_if<is_member_object_pointer<_DecayFp>::value && is_base_of<_ClassT, _DecayA0>::value>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fd30085e610 <line:4195:1, line:4202:8> line:4198:1 __enable_if_bullet5
| |   | |-TemplateTypeParmDecl 0x7fd30085dd80 <line:4195:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fd30085dde8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fd30085df80 <line:4196:10, col:48> col:16 referenced class depth 0 index 2 _DecayFp
| |   | | `-TemplateArgument type 'typename decay<_Fp>::type'
| |   | |-TemplateTypeParmDecl 0x7fd30085e110 <line:4197:10, col:48> col:16 referenced class depth 0 index 3 _DecayA0
| |   | | `-TemplateArgument type 'typename decay<_A0>::type'
| |   | `-TypeAliasDecl 0x7fd30085e5b0 <line:4198:1, line:4202:8> line:4198:7 __enable_if_bullet5 'typename enable_if<is_member_object_pointer<_DecayFp>::value && __is_reference_wrapper<_DecayA0>::value>::type'
| |   |   `-DependentNameType 0x7fd30085e540 'typename enable_if<is_member_object_pointer<_DecayFp>::value && __is_reference_wrapper<_DecayA0>::value>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fd300860250 <line:4204:1, line:4213:8> line:4208:1 __enable_if_bullet6
| |   | |-TemplateTypeParmDecl 0x7fd30085e660 <line:4204:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fd30085e6c8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fd30085e860 <line:4205:10, col:48> col:16 referenced class depth 0 index 2 _DecayFp
| |   | | `-TemplateArgument type 'typename decay<_Fp>::type'
| |   | |-TemplateTypeParmDecl 0x7fd30085e9f0 <line:4206:10, col:48> col:16 referenced class depth 0 index 3 _DecayA0
| |   | | `-TemplateArgument type 'typename decay<_A0>::type'
| |   | |-TemplateTypeParmDecl 0x7fd30085eb80 <line:4207:10, col:74> col:16 referenced class depth 0 index 4 _ClassT
| |   | | `-TemplateArgument type 'typename __member_pointer_class_type<_DecayFp>::type'
| |   | `-TypeAliasDecl 0x7fd3008601f0 <line:4208:1, line:4213:8> line:4208:7 __enable_if_bullet6 'typename enable_if<is_member_object_pointer<_DecayFp>::value && !is_base_of<_ClassT, _DecayA0>::value && !__is_reference_wrapper<_DecayA0>::value>::type'
| |   |   `-DependentNameType 0x7fd300860180 'typename enable_if<is_member_object_pointer<_DecayFp>::value && !is_base_of<_ClassT, _DecayA0>::value && !__is_reference_wrapper<_DecayA0>::value>::type' dependent
| |   |-FunctionTemplateDecl 0x7fd300860648 <line:4223:1, line:4224:44> col:6 __invoke
| |   | |-TemplateTypeParmDecl 0x7fd3008602a0 <line:4223:11, col:20> col:20 referenced class depth 0 index 0 ... _Args
| |   | `-FunctionDecl 0x7fd3008605b0 <line:4224:1, col:44> col:6 __invoke 'auto (struct std::__1::__any, _Args &&...) -> struct std::__1::__nat'
| |   |   |-ParmVarDecl 0x7fd300860330 <col:15> col:20 'struct std::__1::__any'
| |   |   `-ParmVarDecl 0x7fd300860468 <col:22, col:33> col:33 __args '_Args &&...'
| |   |-FunctionTemplateDecl 0x7fd300860998 <line:4226:1, line:4227:54> col:6 __invoke_constexpr
| |   | |-TemplateTypeParmDecl 0x7fd3008606a8 <line:4226:11, col:20> col:20 referenced class depth 0 index 0 ... _Args
| |   | `-FunctionDecl 0x7fd300860900 <line:4227:1, col:54> col:6 __invoke_constexpr 'auto (struct std::__1::__any, _Args &&...) -> struct std::__1::__nat'
| |   |   |-ParmVarDecl 0x7fd300860740 <col:25> col:30 'struct std::__1::__any'
| |   |   `-ParmVarDecl 0x7fd300860818 <col:32, col:43> col:43 __args '_Args &&...'
| |   |-FunctionTemplateDecl 0x7fd3008642e8 <line:4231:1, line:4221:27> line:4235:1 __invoke
| |   | |-TemplateTypeParmDecl 0x7fd3008609f8 <line:4231:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fd300860a68 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fd300860ad8 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Args
| |   | |-TemplateTypeParmDecl 0x7fd300861628 <line:4232:11, col:47> col:11 class depth 0 index 3
| |   | | `-TemplateArgument type '__enable_if_bullet1<_Fp, _A0>':'typename enable_if<is_member_function_pointer<typename decay<type-parameter-0-0>::type>::value && is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fd300864250 <line:4233:1, line:4221:27> line:4235:1 __invoke 'auto (_Fp &&, _A0 &&, _Args &&...) noexcept(noexcept((std::__1::forward<_A0>(__a0) .* __f)(std::__1::forward<_Args>(__args)...))) -> decltype((std::__1::forward<_A0>(__a0) .* __f)(std::__1::forward<_Args>(__args)...))' inline
| |   |   |-ParmVarDecl 0x7fd300861738 <col:10, col:16> col:16 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fd3008617d8 <col:21, col:27> col:27 referenced __a0 '_A0 &&'
| |   |   |-ParmVarDecl 0x7fd300861918 <col:33, col:44> col:44 referenced __args '_Args &&...'
| |   |   |-CompoundStmt 0x7fd300864738 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fd300864720 <col:7, line:4236:88>
| |   |   |   `-CallExpr 0x7fd3008646f0 <col:23, col:88> '<dependent type>'
| |   |   |     |-ParenExpr 0x7fd300864560 <col:23, col:54> '<dependent type>'
| |   |   |     | `-BinaryOperator 0x7fd300864538 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4236:51> '<dependent type>' '.*'
| |   |   |     |   |-CallExpr 0x7fd3008644e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4236:48> '<dependent type>'
| |   |   |     |   | |-UnresolvedLookupExpr 0x7fd300864418 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4236:42> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fd3018b7d80 0x7fd3018b82a0
| |   |   |     |   | `-DeclRefExpr 0x7fd3008644b8 <col:44> '_A0' lvalue ParmVar 0x7fd3008617d8 '__a0' '_A0 &&'
| |   |   |     |   `-DeclRefExpr 0x7fd300864510 <col:51> '_Fp' lvalue ParmVar 0x7fd300861738 '__f' '_Fp &&'
| |   |   |     `-PackExpansionExpr 0x7fd3008646d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4236:85> '<dependent type>'
| |   |   |       `-CallExpr 0x7fd3008646a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4236:84> '<dependent type>'
| |   |   |         |-UnresolvedLookupExpr 0x7fd3008645d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4236:76> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fd3018b7d80 0x7fd3018b82a0
| |   |   |         `-DeclRefExpr 0x7fd300864678 <col:78> '_Args &&...' lvalue ParmVar 0x7fd300861918 '__args' '_Args &&...'
| |   |   |-AlwaysInlineAttr 0x7fd300864350 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fd300864398 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fd300865c00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4238:1, line:4221:27> line:4242:1 __invoke_constexpr
| |   | |-TemplateTypeParmDecl 0x7fd300864758 <line:4238:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fd3008647c8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fd300864838 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Args
| |   | |-TemplateTypeParmDecl 0x7fd300865068 <line:4239:11, col:47> col:11 class depth 0 index 3
| |   | | `-TemplateArgument type '__enable_if_bullet1<_Fp, _A0>':'typename enable_if<is_member_function_pointer<typename decay<type-parameter-0-0>::type>::value && is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fd300865b40 <line:4240:1, line:4221:27> line:4242:1 constexpr __invoke_constexpr 'auto (_Fp &&, _A0 &&, _Args &&...) noexcept(noexcept((std::__1::forward<_A0>(__a0) .* __f)(std::__1::forward<_Args>(__args)...))) -> decltype((std::__1::forward<_A0>(__a0) .* __f)(std::__1::forward<_Args>(__args)...))' inline
| |   |   |-ParmVarDecl 0x7fd300865178 <col:20, col:26> col:26 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fd300865218 <col:31, col:37> col:37 referenced __a0 '_A0 &&'
| |   |   |-ParmVarDecl 0x7fd3008652f8 <col:43, col:54> col:54 referenced __args '_Args &&...'
| |   |   |-CompoundStmt 0x7fd300866050 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fd300866038 <col:7, line:4243:88>
| |   |   |   `-CallExpr 0x7fd300866008 <col:23, col:88> '<dependent type>'
| |   |   |     |-ParenExpr 0x7fd300865e78 <col:23, col:54> '<dependent type>'
| |   |   |     | `-BinaryOperator 0x7fd300865e50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4243:51> '<dependent type>' '.*'
| |   |   |     |   |-CallExpr 0x7fd300865df8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4243:48> '<dependent type>'
| |   |   |     |   | |-UnresolvedLookupExpr 0x7fd300865d30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4243:42> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fd3018b7d80 0x7fd3018b82a0
| |   |   |     |   | `-DeclRefExpr 0x7fd300865dd0 <col:44> '_A0' lvalue ParmVar 0x7fd300865218 '__a0' '_A0 &&'
| |   |   |     |   `-DeclRefExpr 0x7fd300865e28 <col:51> '_Fp' lvalue ParmVar 0x7fd300865178 '__f' '_Fp &&'
| |   |   |     `-PackExpansionExpr 0x7fd300865fe8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4243:85> '<dependent type>'
| |   |   |       `-CallExpr 0x7fd300865fb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4243:84> '<dependent type>'
| |   |   |         |-UnresolvedLookupExpr 0x7fd300865ef0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4243:76> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fd3018b7d80 0x7fd3018b82a0
| |   |   |         `-DeclRefExpr 0x7fd300865f90 <col:78> '_Args &&...' lvalue ParmVar 0x7fd3008652f8 '__args' '_Args &&...'
| |   |   |-AlwaysInlineAttr 0x7fd300865c68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fd300865cb0 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fd300867488 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4245:1, line:4221:27> line:4249:1 __invoke
| |   | |-TemplateTypeParmDecl 0x7fd300866070 <line:4245:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fd3008660d8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fd300866148 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Args
| |   | |-TemplateTypeParmDecl 0x7fd300866a08 <line:4246:11, col:47> col:11 class depth 0 index 3
| |   | | `-TemplateArgument type '__enable_if_bullet2<_Fp, _A0>':'typename enable_if<is_member_function_pointer<typename decay<type-parameter-0-0>::type>::value && __is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fd3008673f0 <line:4247:1, line:4221:27> line:4249:1 __invoke 'auto (_Fp &&, _A0 &&, _Args &&...) noexcept(noexcept((__a0.get() .* __f)(std::__1::forward<_Args>(__args)...))) -> decltype((__a0.get() .* __f)(std::__1::forward<_Args>(__args)...))' inline
| |   |   |-ParmVarDecl 0x7fd300866b18 <col:10, col:16> col:16 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fd300866bb8 <col:21, col:27> col:27 referenced __a0 '_A0 &&'
| |   |   |-ParmVarDecl 0x7fd300866c98 <col:33, col:44> col:44 referenced __args '_Args &&...'
| |   |   |-CompoundStmt 0x7fd300867818 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fd300867800 <col:7, line:4250:73>
| |   |   |   `-CallExpr 0x7fd3008677d0 <col:23, col:73> '<dependent type>'
| |   |   |     |-ParenExpr 0x7fd300867640 <col:23, col:39> '<dependent type>'
| |   |   |     | `-BinaryOperator 0x7fd300867618 <col:24, col:36> '<dependent type>' '.*'
| |   |   |     |   |-CallExpr 0x7fd3008675c8 <col:24, col:33> '<dependent type>'
| |   |   |     |   | `-CXXDependentScopeMemberExpr 0x7fd300867570 <col:24, col:29> '<dependent type>' lvalue .get
| |   |   |     |   |   `-DeclRefExpr 0x7fd300867548 <col:24> '_A0' lvalue ParmVar 0x7fd300866bb8 '__a0' '_A0 &&'
| |   |   |     |   `-DeclRefExpr 0x7fd3008675f0 <col:36> '_Fp' lvalue ParmVar 0x7fd300866b18 '__f' '_Fp &&'
| |   |   |     `-PackExpansionExpr 0x7fd3008677b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4250:70> '<dependent type>'
| |   |   |       `-CallExpr 0x7fd300867780 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4250:69> '<dependent type>'
| |   |   |         |-UnresolvedLookupExpr 0x7fd3008676b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4250:61> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fd3018b7d80 0x7fd3018b82a0
| |   |   |         `-DeclRefExpr 0x7fd300867758 <col:63> '_Args &&...' lvalue ParmVar 0x7fd300866c98 '__args' '_Args &&...'
| |   |   |-AlwaysInlineAttr 0x7fd3008674f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fd300867538 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fd3008693f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4252:1, line:4221:27> line:4256:1 __invoke_constexpr
| |   | |-TemplateTypeParmDecl 0x7fd300867838 <line:4252:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fd3008678a8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fd300867918 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Args
| |   | |-TemplateTypeParmDecl 0x7fd300868a08 <line:4253:11, col:47> col:11 class depth 0 index 3
| |   | | `-TemplateArgument type '__enable_if_bullet2<_Fp, _A0>':'typename enable_if<is_member_function_pointer<typename decay<type-parameter-0-0>::type>::value && __is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fd300869360 <line:4254:1, line:4221:27> line:4256:1 constexpr __invoke_constexpr 'auto (_Fp &&, _A0 &&, _Args &&...) noexcept(noexcept((__a0.get() .* __f)(std::__1::forward<_Args>(__args)...))) -> decltype((__a0.get() .* __f)(std::__1::forward<_Args>(__args)...))' inline
| |   |   |-ParmVarDecl 0x7fd300868b18 <col:20, col:26> col:26 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fd300868bb8 <col:31, col:37> col:37 referenced __a0 '_A0 &&'
| |   |   |-ParmVarDecl 0x7fd300868c98 <col:43, col:54> col:54 referenced __args '_Args &&...'
| |   |   |-CompoundStmt 0x7fd300869788 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fd300869770 <col:7, line:4257:73>
| |   |   |   `-CallExpr 0x7fd300869740 <col:23, col:73> '<dependent type>'
| |   |   |     |-ParenExpr 0x7fd3008695b0 <col:23, col:39> '<dependent type>'
| |   |   |     | `-BinaryOperator 0x7fd300869588 <col:24, col:36> '<dependent type>' '.*'
| |   |   |     |   |-CallExpr 0x7fd300869538 <col:24, col:33> '<dependent type>'
| |   |   |     |   | `-CXXDependentScopeMemberExpr 0x7fd3008694e0 <col:24, col:29> '<dependent type>' lvalue .get
| |   |   |     |   |   `-DeclRefExpr 0x7fd3008694b8 <col:24> '_A0' lvalue ParmVar 0x7fd300868bb8 '__a0' '_A0 &&'
| |   |   |     |   `-DeclRefExpr 0x7fd300869560 <col:36> '_Fp' lvalue ParmVar 0x7fd300868b18 '__f' '_Fp &&'
| |   |   |     `-PackExpansionExpr 0x7fd300869720 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4257:70> '<dependent type>'
| |   |   |       `-CallExpr 0x7fd3008696f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4257:69> '<dependent type>'
| |   |   |         |-UnresolvedLookupExpr 0x7fd300869628 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4257:61> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fd3018b7d80 0x7fd3018b82a0
| |   |   |         `-DeclRefExpr 0x7fd3008696c8 <col:63> '_Args &&...' lvalue ParmVar 0x7fd300868c98 '__args' '_Args &&...'
| |   |   |-AlwaysInlineAttr 0x7fd300869460 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fd3008694a8 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fd30086b008 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4259:1, line:4221:27> line:4263:1 __invoke
| |   | |-TemplateTypeParmDecl 0x7fd3008697a8 <line:4259:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fd300869818 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fd300869888 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Args
| |   | |-TemplateTypeParmDecl 0x7fd30086a3b8 <line:4260:11, col:47> col:11 class depth 0 index 3
| |   | | `-TemplateArgument type '__enable_if_bullet3<_Fp, _A0>':'typename enable_if<is_member_function_pointer<typename decay<type-parameter-0-0>::type>::value && !is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value && !__is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fd30086af70 <line:4261:1, line:4221:27> line:4263:1 __invoke 'auto (_Fp &&, _A0 &&, _Args &&...) noexcept(noexcept(((*std::__1::forward<_A0>(__a0)) .* __f)(std::__1::forward<_Args>(__args)...))) -> decltype(((*std::__1::forward<_A0>(__a0)) .* __f)(std::__1::forward<_Args>(__args)...))' inline
| |   |   |-ParmVarDecl 0x7fd30086a4c8 <col:10, col:16> col:16 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fd30086a568 <col:21, col:27> col:27 referenced __a0 '_A0 &&'
| |   |   |-ParmVarDecl 0x7fd30086a648 <col:33, col:44> col:44 referenced __args '_Args &&...'
| |   |   |-CompoundStmt 0x7fd30086b480 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fd30086b468 <col:7, line:4264:91>
| |   |   |   `-CallExpr 0x7fd30086b438 <col:23, col:91> '<dependent type>'
| |   |   |     |-ParenExpr 0x7fd30086b2a8 <col:23, col:57> '<dependent type>'
| |   |   |     | `-BinaryOperator 0x7fd30086b280 <col:24, col:54> '<dependent type>' '.*'
| |   |   |     |   |-ParenExpr 0x7fd30086b238 <col:24, col:51> '<dependent type>'
| |   |   |     |   | `-UnaryOperator 0x7fd30086b218 <col:25, col:50> '<dependent type>' prefix '*'
| |   |   |     |   |   `-CallExpr 0x7fd30086b1e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4264:50> '<dependent type>'
| |   |   |     |   |     |-UnresolvedLookupExpr 0x7fd30086b120 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4264:44> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fd3018b7d80 0x7fd3018b82a0
| |   |   |     |   |     `-DeclRefExpr 0x7fd30086b1c0 <col:46> '_A0' lvalue ParmVar 0x7fd30086a568 '__a0' '_A0 &&'
| |   |   |     |   `-DeclRefExpr 0x7fd30086b258 <col:54> '_Fp' lvalue ParmVar 0x7fd30086a4c8 '__f' '_Fp &&'
| |   |   |     `-PackExpansionExpr 0x7fd30086b418 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4264:88> '<dependent type>'
| |   |   |       `-CallExpr 0x7fd30086b3e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4264:87> '<dependent type>'
| |   |   |         |-UnresolvedLookupExpr 0x7fd30086b320 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4264:79> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fd3018b7d80 0x7fd3018b82a0
| |   |   |         `-DeclRefExpr 0x7fd30086b3c0 <col:81> '_Args &&...' lvalue ParmVar 0x7fd30086a648 '__args' '_Args &&...'
| |   |   |-AlwaysInlineAttr 0x7fd30086b070 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fd30086b0b8 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fd30086cac8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4266:1, line:4221:27> line:4270:1 __invoke_constexpr
| |   | |-TemplateTypeParmDecl 0x7fd30086b4a0 <line:4266:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fd30086b508 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fd30086b578 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Args
| |   | |-TemplateTypeParmDecl 0x7fd30086bf08 <line:4267:11, col:47> col:11 class depth 0 index 3
| |   | | `-TemplateArgument type '__enable_if_bullet3<_Fp, _A0>':'typename enable_if<is_member_function_pointer<typename decay<type-parameter-0-0>::type>::value && !is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value && !__is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fd30086ca30 <line:4268:1, line:4221:27> line:4270:1 constexpr __invoke_constexpr 'auto (_Fp &&, _A0 &&, _Args &&...) noexcept(noexcept(((*std::__1::forward<_A0>(__a0)) .* __f)(std::__1::forward<_Args>(__args)...))) -> decltype(((*std::__1::forward<_A0>(__a0)) .* __f)(std::__1::forward<_Args>(__args)...))' inline
| |   |   |-ParmVarDecl 0x7fd30086c018 <col:20, col:26> col:26 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fd30086c0b8 <col:31, col:37> col:37 referenced __a0 '_A0 &&'
| |   |   |-ParmVarDecl 0x7fd30086c198 <col:43, col:54> col:54 referenced __args '_Args &&...'
| |   |   |-CompoundStmt 0x7fd30086cf40 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fd30086cf28 <col:7, line:4271:91>
| |   |   |   `-CallExpr 0x7fd30086cef8 <col:23, col:91> '<dependent type>'
| |   |   |     |-ParenExpr 0x7fd30086cd68 <col:23, col:57> '<dependent type>'
| |   |   |     | `-BinaryOperator 0x7fd30086cd40 <col:24, col:54> '<dependent type>' '.*'
| |   |   |     |   |-ParenExpr 0x7fd30086ccf8 <col:24, col:51> '<dependent type>'
| |   |   |     |   | `-UnaryOperator 0x7fd30086ccd8 <col:25, col:50> '<dependent type>' prefix '*'
| |   |   |     |   |   `-CallExpr 0x7fd30086cca8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4271:50> '<dependent type>'
| |   |   |     |   |     |-UnresolvedLookupExpr 0x7fd30086cbe0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4271:44> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fd3018b7d80 0x7fd3018b82a0
| |   |   |     |   |     `-DeclRefExpr 0x7fd30086cc80 <col:46> '_A0' lvalue ParmVar 0x7fd30086c0b8 '__a0' '_A0 &&'
| |   |   |     |   `-DeclRefExpr 0x7fd30086cd18 <col:54> '_Fp' lvalue ParmVar 0x7fd30086c018 '__f' '_Fp &&'
| |   |   |     `-PackExpansionExpr 0x7fd30086ced8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4271:88> '<dependent type>'
| |   |   |       `-CallExpr 0x7fd30086cea8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4271:87> '<dependent type>'
| |   |   |         |-UnresolvedLookupExpr 0x7fd30086cde0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4271:79> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fd3018b7d80 0x7fd3018b82a0
| |   |   |         `-DeclRefExpr 0x7fd30086ce80 <col:81> '_Args &&...' lvalue ParmVar 0x7fd30086c198 '__args' '_Args &&...'
| |   |   |-AlwaysInlineAttr 0x7fd30086cb30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fd30086cb78 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fd30086e138 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4275:1, line:4221:27> line:4279:1 __invoke
| |   | |-TemplateTypeParmDecl 0x7fd30086cf60 <line:4275:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fd30086cfc8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fd30086d9f8 <line:4276:11, col:47> col:11 class depth 0 index 2
| |   | | `-TemplateArgument type '__enable_if_bullet4<_Fp, _A0>':'typename enable_if<is_member_object_pointer<typename decay<type-parameter-0-0>::type>::value && is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fd30086e0a0 <line:4277:1, line:4221:27> line:4279:1 __invoke 'auto (_Fp &&, _A0 &&) noexcept(noexcept(std::__1::forward<_A0>(__a0) .* __f)) -> decltype(std::__1::forward<_A0>(__a0) .* __f)' inline
| |   |   |-ParmVarDecl 0x7fd30086daf8 <col:10, col:16> col:16 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fd30086db98 <col:21, col:27> col:27 referenced __a0 '_A0 &&'
| |   |   |-CompoundStmt 0x7fd30086e3a8 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fd30086e390 <col:7, line:4280:50>
| |   |   |   `-BinaryOperator 0x7fd30086e368 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4280:50> '<dependent type>' '.*'
| |   |   |     |-CallExpr 0x7fd30086e310 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4280:47> '<dependent type>'
| |   |   |     | |-UnresolvedLookupExpr 0x7fd30086e248 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4280:41> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fd3018b7d80 0x7fd3018b82a0
| |   |   |     | `-DeclRefExpr 0x7fd30086e2e8 <col:43> '_A0' lvalue ParmVar 0x7fd30086db98 '__a0' '_A0 &&'
| |   |   |     `-DeclRefExpr 0x7fd30086e340 <col:50> '_Fp' lvalue ParmVar 0x7fd30086daf8 '__f' '_Fp &&'
| |   |   |-AlwaysInlineAttr 0x7fd30086e198 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fd30086e1e0 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fd30086f348 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4282:1, line:4221:27> line:4286:1 __invoke_constexpr
| |   | |-TemplateTypeParmDecl 0x7fd30086e3c8 <line:4282:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fd30086e438 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fd30086ec88 <line:4283:11, col:47> col:11 class depth 0 index 2
| |   | | `-TemplateArgument type '__enable_if_bullet4<_Fp, _A0>':'typename enable_if<is_member_object_pointer<typename decay<type-parameter-0-0>::type>::value && is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fd30086f2b0 <line:4284:1, line:4221:27> line:4286:1 constexpr __invoke_constexpr 'auto (_Fp &&, _A0 &&) noexcept(noexcept(std::__1::forward<_A0>(__a0) .* __f)) -> decltype(std::__1::forward<_A0>(__a0) .* __f)' inline
| |   |   |-ParmVarDecl 0x7fd30086ed88 <col:20, col:26> col:26 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fd30086ee28 <col:31, col:37> col:37 referenced __a0 '_A0 &&'
| |   |   |-CompoundStmt 0x7fd30086f5b8 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fd30086f5a0 <col:7, line:4287:50>
| |   |   |   `-BinaryOperator 0x7fd30086f578 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4287:50> '<dependent type>' '.*'
| |   |   |     |-CallExpr 0x7fd30086f520 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4287:47> '<dependent type>'
| |   |   |     | |-UnresolvedLookupExpr 0x7fd30086f458 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4287:41> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fd3018b7d80 0x7fd3018b82a0
| |   |   |     | `-DeclRefExpr 0x7fd30086f4f8 <col:43> '_A0' lvalue ParmVar 0x7fd30086ee28 '__a0' '_A0 &&'
| |   |   |     `-DeclRefExpr 0x7fd30086f550 <col:50> '_Fp' lvalue ParmVar 0x7fd30086ed88 '__f' '_Fp &&'
| |   |   |-AlwaysInlineAttr 0x7fd30086f3a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fd30086f3f0 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fd300870498 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4289:1, line:4221:27> line:4293:1 __invoke
| |   | |-TemplateTypeParmDecl 0x7fd30086f5d8 <line:4289:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fd30086f648 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fd30086fea8 <line:4290:11, col:47> col:11 class depth 0 index 2
| |   | | `-TemplateArgument type '__enable_if_bullet5<_Fp, _A0>':'typename enable_if<is_member_object_pointer<typename decay<type-parameter-0-0>::type>::value && __is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fd300870400 <line:4291:1, line:4221:27> line:4293:1 __invoke 'auto (_Fp &&, _A0 &&) noexcept(noexcept(__a0.get() .* __f)) -> decltype(__a0.get() .* __f)' inline
| |   |   |-ParmVarDecl 0x7fd30086ffa8 <col:10, col:16> col:16 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fd300870048 <col:21, col:27> col:27 referenced __a0 '_A0 &&'
| |   |   |-CompoundStmt 0x7fd300870668 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fd300870650 <col:7, line:4294:35>
| |   |   |   `-BinaryOperator 0x7fd300870628 <col:23, col:35> '<dependent type>' '.*'
| |   |   |     |-CallExpr 0x7fd3008705d0 <col:23, col:32> '<dependent type>'
| |   |   |     | `-CXXDependentScopeMemberExpr 0x7fd300870578 <col:23, col:28> '<dependent type>' lvalue .get
| |   |   |     |   `-DeclRefExpr 0x7fd300870550 <col:23> '_A0' lvalue ParmVar 0x7fd300870048 '__a0' '_A0 &&'
| |   |   |     `-DeclRefExpr 0x7fd300870600 <col:35> '_Fp' lvalue ParmVar 0x7fd30086ffa8 '__f' '_Fp &&'
| |   |   |-AlwaysInlineAttr 0x7fd3008704f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fd300870540 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fd300871358 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4296:1, line:4221:27> line:4300:1 __invoke_constexpr
| |   | |-TemplateTypeParmDecl 0x7fd300870688 <line:4296:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fd3008706f8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fd300870de8 <line:4297:11, col:47> col:11 class depth 0 index 2
| |   | | `-TemplateArgument type '__enable_if_bullet5<_Fp, _A0>':'typename enable_if<is_member_object_pointer<typename decay<type-parameter-0-0>::type>::value && __is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fd3008712c0 <line:4298:1, line:4221:27> line:4300:1 constexpr __invoke_constexpr 'auto (_Fp &&, _A0 &&) noexcept(noexcept(__a0.get() .* __f)) -> decltype(__a0.get() .* __f)' inline
| |   |   |-ParmVarDecl 0x7fd300870ee8 <col:20, col:26> col:26 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fd300870f88 <col:31, col:37> col:37 referenced __a0 '_A0 &&'
| |   |   |-CompoundStmt 0x7fd300871520 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fd300871508 <col:7, line:4301:35>
| |   |   |   `-BinaryOperator 0x7fd3008714e0 <col:23, col:35> '<dependent type>' '.*'
| |   |   |     |-CallExpr 0x7fd300871490 <col:23, col:32> '<dependent type>'
| |   |   |     | `-CXXDependentScopeMemberExpr 0x7fd300871438 <col:23, col:28> '<dependent type>' lvalue .get
| |   |   |     |   `-DeclRefExpr 0x7fd300871410 <col:23> '_A0' lvalue ParmVar 0x7fd300870f88 '__a0' '_A0 &&'
| |   |   |     `-DeclRefExpr 0x7fd3008714b8 <col:35> '_Fp' lvalue ParmVar 0x7fd300870ee8 '__f' '_Fp &&'
| |   |   |-AlwaysInlineAttr 0x7fd3008713b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fd300871400 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fd300872898 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4303:1, line:4221:27> line:4307:1 __invoke
| |   | |-TemplateTypeParmDecl 0x7fd300871540 <line:4303:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fd3008715a8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fd3008720d8 <line:4304:11, col:47> col:11 class depth 0 index 2
| |   | | `-TemplateArgument type '__enable_if_bullet6<_Fp, _A0>':'typename enable_if<is_member_object_pointer<typename decay<type-parameter-0-0>::type>::value && !is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value && !__is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fd300872800 <line:4305:1, line:4221:27> line:4307:1 __invoke 'auto (_Fp &&, _A0 &&) noexcept(noexcept((*std::__1::forward<_A0>(__a0)) .* __f)) -> decltype((*std::__1::forward<_A0>(__a0)) .* __f)' inline
| |   |   |-ParmVarDecl 0x7fd3008721d8 <col:10, col:16> col:16 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fd300872278 <col:21, col:27> col:27 referenced __a0 '_A0 &&'
| |   |   |-CompoundStmt 0x7fd300872b48 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fd300872b30 <col:7, line:4308:53>
| |   |   |   `-BinaryOperator 0x7fd300872b08 <col:23, col:53> '<dependent type>' '.*'
| |   |   |     |-ParenExpr 0x7fd300872ac0 <col:23, col:50> '<dependent type>'
| |   |   |     | `-UnaryOperator 0x7fd300872aa0 <col:24, col:49> '<dependent type>' prefix '*'
| |   |   |     |   `-CallExpr 0x7fd300872a70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4308:49> '<dependent type>'
| |   |   |     |     |-UnresolvedLookupExpr 0x7fd3008729a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4308:43> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fd3018b7d80 0x7fd3018b82a0
| |   |   |     |     `-DeclRefExpr 0x7fd300872a48 <col:45> '_A0' lvalue ParmVar 0x7fd300872278 '__a0' '_A0 &&'
| |   |   |     `-DeclRefExpr 0x7fd300872ae0 <col:53> '_Fp' lvalue ParmVar 0x7fd3008721d8 '__f' '_Fp &&'
| |   |   |-AlwaysInlineAttr 0x7fd3008728f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fd300872940 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fd300873ca8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4310:1, line:4221:27> line:4314:1 __invoke_constexpr
| |   | |-TemplateTypeParmDecl 0x7fd300872b68 <line:4310:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fd300872bd8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fd300873568 <line:4311:11, col:47> col:11 class depth 0 index 2
| |   | | `-TemplateArgument type '__enable_if_bullet6<_Fp, _A0>':'typename enable_if<is_member_object_pointer<typename decay<type-parameter-0-0>::type>::value && !is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value && !__is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fd300873c10 <line:4312:1, line:4221:27> line:4314:1 constexpr __invoke_constexpr 'auto (_Fp &&, _A0 &&) noexcept(noexcept((*std::__1::forward<_A0>(__a0)) .* __f)) -> decltype((*std::__1::forward<_A0>(__a0)) .* __f)' inline
| |   |   |-ParmVarDecl 0x7fd300873668 <col:20, col:26> col:26 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fd300873708 <col:31, col:37> col:37 referenced __a0 '_A0 &&'
| |   |   |-CompoundStmt 0x7fd300873f58 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fd300873f40 <col:7, line:4315:53>
| |   |   |   `-BinaryOperator 0x7fd300873f18 <col:23, col:53> '<dependent type>' '.*'
| |   |   |     |-ParenExpr 0x7fd300873ed0 <col:23, col:50> '<dependent type>'
| |   |   |     | `-UnaryOperator 0x7fd300873eb0 <col:24, col:49> '<dependent type>' prefix '*'
| |   |   |     |   `-CallExpr 0x7fd300873e80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4315:49> '<dependent type>'
| |   |   |     |     |-UnresolvedLookupExpr 0x7fd300873db8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4315:43> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fd3018b7d80 0x7fd3018b82a0
| |   |   |     |     `-DeclRefExpr 0x7fd300873e58 <col:45> '_A0' lvalue ParmVar 0x7fd300873708 '__a0' '_A0 &&'
| |   |   |     `-DeclRefExpr 0x7fd300873ef0 <col:53> '_Fp' lvalue ParmVar 0x7fd300873668 '__f' '_Fp &&'
| |   |   |-AlwaysInlineAttr 0x7fd300873d08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fd300873d50 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fd300875a78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4319:1, line:4221:27> line:4322:1 __invoke
| |   | |-TemplateTypeParmDecl 0x7fd300873f78 <line:4319:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fd300873fe8 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | `-FunctionDecl 0x7fd3008759e0 <line:4320:1, line:4221:27> line:4322:1 __invoke 'auto (_Fp &&, _Args &&...) noexcept(noexcept(std::__1::forward<_Fp>(__f)(std::__1::forward<_Args>(__args)...))) -> decltype(std::__1::forward<_Fp>(__f)(std::__1::forward<_Args>(__args)...))' inline
| |   |   |-ParmVarDecl 0x7fd3008740e8 <col:10, col:16> col:16 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fd300874228 <col:21, col:32> col:32 referenced __args '_Args &&...'
| |   |   |-CompoundStmt 0x7fd300875e38 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fd300875e20 <col:7, line:4323:80>
| |   |   |   `-CallExpr 0x7fd300875df0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4323:80> '<dependent type>'
| |   |   |     |-CallExpr 0x7fd300875c50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4323:46> '<dependent type>'
| |   |   |     | |-UnresolvedLookupExpr 0x7fd300875b88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4323:41> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fd3018b7d80 0x7fd3018b82a0
| |   |   |     | `-DeclRefExpr 0x7fd300875c28 <col:43> '_Fp' lvalue ParmVar 0x7fd3008740e8 '__f' '_Fp &&'
| |   |   |     `-PackExpansionExpr 0x7fd300875dd0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4323:77> '<dependent type>'
| |   |   |       `-CallExpr 0x7fd300875da0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4323:76> '<dependent type>'
| |   |   |         |-UnresolvedLookupExpr 0x7fd300875cd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4323:68> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fd3018b7d80 0x7fd3018b82a0
| |   |   |         `-DeclRefExpr 0x7fd300875d78 <col:70> '_Args &&...' lvalue ParmVar 0x7fd300874228 '__args' '_Args &&...'
| |   |   |-AlwaysInlineAttr 0x7fd300875ad8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fd300875b20 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fd300876868 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4325:1, line:4221:27> line:4328:1 __invoke_constexpr
| |   | |-TemplateTypeParmDecl 0x7fd300875e58 <line:4325:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fd300875ec8 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | `-FunctionDecl 0x7fd3008767d0 <line:4326:1, line:4221:27> line:4328:1 constexpr __invoke_constexpr 'auto (_Fp &&, _Args &&...) noexcept(noexcept(std::__1::forward<_Fp>(__f)(std::__1::forward<_Args>(__args)...))) -> decltype(std::__1::forward<_Fp>(__f)(std::__1::forward<_Args>(__args)...))' inline
| |   |   |-ParmVarDecl 0x7fd300875fc8 <col:20, col:26> col:26 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fd3008760a8 <col:31, col:42> col:42 referenced __args '_Args &&...'
| |   |   |-CompoundStmt 0x7fd300876c28 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fd300876c10 <col:7, line:4329:80>
| |   |   |   `-CallExpr 0x7fd300876be0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4329:80> '<dependent type>'
| |   |   |     |-CallExpr 0x7fd300876a40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4329:46> '<dependent type>'
| |   |   |     | |-UnresolvedLookupExpr 0x7fd300876978 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4329:41> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fd3018b7d80 0x7fd3018b82a0
| |   |   |     | `-DeclRefExpr 0x7fd300876a18 <col:43> '_Fp' lvalue ParmVar 0x7fd300875fc8 '__f' '_Fp &&'
| |   |   |     `-PackExpansionExpr 0x7fd300876bc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4329:77> '<dependent type>'
| |   |   |       `-CallExpr 0x7fd300876b90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4329:76> '<dependent type>'
| |   |   |         |-UnresolvedLookupExpr 0x7fd300876ac8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4329:68> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fd3018b7d80 0x7fd3018b82a0
| |   |   |         `-DeclRefExpr 0x7fd300876b68 <col:70> '_Args &&...' lvalue ParmVar 0x7fd3008760a8 '__args' '_Args &&...'
| |   |   |-AlwaysInlineAttr 0x7fd3008768c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fd300876910 <col:51, col:74> Hidden
| |   |-ClassTemplateDecl 0x7fd300876e58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4335:1, line:4352:1> line:4336:8 __invokable_r
| |   | |-TemplateTypeParmDecl 0x7fd300876c48 <line:4335:11, col:17> col:17 referenced class depth 0 index 0 _Ret
| |   | |-TemplateTypeParmDecl 0x7fd300876cb8 <col:23, col:29> col:29 referenced class depth 0 index 1 _Fp
| |   | |-TemplateTypeParmDecl 0x7fd300876d28 <col:34, col:43> col:43 referenced class depth 0 index 2 ... _Args
| |   | `-CXXRecordDecl 0x7fd300876dc0 <line:4336:1, line:4352:1> line:4336:8 struct __invokable_r definition
| |   |   |-private '__check_complete<_Fp>'
| |   |   |-CXXRecordDecl 0x7fd300877278 <col:1, col:8> col:8 implicit struct __invokable_r
| |   |   |-TypeAliasDecl 0x7fd3008776b8 <line:4339:5, col:21> col:11 referenced _Result 'decltype(std::__1::__invoke(std::__1::declval<_Fp>(), std::__1::declval<_Args>()...))'
| |   |   | `-DecltypeType 0x7fd300877680 'decltype(std::__1::__invoke(std::__1::declval<_Fp>(), std::__1::declval<_Args>()...))' dependent
| |   |   |   `-CallExpr 0x7fd300877600 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4340:74> '<dependent type>'
| |   |   |     |-UnresolvedLookupExpr 0x7fd300877340 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4340:16> '<overloaded function type>' lvalue (no ADL) = '__invoke' 0x7fd300860648 0x7fd3008642e8 0x7fd300867488 0x7fd30086b008 0x7fd30086e138 0x7fd300870498 0x7fd300872898 0x7fd300875a78
| |   |   |     |-CallExpr 0x7fd3008774a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4340:45> '<dependent type>'
| |   |   |     | `-UnresolvedLookupExpr 0x7fd300877410 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4340:43> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fd30183e450
| |   |   |     `-PackExpansionExpr 0x7fd3008775d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4340:71> '<dependent type>'
| |   |   |       `-CallExpr 0x7fd3008775a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4340:70> '<dependent type>'
| |   |   |         `-UnresolvedLookupExpr 0x7fd300877510 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4340:68> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fd30183e450
| |   |   `-VarDecl 0x7fd300877728 <line:4342:5, line:4351:18> line:4342:23 value 'const _Bool' static cinit
| |   |     `-DependentScopeDeclRefExpr 0x7fd300878040 <line:4343:9, line:4351:18> '<dependent type>' lvalue
| |   |-TypeAliasTemplateDecl 0x7fd300878458 <line:4354:1, line:4355:54> col:1 __invokable
| |   | |-TemplateTypeParmDecl 0x7fd3008780a0 <line:4354:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fd300878108 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | `-TypeAliasDecl 0x7fd3008783f8 <line:4355:1, col:54> col:7 __invokable '__invokable_r<void, _Fp, _Args...>'
| |   |   `-TemplateSpecializationType 0x7fd3008782c0 '__invokable_r<void, _Fp, _Args...>' dependent __invokable_r
| |   |     |-TemplateArgument type 'void'
| |   |     |-TemplateArgument type '_Fp'
| |   |     `-TemplateArgument type '_Args...'
| |   |-ClassTemplateDecl 0x7fd3008787c8 <line:4357:1, line:4360:1> line:4358:8 __nothrow_invokable_r_imp
| |   | |-NonTypeTemplateParmDecl 0x7fd3008784b8 <line:4357:11, col:16> col:16 '_Bool' depth 0 index 0 _IsInvokable
| |   | |-NonTypeTemplateParmDecl 0x7fd300878520 <col:30, col:35> col:35 '_Bool' depth 0 index 1 _IsCVVoid
| |   | |-TemplateTypeParmDecl 0x7fd300878578 <col:46, col:52> col:52 class depth 0 index 2 _Ret
| |   | |-TemplateTypeParmDecl 0x7fd3008785e8 <col:58, col:64> col:64 class depth 0 index 3 _Fp
| |   | |-TemplateTypeParmDecl 0x7fd300878658 <col:69, col:78> col:78 class depth 0 index 4 ... _Args
| |   | `-CXXRecordDecl 0x7fd300878730 <line:4358:1, line:4360:1> line:4358:8 struct __nothrow_invokable_r_imp definition
| |   |   |-CXXRecordDecl 0x7fd300878be0 <col:1, col:8> col:8 implicit struct __nothrow_invokable_r_imp
| |   |   `-VarDecl 0x7fd300878c88 <line:4359:3, col:29> col:21 value 'const _Bool' static cinit
| |   |     `-CXXBoolLiteralExpr 0x7fd300878ce8 <col:29> '_Bool' false
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd3008791b8 <line:4362:1, line:4372:1> line:4363:8 struct __nothrow_invokable_r_imp definition
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-2...'
| |   | |-TemplateTypeParmDecl 0x7fd300878d20 <line:4362:11, col:17> col:17 referenced class depth 0 index 0 _Ret
| |   | |-TemplateTypeParmDecl 0x7fd300878d88 <col:23, col:29> col:29 referenced class depth 0 index 1 _Fp
| |   | |-TemplateTypeParmDecl 0x7fd300878df8 <col:34, col:43> col:43 referenced class depth 0 index 2 ... _Args
| |   | |-CXXRecordDecl 0x7fd30087a800 <line:4363:1, col:8> col:8 implicit referenced struct __nothrow_invokable_r_imp
| |   | |-TypedefDecl 0x7fd30087a8a8 <line:4365:5, col:39> col:39 referenced _ThisT '__nothrow_invokable_r_imp<true, false, type-parameter-0-0, type-parameter-0-1, type-parameter-0-2...>'
| |   | | `-InjectedClassNameType 0x7fd300879320 '__nothrow_invokable_r_imp<true, false, type-parameter-0-0, type-parameter-0-1, type-parameter-0-2...>' dependent
| |   | |   `-ClassTemplatePartialSpecialization 0x7fd3008791b8 '__nothrow_invokable_r_imp'
| |   | |-FunctionTemplateDecl 0x7fd30087ab60 <line:4367:5, line:4368:38> col:17 __test_noexcept
| |   | | |-TemplateTypeParmDecl 0x7fd30087a900 <line:4367:15, col:21> col:21 referenced class depth 1 index 0 _Tp
| |   | | `-CXXMethodDecl 0x7fd30087aac8 <line:4368:5, col:38> col:17 __test_noexcept 'void (_Tp) noexcept' static
| |   | |   `-ParmVarDecl 0x7fd30087a990 <col:33> col:36 '_Tp'
| |   | `-VarDecl 0x7fd30087abc8 <line:4370:5, line:4371:76> line:4370:23 value 'const _Bool' static cinit
| |   |   `-CXXNoexceptExpr 0x7fd30087b0a8 <col:31, line:4371:76> '_Bool'
| |   |     `-CallExpr 0x7fd30087b078 <line:4370:40, line:4371:75> '<dependent type>'
| |   |       |-UnresolvedLookupExpr 0x7fd30087acc8 <line:4370:40, col:68> '<dependent type>' lvalue (no ADL) = '__test_noexcept' 0x7fd30087ab60
| |   |       `-CallExpr 0x7fd30087b040 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4371:74> '<dependent type>'
| |   |         |-UnresolvedLookupExpr 0x7fd30087ad90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4371:16> '<overloaded function type>' lvalue (no ADL) = '__invoke' 0x7fd300860648 0x7fd3008642e8 0x7fd300867488 0x7fd30086b008 0x7fd30086e138 0x7fd300870498 0x7fd300872898 0x7fd300875a78
| |   |         |-CallExpr 0x7fd30087aef8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4371:45> '<dependent type>'
| |   |         | `-UnresolvedLookupExpr 0x7fd30087ae60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4371:43> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fd30183e450
| |   |         `-PackExpansionExpr 0x7fd30087b020 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4371:71> '<dependent type>'
| |   |           `-CallExpr 0x7fd30087aff8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4371:70> '<dependent type>'
| |   |             `-UnresolvedLookupExpr 0x7fd30087af60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4371:68> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fd30183e450
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd30087b588 <line:4374:1, line:4379:1> line:4375:8 struct __nothrow_invokable_r_imp definition
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-2...'
| |   | |-TemplateTypeParmDecl 0x7fd30087b0f0 <line:4374:11, col:17> col:17 referenced class depth 0 index 0 _Ret
| |   | |-TemplateTypeParmDecl 0x7fd30087b158 <col:23, col:29> col:29 referenced class depth 0 index 1 _Fp
| |   | |-TemplateTypeParmDecl 0x7fd30087b1c8 <col:34, col:43> col:43 referenced class depth 0 index 2 ... _Args
| |   | |-CXXRecordDecl 0x7fd30087b960 <line:4375:1, col:8> col:8 implicit struct __nothrow_invokable_r_imp
| |   | `-VarDecl 0x7fd30087ba08 <line:4377:5, line:4378:75> line:4377:23 value 'const _Bool' static cinit
| |   |   `-CXXNoexceptExpr 0x7fd30087bd80 <col:31, line:4378:75> '_Bool'
| |   |     `-CallExpr 0x7fd30087bd48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4378:74> '<dependent type>'
| |   |       |-UnresolvedLookupExpr 0x7fd30087ba98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4378:16> '<overloaded function type>' lvalue (no ADL) = '__invoke' 0x7fd300860648 0x7fd3008642e8 0x7fd300867488 0x7fd30086b008 0x7fd30086e138 0x7fd300870498 0x7fd300872898 0x7fd300875a78
| |   |       |-CallExpr 0x7fd30087bc00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4378:45> '<dependent type>'
| |   |       | `-UnresolvedLookupExpr 0x7fd30087bb68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4378:43> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fd30183e450
| |   |       `-PackExpansionExpr 0x7fd30087bd28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4378:71> '<dependent type>'
| |   |         `-CallExpr 0x7fd30087bd00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4378:70> '<dependent type>'
| |   |           `-UnresolvedLookupExpr 0x7fd30087bc68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4378:68> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fd30183e450
| |   |-TypeAliasTemplateDecl 0x7fd30087c5d8 <line:4381:1, line:4387:5> line:4382:1 __nothrow_invokable_r
| |   | |-TemplateTypeParmDecl 0x7fd30087bdc8 <line:4381:11, col:17> col:17 referenced class depth 0 index 0 _Ret
| |   | |-TemplateTypeParmDecl 0x7fd30087be38 <col:23, col:29> col:29 referenced class depth 0 index 1 _Fp
| |   | |-TemplateTypeParmDecl 0x7fd30087bea8 <col:34, col:43> col:43 referenced class depth 0 index 2 ... _Args
| |   | `-TypeAliasDecl 0x7fd30087c578 <line:4382:1, line:4387:5> line:4382:7 __nothrow_invokable_r '__nothrow_invokable_r_imp<__invokable_r<_Ret, _Fp, _Args...>::value, is_void<_Ret>::value, _Ret, _Fp, _Args...>'
| |   |   `-TemplateSpecializationType 0x7fd30087c3b0 '__nothrow_invokable_r_imp<__invokable_r<_Ret, _Fp, _Args...>::value, is_void<_Ret>::value, _Ret, _Fp, _Args...>' dependent __nothrow_invokable_r_imp
| |   |     |-TemplateArgument expr
| |   |     | `-DependentScopeDeclRefExpr 0x7fd30087c110 <line:4384:13, col:49> '<dependent type>' lvalue
| |   |     |-TemplateArgument expr
| |   |     | `-DependentScopeDeclRefExpr 0x7fd30087c230 <line:4385:13, col:28> '<dependent type>' lvalue
| |   |     |-TemplateArgument type '_Ret'
| |   |     |-TemplateArgument type '_Fp'
| |   |     `-TemplateArgument type '_Args...'
| |   |-ClassTemplateDecl 0x7fd300011c00 <line:4389:1, line:4395:1> line:4390:8 __invoke_of
| |   | |-TemplateTypeParmDecl 0x7fd30087c628 <line:4389:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fd30087c698 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | `-CXXRecordDecl 0x7fd30087c728 <line:4390:1, line:4395:1> line:4390:8 struct __invoke_of definition
| |   |   |-public 'enable_if<__invokable<_Fp, _Args...>::value, typename __invokable_r<void, _Fp, _Args...>::_Result>'
| |   |   `-CXXRecordDecl 0x7fd300012668 <col:1, col:8> col:8 implicit struct __invoke_of
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd300012a28 <line:4399:1, line:4403:1> line:4400:28 class result_of definition
| |   | |-public '__invoke_of<_Fp, _Args...>'
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1...)'
| |   | |-TemplateTypeParmDecl 0x7fd300012720 <line:4399:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fd300012788 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | |-TypeVisibilityAttr 0x7fd300012b80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fd300012df8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4400:1, col:28> col:28 implicit class result_of
| |   |-TypeAliasTemplateDecl 0x7fd3000130f0 <line:4406:1, col:67> col:22 result_of_t
| |   | |-TemplateTypeParmDecl 0x7fd300012eb0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fd300013090 <col:22, col:67> col:28 result_of_t 'typename result_of<_Tp>::type'
| |   |   `-DependentNameType 0x7fd300013020 'typename result_of<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fd300013258 <line:4440:1, col:29> col:29 __is_swappable
| |   | |-TemplateTypeParmDecl 0x7fd300013140 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd3000131c0 <col:22, col:29> col:29 struct __is_swappable
| |   |-ClassTemplateDecl 0x7fd300013588 <line:4441:1, col:29> col:29 __is_nothrow_swappable
| |   | |-TemplateTypeParmDecl 0x7fd300013468 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd3000134f0 <col:22, col:29> col:29 struct __is_nothrow_swappable
| |   |-FunctionTemplateDecl 0x7fd300014168 <line:4443:1, line:4460:1> line:4454:1 swap
| |   | |-TemplateTypeParmDecl 0x7fd300013798 <line:4443:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fd3000140d0 <line:4444:1, line:4460:1> line:4454:1 swap 'typename enable_if<is_move_constructible<_Tp>::value && is_move_assignable<_Tp>::value>::type (_Tp &, _Tp &) noexcept(is_nothrow_move_constructible<_Tp>::value && is_nothrow_move_assignable<_Tp>::value)' inline
| |   |   |-ParmVarDecl 0x7fd300013cb8 <col:6, col:11> col:11 referenced __x '_Tp &'
| |   |   |-ParmVarDecl 0x7fd300013d28 <col:16, col:21> col:21 referenced __y '_Tp &'
| |   |   |-CompoundStmt 0x7fd300014648 <line:4456:1, line:4460:1>
| |   |   | |-DeclStmt 0x7fd3000143d0 <line:4457:5, col:30>
| |   |   | | `-VarDecl 0x7fd3000142b8 <col:5, col:29> col:9 referenced __t '_Tp' callinit
| |   |   | |   `-ParenListExpr 0x7fd3000143a0 <col:12, col:29> 'NULL TYPE'
| |   |   | |     `-CallExpr 0x7fd300014340 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4457:28> '<dependent type>'
| |   |   | |       |-UnresolvedLookupExpr 0x7fd300014250 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4457:20> '<overloaded function type>' lvalue (no ADL) = 'move' 0x7fd3018b7638
| |   |   | |       `-DeclRefExpr 0x7fd300014318 <col:25> '_Tp' lvalue ParmVar 0x7fd300013cb8 '__x' '_Tp &'
| |   |   | |-BinaryOperator 0x7fd3000144f0 <line:4458:5, col:26> '<dependent type>' '='
| |   |   | | |-DeclRefExpr 0x7fd3000143e8 <col:5> '_Tp' lvalue ParmVar 0x7fd300013cb8 '__x' '_Tp &'
| |   |   | | `-CallExpr 0x7fd3000144c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4458:26> '<dependent type>'
| |   |   | |   |-UnresolvedLookupExpr 0x7fd300014440 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4458:18> '<overloaded function type>' lvalue (no ADL) = 'move' 0x7fd3018b7638
| |   |   | |   `-DeclRefExpr 0x7fd300014498 <col:23> '_Tp' lvalue ParmVar 0x7fd300013d28 '__y' '_Tp &'
| |   |   | `-BinaryOperator 0x7fd300014620 <line:4459:5, col:26> '<dependent type>' '='
| |   |   |   |-DeclRefExpr 0x7fd300014518 <col:5> '_Tp' lvalue ParmVar 0x7fd300013d28 '__y' '_Tp &'
| |   |   |   `-CallExpr 0x7fd3000145f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4459:26> '<dependent type>'
| |   |   |     |-UnresolvedLookupExpr 0x7fd300014570 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4459:18> '<overloaded function type>' lvalue (no ADL) = 'move' 0x7fd3018b7638
| |   |   |     `-DeclRefExpr 0x7fd3000145c8 <col:23> '_Tp' lvalue Var 0x7fd3000142b8 '__t' '_Tp'
| |   |   |-AlwaysInlineAttr 0x7fd3000141c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fd300014210 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fd300014fd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4462:1, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:759:35> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4467:1 swap
| |   | |-TemplateTypeParmDecl 0x7fd300014678 <line:4462:10, col:16> col:16 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fd3000146f8 <col:21, col:28> col:28 referenced 'size_t':'unsigned long' depth 0 index 1 _Np
| |   | `-FunctionDecl 0x7fd300014f40 <line:4463:1, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:759:35> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4467:1 swap 'typename enable_if<__is_swappable<_Tp>::value>::type (_Tp (&)[_Np], _Tp (&)[_Np]) noexcept(__is_nothrow_swappable<_Tp>::value)' inline
| |   |   |-ParmVarDecl 0x7fd300014b98 <col:6, col:20> col:12 __a '_Tp (&)[_Np]'
| |   |   |-ParmVarDecl 0x7fd300014ce8 <col:23, col:37> col:29 __b '_Tp (&)[_Np]'
| |   |   |-AlwaysInlineAttr 0x7fd300015038 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fd300015080 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fd3000156f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4469:1, line:4478:1> line:4472:1 iter_swap
| |   | |-TemplateTypeParmDecl 0x7fd300015090 <line:4469:11, col:17> col:17 referenced class depth 0 index 0 _ForwardIterator1
| |   | |-TemplateTypeParmDecl 0x7fd3000150f8 <col:36, col:42> col:42 referenced class depth 0 index 1 _ForwardIterator2
| |   | `-FunctionDecl 0x7fd300015660 <line:4470:1, line:4478:1> line:4472:1 iter_swap 'void (_ForwardIterator1, _ForwardIterator2) noexcept(noexcept(swap(*std::__1::declval<_ForwardIterator1>(), *std::__1::declval<_ForwardIterator2>())))' inline
| |   |   |-ParmVarDecl 0x7fd3000151c8 <col:11, col:29> col:29 referenced __a '_ForwardIterator1'
| |   |   |-ParmVarDecl 0x7fd300015238 <col:34, col:52> col:52 referenced __b '_ForwardIterator2'
| |   |   |-CompoundStmt 0x7fd3000158d8 <line:4476:1, line:4478:1>
| |   |   | `-CallExpr 0x7fd3000158a0 <line:4477:5, col:20> '<dependent type>'
| |   |   |   |-UnresolvedLookupExpr 0x7fd3000157b0 <col:5> '<overloaded function type>' lvalue (ADL) = 'swap' 0x7fd300014fd8 0x7fd300014168
| |   |   |   |-UnaryOperator 0x7fd300015838 <col:10, col:11> '<dependent type>' prefix '*'
| |   |   |   | `-DeclRefExpr 0x7fd300015810 <col:11> '_ForwardIterator1' lvalue ParmVar 0x7fd3000151c8 '__a' '_ForwardIterator1'
| |   |   |   `-UnaryOperator 0x7fd300015880 <col:16, col:17> '<dependent type>' prefix '*'
| |   |   |     `-DeclRefExpr 0x7fd300015858 <col:17> '_ForwardIterator2' lvalue ParmVar 0x7fd300015238 '__b' '_ForwardIterator2'
| |   |   |-AlwaysInlineAttr 0x7fd300015758 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fd3000157a0 <col:51, col:74> Hidden
| |   |-NamespaceDecl 0x7fd3000158f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4482:1, line:4521:1> line:4482:11 __detail
| |   | |-ClassTemplateDecl 0x7fd300015df8 <line:4486:1, line:4502:1> line:4488:8 __swappable_with
| |   | | |-TemplateTypeParmDecl 0x7fd300015960 <line:4486:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | | |-TemplateTypeParmDecl 0x7fd3000159d8 <col:22, col:34> col:28 referenced class depth 0 index 1 _Up
| |   | | | `-TemplateArgument type '_Tp'
| |   | | |-NonTypeTemplateParmDecl 0x7fd300015ce0 <line:4487:11, col:66> col:16 '_Bool' depth 0 index 2 _NotVoid
| |   | | | `-TemplateArgument expr
| |   | | |   `-BinaryOperator 0x7fd300015ca8 <col:27, col:66> '<dependent type>' '&&'
| |   | | |     |-UnaryOperator 0x7fd300015b58 <col:27, col:42> '<dependent type>' prefix '!'
| |   | | |     | `-DependentScopeDeclRefExpr 0x7fd300015b18 <col:28, col:42> '<dependent type>' lvalue
| |   | | |     `-UnaryOperator 0x7fd300015c88 <col:51, col:66> '<dependent type>' prefix '!'
| |   | | |       `-DependentScopeDeclRefExpr 0x7fd300015c48 <col:52, col:66> '<dependent type>' lvalue
| |   | | `-CXXRecordDecl 0x7fd300015d60 <line:4488:1, line:4502:1> line:4488:8 struct __swappable_with definition
| |   | |   |-CXXRecordDecl 0x7fd300016100 <col:1, col:8> col:8 implicit struct __swappable_with
| |   | |   |-FunctionTemplateDecl 0x7fd3000167b8 <line:4490:5, line:4492:20> col:5 __test_swap
| |   | |   | |-TemplateTypeParmDecl 0x7fd300016198 <line:4490:15, col:21> col:21 referenced class depth 1 index 0 _LHS
| |   | |   | |-TemplateTypeParmDecl 0x7fd300016208 <col:27, col:33> col:33 referenced class depth 1 index 1 _RHS
| |   | |   | `-CXXMethodDecl 0x7fd300016720 <line:4491:5, line:4492:20> col:5 __test_swap 'decltype(swap(std::__1::declval<_LHS>(), std::__1::declval<_RHS>())) (int)' static
| |   | |   |   `-ParmVarDecl 0x7fd300016578 <col:17> col:20 'int'
| |   | |   |-FunctionTemplateDecl 0x7fd300016a78 <line:4493:5, line:4494:34> col:18 __test_swap
| |   | |   | |-TemplateTypeParmDecl 0x7fd300016810 <line:4493:15> col:15 class depth 1 index 0
| |   | |   | |-TemplateTypeParmDecl 0x7fd300016878 <col:22> col:22 class depth 1 index 1
| |   | |   | `-CXXMethodDecl 0x7fd3000169e0 <line:4494:5, col:34> col:18 __test_swap 'struct std::__1::__nat (long)' static
| |   | |   |   `-ParmVarDecl 0x7fd300016920 <col:30> col:34 'long'
| |   | |   |-TypedefDecl 0x7fd300016cc8 <line:4497:5, col:50> col:50 referenced __swap1 'decltype((__test_swap<_Tp, _Up>(0)))'
| |   | |   | `-DecltypeType 0x7fd300016c90 'decltype((__test_swap<_Tp, _Up>(0)))' dependent
| |   | |   |   `-ParenExpr 0x7fd300016c28 <col:22, col:47> '<dependent type>'
| |   | |   |     `-CallExpr 0x7fd300016bf8 <col:23, col:46> '<dependent type>'
| |   | |   |       |-UnresolvedLookupExpr 0x7fd300016b08 <col:23, col:43> '<dependent type>' lvalue (no ADL) = '__test_swap' 0x7fd300016a78 0x7fd3000167b8
| |   | |   |       `-IntegerLiteral 0x7fd300016bd8 <col:45> 'int' 0
| |   | |   |-TypedefDecl 0x7fd300016f18 <line:4498:5, col:50> col:50 referenced __swap2 'decltype((__test_swap<_Up, _Tp>(0)))'
| |   | |   | `-DecltypeType 0x7fd300016ee0 'decltype((__test_swap<_Up, _Tp>(0)))' dependent
| |   | |   |   `-ParenExpr 0x7fd300016e78 <col:22, col:47> '<dependent type>'
| |   | |   |     `-CallExpr 0x7fd300016e48 <col:23, col:46> '<dependent type>'
| |   | |   |       |-UnresolvedLookupExpr 0x7fd300016d58 <col:23, col:43> '<dependent type>' lvalue (no ADL) = '__test_swap' 0x7fd300016a78 0x7fd3000167b8
| |   | |   |       `-IntegerLiteral 0x7fd300016e28 <col:45> 'int' 0
| |   | |   `-VarDecl 0x7fd300016f80 <line:4500:5, line:4501:57> line:4500:23 value 'const _Bool' static cinit
| |   | |     `-BinaryOperator 0x7fd3000173b8 <col:31, line:4501:57> '<dependent type>' '&&'
| |   | |       |-UnaryOperator 0x7fd3000171a8 <line:4500:31, col:57> '<dependent type>' prefix '!'
| |   | |       | `-DependentScopeDeclRefExpr 0x7fd300017168 <col:32, col:57> '<dependent type>' lvalue
| |   | |       `-UnaryOperator 0x7fd300017398 <line:4501:31, col:57> '<dependent type>' prefix '!'
| |   | |         `-DependentScopeDeclRefExpr 0x7fd300017358 <col:32, col:57> '<dependent type>' lvalue
| |   | |-ClassTemplatePartialSpecializationDecl 0x7fd3000176c8 <line:4504:1, line:4505:57> col:8 struct __swappable_with definition
| |   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | |-TemplateArgument type 'type-parameter-0-1'
| |   | | |-TemplateArgument integral 0
| |   | | |-TemplateTypeParmDecl 0x7fd300017400 <line:4504:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | | |-TemplateTypeParmDecl 0x7fd300017468 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | | `-CXXRecordDecl 0x7fd3000179f0 <line:4505:1, col:8> col:8 implicit struct __swappable_with
| |   | |-ClassTemplateDecl 0x7fd300018140 <line:4507:1, line:4516:1> line:4508:8 __nothrow_swappable_with
| |   | | |-TemplateTypeParmDecl 0x7fd300017aa8 <line:4507:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | | |-TemplateTypeParmDecl 0x7fd300017b28 <col:22, col:34> col:28 referenced class depth 0 index 1 _Up
| |   | | | `-TemplateArgument type '_Tp'
| |   | | |-NonTypeTemplateParmDecl 0x7fd300018028 <col:39, col:85> col:44 '_Bool' depth 0 index 2 _Swappable
| |   | | | `-TemplateArgument expr
| |   | | |   `-DependentScopeDeclRefExpr 0x7fd300017fd8 <col:57, col:85> '<dependent type>' lvalue
| |   | | `-CXXRecordDecl 0x7fd3000180a8 <line:4508:1, line:4516:1> line:4508:8 struct __nothrow_swappable_with definition
| |   | |   |-CXXRecordDecl 0x7fd300018440 <col:1, col:8> col:8 implicit struct __nothrow_swappable_with
| |   | |   `-VarDecl 0x7fd3000184e8 <line:4509:3, line:4512:66> line:4509:21 value 'const _Bool' static cinit
| |   | |     `-BinaryOperator 0x7fd300018ac8 <line:4511:7, line:4512:66> '_Bool' '&&'
| |   | |       |-CXXNoexceptExpr 0x7fd3000187e0 <line:4511:7, col:66> '_Bool'
| |   | |       | `-CallExpr 0x7fd3000187a8 <col:16, col:65> '<dependent type>'
| |   | |       |   |-UnresolvedLookupExpr 0x7fd300018548 <col:16> '<overloaded function type>' lvalue (ADL) = 'swap' 0x7fd300014fd8 0x7fd300014168
| |   | |       |   |-CallExpr 0x7fd300018680 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4511:41> '<dependent type>'
| |   | |       |   | `-UnresolvedLookupExpr 0x7fd3000185e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4511:39> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fd30183e450
| |   | |       |   `-CallExpr 0x7fd300018780 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4511:64> '<dependent type>'
| |   | |       |     `-UnresolvedLookupExpr 0x7fd3000186e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4511:62> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fd30183e450
| |   | |       `-CXXNoexceptExpr 0x7fd300018aa0 <line:4512:7, col:66> '_Bool'
| |   | |         `-CallExpr 0x7fd300018a68 <col:16, col:65> '<dependent type>'
| |   | |           |-UnresolvedLookupExpr 0x7fd300018808 <col:16> '<overloaded function type>' lvalue (ADL) = 'swap' 0x7fd300014fd8 0x7fd300014168
| |   | |           |-CallExpr 0x7fd300018940 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4512:41> '<dependent type>'
| |   | |           | `-UnresolvedLookupExpr 0x7fd3000188a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4512:39> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fd30183e450
| |   | |           `-CallExpr 0x7fd300018a40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4512:64> '<dependent type>'
| |   | |             `-UnresolvedLookupExpr 0x7fd3000189a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4512:62> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fd30183e450
| |   | `-ClassTemplatePartialSpecializationDecl 0x7fd300018dd8 <line:4518:1, line:4519:64> col:8 struct __nothrow_swappable_with definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TemplateArgument type 'type-parameter-0-0'
| |   |   |-TemplateArgument type 'type-parameter-0-1'
| |   |   |-TemplateArgument integral 0
| |   |   |-TemplateTypeParmDecl 0x7fd300018b10 <line:4518:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   |   |-TemplateTypeParmDecl 0x7fd300018b78 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   |   `-CXXRecordDecl 0x7fd300019100 <line:4519:1, col:8> col:8 implicit struct __nothrow_swappable_with
| |   |-ClassTemplateDecl 0x7fd3000192d8 prev 0x7fd300013258 <line:4523:1, line:4527:1> line:4524:8 __is_swappable
| |   | |-TemplateTypeParmDecl 0x7fd3000191b8 <line:4523:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd300019240 prev 0x7fd3000131c0 <line:4524:1, line:4527:1> line:4524:8 struct __is_swappable definition
| |   |   |-public 'integral_constant<_Bool, __detail::__swappable_with<_Tp &>::value>'
| |   |   `-CXXRecordDecl 0x7fd300019a48 <col:1, col:8> col:8 implicit struct __is_swappable
| |   |-ClassTemplateDecl 0x7fd300019c98 prev 0x7fd300013588 <line:4529:1, line:4533:1> line:4530:8 __is_nothrow_swappable
| |   | |-TemplateTypeParmDecl 0x7fd300019b00 <line:4529:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd300019c00 prev 0x7fd3000134f0 <line:4530:1, line:4533:1> line:4530:8 struct __is_nothrow_swappable definition
| |   |   |-public 'integral_constant<_Bool, __detail::__nothrow_swappable_with<_Tp &>::value>'
| |   |   `-CXXRecordDecl 0x7fd30001a4c8 <col:1, col:8> col:8 implicit struct __is_nothrow_swappable
| |   |-ClassTemplateDecl 0x7fd30001a698 <line:4589:1, line:4593:1> line:4590:8 underlying_type
| |   | |-TemplateTypeParmDecl 0x7fd30001a580 <line:4589:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd30001a600 <line:4590:1, line:4593:1> line:4590:8 struct underlying_type definition
| |   |   |-CXXRecordDecl 0x7fd30001a910 <col:1, col:8> col:8 implicit struct underlying_type
| |   |   `-TypedefDecl 0x7fd30001aa50 <line:4592:5, col:42> col:42 type '__underlying_type(_Tp)'
| |   |     `-UnaryTransformType 0x7fd30001aa00 '__underlying_type(_Tp)' dependent underlying_type
| |   |       `-TemplateTypeParmType 0x7fd30001a5c0 '_Tp' dependent depth 0 index 0
| |   |         `-TemplateTypeParm 0x7fd30001a580 '_Tp'
| |   |-TypeAliasTemplateDecl 0x7fd30001ad10 <line:4596:1, col:79> col:22 underlying_type_t
| |   | |-TemplateTypeParmDecl 0x7fd30001aac8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fd30001acb0 <col:22, col:79> col:28 underlying_type_t 'typename underlying_type<_Tp>::type'
| |   |   `-DependentNameType 0x7fd30001ac40 'typename underlying_type<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fd30001aff8 <line:4612:1, line:4617:1> line:4613:8 __sfinae_underlying_type
| |   | |-TemplateTypeParmDecl 0x7fd30001ad60 <line:4612:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fd30001aee8 <col:22, col:43> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fd30001ae98 <col:29, col:43> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fd30001af60 <line:4613:1, line:4617:1> line:4613:8 struct __sfinae_underlying_type definition
| |   |   |-CXXRecordDecl 0x7fd30001b2c0 <col:1, col:8> col:8 implicit struct __sfinae_underlying_type
| |   |   |-TypedefDecl 0x7fd30001b480 <line:4615:5, col:49> col:49 referenced type 'typename underlying_type<_Tp>::type'
| |   |   | `-DependentNameType 0x7fd30001b410 'typename underlying_type<_Tp>::type' dependent
| |   |   `-TypedefDecl 0x7fd30001b638 <line:4616:5, col:37> col:37 __promoted_type 'decltype(((std::__1::__sfinae_underlying_type::type)1) + 0)'
| |   |     `-DecltypeType 0x7fd30001b600 'decltype(((std::__1::__sfinae_underlying_type::type)1) + 0)' dependent
| |   |       `-BinaryOperator 0x7fd30001b598 <col:22, col:34> '<dependent type>' '+'
| |   |         |-ParenExpr 0x7fd30001b558 <col:22, col:30> 'std::__1::__sfinae_underlying_type::type':'typename underlying_type<_Tp>::type'
| |   |         | `-CStyleCastExpr 0x7fd30001b530 <col:23, col:29> 'std::__1::__sfinae_underlying_type::type':'typename underlying_type<_Tp>::type' <Dependent>
| |   |         |   `-IntegerLiteral 0x7fd30001b500 <col:29> 'int' 1
| |   |         `-IntegerLiteral 0x7fd30001b578 <col:34> 'int' 0
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd30001b890 <line:4619:1, line:4620:46> col:8 struct __sfinae_underlying_type definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fd30001b6b0 <line:4619:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd30001bb20 <line:4620:1, col:8> col:8 implicit struct __sfinae_underlying_type
| |   |-FunctionDecl 0x7fd30001cce8 <line:4622:1, line:4623:54> col:5 __convert_to_integral 'int (int)' inline
| |   | |-ParmVarDecl 0x7fd30001cc20 <col:27, col:31> col:31 used __val 'int'
| |   | |-CompoundStmt 0x7fd30001ce38 <col:38, col:54>
| |   | | `-ReturnStmt 0x7fd30001ce20 <col:40, col:47>
| |   | |   `-ImplicitCastExpr 0x7fd30001ce08 <col:47> 'int' <LValueToRValue>
| |   | |     `-DeclRefExpr 0x7fd30001cde0 <col:47> 'int' lvalue ParmVar 0x7fd30001cc20 '__val' 'int'
| |   | |-AlwaysInlineAttr 0x7fd30001cd88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | `-VisibilityAttr 0x7fd30001cdd0 <col:51, col:74> Hidden
| |   |-FunctionDecl 0x7fd30001cf68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4625:1, line:4626:64> col:10 __convert_to_integral 'unsigned int (unsigned int)' inline
| |   | |-ParmVarDecl 0x7fd30001cea0 <col:32, col:41> col:41 used __val 'unsigned int'
| |   | |-CompoundStmt 0x7fd30001d0b8 <col:48, col:64>
| |   | | `-ReturnStmt 0x7fd30001d0a0 <col:50, col:57>
| |   | |   `-ImplicitCastExpr 0x7fd30001d088 <col:57> 'unsigned int' <LValueToRValue>
| |   | |     `-DeclRefExpr 0x7fd30001d060 <col:57> 'unsigned int' lvalue ParmVar 0x7fd30001cea0 '__val' 'unsigned int'
| |   | |-AlwaysInlineAttr 0x7fd30001d008 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | `-VisibilityAttr 0x7fd30001d050 <col:51, col:74> Hidden
| |   |-FunctionDecl 0x7fd30001d1e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4628:1, line:4629:56> col:6 __convert_to_integral 'long (long)' inline
| |   | |-ParmVarDecl 0x7fd30001d120 <col:28, col:33> col:33 used __val 'long'
| |   | |-CompoundStmt 0x7fd30001d338 <col:40, col:56>
| |   | | `-ReturnStmt 0x7fd30001d320 <col:42, col:49>
| |   | |   `-ImplicitCastExpr 0x7fd30001d308 <col:49> 'long' <LValueToRValue>
| |   | |     `-DeclRefExpr 0x7fd30001d2e0 <col:49> 'long' lvalue ParmVar 0x7fd30001d120 '__val' 'long'
| |   | |-AlwaysInlineAttr 0x7fd30001d288 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | `-VisibilityAttr 0x7fd30001d2d0 <col:51, col:74> Hidden
| |   |-FunctionDecl 0x7fd30001d468 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4631:1, line:4632:74> col:15 __convert_to_integral 'unsigned long (unsigned long)' inline
| |   | |-ParmVarDecl 0x7fd30001d3a0 <col:37, col:51> col:51 used __val 'unsigned long'
| |   | |-CompoundStmt 0x7fd30001d5b8 <col:58, col:74>
| |   | | `-ReturnStmt 0x7fd30001d5a0 <col:60, col:67>
| |   | |   `-ImplicitCastExpr 0x7fd30001d588 <col:67> 'unsigned long' <LValueToRValue>
| |   | |     `-DeclRefExpr 0x7fd30001d560 <col:67> 'unsigned long' lvalue ParmVar 0x7fd30001d3a0 '__val' 'unsigned long'
| |   | |-AlwaysInlineAttr 0x7fd30001d508 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | `-VisibilityAttr 0x7fd30001d550 <col:51, col:74> Hidden
| |   |-FunctionDecl 0x7fd30001d6e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4634:1, line:4635:66> col:11 __convert_to_integral 'long long (long long)' inline
| |   | |-ParmVarDecl 0x7fd30001d620 <col:33, col:43> col:43 used __val 'long long'
| |   | |-CompoundStmt 0x7fd30001d838 <col:50, col:66>
| |   | | `-ReturnStmt 0x7fd30001d820 <col:52, col:59>
| |   | |   `-ImplicitCastExpr 0x7fd30001d808 <col:59> 'long long' <LValueToRValue>
| |   | |     `-DeclRefExpr 0x7fd30001d7e0 <col:59> 'long long' lvalue ParmVar 0x7fd30001d620 '__val' 'long long'
| |   | |-AlwaysInlineAttr 0x7fd30001d788 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | `-VisibilityAttr 0x7fd30001d7d0 <col:51, col:74> Hidden
| |   |-FunctionDecl 0x7fd30001d968 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4637:1, line:4638:83> col:20 __convert_to_integral 'unsigned long long (unsigned long long)' inline
| |   | |-ParmVarDecl 0x7fd30001d8a0 <col:42, col:61> col:61 used __val 'unsigned long long'
| |   | |-CompoundStmt 0x7fd30001dab8 <col:68, col:83>
| |   | | `-ReturnStmt 0x7fd30001daa0 <col:69, col:76>
| |   | |   `-ImplicitCastExpr 0x7fd30001da88 <col:76> 'unsigned long long' <LValueToRValue>
| |   | |     `-DeclRefExpr 0x7fd30001da60 <col:76> 'unsigned long long' lvalue ParmVar 0x7fd30001d8a0 '__val' 'unsigned long long'
| |   | |-AlwaysInlineAttr 0x7fd30001da08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | `-VisibilityAttr 0x7fd30001da50 <col:51, col:74> Hidden
| |   |-FunctionDecl 0x7fd30001dc20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4641:1, line:4642:68> col:12 __convert_to_integral '__int128_t (__int128_t)' inline
| |   | |-ParmVarDecl 0x7fd30001db18 <col:34, col:45> col:45 used __val '__int128_t':'__int128'
| |   | |-CompoundStmt 0x7fd30001dd70 <col:52, col:68>
| |   | | `-ReturnStmt 0x7fd30001dd58 <col:54, col:61>
| |   | |   `-ImplicitCastExpr 0x7fd30001dd40 <col:61> '__int128_t':'__int128' <LValueToRValue>
| |   | |     `-DeclRefExpr 0x7fd30001dd18 <col:61> '__int128_t':'__int128' lvalue ParmVar 0x7fd30001db18 '__val' '__int128_t':'__int128'
| |   | |-AlwaysInlineAttr 0x7fd30001dcc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | `-VisibilityAttr 0x7fd30001dd08 <col:51, col:74> Hidden
| |   |-FunctionDecl 0x7fd30001ded0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4644:1, line:4645:70> col:13 __convert_to_integral '__uint128_t (__uint128_t)' inline
| |   | |-ParmVarDecl 0x7fd30001ddd0 <col:35, col:47> col:47 used __val '__uint128_t':'unsigned __int128'
| |   | |-CompoundStmt 0x7fd30001e020 <col:54, col:70>
| |   | | `-ReturnStmt 0x7fd30001e008 <col:56, col:63>
| |   | |   `-ImplicitCastExpr 0x7fd30001dff0 <col:63> '__uint128_t':'unsigned __int128' <LValueToRValue>
| |   | |     `-DeclRefExpr 0x7fd30001dfc8 <col:63> '__uint128_t':'unsigned __int128' lvalue ParmVar 0x7fd30001ddd0 '__val' '__uint128_t':'unsigned __int128'
| |   | |-AlwaysInlineAttr 0x7fd30001df70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | `-VisibilityAttr 0x7fd30001dfb8 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fd30001e568 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4648:1, line:4651:50> col:1 __convert_to_integral
| |   | |-TemplateTypeParmDecl 0x7fd30001e040 <line:4648:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fd30001e4d0 <line:4649:1, line:4651:50> col:1 __convert_to_integral 'typename __sfinae_underlying_type<_Tp>::__promoted_type (_Tp)' inline
| |   |   |-ParmVarDecl 0x7fd30001e3c0 <col:23, col:27> col:27 referenced __val '_Tp'
| |   |   |-CompoundStmt 0x7fd30001e658 <col:34, col:50>
| |   |   | `-ReturnStmt 0x7fd30001e640 <col:36, col:43>
| |   |   |   `-DeclRefExpr 0x7fd30001e618 <col:43> '_Tp' lvalue ParmVar 0x7fd30001e3c0 '__val' '_Tp'
| |   |   |-AlwaysInlineAttr 0x7fd30001e5c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fd30001e608 <col:51, col:74> Hidden
| |   |-ClassTemplateDecl 0x7fd30001e798 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4655:1, line:4665:1> line:4656:8 __has_operator_addressof_member_imp
| |   | |-TemplateTypeParmDecl 0x7fd30001e678 <line:4655:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd30001e700 <line:4656:1, line:4665:1> line:4656:8 struct __has_operator_addressof_member_imp definition
| |   |   |-CXXRecordDecl 0x7fd30001ea10 <col:1, col:8> col:8 implicit struct __has_operator_addressof_member_imp
| |   |   |-FunctionTemplateDecl 0x7fd30001f118 <line:4658:5, line:4660:95> line:4659:21 __test
| |   |   | |-TemplateTypeParmDecl 0x7fd30001eaa8 <line:4658:15, col:21> col:21 referenced class depth 1 index 0 _Up
| |   |   | `-CXXMethodDecl 0x7fd30001f080 <line:4659:9, line:4660:95> line:4659:21 __test 'auto (int) -> typename __select_2nd<decltype(std::__1::declval<_Up>().operator&()), true_type>::type' static
| |   |   |   `-ParmVarDecl 0x7fd30001eb48 <col:28> col:31 'int'
| |   |   |-FunctionTemplateDecl 0x7fd30001f3b8 <line:4661:5, line:4662:37> col:21 __test
| |   |   | |-TemplateTypeParmDecl 0x7fd30001f170 <line:4661:15> col:15 class depth 1 index 0
| |   |   | `-CXXMethodDecl 0x7fd30001f320 <line:4662:9, col:37> col:21 __test 'auto (long) -> std::__1::false_type' static
| |   |   |   `-ParmVarDecl 0x7fd30001f208 <col:28> col:32 'long'
| |   |   `-VarDecl 0x7fd30001f420 <line:4664:5, col:57> col:23 value 'const _Bool' static cinit
| |   |     `-DependentScopeDeclRefExpr 0x7fd30001f658 <col:31, col:57> '<dependent type>' lvalue
| |   |-ClassTemplateDecl 0x7fd30001f7d8 <line:4667:1, line:4677:1> line:4668:8 __has_operator_addressof_free_imp
| |   | |-TemplateTypeParmDecl 0x7fd30001f6b8 <line:4667:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd30001f740 <line:4668:1, line:4677:1> line:4668:8 struct __has_operator_addressof_free_imp definition
| |   |   |-CXXRecordDecl 0x7fd30001fa50 <col:1, col:8> col:8 implicit struct __has_operator_addressof_free_imp
| |   |   |-FunctionTemplateDecl 0x7fd300020158 <line:4670:5, line:4672:94> line:4671:21 __test
| |   |   | |-TemplateTypeParmDecl 0x7fd30001fae8 <line:4670:15, col:21> col:21 referenced class depth 1 index 0 _Up
| |   |   | `-CXXMethodDecl 0x7fd3000200c0 <line:4671:9, line:4672:94> line:4671:21 __test 'auto (int) -> typename __select_2nd<decltype(operator&(std::__1::declval<_Up>())), true_type>::type' static
| |   |   |   `-ParmVarDecl 0x7fd30001fb88 <col:28> col:31 'int'
| |   |   |-FunctionTemplateDecl 0x7fd300020378 <line:4673:5, line:4674:37> col:21 __test
| |   |   | |-TemplateTypeParmDecl 0x7fd3000201b0 <line:4673:15> col:15 class depth 1 index 0
| |   |   | `-CXXMethodDecl 0x7fd3000202e0 <line:4674:9, col:37> col:21 __test 'auto (long) -> std::__1::false_type' static
| |   |   |   `-ParmVarDecl 0x7fd300020248 <col:28> col:32 'long'
| |   |   `-VarDecl 0x7fd3000203e0 <line:4676:5, col:57> col:23 value 'const _Bool' static cinit
| |   |     `-DependentScopeDeclRefExpr 0x7fd3000205d8 <col:31, col:57> '<dependent type>' lvalue
| |   |-ClassTemplateDecl 0x7fd300020758 <line:4679:1, line:4683:2> line:4680:8 __has_operator_addressof
| |   | |-TemplateTypeParmDecl 0x7fd300020638 <line:4679:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd3000206c0 <line:4680:1, line:4683:2> line:4680:8 struct __has_operator_addressof definition
| |   |   |-public 'integral_constant<_Bool, __has_operator_addressof_member_imp<_Tp>::value || __has_operator_addressof_free_imp<_Tp>::value>'
| |   |   `-CXXRecordDecl 0x7fd300020df8 <col:1, col:8> col:8 implicit struct __has_operator_addressof
| |   |-CXXRecordDecl 0x7fd300020eb0 <line:4709:1, col:32> col:8 referenced struct __extract_key_fail_tag definition
| |   | `-CXXRecordDecl 0x7fd300020fd8 <col:1, col:8> col:8 implicit struct __extract_key_fail_tag
| |   |-CXXRecordDecl 0x7fd300021090 <line:4710:1, col:32> col:8 referenced struct __extract_key_self_tag definition
| |   | `-CXXRecordDecl 0x7fd3000211b8 <col:1, col:8> col:8 implicit struct __extract_key_self_tag
| |   |-CXXRecordDecl 0x7fd300021270 <line:4711:1, col:33> col:8 referenced struct __extract_key_first_tag definition
| |   | `-CXXRecordDecl 0x7fd300021398 <col:1, col:8> col:8 implicit struct __extract_key_first_tag
| |   |-ClassTemplateDecl 0x7fd3000217b8 <line:4713:1, line:4717:50> line:4715:8 __can_extract_key
| |   | |-TemplateTypeParmDecl 0x7fd300021450 <line:4713:11, col:17> col:17 referenced class depth 0 index 0 _ValTy
| |   | |-TemplateTypeParmDecl 0x7fd3000214b8 <col:25, col:31> col:31 referenced class depth 0 index 1 _Key
| |   | |-TemplateTypeParmDecl 0x7fd300021690 <line:4714:11, col:60> col:17 referenced class depth 0 index 2 _RawValTy
| |   | | `-TemplateArgument type 'typename __unconstref<_ValTy>::type'
| |   | `-CXXRecordDecl 0x7fd300021720 <line:4715:1, line:4717:50> line:4715:8 struct __can_extract_key definition
| |   |   |-public 'conditional<is_same<_RawValTy, _Key>::value, struct __extract_key_self_tag, struct __extract_key_fail_tag>::type'
| |   |   `-CXXRecordDecl 0x7fd300021ef0 <col:1, col:8> col:8 implicit struct __can_extract_key
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd3000224c8 <line:4719:1, line:4722:75> line:4720:8 struct __can_extract_key definition
| |   | |-public 'conditional<is_same<typename remove_const<_First>::type, _Key>::value, struct __extract_key_first_tag, struct __extract_key_fail_tag>::type'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument type 'pair<type-parameter-0-2, type-parameter-0-3>'
| |   | |-TemplateTypeParmDecl 0x7fd300021fa8 <line:4719:11, col:17> col:17 referenced class depth 0 index 0 _Pair
| |   | |-TemplateTypeParmDecl 0x7fd300022018 <col:24, col:30> col:30 referenced class depth 0 index 1 _Key
| |   | |-TemplateTypeParmDecl 0x7fd300022088 <col:36, col:42> col:42 referenced class depth 0 index 2 _First
| |   | |-TemplateTypeParmDecl 0x7fd3000220f8 <col:50, col:56> col:56 referenced class depth 0 index 3 _Second
| |   | `-CXXRecordDecl 0x7fd300033e60 <line:4720:1, col:8> col:8 implicit struct __can_extract_key
| |   |-ClassTemplateDecl 0x7fd3000342c0 <line:4727:1, line:4730:65> line:4729:8 __can_extract_map_key
| |   | |-TemplateTypeParmDecl 0x7fd300033f18 <line:4727:11, col:17> col:17 referenced class depth 0 index 0 _ValTy
| |   | |-TemplateTypeParmDecl 0x7fd300033f88 <col:25, col:31> col:31 referenced class depth 0 index 1 _Key
| |   | |-TemplateTypeParmDecl 0x7fd300033ff8 <col:37, col:43> col:43 class depth 0 index 2 _ContainerValueTy
| |   | |-TemplateTypeParmDecl 0x7fd300034190 <line:4728:11, col:60> col:17 referenced class depth 0 index 3 _RawValTy
| |   | | `-TemplateArgument type 'typename __unconstref<_ValTy>::type'
| |   | `-CXXRecordDecl 0x7fd300034228 <line:4729:1, line:4730:65> line:4729:8 struct __can_extract_map_key definition
| |   |   |-public 'integral_constant<_Bool, is_same<_RawValTy, _Key>::value>'
| |   |   `-CXXRecordDecl 0x7fd300034908 <col:1, col:8> col:8 implicit struct __can_extract_map_key
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd300034d60 <line:4734:1, line:4736:19> line:4735:8 struct __can_extract_map_key definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument type 'type-parameter-0-2'
| |   | |-TemplateTypeParmDecl 0x7fd3000349c0 <line:4734:11, col:17> col:17 referenced class depth 0 index 0 _ValTy
| |   | |-TemplateTypeParmDecl 0x7fd300034a28 <col:25, col:31> col:31 referenced class depth 0 index 1 _Key
| |   | |-TemplateTypeParmDecl 0x7fd300034a98 <col:37, col:43> col:43 referenced class depth 0 index 2 _RawValTy
| |   | `-CXXRecordDecl 0x7fd3000350e0 <line:4735:1, col:8> col:8 implicit struct __can_extract_map_key
| |   `-VarDecl 0x7fd3018cdc78 parent 0x7fd301800d80 prev 0x7fd301801f50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:812:27, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:518:58> col:58 referenced value 'const _Bool':'const _Bool' constexpr
| |-NamespaceDecl 0x7fd300035198 prev 0x7fd3008296c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:438:37, line:439:38> line:438:47 std
| | |-original Namespace 0x7fd2ff865c58 'std'
| | `-NamespaceDecl 0x7fd300035200 prev 0x7fd300829730 <col:52, line:439:36> <scratch space>:432:1 __1 inline
| |   |-original Namespace 0x7fd2ff865cc0 '__1'
| |   |-EnumDecl 0x7fd300035268 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:125:1, line:132:1> line:125:6 referenced float_round_style
| |   | |-EnumConstantDecl 0x7fd300035360 <line:127:5, col:34> col:5 round_indeterminate 'enum std::__1::float_round_style'
| |   | | `-UnaryOperator 0x7fd300035340 <col:33, col:34> 'int' prefix '-'
| |   | |   `-IntegerLiteral 0x7fd300035320 <col:34> 'int' 1
| |   | |-EnumConstantDecl 0x7fd3000353c8 <line:128:5, col:34> col:5 referenced round_toward_zero 'enum std::__1::float_round_style'
| |   | | `-IntegerLiteral 0x7fd3000353a8 <col:34> 'int' 0
| |   | |-EnumConstantDecl 0x7fd300035430 <line:129:5, col:34> col:5 referenced round_to_nearest 'enum std::__1::float_round_style'
| |   | | `-IntegerLiteral 0x7fd300035410 <col:34> 'int' 1
| |   | |-EnumConstantDecl 0x7fd300035498 <line:130:5, col:34> col:5 round_toward_infinity 'enum std::__1::float_round_style'
| |   | | `-IntegerLiteral 0x7fd300035478 <col:34> 'int' 2
| |   | `-EnumConstantDecl 0x7fd300035500 <line:131:5, col:34> col:5 round_toward_neg_infinity 'enum std::__1::float_round_style'
| |   |   `-IntegerLiteral 0x7fd3000354e0 <col:34> 'int' 3
| |   |-EnumDecl 0x7fd300035548 <line:134:1, line:139:1> line:134:6 referenced float_denorm_style
| |   | |-EnumConstantDecl 0x7fd300035640 <line:136:5, col:29> col:5 denorm_indeterminate 'enum std::__1::float_denorm_style'
| |   | | `-UnaryOperator 0x7fd300035620 <col:28, col:29> 'int' prefix '-'
| |   | |   `-IntegerLiteral 0x7fd300035600 <col:29> 'int' 1
| |   | |-EnumConstantDecl 0x7fd3000356a8 <line:137:5, col:21> col:5 referenced denorm_absent 'enum std::__1::float_denorm_style'
| |   | | `-IntegerLiteral 0x7fd300035688 <col:21> 'int' 0
| |   | `-EnumConstantDecl 0x7fd300035710 <line:138:5, col:22> col:5 referenced denorm_present 'enum std::__1::float_denorm_style'
| |   |   `-IntegerLiteral 0x7fd3000356f0 <col:22> 'int' 1
| |   |-ClassTemplateDecl 0x7fd3000359f8 <line:141:1, line:184:1> line:142:7 __libcpp_numeric_limits
| |   | |-TemplateTypeParmDecl 0x7fd300035758 <line:141:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fd3000358e8 <col:22, col:49> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fd300035898 <col:29, col:49> '<dependent type>' lvalue
| |   | |-CXXRecordDecl 0x7fd300035960 <line:142:1, line:184:1> line:142:7 class __libcpp_numeric_limits definition
| |   | | |-CXXRecordDecl 0x7fd300038ef0 <col:1, col:7> col:7 implicit class __libcpp_numeric_limits
| |   | | |-AccessSpecDecl 0x7fd300038f88 <line:144:1, col:10> col:1 protected
| |   | | |-TypedefDecl 0x7fd300038fc0 <line:145:5, col:17> col:17 referenced type '_Tp'
| |   | | | `-TemplateTypeParmType 0x7fd3000357a0 '_Tp' dependent depth 0 index 0
| |   | | |   `-TemplateTypeParm 0x7fd300035758 '_Tp'
| |   | | |-VarDecl 0x7fd300039028 <line:147:5, col:59> col:42 is_specialized 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fd300039088 <col:59> '_Bool' false
| |   | | |-CXXMethodDecl 0x7fd3000391a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:148:92> col:61 constexpr min 'std::__1::__libcpp_numeric_limits::type (void) noexcept' static
| |   | | | |-CompoundStmt 0x7fd30003a998 <col:77, col:92>
| |   | | | | `-ReturnStmt 0x7fd30003a980 <col:78, col:90>
| |   | | | |   `-CXXUnresolvedConstructExpr 0x7fd30003a958 <col:85, col:90> 'std::__1::__libcpp_numeric_limits::type':'_Tp'
| |   | | | |-AlwaysInlineAttr 0x7fd300039240 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | | `-VisibilityAttr 0x7fd300039288 <col:51, col:74> Hidden
| |   | | |-CXXMethodDecl 0x7fd3000392f0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:149:92> col:61 constexpr max 'std::__1::__libcpp_numeric_limits::type (void) noexcept' static
| |   | | | |-CompoundStmt 0x7fd30003aa08 <col:77, col:92>
| |   | | | | `-ReturnStmt 0x7fd30003a9f0 <col:78, col:90>
| |   | | | |   `-CXXUnresolvedConstructExpr 0x7fd30003a9c8 <col:85, col:90> 'std::__1::__libcpp_numeric_limits::type':'_Tp'
| |   | | | |-AlwaysInlineAttr 0x7fd300039388 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | | `-VisibilityAttr 0x7fd3000393d0 <col:51, col:74> Hidden
| |   | | |-CXXMethodDecl 0x7fd300039438 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:150:95> col:61 constexpr lowest 'std::__1::__libcpp_numeric_limits::type (void) noexcept' static
| |   | | | |-CompoundStmt 0x7fd30003aa78 <col:80, col:95>
| |   | | | | `-ReturnStmt 0x7fd30003aa60 <col:81, col:93>
| |   | | | |   `-CXXUnresolvedConstructExpr 0x7fd30003aa38 <col:88, col:93> 'std::__1::__libcpp_numeric_limits::type':'_Tp'
| |   | | | |-AlwaysInlineAttr 0x7fd3000394d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | | `-VisibilityAttr 0x7fd300039518 <col:51, col:74> Hidden
| |   | | |-VarDecl 0x7fd300039540 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:152:5, col:50> col:41 digits 'const int' static constexpr cinit
| |   | | | `-IntegerLiteral 0x7fd3000395a0 <col:50> 'int' 0
| |   | | |-VarDecl 0x7fd3000395d8 <line:153:5, col:52> col:41 digits10 'const int' static constexpr cinit
| |   | | | `-IntegerLiteral 0x7fd300039638 <col:52> 'int' 0
| |   | | |-VarDecl 0x7fd300039670 <line:154:5, col:56> col:41 max_digits10 'const int' static constexpr cinit
| |   | | | `-IntegerLiteral 0x7fd3000396d0 <col:56> 'int' 0
| |   | | |-VarDecl 0x7fd300039700 <line:155:5, col:53> col:41 is_signed 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fd300039760 <col:53> '_Bool' false
| |   | | |-VarDecl 0x7fd300039788 <line:156:5, col:54> col:41 is_integer 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fd3000397e8 <col:54> '_Bool' false
| |   | | |-VarDecl 0x7fd300039810 <line:157:5, col:52> col:41 is_exact 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fd300039870 <col:52> '_Bool' false
| |   | | |-VarDecl 0x7fd3000398a0 <line:158:5, col:49> col:41 radix 'const int' static constexpr cinit
| |   | | | `-IntegerLiteral 0x7fd300039900 <col:49> 'int' 0
| |   | | |-CXXMethodDecl 0x7fd300039978 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:159:96> col:61 constexpr epsilon 'std::__1::__libcpp_numeric_limits::type (void) noexcept' static
| |   | | | |-CompoundStmt 0x7fd30003aae8 <col:81, col:96>
| |   | | | | `-ReturnStmt 0x7fd30003aad0 <col:82, col:94>
| |   | | | |   `-CXXUnresolvedConstructExpr 0x7fd30003aaa8 <col:89, col:94> 'std::__1::__libcpp_numeric_limits::type':'_Tp'
| |   | | | |-AlwaysInlineAttr 0x7fd300039a10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | | `-VisibilityAttr 0x7fd300039a58 <col:51, col:74> Hidden
| |   | | |-CXXMethodDecl 0x7fd300039ac0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:160:100> col:61 constexpr round_error 'std::__1::__libcpp_numeric_limits::type (void) noexcept' static
| |   | | | |-CompoundStmt 0x7fd30003ab58 <col:85, col:100>
| |   | | | | `-ReturnStmt 0x7fd30003ab40 <col:86, col:98>
| |   | | | |   `-CXXUnresolvedConstructExpr 0x7fd30003ab18 <col:93, col:98> 'std::__1::__libcpp_numeric_limits::type':'_Tp'
| |   | | | |-AlwaysInlineAttr 0x7fd300039b58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | | `-VisibilityAttr 0x7fd300039ba0 <col:51, col:74> Hidden
| |   | | |-VarDecl 0x7fd300039bc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:162:5, col:56> col:41 min_exponent 'const int' static constexpr cinit
| |   | | | `-IntegerLiteral 0x7fd300039c28 <col:56> 'int' 0
| |   | | |-VarDecl 0x7fd300039c60 <line:163:5, col:58> col:41 min_exponent10 'const int' static constexpr cinit
| |   | | | `-IntegerLiteral 0x7fd300039cc0 <col:58> 'int' 0
| |   | | |-VarDecl 0x7fd300039cf8 <line:164:5, col:56> col:41 max_exponent 'const int' static constexpr cinit
| |   | | | `-IntegerLiteral 0x7fd300039d58 <col:56> 'int' 0
| |   | | |-VarDecl 0x7fd300039d90 <line:165:5, col:58> col:41 max_exponent10 'const int' static constexpr cinit
| |   | | | `-IntegerLiteral 0x7fd300039df0 <col:58> 'int' 0
| |   | | |-VarDecl 0x7fd300039e20 <line:167:5, col:56> col:41 has_infinity 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fd300039e80 <col:56> '_Bool' false
| |   | | |-VarDecl 0x7fd300039ea8 <line:168:5, col:57> col:41 has_quiet_NaN 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fd300039f08 <col:57> '_Bool' false
| |   | | |-VarDecl 0x7fd300039f30 <line:169:5, col:61> col:41 has_signaling_NaN 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fd300039f90 <col:61> '_Bool' false
| |   | | |-VarDecl 0x7fd300039fb8 <line:170:5, col:68> col:55 has_denorm 'const enum std::__1::float_denorm_style' static constexpr cinit
| |   | | | `-DeclRefExpr 0x7fd30003a018 <col:68> 'enum std::__1::float_denorm_style' EnumConstant 0x7fd3000356a8 'denorm_absent' 'enum std::__1::float_denorm_style'
| |   | | |-VarDecl 0x7fd30003a050 <line:171:5, col:59> col:41 has_denorm_loss 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fd30003a0b0 <col:59> '_Bool' false
| |   | | |-CXXMethodDecl 0x7fd30003a120 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:172:97> col:61 constexpr infinity 'std::__1::__libcpp_numeric_limits::type (void) noexcept' static
| |   | | | |-CompoundStmt 0x7fd30003abc8 <col:82, col:97>
| |   | | | | `-ReturnStmt 0x7fd30003abb0 <col:83, col:95>
| |   | | | |   `-CXXUnresolvedConstructExpr 0x7fd30003ab88 <col:90, col:95> 'std::__1::__libcpp_numeric_limits::type':'_Tp'
| |   | | | |-AlwaysInlineAttr 0x7fd30003a1b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | | `-VisibilityAttr 0x7fd30003a200 <col:51, col:74> Hidden
| |   | | |-CXXMethodDecl 0x7fd30003a268 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:173:98> col:61 constexpr quiet_NaN 'std::__1::__libcpp_numeric_limits::type (void) noexcept' static
| |   | | | |-CompoundStmt 0x7fd30003ac38 <col:83, col:98>
| |   | | | | `-ReturnStmt 0x7fd30003ac20 <col:84, col:96>
| |   | | | |   `-CXXUnresolvedConstructExpr 0x7fd30003abf8 <col:91, col:96> 'std::__1::__libcpp_numeric_limits::type':'_Tp'
| |   | | | |-AlwaysInlineAttr 0x7fd30003a300 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | | `-VisibilityAttr 0x7fd30003a348 <col:51, col:74> Hidden
| |   | | |-CXXMethodDecl 0x7fd30003a3b0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:174:102> col:61 constexpr signaling_NaN 'std::__1::__libcpp_numeric_limits::type (void) noexcept' static
| |   | | | |-CompoundStmt 0x7fd30003aca8 <col:87, col:102>
| |   | | | | `-ReturnStmt 0x7fd30003ac90 <col:88, col:100>
| |   | | | |   `-CXXUnresolvedConstructExpr 0x7fd30003ac68 <col:95, col:100> 'std::__1::__libcpp_numeric_limits::type':'_Tp'
| |   | | | |-AlwaysInlineAttr 0x7fd30003a448 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | | `-VisibilityAttr 0x7fd30003a490 <col:51, col:74> Hidden
| |   | | |-CXXMethodDecl 0x7fd30003a4f8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:175:99> col:61 constexpr denorm_min 'std::__1::__libcpp_numeric_limits::type (void) noexcept' static
| |   | | | |-CompoundStmt 0x7fd30003ad18 <col:84, col:99>
| |   | | | | `-ReturnStmt 0x7fd30003ad00 <col:85, col:97>
| |   | | | |   `-CXXUnresolvedConstructExpr 0x7fd30003acd8 <col:92, col:97> 'std::__1::__libcpp_numeric_limits::type':'_Tp'
| |   | | | |-AlwaysInlineAttr 0x7fd30003a590 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | | `-VisibilityAttr 0x7fd30003a5d8 <col:51, col:74> Hidden
| |   | | |-VarDecl 0x7fd30003a5f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:177:5, col:53> col:41 is_iec559 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fd30003a658 <col:53> '_Bool' false
| |   | | |-VarDecl 0x7fd30003a680 <line:178:5, col:54> col:41 is_bounded 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fd30003a6e0 <col:54> '_Bool' false
| |   | | |-VarDecl 0x7fd30003a708 <line:179:5, col:53> col:41 is_modulo 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fd30003a768 <col:53> '_Bool' false
| |   | | |-VarDecl 0x7fd30003a790 <line:181:5, col:49> col:41 traps 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fd30003a7f0 <col:49> '_Bool' false
| |   | | |-VarDecl 0x7fd30003a818 <line:182:5, col:59> col:41 tinyness_before 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fd30003a878 <col:59> '_Bool' false
| |   | | `-VarDecl 0x7fd30003a8a0 <line:183:5, col:68> col:54 round_style 'const enum std::__1::float_round_style' static constexpr cinit
| |   | |   `-DeclRefExpr 0x7fd30003a900 <col:68> 'enum std::__1::float_round_style' EnumConstant 0x7fd3000353c8 'round_toward_zero' 'enum std::__1::float_round_style'
| |   | |-ClassTemplateSpecialization 0x7fd3000571e0 '__libcpp_numeric_limits'
| |   | |-ClassTemplateSpecialization 0x7fd300059e80 '__libcpp_numeric_limits'
| |   | |-ClassTemplateSpecialization 0x7fd30005cf60 '__libcpp_numeric_limits'
| |   | `-ClassTemplateSpecialization 0x7fd300060090 '__libcpp_numeric_limits'
| |   |-ClassTemplateDecl 0x7fd30003b780 <line:186:1, line:190:1> line:187:8 __libcpp_compute_min
| |   | |-TemplateTypeParmDecl 0x7fd30003ad38 <line:186:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fd30003b600 <col:22, col:26> col:26 referenced 'int' depth 0 index 1 __digits
| |   | |-NonTypeTemplateParmDecl 0x7fd30003b668 <col:36, col:41> col:41 '_Bool' depth 0 index 2 _IsSigned
| |   | `-CXXRecordDecl 0x7fd30003b6e8 <line:187:1, line:190:1> line:187:8 struct __libcpp_compute_min definition
| |   |   |-CXXRecordDecl 0x7fd30003bab0 <col:1, col:8> col:8 implicit struct __libcpp_compute_min
| |   |   `-VarDecl 0x7fd30003bb58 <line:189:5, col:70> col:40 value 'const _Tp' static constexpr cinit
| |   |     `-CXXUnresolvedConstructExpr 0x7fd30003bc78 <col:48, col:70> '_Tp'
| |   |       `-BinaryOperator 0x7fd30003bc50 <col:52, col:62> '<dependent type>' '<<'
| |   |         |-CXXUnresolvedConstructExpr 0x7fd30003bbf8 <col:52, col:57> '_Tp'
| |   |         | `-IntegerLiteral 0x7fd30003bbd8 <col:56> 'int' 1
| |   |         `-DeclRefExpr 0x7fd30003bc28 <col:62> 'int' NonTypeTemplateParm 0x7fd30003b600 '__digits' 'int'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd30003bfb8 <line:192:1, line:196:1> line:193:8 struct __libcpp_compute_min definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fd30003bdd8 <col:34> 'int' NonTypeTemplateParm 0x7fd30003bd50 '__digits' 'int'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fd30003bcc8 <line:192:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fd30003bd50 <col:22, col:26> col:26 referenced 'int' depth 0 index 1 __digits
| |   | |-CXXRecordDecl 0x7fd30003c290 <line:193:1, col:8> col:8 implicit struct __libcpp_compute_min
| |   | `-VarDecl 0x7fd30003c338 <line:195:5, col:53> col:40 value 'const _Tp' static constexpr cinit
| |   |   `-CXXUnresolvedConstructExpr 0x7fd30003c3c8 <col:48, col:53> '_Tp'
| |   |     `-IntegerLiteral 0x7fd30003c3a8 <col:52> 'int' 0
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd30003c600 <line:198:1, line:249:1> line:199:7 class __libcpp_numeric_limits definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fd30003c418 <line:198:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fd30003c890 <line:199:1, col:7> col:7 implicit class __libcpp_numeric_limits
| |   | |-AccessSpecDecl 0x7fd30003c928 <line:201:1, col:10> col:1 protected
| |   | |-TypedefDecl 0x7fd30003c960 <line:202:5, col:17> col:17 referenced type '_Tp'
| |   | | `-TemplateTypeParmType 0x7fd30003c460 '_Tp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fd30003c418 '_Tp'
| |   | |-VarDecl 0x7fd30003c9c8 <line:204:5, col:58> col:41 is_specialized 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd30003ca28 <col:58> '_Bool' true
| |   | |-VarDecl 0x7fd30003ca50 <line:206:5, col:70> col:41 referenced is_signed 'const _Bool' static constexpr cinit
| |   | | `-BinaryOperator 0x7fd30003cbb0 <col:53, col:70> '<dependent type>' '<'
| |   | |   |-CXXUnresolvedConstructExpr 0x7fd30003cb20 <col:53, col:60> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | |   | `-UnaryOperator 0x7fd30003cb00 <col:58, col:59> 'int' prefix '-'
| |   | |   |   `-IntegerLiteral 0x7fd30003cae0 <col:59> 'int' 1
| |   | |   `-CXXUnresolvedConstructExpr 0x7fd30003cb80 <col:64, col:70> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | |     `-IntegerLiteral 0x7fd30003cb60 <col:69> 'int' 0
| |   | |-VarDecl 0x7fd30003cbf0 <line:207:5, col:106> col:41 referenced digits 'const int' static constexpr cinit
| |   | | `-CXXStaticCastExpr 0x7fd30003cd90 <col:50, col:106> 'int' static_cast<int> <NoOp>
| |   | |   `-ImplicitCastExpr 0x7fd30003cd78 <col:67, col:97> 'int' <IntegralCast>
| |   | |     `-BinaryOperator 0x7fd30003cd38 <col:67, col:97> 'unsigned long' '-'
| |   | |       |-BinaryOperator 0x7fd30003ccb8 <col:67, <built-in>:66:22> 'unsigned long' '*'
| |   | |       | |-UnaryExprOrTypeTraitExpr 0x7fd30003cc60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:207:67, col:78> 'unsigned long' sizeof 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | |       | `-ImplicitCastExpr 0x7fd30003cca0 <<built-in>:66:22> 'unsigned long' <IntegralCast>
| |   | |       |   `-IntegerLiteral 0x7fd30003cc80 <col:22> 'int' 8
| |   | |       `-ImplicitCastExpr 0x7fd30003cd20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:207:97> 'unsigned long' <IntegralCast>
| |   | |         `-ImplicitCastExpr 0x7fd30003cd08 <col:97> '_Bool' <LValueToRValue>
| |   | |           `-DeclRefExpr 0x7fd30003cce0 <col:97> 'const _Bool' lvalue Var 0x7fd30003ca50 'is_signed' 'const _Bool'
| |   | |-VarDecl 0x7fd30003cdd8 <line:208:5, col:65> col:41 digits10 'const int' static constexpr cinit
| |   | | `-BinaryOperator 0x7fd30003cee0 <col:52, col:65> 'int' '/'
| |   | |   |-BinaryOperator 0x7fd30003ce98 <col:52, col:61> 'int' '*'
| |   | |   | |-ImplicitCastExpr 0x7fd30003ce80 <col:52> 'int' <LValueToRValue>
| |   | |   | | `-DeclRefExpr 0x7fd30003ce38 <col:52> 'const int' lvalue Var 0x7fd30003cbf0 'digits' 'const int'
| |   | |   | `-IntegerLiteral 0x7fd30003ce60 <col:61> 'int' 3
| |   | |   `-IntegerLiteral 0x7fd30003cec0 <col:65> 'int' 10
| |   | |-VarDecl 0x7fd30003cf20 <line:209:5, col:56> col:41 max_digits10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fd30003cf80 <col:56> 'int' 0
| |   | |-VarDecl 0x7fd30003cfb0 <line:210:5, col:96> col:41 referenced __min 'const std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'const _Tp' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd30003d238 <col:49, col:96> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd30003d288 <line:211:5, col:93> col:41 referenced __max 'const std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'const _Tp' static constexpr cinit
| |   | | `-ConditionalOperator 0x7fd30003d4b8 <col:49, col:93> '<dependent type>'
| |   | |   |-ImplicitCastExpr 0x7fd30003d4a0 <col:49> '_Bool' <LValueToRValue>
| |   | |   | `-DeclRefExpr 0x7fd30003d2e8 <col:49> 'const _Bool' lvalue Var 0x7fd30003ca50 'is_signed' 'const _Bool'
| |   | |   |-CXXUnresolvedConstructExpr 0x7fd30003d3f0 <col:61, col:82> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | |   | `-BinaryOperator 0x7fd30003d3c8 <col:66, col:77> '<dependent type>' '^'
| |   | |   |   |-CXXUnresolvedConstructExpr 0x7fd30003d370 <col:66, col:73> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | |   |   | `-UnaryOperator 0x7fd30003d350 <col:71, col:72> 'int' prefix '~'
| |   | |   |   |   `-IntegerLiteral 0x7fd30003d330 <col:72> 'int' 0
| |   | |   |   `-DeclRefExpr 0x7fd30003d3a0 <col:77> 'const std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'const _Tp' lvalue Var 0x7fd30003cfb0 '__min' 'const std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'const _Tp'
| |   | |   `-CXXUnresolvedConstructExpr 0x7fd30003d470 <col:86, col:93> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | |     `-UnaryOperator 0x7fd30003d450 <col:91, col:92> 'int' prefix '~'
| |   | |       `-IntegerLiteral 0x7fd30003d430 <col:92> 'int' 0
| |   | |-CXXMethodDecl 0x7fd300055600 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:212:91> col:61 referenced constexpr min 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd300056d10 <col:77, col:91>
| |   | | | `-ReturnStmt 0x7fd300056cf8 <col:78, col:85>
| |   | | |   `-DeclRefExpr 0x7fd300056cd0 <col:85> 'const std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'const _Tp' lvalue Var 0x7fd30003cfb0 '__min' 'const std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'const _Tp'
| |   | | |-AlwaysInlineAttr 0x7fd300055698 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd3000556e0 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd300055748 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:213:91> col:61 constexpr max 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd300056d70 <col:77, col:91>
| |   | | | `-ReturnStmt 0x7fd300056d58 <col:78, col:85>
| |   | | |   `-DeclRefExpr 0x7fd300056d30 <col:85> 'const std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'const _Tp' lvalue Var 0x7fd30003d288 '__max' 'const std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'const _Tp'
| |   | | |-AlwaysInlineAttr 0x7fd3000557e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd300055828 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd300055890 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:214:94> col:61 constexpr lowest 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd300056df8 <col:80, col:94>
| |   | | | `-ReturnStmt 0x7fd300056de0 <col:81, col:92>
| |   | | |   `-CallExpr 0x7fd300056db8 <col:88, col:92> '<dependent type>'
| |   | | |     `-DeclRefExpr 0x7fd300056d90 <col:88> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept' lvalue CXXMethod 0x7fd300055600 'min' 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept'
| |   | | |-AlwaysInlineAttr 0x7fd300055928 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd300055970 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fd300055990 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:216:5, col:54> col:41 is_integer 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd3000559f0 <col:54> '_Bool' true
| |   | |-VarDecl 0x7fd300055a18 <line:217:5, col:52> col:41 is_exact 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd300055a78 <col:52> '_Bool' true
| |   | |-VarDecl 0x7fd300055aa8 <line:218:5, col:49> col:41 radix 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fd300055b08 <col:49> 'int' 2
| |   | |-CXXMethodDecl 0x7fd300055b80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:219:97> col:61 constexpr epsilon 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd300056e90 <col:81, col:97>
| |   | | | `-ReturnStmt 0x7fd300056e78 <col:82, col:95>
| |   | | |   `-CXXUnresolvedConstructExpr 0x7fd300056e48 <col:89, col:95> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | | |     `-IntegerLiteral 0x7fd300056e28 <col:94> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7fd300055c18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd300055c60 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd300055cc8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:220:101> col:61 constexpr round_error 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd300056f28 <col:85, col:101>
| |   | | | `-ReturnStmt 0x7fd300056f10 <col:86, col:99>
| |   | | |   `-CXXUnresolvedConstructExpr 0x7fd300056ee0 <col:93, col:99> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | | |     `-IntegerLiteral 0x7fd300056ec0 <col:98> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7fd300055d60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd300055da8 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fd300055dd0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:222:5, col:56> col:41 min_exponent 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fd300055e30 <col:56> 'int' 0
| |   | |-VarDecl 0x7fd300055e68 <line:223:5, col:58> col:41 min_exponent10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fd300055ec8 <col:58> 'int' 0
| |   | |-VarDecl 0x7fd300055f00 <line:224:5, col:56> col:41 max_exponent 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fd300055f60 <col:56> 'int' 0
| |   | |-VarDecl 0x7fd300055f98 <line:225:5, col:58> col:41 max_exponent10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fd300055ff8 <col:58> 'int' 0
| |   | |-VarDecl 0x7fd300056028 <line:227:5, col:56> col:41 has_infinity 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd300056088 <col:56> '_Bool' false
| |   | |-VarDecl 0x7fd3000560b0 <line:228:5, col:57> col:41 has_quiet_NaN 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd300056110 <col:57> '_Bool' false
| |   | |-VarDecl 0x7fd300056138 <line:229:5, col:61> col:41 has_signaling_NaN 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd300056198 <col:61> '_Bool' false
| |   | |-VarDecl 0x7fd3000561c0 <line:230:5, col:68> col:55 has_denorm 'const enum std::__1::float_denorm_style' static constexpr cinit
| |   | | `-DeclRefExpr 0x7fd300056220 <col:68> 'enum std::__1::float_denorm_style' EnumConstant 0x7fd3000356a8 'denorm_absent' 'enum std::__1::float_denorm_style'
| |   | |-VarDecl 0x7fd300056258 <line:231:5, col:59> col:41 has_denorm_loss 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd3000562b8 <col:59> '_Bool' false
| |   | |-CXXMethodDecl 0x7fd300056328 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:232:98> col:61 constexpr infinity 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd300056fc0 <col:82, col:98>
| |   | | | `-ReturnStmt 0x7fd300056fa8 <col:83, col:96>
| |   | | |   `-CXXUnresolvedConstructExpr 0x7fd300056f78 <col:90, col:96> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | | |     `-IntegerLiteral 0x7fd300056f58 <col:95> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7fd3000563c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd300056408 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd300056470 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:233:99> col:61 constexpr quiet_NaN 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd300057058 <col:83, col:99>
| |   | | | `-ReturnStmt 0x7fd300057040 <col:84, col:97>
| |   | | |   `-CXXUnresolvedConstructExpr 0x7fd300057010 <col:91, col:97> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | | |     `-IntegerLiteral 0x7fd300056ff0 <col:96> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7fd300056508 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd300056550 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd3000565b8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:234:103> col:61 constexpr signaling_NaN 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd3000570f0 <col:87, col:103>
| |   | | | `-ReturnStmt 0x7fd3000570d8 <col:88, col:101>
| |   | | |   `-CXXUnresolvedConstructExpr 0x7fd3000570a8 <col:95, col:101> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | | |     `-IntegerLiteral 0x7fd300057088 <col:100> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7fd300056650 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd300056698 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd300056700 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:235:100> col:61 constexpr denorm_min 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd300057188 <col:84, col:100>
| |   | | | `-ReturnStmt 0x7fd300057170 <col:85, col:98>
| |   | | |   `-CXXUnresolvedConstructExpr 0x7fd300057140 <col:92, col:98> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | | |     `-IntegerLiteral 0x7fd300057120 <col:97> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7fd300056798 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd3000567e0 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fd300056800 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:237:5, col:53> col:41 is_iec559 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd300056860 <col:53> '_Bool' false
| |   | |-VarDecl 0x7fd300056888 <line:238:5, col:54> col:41 is_bounded 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd3000568e8 <col:54> '_Bool' true
| |   | |-VarDecl 0x7fd300056910 <line:239:5, col:77> col:41 is_modulo 'const _Bool' static constexpr cinit
| |   | | `-UnaryOperator 0x7fd300056ae8 <col:53, col:77> '<dependent type>' prefix '!'
| |   | |   `-DependentScopeDeclRefExpr 0x7fd300056aa8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:239:77> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd300056b18 <line:243:5, col:49> col:41 traps 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd300056b78 <col:49> '_Bool' true
| |   | |-VarDecl 0x7fd300056ba0 <line:247:5, col:59> col:41 tinyness_before 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd300056c00 <col:59> '_Bool' false
| |   | `-VarDecl 0x7fd300056c28 <line:248:5, col:68> col:54 round_style 'const enum std::__1::float_round_style' static constexpr cinit
| |   |   `-DeclRefExpr 0x7fd300056c88 <col:68> 'enum std::__1::float_round_style' EnumConstant 0x7fd3000353c8 'round_toward_zero' 'enum std::__1::float_round_style'
| |   |-ClassTemplateSpecializationDecl 0x7fd3000571e0 <line:251:1, line:297:1> line:252:7 class __libcpp_numeric_limits definition
| |   | |-TemplateArgument type '_Bool'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fd300057450 <col:1, col:7> col:7 implicit class __libcpp_numeric_limits
| |   | |-AccessSpecDecl 0x7fd3000574e8 <line:254:1, col:10> col:1 protected
| |   | |-TypedefDecl 0x7fd300057520 <line:255:5, col:18> col:18 referenced type '_Bool'
| |   | | `-BuiltinType 0x7fd2ff832740 '_Bool'
| |   | |-VarDecl 0x7fd300057588 <line:257:5, col:58> col:41 is_specialized 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd3000575e8 <col:58> '_Bool' true
| |   | |-VarDecl 0x7fd300057668 <line:259:5, col:53> col:41 is_signed 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd3000576c8 <col:53> '_Bool' false
| |   | |-VarDecl 0x7fd300057750 <line:260:5, col:50> col:41 digits 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fd3000577b0 <col:50> 'int' 1
| |   | |-VarDecl 0x7fd300057840 <line:261:5, col:52> col:41 digits10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fd3000578a0 <col:52> 'int' 0
| |   | |-VarDecl 0x7fd300057930 <line:262:5, col:56> col:41 max_digits10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fd300057990 <col:56> 'int' 0
| |   | |-VarDecl 0x7fd300057a40 <line:263:5, col:49> col:41 referenced __min 'const std::__1::__libcpp_numeric_limits<_Bool, true>::type':'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd300057aa0 <col:49> '_Bool' false
| |   | |-VarDecl 0x7fd300057b20 <line:264:5, col:49> col:41 referenced __max 'const std::__1::__libcpp_numeric_limits<_Bool, true>::type':'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd300057b80 <col:49> '_Bool' true
| |   | |-CXXMethodDecl 0x7fd300057cd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:265:91> col:61 used constexpr min 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd3000598b8 <col:77, col:91>
| |   | | | `-ReturnStmt 0x7fd3000598a0 <col:78, col:85>
| |   | | |   `-ImplicitCastExpr 0x7fd300059888 <col:85> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type':'_Bool' <LValueToRValue>
| |   | | |     `-DeclRefExpr 0x7fd300059860 <col:85> 'const std::__1::__libcpp_numeric_limits<_Bool, true>::type':'const _Bool' lvalue Var 0x7fd300057a40 '__min' 'const std::__1::__libcpp_numeric_limits<_Bool, true>::type':'const _Bool'
| |   | | |-AlwaysInlineAttr 0x7fd300057d70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd300057db8 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd300057e20 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:266:91> col:61 constexpr max 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd300059930 <col:77, col:91>
| |   | | | `-ReturnStmt 0x7fd300059918 <col:78, col:85>
| |   | | |   `-ImplicitCastExpr 0x7fd300059900 <col:85> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type':'_Bool' <LValueToRValue>
| |   | | |     `-DeclRefExpr 0x7fd3000598d8 <col:85> 'const std::__1::__libcpp_numeric_limits<_Bool, true>::type':'const _Bool' lvalue Var 0x7fd300057b20 '__max' 'const std::__1::__libcpp_numeric_limits<_Bool, true>::type':'const _Bool'
| |   | | |-AlwaysInlineAttr 0x7fd300057eb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd300057f00 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd300057f68 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:267:94> col:61 constexpr lowest 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd300059a30 <col:80, col:94>
| |   | | | `-ReturnStmt 0x7fd300059a18 <col:81, col:92>
| |   | | |   `-CallExpr 0x7fd3000599f0 <col:88, col:92> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type':'_Bool'
| |   | | |     `-ImplicitCastExpr 0x7fd3000599d8 <col:88> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (*)(void) noexcept' <FunctionToPointerDecay>
| |   | | |       `-DeclRefExpr 0x7fd300059950 <col:88> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept' lvalue CXXMethod 0x7fd300057cd8 'min' 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept'
| |   | | |-AlwaysInlineAttr 0x7fd300058000 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd300058048 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fd300058068 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:269:5, col:54> col:41 is_integer 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd3000580c8 <col:54> '_Bool' true
| |   | |-VarDecl 0x7fd300058148 <line:270:5, col:52> col:41 is_exact 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd3000581a8 <col:52> '_Bool' true
| |   | |-VarDecl 0x7fd300058230 <line:271:5, col:49> col:41 radix 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fd300058290 <col:49> 'int' 2
| |   | |-CXXMethodDecl 0x7fd300058360 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:272:97> col:61 constexpr epsilon 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd300059ad8 <col:81, col:97>
| |   | | | `-ReturnStmt 0x7fd300059ac0 <col:82, col:95>
| |   | | |   `-CXXFunctionalCastExpr 0x7fd300059a98 <col:89, col:95> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type':'_Bool' functional cast to std::__1::__libcpp_numeric_limits<_Bool, true>::type <NoOp>
| |   | | |     `-ImplicitCastExpr 0x7fd300059a80 <col:94> '_Bool' <IntegralToBoolean>
| |   | | |       `-IntegerLiteral 0x7fd300059a60 <col:94> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7fd3000583f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd300058440 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd3000584a8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:273:101> col:61 constexpr round_error 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd300059b80 <col:85, col:101>
| |   | | | `-ReturnStmt 0x7fd300059b68 <col:86, col:99>
| |   | | |   `-CXXFunctionalCastExpr 0x7fd300059b40 <col:93, col:99> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type':'_Bool' functional cast to std::__1::__libcpp_numeric_limits<_Bool, true>::type <NoOp>
| |   | | |     `-ImplicitCastExpr 0x7fd300059b28 <col:98> '_Bool' <IntegralToBoolean>
| |   | | |       `-IntegerLiteral 0x7fd300059b08 <col:98> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7fd300058540 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd300058588 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fd3000585b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:275:5, col:56> col:41 min_exponent 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fd300058610 <col:56> 'int' 0
| |   | |-VarDecl 0x7fd3000586a0 <line:276:5, col:58> col:41 min_exponent10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fd300058700 <col:58> 'int' 0
| |   | |-VarDecl 0x7fd300058790 <line:277:5, col:56> col:41 max_exponent 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fd3000587f0 <col:56> 'int' 0
| |   | |-VarDecl 0x7fd300058880 <line:278:5, col:58> col:41 max_exponent10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fd3000588e0 <col:58> 'int' 0
| |   | |-VarDecl 0x7fd300058968 <line:280:5, col:56> col:41 has_infinity 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd3000589c8 <col:56> '_Bool' false
| |   | |-VarDecl 0x7fd300058a48 <line:281:5, col:57> col:41 has_quiet_NaN 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd300058aa8 <col:57> '_Bool' false
| |   | |-VarDecl 0x7fd300058b28 <line:282:5, col:61> col:41 has_signaling_NaN 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd300058b88 <col:61> '_Bool' false
| |   | |-VarDecl 0x7fd300058c08 <line:283:5, col:68> col:55 has_denorm 'const enum std::__1::float_denorm_style' static constexpr cinit
| |   | | `-DeclRefExpr 0x7fd300058c68 <col:68> 'enum std::__1::float_denorm_style' EnumConstant 0x7fd3000356a8 'denorm_absent' 'enum std::__1::float_denorm_style'
| |   | |-VarDecl 0x7fd300058cf8 <line:284:5, col:59> col:41 has_denorm_loss 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd300058d58 <col:59> '_Bool' false
| |   | |-CXXMethodDecl 0x7fd300058e20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:285:98> col:61 constexpr infinity 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd300059c28 <col:82, col:98>
| |   | | | `-ReturnStmt 0x7fd300059c10 <col:83, col:96>
| |   | | |   `-CXXFunctionalCastExpr 0x7fd300059be8 <col:90, col:96> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type':'_Bool' functional cast to std::__1::__libcpp_numeric_limits<_Bool, true>::type <NoOp>
| |   | | |     `-ImplicitCastExpr 0x7fd300059bd0 <col:95> '_Bool' <IntegralToBoolean>
| |   | | |       `-IntegerLiteral 0x7fd300059bb0 <col:95> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7fd300058eb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd300058f00 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd300058f68 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:286:99> col:61 constexpr quiet_NaN 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd300059cd0 <col:83, col:99>
| |   | | | `-ReturnStmt 0x7fd300059cb8 <col:84, col:97>
| |   | | |   `-CXXFunctionalCastExpr 0x7fd300059c90 <col:91, col:97> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type':'_Bool' functional cast to std::__1::__libcpp_numeric_limits<_Bool, true>::type <NoOp>
| |   | | |     `-ImplicitCastExpr 0x7fd300059c78 <col:96> '_Bool' <IntegralToBoolean>
| |   | | |       `-IntegerLiteral 0x7fd300059c58 <col:96> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7fd300059000 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd300059048 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd3000590b0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:287:103> col:61 constexpr signaling_NaN 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd300059d78 <col:87, col:103>
| |   | | | `-ReturnStmt 0x7fd300059d60 <col:88, col:101>
| |   | | |   `-CXXFunctionalCastExpr 0x7fd300059d38 <col:95, col:101> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type':'_Bool' functional cast to std::__1::__libcpp_numeric_limits<_Bool, true>::type <NoOp>
| |   | | |     `-ImplicitCastExpr 0x7fd300059d20 <col:100> '_Bool' <IntegralToBoolean>
| |   | | |       `-IntegerLiteral 0x7fd300059d00 <col:100> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7fd300059148 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd300059190 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd3000591f8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:288:100> col:61 constexpr denorm_min 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd300059e20 <col:84, col:100>
| |   | | | `-ReturnStmt 0x7fd300059e08 <col:85, col:98>
| |   | | |   `-CXXFunctionalCastExpr 0x7fd300059de0 <col:92, col:98> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type':'_Bool' functional cast to std::__1::__libcpp_numeric_limits<_Bool, true>::type <NoOp>
| |   | | |     `-ImplicitCastExpr 0x7fd300059dc8 <col:97> '_Bool' <IntegralToBoolean>
| |   | | |       `-IntegerLiteral 0x7fd300059da8 <col:97> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7fd300059290 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd3000592d8 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fd3000592f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:290:5, col:53> col:41 is_iec559 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd300059358 <col:53> '_Bool' false
| |   | |-VarDecl 0x7fd3000593d8 <line:291:5, col:54> col:41 is_bounded 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd300059438 <col:54> '_Bool' true
| |   | |-VarDecl 0x7fd3000594b8 <line:292:5, col:53> col:41 is_modulo 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd300059518 <col:53> '_Bool' false
| |   | |-VarDecl 0x7fd300059598 <line:294:5, col:49> col:41 traps 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd300059600 <col:49> '_Bool' false
| |   | |-VarDecl 0x7fd300059680 <line:295:5, col:59> col:41 tinyness_before 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd3000596e0 <col:59> '_Bool' false
| |   | `-VarDecl 0x7fd300059760 <line:296:5, col:68> col:54 round_style 'const enum std::__1::float_round_style' static constexpr cinit
| |   |   `-DeclRefExpr 0x7fd3000597c0 <col:68> 'enum std::__1::float_round_style' EnumConstant 0x7fd3000353c8 'round_toward_zero' 'enum std::__1::float_round_style'
| |   |-ClassTemplateSpecializationDecl 0x7fd300059e80 <line:299:1, line:343:1> line:300:7 class __libcpp_numeric_limits definition
| |   | |-TemplateArgument type 'float'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fd30005a0f0 <col:1, col:7> col:7 implicit class __libcpp_numeric_limits
| |   | |-AccessSpecDecl 0x7fd30005a188 <line:302:1, col:10> col:1 protected
| |   | |-TypedefDecl 0x7fd30005a1c8 <line:303:5, col:19> col:19 referenced type 'float'
| |   | | `-BuiltinType 0x7fd2ff8328c0 'float'
| |   | |-VarDecl 0x7fd30005a230 <line:305:5, col:58> col:41 is_specialized 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd30005a290 <col:58> '_Bool' true
| |   | |-VarDecl 0x7fd30005a310 <line:307:5, col:53> col:41 is_signed 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd30005a370 <col:53> '_Bool' true
| |   | |-VarDecl 0x7fd30005a3f8 <line:308:5, <built-in>:139:26> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:308:41 referenced digits 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fd30005a458 <<built-in>:139:26> 'int' 24
| |   | |-VarDecl 0x7fd30005a4e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:309:5, <built-in>:134:21> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:309:41 digits10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fd30005a548 <<built-in>:134:21> 'int' 6
| |   | |-VarDecl 0x7fd30005a5d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:310:5, col:76> col:41 max_digits10 'const int' static constexpr cinit
| |   | | `-ImplicitCastExpr 0x7fd30005a7a0 <col:56, col:76> 'const int' <IntegralCast>
| |   | |   `-BinaryOperator 0x7fd30005a778 <col:56, col:76> 'long' '+'
| |   | |     |-ImplicitCastExpr 0x7fd30005a760 <col:56> 'long' <IntegralCast>
| |   | |     | `-IntegerLiteral 0x7fd30005a638 <col:56> 'int' 2
| |   | |     `-BinaryOperator 0x7fd30005a738 <col:58, col:76> 'long' '/'
| |   | |       |-ParenExpr 0x7fd30005a6f8 <col:58, col:74> 'long'
| |   | |       | `-BinaryOperator 0x7fd30005a6d0 <col:59, col:68> 'long' '*'
| |   | |       |   |-ImplicitCastExpr 0x7fd30005a6b8 <col:59> 'long' <IntegralCast>
| |   | |       |   | `-ImplicitCastExpr 0x7fd30005a6a0 <col:59> 'int' <LValueToRValue>
| |   | |       |   |   `-DeclRefExpr 0x7fd30005a658 <col:59> 'const int' lvalue Var 0x7fd30005a3f8 'digits' 'const int'
| |   | |       |   `-IntegerLiteral 0x7fd30005a680 <col:68> 'long' 30103
| |   | |       `-IntegerLiteral 0x7fd30005a718 <col:76> 'long' 100000
| |   | |-CXXMethodDecl 0x7fd30005a8e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:311:97> col:61 constexpr min 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd30005c528 <col:77, col:97>
| |   | | | `-ReturnStmt 0x7fd30005c510 <col:78, <built-in>:145:21>
| |   | | |   `-FloatingLiteral 0x7fd30005c4f0 <col:21> 'float' 1.175494e-38
| |   | | |-AlwaysInlineAttr 0x7fd30005a980 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd30005a9c8 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd30005aa30 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:312:97> col:61 used constexpr max 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd30005c580 <col:77, col:97>
| |   | | | `-ReturnStmt 0x7fd30005c568 <col:78, <built-in>:142:21>
| |   | | |   `-FloatingLiteral 0x7fd30005c548 <col:21> 'float' 3.402823e+38
| |   | | |-AlwaysInlineAttr 0x7fd30005aac8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd30005ab10 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd30005ab78 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:313:95> col:61 constexpr lowest 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd30005c670 <col:80, col:95>
| |   | | | `-ReturnStmt 0x7fd30005c658 <col:81, col:93>
| |   | | |   `-UnaryOperator 0x7fd30005c638 <col:88, col:93> 'std::__1::__libcpp_numeric_limits<float, true>::type':'float' prefix '-'
| |   | | |     `-CallExpr 0x7fd30005c610 <col:89, col:93> 'std::__1::__libcpp_numeric_limits<float, true>::type':'float'
| |   | | |       `-ImplicitCastExpr 0x7fd30005c5f8 <col:89> 'std::__1::__libcpp_numeric_limits<float, true>::type (*)(void) noexcept' <FunctionToPointerDecay>
| |   | | |         `-DeclRefExpr 0x7fd30005c5a0 <col:89> 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept' lvalue CXXMethod 0x7fd30005aa30 'max' 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept'
| |   | | |-AlwaysInlineAttr 0x7fd30005ac10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd30005ac58 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fd30005ac78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:315:5, col:54> col:41 is_integer 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd30005acd8 <col:54> '_Bool' false
| |   | |-VarDecl 0x7fd30005ad58 <line:316:5, col:52> col:41 is_exact 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd30005adb8 <col:52> '_Bool' false
| |   | |-VarDecl 0x7fd30005ae40 <line:317:5, <built-in>:332:23> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:317:41 radix 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fd30005aea0 <<built-in>:332:23> 'int' 2
| |   | |-CXXMethodDecl 0x7fd30005af70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:318:105> col:61 constexpr epsilon 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd30005c6c8 <col:81, col:105>
| |   | | | `-ReturnStmt 0x7fd30005c6b0 <col:82, <built-in>:136:25>
| |   | | |   `-FloatingLiteral 0x7fd30005c690 <col:25> 'float' 1.192093e-07
| |   | | |-AlwaysInlineAttr 0x7fd30005b008 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd30005b050 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd30005b0b8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:319:98> col:61 constexpr round_error 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd30005c720 <col:85, col:98>
| |   | | | `-ReturnStmt 0x7fd30005c708 <col:86, col:93>
| |   | | |   `-FloatingLiteral 0x7fd30005c6e8 <col:93> 'float' 5.000000e-01
| |   | | |-AlwaysInlineAttr 0x7fd30005b150 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd30005b198 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fd30005b1c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:321:5, <built-in>:144:30> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:321:41 min_exponent 'const int' static constexpr cinit
| |   | | `-ParenExpr 0x7fd30005b260 <<built-in>:144:25, col:30> 'int'
| |   | |   `-UnaryOperator 0x7fd30005b240 <col:26, col:27> 'int' prefix '-'
| |   | |     `-IntegerLiteral 0x7fd30005b220 <col:27> 'int' 125
| |   | |-VarDecl 0x7fd30005b2f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:322:5, <built-in>:143:32> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:322:41 min_exponent10 'const int' static constexpr cinit
| |   | | `-ParenExpr 0x7fd30005b390 <<built-in>:143:28, col:32> 'int'
| |   | |   `-UnaryOperator 0x7fd30005b370 <col:29, col:30> 'int' prefix '-'
| |   | |     `-IntegerLiteral 0x7fd30005b350 <col:30> 'int' 37
| |   | |-VarDecl 0x7fd30005b420 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:323:5, <built-in>:141:25> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:323:41 max_exponent 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fd30005b480 <<built-in>:141:25> 'int' 128
| |   | |-VarDecl 0x7fd30005b510 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:324:5, <built-in>:140:28> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:324:41 max_exponent10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fd30005b570 <<built-in>:140:28> 'int' 38
| |   | |-VarDecl 0x7fd30005b600 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:326:5, col:56> col:41 has_infinity 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd30005b660 <col:56> '_Bool' true
| |   | |-VarDecl 0x7fd30005b6e0 <line:327:5, col:57> col:41 has_quiet_NaN 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd30005b740 <col:57> '_Bool' true
| |   | |-VarDecl 0x7fd30005b7c0 <line:328:5, col:61> col:41 has_signaling_NaN 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd30005b820 <col:61> '_Bool' true
| |   | |-VarDecl 0x7fd30005b8a0 <line:329:5, col:68> col:55 has_denorm 'const enum std::__1::float_denorm_style' static constexpr cinit
| |   | | `-DeclRefExpr 0x7fd30005b900 <col:68> 'enum std::__1::float_denorm_style' EnumConstant 0x7fd300035710 'denorm_present' 'enum std::__1::float_denorm_style'
| |   | |-VarDecl 0x7fd30005b990 <line:330:5, col:59> col:41 has_denorm_loss 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd30005b9f0 <col:59> '_Bool' false
| |   | |-CXXMethodDecl 0x7fd30005bab8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:331:112> col:61 constexpr infinity 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd30005c900 <col:82, col:112>
| |   | | | `-ReturnStmt 0x7fd30005c8e8 <col:83, col:110>
| |   | | |   `-CallExpr 0x7fd30005c8c0 <col:90, col:110> 'float'
| |   | | |     `-ImplicitCastExpr 0x7fd30005c8a8 <col:90> 'float (*)(void) noexcept' <BuiltinFnToFnPtr>
| |   | | |       `-DeclRefExpr 0x7fd30005c880 <col:90> '<builtin fn type>' Function 0x7fd30005c790 '__builtin_huge_valf' 'float (void) noexcept'
| |   | | |-AlwaysInlineAttr 0x7fd30005bb50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd30005bb98 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd30005bc00 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:332:110> col:61 constexpr quiet_NaN 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd30005cc00 <col:83, col:110>
| |   | | | `-ReturnStmt 0x7fd30005cbe8 <col:84, col:108>
| |   | | |   `-CallExpr 0x7fd30005cba0 <col:91, col:108> 'float'
| |   | | |     |-ImplicitCastExpr 0x7fd30005cb88 <col:91> 'float (*)(const char *) noexcept' <BuiltinFnToFnPtr>
| |   | | |     | `-DeclRefExpr 0x7fd30005cac8 <col:91> '<builtin fn type>' Function 0x7fd30005c970 '__builtin_nanf' 'float (const char *) noexcept'
| |   | | |     `-ImplicitCastExpr 0x7fd30005cbd0 <col:106> 'const char *' <ArrayToPointerDecay>
| |   | | |       `-StringLiteral 0x7fd30005caf0 <col:106> 'const char [1]' lvalue ""
| |   | | |-AlwaysInlineAttr 0x7fd30005bc98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd30005bce0 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd30005bd48 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:333:115> col:61 constexpr signaling_NaN 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd30005cea8 <col:87, col:115>
| |   | | | `-ReturnStmt 0x7fd30005ce90 <col:88, col:113>
| |   | | |   `-CallExpr 0x7fd30005ce48 <col:95, col:113> 'float'
| |   | | |     |-ImplicitCastExpr 0x7fd30005ce30 <col:95> 'float (*)(const char *) noexcept' <BuiltinFnToFnPtr>
| |   | | |     | `-DeclRefExpr 0x7fd30005cdc8 <col:95> '<builtin fn type>' Function 0x7fd30005cc70 '__builtin_nansf' 'float (const char *) noexcept'
| |   | | |     `-ImplicitCastExpr 0x7fd30005ce78 <col:111> 'const char *' <ArrayToPointerDecay>
| |   | | |       `-StringLiteral 0x7fd30005cdf0 <col:111> 'const char [1]' lvalue ""
| |   | | |-AlwaysInlineAttr 0x7fd30005bde0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd30005be28 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd30005be90 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:334:111> col:61 constexpr denorm_min 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd30005cf00 <col:84, col:111>
| |   | | | `-ReturnStmt 0x7fd30005cee8 <col:85, <built-in>:132:28>
| |   | | |   `-FloatingLiteral 0x7fd30005cec8 <col:28> 'float' 1.401298e-45
| |   | | |-AlwaysInlineAttr 0x7fd30005bf28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd30005bf70 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fd30005bf90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:336:5, col:53> col:41 is_iec559 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd30005bff0 <col:53> '_Bool' true
| |   | |-VarDecl 0x7fd30005c070 <line:337:5, col:54> col:41 is_bounded 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd30005c0d0 <col:54> '_Bool' true
| |   | |-VarDecl 0x7fd30005c150 <line:338:5, col:53> col:41 is_modulo 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd30005c1b0 <col:53> '_Bool' false
| |   | |-VarDecl 0x7fd30005c230 <line:340:5, col:49> col:41 traps 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd30005c290 <col:49> '_Bool' false
| |   | |-VarDecl 0x7fd30005c310 <line:341:5, col:59> col:41 tinyness_before 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd30005c370 <col:59> '_Bool' false
| |   | `-VarDecl 0x7fd30005c3f0 <line:342:5, col:68> col:54 round_style 'const enum std::__1::float_round_style' static constexpr cinit
| |   |   `-DeclRefExpr 0x7fd30005c450 <col:68> 'enum std::__1::float_round_style' EnumConstant 0x7fd300035430 'round_to_nearest' 'enum std::__1::float_round_style'
| |   |-ClassTemplateSpecializationDecl 0x7fd30005cf60 <line:345:1, line:389:1> line:346:7 class __libcpp_numeric_limits definition
| |   | |-TemplateArgument type 'double'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fd30005d1d0 <col:1, col:7> col:7 implicit class __libcpp_numeric_limits
| |   | |-AccessSpecDecl 0x7fd30005d268 <line:348:1, col:10> col:1 protected
| |   | |-TypedefDecl 0x7fd30005d2a8 <line:349:5, col:20> col:20 referenced type 'double'
| |   | | `-BuiltinType 0x7fd2ff8328e0 'double'
| |   | |-VarDecl 0x7fd30005d310 <line:351:5, col:58> col:41 is_specialized 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd30005d370 <col:58> '_Bool' true
| |   | |-VarDecl 0x7fd30005d3f0 <line:353:5, col:53> col:41 is_signed 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd30005d450 <col:53> '_Bool' true
| |   | |-VarDecl 0x7fd30005d4d8 <line:354:5, <built-in>:153:26> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:354:41 referenced digits 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fd30005d538 <<built-in>:153:26> 'int' 53
| |   | |-VarDecl 0x7fd30005d600 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:355:5, <built-in>:148:21> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:355:41 digits10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fd30005d660 <<built-in>:148:21> 'int' 15
| |   | |-VarDecl 0x7fd30005d6f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:356:5, col:76> col:41 max_digits10 'const int' static constexpr cinit
| |   | | `-ImplicitCastExpr 0x7fd30005d8b8 <col:56, col:76> 'const int' <IntegralCast>
| |   | |   `-BinaryOperator 0x7fd30005d890 <col:56, col:76> 'long' '+'
| |   | |     |-ImplicitCastExpr 0x7fd30005d878 <col:56> 'long' <IntegralCast>
| |   | |     | `-IntegerLiteral 0x7fd30005d750 <col:56> 'int' 2
| |   | |     `-BinaryOperator 0x7fd30005d850 <col:58, col:76> 'long' '/'
| |   | |       |-ParenExpr 0x7fd30005d810 <col:58, col:74> 'long'
| |   | |       | `-BinaryOperator 0x7fd30005d7e8 <col:59, col:68> 'long' '*'
| |   | |       |   |-ImplicitCastExpr 0x7fd30005d7d0 <col:59> 'long' <IntegralCast>
| |   | |       |   | `-ImplicitCastExpr 0x7fd30005d7b8 <col:59> 'int' <LValueToRValue>
| |   | |       |   |   `-DeclRefExpr 0x7fd30005d770 <col:59> 'const int' lvalue Var 0x7fd30005d4d8 'digits' 'const int'
| |   | |       |   `-IntegerLiteral 0x7fd30005d798 <col:68> 'long' 30103
| |   | |       `-IntegerLiteral 0x7fd30005d830 <col:76> 'long' 100000
| |   | |-CXXMethodDecl 0x7fd30005da08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:357:97> col:61 constexpr min 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd30005f658 <col:77, col:97>
| |   | | | `-ReturnStmt 0x7fd30005f640 <col:78, <built-in>:159:21>
| |   | | |   `-FloatingLiteral 0x7fd30005f620 <col:21> 'double' 2.225074e-308
| |   | | |-AlwaysInlineAttr 0x7fd30005daa0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd30005dae8 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd30005db50 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:358:97> col:61 used constexpr max 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd30005f6b0 <col:77, col:97>
| |   | | | `-ReturnStmt 0x7fd30005f698 <col:78, <built-in>:156:21>
| |   | | |   `-FloatingLiteral 0x7fd30005f678 <col:21> 'double' 1.797693e+308
| |   | | |-AlwaysInlineAttr 0x7fd30005dbe8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd30005dc30 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd30005dc98 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:359:95> col:61 constexpr lowest 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd30005f7a0 <col:80, col:95>
| |   | | | `-ReturnStmt 0x7fd30005f788 <col:81, col:93>
| |   | | |   `-UnaryOperator 0x7fd30005f768 <col:88, col:93> 'std::__1::__libcpp_numeric_limits<double, true>::type':'double' prefix '-'
| |   | | |     `-CallExpr 0x7fd30005f740 <col:89, col:93> 'std::__1::__libcpp_numeric_limits<double, true>::type':'double'
| |   | | |       `-ImplicitCastExpr 0x7fd30005f728 <col:89> 'std::__1::__libcpp_numeric_limits<double, true>::type (*)(void) noexcept' <FunctionToPointerDecay>
| |   | | |         `-DeclRefExpr 0x7fd30005f6d0 <col:89> 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept' lvalue CXXMethod 0x7fd30005db50 'max' 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept'
| |   | | |-AlwaysInlineAttr 0x7fd30005dd30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd30005dd78 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fd30005dd98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:361:5, col:54> col:41 is_integer 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd30005ddf8 <col:54> '_Bool' false
| |   | |-VarDecl 0x7fd30005de78 <line:362:5, col:52> col:41 is_exact 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd30005ded8 <col:52> '_Bool' false
| |   | |-VarDecl 0x7fd30005df60 <line:363:5, <built-in>:332:23> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:363:41 radix 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fd30005dfc0 <<built-in>:332:23> 'int' 2
| |   | |-CXXMethodDecl 0x7fd30005e090 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:364:105> col:61 constexpr epsilon 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd30005f7f8 <col:81, col:105>
| |   | | | `-ReturnStmt 0x7fd30005f7e0 <col:82, <built-in>:150:25>
| |   | | |   `-FloatingLiteral 0x7fd30005f7c0 <col:25> 'double' 2.220446e-16
| |   | | |-AlwaysInlineAttr 0x7fd30005e128 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd30005e170 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd30005e1d8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:365:97> col:61 constexpr round_error 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd30005f850 <col:85, col:97>
| |   | | | `-ReturnStmt 0x7fd30005f838 <col:86, col:93>
| |   | | |   `-FloatingLiteral 0x7fd30005f818 <col:93> 'double' 5.000000e-01
| |   | | |-AlwaysInlineAttr 0x7fd30005e270 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd30005e2b8 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fd30005e2e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:367:5, <built-in>:158:31> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:367:41 min_exponent 'const int' static constexpr cinit
| |   | | `-ParenExpr 0x7fd30005e380 <<built-in>:158:25, col:31> 'int'
| |   | |   `-UnaryOperator 0x7fd30005e360 <col:26, col:27> 'int' prefix '-'
| |   | |     `-IntegerLiteral 0x7fd30005e340 <col:27> 'int' 1021
| |   | |-VarDecl 0x7fd30005e410 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:368:5, <built-in>:157:33> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:368:41 min_exponent10 'const int' static constexpr cinit
| |   | | `-ParenExpr 0x7fd30005e4b0 <<built-in>:157:28, col:33> 'int'
| |   | |   `-UnaryOperator 0x7fd30005e490 <col:29, col:30> 'int' prefix '-'
| |   | |     `-IntegerLiteral 0x7fd30005e470 <col:30> 'int' 307
| |   | |-VarDecl 0x7fd30005e540 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:369:5, <built-in>:155:25> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:369:41 max_exponent 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fd30005e5a0 <<built-in>:155:25> 'int' 1024
| |   | |-VarDecl 0x7fd30005e630 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:370:5, <built-in>:154:28> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:370:41 max_exponent10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fd30005e690 <<built-in>:154:28> 'int' 308
| |   | |-VarDecl 0x7fd30005e718 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:372:5, col:56> col:41 has_infinity 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd30005e778 <col:56> '_Bool' true
| |   | |-VarDecl 0x7fd30005e7f8 <line:373:5, col:57> col:41 has_quiet_NaN 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd30005e858 <col:57> '_Bool' true
| |   | |-VarDecl 0x7fd30005e8d8 <line:374:5, col:61> col:41 has_signaling_NaN 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd30005e938 <col:61> '_Bool' true
| |   | |-VarDecl 0x7fd30005e9b8 <line:375:5, col:68> col:55 has_denorm 'const enum std::__1::float_denorm_style' static constexpr cinit
| |   | | `-DeclRefExpr 0x7fd30005ea18 <col:68> 'enum std::__1::float_denorm_style' EnumConstant 0x7fd300035710 'denorm_present' 'enum std::__1::float_denorm_style'
| |   | |-VarDecl 0x7fd30005eaa8 <line:376:5, col:59> col:41 has_denorm_loss 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd30005eb08 <col:59> '_Bool' false
| |   | |-CXXMethodDecl 0x7fd30005ebd0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:377:111> col:61 constexpr infinity 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd30005fa30 <col:82, col:111>
| |   | | | `-ReturnStmt 0x7fd30005fa18 <col:83, col:109>
| |   | | |   `-CallExpr 0x7fd30005f9f0 <col:90, col:109> 'double'
| |   | | |     `-ImplicitCastExpr 0x7fd30005f9d8 <col:90> 'double (*)(void) noexcept' <BuiltinFnToFnPtr>
| |   | | |       `-DeclRefExpr 0x7fd30005f9b0 <col:90> '<builtin fn type>' Function 0x7fd30005f8c0 '__builtin_huge_val' 'double (void) noexcept'
| |   | | |-AlwaysInlineAttr 0x7fd30005ec68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd30005ecb0 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd30005ed18 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:378:109> col:61 constexpr quiet_NaN 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd30005fd30 <col:83, col:109>
| |   | | | `-ReturnStmt 0x7fd30005fd18 <col:84, col:107>
| |   | | |   `-CallExpr 0x7fd30005fcd0 <col:91, col:107> 'double'
| |   | | |     |-ImplicitCastExpr 0x7fd30005fcb8 <col:91> 'double (*)(const char *) noexcept' <BuiltinFnToFnPtr>
| |   | | |     | `-DeclRefExpr 0x7fd30005fbf8 <col:91> '<builtin fn type>' Function 0x7fd30005faa0 '__builtin_nan' 'double (const char *) noexcept'
| |   | | |     `-ImplicitCastExpr 0x7fd30005fd00 <col:105> 'const char *' <ArrayToPointerDecay>
| |   | | |       `-StringLiteral 0x7fd30005fc20 <col:105> 'const char [1]' lvalue ""
| |   | | |-AlwaysInlineAttr 0x7fd30005edb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd30005edf8 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd30005ee60 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:379:114> col:61 constexpr signaling_NaN 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd30005ffd8 <col:87, col:114>
| |   | | | `-ReturnStmt 0x7fd30005ffc0 <col:88, col:112>
| |   | | |   `-CallExpr 0x7fd30005ff78 <col:95, col:112> 'double'
| |   | | |     |-ImplicitCastExpr 0x7fd30005ff60 <col:95> 'double (*)(const char *) noexcept' <BuiltinFnToFnPtr>
| |   | | |     | `-DeclRefExpr 0x7fd30005fef8 <col:95> '<builtin fn type>' Function 0x7fd30005fda0 '__builtin_nans' 'double (const char *) noexcept'
| |   | | |     `-ImplicitCastExpr 0x7fd30005ffa8 <col:110> 'const char *' <ArrayToPointerDecay>
| |   | | |       `-StringLiteral 0x7fd30005ff20 <col:110> 'const char [1]' lvalue ""
| |   | | |-AlwaysInlineAttr 0x7fd30005eef8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd30005ef40 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd30005efa8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:380:111> col:61 constexpr denorm_min 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd300060030 <col:84, col:111>
| |   | | | `-ReturnStmt 0x7fd300060018 <col:85, <built-in>:146:28>
| |   | | |   `-FloatingLiteral 0x7fd30005fff8 <col:28> 'double' 4.940656e-324
| |   | | |-AlwaysInlineAttr 0x7fd30005f040 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd30005f088 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fd30005f0a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:382:5, col:53> col:41 is_iec559 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd30005f108 <col:53> '_Bool' true
| |   | |-VarDecl 0x7fd30005f188 <line:383:5, col:54> col:41 is_bounded 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd30005f1e8 <col:54> '_Bool' true
| |   | |-VarDecl 0x7fd30005f268 <line:384:5, col:53> col:41 is_modulo 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd30005f2c8 <col:53> '_Bool' false
| |   | |-VarDecl 0x7fd30005f348 <line:386:5, col:49> col:41 traps 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd30005f3a8 <col:49> '_Bool' false
| |   | |-VarDecl 0x7fd30005f428 <line:387:5, col:59> col:41 tinyness_before 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd30005f488 <col:59> '_Bool' false
| |   | `-VarDecl 0x7fd30005f508 <line:388:5, col:68> col:54 round_style 'const enum std::__1::float_round_style' static constexpr cinit
| |   |   `-DeclRefExpr 0x7fd30005f568 <col:68> 'enum std::__1::float_round_style' EnumConstant 0x7fd300035430 'round_to_nearest' 'enum std::__1::float_round_style'
| |   |-ClassTemplateSpecializationDecl 0x7fd300060090 <line:391:1, line:439:1> line:392:7 class __libcpp_numeric_limits definition
| |   | |-TemplateArgument type 'long double'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fd300060300 <col:1, col:7> col:7 implicit class __libcpp_numeric_limits
| |   | |-AccessSpecDecl 0x7fd300060398 <line:394:1, col:10> col:1 protected
| |   | |-TypedefDecl 0x7fd3000603d8 <line:395:5, col:25> col:25 referenced type 'long double'
| |   | | `-BuiltinType 0x7fd2ff832900 'long double'
| |   | |-VarDecl 0x7fd300060440 <line:397:5, col:58> col:41 is_specialized 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd3000604a0 <col:58> '_Bool' true
| |   | |-VarDecl 0x7fd300060520 <line:399:5, col:53> col:41 is_signed 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd300060580 <col:53> '_Bool' true
| |   | |-VarDecl 0x7fd300060608 <line:400:5, <built-in>:167:27> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:400:41 referenced digits 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fd300060668 <<built-in>:167:27> 'int' 64
| |   | |-VarDecl 0x7fd3000606f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:401:5, <built-in>:162:22> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:401:41 digits10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fd300060758 <<built-in>:162:22> 'int' 18
| |   | |-VarDecl 0x7fd3000607e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:402:5, col:76> col:41 max_digits10 'const int' static constexpr cinit
| |   | | `-ImplicitCastExpr 0x7fd3000609b0 <col:56, col:76> 'const int' <IntegralCast>
| |   | |   `-BinaryOperator 0x7fd300060988 <col:56, col:76> 'long' '+'
| |   | |     |-ImplicitCastExpr 0x7fd300060970 <col:56> 'long' <IntegralCast>
| |   | |     | `-IntegerLiteral 0x7fd300060848 <col:56> 'int' 2
| |   | |     `-BinaryOperator 0x7fd300060948 <col:58, col:76> 'long' '/'
| |   | |       |-ParenExpr 0x7fd300060908 <col:58, col:74> 'long'
| |   | |       | `-BinaryOperator 0x7fd3000608e0 <col:59, col:68> 'long' '*'
| |   | |       |   |-ImplicitCastExpr 0x7fd3000608c8 <col:59> 'long' <IntegralCast>
| |   | |       |   | `-ImplicitCastExpr 0x7fd3000608b0 <col:59> 'int' <LValueToRValue>
| |   | |       |   |   `-DeclRefExpr 0x7fd300060868 <col:59> 'const int' lvalue Var 0x7fd300060608 'digits' 'const int'
| |   | |       |   `-IntegerLiteral 0x7fd300060890 <col:68> 'long' 30103
| |   | |       `-IntegerLiteral 0x7fd300060928 <col:76> 'long' 100000
| |   | |-CXXMethodDecl 0x7fd300060af8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:403:98> col:61 constexpr min 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd300062780 <col:77, col:98>
| |   | | | `-ReturnStmt 0x7fd300062768 <col:78, <built-in>:173:22>
| |   | | |   `-FloatingLiteral 0x7fd300062738 <col:22> 'long double' 0.000000e+00
| |   | | |-AlwaysInlineAttr 0x7fd300060b90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd300060bd8 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd300060c40 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:404:98> col:61 used constexpr max 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd3000627e8 <col:77, col:98>
| |   | | | `-ReturnStmt 0x7fd3000627d0 <col:78, <built-in>:170:22>
| |   | | |   `-FloatingLiteral 0x7fd3000627a0 <col:22> 'long double' INF
| |   | | |-AlwaysInlineAttr 0x7fd300060cd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd300060d20 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd300060d88 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:405:95> col:61 constexpr lowest 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd3000628d0 <col:80, col:95>
| |   | | | `-ReturnStmt 0x7fd3000628b8 <col:81, col:93>
| |   | | |   `-UnaryOperator 0x7fd300062898 <col:88, col:93> 'std::__1::__libcpp_numeric_limits<long double, true>::type':'long double' prefix '-'
| |   | | |     `-CallExpr 0x7fd300062870 <col:89, col:93> 'std::__1::__libcpp_numeric_limits<long double, true>::type':'long double'
| |   | | |       `-ImplicitCastExpr 0x7fd300062858 <col:89> 'std::__1::__libcpp_numeric_limits<long double, true>::type (*)(void) noexcept' <FunctionToPointerDecay>
| |   | | |         `-DeclRefExpr 0x7fd300062808 <col:89> 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept' lvalue CXXMethod 0x7fd300060c40 'max' 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept'
| |   | | |-AlwaysInlineAttr 0x7fd300060e20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd300060e68 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fd300060e88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:407:5, col:54> col:41 is_integer 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd300060ee8 <col:54> '_Bool' false
| |   | |-VarDecl 0x7fd300060f68 <line:408:5, col:52> col:41 is_exact 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd300060fc8 <col:52> '_Bool' false
| |   | |-VarDecl 0x7fd300061050 <line:409:5, <built-in>:332:23> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:409:41 radix 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fd3000610b0 <<built-in>:332:23> 'int' 2
| |   | |-CXXMethodDecl 0x7fd300061180 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:410:106> col:61 constexpr epsilon 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd300062938 <col:81, col:106>
| |   | | | `-ReturnStmt 0x7fd300062920 <col:82, <built-in>:164:26>
| |   | | |   `-FloatingLiteral 0x7fd3000628f0 <col:26> 'long double' 1.084202e-19
| |   | | |-AlwaysInlineAttr 0x7fd300061218 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd300061260 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd3000612c8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:411:97> col:61 constexpr round_error 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd3000629a8 <col:85, col:97>
| |   | | | `-ReturnStmt 0x7fd300062990 <col:86, col:93>
| |   | | |   `-ImplicitCastExpr 0x7fd300062978 <col:93> 'std::__1::__libcpp_numeric_limits<long double, true>::type':'long double' <FloatingCast>
| |   | | |     `-FloatingLiteral 0x7fd300062958 <col:93> 'double' 5.000000e-01
| |   | | |-AlwaysInlineAttr 0x7fd300061360 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd3000613a8 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fd3000613d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:413:5, <built-in>:172:33> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:413:41 min_exponent 'const int' static constexpr cinit
| |   | | `-ParenExpr 0x7fd300061470 <<built-in>:172:26, col:33> 'int'
| |   | |   `-UnaryOperator 0x7fd300061450 <col:27, col:28> 'int' prefix '-'
| |   | |     `-IntegerLiteral 0x7fd300061430 <col:28> 'int' 16381
| |   | |-VarDecl 0x7fd300061500 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:414:5, <built-in>:171:35> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:414:41 min_exponent10 'const int' static constexpr cinit
| |   | | `-ParenExpr 0x7fd3000615a0 <<built-in>:171:29, col:35> 'int'
| |   | |   `-UnaryOperator 0x7fd300061580 <col:30, col:31> 'int' prefix '-'
| |   | |     `-IntegerLiteral 0x7fd300061560 <col:31> 'int' 4931
| |   | |-VarDecl 0x7fd300061670 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:415:5, <built-in>:169:26> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:415:41 max_exponent 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fd3000616d0 <<built-in>:169:26> 'int' 16384
| |   | |-VarDecl 0x7fd300061760 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:416:5, <built-in>:168:29> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:416:41 max_exponent10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fd3000617c0 <<built-in>:168:29> 'int' 4932
| |   | |-VarDecl 0x7fd300061848 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:418:5, col:56> col:41 has_infinity 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd3000618a8 <col:56> '_Bool' true
| |   | |-VarDecl 0x7fd300061928 <line:419:5, col:57> col:41 has_quiet_NaN 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd300061988 <col:57> '_Bool' true
| |   | |-VarDecl 0x7fd300061a08 <line:420:5, col:61> col:41 has_signaling_NaN 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd300061a68 <col:61> '_Bool' true
| |   | |-VarDecl 0x7fd300061ae8 <line:421:5, col:68> col:55 has_denorm 'const enum std::__1::float_denorm_style' static constexpr cinit
| |   | | `-DeclRefExpr 0x7fd300061b48 <col:68> 'enum std::__1::float_denorm_style' EnumConstant 0x7fd300035710 'denorm_present' 'enum std::__1::float_denorm_style'
| |   | |-VarDecl 0x7fd300061bd8 <line:422:5, col:59> col:41 has_denorm_loss 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd300061c38 <col:59> '_Bool' false
| |   | |-CXXMethodDecl 0x7fd300061d00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:423:112> col:61 constexpr infinity 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd300062b88 <col:82, col:112>
| |   | | | `-ReturnStmt 0x7fd300062b70 <col:83, col:110>
| |   | | |   `-CallExpr 0x7fd300062b48 <col:90, col:110> 'long double'
| |   | | |     `-ImplicitCastExpr 0x7fd300062b30 <col:90> 'long double (*)(void) noexcept' <BuiltinFnToFnPtr>
| |   | | |       `-DeclRefExpr 0x7fd300062b08 <col:90> '<builtin fn type>' Function 0x7fd300062a18 '__builtin_huge_vall' 'long double (void) noexcept'
| |   | | |-AlwaysInlineAttr 0x7fd300061d98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd300061de0 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd300061e48 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:424:110> col:61 constexpr quiet_NaN 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd300062e90 <col:83, col:110>
| |   | | | `-ReturnStmt 0x7fd300062e78 <col:84, col:108>
| |   | | |   `-CallExpr 0x7fd300062e30 <col:91, col:108> 'long double'
| |   | | |     |-ImplicitCastExpr 0x7fd300062e18 <col:91> 'long double (*)(const char *) noexcept' <BuiltinFnToFnPtr>
| |   | | |     | `-DeclRefExpr 0x7fd300062d50 <col:91> '<builtin fn type>' Function 0x7fd300062bf8 '__builtin_nanl' 'long double (const char *) noexcept'
| |   | | |     `-ImplicitCastExpr 0x7fd300062e60 <col:106> 'const char *' <ArrayToPointerDecay>
| |   | | |       `-StringLiteral 0x7fd300062d78 <col:106> 'const char [1]' lvalue ""
| |   | | |-AlwaysInlineAttr 0x7fd300061ee0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd300061f28 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd300061f90 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:425:115> col:61 constexpr signaling_NaN 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd300063138 <col:87, col:115>
| |   | | | `-ReturnStmt 0x7fd300063120 <col:88, col:113>
| |   | | |   `-CallExpr 0x7fd3000630d8 <col:95, col:113> 'long double'
| |   | | |     |-ImplicitCastExpr 0x7fd3000630c0 <col:95> 'long double (*)(const char *) noexcept' <BuiltinFnToFnPtr>
| |   | | |     | `-DeclRefExpr 0x7fd300063058 <col:95> '<builtin fn type>' Function 0x7fd300062f00 '__builtin_nansl' 'long double (const char *) noexcept'
| |   | | |     `-ImplicitCastExpr 0x7fd300063108 <col:111> 'const char *' <ArrayToPointerDecay>
| |   | | |       `-StringLiteral 0x7fd300063080 <col:111> 'const char [1]' lvalue ""
| |   | | |-AlwaysInlineAttr 0x7fd300062028 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd300062070 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd3000620d8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:426:112> col:61 constexpr denorm_min 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd3000631a0 <col:84, col:112>
| |   | | | `-ReturnStmt 0x7fd300063188 <col:85, <built-in>:160:29>
| |   | | |   `-FloatingLiteral 0x7fd300063158 <col:29> 'long double' 0.000000e+00
| |   | | |-AlwaysInlineAttr 0x7fd300062170 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd3000621b8 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fd3000621d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:431:5, col:53> col:41 is_iec559 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd300062238 <col:53> '_Bool' true
| |   | |-VarDecl 0x7fd3000622b8 <line:433:5, col:54> col:41 is_bounded 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd300062318 <col:54> '_Bool' true
| |   | |-VarDecl 0x7fd300062398 <line:434:5, col:53> col:41 is_modulo 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd3000623f8 <col:53> '_Bool' false
| |   | |-VarDecl 0x7fd300062478 <line:436:5, col:49> col:41 traps 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd3000624d8 <col:49> '_Bool' false
| |   | |-VarDecl 0x7fd300062558 <line:437:5, col:59> col:41 tinyness_before 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fd3000625b8 <col:59> '_Bool' false
| |   | `-VarDecl 0x7fd300062638 <line:438:5, col:68> col:54 round_style 'const enum std::__1::float_round_style' static constexpr cinit
| |   |   `-DeclRefExpr 0x7fd300062698 <col:68> 'enum std::__1::float_round_style' EnumConstant 0x7fd300035430 'round_to_nearest' 'enum std::__1::float_round_style'
| |   |-ClassTemplateDecl 0x7fd300063308 <line:441:1, line:485:1> line:442:28 numeric_limits
| |   | |-TemplateTypeParmDecl 0x7fd3000631c0 <line:441:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fd300063270 <line:442:1, line:485:1> line:442:28 class numeric_limits definition
| |   |   |-private '__libcpp_numeric_limits<typename remove_cv<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fd300063580 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fd3000639a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:442:1, col:28> col:28 implicit class numeric_limits
| |   |   |-TypedefDecl 0x7fd300063cf8 <line:445:5, col:68> col:68 referenced __base '__libcpp_numeric_limits<typename remove_cv<_Tp>::type>'
| |   |   | `-TemplateSpecializationType 0x7fd300063c50 '__libcpp_numeric_limits<typename remove_cv<_Tp>::type>' dependent __libcpp_numeric_limits
| |   |   |   `-TemplateArgument type 'typename remove_cv<_Tp>::type'
| |   |   |-TypedefDecl 0x7fd300063e60 <line:446:5, col:35> col:35 referenced type 'typename __base::type'
| |   |   | `-DependentNameType 0x7fd300063df0 'typename __base::type' dependent
| |   |   |-AccessSpecDecl 0x7fd300063eb8 <line:447:1, col:7> col:1 public
| |   |   |-VarDecl 0x7fd300063ef0 <line:448:5, col:66> col:41 is_specialized 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fd300063f88 <col:58, col:66> '<dependent type>' lvalue
| |   |   |-CXXMethodDecl 0x7fd3000640d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:449:99> col:61 constexpr min 'std::__1::numeric_limits::type (void) noexcept' static
| |   |   | |-CompoundStmt 0x7fd300066510 <col:77, col:99>
| |   |   | | `-ReturnStmt 0x7fd3000664f8 <col:78, col:97>
| |   |   | |   `-CallExpr 0x7fd3000664d0 <col:85, col:97> '<dependent type>'
| |   |   | |     `-DependentScopeDeclRefExpr 0x7fd300066490 <col:85, col:93> '<dependent type>' lvalue
| |   |   | |-AlwaysInlineAttr 0x7fd300064170 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   | `-VisibilityAttr 0x7fd3000641b8 <col:51, col:74> Hidden
| |   |   |-CXXMethodDecl 0x7fd300064220 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:450:99> col:61 constexpr max 'std::__1::numeric_limits::type (void) noexcept' static
| |   |   | |-CompoundStmt 0x7fd3000665e8 <col:77, col:99>
| |   |   | | `-ReturnStmt 0x7fd3000665d0 <col:78, col:97>
| |   |   | |   `-CallExpr 0x7fd3000665a8 <col:85, col:97> '<dependent type>'
| |   |   | |     `-DependentScopeDeclRefExpr 0x7fd300066568 <col:85, col:93> '<dependent type>' lvalue
| |   |   | |-AlwaysInlineAttr 0x7fd3000642b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   | `-VisibilityAttr 0x7fd300064300 <col:51, col:74> Hidden
| |   |   |-CXXMethodDecl 0x7fd300064368 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:451:105> col:61 constexpr lowest 'std::__1::numeric_limits::type (void) noexcept' static
| |   |   | |-CompoundStmt 0x7fd3000666c0 <col:80, col:105>
| |   |   | | `-ReturnStmt 0x7fd3000666a8 <col:81, col:103>
| |   |   | |   `-CallExpr 0x7fd300066680 <col:88, col:103> '<dependent type>'
| |   |   | |     `-DependentScopeDeclRefExpr 0x7fd300066640 <col:88, col:96> '<dependent type>' lvalue
| |   |   | |-AlwaysInlineAttr 0x7fd300064400 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   | `-VisibilityAttr 0x7fd300064448 <col:51, col:74> Hidden
| |   |   |-VarDecl 0x7fd300064470 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:453:5, col:58> col:41 digits 'const int' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fd300064508 <col:50, col:58> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fd300064560 <line:454:5, col:60> col:41 digits10 'const int' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fd3000645f8 <col:52, col:60> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fd300064650 <line:455:5, col:64> col:41 max_digits10 'const int' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fd3000646e8 <col:56, col:64> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fd300064738 <line:456:5, col:61> col:41 is_signed 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fd3000647d0 <col:53, col:61> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fd300064820 <line:457:5, col:62> col:41 is_integer 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fd3000648b8 <col:54, col:62> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fd300064908 <line:458:5, col:60> col:41 is_exact 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fd3000649a0 <col:52, col:60> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fd3000649f8 <line:459:5, col:57> col:41 radix 'const int' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fd300064a90 <col:49, col:57> '<dependent type>' lvalue
| |   |   |-CXXMethodDecl 0x7fd300064b28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:460:107> col:61 constexpr epsilon 'std::__1::numeric_limits::type (void) noexcept' static
| |   |   | |-CompoundStmt 0x7fd300066798 <col:81, col:107>
| |   |   | | `-ReturnStmt 0x7fd300066780 <col:82, col:105>
| |   |   | |   `-CallExpr 0x7fd300066758 <col:89, col:105> '<dependent type>'
| |   |   | |     `-DependentScopeDeclRefExpr 0x7fd300066718 <col:89, col:97> '<dependent type>' lvalue
| |   |   | |-AlwaysInlineAttr 0x7fd300064bc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   | `-VisibilityAttr 0x7fd300064c08 <col:51, col:74> Hidden
| |   |   |-CXXMethodDecl 0x7fd300064c70 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:461:115> col:61 constexpr round_error 'std::__1::numeric_limits::type (void) noexcept' static
| |   |   | |-CompoundStmt 0x7fd300066870 <col:85, col:115>
| |   |   | | `-ReturnStmt 0x7fd300066858 <col:86, col:113>
| |   |   | |   `-CallExpr 0x7fd300066830 <col:93, col:113> '<dependent type>'
| |   |   | |     `-DependentScopeDeclRefExpr 0x7fd3000667f0 <col:93, col:101> '<dependent type>' lvalue
| |   |   | |-AlwaysInlineAttr 0x7fd300064d08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   | `-VisibilityAttr 0x7fd300064d50 <col:51, col:74> Hidden
| |   |   |-VarDecl 0x7fd300064d78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:463:5, col:64> col:41 min_exponent 'const int' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fd300064e10 <col:56, col:64> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fd300064e68 <line:464:5, col:66> col:41 min_exponent10 'const int' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fd300064f00 <col:58, col:66> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fd300064f58 <line:465:5, col:64> col:41 max_exponent 'const int' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fd300064ff0 <col:56, col:64> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fd300065048 <line:466:5, col:66> col:41 max_exponent10 'const int' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fd3000650e0 <col:58, col:66> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fd300065130 <line:468:5, col:64> col:41 has_infinity 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fd3000651c8 <col:56, col:64> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fd300065218 <line:469:5, col:65> col:41 has_quiet_NaN 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fd3000652b0 <col:57, col:65> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fd300065300 <line:470:5, col:69> col:41 has_signaling_NaN 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fd300065398 <col:61, col:69> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fd3000653e8 <line:471:5, col:76> col:55 has_denorm 'const enum std::__1::float_denorm_style' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fd300065480 <col:68, col:76> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fd3000654d0 <line:472:5, col:67> col:41 has_denorm_loss 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fd300065568 <col:59, col:67> '<dependent type>' lvalue
| |   |   |-CXXMethodDecl 0x7fd300065a00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:473:109> col:61 constexpr infinity 'std::__1::numeric_limits::type (void) noexcept' static
| |   |   | |-CompoundStmt 0x7fd300066948 <col:82, col:109>
| |   |   | | `-ReturnStmt 0x7fd300066930 <col:83, col:107>
| |   |   | |   `-CallExpr 0x7fd300066908 <col:90, col:107> '<dependent type>'
| |   |   | |     `-DependentScopeDeclRefExpr 0x7fd3000668c8 <col:90, col:98> '<dependent type>' lvalue
| |   |   | |-AlwaysInlineAttr 0x7fd300065a98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   | `-VisibilityAttr 0x7fd300065ae0 <col:51, col:74> Hidden
| |   |   |-CXXMethodDecl 0x7fd300065b48 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:474:111> col:61 constexpr quiet_NaN 'std::__1::numeric_limits::type (void) noexcept' static
| |   |   | |-CompoundStmt 0x7fd300066a20 <col:83, col:111>
| |   |   | | `-ReturnStmt 0x7fd300066a08 <col:84, col:109>
| |   |   | |   `-CallExpr 0x7fd3000669e0 <col:91, col:109> '<dependent type>'
| |   |   | |     `-DependentScopeDeclRefExpr 0x7fd3000669a0 <col:91, col:99> '<dependent type>' lvalue
| |   |   | |-AlwaysInlineAttr 0x7fd300065be0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   | `-VisibilityAttr 0x7fd300065c28 <col:51, col:74> Hidden
| |   |   |-CXXMethodDecl 0x7fd300065c90 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:475:119> col:61 constexpr signaling_NaN 'std::__1::numeric_limits::type (void) noexcept' static
| |   |   | |-CompoundStmt 0x7fd300066af8 <col:87, col:119>
| |   |   | | `-ReturnStmt 0x7fd300066ae0 <col:88, col:117>
| |   |   | |   `-CallExpr 0x7fd300066ab8 <col:95, col:117> '<dependent type>'
| |   |   | |     `-DependentScopeDeclRefExpr 0x7fd300066a78 <col:95, col:103> '<dependent type>' lvalue
| |   |   | |-AlwaysInlineAttr 0x7fd300065d28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   | `-VisibilityAttr 0x7fd300065d70 <col:51, col:74> Hidden
| |   |   |-CXXMethodDecl 0x7fd300065dd8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:476:113> col:61 constexpr denorm_min 'std::__1::numeric_limits::type (void) noexcept' static
| |   |   | |-CompoundStmt 0x7fd300066bd0 <col:84, col:113>
| |   |   | | `-ReturnStmt 0x7fd300066bb8 <col:85, col:111>
| |   |   | |   `-CallExpr 0x7fd300066b90 <col:92, col:111> '<dependent type>'
| |   |   | |     `-DependentScopeDeclRefExpr 0x7fd300066b50 <col:92, col:100> '<dependent type>' lvalue
| |   |   | |-AlwaysInlineAttr 0x7fd300065e70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   | `-VisibilityAttr 0x7fd300065eb8 <col:51, col:74> Hidden
| |   |   |-VarDecl 0x7fd300065ed8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:478:5, col:61> col:41 is_iec559 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fd300065f70 <col:53, col:61> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fd300065fc0 <line:479:5, col:62> col:41 is_bounded 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fd300066058 <col:54, col:62> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fd3000660a8 <line:480:5, col:61> col:41 is_modulo 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fd300066140 <col:53, col:61> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fd300066190 <line:482:5, col:57> col:41 traps 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fd300066228 <col:49, col:57> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fd300066278 <line:483:5, col:67> col:41 tinyness_before 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fd300066310 <col:59, col:67> '<dependent type>' lvalue
| |   |   `-VarDecl 0x7fd300066360 <line:484:5, col:76> col:54 round_style 'const enum std::__1::float_round_style' static constexpr cinit
| |   |     `-DependentScopeDeclRefExpr 0x7fd3000663f8 <col:68, col:76> '<dependent type>' lvalue
| |   |-VarDecl 0x7fd300066de0 parent 0x7fd300063270 prev 0x7fd300063ef0 <line:487:1, line:488:55> col:55 is_specialized 'const _Bool' constexpr
| |   |-VarDecl 0x7fd300067078 parent 0x7fd300063270 prev 0x7fd300064470 <line:489:1, line:490:54> col:54 digits 'const int' constexpr
| |   |-VarDecl 0x7fd300067318 parent 0x7fd300063270 prev 0x7fd300064560 <line:491:1, line:492:54> col:54 digits10 'const int' constexpr
| |   |-VarDecl 0x7fd3000675b8 parent 0x7fd300063270 prev 0x7fd300064650 <line:493:1, line:494:54> col:54 max_digits10 'const int' constexpr
| |   |-VarDecl 0x7fd300067850 parent 0x7fd300063270 prev 0x7fd300064738 <line:495:1, line:496:55> col:55 is_signed 'const _Bool' constexpr
| |   |-VarDecl 0x7fd300067af0 parent 0x7fd300063270 prev 0x7fd300064820 <line:497:1, line:498:55> col:55 is_integer 'const _Bool' constexpr
| |   |-VarDecl 0x7fd300067d80 parent 0x7fd300063270 prev 0x7fd300064908 <line:499:1, line:500:55> col:55 is_exact 'const _Bool' constexpr
| |   |-VarDecl 0x7fd300068018 parent 0x7fd300063270 prev 0x7fd3000649f8 <line:501:1, line:502:54> col:54 radix 'const int' constexpr
| |   |-VarDecl 0x7fd3000682b8 parent 0x7fd300063270 prev 0x7fd300064d78 <line:503:1, line:504:54> col:54 min_exponent 'const int' constexpr
| |   |-VarDecl 0x7fd300068558 parent 0x7fd300063270 prev 0x7fd300064e68 <line:505:1, line:506:54> col:54 min_exponent10 'const int' constexpr
| |   |-VarDecl 0x7fd3000687f8 parent 0x7fd300063270 prev 0x7fd300064f58 <line:507:1, line:508:54> col:54 max_exponent 'const int' constexpr
| |   |-VarDecl 0x7fd300068a98 parent 0x7fd300063270 prev 0x7fd300065048 <line:509:1, line:510:54> col:54 max_exponent10 'const int' constexpr
| |   |-VarDecl 0x7fd300068d30 parent 0x7fd300063270 prev 0x7fd300065130 <line:511:1, line:512:55> col:55 has_infinity 'const _Bool' constexpr
| |   |-VarDecl 0x7fd300068fc0 parent 0x7fd300063270 prev 0x7fd300065218 <line:513:1, line:514:55> col:55 has_quiet_NaN 'const _Bool' constexpr
| |   |-VarDecl 0x7fd300069250 parent 0x7fd300063270 prev 0x7fd300065300 <line:515:1, line:516:55> col:55 has_signaling_NaN 'const _Bool' constexpr
| |   |-VarDecl 0x7fd3000694e0 parent 0x7fd300063270 prev 0x7fd3000653e8 <line:517:1, line:518:69> col:69 has_denorm 'const enum std::__1::float_denorm_style' constexpr
| |   |-VarDecl 0x7fd300069770 parent 0x7fd300063270 prev 0x7fd3000654d0 <line:519:1, line:520:55> col:55 has_denorm_loss 'const _Bool' constexpr
| |   |-VarDecl 0x7fd30006aa00 parent 0x7fd300063270 prev 0x7fd300065ed8 <line:521:1, line:522:55> col:55 is_iec559 'const _Bool' constexpr
| |   |-VarDecl 0x7fd30006ac90 parent 0x7fd300063270 prev 0x7fd300065fc0 <line:523:1, line:524:55> col:55 is_bounded 'const _Bool' constexpr
| |   |-VarDecl 0x7fd30006af20 parent 0x7fd300063270 prev 0x7fd3000660a8 <line:525:1, line:526:55> col:55 is_modulo 'const _Bool' constexpr
| |   |-VarDecl 0x7fd30006b1b0 parent 0x7fd300063270 prev 0x7fd300066190 <line:527:1, line:528:55> col:55 traps 'const _Bool' constexpr
| |   |-VarDecl 0x7fd30006b440 parent 0x7fd300063270 prev 0x7fd300066278 <line:529:1, line:530:55> col:55 tinyness_before 'const _Bool' constexpr
| |   |-VarDecl 0x7fd30006b6d0 parent 0x7fd300063270 prev 0x7fd300066360 <line:531:1, line:532:68> col:68 round_style 'const enum std::__1::float_round_style' constexpr
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd30006b908 <line:534:1, line:578:1> line:535:28 class numeric_limits definition
| |   | |-private 'numeric_limits<_Tp>'
| |   | |-TemplateArgument type 'const type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fd30006b770 <line:534:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fd30006ba48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fd30006bc38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:535:1, col:28> col:28 implicit class numeric_limits
| |   | |-TypedefDecl 0x7fd30006bd88 <line:538:5, col:33> col:33 referenced __base 'numeric_limits<_Tp>'
| |   | | `-TemplateSpecializationType 0x7fd30006bce0 'numeric_limits<_Tp>' dependent numeric_limits
| |   | |   `-TemplateArgument type '_Tp'
| |   | |-TypedefDecl 0x7fd30006bdf0 <line:539:5, col:17> col:17 referenced type '_Tp'
| |   | | `-TemplateTypeParmType 0x7fd30006b7b0 '_Tp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fd30006b770 '_Tp'
| |   | |-AccessSpecDecl 0x7fd30006be48 <line:540:1, col:7> col:1 public
| |   | |-VarDecl 0x7fd30006be80 <line:541:5, col:66> col:41 is_specialized 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd30006bf50 <col:58, col:66> '<dependent type>' lvalue
| |   | |-CXXMethodDecl 0x7fd30006c068 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:542:99> col:61 constexpr min 'std::__1::numeric_limits<const type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd30006e0b0 <col:77, col:99>
| |   | | | `-ReturnStmt 0x7fd30006e098 <col:78, col:97>
| |   | | |   `-CallExpr 0x7fd30006e070 <col:85, col:97> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fd30006e030 <col:85, col:93> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fd30006c100 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd30006c148 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd30006c1b0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:543:99> col:61 constexpr max 'std::__1::numeric_limits<const type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd30006e188 <col:77, col:99>
| |   | | | `-ReturnStmt 0x7fd30006e170 <col:78, col:97>
| |   | | |   `-CallExpr 0x7fd30006e148 <col:85, col:97> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fd30006e108 <col:85, col:93> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fd30006c248 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd30006c290 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd30006c2f8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:544:105> col:61 constexpr lowest 'std::__1::numeric_limits<const type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd30006e260 <col:80, col:105>
| |   | | | `-ReturnStmt 0x7fd30006e248 <col:81, col:103>
| |   | | |   `-CallExpr 0x7fd30006e220 <col:88, col:103> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fd30006e1e0 <col:88, col:96> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fd30006c390 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd30006c3d8 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fd30006c400 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:546:5, col:58> col:41 digits 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd30006c498 <col:50, col:58> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd30006c4f0 <line:547:5, col:60> col:41 digits10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd30006c588 <col:52, col:60> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd30006c5e0 <line:548:5, col:64> col:41 max_digits10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd30006c678 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd30006c6c8 <line:549:5, col:61> col:41 is_signed 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd30006c760 <col:53, col:61> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd30006c7b0 <line:550:5, col:62> col:41 is_integer 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd30006c848 <col:54, col:62> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd30006c898 <line:551:5, col:60> col:41 is_exact 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd30006c930 <col:52, col:60> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd30006c988 <line:552:5, col:57> col:41 radix 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd30006ca30 <col:49, col:57> '<dependent type>' lvalue
| |   | |-CXXMethodDecl 0x7fd30006cac8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:553:107> col:61 constexpr epsilon 'std::__1::numeric_limits<const type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd30006e338 <col:81, col:107>
| |   | | | `-ReturnStmt 0x7fd30006e320 <col:82, col:105>
| |   | | |   `-CallExpr 0x7fd30006e2f8 <col:89, col:105> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fd30006e2b8 <col:89, col:97> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fd30006cb60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd30006cba8 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd30006cc10 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:554:115> col:61 constexpr round_error 'std::__1::numeric_limits<const type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd30006e410 <col:85, col:115>
| |   | | | `-ReturnStmt 0x7fd30006e3f8 <col:86, col:113>
| |   | | |   `-CallExpr 0x7fd30006e3d0 <col:93, col:113> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fd30006e390 <col:93, col:101> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fd30006cca8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd30006ccf0 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fd30006cd18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:556:5, col:64> col:41 min_exponent 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd30006cdb0 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd30006ce08 <line:557:5, col:66> col:41 min_exponent10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd30006cea0 <col:58, col:66> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd30006cef8 <line:558:5, col:64> col:41 max_exponent 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd30006cf90 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd30006cfe8 <line:559:5, col:66> col:41 max_exponent10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd30006d080 <col:58, col:66> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd30006d0d0 <line:561:5, col:64> col:41 has_infinity 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd30006d168 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd30006d1b8 <line:562:5, col:65> col:41 has_quiet_NaN 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd30006d250 <col:57, col:65> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd30006d2a0 <line:563:5, col:69> col:41 has_signaling_NaN 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd30006d338 <col:61, col:69> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd30006d388 <line:564:5, col:76> col:55 has_denorm 'const enum std::__1::float_denorm_style' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd30006d420 <col:68, col:76> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd30006d470 <line:565:5, col:67> col:41 has_denorm_loss 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd30006d508 <col:59, col:67> '<dependent type>' lvalue
| |   | |-CXXMethodDecl 0x7fd30006d5a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:566:109> col:61 constexpr infinity 'std::__1::numeric_limits<const type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd30006e4e8 <col:82, col:109>
| |   | | | `-ReturnStmt 0x7fd30006e4d0 <col:83, col:107>
| |   | | |   `-CallExpr 0x7fd30006e4a8 <col:90, col:107> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fd30006e468 <col:90, col:98> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fd30006d638 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd30006d680 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd30006d6e8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:567:111> col:61 constexpr quiet_NaN 'std::__1::numeric_limits<const type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd30006e5c0 <col:83, col:111>
| |   | | | `-ReturnStmt 0x7fd30006e5a8 <col:84, col:109>
| |   | | |   `-CallExpr 0x7fd30006e580 <col:91, col:109> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fd30006e540 <col:91, col:99> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fd30006d780 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd30006d7c8 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd30006d830 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:568:119> col:61 constexpr signaling_NaN 'std::__1::numeric_limits<const type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd30006e698 <col:87, col:119>
| |   | | | `-ReturnStmt 0x7fd30006e680 <col:88, col:117>
| |   | | |   `-CallExpr 0x7fd30006e658 <col:95, col:117> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fd30006e618 <col:95, col:103> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fd30006d8c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd30006d910 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd30006d978 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:569:113> col:61 constexpr denorm_min 'std::__1::numeric_limits<const type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd30006e770 <col:84, col:113>
| |   | | | `-ReturnStmt 0x7fd30006e758 <col:85, col:111>
| |   | | |   `-CallExpr 0x7fd30006e730 <col:92, col:111> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fd30006e6f0 <col:92, col:100> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fd30006da10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd30006da58 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fd30006da78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:571:5, col:61> col:41 is_iec559 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd30006db10 <col:53, col:61> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd30006db60 <line:572:5, col:62> col:41 is_bounded 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd30006dbf8 <col:54, col:62> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd30006dc48 <line:573:5, col:61> col:41 is_modulo 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd30006dce0 <col:53, col:61> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd30006dd30 <line:575:5, col:57> col:41 traps 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd30006ddc8 <col:49, col:57> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd30006de18 <line:576:5, col:67> col:41 tinyness_before 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd30006deb0 <col:59, col:67> '<dependent type>' lvalue
| |   | `-VarDecl 0x7fd30006df00 <line:577:5, col:76> col:54 round_style 'const enum std::__1::float_round_style' static constexpr cinit
| |   |   `-DependentScopeDeclRefExpr 0x7fd30006df98 <col:68, col:76> '<dependent type>' lvalue
| |   |-VarDecl 0x7fd30006e980 parent 0x7fd30006b908 prev 0x7fd30006be80 <line:580:1, line:581:61> col:61 is_specialized 'const _Bool' constexpr
| |   |-VarDecl 0x7fd30006f038 parent 0x7fd30006b908 prev 0x7fd30006c400 <line:582:1, line:583:60> col:60 digits 'const int' constexpr
| |   |-VarDecl 0x7fd30006f2d8 parent 0x7fd30006b908 prev 0x7fd30006c4f0 <line:584:1, line:585:60> col:60 digits10 'const int' constexpr
| |   |-VarDecl 0x7fd30006f578 parent 0x7fd30006b908 prev 0x7fd30006c5e0 <line:586:1, line:587:60> col:60 max_digits10 'const int' constexpr
| |   |-VarDecl 0x7fd30006f810 parent 0x7fd30006b908 prev 0x7fd30006c6c8 <line:588:1, line:589:61> col:61 is_signed 'const _Bool' constexpr
| |   |-VarDecl 0x7fd30006faa0 parent 0x7fd30006b908 prev 0x7fd30006c7b0 <line:590:1, line:591:61> col:61 is_integer 'const _Bool' constexpr
| |   |-VarDecl 0x7fd30006fd30 parent 0x7fd30006b908 prev 0x7fd30006c898 <line:592:1, line:593:61> col:61 is_exact 'const _Bool' constexpr
| |   |-VarDecl 0x7fd30006ffc8 parent 0x7fd30006b908 prev 0x7fd30006c988 <line:594:1, line:595:60> col:60 radix 'const int' constexpr
| |   |-VarDecl 0x7fd300070268 parent 0x7fd30006b908 prev 0x7fd30006cd18 <line:596:1, line:597:60> col:60 min_exponent 'const int' constexpr
| |   |-VarDecl 0x7fd300070508 parent 0x7fd30006b908 prev 0x7fd30006ce08 <line:598:1, line:599:60> col:60 min_exponent10 'const int' constexpr
| |   |-VarDecl 0x7fd3000707a8 parent 0x7fd30006b908 prev 0x7fd30006cef8 <line:600:1, line:601:60> col:60 max_exponent 'const int' constexpr
| |   |-VarDecl 0x7fd300070a48 parent 0x7fd30006b908 prev 0x7fd30006cfe8 <line:602:1, line:603:60> col:60 max_exponent10 'const int' constexpr
| |   |-VarDecl 0x7fd300070ce0 parent 0x7fd30006b908 prev 0x7fd30006d0d0 <line:604:1, line:605:61> col:61 has_infinity 'const _Bool' constexpr
| |   |-VarDecl 0x7fd300070f70 parent 0x7fd30006b908 prev 0x7fd30006d1b8 <line:606:1, line:607:61> col:61 has_quiet_NaN 'const _Bool' constexpr
| |   |-VarDecl 0x7fd300071200 parent 0x7fd30006b908 prev 0x7fd30006d2a0 <line:608:1, line:609:61> col:61 has_signaling_NaN 'const _Bool' constexpr
| |   |-VarDecl 0x7fd300071490 parent 0x7fd30006b908 prev 0x7fd30006d388 <line:610:1, line:611:75> col:75 has_denorm 'const enum std::__1::float_denorm_style' constexpr
| |   |-VarDecl 0x7fd300071720 parent 0x7fd30006b908 prev 0x7fd30006d470 <line:612:1, line:613:61> col:61 has_denorm_loss 'const _Bool' constexpr
| |   |-VarDecl 0x7fd3000719b0 parent 0x7fd30006b908 prev 0x7fd30006da78 <line:614:1, line:615:61> col:61 is_iec559 'const _Bool' constexpr
| |   |-VarDecl 0x7fd300071c40 parent 0x7fd30006b908 prev 0x7fd30006db60 <line:616:1, line:617:61> col:61 is_bounded 'const _Bool' constexpr
| |   |-VarDecl 0x7fd300071ed0 parent 0x7fd30006b908 prev 0x7fd30006dc48 <line:618:1, line:619:61> col:61 is_modulo 'const _Bool' constexpr
| |   |-VarDecl 0x7fd300072160 parent 0x7fd30006b908 prev 0x7fd30006dd30 <line:620:1, line:621:61> col:61 traps 'const _Bool' constexpr
| |   |-VarDecl 0x7fd3000723f0 parent 0x7fd30006b908 prev 0x7fd30006de18 <line:622:1, line:623:61> col:61 tinyness_before 'const _Bool' constexpr
| |   |-VarDecl 0x7fd300072680 parent 0x7fd30006b908 prev 0x7fd30006df00 <line:624:1, line:625:74> col:74 round_style 'const enum std::__1::float_round_style' constexpr
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd3000728b8 <line:627:1, line:671:1> line:628:28 class numeric_limits definition
| |   | |-private 'numeric_limits<_Tp>'
| |   | |-TemplateArgument type 'volatile type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fd300072720 <line:627:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fd3000729f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fd300072be8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:628:1, col:28> col:28 implicit class numeric_limits
| |   | |-TypedefDecl 0x7fd300072d38 <line:631:5, col:33> col:33 referenced __base 'numeric_limits<_Tp>'
| |   | | `-TemplateSpecializationType 0x7fd300072c90 'numeric_limits<_Tp>' dependent numeric_limits
| |   | |   `-TemplateArgument type '_Tp'
| |   | |-TypedefDecl 0x7fd300072da0 <line:632:5, col:17> col:17 referenced type '_Tp'
| |   | | `-TemplateTypeParmType 0x7fd300072760 '_Tp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fd300072720 '_Tp'
| |   | |-AccessSpecDecl 0x7fd300072e00 <line:633:1, col:7> col:1 public
| |   | |-VarDecl 0x7fd300072e38 <line:634:5, col:66> col:41 is_specialized 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd300072f10 <col:58, col:66> '<dependent type>' lvalue
| |   | |-CXXMethodDecl 0x7fd300073028 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:635:99> col:61 constexpr min 'std::__1::numeric_limits<volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd300075498 <col:77, col:99>
| |   | | | `-ReturnStmt 0x7fd300075480 <col:78, col:97>
| |   | | |   `-CallExpr 0x7fd300075458 <col:85, col:97> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fd300075418 <col:85, col:93> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fd3000730c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd300073108 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd300073170 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:636:99> col:61 constexpr max 'std::__1::numeric_limits<volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd300075570 <col:77, col:99>
| |   | | | `-ReturnStmt 0x7fd300075558 <col:78, col:97>
| |   | | |   `-CallExpr 0x7fd300075530 <col:85, col:97> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fd3000754f0 <col:85, col:93> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fd300073208 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd300073250 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd3000732b8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:637:105> col:61 constexpr lowest 'std::__1::numeric_limits<volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd300075648 <col:80, col:105>
| |   | | | `-ReturnStmt 0x7fd300075630 <col:81, col:103>
| |   | | |   `-CallExpr 0x7fd300075608 <col:88, col:103> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fd3000755c8 <col:88, col:96> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fd300073350 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd300073398 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fd3000733c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:639:5, col:58> col:41 digits 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd300073458 <col:50, col:58> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd3000734b0 <line:640:5, col:60> col:41 digits10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd300073548 <col:52, col:60> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd3000735a0 <line:641:5, col:64> col:41 max_digits10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd300073638 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd300073688 <line:642:5, col:61> col:41 is_signed 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd300073720 <col:53, col:61> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd300073770 <line:643:5, col:62> col:41 is_integer 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd300073808 <col:54, col:62> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd300073858 <line:644:5, col:60> col:41 is_exact 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd3000738f0 <col:52, col:60> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd300073948 <line:645:5, col:57> col:41 radix 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd3000739e0 <col:49, col:57> '<dependent type>' lvalue
| |   | |-CXXMethodDecl 0x7fd300073a78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:646:107> col:61 constexpr epsilon 'std::__1::numeric_limits<volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd300075720 <col:81, col:107>
| |   | | | `-ReturnStmt 0x7fd300075708 <col:82, col:105>
| |   | | |   `-CallExpr 0x7fd3000756e0 <col:89, col:105> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fd3000756a0 <col:89, col:97> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fd300073b10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd300073b58 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd300073bc0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:647:115> col:61 constexpr round_error 'std::__1::numeric_limits<volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd3000757f8 <col:85, col:115>
| |   | | | `-ReturnStmt 0x7fd3000757e0 <col:86, col:113>
| |   | | |   `-CallExpr 0x7fd3000757b8 <col:93, col:113> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fd300075778 <col:93, col:101> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fd300073c58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd300073ca0 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fd300073cc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:649:5, col:64> col:41 min_exponent 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd300073d60 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd300073db8 <line:650:5, col:66> col:41 min_exponent10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd300073e50 <col:58, col:66> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd300073ea8 <line:651:5, col:64> col:41 max_exponent 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd300073f40 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd300073f98 <line:652:5, col:66> col:41 max_exponent10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd300074030 <col:58, col:66> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd300074080 <line:654:5, col:64> col:41 has_infinity 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd300074118 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd300074168 <line:655:5, col:65> col:41 has_quiet_NaN 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd300074200 <col:57, col:65> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd300074250 <line:656:5, col:69> col:41 has_signaling_NaN 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd3000742e8 <col:61, col:69> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd300074338 <line:657:5, col:76> col:55 has_denorm 'const enum std::__1::float_denorm_style' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd3000743d0 <col:68, col:76> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd300074420 <line:658:5, col:67> col:41 has_denorm_loss 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd3000744b8 <col:59, col:67> '<dependent type>' lvalue
| |   | |-CXXMethodDecl 0x7fd300074550 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:659:109> col:61 constexpr infinity 'std::__1::numeric_limits<volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd3000758d0 <col:82, col:109>
| |   | | | `-ReturnStmt 0x7fd3000758b8 <col:83, col:107>
| |   | | |   `-CallExpr 0x7fd300075890 <col:90, col:107> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fd300075850 <col:90, col:98> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fd3000745e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd300074630 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd300074698 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:660:111> col:61 constexpr quiet_NaN 'std::__1::numeric_limits<volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd3000759a8 <col:83, col:111>
| |   | | | `-ReturnStmt 0x7fd300075990 <col:84, col:109>
| |   | | |   `-CallExpr 0x7fd300075968 <col:91, col:109> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fd300075928 <col:91, col:99> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fd300074730 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd300074778 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd3000747e0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:661:119> col:61 constexpr signaling_NaN 'std::__1::numeric_limits<volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd300075a80 <col:87, col:119>
| |   | | | `-ReturnStmt 0x7fd300075a68 <col:88, col:117>
| |   | | |   `-CallExpr 0x7fd300075a40 <col:95, col:117> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fd300075a00 <col:95, col:103> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fd300074878 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd3000748c0 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd300074928 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:662:113> col:61 constexpr denorm_min 'std::__1::numeric_limits<volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd300075b58 <col:84, col:113>
| |   | | | `-ReturnStmt 0x7fd300075b40 <col:85, col:111>
| |   | | |   `-CallExpr 0x7fd300075b18 <col:92, col:111> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fd300075ad8 <col:92, col:100> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fd3000749c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd300074a08 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fd300074a28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:664:5, col:61> col:41 is_iec559 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd300074ac0 <col:53, col:61> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd300074b10 <line:665:5, col:62> col:41 is_bounded 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd300074ba8 <col:54, col:62> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd300074bf8 <line:666:5, col:61> col:41 is_modulo 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd300074c90 <col:53, col:61> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd300074ce0 <line:668:5, col:57> col:41 traps 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd300074d78 <col:49, col:57> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd300075200 <line:669:5, col:67> col:41 tinyness_before 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd300075298 <col:59, col:67> '<dependent type>' lvalue
| |   | `-VarDecl 0x7fd3000752e8 <line:670:5, col:76> col:54 round_style 'const enum std::__1::float_round_style' static constexpr cinit
| |   |   `-DependentScopeDeclRefExpr 0x7fd300075380 <col:68, col:76> '<dependent type>' lvalue
| |   |-VarDecl 0x7fd300075d70 parent 0x7fd3000728b8 prev 0x7fd300072e38 <line:673:1, line:674:64> col:64 is_specialized 'const _Bool' constexpr
| |   |-VarDecl 0x7fd300076008 parent 0x7fd3000728b8 prev 0x7fd3000733c0 <line:675:1, line:676:63> col:63 digits 'const int' constexpr
| |   |-VarDecl 0x7fd3000762a8 parent 0x7fd3000728b8 prev 0x7fd3000734b0 <line:677:1, line:678:63> col:63 digits10 'const int' constexpr
| |   |-VarDecl 0x7fd300076548 parent 0x7fd3000728b8 prev 0x7fd3000735a0 <line:679:1, line:680:63> col:63 max_digits10 'const int' constexpr
| |   |-VarDecl 0x7fd3000767e0 parent 0x7fd3000728b8 prev 0x7fd300073688 <line:681:1, line:682:64> col:64 is_signed 'const _Bool' constexpr
| |   |-VarDecl 0x7fd300076a70 parent 0x7fd3000728b8 prev 0x7fd300073770 <line:683:1, line:684:64> col:64 is_integer 'const _Bool' constexpr
| |   |-VarDecl 0x7fd300076d00 parent 0x7fd3000728b8 prev 0x7fd300073858 <line:685:1, line:686:64> col:64 is_exact 'const _Bool' constexpr
| |   |-VarDecl 0x7fd300076f98 parent 0x7fd3000728b8 prev 0x7fd300073948 <line:687:1, line:688:63> col:63 radix 'const int' constexpr
| |   |-VarDecl 0x7fd300077240 parent 0x7fd3000728b8 prev 0x7fd300073cc8 <line:689:1, line:690:63> col:63 min_exponent 'const int' constexpr
| |   |-VarDecl 0x7fd3000774d8 parent 0x7fd3000728b8 prev 0x7fd300073db8 <line:691:1, line:692:63> col:63 min_exponent10 'const int' constexpr
| |   |-VarDecl 0x7fd300077778 parent 0x7fd3000728b8 prev 0x7fd300073ea8 <line:693:1, line:694:63> col:63 max_exponent 'const int' constexpr
| |   |-VarDecl 0x7fd300077a18 parent 0x7fd3000728b8 prev 0x7fd300073f98 <line:695:1, line:696:63> col:63 max_exponent10 'const int' constexpr
| |   |-VarDecl 0x7fd300077cb0 parent 0x7fd3000728b8 prev 0x7fd300074080 <line:697:1, line:698:64> col:64 has_infinity 'const _Bool' constexpr
| |   |-VarDecl 0x7fd300077f40 parent 0x7fd3000728b8 prev 0x7fd300074168 <line:699:1, line:700:64> col:64 has_quiet_NaN 'const _Bool' constexpr
| |   |-VarDecl 0x7fd3000781d0 parent 0x7fd3000728b8 prev 0x7fd300074250 <line:701:1, line:702:64> col:64 has_signaling_NaN 'const _Bool' constexpr
| |   |-VarDecl 0x7fd300078460 parent 0x7fd3000728b8 prev 0x7fd300074338 <line:703:1, line:704:78> col:78 has_denorm 'const enum std::__1::float_denorm_style' constexpr
| |   |-VarDecl 0x7fd3000786f0 parent 0x7fd3000728b8 prev 0x7fd300074420 <line:705:1, line:706:64> col:64 has_denorm_loss 'const _Bool' constexpr
| |   |-VarDecl 0x7fd300078980 parent 0x7fd3000728b8 prev 0x7fd300074a28 <line:707:1, line:708:64> col:64 is_iec559 'const _Bool' constexpr
| |   |-VarDecl 0x7fd300078c10 parent 0x7fd3000728b8 prev 0x7fd300074b10 <line:709:1, line:710:64> col:64 is_bounded 'const _Bool' constexpr
| |   |-VarDecl 0x7fd300078ea0 parent 0x7fd3000728b8 prev 0x7fd300074bf8 <line:711:1, line:712:64> col:64 is_modulo 'const _Bool' constexpr
| |   |-VarDecl 0x7fd300079130 parent 0x7fd3000728b8 prev 0x7fd300074ce0 <line:713:1, line:714:64> col:64 traps 'const _Bool' constexpr
| |   |-VarDecl 0x7fd3000793f0 parent 0x7fd3000728b8 prev 0x7fd300075200 <line:715:1, line:716:64> col:64 tinyness_before 'const _Bool' constexpr
| |   |-VarDecl 0x7fd300079680 parent 0x7fd3000728b8 prev 0x7fd3000752e8 <line:717:1, line:718:77> col:77 round_style 'const enum std::__1::float_round_style' constexpr
| |   |-ClassTemplatePartialSpecializationDecl 0x7fd3000798b8 <line:720:1, line:764:1> line:721:28 class numeric_limits definition
| |   | |-private 'numeric_limits<_Tp>'
| |   | |-TemplateArgument type 'const volatile type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fd300079720 <line:720:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fd3000799f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fd300079be8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:721:1, col:28> col:28 implicit class numeric_limits
| |   | |-TypedefDecl 0x7fd300079d38 <line:724:5, col:33> col:33 referenced __base 'numeric_limits<_Tp>'
| |   | | `-TemplateSpecializationType 0x7fd300079c90 'numeric_limits<_Tp>' dependent numeric_limits
| |   | |   `-TemplateArgument type '_Tp'
| |   | |-TypedefDecl 0x7fd300079da0 <line:725:5, col:17> col:17 referenced type '_Tp'
| |   | | `-TemplateTypeParmType 0x7fd300079760 '_Tp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fd300079720 '_Tp'
| |   | |-AccessSpecDecl 0x7fd300079df8 <line:726:1, col:7> col:1 public
| |   | |-VarDecl 0x7fd300079e30 <line:727:5, col:66> col:41 is_specialized 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd300079f00 <col:58, col:66> '<dependent type>' lvalue
| |   | |-CXXMethodDecl 0x7fd30007a018 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:728:99> col:61 constexpr min 'std::__1::numeric_limits<const volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd30007c060 <col:77, col:99>
| |   | | | `-ReturnStmt 0x7fd30007c048 <col:78, col:97>
| |   | | |   `-CallExpr 0x7fd30007c020 <col:85, col:97> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fd30007bfe0 <col:85, col:93> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fd30007a0b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd30007a0f8 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd30007a160 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:729:99> col:61 constexpr max 'std::__1::numeric_limits<const volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd30007c138 <col:77, col:99>
| |   | | | `-ReturnStmt 0x7fd30007c120 <col:78, col:97>
| |   | | |   `-CallExpr 0x7fd30007c0f8 <col:85, col:97> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fd30007c0b8 <col:85, col:93> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fd30007a1f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd30007a240 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd30007a2a8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:730:105> col:61 constexpr lowest 'std::__1::numeric_limits<const volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd30007c210 <col:80, col:105>
| |   | | | `-ReturnStmt 0x7fd30007c1f8 <col:81, col:103>
| |   | | |   `-CallExpr 0x7fd30007c1d0 <col:88, col:103> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fd30007c190 <col:88, col:96> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fd30007a340 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd30007a388 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fd30007a3b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:732:5, col:58> col:41 digits 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd30007a448 <col:50, col:58> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd30007a4a0 <line:733:5, col:60> col:41 digits10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd30007a538 <col:52, col:60> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd30007a590 <line:734:5, col:64> col:41 max_digits10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd30007a628 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd30007a678 <line:735:5, col:61> col:41 is_signed 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd30007a710 <col:53, col:61> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd30007a760 <line:736:5, col:62> col:41 is_integer 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd30007a7f8 <col:54, col:62> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd30007a848 <line:737:5, col:60> col:41 is_exact 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd30007a8e0 <col:52, col:60> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd30007a938 <line:738:5, col:57> col:41 radix 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd30007a9d0 <col:49, col:57> '<dependent type>' lvalue
| |   | |-CXXMethodDecl 0x7fd30007aa68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:739:107> col:61 constexpr epsilon 'std::__1::numeric_limits<const volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd30007c2e8 <col:81, col:107>
| |   | | | `-ReturnStmt 0x7fd30007c2d0 <col:82, col:105>
| |   | | |   `-CallExpr 0x7fd30007c2a8 <col:89, col:105> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fd30007c268 <col:89, col:97> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fd30007ab00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd30007ab48 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd30007abb0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:740:115> col:61 constexpr round_error 'std::__1::numeric_limits<const volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd30007c3c0 <col:85, col:115>
| |   | | | `-ReturnStmt 0x7fd30007c3a8 <col:86, col:113>
| |   | | |   `-CallExpr 0x7fd30007c380 <col:93, col:113> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fd30007c340 <col:93, col:101> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fd30007ac48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd30007ac90 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fd30007acb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:742:5, col:64> col:41 min_exponent 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd30007ad50 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd30007ada8 <line:743:5, col:66> col:41 min_exponent10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd30007ae40 <col:58, col:66> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd30007ae98 <line:744:5, col:64> col:41 max_exponent 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd30007af30 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd30007af88 <line:745:5, col:66> col:41 max_exponent10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd30007b020 <col:58, col:66> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd30007b070 <line:747:5, col:64> col:41 has_infinity 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd30007b108 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd30007b158 <line:748:5, col:65> col:41 has_quiet_NaN 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd30007b200 <col:57, col:65> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd30007b250 <line:749:5, col:69> col:41 has_signaling_NaN 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd30007b2e8 <col:61, col:69> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd30007b338 <line:750:5, col:76> col:55 has_denorm 'const enum std::__1::float_denorm_style' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd30007b3d0 <col:68, col:76> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd30007b420 <line:751:5, col:67> col:41 has_denorm_loss 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd30007b4b8 <col:59, col:67> '<dependent type>' lvalue
| |   | |-CXXMethodDecl 0x7fd30007b550 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:752:109> col:61 constexpr infinity 'std::__1::numeric_limits<const volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd30007c498 <col:82, col:109>
| |   | | | `-ReturnStmt 0x7fd30007c480 <col:83, col:107>
| |   | | |   `-CallExpr 0x7fd30007c458 <col:90, col:107> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fd30007c418 <col:90, col:98> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fd30007b5e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd30007b630 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd30007b698 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:753:111> col:61 constexpr quiet_NaN 'std::__1::numeric_limits<const volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd30007c570 <col:83, col:111>
| |   | | | `-ReturnStmt 0x7fd30007c558 <col:84, col:109>
| |   | | |   `-CallExpr 0x7fd30007c530 <col:91, col:109> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fd30007c4f0 <col:91, col:99> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fd30007b730 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd30007b778 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd30007b7e0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:754:119> col:61 constexpr signaling_NaN 'std::__1::numeric_limits<const volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd30007c648 <col:87, col:119>
| |   | | | `-ReturnStmt 0x7fd30007c630 <col:88, col:117>
| |   | | |   `-CallExpr 0x7fd30007c608 <col:95, col:117> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fd30007c5c8 <col:95, col:103> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fd30007b878 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd30007b8c0 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fd30007b928 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:755:113> col:61 constexpr denorm_min 'std::__1::numeric_limits<const volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fd30007c720 <col:84, col:113>
| |   | | | `-ReturnStmt 0x7fd30007c708 <col:85, col:111>
| |   | | |   `-CallExpr 0x7fd30007c6e0 <col:92, col:111> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fd30007c6a0 <col:92, col:100> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fd30007b9c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fd30007ba08 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fd30007ba28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:757:5, col:61> col:41 is_iec559 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd30007bac0 <col:53, col:61> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd30007bb10 <line:758:5, col:62> col:41 is_bounded 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd30007bba8 <col:54, col:62> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd30007bbf8 <line:759:5, col:61> col:41 is_modulo 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd30007bc90 <col:53, col:61> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd30007bce0 <line:761:5, col:57> col:41 traps 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd30007bd78 <col:49, col:57> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fd30007bdc8 <line:762:5, col:67> col:41 tinyness_before 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fd30007be60 <col:59, col:67> '<dependent type>' lvalue
| |   | `-VarDecl 0x7fd30007beb0 <line:763:5, col:76> col:54 round_style 'const enum std::__1::float_round_style' static constexpr cinit
| |   |   `-DependentScopeDeclRefExpr 0x7fd30007bf48 <col:68, col:76> '<dependent type>' lvalue
| |   |-VarDecl 0x7fd30007c930 parent 0x7fd3000798b8 prev 0x7fd300079e30 <line:766:1, line:767:70> col:70 is_specialized 'const _Bool' constexpr
| |   |-VarDecl 0x7fd30007cbc8 parent 0x7fd3000798b8 prev 0x7fd30007a3b0 <line:768:1, line:769:69> col:69 digits 'const int' constexpr
| |   |-VarDecl 0x7fd30007ce68 parent 0x7fd3000798b8 prev 0x7fd30007a4a0 <line:770:1, line:771:69> col:69 digits10 'const int' constexpr
| |   |-VarDecl 0x7fd30007d108 parent 0x7fd3000798b8 prev 0x7fd30007a590 <line:772:1, line:773:69> col:69 max_digits10 'const int' constexpr
| |   |-VarDecl 0x7fd30087c9b0 parent 0x7fd3000798b8 prev 0x7fd30007a678 <line:774:1, line:775:70> col:70 is_signed 'const _Bool' constexpr
| |   |-VarDecl 0x7fd30087cc40 parent 0x7fd3000798b8 prev 0x7fd30007a760 <line:776:1, line:777:70> col:70 is_integer 'const _Bool' constexpr
| |   |-VarDecl 0x7fd30087ced0 parent 0x7fd3000798b8 prev 0x7fd30007a848 <line:778:1, line:779:70> col:70 is_exact 'const _Bool' constexpr
| |   |-VarDecl 0x7fd30087d168 parent 0x7fd3000798b8 prev 0x7fd30007a938 <line:780:1, line:781:69> col:69 radix 'const int' constexpr
| |   |-VarDecl 0x7fd30087d408 parent 0x7fd3000798b8 prev 0x7fd30007acb8 <line:782:1, line:783:69> col:69 min_exponent 'const int' constexpr
| |   |-VarDecl 0x7fd30087d6a8 parent 0x7fd3000798b8 prev 0x7fd30007ada8 <line:784:1, line:785:69> col:69 min_exponent10 'const int' constexpr
| |   |-VarDecl 0x7fd30087d948 parent 0x7fd3000798b8 prev 0x7fd30007ae98 <line:786:1, line:787:69> col:69 max_exponent 'const int' constexpr
| |   |-VarDecl 0x7fd30087dbe8 parent 0x7fd3000798b8 prev 0x7fd30007af88 <line:788:1, line:789:69> col:69 max_exponent10 'const int' constexpr
| |   |-VarDecl 0x7fd30087de80 parent 0x7fd3000798b8 prev 0x7fd30007b070 <line:790:1, line:791:70> col:70 has_infinity 'const _Bool' constexpr
| |   |-VarDecl 0x7fd30087e110 parent 0x7fd3000798b8 prev 0x7fd30007b158 <line:792:1, line:793:70> col:70 has_quiet_NaN 'const _Bool' constexpr
| |   |-VarDecl 0x7fd30087e3a0 parent 0x7fd3000798b8 prev 0x7fd30007b250 <line:794:1, line:795:70> col:70 has_signaling_NaN 'const _Bool' constexpr
| |   |-VarDecl 0x7fd30087e630 parent 0x7fd3000798b8 prev 0x7fd30007b338 <line:796:1, line:797:84> col:84 has_denorm 'const enum std::__1::float_denorm_style' constexpr
| |   |-VarDecl 0x7fd30087e8c0 parent 0x7fd3000798b8 prev 0x7fd30007b420 <line:798:1, line:799:70> col:70 has_denorm_loss 'const _Bool' constexpr
| |   |-VarDecl 0x7fd30087eb50 parent 0x7fd3000798b8 prev 0x7fd30007ba28 <line:800:1, line:801:70> col:70 is_iec559 'const _Bool' constexpr
| |   |-VarDecl 0x7fd30087ede0 parent 0x7fd3000798b8 prev 0x7fd30007bb10 <line:802:1, line:803:70> col:70 is_bounded 'const _Bool' constexpr
| |   |-VarDecl 0x7fd30087f070 parent 0x7fd3000798b8 prev 0x7fd30007bbf8 <line:804:1, line:805:70> col:70 is_modulo 'const _Bool' constexpr
| |   |-VarDecl 0x7fd30087f300 parent 0x7fd3000798b8 prev 0x7fd30007bce0 <line:806:1, line:807:70> col:70 traps 'const _Bool' constexpr
| |   |-VarDecl 0x7fd30087f590 parent 0x7fd3000798b8 prev 0x7fd30007bdc8 <line:808:1, line:809:70> col:70 tinyness_before 'const _Bool' constexpr
| |   `-VarDecl 0x7fd30087f820 parent 0x7fd3000798b8 prev 0x7fd30007beb0 <line:810:1, line:811:83> col:83 round_style 'const enum std::__1::float_round_style' constexpr
| |-FunctionTemplateDecl 0x7fd30087fb20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:316:1, line:322:1> line:319:1 __libcpp_signbit
| | |-TemplateTypeParmDecl 0x7fd30087f8c0 <line:316:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd30087fa88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:322:1> line:319:1 __libcpp_signbit '_Bool (_A1) noexcept'
| |   |-ParmVarDecl 0x7fd30087f980 <col:18, col:22> col:22 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd300880290 <line:320:1, line:322:1>
| |   | `-ReturnStmt 0x7fd300880278 <line:321:5, /usr/include/math.h:186:72>
| |   |   `-ImplicitCastExpr 0x7fd300880260 <line:184:5, line:186:72> '_Bool' <IntegralToBoolean>
| |   |     `-ParenExpr 0x7fd300880240 <line:184:5, line:186:72> 'int'
| |   |       `-ConditionalOperator 0x7fd300880210 <line:184:7, line:186:71> 'int'
| |   |         |-BinaryOperator 0x7fd30087fc70 <line:184:7, col:32> '_Bool' '=='
| |   |         | |-UnaryExprOrTypeTraitExpr 0x7fd30087fc18 <col:7, col:15> 'unsigned long' sizeof
| |   |         | | `-ParenExpr 0x7fd30087fbf8 <col:13, col:15> '_A1' lvalue
| |   |         | |   `-DeclRefExpr 0x7fd30087fbd0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:321:20> '_A1' lvalue ParmVar 0x7fd30087f980 '__lcpp_x' '_A1'
| |   |         | `-UnaryExprOrTypeTraitExpr 0x7fd30087fc50 </usr/include/math.h:184:20, col:32> 'unsigned long' sizeof 'float'
| |   |         |-CallExpr 0x7fd30087fde8 <col:37, col:65> 'int'
| |   |         | |-ImplicitCastExpr 0x7fd30087fdd0 <col:37> 'int (*)(float)' <FunctionToPointerDecay>
| |   |         | | `-DeclRefExpr 0x7fd30087fda8 <col:37> 'int (float)' lvalue Function 0x7fd2ff8f9668 '__inline_signbitf' 'int (float)'
| |   |         | `-CStyleCastExpr 0x7fd30087fd80 <col:55, col:64> 'float' <Dependent>
| |   |         |   `-ParenExpr 0x7fd30087fd60 <col:62, col:64> '_A1' lvalue
| |   |         |     `-DeclRefExpr 0x7fd30087fcf0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:321:20> '_A1' lvalue ParmVar 0x7fd30087f980 '__lcpp_x' '_A1'
| |   |         `-ConditionalOperator 0x7fd3008801e0 </usr/include/math.h:185:7, line:186:71> 'int'
| |   |           |-BinaryOperator 0x7fd30087feb8 <line:185:7, col:33> '_Bool' '=='
| |   |           | |-UnaryExprOrTypeTraitExpr 0x7fd30087fe60 <col:7, col:15> 'unsigned long' sizeof
| |   |           | | `-ParenExpr 0x7fd30087fe40 <col:13, col:15> '_A1' lvalue
| |   |           | |   `-DeclRefExpr 0x7fd30087fe18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:321:20> '_A1' lvalue ParmVar 0x7fd30087f980 '__lcpp_x' '_A1'
| |   |           | `-UnaryExprOrTypeTraitExpr 0x7fd30087fe98 </usr/include/math.h:185:20, col:33> 'unsigned long' sizeof 'double'
| |   |           |-CallExpr 0x7fd300880030 <col:37, col:66> 'int'
| |   |           | |-ImplicitCastExpr 0x7fd300880018 <col:37> 'int (*)(double)' <FunctionToPointerDecay>
| |   |           | | `-DeclRefExpr 0x7fd30087fff0 <col:37> 'int (double)' lvalue Function 0x7fd2ff8fb3b0 '__inline_signbitd' 'int (double)'
| |   |           | `-CStyleCastExpr 0x7fd30087ffc8 <col:55, col:65> 'double' <Dependent>
| |   |           |   `-ParenExpr 0x7fd30087ffa8 <col:63, col:65> '_A1' lvalue
| |   |           |     `-DeclRefExpr 0x7fd30087ff38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:321:20> '_A1' lvalue ParmVar 0x7fd30087f980 '__lcpp_x' '_A1'
| |   |           `-CallExpr 0x7fd3008801b0 </usr/include/math.h:186:37, col:71> 'int'
| |   |             |-ImplicitCastExpr 0x7fd300880198 <col:37> 'int (*)(long double)' <FunctionToPointerDecay>
| |   |             | `-DeclRefExpr 0x7fd300880170 <col:37> 'int (long double)' lvalue Function 0x7fd2ff8fda88 '__inline_signbitl' 'int (long double)'
| |   |             `-CStyleCastExpr 0x7fd300880148 <col:55, col:70> 'long double' <Dependent>
| |   |               `-ParenExpr 0x7fd300880128 <col:68, col:70> '_A1' lvalue
| |   |                 `-DeclRefExpr 0x7fd3008800b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:321:20> '_A1' lvalue ParmVar 0x7fd30087f980 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd30087fb78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7fd30087fbc0 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fd300880898 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:326:1, line:332:1> line:329:1 signbit
| | |-TemplateTypeParmDecl 0x7fd3008802b0 <line:326:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd300880800 <line:327:1, line:332:1> line:329:1 signbit 'typename std::enable_if<std::is_floating_point<_A1>::value, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd3008806c0 <col:9, col:13> col:13 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd300880c48 <line:330:1, line:332:1>
| |   | `-ReturnStmt 0x7fd300880c30 <line:331:5, col:73>
| |   |   `-CallExpr 0x7fd300880c00 <col:12, col:73> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fd300880948 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_signbit' 0x7fd30087fb20
| |   |     `-CStyleCastExpr 0x7fd300880bd8 <col:29, col:65> 'typename std::__promote<_A1>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fd300880b90 <col:65> '_A1' lvalue ParmVar 0x7fd3008806c0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd3008808f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd300880938 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd300881390 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:334:1, line:339:24> line:338:1 signbit
| | |-TemplateTypeParmDecl 0x7fd300880c68 <line:334:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd3008812f8 <line:335:1, line:339:24> line:338:1 signbit 'typename std::enable_if<std::is_integral<_A1>::value && std::is_signed<_A1>::value, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd3008811e0 <col:9, col:13> col:13 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd3008814c8 <line:339:1, col:24>
| |   | `-ReturnStmt 0x7fd3008814b0 <col:3, col:21>
| |   |   `-BinaryOperator 0x7fd300881488 <col:10, col:21> '<dependent type>' '<'
| |   |     |-DeclRefExpr 0x7fd300881440 <col:10> '_A1' lvalue ParmVar 0x7fd3008811e0 '__lcpp_x' '_A1'
| |   |     `-IntegerLiteral 0x7fd300881468 <col:21> 'int' 0
| |   |-AlwaysInlineAttr 0x7fd3008813e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd300881430 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd300881be0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:341:1, line:346:17> line:345:1 signbit
| | |-TemplateTypeParmDecl 0x7fd3008814e8 <line:341:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd300881b48 <line:342:1, line:346:17> line:345:1 signbit 'typename std::enable_if<std::is_integral<_A1>::value && !std::is_signed<_A1>::value, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd300881a30 <col:9> col:12 '_A1'
| |   |-CompoundStmt 0x7fd300881cc0 <line:346:1, col:17>
| |   | `-ReturnStmt 0x7fd300881ca8 <col:3, col:10>
| |   |   `-CXXBoolLiteralExpr 0x7fd300881c90 <col:10> '_Bool' false
| |   |-AlwaysInlineAttr 0x7fd300881c38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd300881c80 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd300881f48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:378:1, line:384:1> line:381:1 __libcpp_fpclassify
| | |-TemplateTypeParmDecl 0x7fd300881ce0 <line:378:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd300881eb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:384:1> line:381:1 __libcpp_fpclassify 'int (_A1) noexcept'
| |   |-ParmVarDecl 0x7fd300881da0 <col:21, col:25> col:25 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd3008826a0 <line:382:1, line:384:1>
| |   | `-ReturnStmt 0x7fd300882688 <line:383:5, /usr/include/math.h:142:68>
| |   |   `-ParenExpr 0x7fd300882668 <line:140:5, line:142:68> 'int'
| |   |     `-ConditionalOperator 0x7fd300882638 <line:140:7, line:142:67> 'int'
| |   |       |-BinaryOperator 0x7fd300882098 <line:140:7, col:32> '_Bool' '=='
| |   |       | |-UnaryExprOrTypeTraitExpr 0x7fd300882040 <col:7, col:15> 'unsigned long' sizeof
| |   |       | | `-ParenExpr 0x7fd300882020 <col:13, col:15> '_A1' lvalue
| |   |       | |   `-DeclRefExpr 0x7fd300881ff8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:383:23> '_A1' lvalue ParmVar 0x7fd300881da0 '__lcpp_x' '_A1'
| |   |       | `-UnaryExprOrTypeTraitExpr 0x7fd300882078 </usr/include/math.h:140:20, col:32> 'unsigned long' sizeof 'float'
| |   |       |-CallExpr 0x7fd300882210 <col:37, col:61> 'int'
| |   |       | |-ImplicitCastExpr 0x7fd3008821f8 <col:37> 'int (*)(float)' <FunctionToPointerDecay>
| |   |       | | `-DeclRefExpr 0x7fd3008821d0 <col:37> 'int (float)' lvalue Function 0x7fd2ff866198 '__fpclassifyf' 'int (float)'
| |   |       | `-CStyleCastExpr 0x7fd3008821a8 <col:51, col:60> 'float' <Dependent>
| |   |       |   `-ParenExpr 0x7fd300882188 <col:58, col:60> '_A1' lvalue
| |   |       |     `-DeclRefExpr 0x7fd300882118 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:383:23> '_A1' lvalue ParmVar 0x7fd300881da0 '__lcpp_x' '_A1'
| |   |       `-ConditionalOperator 0x7fd300882608 </usr/include/math.h:141:7, line:142:67> 'int'
| |   |         |-BinaryOperator 0x7fd3008822e0 <line:141:7, col:33> '_Bool' '=='
| |   |         | |-UnaryExprOrTypeTraitExpr 0x7fd300882288 <col:7, col:15> 'unsigned long' sizeof
| |   |         | | `-ParenExpr 0x7fd300882268 <col:13, col:15> '_A1' lvalue
| |   |         | |   `-DeclRefExpr 0x7fd300882240 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:383:23> '_A1' lvalue ParmVar 0x7fd300881da0 '__lcpp_x' '_A1'
| |   |         | `-UnaryExprOrTypeTraitExpr 0x7fd3008822c0 </usr/include/math.h:141:20, col:33> 'unsigned long' sizeof 'double'
| |   |         |-CallExpr 0x7fd300882458 <col:37, col:62> 'int'
| |   |         | |-ImplicitCastExpr 0x7fd300882440 <col:37> 'int (*)(double)' <FunctionToPointerDecay>
| |   |         | | `-DeclRefExpr 0x7fd300882418 <col:37> 'int (double)' lvalue Function 0x7fd2ff866318 '__fpclassifyd' 'int (double)'
| |   |         | `-CStyleCastExpr 0x7fd3008823f0 <col:51, col:61> 'double' <Dependent>
| |   |         |   `-ParenExpr 0x7fd3008823d0 <col:59, col:61> '_A1' lvalue
| |   |         |     `-DeclRefExpr 0x7fd300882360 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:383:23> '_A1' lvalue ParmVar 0x7fd300881da0 '__lcpp_x' '_A1'
| |   |         `-CallExpr 0x7fd3008825d8 </usr/include/math.h:142:37, col:67> 'int'
| |   |           |-ImplicitCastExpr 0x7fd3008825c0 <col:37> 'int (*)(long double)' <FunctionToPointerDecay>
| |   |           | `-DeclRefExpr 0x7fd300882598 <col:37> 'int (long double)' lvalue Function 0x7fd2ff866498 '__fpclassifyl' 'int (long double)'
| |   |           `-CStyleCastExpr 0x7fd300882570 <col:51, col:66> 'long double' <Dependent>
| |   |             `-ParenExpr 0x7fd300882550 <col:64, col:66> '_A1' lvalue
| |   |               `-DeclRefExpr 0x7fd3008824e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:383:23> '_A1' lvalue ParmVar 0x7fd300881da0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd300881fa0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7fd300881fe8 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fd300882c60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:388:1, line:394:1> line:391:1 fpclassify
| | |-TemplateTypeParmDecl 0x7fd3008826c0 <line:388:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd300882bc8 <line:389:1, line:394:1> line:391:1 fpclassify 'typename std::enable_if<std::is_floating_point<_A1>::value, int>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd300882ab0 <col:12, col:16> col:16 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd300882f28 <line:392:1, line:394:1>
| |   | `-ReturnStmt 0x7fd300882f10 <line:393:5, col:76>
| |   |   `-CallExpr 0x7fd300882ee0 <col:12, col:76> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fd300882d10 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_fpclassify' 0x7fd300881f48
| |   |     `-CStyleCastExpr 0x7fd300882eb8 <col:32, col:68> 'typename std::__promote<_A1>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fd300882e70 <col:68> '_A1' lvalue ParmVar 0x7fd300882ab0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd300882cb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd300882d00 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd3008834e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:396:1, line:400:47> line:399:1 fpclassify
| | |-TemplateTypeParmDecl 0x7fd300882f48 <line:396:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd300883448 <line:397:1, line:400:47> line:399:1 fpclassify 'typename std::enable_if<std::is_integral<_A1>::value, int>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd300883330 <col:12, col:16> col:16 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd300883688 <line:400:1, col:47>
| |   | `-ReturnStmt 0x7fd300883670 <col:3, /usr/include/math.h:77:25>
| |   |   `-ConditionalOperator 0x7fd300883640 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:400:10, /usr/include/math.h:77:25> 'int'
| |   |     |-BinaryOperator 0x7fd3008835d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:400:10, col:22> '<dependent type>' '=='
| |   |     | |-DeclRefExpr 0x7fd300883590 <col:10> '_A1' lvalue ParmVar 0x7fd300883330 '__lcpp_x' '_A1'
| |   |     | `-IntegerLiteral 0x7fd3008835b8 <col:22> 'int' 0
| |   |     |-IntegerLiteral 0x7fd300883600 </usr/include/math.h:76:25> 'int' 3
| |   |     `-IntegerLiteral 0x7fd300883620 <line:77:25> 'int' 4
| |   |-AlwaysInlineAttr 0x7fd300883538 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd300883580 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd3008838d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:424:1, line:430:1> line:427:1 __libcpp_isfinite
| | |-TemplateTypeParmDecl 0x7fd3008836a8 <line:424:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd300883838 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:430:1> line:427:1 __libcpp_isfinite '_Bool (_A1) noexcept'
| |   |-ParmVarDecl 0x7fd300883770 <col:19, col:23> col:23 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd300884040 <line:428:1, line:430:1>
| |   | `-ReturnStmt 0x7fd300884028 <line:429:5, /usr/include/math.h:171:73>
| |   |   `-ImplicitCastExpr 0x7fd300884010 <line:169:5, line:171:73> '_Bool' <IntegralToBoolean>
| |   |     `-ParenExpr 0x7fd300883ff0 <line:169:5, line:171:73> 'int'
| |   |       `-ConditionalOperator 0x7fd300883fc0 <line:169:7, line:171:72> 'int'
| |   |         |-BinaryOperator 0x7fd300883a20 <line:169:7, col:32> '_Bool' '=='
| |   |         | |-UnaryExprOrTypeTraitExpr 0x7fd3008839c8 <col:7, col:15> 'unsigned long' sizeof
| |   |         | | `-ParenExpr 0x7fd3008839a8 <col:13, col:15> '_A1' lvalue
| |   |         | |   `-DeclRefExpr 0x7fd300883980 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:429:21> '_A1' lvalue ParmVar 0x7fd300883770 '__lcpp_x' '_A1'
| |   |         | `-UnaryExprOrTypeTraitExpr 0x7fd300883a00 </usr/include/math.h:169:20, col:32> 'unsigned long' sizeof 'float'
| |   |         |-CallExpr 0x7fd300883b98 <col:37, col:66> 'int'
| |   |         | |-ImplicitCastExpr 0x7fd300883b80 <col:37> 'int (*)(float)' <FunctionToPointerDecay>
| |   |         | | `-DeclRefExpr 0x7fd300883b58 <col:37> 'int (float)' lvalue Function 0x7fd2ff8f6790 '__inline_isfinitef' 'int (float)'
| |   |         | `-CStyleCastExpr 0x7fd300883b30 <col:56, col:65> 'float' <Dependent>
| |   |         |   `-ParenExpr 0x7fd300883b10 <col:63, col:65> '_A1' lvalue
| |   |         |     `-DeclRefExpr 0x7fd300883aa0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:429:21> '_A1' lvalue ParmVar 0x7fd300883770 '__lcpp_x' '_A1'
| |   |         `-ConditionalOperator 0x7fd300883f90 </usr/include/math.h:170:7, line:171:72> 'int'
| |   |           |-BinaryOperator 0x7fd300883c68 <line:170:7, col:33> '_Bool' '=='
| |   |           | |-UnaryExprOrTypeTraitExpr 0x7fd300883c10 <col:7, col:15> 'unsigned long' sizeof
| |   |           | | `-ParenExpr 0x7fd300883bf0 <col:13, col:15> '_A1' lvalue
| |   |           | |   `-DeclRefExpr 0x7fd300883bc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:429:21> '_A1' lvalue ParmVar 0x7fd300883770 '__lcpp_x' '_A1'
| |   |           | `-UnaryExprOrTypeTraitExpr 0x7fd300883c48 </usr/include/math.h:170:20, col:33> 'unsigned long' sizeof 'double'
| |   |           |-CallExpr 0x7fd300883de0 <col:37, col:67> 'int'
| |   |           | |-ImplicitCastExpr 0x7fd300883dc8 <col:37> 'int (*)(double)' <FunctionToPointerDecay>
| |   |           | | `-DeclRefExpr 0x7fd300883da0 <col:37> 'int (double)' lvalue Function 0x7fd2ff8f7000 '__inline_isfinited' 'int (double)'
| |   |           | `-CStyleCastExpr 0x7fd300883d78 <col:56, col:66> 'double' <Dependent>
| |   |           |   `-ParenExpr 0x7fd300883d58 <col:64, col:66> '_A1' lvalue
| |   |           |     `-DeclRefExpr 0x7fd300883ce8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:429:21> '_A1' lvalue ParmVar 0x7fd300883770 '__lcpp_x' '_A1'
| |   |           `-CallExpr 0x7fd300883f60 </usr/include/math.h:171:37, col:72> 'int'
| |   |             |-ImplicitCastExpr 0x7fd300883f48 <col:37> 'int (*)(long double)' <FunctionToPointerDecay>
| |   |             | `-DeclRefExpr 0x7fd300883f20 <col:37> 'int (long double)' lvalue Function 0x7fd2ff8f7900 '__inline_isfinitel' 'int (long double)'
| |   |             `-CStyleCastExpr 0x7fd300883ef8 <col:56, col:71> 'long double' <Dependent>
| |   |               `-ParenExpr 0x7fd300883ed8 <col:69, col:71> '_A1' lvalue
| |   |                 `-DeclRefExpr 0x7fd300883e68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:429:21> '_A1' lvalue ParmVar 0x7fd300883770 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd300883928 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7fd300883970 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fd300884780 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:434:1, line:442:1> line:439:1 isfinite
| | |-TemplateTypeParmDecl 0x7fd300884060 <line:434:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd3008846e8 <line:435:1, line:442:1> line:439:1 isfinite 'typename std::enable_if<std::is_arithmetic<_A1>::value && std::numeric_limits<_A1>::has_infinity, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd3008845d0 <col:10, col:14> col:14 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd300884a58 <line:440:1, line:442:1>
| |   | `-ReturnStmt 0x7fd300884a40 <line:441:5, col:74>
| |   |   `-CallExpr 0x7fd300884a10 <col:12, col:74> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fd300884848 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_isfinite' 0x7fd3008838d0
| |   |     `-CStyleCastExpr 0x7fd3008849e8 <col:30, col:66> 'typename std::__promote<_A1>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fd3008849a0 <col:66> '_A1' lvalue ParmVar 0x7fd3008845d0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd3008847d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd300884838 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd300885170 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:444:1, line:450:16> line:449:1 isfinite
| | |-TemplateTypeParmDecl 0x7fd300884a78 <line:444:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd3008850d8 <line:445:1, line:450:16> line:449:1 isfinite 'typename std::enable_if<std::is_arithmetic<_A1>::value && !std::numeric_limits<_A1>::has_infinity, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd300884fc0 <col:10> col:13 '_A1'
| |   |-CompoundStmt 0x7fd300885250 <line:450:1, col:16>
| |   | `-ReturnStmt 0x7fd300885238 <col:3, col:10>
| |   |   `-CXXBoolLiteralExpr 0x7fd300885220 <col:10> '_Bool' true
| |   |-AlwaysInlineAttr 0x7fd3008851c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd300885210 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd300885490 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:458:1, line:464:1> line:461:1 __libcpp_isinf
| | |-TemplateTypeParmDecl 0x7fd300885270 <line:458:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd3008853f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:464:1> line:461:1 __libcpp_isinf '_Bool (_A1) noexcept'
| |   |-ParmVarDecl 0x7fd300885330 <col:16, col:20> col:20 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd300885c00 <line:462:1, line:464:1>
| |   | `-ReturnStmt 0x7fd300885be8 <line:463:5, /usr/include/math.h:176:70>
| |   |   `-ImplicitCastExpr 0x7fd300885bd0 <line:174:5, line:176:70> '_Bool' <IntegralToBoolean>
| |   |     `-ParenExpr 0x7fd300885bb0 <line:174:5, line:176:70> 'int'
| |   |       `-ConditionalOperator 0x7fd300885b80 <line:174:7, line:176:69> 'int'
| |   |         |-BinaryOperator 0x7fd3008855e0 <line:174:7, col:32> '_Bool' '=='
| |   |         | |-UnaryExprOrTypeTraitExpr 0x7fd300885588 <col:7, col:15> 'unsigned long' sizeof
| |   |         | | `-ParenExpr 0x7fd300885568 <col:13, col:15> '_A1' lvalue
| |   |         | |   `-DeclRefExpr 0x7fd300885540 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:463:18> '_A1' lvalue ParmVar 0x7fd300885330 '__lcpp_x' '_A1'
| |   |         | `-UnaryExprOrTypeTraitExpr 0x7fd3008855c0 </usr/include/math.h:174:20, col:32> 'unsigned long' sizeof 'float'
| |   |         |-CallExpr 0x7fd300885758 <col:37, col:63> 'int'
| |   |         | |-ImplicitCastExpr 0x7fd300885740 <col:37> 'int (*)(float)' <FunctionToPointerDecay>
| |   |         | | `-DeclRefExpr 0x7fd300885718 <col:37> 'int (float)' lvalue Function 0x7fd2ff8f8170 '__inline_isinff' 'int (float)'
| |   |         | `-CStyleCastExpr 0x7fd3008856f0 <col:53, col:62> 'float' <Dependent>
| |   |         |   `-ParenExpr 0x7fd3008856d0 <col:60, col:62> '_A1' lvalue
| |   |         |     `-DeclRefExpr 0x7fd300885660 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:463:18> '_A1' lvalue ParmVar 0x7fd300885330 '__lcpp_x' '_A1'
| |   |         `-ConditionalOperator 0x7fd300885b50 </usr/include/math.h:175:7, line:176:69> 'int'
| |   |           |-BinaryOperator 0x7fd300885828 <line:175:7, col:33> '_Bool' '=='
| |   |           | |-UnaryExprOrTypeTraitExpr 0x7fd3008857d0 <col:7, col:15> 'unsigned long' sizeof
| |   |           | | `-ParenExpr 0x7fd3008857b0 <col:13, col:15> '_A1' lvalue
| |   |           | |   `-DeclRefExpr 0x7fd300885788 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:463:18> '_A1' lvalue ParmVar 0x7fd300885330 '__lcpp_x' '_A1'
| |   |           | `-UnaryExprOrTypeTraitExpr 0x7fd300885808 </usr/include/math.h:175:20, col:33> 'unsigned long' sizeof 'double'
| |   |           |-CallExpr 0x7fd3008859a0 <col:37, col:64> 'int'
| |   |           | |-ImplicitCastExpr 0x7fd300885988 <col:37> 'int (*)(double)' <FunctionToPointerDecay>
| |   |           | | `-DeclRefExpr 0x7fd300885960 <col:37> 'int (double)' lvalue Function 0x7fd2ff8f8490 '__inline_isinfd' 'int (double)'
| |   |           | `-CStyleCastExpr 0x7fd300885938 <col:53, col:63> 'double' <Dependent>
| |   |           |   `-ParenExpr 0x7fd300885918 <col:61, col:63> '_A1' lvalue
| |   |           |     `-DeclRefExpr 0x7fd3008858a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:463:18> '_A1' lvalue ParmVar 0x7fd300885330 '__lcpp_x' '_A1'
| |   |           `-CallExpr 0x7fd300885b20 </usr/include/math.h:176:37, col:69> 'int'
| |   |             |-ImplicitCastExpr 0x7fd300885b08 <col:37> 'int (*)(long double)' <FunctionToPointerDecay>
| |   |             | `-DeclRefExpr 0x7fd300885ae0 <col:37> 'int (long double)' lvalue Function 0x7fd2ff8f8bb0 '__inline_isinfl' 'int (long double)'
| |   |             `-CStyleCastExpr 0x7fd300885ab8 <col:53, col:68> 'long double' <Dependent>
| |   |               `-ParenExpr 0x7fd300885a98 <col:66, col:68> '_A1' lvalue
| |   |                 `-DeclRefExpr 0x7fd300885a28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:463:18> '_A1' lvalue ParmVar 0x7fd300885330 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd3008854e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7fd300885530 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fd300886200 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:468:1, line:476:1> line:473:1 isinf
| | |-TemplateTypeParmDecl 0x7fd300885c20 <line:468:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd300886168 <line:469:1, line:476:1> line:473:1 isinf 'typename std::enable_if<std::is_arithmetic<_A1>::value && std::numeric_limits<_A1>::has_infinity, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd300886090 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd3008864c8 <line:474:1, line:476:1>
| |   | `-ReturnStmt 0x7fd3008864b0 <line:475:5, col:71>
| |   |   `-CallExpr 0x7fd300886480 <col:12, col:71> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fd3008862b0 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_isinf' 0x7fd300885490
| |   |     `-CStyleCastExpr 0x7fd300886458 <col:27, col:63> 'typename std::__promote<_A1>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fd300886410 <col:63> '_A1' lvalue ParmVar 0x7fd300886090 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd300886258 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd3008862a0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd300886b00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:478:1, line:484:17> line:483:1 isinf
| | |-TemplateTypeParmDecl 0x7fd3008864e8 <line:478:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd300886a68 <line:479:1, line:484:17> line:483:1 isinf 'typename std::enable_if<std::is_arithmetic<_A1>::value && !std::numeric_limits<_A1>::has_infinity, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd300886990 <col:7> col:10 '_A1'
| |   |-CompoundStmt 0x7fd300886be0 <line:484:1, col:17>
| |   | `-ReturnStmt 0x7fd300886bc8 <col:3, col:10>
| |   |   `-CXXBoolLiteralExpr 0x7fd300886bb0 <col:10> '_Bool' false
| |   |-AlwaysInlineAttr 0x7fd300886b58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd300886ba0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd300886e20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:492:1, line:498:1> line:495:1 __libcpp_isnan
| | |-TemplateTypeParmDecl 0x7fd300886c00 <line:492:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd300886d88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:498:1> line:495:1 __libcpp_isnan '_Bool (_A1) noexcept'
| |   |-ParmVarDecl 0x7fd300886cc0 <col:16, col:20> col:20 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd300887590 <line:496:1, line:498:1>
| |   | `-ReturnStmt 0x7fd300887578 <line:497:5, /usr/include/math.h:181:70>
| |   |   `-ImplicitCastExpr 0x7fd300887560 <line:179:5, line:181:70> '_Bool' <IntegralToBoolean>
| |   |     `-ParenExpr 0x7fd300887540 <line:179:5, line:181:70> 'int'
| |   |       `-ConditionalOperator 0x7fd300887510 <line:179:7, line:181:69> 'int'
| |   |         |-BinaryOperator 0x7fd300886f70 <line:179:7, col:32> '_Bool' '=='
| |   |         | |-UnaryExprOrTypeTraitExpr 0x7fd300886f18 <col:7, col:15> 'unsigned long' sizeof
| |   |         | | `-ParenExpr 0x7fd300886ef8 <col:13, col:15> '_A1' lvalue
| |   |         | |   `-DeclRefExpr 0x7fd300886ed0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:497:18> '_A1' lvalue ParmVar 0x7fd300886cc0 '__lcpp_x' '_A1'
| |   |         | `-UnaryExprOrTypeTraitExpr 0x7fd300886f50 </usr/include/math.h:179:20, col:32> 'unsigned long' sizeof 'float'
| |   |         |-CallExpr 0x7fd3008870e8 <col:37, col:63> 'int'
| |   |         | |-ImplicitCastExpr 0x7fd3008870d0 <col:37> 'int (*)(float)' <FunctionToPointerDecay>
| |   |         | | `-DeclRefExpr 0x7fd3008870a8 <col:37> 'int (float)' lvalue Function 0x7fd2ff8f8ed0 '__inline_isnanf' 'int (float)'
| |   |         | `-CStyleCastExpr 0x7fd300887080 <col:53, col:62> 'float' <Dependent>
| |   |         |   `-ParenExpr 0x7fd300887060 <col:60, col:62> '_A1' lvalue
| |   |         |     `-DeclRefExpr 0x7fd300886ff0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:497:18> '_A1' lvalue ParmVar 0x7fd300886cc0 '__lcpp_x' '_A1'
| |   |         `-ConditionalOperator 0x7fd3008874e0 </usr/include/math.h:180:7, line:181:69> 'int'
| |   |           |-BinaryOperator 0x7fd3008871b8 <line:180:7, col:33> '_Bool' '=='
| |   |           | |-UnaryExprOrTypeTraitExpr 0x7fd300887160 <col:7, col:15> 'unsigned long' sizeof
| |   |           | | `-ParenExpr 0x7fd300887140 <col:13, col:15> '_A1' lvalue
| |   |           | |   `-DeclRefExpr 0x7fd300887118 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:497:18> '_A1' lvalue ParmVar 0x7fd300886cc0 '__lcpp_x' '_A1'
| |   |           | `-UnaryExprOrTypeTraitExpr 0x7fd300887198 </usr/include/math.h:180:20, col:33> 'unsigned long' sizeof 'double'
| |   |           |-CallExpr 0x7fd300887330 <col:37, col:64> 'int'
| |   |           | |-ImplicitCastExpr 0x7fd300887318 <col:37> 'int (*)(double)' <FunctionToPointerDecay>
| |   |           | | `-DeclRefExpr 0x7fd3008872f0 <col:37> 'int (double)' lvalue Function 0x7fd2ff8f9158 '__inline_isnand' 'int (double)'
| |   |           | `-CStyleCastExpr 0x7fd3008872c8 <col:53, col:63> 'double' <Dependent>
| |   |           |   `-ParenExpr 0x7fd3008872a8 <col:61, col:63> '_A1' lvalue
| |   |           |     `-DeclRefExpr 0x7fd300887238 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:497:18> '_A1' lvalue ParmVar 0x7fd300886cc0 '__lcpp_x' '_A1'
| |   |           `-CallExpr 0x7fd3008874b0 </usr/include/math.h:181:37, col:69> 'int'
| |   |             |-ImplicitCastExpr 0x7fd300887498 <col:37> 'int (*)(long double)' <FunctionToPointerDecay>
| |   |             | `-DeclRefExpr 0x7fd300887470 <col:37> 'int (long double)' lvalue Function 0x7fd2ff8f93e0 '__inline_isnanl' 'int (long double)'
| |   |             `-CStyleCastExpr 0x7fd300887448 <col:53, col:68> 'long double' <Dependent>
| |   |               `-ParenExpr 0x7fd300887428 <col:66, col:68> '_A1' lvalue
| |   |                 `-DeclRefExpr 0x7fd3008873b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:497:18> '_A1' lvalue ParmVar 0x7fd300886cc0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd300886e78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7fd300886ec0 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fd300887a50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:502:1, line:508:1> line:505:1 isnan
| | |-TemplateTypeParmDecl 0x7fd3008875b0 <line:502:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd3008879b8 <line:503:1, line:508:1> line:505:1 isnan 'typename std::enable_if<std::is_floating_point<_A1>::value, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd3008878e0 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd300887d18 <line:506:1, line:508:1>
| |   | `-ReturnStmt 0x7fd300887d00 <line:507:5, col:71>
| |   |   `-CallExpr 0x7fd300887cd0 <col:12, col:71> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fd300887b00 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_isnan' 0x7fd300886e20
| |   |     `-CStyleCastExpr 0x7fd300887ca8 <col:27, col:63> 'typename std::__promote<_A1>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fd300887c60 <col:63> '_A1' lvalue ParmVar 0x7fd3008878e0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd300887aa8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd300887af0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd3008882d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:510:1, line:514:17> line:513:1 isnan
| | |-TemplateTypeParmDecl 0x7fd300887d38 <line:510:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd300888238 <line:511:1, line:514:17> line:513:1 isnan 'typename std::enable_if<std::is_integral<_A1>::value, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd300888120 <col:7> col:10 '_A1'
| |   |-CompoundStmt 0x7fd3008883b0 <line:514:1, col:17>
| |   | `-ReturnStmt 0x7fd300888398 <col:3, col:10>
| |   |   `-CXXBoolLiteralExpr 0x7fd300888380 <col:10> '_Bool' false
| |   |-AlwaysInlineAttr 0x7fd300888328 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd300888370 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd3008885f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:522:1, line:528:1> line:525:1 __libcpp_isnormal
| | |-TemplateTypeParmDecl 0x7fd3008883d0 <line:522:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd300888558 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:528:1> line:525:1 __libcpp_isnormal '_Bool (_A1) noexcept'
| |   |-ParmVarDecl 0x7fd300888490 <col:19, col:23> col:23 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd300888d78 <line:526:1, line:528:1>
| |   | `-ReturnStmt 0x7fd300888d60 <line:527:5, /usr/include/math.h:166:73>
| |   |   `-ImplicitCastExpr 0x7fd300888d48 <line:164:5, line:166:73> '_Bool' <IntegralToBoolean>
| |   |     `-ParenExpr 0x7fd300888d28 <line:164:5, line:166:73> 'int'
| |   |       `-ConditionalOperator 0x7fd300888cf8 <line:164:7, line:166:72> 'int'
| |   |         |-BinaryOperator 0x7fd300888740 <line:164:7, col:32> '_Bool' '=='
| |   |         | |-UnaryExprOrTypeTraitExpr 0x7fd3008886e8 <col:7, col:15> 'unsigned long' sizeof
| |   |         | | `-ParenExpr 0x7fd3008886c8 <col:13, col:15> '_A1' lvalue
| |   |         | |   `-DeclRefExpr 0x7fd3008886a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:527:21> '_A1' lvalue ParmVar 0x7fd300888490 '__lcpp_x' '_A1'
| |   |         | `-UnaryExprOrTypeTraitExpr 0x7fd300888720 </usr/include/math.h:164:20, col:32> 'unsigned long' sizeof 'float'
| |   |         |-CallExpr 0x7fd3008888d0 <col:37, col:66> 'int'
| |   |         | |-ImplicitCastExpr 0x7fd3008888b8 <col:37> 'int (*)(float)' <FunctionToPointerDecay>
| |   |         | | `-DeclRefExpr 0x7fd300888890 <col:37> 'int (float)' lvalue Function 0x7fd2ff8ff838 '__inline_isnormalf' 'int (float)'
| |   |         | `-CStyleCastExpr 0x7fd300888868 <col:56, col:65> 'float' <Dependent>
| |   |         |   `-ParenExpr 0x7fd300888848 <col:63, col:65> '_A1' lvalue
| |   |         |     `-DeclRefExpr 0x7fd3008887c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:527:21> '_A1' lvalue ParmVar 0x7fd300888490 '__lcpp_x' '_A1'
| |   |         `-ConditionalOperator 0x7fd300888cc8 </usr/include/math.h:165:7, line:166:72> 'int'
| |   |           |-BinaryOperator 0x7fd3008889a0 <line:165:7, col:33> '_Bool' '=='
| |   |           | |-UnaryExprOrTypeTraitExpr 0x7fd300888948 <col:7, col:15> 'unsigned long' sizeof
| |   |           | | `-ParenExpr 0x7fd300888928 <col:13, col:15> '_A1' lvalue
| |   |           | |   `-DeclRefExpr 0x7fd300888900 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:527:21> '_A1' lvalue ParmVar 0x7fd300888490 '__lcpp_x' '_A1'
| |   |           | `-UnaryExprOrTypeTraitExpr 0x7fd300888980 </usr/include/math.h:165:20, col:33> 'unsigned long' sizeof 'double'
| |   |           |-CallExpr 0x7fd300888b18 <col:37, col:67> 'int'
| |   |           | |-ImplicitCastExpr 0x7fd300888b00 <col:37> 'int (*)(double)' <FunctionToPointerDecay>
| |   |           | | `-DeclRefExpr 0x7fd300888ad8 <col:37> 'int (double)' lvalue Function 0x7fd2ff900090 '__inline_isnormald' 'int (double)'
| |   |           | `-CStyleCastExpr 0x7fd300888ab0 <col:56, col:66> 'double' <Dependent>
| |   |           |   `-ParenExpr 0x7fd300888a90 <col:64, col:66> '_A1' lvalue
| |   |           |     `-DeclRefExpr 0x7fd300888a20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:527:21> '_A1' lvalue ParmVar 0x7fd300888490 '__lcpp_x' '_A1'
| |   |           `-CallExpr 0x7fd300888c98 </usr/include/math.h:166:37, col:72> 'int'
| |   |             |-ImplicitCastExpr 0x7fd300888c80 <col:37> 'int (*)(long double)' <FunctionToPointerDecay>
| |   |             | `-DeclRefExpr 0x7fd300888c58 <col:37> 'int (long double)' lvalue Function 0x7fd2ff9004d8 '__inline_isnormall' 'int (long double)'
| |   |             `-CStyleCastExpr 0x7fd300888c30 <col:56, col:71> 'long double' <Dependent>
| |   |               `-ParenExpr 0x7fd300888c10 <col:69, col:71> '_A1' lvalue
| |   |                 `-DeclRefExpr 0x7fd300888ba0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:527:21> '_A1' lvalue ParmVar 0x7fd300888490 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd300888648 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7fd300888690 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fd300889240 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:532:1, line:538:1> line:535:1 isnormal
| | |-TemplateTypeParmDecl 0x7fd300888d98 <line:532:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd3008891a8 <line:533:1, line:538:1> line:535:1 isnormal 'typename std::enable_if<std::is_floating_point<_A1>::value, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd3008890d0 <col:10, col:14> col:14 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd300889508 <line:536:1, line:538:1>
| |   | `-ReturnStmt 0x7fd3008894f0 <line:537:5, col:74>
| |   |   `-CallExpr 0x7fd3008894c0 <col:12, col:74> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fd3008892f0 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_isnormal' 0x7fd3008885f0
| |   |     `-CStyleCastExpr 0x7fd300889498 <col:30, col:66> 'typename std::__promote<_A1>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fd300889450 <col:66> '_A1' lvalue ParmVar 0x7fd3008890d0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd300889298 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd3008892e0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd3008899d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:540:1, line:544:25> line:543:1 isnormal
| | |-TemplateTypeParmDecl 0x7fd300889528 <line:540:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd300889938 <line:541:1, line:544:25> line:543:1 isnormal 'typename std::enable_if<std::is_integral<_A1>::value, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd300889860 <col:10, col:14> col:14 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd300889b08 <line:544:1, col:25>
| |   | `-ReturnStmt 0x7fd300889af0 <col:3, col:22>
| |   |   `-BinaryOperator 0x7fd300889ac8 <col:10, col:22> '<dependent type>' '!='
| |   |     |-DeclRefExpr 0x7fd300889a80 <col:10> '_A1' lvalue ParmVar 0x7fd300889860 '__lcpp_x' '_A1'
| |   |     `-IntegerLiteral 0x7fd300889aa8 <col:22> 'int' 0
| |   |-AlwaysInlineAttr 0x7fd300889a28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd300889a70 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd300889e90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:552:1, line:558:1> line:555:1 __libcpp_isgreater
| | |-TemplateTypeParmDecl 0x7fd300889b28 <line:552:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fd300889b98 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fd300889df8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:558:1> line:555:1 __libcpp_isgreater '_Bool (_A1, _A2) noexcept'
| |   |-ParmVarDecl 0x7fd300889c68 <col:20, col:24> col:24 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fd300889cd8 <col:34, col:38> col:38 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fd30088a1f8 <line:556:1, line:558:1>
| |   | `-ReturnStmt 0x7fd30088a1e0 <line:557:5, /usr/include/math.h:557:52>
| |   |   `-CallExpr 0x7fd30088a1a8 <col:25, col:52> '<dependent type>'
| |   |     |-DeclRefExpr 0x7fd30088a0f0 <col:25> '<builtin fn type>' Function 0x7fd30088a000 '__builtin_isgreater' 'int (...) noexcept'
| |   |     |-ParenExpr 0x7fd30088a140 <col:45, col:47> '_A1' lvalue
| |   |     | `-DeclRefExpr 0x7fd30088a118 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:557:22> '_A1' lvalue ParmVar 0x7fd300889c68 '__lcpp_x' '_A1'
| |   |     `-ParenExpr 0x7fd30088a188 </usr/include/math.h:557:49, col:51> '_A2' lvalue
| |   |       `-DeclRefExpr 0x7fd30088a160 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:557:32> '_A2' lvalue ParmVar 0x7fd300889cd8 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fd300889ef0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7fd300889f38 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fd30188e860 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:562:1, line:574:1> line:570:1 isgreater
| | |-TemplateTypeParmDecl 0x7fd30088a218 <line:562:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fd30088a288 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fd30188e7c8 <line:563:1, line:574:1> line:570:1 isgreater 'typename std::enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, _Bool>::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fd30188e630 <col:11, col:15> col:15 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fd30188e6a0 <col:25, col:29> col:29 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fd30188ed50 <line:571:1, line:574:1>
| |   | |-DeclStmt 0x7fd30188eba8 <line:572:5, col:57>
| |   | | `-TypedefDecl 0x7fd30188eb50 <col:5, col:53> col:53 referenced type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fd30188eae0 'typename std::__promote<_A1, _A2>::type' dependent
| |   | `-ReturnStmt 0x7fd30188ed38 <line:573:5, col:61>
| |   |   `-CallExpr 0x7fd30188ed00 <col:12, col:61> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fd30188ebc0 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_isgreater' 0x7fd300889e90
| |   |     |-CStyleCastExpr 0x7fd30188ec78 <col:31, col:37> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fd30188ec40 <col:37> '_A1' lvalue ParmVar 0x7fd30188e630 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fd30188ecd8 <col:47, col:53> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fd30188eca0 <col:53> '_A2' lvalue ParmVar 0x7fd30188e6a0 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fd30188e8c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd30188e908 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd30188f0a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:582:1, line:588:1> line:585:1 __libcpp_isgreaterequal
| | |-TemplateTypeParmDecl 0x7fd30188ed78 <line:582:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fd30188ede8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fd30188f008 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:588:1> line:585:1 __libcpp_isgreaterequal '_Bool (_A1, _A2) noexcept'
| |   |-ParmVarDecl 0x7fd30188eeb8 <col:25, col:29> col:29 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fd30188ef28 <col:39, col:43> col:43 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fd30188f3a0 <line:586:1, line:588:1>
| |   | `-ReturnStmt 0x7fd30188f388 <line:587:5, /usr/include/math.h:558:62>
| |   |   `-CallExpr 0x7fd30188f350 <col:30, col:62> '<dependent type>'
| |   |     |-DeclRefExpr 0x7fd30188f298 <col:30> '<builtin fn type>' Function 0x7fd30188f1a8 '__builtin_isgreaterequal' 'int (...) noexcept'
| |   |     |-ParenExpr 0x7fd30188f2e8 <col:55, col:57> '_A1' lvalue
| |   |     | `-DeclRefExpr 0x7fd30188f2c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:587:27> '_A1' lvalue ParmVar 0x7fd30188eeb8 '__lcpp_x' '_A1'
| |   |     `-ParenExpr 0x7fd30188f330 </usr/include/math.h:558:59, col:61> '_A2' lvalue
| |   |       `-DeclRefExpr 0x7fd30188f308 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:587:37> '_A2' lvalue ParmVar 0x7fd30188ef28 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fd30188f100 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7fd30188f148 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fd30188faa0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:592:1, line:604:1> line:600:1 isgreaterequal
| | |-TemplateTypeParmDecl 0x7fd30188f3c0 <line:592:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fd30188f428 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fd30188fa08 <line:593:1, line:604:1> line:600:1 isgreaterequal 'typename std::enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, _Bool>::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fd30188f8b0 <col:16, col:20> col:20 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fd30188f920 <col:30, col:34> col:34 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fd30188fec0 <line:601:1, line:604:1>
| |   | |-DeclStmt 0x7fd30188fd18 <line:602:5, col:57>
| |   | | `-TypedefDecl 0x7fd30188fcc0 <col:5, col:53> col:53 referenced type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fd30188fc50 'typename std::__promote<_A1, _A2>::type' dependent
| |   | `-ReturnStmt 0x7fd30188fea8 <line:603:5, col:66>
| |   |   `-CallExpr 0x7fd30188fe70 <col:12, col:66> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fd30188fd30 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_isgreaterequal' 0x7fd30188f0a0
| |   |     |-CStyleCastExpr 0x7fd30188fde8 <col:36, col:42> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fd30188fdb0 <col:42> '_A1' lvalue ParmVar 0x7fd30188f8b0 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fd30188fe48 <col:52, col:58> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fd30188fe10 <col:58> '_A2' lvalue ParmVar 0x7fd30188f920 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fd30188fb00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd30188fb48 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd301890210 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:612:1, line:618:1> line:615:1 __libcpp_isless
| | |-TemplateTypeParmDecl 0x7fd30188fee8 <line:612:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fd30188ff58 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fd301890178 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:618:1> line:615:1 __libcpp_isless '_Bool (_A1, _A2) noexcept'
| |   |-ParmVarDecl 0x7fd301890028 <col:17, col:21> col:21 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fd301890098 <col:31, col:35> col:35 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fd301890510 <line:616:1, line:618:1>
| |   | `-ReturnStmt 0x7fd3018904f8 <line:617:5, /usr/include/math.h:559:46>
| |   |   `-CallExpr 0x7fd3018904c0 <col:22, col:46> '<dependent type>'
| |   |     |-DeclRefExpr 0x7fd301890408 <col:22> '<builtin fn type>' Function 0x7fd301890318 '__builtin_isless' 'int (...) noexcept'
| |   |     |-ParenExpr 0x7fd301890458 <col:39, col:41> '_A1' lvalue
| |   |     | `-DeclRefExpr 0x7fd301890430 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:617:19> '_A1' lvalue ParmVar 0x7fd301890028 '__lcpp_x' '_A1'
| |   |     `-ParenExpr 0x7fd3018904a0 </usr/include/math.h:559:43, col:45> '_A2' lvalue
| |   |       `-DeclRefExpr 0x7fd301890478 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:617:29> '_A2' lvalue ParmVar 0x7fd301890098 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fd301890270 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7fd3018902b8 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fd301890c30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:622:1, line:634:1> line:630:1 isless
| | |-TemplateTypeParmDecl 0x7fd301890530 <line:622:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fd301890598 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fd301890b98 <line:623:1, line:634:1> line:630:1 isless 'typename std::enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, _Bool>::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fd301890a40 <col:8, col:12> col:12 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fd301890ab0 <col:22, col:26> col:26 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fd301891050 <line:631:1, line:634:1>
| |   | |-DeclStmt 0x7fd301890ea8 <line:632:5, col:57>
| |   | | `-TypedefDecl 0x7fd301890e50 <col:5, col:53> col:53 referenced type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fd301890de0 'typename std::__promote<_A1, _A2>::type' dependent
| |   | `-ReturnStmt 0x7fd301891038 <line:633:5, col:58>
| |   |   `-CallExpr 0x7fd301891000 <col:12, col:58> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fd301890ec0 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_isless' 0x7fd301890210
| |   |     |-CStyleCastExpr 0x7fd301890f78 <col:28, col:34> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fd301890f40 <col:34> '_A1' lvalue ParmVar 0x7fd301890a40 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fd301890fd8 <col:44, col:50> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fd301890fa0 <col:50> '_A2' lvalue ParmVar 0x7fd301890ab0 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fd301890c90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd301890cd8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd3018913a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:642:1, line:648:1> line:645:1 __libcpp_islessequal
| | |-TemplateTypeParmDecl 0x7fd301891078 <line:642:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fd3018910e8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fd301891308 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:648:1> line:645:1 __libcpp_islessequal '_Bool (_A1, _A2) noexcept'
| |   |-ParmVarDecl 0x7fd3018911b8 <col:22, col:26> col:26 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fd301891228 <col:36, col:40> col:40 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fd3018916a0 <line:646:1, line:648:1>
| |   | `-ReturnStmt 0x7fd301891688 <line:647:5, /usr/include/math.h:560:56>
| |   |   `-CallExpr 0x7fd301891650 <col:27, col:56> '<dependent type>'
| |   |     |-DeclRefExpr 0x7fd301891598 <col:27> '<builtin fn type>' Function 0x7fd3018914a8 '__builtin_islessequal' 'int (...) noexcept'
| |   |     |-ParenExpr 0x7fd3018915e8 <col:49, col:51> '_A1' lvalue
| |   |     | `-DeclRefExpr 0x7fd3018915c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:647:24> '_A1' lvalue ParmVar 0x7fd3018911b8 '__lcpp_x' '_A1'
| |   |     `-ParenExpr 0x7fd301891630 </usr/include/math.h:560:53, col:55> '_A2' lvalue
| |   |       `-DeclRefExpr 0x7fd301891608 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:647:34> '_A2' lvalue ParmVar 0x7fd301891228 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fd301891400 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7fd301891448 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fd301891da0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:652:1, line:664:1> line:660:1 islessequal
| | |-TemplateTypeParmDecl 0x7fd3018916c0 <line:652:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fd301891728 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fd301891d08 <line:653:1, line:664:1> line:660:1 islessequal 'typename std::enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, _Bool>::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fd301891bb0 <col:13, col:17> col:17 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fd301891c20 <col:27, col:31> col:31 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fd3018921c0 <line:661:1, line:664:1>
| |   | |-DeclStmt 0x7fd301892018 <line:662:5, col:57>
| |   | | `-TypedefDecl 0x7fd301891fc0 <col:5, col:53> col:53 referenced type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fd301891f50 'typename std::__promote<_A1, _A2>::type' dependent
| |   | `-ReturnStmt 0x7fd3018921a8 <line:663:5, col:63>
| |   |   `-CallExpr 0x7fd301892170 <col:12, col:63> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fd301892030 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_islessequal' 0x7fd3018913a0
| |   |     |-CStyleCastExpr 0x7fd3018920e8 <col:33, col:39> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fd3018920b0 <col:39> '_A1' lvalue ParmVar 0x7fd301891bb0 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fd301892148 <col:49, col:55> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fd301892110 <col:55> '_A2' lvalue ParmVar 0x7fd301891c20 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fd301891e00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd301891e48 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd301892510 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:672:1, line:678:1> line:675:1 __libcpp_islessgreater
| | |-TemplateTypeParmDecl 0x7fd3018921e8 <line:672:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fd301892258 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fd301892478 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:678:1> line:675:1 __libcpp_islessgreater '_Bool (_A1, _A2) noexcept'
| |   |-ParmVarDecl 0x7fd301892328 <col:24, col:28> col:28 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fd301892398 <col:38, col:42> col:42 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fd301892848 <line:676:1, line:678:1>
| |   | `-ReturnStmt 0x7fd301892830 <line:677:5, /usr/include/math.h:561:60>
| |   |   `-CallExpr 0x7fd3018927f8 <col:29, col:60> '<dependent type>'
| |   |     |-DeclRefExpr 0x7fd301892740 <col:29> '<builtin fn type>' Function 0x7fd301892650 '__builtin_islessgreater' 'int (...) noexcept'
| |   |     |-ParenExpr 0x7fd301892790 <col:53, col:55> '_A1' lvalue
| |   |     | `-DeclRefExpr 0x7fd301892768 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:677:26> '_A1' lvalue ParmVar 0x7fd301892328 '__lcpp_x' '_A1'
| |   |     `-ParenExpr 0x7fd3018927d8 </usr/include/math.h:561:57, col:59> '_A2' lvalue
| |   |       `-DeclRefExpr 0x7fd3018927b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:677:36> '_A2' lvalue ParmVar 0x7fd301892398 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fd301892570 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7fd3018925b8 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fd301892f50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:682:1, line:694:1> line:690:1 islessgreater
| | |-TemplateTypeParmDecl 0x7fd301892868 <line:682:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fd3018928d8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fd301892eb8 <line:683:1, line:694:1> line:690:1 islessgreater 'typename std::enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, _Bool>::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fd301892d60 <col:15, col:19> col:19 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fd301892dd0 <col:29, col:33> col:33 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fd301893370 <line:691:1, line:694:1>
| |   | |-DeclStmt 0x7fd3018931c8 <line:692:5, col:57>
| |   | | `-TypedefDecl 0x7fd301893170 <col:5, col:53> col:53 referenced type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fd301893100 'typename std::__promote<_A1, _A2>::type' dependent
| |   | `-ReturnStmt 0x7fd301893358 <line:693:5, col:65>
| |   |   `-CallExpr 0x7fd301893320 <col:12, col:65> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fd3018931e0 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_islessgreater' 0x7fd301892510
| |   |     |-CStyleCastExpr 0x7fd301893298 <col:35, col:41> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fd301893260 <col:41> '_A1' lvalue ParmVar 0x7fd301892d60 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fd3018932f8 <col:51, col:57> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fd3018932c0 <col:57> '_A2' lvalue ParmVar 0x7fd301892dd0 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fd301892fb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd301892ff8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd3018936c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:702:1, line:708:1> line:705:1 __libcpp_isunordered
| | |-TemplateTypeParmDecl 0x7fd301893398 <line:702:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fd301893408 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fd301893628 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:708:1> line:705:1 __libcpp_isunordered '_Bool (_A1, _A2) noexcept'
| |   |-ParmVarDecl 0x7fd3018934d8 <col:22, col:26> col:26 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fd301893548 <col:36, col:40> col:40 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fd3018939c0 <line:706:1, line:708:1>
| |   | `-ReturnStmt 0x7fd3018939a8 <line:707:5, /usr/include/math.h:562:56>
| |   |   `-CallExpr 0x7fd301893970 <col:27, col:56> '<dependent type>'
| |   |     |-DeclRefExpr 0x7fd3018938b8 <col:27> '<builtin fn type>' Function 0x7fd3018937c8 '__builtin_isunordered' 'int (...) noexcept'
| |   |     |-ParenExpr 0x7fd301893908 <col:49, col:51> '_A1' lvalue
| |   |     | `-DeclRefExpr 0x7fd3018938e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:707:24> '_A1' lvalue ParmVar 0x7fd3018934d8 '__lcpp_x' '_A1'
| |   |     `-ParenExpr 0x7fd301893950 </usr/include/math.h:562:53, col:55> '_A2' lvalue
| |   |       `-DeclRefExpr 0x7fd301893928 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:707:34> '_A2' lvalue ParmVar 0x7fd301893548 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fd301893720 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7fd301893768 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fd3018940c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:712:1, line:724:1> line:720:1 isunordered
| | |-TemplateTypeParmDecl 0x7fd3018939e0 <line:712:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fd301893a48 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fd301894028 <line:713:1, line:724:1> line:720:1 isunordered 'typename std::enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, _Bool>::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fd301893ed0 <col:13, col:17> col:17 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fd301893f40 <col:27, col:31> col:31 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fd3018944e0 <line:721:1, line:724:1>
| |   | |-DeclStmt 0x7fd301894338 <line:722:5, col:57>
| |   | | `-TypedefDecl 0x7fd3018942e0 <col:5, col:53> col:53 referenced type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fd301894270 'typename std::__promote<_A1, _A2>::type' dependent
| |   | `-ReturnStmt 0x7fd3018944c8 <line:723:5, col:63>
| |   |   `-CallExpr 0x7fd301894490 <col:12, col:63> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fd301894350 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_isunordered' 0x7fd3018936c0
| |   |     |-CStyleCastExpr 0x7fd301894408 <col:33, col:39> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fd3018943d0 <col:39> '_A1' lvalue ParmVar 0x7fd301893ed0 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fd301894468 <col:49, col:55> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fd301894430 <col:55> '_A2' lvalue ParmVar 0x7fd301893f40 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fd301894120 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd301894168 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd301894600 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:731:1, line:733:57> col:1 abs 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fd301894550 <col:5, col:11> col:11 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fd3018947f0 <col:31, col:57>
| | | `-ReturnStmt 0x7fd3018947d8 <col:32, col:55>
| | |   `-CallExpr 0x7fd301894790 <col:39, col:55> 'float'
| | |     |-ImplicitCastExpr 0x7fd301894778 <col:39, col:41> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd301894718 <col:39, col:41> 'float (float)' lvalue Function 0x7fd2ff90e8f0 'fabsf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fd3018947c0 <col:47> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd301894750 <col:47> 'float' lvalue ParmVar 0x7fd301894550 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fd3018946a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd3018946e8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd3018948f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:735:1, line:737:57> col:1 abs 'double (double) noexcept' inline
| | |-ParmVarDecl 0x7fd301894858 <col:5, col:12> col:12 used __lcpp_x 'double'
| | |-CompoundStmt 0x7fd301894ae0 <col:32, col:57>
| | | `-ReturnStmt 0x7fd301894ac8 <col:33, col:55>
| | |   `-CallExpr 0x7fd301894a80 <col:40, col:55> 'double'
| | |     |-ImplicitCastExpr 0x7fd301894a68 <col:40, col:42> 'double (*)(double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd301894a08 <col:40, col:42> 'double (double)' lvalue Function 0x7fd2ff90ea90 'fabs' 'double (double)'
| | |     `-ImplicitCastExpr 0x7fd301894ab0 <col:47> 'double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd301894a40 <col:47> 'double' lvalue ParmVar 0x7fd301894858 '__lcpp_x' 'double'
| | |-AlwaysInlineAttr 0x7fd301894990 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd3018949d8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd301894be0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:739:1, line:741:63> col:1 abs 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fd301894b48 <col:5, col:17> col:17 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fd301894dd0 <col:37, col:63>
| | | `-ReturnStmt 0x7fd301894db8 <col:38, col:61>
| | |   `-CallExpr 0x7fd301894d70 <col:45, col:61> 'long double'
| | |     |-ImplicitCastExpr 0x7fd301894d58 <col:45, col:47> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd301894cf8 <col:45, col:47> 'long double (long double)' lvalue Function 0x7fd2ff90ec30 'fabsl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fd301894da0 <col:53> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd301894d30 <col:53> 'long double' lvalue ParmVar 0x7fd301894b48 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fd301894c80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd301894cc8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd301894ed0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:747:1, col:109> col:46 acos 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fd301894e38 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fd3018950c0 <col:83, col:109>
| | | `-ReturnStmt 0x7fd3018950a8 <col:84, col:107>
| | |   `-CallExpr 0x7fd301895060 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fd301895048 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd301894fe8 <col:91, col:93> 'float (float)' lvalue Function 0x7fd2ff900938 'acosf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fd301895090 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd301895020 <col:99> 'float' lvalue ParmVar 0x7fd301894e38 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fd301894f70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd301894fb8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd3018951c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:748:1, col:109> col:46 acos 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fd301895128 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fd3018953b0 <col:83, col:109>
| | | `-ReturnStmt 0x7fd301895398 <col:84, col:107>
| | |   `-CallExpr 0x7fd301895350 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fd301895338 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd3018952d8 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fd2ff900c78 'acosl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fd301895380 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd301895310 <col:99> 'long double' lvalue ParmVar 0x7fd301895128 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fd301895260 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd3018952a8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd301895960 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:751:1, line:754:63> col:1 acos
| | |-TemplateTypeParmDecl 0x7fd3018953d0 <line:751:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd3018958c8 <line:752:1, line:754:63> col:1 acos 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd3018957b0 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd3018ce260 <col:30, col:63>
| |   | `-ReturnStmt 0x7fd3018ce248 <col:31, col:61>
| |   |   `-CallExpr 0x7fd3018ce218 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fd3018ce200 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fd3018ce1c8 <col:38, col:40> 'double (double)' lvalue Function 0x7fd2ff900ad8 'acos' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fd301895ae0 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fd301895aa0 <col:53> '_A1' lvalue ParmVar 0x7fd3018957b0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd3018959b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd301895a00 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd3018ce360 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:759:1, col:109> col:46 asin 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fd3018ce2c8 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fd3018ce550 <col:83, col:109>
| | | `-ReturnStmt 0x7fd3018ce538 <col:84, col:107>
| | |   `-CallExpr 0x7fd3018ce4f0 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fd3018ce4d8 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd3018ce478 <col:91, col:93> 'float (float)' lvalue Function 0x7fd2ff900e18 'asinf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fd3018ce520 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd3018ce4b0 <col:99> 'float' lvalue ParmVar 0x7fd3018ce2c8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fd3018ce400 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd3018ce448 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd3018ce650 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:760:1, col:109> col:46 asin 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fd3018ce5b8 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fd3018ce840 <col:83, col:109>
| | | `-ReturnStmt 0x7fd3018ce828 <col:84, col:107>
| | |   `-CallExpr 0x7fd3018ce7e0 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fd3018ce7c8 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd3018ce768 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fd2ff9011a0 'asinl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fd3018ce810 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd3018ce7a0 <col:99> 'long double' lvalue ParmVar 0x7fd3018ce5b8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fd3018ce6f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd3018ce738 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd3018ced00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:763:1, line:766:63> col:1 asin
| | |-TemplateTypeParmDecl 0x7fd3018ce860 <line:763:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd3018cec68 <line:764:1, line:766:63> col:1 asin 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd3018ceb90 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd3018cf220 <col:30, col:63>
| |   | `-ReturnStmt 0x7fd3018cf208 <col:31, col:61>
| |   |   `-CallExpr 0x7fd3018cf1d8 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fd3018cf1c0 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fd3018cf188 <col:38, col:40> 'double (double)' lvalue Function 0x7fd2ff901000 'asin' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fd3018cee80 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fd3018cee40 <col:53> '_A1' lvalue ParmVar 0x7fd3018ceb90 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd3018ced58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd3018ceda0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd3018cf320 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:771:1, col:109> col:46 atan 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fd3018cf288 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fd30088a940 <col:83, col:109>
| | | `-ReturnStmt 0x7fd30088a928 <col:84, col:107>
| | |   `-CallExpr 0x7fd30088a8e0 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fd30088a8c8 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd30088a868 <col:91, col:93> 'float (float)' lvalue Function 0x7fd2ff901340 'atanf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fd30088a910 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd30088a8a0 <col:99> 'float' lvalue ParmVar 0x7fd3018cf288 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fd3018cf3c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd30088a838 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd30088aa40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:772:1, col:109> col:46 atan 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fd30088a9a8 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fd30088ac30 <col:83, col:109>
| | | `-ReturnStmt 0x7fd30088ac18 <col:84, col:107>
| | |   `-CallExpr 0x7fd30088abd0 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fd30088abb8 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd30088ab58 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fd2ff901680 'atanl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fd30088ac00 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd30088ab90 <col:99> 'long double' lvalue ParmVar 0x7fd30088a9a8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fd30088aae0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd30088ab28 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd30088b0f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:775:1, line:778:63> col:1 atan
| | |-TemplateTypeParmDecl 0x7fd30088ac50 <line:775:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd30088b058 <line:776:1, line:778:63> col:1 atan 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd30088af80 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd30088b610 <col:30, col:63>
| |   | `-ReturnStmt 0x7fd30088b5f8 <col:31, col:61>
| |   |   `-CallExpr 0x7fd30088b5c8 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fd30088b5b0 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fd30088b578 <col:38, col:40> 'double (double)' lvalue Function 0x7fd2ff9014e0 'atan' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fd30088b270 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fd30088b230 <col:53> '_A1' lvalue ParmVar 0x7fd30088af80 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd30088b148 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd30088b190 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd30088b790 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:783:1, col:143> col:46 atan2 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7fd30088b678 <col:52, col:58> col:58 used __lcpp_y 'float'
| | |-ParmVarDecl 0x7fd30088b6f0 <col:68, col:74> col:74 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fd30088ba00 <col:106, col:143>
| | | `-ReturnStmt 0x7fd30088b9e8 <col:107, col:141>
| | |   `-CallExpr 0x7fd30088b980 <col:114, col:141> 'float'
| | |     |-ImplicitCastExpr 0x7fd30088b968 <col:114, col:116> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd30088b8b0 <col:114, col:116> 'float (float, float)' lvalue Function 0x7fd2ff9018e8 'atan2f' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7fd30088b9b8 <col:123> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fd30088b8e8 <col:123> 'float' lvalue ParmVar 0x7fd30088b678 '__lcpp_y' 'float'
| | |     `-ImplicitCastExpr 0x7fd30088b9d0 <col:133> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd30088b910 <col:133> 'float' lvalue ParmVar 0x7fd30088b6f0 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fd30088b838 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd30088b880 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd30088bb80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:784:1, col:143> col:46 atan2 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fd30088ba68 <col:52, col:64> col:64 used __lcpp_y 'long double'
| | |-ParmVarDecl 0x7fd30088bae0 <col:74, col:86> col:86 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fd30088bdf0 <col:106, col:143>
| | | `-ReturnStmt 0x7fd30088bdd8 <col:107, col:141>
| | |   `-CallExpr 0x7fd30088bd70 <col:114, col:141> 'long double'
| | |     |-ImplicitCastExpr 0x7fd30088bd58 <col:114, col:116> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd30088bca0 <col:114, col:116> 'long double (long double, long double)' lvalue Function 0x7fd2ff901e48 'atan2l' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fd30088bda8 <col:123> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fd30088bcd8 <col:123> 'long double' lvalue ParmVar 0x7fd30088ba68 '__lcpp_y' 'long double'
| | |     `-ImplicitCastExpr 0x7fd30088bdc0 <col:133> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd30088bd00 <col:133> 'long double' lvalue ParmVar 0x7fd30088bae0 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fd30088bc28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd30088bc70 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd30088c750 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:787:1, line:801:1> line:795:1 atan2
| | |-TemplateTypeParmDecl 0x7fd30088be10 <line:787:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fd30088be78 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fd30088c6b8 <line:788:1, line:801:1> line:795:1 atan2 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fd30088c520 <col:7, col:11> col:11 referenced __lcpp_y '_A1'
| |   |-ParmVarDecl 0x7fd30088c590 <col:21, col:25> col:25 referenced __lcpp_x '_A2'
| |   |-CompoundStmt 0x7fd30088e058 <line:796:1, line:801:1>
| |   | |-DeclStmt 0x7fd30088d9c8 <line:797:5, col:66>
| |   | | `-TypedefDecl 0x7fd30088d970 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fd30088d900 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fd30088dea0 <line:798:5, line:799:68>
| |   | | `-StaticAssertDecl 0x7fd30088de68 <line:798:5, line:799:67> line:798:5
| |   | |   |-ParenExpr 0x7fd30088de20 <col:19, line:799:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fd30088de00 <line:798:20, line:799:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fd30088dde0 <line:798:21, line:799:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fd30088ddb8 <line:798:22, line:799:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fd30088dbb8 <line:798:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fd30088dd78 <line:799:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fd30088de40 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fd30088e040 <line:800:5, col:68>
| |   |   `-CallExpr 0x7fd30088e008 <col:12, col:68> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fd30088ded8 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'atan2' 0x7fd2ff901b98 0x7fd30088b790 0x7fd30088bb80 0x7fd30088c750
| |   |     |-CStyleCastExpr 0x7fd30088df80 <col:20, col:35> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fd30088df48 <col:35> '_A1' lvalue ParmVar 0x7fd30088c520 '__lcpp_y' '_A1'
| |   |     `-CStyleCastExpr 0x7fd30088dfe0 <col:45, col:60> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fd30088dfa8 <col:60> '_A2' lvalue ParmVar 0x7fd30088c590 '__lcpp_x' '_A2'
| |   |-AlwaysInlineAttr 0x7fd30088c7b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd30088d800 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd30088e168 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:806:1, col:109> col:46 ceil 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fd30088e0d0 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fd30088e358 <col:83, col:109>
| | | `-ReturnStmt 0x7fd30088e340 <col:84, col:107>
| | |   `-CallExpr 0x7fd30088e2f8 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fd30088e2e0 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd30088e280 <col:91, col:93> 'float (float)' lvalue Function 0x7fd3008000a8 'ceilf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fd30088e328 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd30088e2b8 <col:99> 'float' lvalue ParmVar 0x7fd30088e0d0 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fd30088e208 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd30088e250 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd30088e458 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:807:1, col:109> col:46 ceil 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fd30088e3c0 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fd30088e648 <col:83, col:109>
| | | `-ReturnStmt 0x7fd30088e630 <col:84, col:107>
| | |   `-CallExpr 0x7fd30088e5e8 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fd30088e5d0 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd30088e570 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fd3008003e8 'ceill' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fd30088e618 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd30088e5a8 <col:99> 'long double' lvalue ParmVar 0x7fd30088e3c0 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fd30088e4f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd30088e540 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd30088eb10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:810:1, line:813:63> col:1 ceil
| | |-TemplateTypeParmDecl 0x7fd30088e668 <line:810:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd30088ea78 <line:811:1, line:813:63> col:1 ceil 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd30088e9a0 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd30088f030 <col:30, col:63>
| |   | `-ReturnStmt 0x7fd30088f018 <col:31, col:61>
| |   |   `-CallExpr 0x7fd30088efe8 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fd30088efd0 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fd30088ef98 <col:38, col:40> 'double (double)' lvalue Function 0x7fd300800248 'ceil' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fd30088ec90 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fd30088ec50 <col:53> '_A1' lvalue ParmVar 0x7fd30088e9a0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd30088eb68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd30088ebb0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd30088f130 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:818:1, col:107> col:46 cos 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fd30088f098 <col:50, col:56> col:56 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fd30088f320 <col:82, col:107>
| | | `-ReturnStmt 0x7fd30088f308 <col:83, col:105>
| | |   `-CallExpr 0x7fd30088f2c0 <col:90, col:105> 'float'
| | |     |-ImplicitCastExpr 0x7fd30088f2a8 <col:90, col:92> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd30088f248 <col:90, col:92> 'float (float)' lvalue Function 0x7fd2ff902830 'cosf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fd30088f2f0 <col:97> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd30088f280 <col:97> 'float' lvalue ParmVar 0x7fd30088f098 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fd30088f1d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd30088f218 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd30088f420 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:819:1, col:107> col:46 cos 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fd30088f388 <col:50, col:62> col:62 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fd30088f610 <col:82, col:107>
| | | `-ReturnStmt 0x7fd30088f5f8 <col:83, col:105>
| | |   `-CallExpr 0x7fd30088f5b0 <col:90, col:105> 'long double'
| | |     |-ImplicitCastExpr 0x7fd30088f598 <col:90, col:92> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd30088f538 <col:90, col:92> 'long double (long double)' lvalue Function 0x7fd2ff902b70 'cosl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fd30088f5e0 <col:97> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd30088f570 <col:97> 'long double' lvalue ParmVar 0x7fd30088f388 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fd30088f4c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd30088f508 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd30088fb00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:822:1, line:825:61> col:1 cos
| | |-TemplateTypeParmDecl 0x7fd30088f630 <line:822:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd30088fa68 <line:823:1, line:825:61> col:1 cos 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd30088f990 <col:5, col:9> col:9 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd300890020 <col:29, col:61>
| |   | `-ReturnStmt 0x7fd300890008 <col:30, col:59>
| |   |   `-CallExpr 0x7fd30088ffd8 <col:37, col:59> 'double'
| |   |     |-ImplicitCastExpr 0x7fd30088ffc0 <col:37, col:39> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fd30088ff88 <col:37, col:39> 'double (double)' lvalue Function 0x7fd2ff9029d0 'cos' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fd30088fc80 <col:43, col:51> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fd30088fc40 <col:51> '_A1' lvalue ParmVar 0x7fd30088f990 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd30088fb58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd30088fba0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd300890120 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:830:1, col:109> col:46 cosh 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fd300890088 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fd300890310 <col:83, col:109>
| | | `-ReturnStmt 0x7fd3008902f8 <col:84, col:107>
| | |   `-CallExpr 0x7fd3008902b0 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fd300890298 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd300890238 <col:91, col:93> 'float (float)' lvalue Function 0x7fd2ff904d90 'coshf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fd3008902e0 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd300890270 <col:99> 'float' lvalue ParmVar 0x7fd300890088 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fd3008901c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd300890208 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd300890410 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:831:1, col:109> col:46 cosh 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fd300890378 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fd300890600 <col:83, col:109>
| | | `-ReturnStmt 0x7fd3008905e8 <col:84, col:107>
| | |   `-CallExpr 0x7fd3008905a0 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fd300890588 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd300890528 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fd2ff9058f0 'coshl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fd3008905d0 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd300890560 <col:99> 'long double' lvalue ParmVar 0x7fd300890378 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fd3008904b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd3008904f8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd300890ac0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:834:1, line:837:63> col:1 cosh
| | |-TemplateTypeParmDecl 0x7fd300890620 <line:834:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd300890a28 <line:835:1, line:837:63> col:1 cosh 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd300890950 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd300890fe0 <col:30, col:63>
| |   | `-ReturnStmt 0x7fd300890fc8 <col:31, col:61>
| |   |   `-CallExpr 0x7fd300890f98 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fd300890f80 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fd300890f48 <col:38, col:40> 'double (double)' lvalue Function 0x7fd2ff904f30 'cosh' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fd300890c40 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fd300890c00 <col:53> '_A1' lvalue ParmVar 0x7fd300890950 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd300890b18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd300890b60 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd3008910e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:842:1, col:107> col:46 exp 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fd300891048 <col:50, col:56> col:56 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fd3008912d0 <col:82, col:107>
| | | `-ReturnStmt 0x7fd3008912b8 <col:83, col:105>
| | |   `-CallExpr 0x7fd300891270 <col:90, col:105> 'float'
| | |     |-ImplicitCastExpr 0x7fd300891258 <col:90, col:92> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd3008911f8 <col:90, col:92> 'float (float)' lvalue Function 0x7fd2ff906450 'expf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fd3008912a0 <col:97> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd300891230 <col:97> 'float' lvalue ParmVar 0x7fd300891048 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fd300891180 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd3008911c8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd3008913d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:843:1, col:107> col:46 exp 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fd300891338 <col:50, col:62> col:62 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fd3008915c0 <col:82, col:107>
| | | `-ReturnStmt 0x7fd3008915a8 <col:83, col:105>
| | |   `-CallExpr 0x7fd300891560 <col:90, col:105> 'long double'
| | |     |-ImplicitCastExpr 0x7fd300891548 <col:90, col:92> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd3008914e8 <col:90, col:92> 'long double (long double)' lvalue Function 0x7fd2ff906800 'expl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fd300891590 <col:97> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd300891520 <col:97> 'long double' lvalue ParmVar 0x7fd300891338 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fd300891470 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd3008914b8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd300891aa0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:846:1, line:849:61> col:1 exp
| | |-TemplateTypeParmDecl 0x7fd3008915e0 <line:846:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd300891a08 <line:847:1, line:849:61> col:1 exp 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd300891930 <col:5, col:9> col:9 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd300891fc0 <col:29, col:61>
| |   | `-ReturnStmt 0x7fd300891fa8 <col:30, col:59>
| |   |   `-CallExpr 0x7fd300891f78 <col:37, col:59> 'double'
| |   |     |-ImplicitCastExpr 0x7fd300891f60 <col:37, col:39> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fd300891f28 <col:37, col:39> 'double (double)' lvalue Function 0x7fd2ff9065f0 'exp' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fd300891c20 <col:43, col:51> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fd300891be0 <col:51> '_A1' lvalue ParmVar 0x7fd300891930 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd300891af8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd300891b40 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd3008920c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:854:1, col:109> col:46 fabs 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fd300892028 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fd3008922b0 <col:83, col:109>
| | | `-ReturnStmt 0x7fd300892298 <col:84, col:107>
| | |   `-CallExpr 0x7fd300892250 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fd300892238 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd3008921d8 <col:91, col:93> 'float (float)' lvalue Function 0x7fd2ff90e8f0 'fabsf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fd300892280 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd300892210 <col:99> 'float' lvalue ParmVar 0x7fd300892028 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fd300892160 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd3008921a8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd3008923b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:855:1, col:109> col:46 fabs 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fd300892318 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fd3008925a0 <col:83, col:109>
| | | `-ReturnStmt 0x7fd300892588 <col:84, col:107>
| | |   `-CallExpr 0x7fd300892540 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fd300892528 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd3008924c8 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fd2ff90ec30 'fabsl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fd300892570 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd300892500 <col:99> 'long double' lvalue ParmVar 0x7fd300892318 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fd300892450 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd300892498 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd300892a60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:858:1, line:861:63> col:1 fabs
| | |-TemplateTypeParmDecl 0x7fd3008925c0 <line:858:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd3008929c8 <line:859:1, line:861:63> col:1 fabs 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd3008928f0 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd300892f80 <col:30, col:63>
| |   | `-ReturnStmt 0x7fd300892f68 <col:31, col:61>
| |   |   `-CallExpr 0x7fd300892f38 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fd300892f20 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fd300892ee8 <col:38, col:40> 'double (double)' lvalue Function 0x7fd2ff90ea90 'fabs' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fd300892be0 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fd300892ba0 <col:53> '_A1' lvalue ParmVar 0x7fd3008928f0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd300892ab8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd300892b00 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd300893080 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:866:1, col:111> col:46 floor 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fd300892fe8 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fd300893270 <col:84, col:111>
| | | `-ReturnStmt 0x7fd300893258 <col:85, col:109>
| | |   `-CallExpr 0x7fd300893210 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7fd3008931f8 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd300893198 <col:92, col:94> 'float (float)' lvalue Function 0x7fd300800588 'floorf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fd300893240 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd3008931d0 <col:101> 'float' lvalue ParmVar 0x7fd300892fe8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fd300893120 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd300893168 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd300893370 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:867:1, col:111> col:46 floor 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fd3008932d8 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fd300893560 <col:84, col:111>
| | | `-ReturnStmt 0x7fd300893548 <col:85, col:109>
| | |   `-CallExpr 0x7fd300893500 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7fd3008934e8 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd300893488 <col:92, col:94> 'long double (long double)' lvalue Function 0x7fd3008008c8 'floorl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fd300893530 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd3008934c0 <col:101> 'long double' lvalue ParmVar 0x7fd3008932d8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fd300893410 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd300893458 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd300893a40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:870:1, line:873:65> col:1 floor
| | |-TemplateTypeParmDecl 0x7fd300893580 <line:870:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd3008939a8 <line:871:1, line:873:65> col:1 floor 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd3008938d0 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd300893f60 <col:31, col:65>
| |   | `-ReturnStmt 0x7fd300893f48 <col:32, col:63>
| |   |   `-CallExpr 0x7fd300893f18 <col:39, col:63> 'double'
| |   |     |-ImplicitCastExpr 0x7fd300893f00 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fd300893ec8 <col:39, col:41> 'double (double)' lvalue Function 0x7fd300800728 'floor' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fd300893bc0 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fd300893b80 <col:55> '_A1' lvalue ParmVar 0x7fd3008938d0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd300893a98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd300893ae0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd3008940e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:878:1, col:141> col:46 fmod 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7fd300893fc8 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fd300894040 <col:67, col:73> col:73 used __lcpp_y 'float'
| | |-CompoundStmt 0x7fd300894320 <col:105, col:141>
| | | `-ReturnStmt 0x7fd300894308 <col:106, col:139>
| | |   `-CallExpr 0x7fd3008942a0 <col:113, col:139> 'float'
| | |     |-ImplicitCastExpr 0x7fd300894288 <col:113, col:115> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd300894200 <col:113, col:115> 'float (float, float)' lvalue Function 0x7fd300803560 'fmodf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7fd3008942d8 <col:121> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fd300894238 <col:121> 'float' lvalue ParmVar 0x7fd300893fc8 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fd3008942f0 <col:131> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd300894260 <col:131> 'float' lvalue ParmVar 0x7fd300894040 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7fd300894188 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd3008941d0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd3008944a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:879:1, col:141> col:46 fmod 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fd300894388 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fd300894400 <col:73, col:85> col:85 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fd3008946e0 <col:105, col:141>
| | | `-ReturnStmt 0x7fd3008946c8 <col:106, col:139>
| | |   `-CallExpr 0x7fd300894660 <col:113, col:139> 'long double'
| | |     |-ImplicitCastExpr 0x7fd300894648 <col:113, col:115> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd3008945c0 <col:113, col:115> 'long double (long double, long double)' lvalue Function 0x7fd3008039b0 'fmodl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fd300894698 <col:121> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fd3008945f8 <col:121> 'long double' lvalue ParmVar 0x7fd300894388 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fd3008946b0 <col:131> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd300894620 <col:131> 'long double' lvalue ParmVar 0x7fd300894400 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fd300894548 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd300894590 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd300894f40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:882:1, line:896:1> line:890:1 fmod
| | |-TemplateTypeParmDecl 0x7fd300894700 <line:882:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fd300894768 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fd300894ea8 <line:883:1, line:896:1> line:890:1 fmod 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fd300894d50 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fd300894dc0 <col:20, col:24> col:24 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fd300895768 <line:891:1, line:896:1>
| |   | |-DeclStmt 0x7fd3008951b8 <line:892:5, col:66>
| |   | | `-TypedefDecl 0x7fd300895160 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fd3008950f0 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fd3008955b0 <line:893:5, line:894:68>
| |   | | `-StaticAssertDecl 0x7fd300895578 <line:893:5, line:894:67> line:893:5
| |   | |   |-ParenExpr 0x7fd300895530 <col:19, line:894:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fd300895510 <line:893:20, line:894:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fd3008954f0 <line:893:21, line:894:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fd3008954c8 <line:893:22, line:894:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fd300895328 <line:893:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fd300895488 <line:894:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fd300895550 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fd300895750 <line:895:5, col:67>
| |   |   `-CallExpr 0x7fd300895718 <col:12, col:67> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fd3008955e8 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'fmod' 0x7fd300803788 0x7fd3008940e0 0x7fd3008944a0 0x7fd300894f40
| |   |     |-CStyleCastExpr 0x7fd300895690 <col:19, col:34> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fd300895658 <col:34> '_A1' lvalue ParmVar 0x7fd300894d50 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fd3008956f0 <col:44, col:59> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fd3008956b8 <col:59> '_A2' lvalue ParmVar 0x7fd300894dc0 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fd300894fa0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd300894fe8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd300895918 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:901:1, col:136> col:46 frexp 'float (float, int *) noexcept' inline
| | |-ParmVarDecl 0x7fd300895800 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fd300895878 <col:68, col:73> col:73 used __lcpp_e 'int *'
| | |-CompoundStmt 0x7fd300895bb0 <col:99, col:136>
| | | `-ReturnStmt 0x7fd300895b98 <col:100, col:134>
| | |   `-CallExpr 0x7fd300895b30 <col:107, col:134> 'float'
| | |     |-ImplicitCastExpr 0x7fd300895b18 <col:107, col:109> 'float (*)(float, int *)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd300895a38 <col:107, col:109> 'float (float, int *)' lvalue Function 0x7fd2ff90bd88 'frexpf' 'float (float, int *)'
| | |     |-ImplicitCastExpr 0x7fd300895b68 <col:116> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fd300895a70 <col:116> 'float' lvalue ParmVar 0x7fd300895800 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fd300895b80 <col:126> 'int *' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd300895a98 <col:126> 'int *' lvalue ParmVar 0x7fd300895878 '__lcpp_e' 'int *'
| | |-AlwaysInlineAttr 0x7fd3008959c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd300895a08 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd300895d30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:902:1, col:136> col:46 frexp 'long double (long double, int *) noexcept' inline
| | |-ParmVarDecl 0x7fd300895c18 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fd300895c90 <col:74, col:79> col:79 used __lcpp_e 'int *'
| | |-CompoundStmt 0x7fd300895fd0 <col:99, col:136>
| | | `-ReturnStmt 0x7fd300895fb8 <col:100, col:134>
| | |   `-CallExpr 0x7fd300895f50 <col:107, col:134> 'long double'
| | |     |-ImplicitCastExpr 0x7fd300895f38 <col:107, col:109> 'long double (*)(long double, int *)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd300895e50 <col:107, col:109> 'long double (long double, int *)' lvalue Function 0x7fd2ff90c2c8 'frexpl' 'long double (long double, int *)'
| | |     |-ImplicitCastExpr 0x7fd300895f88 <col:116> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fd300895e88 <col:116> 'long double' lvalue ParmVar 0x7fd300895c18 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fd300895fa0 <col:126> 'int *' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd300895eb0 <col:126> 'int *' lvalue ParmVar 0x7fd300895c90 '__lcpp_e' 'int *'
| | |-AlwaysInlineAttr 0x7fd300895dd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd300895e20 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd300896560 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:905:1, line:908:90> col:1 frexp
| | |-TemplateTypeParmDecl 0x7fd300895ff0 <line:905:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd3008964c8 <line:906:1, line:908:90> col:1 frexp 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1, int *) noexcept' inline
| |   |-ParmVarDecl 0x7fd300896320 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fd300896398 <col:21, col:26> col:26 referenced __lcpp_e 'int *'
| |   |-CompoundStmt 0x7fd300896af8 <col:46, col:90>
| |   | `-ReturnStmt 0x7fd300896ae0 <col:47, col:88>
| |   |   `-CallExpr 0x7fd300896a90 <col:54, col:88> 'double'
| |   |     |-ImplicitCastExpr 0x7fd300896a78 <col:54, col:56> 'double (*)(double, int *)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fd300896a18 <col:54, col:56> 'double (double, int *)' lvalue Function 0x7fd2ff90c028 'frexp' 'double (double, int *)'
| |   |     |-CStyleCastExpr 0x7fd3008966e8 <col:62, col:70> 'double' <Dependent>
| |   |     | `-DeclRefExpr 0x7fd3008966a8 <col:70> '_A1' lvalue ParmVar 0x7fd300896320 '__lcpp_x' '_A1'
| |   |     `-ImplicitCastExpr 0x7fd300896ac8 <col:80> 'int *' <LValueToRValue>
| |   |       `-DeclRefExpr 0x7fd300896710 <col:80> 'int *' lvalue ParmVar 0x7fd300896398 '__lcpp_e' 'int *'
| |   |-AlwaysInlineAttr 0x7fd3008965c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd300896608 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd300896c78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:913:1, col:135> col:46 ldexp 'float (float, int) noexcept' inline
| | |-ParmVarDecl 0x7fd300896b60 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fd300896bd8 <col:68, col:72> col:72 used __lcpp_e 'int'
| | |-CompoundStmt 0x7fd300896ee0 <col:98, col:135>
| | | `-ReturnStmt 0x7fd300896ec8 <col:99, col:133>
| | |   `-CallExpr 0x7fd300896e60 <col:106, col:133> 'float'
| | |     |-ImplicitCastExpr 0x7fd300896e48 <col:106, col:108> 'float (*)(float, int)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd300896d98 <col:106, col:108> 'float (float, int)' lvalue Function 0x7fd2ff90a538 'ldexpf' 'float (float, int)'
| | |     |-ImplicitCastExpr 0x7fd300896e98 <col:115> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fd300896dd0 <col:115> 'float' lvalue ParmVar 0x7fd300896b60 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fd300896eb0 <col:125> 'int' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd300896df8 <col:125> 'int' lvalue ParmVar 0x7fd300896bd8 '__lcpp_e' 'int'
| | |-AlwaysInlineAttr 0x7fd300896d20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd300896d68 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd300897060 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:914:1, col:135> col:46 ldexp 'long double (long double, int) noexcept' inline
| | |-ParmVarDecl 0x7fd300896f48 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fd300896fc0 <col:74, col:78> col:78 used __lcpp_e 'int'
| | |-CompoundStmt 0x7fd3008972d0 <col:98, col:135>
| | | `-ReturnStmt 0x7fd3008972b8 <col:99, col:133>
| | |   `-CallExpr 0x7fd300897250 <col:106, col:133> 'long double'
| | |     |-ImplicitCastExpr 0x7fd300897238 <col:106, col:108> 'long double (*)(long double, int)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd300897180 <col:106, col:108> 'long double (long double, int)' lvalue Function 0x7fd2ff90bab8 'ldexpl' 'long double (long double, int)'
| | |     |-ImplicitCastExpr 0x7fd300897288 <col:115> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fd3008971b8 <col:115> 'long double' lvalue ParmVar 0x7fd300896f48 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fd3008972a0 <col:125> 'int' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd3008971e0 <col:125> 'int' lvalue ParmVar 0x7fd300896fc0 '__lcpp_e' 'int'
| | |-AlwaysInlineAttr 0x7fd300897108 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd300897150 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd300897898 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:917:1, line:920:89> col:1 ldexp
| | |-TemplateTypeParmDecl 0x7fd3008972f0 <line:917:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd300897800 <line:918:1, line:920:89> col:1 ldexp 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1, int) noexcept' inline
| |   |-ParmVarDecl 0x7fd300897620 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fd300897698 <col:21, col:25> col:25 referenced __lcpp_e 'int'
| |   |-CompoundStmt 0x7fd300897e38 <col:45, col:89>
| |   | `-ReturnStmt 0x7fd300897e20 <col:46, col:87>
| |   |   `-CallExpr 0x7fd300897dd0 <col:53, col:87> 'double'
| |   |     |-ImplicitCastExpr 0x7fd300897db8 <col:53, col:55> 'double (*)(double, int)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fd300897d58 <col:53, col:55> 'double (double, int)' lvalue Function 0x7fd2ff90b800 'ldexp' 'double (double, int)'
| |   |     |-CStyleCastExpr 0x7fd300897a20 <col:61, col:69> 'double' <Dependent>
| |   |     | `-DeclRefExpr 0x7fd3008979e0 <col:69> '_A1' lvalue ParmVar 0x7fd300897620 '__lcpp_x' '_A1'
| |   |     `-ImplicitCastExpr 0x7fd300897e08 <col:79> 'int' <LValueToRValue>
| |   |       `-DeclRefExpr 0x7fd300897a48 <col:79> 'int' lvalue ParmVar 0x7fd300897698 '__lcpp_e' 'int'
| |   |-AlwaysInlineAttr 0x7fd3008978f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd300897940 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd300897f38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:925:1, col:107> col:46 log 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fd300897ea0 <col:50, col:56> col:56 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fd300898128 <col:82, col:107>
| | | `-ReturnStmt 0x7fd300898110 <col:83, col:105>
| | |   `-CallExpr 0x7fd3008980c8 <col:90, col:105> 'float'
| | |     |-ImplicitCastExpr 0x7fd3008980b0 <col:90, col:92> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd300898050 <col:90, col:92> 'float (float)' lvalue Function 0x7fd2ff907360 'logf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fd3008980f8 <col:97> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd300898088 <col:97> 'float' lvalue ParmVar 0x7fd300897ea0 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fd300897fd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd300898020 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd300898228 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:926:1, col:107> col:46 log 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fd300898190 <col:50, col:62> col:62 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fd300898418 <col:82, col:107>
| | | `-ReturnStmt 0x7fd300898400 <col:83, col:105>
| | |   `-CallExpr 0x7fd3008983b8 <col:90, col:105> 'long double'
| | |     |-ImplicitCastExpr 0x7fd3008983a0 <col:90, col:92> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd300898340 <col:90, col:92> 'long double (long double)' lvalue Function 0x7fd2ff9076a0 'logl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fd3008983e8 <col:97> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd300898378 <col:97> 'long double' lvalue ParmVar 0x7fd300898190 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fd3008982c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd300898310 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd3008988e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:929:1, line:932:61> col:1 log
| | |-TemplateTypeParmDecl 0x7fd300898438 <line:929:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd300898848 <line:930:1, line:932:61> col:1 log 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd300898770 <col:5, col:9> col:9 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd300898e00 <col:29, col:61>
| |   | `-ReturnStmt 0x7fd300898de8 <col:30, col:59>
| |   |   `-CallExpr 0x7fd300898db8 <col:37, col:59> 'double'
| |   |     |-ImplicitCastExpr 0x7fd300898da0 <col:37, col:39> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fd300898d68 <col:37, col:39> 'double (double)' lvalue Function 0x7fd2ff907500 'log' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fd300898a60 <col:43, col:51> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fd300898a20 <col:51> '_A1' lvalue ParmVar 0x7fd300898770 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd300898938 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd300898980 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd300898f00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:937:1, col:111> col:46 log10 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fd300898e68 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fd3008990f0 <col:84, col:111>
| | | `-ReturnStmt 0x7fd3008990d8 <col:85, col:109>
| | |   `-CallExpr 0x7fd300899090 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7fd300899078 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd300899018 <col:92, col:94> 'float (float)' lvalue Function 0x7fd2ff907890 'log10f' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fd3008990c0 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd300899050 <col:101> 'float' lvalue ParmVar 0x7fd300898e68 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fd300898fa0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd300898fe8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd3008991f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:938:1, col:111> col:46 log10 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fd300899158 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fd3008993e0 <col:84, col:111>
| | | `-ReturnStmt 0x7fd3008993c8 <col:85, col:109>
| | |   `-CallExpr 0x7fd300899380 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7fd300899368 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd300899308 <col:92, col:94> 'long double (long double)' lvalue Function 0x7fd2ff907bd0 'log10l' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fd3008993b0 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd300899340 <col:101> 'long double' lvalue ParmVar 0x7fd300899158 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fd300899290 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd3008992d8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd3008998d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:941:1, line:944:65> col:1 log10
| | |-TemplateTypeParmDecl 0x7fd300899400 <line:941:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd300899840 <line:942:1, line:944:65> col:1 log10 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd300899730 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd300899e00 <col:31, col:65>
| |   | `-ReturnStmt 0x7fd300899de8 <col:32, col:63>
| |   |   `-CallExpr 0x7fd300899db8 <col:39, col:63> 'double'
| |   |     |-ImplicitCastExpr 0x7fd300899da0 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fd300899d68 <col:39, col:41> 'double (double)' lvalue Function 0x7fd2ff907a30 'log10' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fd300899a58 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fd300899a18 <col:55> '_A1' lvalue ParmVar 0x7fd300899730 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd300899930 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd300899978 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd300899f80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:949:1, col:142> col:46 modf 'float (float, float *) noexcept' inline
| | |-ParmVarDecl 0x7fd300899e68 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fd300899ee0 <col:67, col:74> col:74 used __lcpp_y 'float *'
| | |-CompoundStmt 0x7fd30089a220 <col:106, col:142>
| | | `-ReturnStmt 0x7fd30089a208 <col:107, col:140>
| | |   `-CallExpr 0x7fd30089a1a0 <col:114, col:140> 'float'
| | |     |-ImplicitCastExpr 0x7fd30089a188 <col:114, col:116> 'float (*)(float, float *)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd30089a0a0 <col:114, col:116> 'float (float, float *)' lvalue Function 0x7fd2ff909d18 'modff' 'float (float, float *)'
| | |     |-ImplicitCastExpr 0x7fd30089a1d8 <col:122> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fd30089a0d8 <col:122> 'float' lvalue ParmVar 0x7fd300899e68 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fd30089a1f0 <col:132> 'float *' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd30089a100 <col:132> 'float *' lvalue ParmVar 0x7fd300899ee0 '__lcpp_y' 'float *'
| | |-AlwaysInlineAttr 0x7fd30089a028 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd30089a070 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd30089a3a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:950:1, col:142> col:46 modf 'long double (long double, long double *) noexcept' inline
| | |-ParmVarDecl 0x7fd30089a288 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fd30089a300 <col:73, col:86> col:86 used __lcpp_y 'long double *'
| | |-CompoundStmt 0x7fd30089a640 <col:106, col:142>
| | | `-ReturnStmt 0x7fd30089a628 <col:107, col:140>
| | |   `-CallExpr 0x7fd30089a5c0 <col:114, col:140> 'long double'
| | |     |-ImplicitCastExpr 0x7fd30089a5a8 <col:114, col:116> 'long double (*)(long double, long double *)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd30089a4c0 <col:114, col:116> 'long double (long double, long double *)' lvalue Function 0x7fd2ff90a298 'modfl' 'long double (long double, long double *)'
| | |     |-ImplicitCastExpr 0x7fd30089a5f8 <col:122> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fd30089a4f8 <col:122> 'long double' lvalue ParmVar 0x7fd30089a288 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fd30089a610 <col:132> 'long double *' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd30089a520 <col:132> 'long double *' lvalue ParmVar 0x7fd30089a300 '__lcpp_y' 'long double *'
| | |-AlwaysInlineAttr 0x7fd30089a448 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd30089a490 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd30089a7c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:956:1, col:139> col:46 pow 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7fd30089a6a8 <col:50, col:56> col:56 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fd30089a720 <col:66, col:72> col:72 used __lcpp_y 'float'
| | |-CompoundStmt 0x7fd30089aa00 <col:104, col:139>
| | | `-ReturnStmt 0x7fd30089a9e8 <col:105, col:137>
| | |   `-CallExpr 0x7fd30089a980 <col:112, col:137> 'float'
| | |     |-ImplicitCastExpr 0x7fd30089a968 <col:112, col:114> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd30089a8e0 <col:112, col:114> 'float (float, float)' lvalue Function 0x7fd2ff90fa28 'powf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7fd30089a9b8 <col:119> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fd30089a918 <col:119> 'float' lvalue ParmVar 0x7fd30089a6a8 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fd30089a9d0 <col:129> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd30089a940 <col:129> 'float' lvalue ParmVar 0x7fd30089a720 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7fd30089a868 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd30089a8b0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd30089ab80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:957:1, col:139> col:46 pow 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fd30089aa68 <col:50, col:62> col:62 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fd30089aae0 <col:72, col:84> col:84 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fd30089adc0 <col:104, col:139>
| | | `-ReturnStmt 0x7fd30089ada8 <col:105, col:137>
| | |   `-CallExpr 0x7fd30089ad40 <col:112, col:137> 'long double'
| | |     |-ImplicitCastExpr 0x7fd30089ad28 <col:112, col:114> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd30089aca0 <col:112, col:114> 'long double (long double, long double)' lvalue Function 0x7fd2ff90fe78 'powl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fd30089ad78 <col:119> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fd30089acd8 <col:119> 'long double' lvalue ParmVar 0x7fd30089aa68 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fd30089ad90 <col:129> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd30089ad00 <col:129> 'long double' lvalue ParmVar 0x7fd30089aae0 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fd30089ac28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd30089ac70 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd30089b620 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:960:1, line:974:1> line:968:1 pow
| | |-TemplateTypeParmDecl 0x7fd30089ade0 <line:960:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fd30089ae48 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fd30089b588 <line:961:1, line:974:1> line:968:1 pow 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fd30089b430 <col:5, col:9> col:9 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fd30089b4a0 <col:19, col:23> col:23 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fd30089be48 <line:969:1, line:974:1>
| |   | |-DeclStmt 0x7fd30089b898 <line:970:5, col:66>
| |   | | `-TypedefDecl 0x7fd30089b840 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fd30089b7d0 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fd30089bc90 <line:971:5, line:972:68>
| |   | | `-StaticAssertDecl 0x7fd30089bc58 <line:971:5, line:972:67> line:971:5
| |   | |   |-ParenExpr 0x7fd30089bc10 <col:19, line:972:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fd30089bbf0 <line:971:20, line:972:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fd30089bbd0 <line:971:21, line:972:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fd30089bba8 <line:971:22, line:972:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fd30089ba08 <line:971:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fd30089bb68 <line:972:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fd30089bc30 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fd30089be30 <line:973:5, col:66>
| |   |   `-CallExpr 0x7fd30089bdf8 <col:12, col:66> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fd30089bcc8 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'pow' 0x7fd2ff90fc50 0x7fd30089a7c0 0x7fd30089ab80 0x7fd30089b620
| |   |     |-CStyleCastExpr 0x7fd30089bd70 <col:18, col:33> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fd30089bd38 <col:33> '_A1' lvalue ParmVar 0x7fd30089b430 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fd30089bdd0 <col:43, col:58> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fd30089bd98 <col:58> '_A2' lvalue ParmVar 0x7fd30089b4a0 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fd30089b680 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd30089b6c8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd30089bf58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:979:1, col:107> col:46 sin 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fd30089bec0 <col:50, col:56> col:56 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fd30089c148 <col:82, col:107>
| | | `-ReturnStmt 0x7fd30089c130 <col:83, col:105>
| | |   `-CallExpr 0x7fd30089c0e8 <col:90, col:105> 'float'
| | |     |-ImplicitCastExpr 0x7fd30089c0d0 <col:90, col:92> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd30089c070 <col:90, col:92> 'float (float)' lvalue Function 0x7fd2ff902d10 'sinf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fd30089c118 <col:97> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd30089c0a8 <col:97> 'float' lvalue ParmVar 0x7fd30089bec0 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fd30089bff8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd30089c040 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd30089c248 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:980:1, col:107> col:46 sin 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fd30089c1b0 <col:50, col:62> col:62 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fd30089c438 <col:82, col:107>
| | | `-ReturnStmt 0x7fd30089c420 <col:83, col:105>
| | |   `-CallExpr 0x7fd30089c3d8 <col:90, col:105> 'long double'
| | |     |-ImplicitCastExpr 0x7fd30089c3c0 <col:90, col:92> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd30089c360 <col:90, col:92> 'long double (long double)' lvalue Function 0x7fd2ff903050 'sinl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fd30089c408 <col:97> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd30089c398 <col:97> 'long double' lvalue ParmVar 0x7fd30089c1b0 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fd30089c2e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd30089c330 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd30089c900 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:983:1, line:986:61> col:1 sin
| | |-TemplateTypeParmDecl 0x7fd30089c458 <line:983:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd30089c868 <line:984:1, line:986:61> col:1 sin 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd30089c790 <col:5, col:9> col:9 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd30089ce20 <col:29, col:61>
| |   | `-ReturnStmt 0x7fd30089ce08 <col:30, col:59>
| |   |   `-CallExpr 0x7fd30089cdd8 <col:37, col:59> 'double'
| |   |     |-ImplicitCastExpr 0x7fd30089cdc0 <col:37, col:39> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fd30089cd88 <col:37, col:39> 'double (double)' lvalue Function 0x7fd2ff902eb0 'sin' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fd30089ca80 <col:43, col:51> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fd30089ca40 <col:51> '_A1' lvalue ParmVar 0x7fd30089c790 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd30089c958 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd30089c9a0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd30089cf20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:991:1, col:109> col:46 sinh 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fd30089ce88 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fd30089d110 <col:83, col:109>
| | | `-ReturnStmt 0x7fd30089d0f8 <col:84, col:107>
| | |   `-CallExpr 0x7fd30089d0b0 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fd30089d098 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd30089d038 <col:91, col:93> 'float (float)' lvalue Function 0x7fd2ff905a90 'sinhf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fd30089d0e0 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd30089d070 <col:99> 'float' lvalue ParmVar 0x7fd30089ce88 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fd30089cfc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd30089d008 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd30089d210 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:992:1, col:109> col:46 sinh 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fd30089d178 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fd30089d400 <col:83, col:109>
| | | `-ReturnStmt 0x7fd30089d3e8 <col:84, col:107>
| | |   `-CallExpr 0x7fd30089d3a0 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fd30089d388 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd30089d328 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fd2ff905dd0 'sinhl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fd30089d3d0 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd30089d360 <col:99> 'long double' lvalue ParmVar 0x7fd30089d178 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fd30089d2b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd30089d2f8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd30089fad8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:995:1, line:998:63> col:1 sinh
| | |-TemplateTypeParmDecl 0x7fd30089d420 <line:995:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd30089fa40 <line:996:1, line:998:63> col:1 sinh 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd30089d750 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd3008a0000 <col:30, col:63>
| |   | `-ReturnStmt 0x7fd30089ffe8 <col:31, col:61>
| |   |   `-CallExpr 0x7fd30089ffb8 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fd30089ffa0 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fd30089ff68 <col:38, col:40> 'double (double)' lvalue Function 0x7fd2ff905c30 'sinh' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fd30089fc58 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fd30089fc18 <col:53> '_A1' lvalue ParmVar 0x7fd30089d750 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd30089fb30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd30089fb78 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd3008a0100 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1003:1, col:109> col:46 sqrt 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fd3008a0068 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fd3008a02f0 <col:83, col:109>
| | | `-ReturnStmt 0x7fd3008a02d8 <col:84, col:107>
| | |   `-CallExpr 0x7fd3008a0290 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fd3008a0278 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd3008a0218 <col:91, col:93> 'float (float)' lvalue Function 0x7fd2ff910020 'sqrtf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fd3008a02c0 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd3008a0250 <col:99> 'float' lvalue ParmVar 0x7fd3008a0068 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fd3008a01a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd3008a01e8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd3008a03f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1004:1, col:109> col:46 sqrt 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fd3008a0358 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fd3008a05e0 <col:83, col:109>
| | | `-ReturnStmt 0x7fd3008a05c8 <col:84, col:107>
| | |   `-CallExpr 0x7fd3008a0580 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fd3008a0568 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd3008a0508 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fd2ff910360 'sqrtl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fd3008a05b0 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd3008a0540 <col:99> 'long double' lvalue ParmVar 0x7fd3008a0358 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fd3008a0490 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd3008a04d8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd3008a0aa0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1007:1, line:1010:63> col:1 sqrt
| | |-TemplateTypeParmDecl 0x7fd3008a0600 <line:1007:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd3008a0a08 <line:1008:1, line:1010:63> col:1 sqrt 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd3008a0930 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd3008a0fc0 <col:30, col:63>
| |   | `-ReturnStmt 0x7fd3008a0fa8 <col:31, col:61>
| |   |   `-CallExpr 0x7fd3008a0f78 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fd3008a0f60 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fd3008a0f28 <col:38, col:40> 'double (double)' lvalue Function 0x7fd2ff9101c0 'sqrt' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fd3008a0c20 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fd3008a0be0 <col:53> '_A1' lvalue ParmVar 0x7fd3008a0930 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd3008a0af8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd3008a0b40 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd3008a10c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1015:1, col:107> col:46 tan 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fd3008a1028 <col:50, col:56> col:56 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fd3008a12b0 <col:82, col:107>
| | | `-ReturnStmt 0x7fd3008a1298 <col:83, col:105>
| | |   `-CallExpr 0x7fd3008a1250 <col:90, col:105> 'float'
| | |     |-ImplicitCastExpr 0x7fd3008a1238 <col:90, col:92> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd3008a11d8 <col:90, col:92> 'float (float)' lvalue Function 0x7fd2ff9031f0 'tanf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fd3008a1280 <col:97> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd3008a1210 <col:97> 'float' lvalue ParmVar 0x7fd3008a1028 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fd3008a1160 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd3008a11a8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd3008a13b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1016:1, col:107> col:46 tan 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fd3008a1318 <col:50, col:62> col:62 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fd3008a15a0 <col:82, col:107>
| | | `-ReturnStmt 0x7fd3008a1588 <col:83, col:105>
| | |   `-CallExpr 0x7fd3008a1540 <col:90, col:105> 'long double'
| | |     |-ImplicitCastExpr 0x7fd3008a1528 <col:90, col:92> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd3008a14c8 <col:90, col:92> 'long double (long double)' lvalue Function 0x7fd2ff903530 'tanl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fd3008a1570 <col:97> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd3008a1500 <col:97> 'long double' lvalue ParmVar 0x7fd3008a1318 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fd3008a1450 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd3008a1498 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd3008a1a98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1019:1, line:1022:61> col:1 tan
| | |-TemplateTypeParmDecl 0x7fd3008a15c0 <line:1019:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd3008a1a00 <line:1020:1, line:1022:61> col:1 tan 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd3008a18f0 <col:5, col:9> col:9 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd3008a1fc0 <col:29, col:61>
| |   | `-ReturnStmt 0x7fd3008a1fa8 <col:30, col:59>
| |   |   `-CallExpr 0x7fd3008a1f78 <col:37, col:59> 'double'
| |   |     |-ImplicitCastExpr 0x7fd3008a1f60 <col:37, col:39> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fd3008a1f28 <col:37, col:39> 'double (double)' lvalue Function 0x7fd2ff903390 'tan' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fd3008a1c18 <col:43, col:51> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fd3008a1bd8 <col:51> '_A1' lvalue ParmVar 0x7fd3008a18f0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd3008a1af0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd3008a1b38 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd3008a20c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1027:1, col:109> col:46 tanh 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fd3008a2028 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fd3008a22b0 <col:83, col:109>
| | | `-ReturnStmt 0x7fd3008a2298 <col:84, col:107>
| | |   `-CallExpr 0x7fd3008a2250 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fd3008a2238 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd3008a21d8 <col:91, col:93> 'float (float)' lvalue Function 0x7fd2ff905f70 'tanhf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fd3008a2280 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd3008a2210 <col:99> 'float' lvalue ParmVar 0x7fd3008a2028 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fd3008a2160 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd3008a21a8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd3008a23b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1028:1, col:109> col:46 tanh 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fd3008a2318 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fd3008a25a0 <col:83, col:109>
| | | `-ReturnStmt 0x7fd3008a2588 <col:84, col:107>
| | |   `-CallExpr 0x7fd3008a2540 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fd3008a2528 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd3008a24c8 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fd2ff9062b0 'tanhl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fd3008a2570 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd3008a2500 <col:99> 'long double' lvalue ParmVar 0x7fd3008a2318 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fd3008a2450 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd3008a2498 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd3008a2a60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1031:1, line:1034:63> col:1 tanh
| | |-TemplateTypeParmDecl 0x7fd3008a25c0 <line:1031:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd3008a29c8 <line:1032:1, line:1034:63> col:1 tanh 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd3008a28f0 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd3008a2f80 <col:30, col:63>
| |   | `-ReturnStmt 0x7fd3008a2f68 <col:31, col:61>
| |   |   `-CallExpr 0x7fd3008a2f38 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fd3008a2f20 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fd3008a2ee8 <col:38, col:40> 'double (double)' lvalue Function 0x7fd2ff906110 'tanh' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fd3008a2be0 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fd3008a2ba0 <col:53> '_A1' lvalue ParmVar 0x7fd3008a28f0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd3008a2ab8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd3008a2b00 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd3008a3080 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1038:1, col:111> col:46 acosh 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fd3008a2fe8 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fd3008a3270 <col:84, col:111>
| | | `-ReturnStmt 0x7fd3008a3258 <col:85, col:109>
| | |   `-CallExpr 0x7fd3008a3210 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7fd3008a31f8 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd3008a3198 <col:92, col:94> 'float (float)' lvalue Function 0x7fd2ff9036d0 'acoshf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fd3008a3240 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd3008a31d0 <col:101> 'float' lvalue ParmVar 0x7fd3008a2fe8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fd3008a3120 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd3008a3168 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd3008a3370 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1039:1, col:111> col:46 acosh 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fd3008a32d8 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fd3008a3560 <col:84, col:111>
| | | `-ReturnStmt 0x7fd3008a3548 <col:85, col:109>
| | |   `-CallExpr 0x7fd3008a3500 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7fd3008a34e8 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd3008a3488 <col:92, col:94> 'long double (long double)' lvalue Function 0x7fd2ff904230 'acoshl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fd3008a3530 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd3008a34c0 <col:101> 'long double' lvalue ParmVar 0x7fd3008a32d8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fd3008a3410 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd3008a3458 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd3008a3a98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1041:1, line:1044:65> col:1 acosh
| | |-TemplateTypeParmDecl 0x7fd3008a3580 <line:1041:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd3008a3a00 <line:1042:1, line:1044:65> col:1 acosh 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd3008a38b0 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd3008a3fc0 <col:31, col:65>
| |   | `-ReturnStmt 0x7fd3008a3fa8 <col:32, col:63>
| |   |   `-CallExpr 0x7fd3008a3f78 <col:39, col:63> 'double'
| |   |     |-ImplicitCastExpr 0x7fd3008a3f60 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fd3008a3f28 <col:39, col:41> 'double (double)' lvalue Function 0x7fd2ff904090 'acosh' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fd3008a3c18 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fd3008a3bd8 <col:55> '_A1' lvalue ParmVar 0x7fd3008a38b0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd3008a3af0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd3008a3b38 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd3008a40c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1048:1, col:111> col:46 asinh 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fd3008a4028 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fd3008a42b0 <col:84, col:111>
| | | `-ReturnStmt 0x7fd3008a4298 <col:85, col:109>
| | |   `-CallExpr 0x7fd3008a4250 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7fd3008a4238 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd3008a41d8 <col:92, col:94> 'float (float)' lvalue Function 0x7fd2ff9043d0 'asinhf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fd3008a4280 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd3008a4210 <col:101> 'float' lvalue ParmVar 0x7fd3008a4028 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fd3008a4160 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd3008a41a8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd3008a43b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1049:1, col:111> col:46 asinh 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fd3008a4318 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fd3008a45a0 <col:84, col:111>
| | | `-ReturnStmt 0x7fd3008a4588 <col:85, col:109>
| | |   `-CallExpr 0x7fd3008a4540 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7fd3008a4528 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd3008a44c8 <col:92, col:94> 'long double (long double)' lvalue Function 0x7fd2ff904710 'asinhl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fd3008a4570 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd3008a4500 <col:101> 'long double' lvalue ParmVar 0x7fd3008a4318 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fd3008a4450 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd3008a4498 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd3008a4a60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1051:1, line:1054:65> col:1 asinh
| | |-TemplateTypeParmDecl 0x7fd3008a45c0 <line:1051:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd3008a49c8 <line:1052:1, line:1054:65> col:1 asinh 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd3008a48f0 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd3008a4f80 <col:31, col:65>
| |   | `-ReturnStmt 0x7fd3008a4f68 <col:32, col:63>
| |   |   `-CallExpr 0x7fd3008a4f38 <col:39, col:63> 'double'
| |   |     |-ImplicitCastExpr 0x7fd3008a4f20 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fd3008a4ee8 <col:39, col:41> 'double (double)' lvalue Function 0x7fd2ff904570 'asinh' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fd3008a4be0 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fd3008a4ba0 <col:55> '_A1' lvalue ParmVar 0x7fd3008a48f0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd3008a4ab8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd3008a4b00 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd3008a5080 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1058:1, col:111> col:46 atanh 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fd3008a4fe8 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fd3008a5270 <col:84, col:111>
| | | `-ReturnStmt 0x7fd3008a5258 <col:85, col:109>
| | |   `-CallExpr 0x7fd3008a5210 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7fd3008a51f8 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd3008a5198 <col:92, col:94> 'float (float)' lvalue Function 0x7fd2ff9048b0 'atanhf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fd3008a5240 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd3008a51d0 <col:101> 'float' lvalue ParmVar 0x7fd3008a4fe8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fd3008a5120 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd3008a5168 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd3008a5370 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1059:1, col:111> col:46 atanh 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fd3008a52d8 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fd3008a5560 <col:84, col:111>
| | | `-ReturnStmt 0x7fd3008a5548 <col:85, col:109>
| | |   `-CallExpr 0x7fd3008a5500 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7fd3008a54e8 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd3008a5488 <col:92, col:94> 'long double (long double)' lvalue Function 0x7fd2ff904bf0 'atanhl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fd3008a5530 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd3008a54c0 <col:101> 'long double' lvalue ParmVar 0x7fd3008a52d8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fd3008a5410 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd3008a5458 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd3008a5a98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1061:1, line:1064:65> col:1 atanh
| | |-TemplateTypeParmDecl 0x7fd3008a5580 <line:1061:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd3008a5a00 <line:1062:1, line:1064:65> col:1 atanh 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd3008a58b0 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd3008a5fc0 <col:31, col:65>
| |   | `-ReturnStmt 0x7fd3008a5fa8 <col:32, col:63>
| |   |   `-CallExpr 0x7fd3008a5f78 <col:39, col:63> 'double'
| |   |     |-ImplicitCastExpr 0x7fd3008a5f60 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fd3008a5f28 <col:39, col:41> 'double (double)' lvalue Function 0x7fd2ff904a50 'atanh' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fd3008a5c18 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fd3008a5bd8 <col:55> '_A1' lvalue ParmVar 0x7fd3008a58b0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd3008a5af0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd3008a5b38 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd3008a60c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1068:1, col:109> col:46 cbrt 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fd3008a6028 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fd3008a62b0 <col:83, col:109>
| | | `-ReturnStmt 0x7fd3008a6298 <col:84, col:107>
| | |   `-CallExpr 0x7fd3008a6250 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fd3008a6238 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd3008a61d8 <col:91, col:93> 'float (float)' lvalue Function 0x7fd2ff90edd0 'cbrtf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fd3008a6280 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd3008a6210 <col:99> 'float' lvalue ParmVar 0x7fd3008a6028 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fd3008a6160 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd3008a61a8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd3008a63b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1069:1, col:109> col:46 cbrt 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fd3008a6318 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fd3008a65a0 <col:83, col:109>
| | | `-ReturnStmt 0x7fd3008a6588 <col:84, col:107>
| | |   `-CallExpr 0x7fd3008a6540 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fd3008a6528 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd3008a64c8 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fd2ff90f110 'cbrtl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fd3008a6570 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd3008a6500 <col:99> 'long double' lvalue ParmVar 0x7fd3008a6318 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fd3008a6450 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd3008a6498 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd3008a6a60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1071:1, line:1074:63> col:1 cbrt
| | |-TemplateTypeParmDecl 0x7fd3008a65c0 <line:1071:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd3008a69c8 <line:1072:1, line:1074:63> col:1 cbrt 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd3008a68f0 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd3008a6f80 <col:30, col:63>
| |   | `-ReturnStmt 0x7fd3008a6f68 <col:31, col:61>
| |   |   `-CallExpr 0x7fd3008a6f38 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fd3008a6f20 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fd3008a6ee8 <col:38, col:40> 'double (double)' lvalue Function 0x7fd2ff90ef70 'cbrt' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fd3008a6be0 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fd3008a6ba0 <col:53> '_A1' lvalue ParmVar 0x7fd3008a68f0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd3008a6ab8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd3008a6b00 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd3008a7100 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1078:1, line:1081:1> line:1078:40 copysign 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7fd3008a6fe8 <col:49, col:55> col:55 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fd3008a7060 <line:1079:49, col:55> col:55 used __lcpp_y 'float'
| | |-CompoundStmt 0x7fd3008a7340 <col:75, line:1081:1>
| | | `-ReturnStmt 0x7fd3008a7328 <line:1080:3, col:40>
| | |   `-CallExpr 0x7fd3008a72c0 <col:10, col:40> 'float'
| | |     |-ImplicitCastExpr 0x7fd3008a72a8 <col:10, col:12> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd3008a7220 <col:10, col:12> 'float (float, float)' lvalue Function 0x7fd300804a40 'copysignf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7fd3008a72f8 <col:22> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fd3008a7258 <col:22> 'float' lvalue ParmVar 0x7fd3008a6fe8 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fd3008a7310 <col:32> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd3008a7280 <col:32> 'float' lvalue ParmVar 0x7fd3008a7060 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7fd3008a71a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd3008a71f0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd3008a74c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1082:1, line:1085:1> line:1083:1 copysign 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fd3008a73a8 <col:10, col:22> col:22 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fd3008a7420 <col:32, col:44> col:44 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fd3008a7700 <col:64, line:1085:1>
| | | `-ReturnStmt 0x7fd3008a76e8 <line:1084:3, col:40>
| | |   `-CallExpr 0x7fd3008a7680 <col:10, col:40> 'long double'
| | |     |-ImplicitCastExpr 0x7fd3008a7668 <col:10, col:12> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd3008a75e0 <col:10, col:12> 'long double (long double, long double)' lvalue Function 0x7fd300804e90 'copysignl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fd3008a76b8 <col:22> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fd3008a7618 <col:22> 'long double' lvalue ParmVar 0x7fd3008a73a8 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fd3008a76d0 <col:32> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd3008a7640 <col:32> 'long double' lvalue ParmVar 0x7fd3008a7420 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fd3008a7568 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd3008a75b0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd3008a7f80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1087:1, line:1101:1> line:1095:1 copysign
| | |-TemplateTypeParmDecl 0x7fd3008a7720 <line:1087:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fd3008a7788 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fd3008a7ee8 <line:1088:1, line:1101:1> line:1095:1 copysign 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fd3008a7d90 <col:10, col:14> col:14 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fd3008a7e00 <col:24, col:28> col:28 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fd3008a87a8 <line:1096:1, line:1101:1>
| |   | |-DeclStmt 0x7fd3008a81f8 <line:1097:5, col:66>
| |   | | `-TypedefDecl 0x7fd3008a81a0 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fd3008a8130 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fd3008a85f0 <line:1098:5, line:1099:68>
| |   | | `-StaticAssertDecl 0x7fd3008a85b8 <line:1098:5, line:1099:67> line:1098:5
| |   | |   |-ParenExpr 0x7fd3008a8570 <col:19, line:1099:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fd3008a8550 <line:1098:20, line:1099:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fd3008a8530 <line:1098:21, line:1099:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fd3008a8508 <line:1098:22, line:1099:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fd3008a8368 <line:1098:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fd3008a84c8 <line:1099:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fd3008a8590 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fd3008a8790 <line:1100:5, col:71>
| |   |   `-CallExpr 0x7fd3008a8758 <col:12, col:71> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fd3008a8628 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'copysign' 0x7fd300804c68 0x7fd3008a7100 0x7fd3008a74c0 0x7fd3008a7f80
| |   |     |-CStyleCastExpr 0x7fd3008a86d0 <col:23, col:38> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fd3008a8698 <col:38> '_A1' lvalue ParmVar 0x7fd3008a7d90 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fd3008a8730 <col:48, col:63> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fd3008a86f8 <col:63> '_A2' lvalue ParmVar 0x7fd3008a7e00 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fd3008a7fe0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd3008a8028 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd3008a88b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1105:1, col:107> col:46 erf 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fd3008a8820 <col:50, col:56> col:56 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fd3008a8aa8 <col:82, col:107>
| | | `-ReturnStmt 0x7fd3008a8a90 <col:83, col:105>
| | |   `-CallExpr 0x7fd3008a8a48 <col:90, col:105> 'float'
| | |     |-ImplicitCastExpr 0x7fd3008a8a30 <col:90, col:92> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd3008a89d0 <col:90, col:92> 'float (float)' lvalue Function 0x7fd2ff910500 'erff' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fd3008a8a78 <col:97> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd3008a8a08 <col:97> 'float' lvalue ParmVar 0x7fd3008a8820 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fd3008a8958 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd3008a89a0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd3008a8ba8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1106:1, col:107> col:46 erf 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fd3008a8b10 <col:50, col:62> col:62 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fd3008a8d98 <col:82, col:107>
| | | `-ReturnStmt 0x7fd3008a8d80 <col:83, col:105>
| | |   `-CallExpr 0x7fd3008a8d38 <col:90, col:105> 'long double'
| | |     |-ImplicitCastExpr 0x7fd3008a8d20 <col:90, col:92> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd3008a8cc0 <col:90, col:92> 'long double (long double)' lvalue Function 0x7fd2ff910890 'erfl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fd3008a8d68 <col:97> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd3008a8cf8 <col:97> 'long double' lvalue ParmVar 0x7fd3008a8b10 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fd3008a8c48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd3008a8c90 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd3008a9260 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1108:1, line:1111:61> col:1 erf
| | |-TemplateTypeParmDecl 0x7fd3008a8db8 <line:1108:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd3008a91c8 <line:1109:1, line:1111:61> col:1 erf 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd3008a90f0 <col:5, col:9> col:9 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd3008a9780 <col:29, col:61>
| |   | `-ReturnStmt 0x7fd3008a9768 <col:30, col:59>
| |   |   `-CallExpr 0x7fd3008a9738 <col:37, col:59> 'double'
| |   |     |-ImplicitCastExpr 0x7fd3008a9720 <col:37, col:39> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fd3008a96e8 <col:37, col:39> 'double (double)' lvalue Function 0x7fd2ff9106a0 'erf' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fd3008a93e0 <col:43, col:51> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fd3008a93a0 <col:51> '_A1' lvalue ParmVar 0x7fd3008a90f0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd3008a92b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd3008a9300 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd3008a9880 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1115:1, col:109> col:46 erfc 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fd3008a97e8 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fd3008aaa78 <col:83, col:109>
| | | `-ReturnStmt 0x7fd3008aaa60 <col:84, col:107>
| | |   `-CallExpr 0x7fd3008aaa18 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fd3008aaa00 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd3008a9998 <col:91, col:93> 'float (float)' lvalue Function 0x7fd2ff910a30 'erfcf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fd3008aaa48 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd3008a99d0 <col:99> 'float' lvalue ParmVar 0x7fd3008a97e8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fd3008a9920 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd3008a9968 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd3008aab78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1116:1, col:109> col:46 erfc 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fd3008aaae0 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fd3008aad68 <col:83, col:109>
| | | `-ReturnStmt 0x7fd3008aad50 <col:84, col:107>
| | |   `-CallExpr 0x7fd3008aad08 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fd3008aacf0 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd3008aac90 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fd2ff910d70 'erfcl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fd3008aad38 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd3008aacc8 <col:99> 'long double' lvalue ParmVar 0x7fd3008aaae0 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fd3008aac18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd3008aac60 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd3008ab230 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1118:1, line:1121:63> col:1 erfc
| | |-TemplateTypeParmDecl 0x7fd3008aad88 <line:1118:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd3008ab198 <line:1119:1, line:1121:63> col:1 erfc 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd3008ab0c0 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd3008ab750 <col:30, col:63>
| |   | `-ReturnStmt 0x7fd3008ab738 <col:31, col:61>
| |   |   `-CallExpr 0x7fd3008ab708 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fd3008ab6f0 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fd3008ab6b8 <col:38, col:40> 'double (double)' lvalue Function 0x7fd2ff910bd0 'erfc' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fd3008ab3b0 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fd3008ab370 <col:53> '_A1' lvalue ParmVar 0x7fd3008ab0c0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd3008ab288 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd3008ab2d0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd3008ab850 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1125:1, col:109> col:46 exp2 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fd3008ab7b8 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fd3008aba40 <col:83, col:109>
| | | `-ReturnStmt 0x7fd3008aba28 <col:84, col:107>
| | |   `-CallExpr 0x7fd3008ab9e0 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fd3008ab9c8 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd3008ab968 <col:91, col:93> 'float (float)' lvalue Function 0x7fd2ff9069a0 'exp2f' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fd3008aba10 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd3008ab9a0 <col:99> 'float' lvalue ParmVar 0x7fd3008ab7b8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fd3008ab8f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd3008ab938 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd3008abb40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1126:1, col:109> col:46 exp2 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fd3008abaa8 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fd3008abd30 <col:83, col:109>
| | | `-ReturnStmt 0x7fd3008abd18 <col:84, col:107>
| | |   `-CallExpr 0x7fd3008abcd0 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fd3008abcb8 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd3008abc58 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fd2ff906ce0 'exp2l' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fd3008abd00 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd3008abc90 <col:99> 'long double' lvalue ParmVar 0x7fd3008abaa8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fd3008abbe0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd3008abc28 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd3008ac1f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1128:1, line:1131:63> col:1 exp2
| | |-TemplateTypeParmDecl 0x7fd3008abd50 <line:1128:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd3008ac158 <line:1129:1, line:1131:63> col:1 exp2 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd3008ac080 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd3008ac710 <col:30, col:63>
| |   | `-ReturnStmt 0x7fd3008ac6f8 <col:31, col:61>
| |   |   `-CallExpr 0x7fd3008ac6c8 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fd3008ac6b0 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fd3008ac678 <col:38, col:40> 'double (double)' lvalue Function 0x7fd2ff906b40 'exp2' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fd3008ac370 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fd3008ac330 <col:53> '_A1' lvalue ParmVar 0x7fd3008ac080 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd3008ac248 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd3008ac290 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd3008ac810 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1135:1, col:111> col:46 expm1 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fd3008ac778 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fd3008aca00 <col:84, col:111>
| | | `-ReturnStmt 0x7fd3008ac9e8 <col:85, col:109>
| | |   `-CallExpr 0x7fd3008ac9a0 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7fd3008ac988 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd3008ac928 <col:92, col:94> 'float (float)' lvalue Function 0x7fd2ff906e80 'expm1f' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fd3008ac9d0 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd3008ac960 <col:101> 'float' lvalue ParmVar 0x7fd3008ac778 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fd3008ac8b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd3008ac8f8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd3008acb00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1136:1, col:111> col:46 expm1 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fd3008aca68 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fd3008accf0 <col:84, col:111>
| | | `-ReturnStmt 0x7fd3008accd8 <col:85, col:109>
| | |   `-CallExpr 0x7fd3008acc90 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7fd3008acc78 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd3008acc18 <col:92, col:94> 'long double (long double)' lvalue Function 0x7fd2ff9071c0 'expm1l' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fd3008accc0 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd3008acc50 <col:101> 'long double' lvalue ParmVar 0x7fd3008aca68 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fd3008acba0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd3008acbe8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd3008ad1b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1138:1, line:1141:65> col:1 expm1
| | |-TemplateTypeParmDecl 0x7fd3008acd10 <line:1138:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd3008ad118 <line:1139:1, line:1141:65> col:1 expm1 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd3008ad040 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd3008ad6d0 <col:31, col:65>
| |   | `-ReturnStmt 0x7fd3008ad6b8 <col:32, col:63>
| |   |   `-CallExpr 0x7fd3008ad688 <col:39, col:63> 'double'
| |   |     |-ImplicitCastExpr 0x7fd3008ad670 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fd3008ad638 <col:39, col:41> 'double (double)' lvalue Function 0x7fd2ff907020 'expm1' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fd3008ad330 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fd3008ad2f0 <col:55> '_A1' lvalue ParmVar 0x7fd3008ad040 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd3008ad208 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd3008ad250 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd3008ad850 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1145:1, col:141> col:46 fdim 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7fd3008ad738 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fd3008ad7b0 <col:67, col:73> col:73 used __lcpp_y 'float'
| | |-CompoundStmt 0x7fd3008ada90 <col:105, col:141>
| | | `-ReturnStmt 0x7fd3008ada78 <col:106, col:139>
| | |   `-CallExpr 0x7fd3008ada10 <col:113, col:139> 'float'
| | |     |-ImplicitCastExpr 0x7fd3008ad9f8 <col:113, col:115> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd3008ad970 <col:113, col:115> 'float (float, float)' lvalue Function 0x7fd300808568 'fdimf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7fd3008ada48 <col:121> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fd3008ad9a8 <col:121> 'float' lvalue ParmVar 0x7fd3008ad738 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fd3008ada60 <col:131> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd3008ad9d0 <col:131> 'float' lvalue ParmVar 0x7fd3008ad7b0 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7fd3008ad8f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd3008ad940 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd3008adc10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1146:1, col:141> col:46 fdim 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fd3008adaf8 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fd3008adb70 <col:73, col:85> col:85 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fd3008ade50 <col:105, col:141>
| | | `-ReturnStmt 0x7fd3008ade38 <col:106, col:139>
| | |   `-CallExpr 0x7fd3008addd0 <col:113, col:139> 'long double'
| | |     |-ImplicitCastExpr 0x7fd3008addb8 <col:113, col:115> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd3008add30 <col:113, col:115> 'long double (long double, long double)' lvalue Function 0x7fd3008089b8 'fdiml' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fd3008ade08 <col:121> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fd3008add68 <col:121> 'long double' lvalue ParmVar 0x7fd3008adaf8 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fd3008ade20 <col:131> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd3008add90 <col:131> 'long double' lvalue ParmVar 0x7fd3008adb70 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fd3008adcb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd3008add00 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd3008ae6b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1148:1, line:1162:1> line:1156:1 fdim
| | |-TemplateTypeParmDecl 0x7fd3008ade70 <line:1148:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fd3008aded8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fd3008ae618 <line:1149:1, line:1162:1> line:1156:1 fdim 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fd3008ae4c0 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fd3008ae530 <col:20, col:24> col:24 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fd3008b0ef8 <line:1157:1, line:1162:1>
| |   | |-DeclStmt 0x7fd3008ae928 <line:1158:5, col:66>
| |   | | `-TypedefDecl 0x7fd3008ae8d0 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fd3008ae860 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fd3008b0d40 <line:1159:5, line:1160:68>
| |   | | `-StaticAssertDecl 0x7fd3008b0d08 <line:1159:5, line:1160:67> line:1159:5
| |   | |   |-ParenExpr 0x7fd3008b0cc0 <col:19, line:1160:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fd3008b0ca0 <line:1159:20, line:1160:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fd3008b0c80 <line:1159:21, line:1160:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fd3008b0c58 <line:1159:22, line:1160:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fd3008b0ab8 <line:1159:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fd3008b0c18 <line:1160:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fd3008b0ce0 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fd3008b0ee0 <line:1161:5, col:67>
| |   |   `-CallExpr 0x7fd3008b0ea8 <col:12, col:67> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fd3008b0d78 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'fdim' 0x7fd300808790 0x7fd3008ad850 0x7fd3008adc10 0x7fd3008ae6b0
| |   |     |-CStyleCastExpr 0x7fd3008b0e20 <col:19, col:34> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fd3008b0de8 <col:34> '_A1' lvalue ParmVar 0x7fd3008ae4c0 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fd3008b0e80 <col:44, col:59> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fd3008b0e48 <col:59> '_A2' lvalue ParmVar 0x7fd3008ae530 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fd3008ae710 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd3008ae758 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd3008b1108 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1166:1, col:171> col:46 fma 'float (float, float, float) noexcept' inline
| | |-ParmVarDecl 0x7fd3008b0f70 <col:50, col:56> col:56 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fd3008b0fe8 <col:66, col:72> col:72 used __lcpp_y 'float'
| | |-ParmVarDecl 0x7fd3008b1060 <col:82, col:88> col:88 used __lcpp_z 'float'
| | |-CompoundStmt 0x7fd3008b13c0 <col:126, col:171>
| | | `-ReturnStmt 0x7fd3008b13a8 <col:127, col:169>
| | |   `-CallExpr 0x7fd3008b1320 <col:134, col:169> 'float'
| | |     |-ImplicitCastExpr 0x7fd3008b1308 <col:134, col:136> 'float (*)(float, float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd3008b1230 <col:134, col:136> 'float (float, float, float)' lvalue Function 0x7fd30080c9a8 'fmaf' 'float (float, float, float)'
| | |     |-ImplicitCastExpr 0x7fd3008b1360 <col:141> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fd3008b1268 <col:141> 'float' lvalue ParmVar 0x7fd3008b0f70 '__lcpp_x' 'float'
| | |     |-ImplicitCastExpr 0x7fd3008b1378 <col:151> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fd3008b1290 <col:151> 'float' lvalue ParmVar 0x7fd3008b0fe8 '__lcpp_y' 'float'
| | |     `-ImplicitCastExpr 0x7fd3008b1390 <col:161> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd3008b12b8 <col:161> 'float' lvalue ParmVar 0x7fd3008b1060 '__lcpp_z' 'float'
| | |-AlwaysInlineAttr 0x7fd3008b11b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd3008b1200 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd3008b15c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1167:1, col:171> col:46 fma 'long double (long double, long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fd3008b1428 <col:50, col:62> col:62 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fd3008b14a0 <col:72, col:84> col:84 used __lcpp_y 'long double'
| | |-ParmVarDecl 0x7fd3008b1518 <col:94, col:106> col:106 used __lcpp_z 'long double'
| | |-CompoundStmt 0x7fd3008b1880 <col:126, col:171>
| | | `-ReturnStmt 0x7fd3008b1868 <col:127, col:169>
| | |   `-CallExpr 0x7fd3008b17e0 <col:134, col:169> 'long double'
| | |     |-ImplicitCastExpr 0x7fd3008b17c8 <col:134, col:136> 'long double (*)(long double, long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd3008b16e8 <col:134, col:136> 'long double (long double, long double, long double)' lvalue Function 0x7fd2ff90c888 'fmal' 'long double (long double, long double, long double)'
| | |     |-ImplicitCastExpr 0x7fd3008b1820 <col:141> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fd3008b1720 <col:141> 'long double' lvalue ParmVar 0x7fd3008b1428 '__lcpp_x' 'long double'
| | |     |-ImplicitCastExpr 0x7fd3008b1838 <col:151> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fd3008b1748 <col:151> 'long double' lvalue ParmVar 0x7fd3008b14a0 '__lcpp_y' 'long double'
| | |     `-ImplicitCastExpr 0x7fd3008b1850 <col:161> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd3008b1770 <col:161> 'long double' lvalue ParmVar 0x7fd3008b1518 '__lcpp_z' 'long double'
| | |-AlwaysInlineAttr 0x7fd3008b1670 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd3008b16b8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd3008b24d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1169:1, line:1185:1> line:1178:1 fma
| | |-TemplateTypeParmDecl 0x7fd3008b18a0 <line:1169:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fd3008b1908 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | |-TemplateTypeParmDecl 0x7fd3008b1978 <col:33, col:39> col:39 referenced class depth 0 index 2 _A3
| | `-FunctionDecl 0x7fd3008b2438 <line:1170:1, line:1185:1> line:1178:1 fma 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value && std::is_arithmetic<_A3>::value, std::__promote<_A1, _A2, _A3> >::type (_A1, _A2, _A3) noexcept' inline
| |   |-ParmVarDecl 0x7fd3008b2210 <col:5, col:9> col:9 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fd3008b2280 <col:19, col:23> col:23 referenced __lcpp_y '_A2'
| |   |-ParmVarDecl 0x7fd3008b22f0 <col:33, col:37> col:37 referenced __lcpp_z '_A3'
| |   |-CompoundStmt 0x7fd3008b3090 <line:1179:1, line:1185:1>
| |   | |-DeclStmt 0x7fd3008b27d8 <line:1180:5, col:71>
| |   | | `-TypedefDecl 0x7fd3008b2780 <col:5, col:58> col:58 referenced __result_type 'typename std::__promote<_A1, _A2, _A3>::type'
| |   | |   `-DependentNameType 0x7fd3008b2710 'typename std::__promote<_A1, _A2, _A3>::type' dependent
| |   | |-DeclStmt 0x7fd3008b2e70 <line:1181:5, line:1183:68>
| |   | | `-StaticAssertDecl 0x7fd3008b2e38 <line:1181:5, line:1183:67> line:1181:5
| |   | |   |-ParenExpr 0x7fd3008b2df0 <col:19, line:1183:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fd3008b2dd0 <line:1181:20, line:1183:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fd3008b2db0 <line:1181:21, line:1183:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fd3008b2d88 <line:1181:22, line:1183:56> '<dependent type>' '&&'
| |   | |   |       |-BinaryOperator 0x7fd3008b2ba8 <line:1181:22, line:1182:56> '<dependent type>' '&&'
| |   | |   |       | |-DependentScopeDeclRefExpr 0x7fd3008b29a8 <line:1181:22, col:56> '<dependent type>' lvalue
| |   | |   |       | `-DependentScopeDeclRefExpr 0x7fd3008b2b68 <line:1182:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fd3008b2d48 <line:1183:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fd3008b2e10 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fd3008b3078 <line:1184:5, col:91>
| |   |   `-CallExpr 0x7fd3008b3038 <col:12, col:91> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fd3008b2ea8 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'fma' 0x7fd30080ccf8 0x7fd3008b1108 0x7fd3008b15c0 0x7fd3008b24d0
| |   |     |-CStyleCastExpr 0x7fd3008b2f50 <col:18, col:33> '__result_type':'typename std::__promote<_A1, _A2, _A3>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fd3008b2f18 <col:33> '_A1' lvalue ParmVar 0x7fd3008b2210 '__lcpp_x' '_A1'
| |   |     |-CStyleCastExpr 0x7fd3008b2fb0 <col:43, col:58> '__result_type':'typename std::__promote<_A1, _A2, _A3>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fd3008b2f78 <col:58> '_A2' lvalue ParmVar 0x7fd3008b2280 '__lcpp_y' '_A2'
| |   |     `-CStyleCastExpr 0x7fd3008b3010 <col:68, col:83> '__result_type':'typename std::__promote<_A1, _A2, _A3>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fd3008b2fd8 <col:83> '_A3' lvalue ParmVar 0x7fd3008b22f0 '__lcpp_z' '_A3'
| |   |-AlwaysInlineAttr 0x7fd3008b2538 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd3008b2580 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd3008b3220 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1189:1, col:141> col:46 fmax 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7fd3008b3108 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fd3008b3180 <col:67, col:73> col:73 used __lcpp_y 'float'
| | |-CompoundStmt 0x7fd3008b3460 <col:105, col:141>
| | | `-ReturnStmt 0x7fd3008b3448 <col:106, col:139>
| | |   `-CallExpr 0x7fd3008b33e0 <col:113, col:139> 'float'
| | |     |-ImplicitCastExpr 0x7fd3008b33c8 <col:113, col:115> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd3008b3340 <col:113, col:115> 'float (float, float)' lvalue Function 0x7fd300808be0 'fmaxf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7fd3008b3418 <col:121> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fd3008b3378 <col:121> 'float' lvalue ParmVar 0x7fd3008b3108 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fd3008b3430 <col:131> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd3008b33a0 <col:131> 'float' lvalue ParmVar 0x7fd3008b3180 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7fd3008b32c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd3008b3310 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd3008b35e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1190:1, col:141> col:46 fmax 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fd3008b34c8 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fd3008b3540 <col:73, col:85> col:85 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fd3008b3820 <col:105, col:141>
| | | `-ReturnStmt 0x7fd3008b3808 <col:106, col:139>
| | |   `-CallExpr 0x7fd3008b37a0 <col:113, col:139> 'long double'
| | |     |-ImplicitCastExpr 0x7fd3008b3788 <col:113, col:115> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd3008b3700 <col:113, col:115> 'long double (long double, long double)' lvalue Function 0x7fd30080c038 'fmaxl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fd3008b37d8 <col:121> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fd3008b3738 <col:121> 'long double' lvalue ParmVar 0x7fd3008b34c8 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fd3008b37f0 <col:131> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd3008b3760 <col:131> 'long double' lvalue ParmVar 0x7fd3008b3540 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fd3008b3688 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd3008b36d0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd3008b4080 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1192:1, line:1206:1> line:1200:1 fmax
| | |-TemplateTypeParmDecl 0x7fd3008b3840 <line:1192:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fd3008b38a8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fd3008b3fe8 <line:1193:1, line:1206:1> line:1200:1 fmax 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fd3008b3e90 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fd3008b3f00 <col:20, col:24> col:24 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fd3008b48a8 <line:1201:1, line:1206:1>
| |   | |-DeclStmt 0x7fd3008b42f8 <line:1202:5, col:66>
| |   | | `-TypedefDecl 0x7fd3008b42a0 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fd3008b4230 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fd3008b46f0 <line:1203:5, line:1204:68>
| |   | | `-StaticAssertDecl 0x7fd3008b46b8 <line:1203:5, line:1204:67> line:1203:5
| |   | |   |-ParenExpr 0x7fd3008b4670 <col:19, line:1204:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fd3008b4650 <line:1203:20, line:1204:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fd3008b4630 <line:1203:21, line:1204:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fd3008b4608 <line:1203:22, line:1204:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fd3008b4468 <line:1203:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fd3008b45c8 <line:1204:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fd3008b4690 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fd3008b4890 <line:1205:5, col:67>
| |   |   `-CallExpr 0x7fd3008b4858 <col:12, col:67> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fd3008b4728 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'fmax' 0x7fd300808e08 0x7fd3008b3220 0x7fd3008b35e0 0x7fd3008b4080
| |   |     |-CStyleCastExpr 0x7fd3008b47d0 <col:19, col:34> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fd3008b4798 <col:34> '_A1' lvalue ParmVar 0x7fd3008b3e90 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fd3008b4830 <col:44, col:59> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fd3008b47f8 <col:59> '_A2' lvalue ParmVar 0x7fd3008b3f00 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fd3008b40e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd3008b4128 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd3008b4a40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1210:1, col:141> col:46 fmin 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7fd3008b4920 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fd3008b4998 <col:67, col:73> col:73 used __lcpp_y 'float'
| | |-CompoundStmt 0x7fd3008b4c80 <col:105, col:141>
| | | `-ReturnStmt 0x7fd3008b4c68 <col:106, col:139>
| | |   `-CallExpr 0x7fd3008b4c00 <col:113, col:139> 'float'
| | |     |-ImplicitCastExpr 0x7fd3008b4be8 <col:113, col:115> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd3008b4b60 <col:113, col:115> 'float (float, float)' lvalue Function 0x7fd30080c260 'fminf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7fd3008b4c38 <col:121> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fd3008b4b98 <col:121> 'float' lvalue ParmVar 0x7fd3008b4920 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fd3008b4c50 <col:131> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd3008b4bc0 <col:131> 'float' lvalue ParmVar 0x7fd3008b4998 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7fd3008b4ae8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd3008b4b30 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd3008b4e00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1211:1, col:141> col:46 fmin 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fd3008b4ce8 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fd3008b4d60 <col:73, col:85> col:85 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fd3008b5040 <col:105, col:141>
| | | `-ReturnStmt 0x7fd3008b5028 <col:106, col:139>
| | |   `-CallExpr 0x7fd3008b4fc0 <col:113, col:139> 'long double'
| | |     |-ImplicitCastExpr 0x7fd3008b4fa8 <col:113, col:115> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd3008b4f20 <col:113, col:115> 'long double (long double, long double)' lvalue Function 0x7fd30080c6b0 'fminl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fd3008b4ff8 <col:121> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fd3008b4f58 <col:121> 'long double' lvalue ParmVar 0x7fd3008b4ce8 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fd3008b5010 <col:131> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd3008b4f80 <col:131> 'long double' lvalue ParmVar 0x7fd3008b4d60 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fd3008b4ea8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd3008b4ef0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd3008b58a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1213:1, line:1227:1> line:1221:1 fmin
| | |-TemplateTypeParmDecl 0x7fd3008b5060 <line:1213:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fd3008b50c8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fd3008b5808 <line:1214:1, line:1227:1> line:1221:1 fmin 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fd3008b56b0 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fd3008b5720 <col:20, col:24> col:24 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fd3008b60c8 <line:1222:1, line:1227:1>
| |   | |-DeclStmt 0x7fd3008b5b18 <line:1223:5, col:66>
| |   | | `-TypedefDecl 0x7fd3008b5ac0 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fd3008b5a50 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fd3008b5f10 <line:1224:5, line:1225:68>
| |   | | `-StaticAssertDecl 0x7fd3008b5ed8 <line:1224:5, line:1225:67> line:1224:5
| |   | |   |-ParenExpr 0x7fd3008b5e90 <col:19, line:1225:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fd3008b5e70 <line:1224:20, line:1225:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fd3008b5e50 <line:1224:21, line:1225:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fd3008b5e28 <line:1224:22, line:1225:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fd3008b5c88 <line:1224:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fd3008b5de8 <line:1225:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fd3008b5eb0 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fd3008b60b0 <line:1226:5, col:67>
| |   |   `-CallExpr 0x7fd3008b6078 <col:12, col:67> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fd3008b5f48 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'fmin' 0x7fd30080c488 0x7fd3008b4a40 0x7fd3008b4e00 0x7fd3008b58a0
| |   |     |-CStyleCastExpr 0x7fd3008b5ff0 <col:19, col:34> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fd3008b5fb8 <col:34> '_A1' lvalue ParmVar 0x7fd3008b56b0 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fd3008b6050 <col:44, col:59> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fd3008b6018 <col:59> '_A2' lvalue ParmVar 0x7fd3008b5720 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fd3008b5900 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd3008b5948 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd3008b6258 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1231:1, col:143> col:46 hypot 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7fd3008b6140 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fd3008b61b8 <col:68, col:74> col:74 used __lcpp_y 'float'
| | |-CompoundStmt 0x7fd3008b6498 <col:106, col:143>
| | | `-ReturnStmt 0x7fd3008b6480 <col:107, col:141>
| | |   `-CallExpr 0x7fd3008b6418 <col:114, col:141> 'float'
| | |     |-ImplicitCastExpr 0x7fd3008b6400 <col:114, col:116> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd3008b6378 <col:114, col:116> 'float (float, float)' lvalue Function 0x7fd2ff90f330 'hypotf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7fd3008b6450 <col:123> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fd3008b63b0 <col:123> 'float' lvalue ParmVar 0x7fd3008b6140 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fd3008b6468 <col:133> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd3008b63d8 <col:133> 'float' lvalue ParmVar 0x7fd3008b61b8 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7fd3008b6300 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd3008b6348 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd3008b6618 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1232:1, col:143> col:46 hypot 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fd3008b6500 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fd3008b6578 <col:74, col:86> col:86 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fd3008b6858 <col:106, col:143>
| | | `-ReturnStmt 0x7fd3008b6840 <col:107, col:141>
| | |   `-CallExpr 0x7fd3008b67d8 <col:114, col:141> 'long double'
| | |     |-ImplicitCastExpr 0x7fd3008b67c0 <col:114, col:116> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd3008b6738 <col:114, col:116> 'long double (long double, long double)' lvalue Function 0x7fd2ff90f800 'hypotl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fd3008b6810 <col:123> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fd3008b6770 <col:123> 'long double' lvalue ParmVar 0x7fd3008b6500 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fd3008b6828 <col:133> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd3008b6798 <col:133> 'long double' lvalue ParmVar 0x7fd3008b6578 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fd3008b66c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd3008b6708 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd3008b7100 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1234:1, line:1248:1> line:1242:1 hypot
| | |-TemplateTypeParmDecl 0x7fd3008b6878 <line:1234:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fd3008b68e8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fd3008b7068 <line:1235:1, line:1248:1> line:1242:1 hypot 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fd3008b6f10 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fd3008b6f80 <col:21, col:25> col:25 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fd3008b7928 <line:1243:1, line:1248:1>
| |   | |-DeclStmt 0x7fd3008b7378 <line:1244:5, col:66>
| |   | | `-TypedefDecl 0x7fd3008b7320 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fd3008b72b0 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fd3008b7770 <line:1245:5, line:1246:68>
| |   | | `-StaticAssertDecl 0x7fd3008b7738 <line:1245:5, line:1246:67> line:1245:5
| |   | |   |-ParenExpr 0x7fd3008b76f0 <col:19, line:1246:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fd3008b76d0 <line:1245:20, line:1246:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fd3008b76b0 <line:1245:21, line:1246:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fd3008b7688 <line:1245:22, line:1246:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fd3008b74e8 <line:1245:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fd3008b7648 <line:1246:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fd3008b7710 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fd3008b7910 <line:1247:5, col:68>
| |   |   `-CallExpr 0x7fd3008b78d8 <col:12, col:68> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fd3008b77a8 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'hypot' 0x7fd2ff90f558 0x7fd3008b6258 0x7fd3008b6618 0x7fd3008b7100
| |   |     |-CStyleCastExpr 0x7fd3008b7850 <col:20, col:35> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fd3008b7818 <col:35> '_A1' lvalue ParmVar 0x7fd3008b6f10 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fd3008b78b0 <col:45, col:60> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fd3008b7878 <col:60> '_A2' lvalue ParmVar 0x7fd3008b6f80 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fd3008b7160 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd3008b71a8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd3008b7a38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1252:1, col:103> col:38 ilogb 'int (float) noexcept' inline
| | |-ParmVarDecl 0x7fd3008b79a0 <col:44, col:50> col:50 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fd3008b7c28 <col:76, col:103>
| | | `-ReturnStmt 0x7fd3008b7c10 <col:77, col:101>
| | |   `-CallExpr 0x7fd3008b7bc8 <col:84, col:101> 'int'
| | |     |-ImplicitCastExpr 0x7fd3008b7bb0 <col:84, col:86> 'int (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd3008b7b50 <col:84, col:86> 'int (float)' lvalue Function 0x7fd2ff90c4a0 'ilogbf' 'int (float)'
| | |     `-ImplicitCastExpr 0x7fd3008b7bf8 <col:93> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd3008b7b88 <col:93> 'float' lvalue ParmVar 0x7fd3008b79a0 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fd3008b7ad8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd3008b7b20 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd3008b7d28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1253:1, col:103> col:38 ilogb 'int (long double) noexcept' inline
| | |-ParmVarDecl 0x7fd3008b7c90 <col:44, col:56> col:56 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fd3008b7f18 <col:76, col:103>
| | | `-ReturnStmt 0x7fd3008b7f00 <col:77, col:101>
| | |   `-CallExpr 0x7fd3008b7eb8 <col:84, col:101> 'int'
| | |     |-ImplicitCastExpr 0x7fd3008b7ea0 <col:84, col:86> 'int (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd3008b7e40 <col:84, col:86> 'int (long double)' lvalue Function 0x7fd2ff90d890 'ilogbl' 'int (long double)'
| | |     `-ImplicitCastExpr 0x7fd3008b7ee8 <col:93> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd3008b7e78 <col:93> 'long double' lvalue ParmVar 0x7fd3008b7c90 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fd3008b7dc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd3008b7e10 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd3008b83e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1255:1, line:1258:65> col:1 ilogb
| | |-TemplateTypeParmDecl 0x7fd3008b7f38 <line:1255:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd3008b8348 <line:1256:1, line:1258:65> col:1 ilogb 'typename std::enable_if<std::is_integral<_A1>::value, int>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd3008b8270 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd3008b8bb8 <col:31, col:65>
| |   | `-ReturnStmt 0x7fd3008b8ba0 <col:32, col:63>
| |   |   `-CallExpr 0x7fd3008b8b70 <col:39, col:63> 'int'
| |   |     |-ImplicitCastExpr 0x7fd3008b8b58 <col:39, col:41> 'int (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fd3008b8b20 <col:39, col:41> 'int (double)' lvalue Function 0x7fd2ff90c678 'ilogb' 'int (double)'
| |   |     `-CStyleCastExpr 0x7fd3008b8560 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fd3008b8520 <col:55> '_A1' lvalue ParmVar 0x7fd3008b8270 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd3008b8438 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd3008b8480 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd3008b8cb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1262:1, col:113> col:46 lgamma 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fd3008b8c20 <col:53, col:59> col:59 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fd3008b8ea8 <col:85, col:113>
| | | `-ReturnStmt 0x7fd3008b8e90 <col:86, col:111>
| | |   `-CallExpr 0x7fd3008b8e48 <col:93, col:111> 'float'
| | |     |-ImplicitCastExpr 0x7fd3008b8e30 <col:93, col:95> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd3008b8dd0 <col:93, col:95> 'float (float)' lvalue Function 0x7fd2ff910f10 'lgammaf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fd3008b8e78 <col:103> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd3008b8e08 <col:103> 'float' lvalue ParmVar 0x7fd3008b8c20 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fd3008b8d58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd3008b8da0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd3008b8fa8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1263:1, col:113> col:46 lgamma 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fd3008b8f10 <col:53, col:65> col:65 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fd3008b9198 <col:85, col:113>
| | | `-ReturnStmt 0x7fd3008b9180 <col:86, col:111>
| | |   `-CallExpr 0x7fd3008b9138 <col:93, col:111> 'long double'
| | |     |-ImplicitCastExpr 0x7fd3008b9120 <col:93, col:95> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd3008b90c0 <col:93, col:95> 'long double (long double)' lvalue Function 0x7fd2ff911230 'lgammal' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fd3008b9168 <col:103> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd3008b90f8 <col:103> 'long double' lvalue ParmVar 0x7fd3008b8f10 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fd3008b9048 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd3008b9090 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd3008b9660 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1265:1, line:1268:67> col:1 lgamma
| | |-TemplateTypeParmDecl 0x7fd3008b91b8 <line:1265:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd3008b95c8 <line:1266:1, line:1268:67> col:1 lgamma 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd3008b94f0 <col:8, col:12> col:12 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd3008b9b80 <col:32, col:67>
| |   | `-ReturnStmt 0x7fd3008b9b68 <col:33, col:65>
| |   |   `-CallExpr 0x7fd3008b9b38 <col:40, col:65> 'double'
| |   |     |-ImplicitCastExpr 0x7fd3008b9b20 <col:40, col:42> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fd3008b9ae8 <col:40, col:42> 'double (double)' lvalue Function 0x7fd2ff9110a0 'lgamma' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fd3008b97e0 <col:49, col:57> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fd3008b97a0 <col:57> '_A1' lvalue ParmVar 0x7fd3008b94f0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd3008b96b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd3008b9700 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd3008b9c80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1272:1, col:111> col:44 llrint 'long long (float) noexcept' inline
| | |-ParmVarDecl 0x7fd3008b9be8 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fd3008b9ea0 <col:83, col:111>
| | | `-ReturnStmt 0x7fd3008b9e88 <col:84, col:109>
| | |   `-CallExpr 0x7fd3008b9e40 <col:91, col:109> 'long long'
| | |     |-ImplicitCastExpr 0x7fd3008b9e28 <col:91, col:93> 'long long (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd3008b9d98 <col:91, col:93> 'long long (float)' lvalue Function 0x7fd300802488 'llrintf' 'long long (float)'
| | |     `-ImplicitCastExpr 0x7fd3008b9e70 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd3008b9dd0 <col:101> 'float' lvalue ParmVar 0x7fd3008b9be8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fd3008b9d20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd3008b9d68 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd3008b9fa0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1273:1, col:111> col:44 llrint 'long long (long double) noexcept' inline
| | |-ParmVarDecl 0x7fd3008b9f08 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fd3008ba1c0 <col:83, col:111>
| | | `-ReturnStmt 0x7fd3008ba1a8 <col:84, col:109>
| | |   `-CallExpr 0x7fd3008ba160 <col:91, col:109> 'long long'
| | |     |-ImplicitCastExpr 0x7fd3008ba148 <col:91, col:93> 'long long (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd3008ba0b8 <col:91, col:93> 'long long (long double)' lvalue Function 0x7fd3008028c8 'llrintl' 'long long (long double)'
| | |     `-ImplicitCastExpr 0x7fd3008ba190 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd3008ba0f0 <col:101> 'long double' lvalue ParmVar 0x7fd3008b9f08 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fd3008ba040 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd3008ba088 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd3008ba770 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1275:1, line:1278:67> col:1 llrint
| | |-TemplateTypeParmDecl 0x7fd3008ba1e0 <line:1275:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd3008ba6d8 <line:1276:1, line:1278:67> col:1 llrint 'typename std::enable_if<std::is_integral<_A1>::value, long long>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd3008ba5c0 <col:8, col:12> col:12 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd3008baf48 <col:32, col:67>
| |   | `-ReturnStmt 0x7fd3008baf30 <col:33, col:65>
| |   |   `-CallExpr 0x7fd3008baf00 <col:40, col:65> 'long long'
| |   |     |-ImplicitCastExpr 0x7fd3008baee8 <col:40, col:42> 'long long (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fd3008bae88 <col:40, col:42> 'long long (double)' lvalue Function 0x7fd3008026a8 'llrint' 'long long (double)'
| |   |     `-CStyleCastExpr 0x7fd3008ba8f0 <col:49, col:57> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fd3008ba8b0 <col:57> '_A1' lvalue ParmVar 0x7fd3008ba5c0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd3008ba7c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd3008ba810 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd3008bb048 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1282:1, col:113> col:44 llround 'long long (float) noexcept' inline
| | |-ParmVarDecl 0x7fd3008bafb0 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fd3008bb238 <col:84, col:113>
| | | `-ReturnStmt 0x7fd3008bb220 <col:85, col:111>
| | |   `-CallExpr 0x7fd3008bb1d8 <col:92, col:111> 'long long'
| | |     |-ImplicitCastExpr 0x7fd3008bb1c0 <col:92, col:94> 'long long (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd3008bb160 <col:92, col:94> 'long long (float)' lvalue Function 0x7fd300802aa8 'llroundf' 'long long (float)'
| | |     `-ImplicitCastExpr 0x7fd3008bb208 <col:103> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd3008bb198 <col:103> 'float' lvalue ParmVar 0x7fd3008bafb0 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fd3008bb0e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd3008bb130 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd3008bb338 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1283:1, col:113> col:44 llround 'long long (long double) noexcept' inline
| | |-ParmVarDecl 0x7fd3008bb2a0 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fd3008bb528 <col:84, col:113>
| | | `-ReturnStmt 0x7fd3008bb510 <col:85, col:111>
| | |   `-CallExpr 0x7fd3008bb4c8 <col:92, col:111> 'long long'
| | |     |-ImplicitCastExpr 0x7fd3008bb4b0 <col:92, col:94> 'long long (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd3008bb450 <col:92, col:94> 'long long (long double)' lvalue Function 0x7fd300802de8 'llroundl' 'long long (long double)'
| | |     `-ImplicitCastExpr 0x7fd3008bb4f8 <col:103> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd3008bb488 <col:103> 'long double' lvalue ParmVar 0x7fd3008bb2a0 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fd3008bb3d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd3008bb420 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd3008bb9f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1285:1, line:1288:69> col:1 llround
| | |-TemplateTypeParmDecl 0x7fd3008bb548 <line:1285:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd3008bb958 <line:1286:1, line:1288:69> col:1 llround 'typename std::enable_if<std::is_integral<_A1>::value, long long>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd3008bb880 <col:9, col:13> col:13 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd3008bbf10 <col:33, col:69>
| |   | `-ReturnStmt 0x7fd3008bbef8 <col:34, col:67>
| |   |   `-CallExpr 0x7fd3008bbec8 <col:41, col:67> 'long long'
| |   |     |-ImplicitCastExpr 0x7fd3008bbeb0 <col:41, col:43> 'long long (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fd3008bbe78 <col:41, col:43> 'long long (double)' lvalue Function 0x7fd300802c48 'llround' 'long long (double)'
| |   |     `-CStyleCastExpr 0x7fd3008bbb70 <col:51, col:59> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fd3008bbb30 <col:59> '_A1' lvalue ParmVar 0x7fd3008bb880 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd3008bba48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd3008bba90 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd3008bc010 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1292:1, col:111> col:46 log1p 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fd3008bbf78 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fd3008bc200 <col:84, col:111>
| | | `-ReturnStmt 0x7fd3008bc1e8 <col:85, col:109>
| | |   `-CallExpr 0x7fd3008bc1a0 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7fd3008bc188 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd3008bc128 <col:92, col:94> 'float (float)' lvalue Function 0x7fd2ff908250 'log1pf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fd3008bc1d0 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd3008bc160 <col:101> 'float' lvalue ParmVar 0x7fd3008bbf78 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fd3008bc0b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd3008bc0f8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd3008bc300 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1293:1, col:111> col:46 log1p 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fd3008bc268 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fd3008bc4f0 <col:84, col:111>
| | | `-ReturnStmt 0x7fd3008bc4d8 <col:85, col:109>
| | |   `-CallExpr 0x7fd3008bc490 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7fd3008bc478 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd3008bc418 <col:92, col:94> 'long double (long double)' lvalue Function 0x7fd2ff908590 'log1pl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fd3008bc4c0 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd3008bc450 <col:101> 'long double' lvalue ParmVar 0x7fd3008bc268 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fd3008bc3a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd3008bc3e8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd3008bc9b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1295:1, line:1298:65> col:1 log1p
| | |-TemplateTypeParmDecl 0x7fd3008bc510 <line:1295:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd3008bc918 <line:1296:1, line:1298:65> col:1 log1p 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd3008bc840 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd3008bced0 <col:31, col:65>
| |   | `-ReturnStmt 0x7fd3008bceb8 <col:32, col:63>
| |   |   `-CallExpr 0x7fd3008bce88 <col:39, col:63> 'double'
| |   |     |-ImplicitCastExpr 0x7fd3008bce70 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fd3008bce38 <col:39, col:41> 'double (double)' lvalue Function 0x7fd2ff9083f0 'log1p' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fd3008bcb30 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fd3008bcaf0 <col:55> '_A1' lvalue ParmVar 0x7fd3008bc840 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd3008bca08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd3008bca50 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd3008bcfd0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1302:1, col:109> col:46 log2 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fd3008bcf38 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fd3008bd1c0 <col:83, col:109>
| | | `-ReturnStmt 0x7fd3008bd1a8 <col:84, col:107>
| | |   `-CallExpr 0x7fd3008bd160 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fd3008bd148 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd3008bd0e8 <col:91, col:93> 'float (float)' lvalue Function 0x7fd2ff907d70 'log2f' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fd3008bd190 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd3008bd120 <col:99> 'float' lvalue ParmVar 0x7fd3008bcf38 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fd3008bd070 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd3008bd0b8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd3008bd2c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1303:1, col:109> col:46 log2 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fd3008bd228 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fd3008bd4b0 <col:83, col:109>
| | | `-ReturnStmt 0x7fd3008bd498 <col:84, col:107>
| | |   `-CallExpr 0x7fd3008bd450 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fd3008bd438 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd3008bd3d8 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fd2ff9080b0 'log2l' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fd3008bd480 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd3008bd410 <col:99> 'long double' lvalue ParmVar 0x7fd3008bd228 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fd3008bd360 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd3008bd3a8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd3008bd970 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1305:1, line:1308:63> col:1 log2
| | |-TemplateTypeParmDecl 0x7fd3008bd4d0 <line:1305:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd3008bd8d8 <line:1306:1, line:1308:63> col:1 log2 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd3008bd800 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd3008bde90 <col:30, col:63>
| |   | `-ReturnStmt 0x7fd3008bde78 <col:31, col:61>
| |   |   `-CallExpr 0x7fd3008bde48 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fd3008bde30 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fd3008bddf8 <col:38, col:40> 'double (double)' lvalue Function 0x7fd2ff907f10 'log2' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fd3008bdaf0 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fd3008bdab0 <col:53> '_A1' lvalue ParmVar 0x7fd3008bd800 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd3008bd9c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd3008bda10 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd3008bdf90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1312:1, col:109> col:46 logb 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fd3008bdef8 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fd3008be180 <col:83, col:109>
| | | `-ReturnStmt 0x7fd3008be168 <col:84, col:107>
| | |   `-CallExpr 0x7fd3008be120 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fd3008be108 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd3008be0a8 <col:91, col:93> 'float (float)' lvalue Function 0x7fd2ff908730 'logbf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fd3008be150 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd3008be0e0 <col:99> 'float' lvalue ParmVar 0x7fd3008bdef8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fd3008be030 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd3008be078 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd3008be280 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1313:1, col:109> col:46 logb 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fd3008be1e8 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fd3008be470 <col:83, col:109>
| | | `-ReturnStmt 0x7fd3008be458 <col:84, col:107>
| | |   `-CallExpr 0x7fd3008be410 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fd3008be3f8 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd3008be398 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fd2ff909a90 'logbl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fd3008be440 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd3008be3d0 <col:99> 'long double' lvalue ParmVar 0x7fd3008be1e8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fd3008be320 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd3008be368 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd3008be930 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1315:1, line:1318:63> col:1 logb
| | |-TemplateTypeParmDecl 0x7fd3008be490 <line:1315:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd3008be898 <line:1316:1, line:1318:63> col:1 logb 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd3008be7c0 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd2ff911c50 <col:30, col:63>
| |   | `-ReturnStmt 0x7fd2ff911c38 <col:31, col:61>
| |   |   `-CallExpr 0x7fd2ff911c08 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fd2ff911bf0 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fd2ff911bb8 <col:38, col:40> 'double (double)' lvalue Function 0x7fd2ff9098f0 'logb' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fd2ff9118b0 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fd2ff911870 <col:53> '_A1' lvalue ParmVar 0x7fd3008be7c0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd3008be988 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd3008be9d0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2ff911d50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1322:1, col:104> col:39 lrint 'long (float) noexcept' inline
| | |-ParmVarDecl 0x7fd2ff911cb8 <col:45, col:51> col:51 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fd2ff911f70 <col:77, col:104>
| | | `-ReturnStmt 0x7fd2ff911f58 <col:78, col:102>
| | |   `-CallExpr 0x7fd2ff911f10 <col:85, col:102> 'long'
| | |     |-ImplicitCastExpr 0x7fd2ff911ef8 <col:85, col:87> 'long (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2ff911e68 <col:85, col:87> 'long (float)' lvalue Function 0x7fd300801468 'lrintf' 'long (float)'
| | |     `-ImplicitCastExpr 0x7fd2ff911f40 <col:94> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2ff911ea0 <col:94> 'float' lvalue ParmVar 0x7fd2ff911cb8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fd2ff911df0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2ff911e38 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2ff912070 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1323:1, col:104> col:39 lrint 'long (long double) noexcept' inline
| | |-ParmVarDecl 0x7fd2ff911fd8 <col:45, col:57> col:57 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fd2ff912290 <col:77, col:104>
| | | `-ReturnStmt 0x7fd2ff912278 <col:78, col:102>
| | |   `-CallExpr 0x7fd2ff912230 <col:85, col:102> 'long'
| | |     |-ImplicitCastExpr 0x7fd2ff912218 <col:85, col:87> 'long (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2ff912188 <col:85, col:87> 'long (long double)' lvalue Function 0x7fd3008018a8 'lrintl' 'long (long double)'
| | |     `-ImplicitCastExpr 0x7fd2ff912260 <col:94> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2ff9121c0 <col:94> 'long double' lvalue ParmVar 0x7fd2ff911fd8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fd2ff912110 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2ff912158 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd2ff912840 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1325:1, line:1328:65> col:1 lrint
| | |-TemplateTypeParmDecl 0x7fd2ff9122b0 <line:1325:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd2ff9127a8 <line:1326:1, line:1328:65> col:1 lrint 'typename std::enable_if<std::is_integral<_A1>::value, long>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd2ff912690 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd2ff912ff8 <col:31, col:65>
| |   | `-ReturnStmt 0x7fd2ff912fe0 <col:32, col:63>
| |   |   `-CallExpr 0x7fd2ff912fb0 <col:39, col:63> 'long'
| |   |     |-ImplicitCastExpr 0x7fd2ff912f98 <col:39, col:41> 'long (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fd2ff912f38 <col:39, col:41> 'long (double)' lvalue Function 0x7fd300801688 'lrint' 'long (double)'
| |   |     `-CStyleCastExpr 0x7fd2ff9129c0 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fd2ff912980 <col:55> '_A1' lvalue ParmVar 0x7fd2ff912690 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd2ff912898 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd2ff9128e0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2ff9130f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1332:1, col:106> col:39 lround 'long (float) noexcept' inline
| | |-ParmVarDecl 0x7fd2ff913060 <col:46, col:52> col:52 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fd2ff9132e8 <col:78, col:106>
| | | `-ReturnStmt 0x7fd2ff9132d0 <col:79, col:104>
| | |   `-CallExpr 0x7fd2ff913288 <col:86, col:104> 'long'
| | |     |-ImplicitCastExpr 0x7fd2ff913270 <col:86, col:88> 'long (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2ff913210 <col:86, col:88> 'long (float)' lvalue Function 0x7fd300801f68 'lroundf' 'long (float)'
| | |     `-ImplicitCastExpr 0x7fd2ff9132b8 <col:96> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2ff913248 <col:96> 'float' lvalue ParmVar 0x7fd2ff913060 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fd2ff913198 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2ff9131e0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2ff9133e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1333:1, col:106> col:39 lround 'long (long double) noexcept' inline
| | |-ParmVarDecl 0x7fd2ff913350 <col:46, col:58> col:58 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fd2ff9135d8 <col:78, col:106>
| | | `-ReturnStmt 0x7fd2ff9135c0 <col:79, col:104>
| | |   `-CallExpr 0x7fd2ff913578 <col:86, col:104> 'long'
| | |     |-ImplicitCastExpr 0x7fd2ff913560 <col:86, col:88> 'long (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2ff913500 <col:86, col:88> 'long (long double)' lvalue Function 0x7fd3008022a8 'lroundl' 'long (long double)'
| | |     `-ImplicitCastExpr 0x7fd2ff9135a8 <col:96> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2ff913538 <col:96> 'long double' lvalue ParmVar 0x7fd2ff913350 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fd2ff913488 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2ff9134d0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd2ff913aa0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1335:1, line:1338:67> col:1 lround
| | |-TemplateTypeParmDecl 0x7fd2ff9135f8 <line:1335:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd2ff913a08 <line:1336:1, line:1338:67> col:1 lround 'typename std::enable_if<std::is_integral<_A1>::value, long>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd2ff913930 <col:8, col:12> col:12 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd2ff913fc0 <col:32, col:67>
| |   | `-ReturnStmt 0x7fd2ff913fa8 <col:33, col:65>
| |   |   `-CallExpr 0x7fd2ff913f78 <col:40, col:65> 'long'
| |   |     |-ImplicitCastExpr 0x7fd2ff913f60 <col:40, col:42> 'long (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fd2ff913f28 <col:40, col:42> 'long (double)' lvalue Function 0x7fd300802108 'lround' 'long (double)'
| |   |     `-CStyleCastExpr 0x7fd2ff913c20 <col:49, col:57> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fd2ff913be0 <col:57> '_A1' lvalue ParmVar 0x7fd2ff913930 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd2ff913af8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd2ff913b40 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2ff9140c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1344:1, col:119> col:46 nearbyint 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fd2ff914028 <col:56, col:62> col:62 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fd2ff9142b0 <col:88, col:119>
| | | `-ReturnStmt 0x7fd2ff914298 <col:89, col:117>
| | |   `-CallExpr 0x7fd2ff914250 <col:96, col:117> 'float'
| | |     |-ImplicitCastExpr 0x7fd2ff914238 <col:96, col:98> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2ff9141d8 <col:96, col:98> 'float (float)' lvalue Function 0x7fd300800a68 'nearbyintf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fd2ff914280 <col:109> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2ff914210 <col:109> 'float' lvalue ParmVar 0x7fd2ff914028 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fd2ff914160 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2ff9141a8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2ff9143b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1345:1, col:119> col:46 nearbyint 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fd2ff914318 <col:56, col:68> col:68 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fd2ff9145a0 <col:88, col:119>
| | | `-ReturnStmt 0x7fd2ff914588 <col:89, col:117>
| | |   `-CallExpr 0x7fd2ff914540 <col:96, col:117> 'long double'
| | |     |-ImplicitCastExpr 0x7fd2ff914528 <col:96, col:98> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2ff9144c8 <col:96, col:98> 'long double (long double)' lvalue Function 0x7fd300800da8 'nearbyintl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fd2ff914570 <col:109> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2ff914500 <col:109> 'long double' lvalue ParmVar 0x7fd2ff914318 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fd2ff914450 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2ff914498 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd2ff914a60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1347:1, line:1350:73> col:1 nearbyint
| | |-TemplateTypeParmDecl 0x7fd2ff9145c0 <line:1347:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd2ff9149c8 <line:1348:1, line:1350:73> col:1 nearbyint 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd2ff9148f0 <col:11, col:15> col:15 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd2ff914f80 <col:35, col:73>
| |   | `-ReturnStmt 0x7fd2ff914f68 <col:36, col:71>
| |   |   `-CallExpr 0x7fd2ff914f38 <col:43, col:71> 'double'
| |   |     |-ImplicitCastExpr 0x7fd2ff914f20 <col:43, col:45> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fd2ff914ee8 <col:43, col:45> 'double (double)' lvalue Function 0x7fd300800c08 'nearbyint' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fd2ff914be0 <col:55, col:63> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fd2ff914ba0 <col:63> '_A1' lvalue ParmVar 0x7fd2ff9148f0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd2ff914ab8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd2ff914b00 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2ff915100 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1354:1, col:151> col:46 nextafter 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7fd2ff914fe8 <col:56, col:62> col:62 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fd2ff915060 <col:72, col:78> col:78 used __lcpp_y 'float'
| | |-CompoundStmt 0x7fd2ff915340 <col:110, col:151>
| | | `-ReturnStmt 0x7fd2ff915328 <col:111, col:149>
| | |   `-CallExpr 0x7fd2ff9152c0 <col:118, col:149> 'float'
| | |     |-ImplicitCastExpr 0x7fd2ff9152a8 <col:118, col:120> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2ff915220 <col:118, col:120> 'float (float, float)' lvalue Function 0x7fd300805768 'nextafterf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7fd2ff9152f8 <col:131> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fd2ff915258 <col:131> 'float' lvalue ParmVar 0x7fd2ff914fe8 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fd2ff915310 <col:141> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2ff915280 <col:141> 'float' lvalue ParmVar 0x7fd2ff915060 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7fd2ff9151a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2ff9151f0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2ff9154c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1355:1, col:151> col:46 nextafter 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fd2ff9153a8 <col:56, col:68> col:68 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fd2ff915420 <col:78, col:90> col:90 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fd2ff915700 <col:110, col:151>
| | | `-ReturnStmt 0x7fd2ff9156e8 <col:111, col:149>
| | |   `-CallExpr 0x7fd2ff915680 <col:118, col:149> 'long double'
| | |     |-ImplicitCastExpr 0x7fd2ff915668 <col:118, col:120> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2ff9155e0 <col:118, col:120> 'long double (long double, long double)' lvalue Function 0x7fd300805bb8 'nextafterl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fd2ff9156b8 <col:131> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fd2ff915618 <col:131> 'long double' lvalue ParmVar 0x7fd2ff9153a8 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fd2ff9156d0 <col:141> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2ff915640 <col:141> 'long double' lvalue ParmVar 0x7fd2ff915420 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fd2ff915568 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2ff9155b0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd2ff915f60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1357:1, line:1371:1> line:1365:1 nextafter
| | |-TemplateTypeParmDecl 0x7fd2ff915720 <line:1357:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fd2ff915788 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fd2ff915ec8 <line:1358:1, line:1371:1> line:1365:1 nextafter 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fd2ff915d70 <col:11, col:15> col:15 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fd2ff915de0 <col:25, col:29> col:29 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fd2ff916788 <line:1366:1, line:1371:1>
| |   | |-DeclStmt 0x7fd2ff9161d8 <line:1367:5, col:66>
| |   | | `-TypedefDecl 0x7fd2ff916180 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fd2ff916110 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fd2ff9165d0 <line:1368:5, line:1369:68>
| |   | | `-StaticAssertDecl 0x7fd2ff916598 <line:1368:5, line:1369:67> line:1368:5
| |   | |   |-ParenExpr 0x7fd2ff916550 <col:19, line:1369:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fd2ff916530 <line:1368:20, line:1369:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fd2ff916510 <line:1368:21, line:1369:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fd2ff9164e8 <line:1368:22, line:1369:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fd2ff916348 <line:1368:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fd2ff9164a8 <line:1369:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fd2ff916570 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fd2ff916770 <line:1370:5, col:72>
| |   |   `-CallExpr 0x7fd2ff916738 <col:12, col:72> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fd2ff916608 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'nextafter' 0x7fd300805990 0x7fd2ff915100 0x7fd2ff9154c0 0x7fd2ff915f60
| |   |     |-CStyleCastExpr 0x7fd2ff9166b0 <col:24, col:39> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fd2ff916678 <col:39> '_A1' lvalue ParmVar 0x7fd2ff915d70 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fd2ff916710 <col:49, col:64> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fd2ff9166d8 <col:64> '_A2' lvalue ParmVar 0x7fd2ff915de0 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fd2ff915fc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd2ff916008 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2ff916918 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1375:1, col:153> col:46 nexttoward 'float (float, long double) noexcept' inline
| | |-ParmVarDecl 0x7fd2ff916800 <col:57, col:63> col:63 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fd2ff916878 <col:73, col:85> col:85 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fd2ff916b80 <col:111, col:153>
| | | `-ReturnStmt 0x7fd2ff916b68 <col:112, col:151>
| | |   `-CallExpr 0x7fd2ff916b00 <col:119, col:151> 'float'
| | |     |-ImplicitCastExpr 0x7fd2ff916ae8 <col:119, col:121> 'float (*)(float, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2ff916a38 <col:119, col:121> 'float (float, long double)' lvalue Function 0x7fd3008080d8 'nexttowardf' 'float (float, long double)'
| | |     |-ImplicitCastExpr 0x7fd2ff916b38 <col:133> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fd2ff916a70 <col:133> 'float' lvalue ParmVar 0x7fd2ff916800 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fd2ff916b50 <col:143> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2ff916a98 <col:143> 'long double' lvalue ParmVar 0x7fd2ff916878 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fd2ff9169c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2ff916a08 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2ff916d00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1376:1, col:153> col:46 nexttoward 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fd2ff916be8 <col:57, col:69> col:69 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fd2ff916c60 <col:79, col:91> col:91 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fd2ff916f40 <col:111, col:153>
| | | `-ReturnStmt 0x7fd2ff916f28 <col:112, col:151>
| | |   `-CallExpr 0x7fd2ff916ec0 <col:119, col:151> 'long double'
| | |     |-ImplicitCastExpr 0x7fd2ff916ea8 <col:119, col:121> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2ff916e20 <col:119, col:121> 'long double (long double, long double)' lvalue Function 0x7fd300808340 'nexttowardl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fd2ff916ef8 <col:133> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fd2ff916e58 <col:133> 'long double' lvalue ParmVar 0x7fd2ff916be8 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fd2ff916f10 <col:143> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2ff916e80 <col:143> 'long double' lvalue ParmVar 0x7fd2ff916c60 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fd2ff916da8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2ff916df0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd2ff9174d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1378:1, line:1381:107> col:1 nexttoward
| | |-TemplateTypeParmDecl 0x7fd2ff916f60 <line:1378:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd2ff917438 <line:1379:1, line:1381:107> col:1 nexttoward 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1, long double) noexcept' inline
| |   |-ParmVarDecl 0x7fd2ff917290 <col:12, col:16> col:16 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fd2ff917308 <col:26, col:38> col:38 referenced __lcpp_y 'long double'
| |   |-CompoundStmt 0x7fd2ff917a68 <col:58, col:107>
| |   | `-ReturnStmt 0x7fd2ff917a50 <col:59, col:105>
| |   |   `-CallExpr 0x7fd2ff917a00 <col:66, col:105> 'double'
| |   |     |-ImplicitCastExpr 0x7fd2ff9179e8 <col:66, col:68> 'double (*)(double, long double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fd2ff917988 <col:66, col:68> 'double (double, long double)' lvalue Function 0x7fd300805e28 'nexttoward' 'double (double, long double)'
| |   |     |-CStyleCastExpr 0x7fd2ff917658 <col:79, col:87> 'double' <Dependent>
| |   |     | `-DeclRefExpr 0x7fd2ff917618 <col:87> '_A1' lvalue ParmVar 0x7fd2ff917290 '__lcpp_x' '_A1'
| |   |     `-ImplicitCastExpr 0x7fd2ff917a38 <col:97> 'long double' <LValueToRValue>
| |   |       `-DeclRefExpr 0x7fd2ff917680 <col:97> 'long double' lvalue ParmVar 0x7fd2ff917308 '__lcpp_y' 'long double'
| |   |-AlwaysInlineAttr 0x7fd2ff917530 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd2ff917578 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2ff917be8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1385:1, col:151> col:46 remainder 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7fd2ff917ad0 <col:56, col:62> col:62 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fd2ff917b48 <col:72, col:78> col:78 used __lcpp_y 'float'
| | |-CompoundStmt 0x7fd2ff917e28 <col:110, col:151>
| | | `-ReturnStmt 0x7fd2ff917e10 <col:111, col:149>
| | |   `-CallExpr 0x7fd2ff917da8 <col:118, col:149> 'float'
| | |     |-ImplicitCastExpr 0x7fd2ff917d90 <col:118, col:120> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2ff917d08 <col:118, col:120> 'float (float, float)' lvalue Function 0x7fd300803bd8 'remainderf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7fd2ff917de0 <col:131> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fd2ff917d40 <col:131> 'float' lvalue ParmVar 0x7fd2ff917ad0 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fd2ff917df8 <col:141> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2ff917d68 <col:141> 'float' lvalue ParmVar 0x7fd2ff917b48 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7fd2ff917c90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2ff917cd8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2ff917fa8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1386:1, col:151> col:46 remainder 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fd2ff917e90 <col:56, col:68> col:68 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fd2ff917f08 <col:78, col:90> col:90 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fd2ff9181e8 <col:110, col:151>
| | | `-ReturnStmt 0x7fd2ff9181d0 <col:111, col:149>
| | |   `-CallExpr 0x7fd2ff918168 <col:118, col:149> 'long double'
| | |     |-ImplicitCastExpr 0x7fd2ff918150 <col:118, col:120> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2ff9180c8 <col:118, col:120> 'long double (long double, long double)' lvalue Function 0x7fd300804038 'remainderl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fd2ff9181a0 <col:131> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fd2ff918100 <col:131> 'long double' lvalue ParmVar 0x7fd2ff917e90 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fd2ff9181b8 <col:141> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2ff918128 <col:141> 'long double' lvalue ParmVar 0x7fd2ff917f08 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fd2ff918050 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2ff918098 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd2ff918a50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1388:1, line:1402:1> line:1396:1 remainder
| | |-TemplateTypeParmDecl 0x7fd2ff918208 <line:1388:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fd2ff918278 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fd2ff9189b8 <line:1389:1, line:1402:1> line:1396:1 remainder 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fd2ff918860 <col:11, col:15> col:15 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fd2ff9188d0 <col:25, col:29> col:29 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fd2ff919278 <line:1397:1, line:1402:1>
| |   | |-DeclStmt 0x7fd2ff918cc8 <line:1398:5, col:66>
| |   | | `-TypedefDecl 0x7fd2ff918c70 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fd2ff918c00 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fd2ff9190c0 <line:1399:5, line:1400:68>
| |   | | `-StaticAssertDecl 0x7fd2ff919088 <line:1399:5, line:1400:67> line:1399:5
| |   | |   |-ParenExpr 0x7fd2ff919040 <col:19, line:1400:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fd2ff919020 <line:1399:20, line:1400:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fd2ff919000 <line:1399:21, line:1400:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fd2ff918fd8 <line:1399:22, line:1400:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fd2ff918e38 <line:1399:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fd2ff918f98 <line:1400:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fd2ff919060 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fd2ff919260 <line:1401:5, col:72>
| |   |   `-CallExpr 0x7fd2ff919228 <col:12, col:72> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fd2ff9190f8 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'remainder' 0x7fd300803e00 0x7fd2ff917be8 0x7fd2ff917fa8 0x7fd2ff918a50
| |   |     |-CStyleCastExpr 0x7fd2ff9191a0 <col:24, col:39> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fd2ff919168 <col:39> '_A1' lvalue ParmVar 0x7fd2ff918860 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fd2ff919200 <col:49, col:64> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fd2ff9191c8 <col:64> '_A2' lvalue ParmVar 0x7fd2ff9188d0 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fd2ff918ab0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd2ff918af8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2ff9194d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1406:1, col:170> col:46 remquo 'float (float, float, int *) noexcept' inline
| | |-ParmVarDecl 0x7fd2ff9192f0 <col:53, col:59> col:59 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fd2ff919368 <col:69, col:75> col:75 used __lcpp_y 'float'
| | |-ParmVarDecl 0x7fd2ff9193e0 <col:85, col:90> col:90 used __lcpp_z 'int *'
| | |-CompoundStmt 0x7fd2ff919790 <col:122, col:170>
| | | `-ReturnStmt 0x7fd2ff919778 <col:123, col:168>
| | |   `-CallExpr 0x7fd2ff9196f0 <col:130, col:168> 'float'
| | |     |-ImplicitCastExpr 0x7fd2ff9196d8 <col:130, col:132> 'float (*)(float, float, int *)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2ff9195f8 <col:130, col:132> 'float (float, float, int *)' lvalue Function 0x7fd300804328 'remquof' 'float (float, float, int *)'
| | |     |-ImplicitCastExpr 0x7fd2ff919730 <col:140> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fd2ff919630 <col:140> 'float' lvalue ParmVar 0x7fd2ff9192f0 '__lcpp_x' 'float'
| | |     |-ImplicitCastExpr 0x7fd2ff919748 <col:150> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fd2ff919658 <col:150> 'float' lvalue ParmVar 0x7fd2ff919368 '__lcpp_y' 'float'
| | |     `-ImplicitCastExpr 0x7fd2ff919760 <col:160> 'int *' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2ff919680 <col:160> 'int *' lvalue ParmVar 0x7fd2ff9193e0 '__lcpp_z' 'int *'
| | |-AlwaysInlineAttr 0x7fd2ff919580 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2ff9195c8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2ff9199e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1407:1, col:170> col:46 remquo 'long double (long double, long double, int *) noexcept' inline
| | |-ParmVarDecl 0x7fd2ff919800 <col:53, col:65> col:65 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fd2ff919878 <col:75, col:87> col:87 used __lcpp_y 'long double'
| | |-ParmVarDecl 0x7fd2ff9198f0 <col:97, col:102> col:102 used __lcpp_z 'int *'
| | |-CompoundStmt 0x7fd2ff919ca0 <col:122, col:170>
| | | `-ReturnStmt 0x7fd2ff919c88 <col:123, col:168>
| | |   `-CallExpr 0x7fd2ff919c00 <col:130, col:168> 'long double'
| | |     |-ImplicitCastExpr 0x7fd2ff919be8 <col:130, col:132> 'long double (*)(long double, long double, int *)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2ff919b08 <col:130, col:132> 'long double (long double, long double, int *)' lvalue Function 0x7fd300804868 'remquol' 'long double (long double, long double, int *)'
| | |     |-ImplicitCastExpr 0x7fd2ff919c40 <col:140> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fd2ff919b40 <col:140> 'long double' lvalue ParmVar 0x7fd2ff919800 '__lcpp_x' 'long double'
| | |     |-ImplicitCastExpr 0x7fd2ff919c58 <col:150> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fd2ff919b68 <col:150> 'long double' lvalue ParmVar 0x7fd2ff919878 '__lcpp_y' 'long double'
| | |     `-ImplicitCastExpr 0x7fd2ff919c70 <col:160> 'int *' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2ff919b90 <col:160> 'int *' lvalue ParmVar 0x7fd2ff9198f0 '__lcpp_z' 'int *'
| | |-AlwaysInlineAttr 0x7fd2ff919a90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2ff919ad8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd2ff91a5e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1409:1, line:1423:1> line:1417:1 remquo
| | |-TemplateTypeParmDecl 0x7fd2ff919cc0 <line:1409:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fd2ff919d28 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fd2ff91a548 <line:1410:1, line:1423:1> line:1417:1 remquo 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2, int *) noexcept' inline
| |   |-ParmVarDecl 0x7fd2ff91a310 <col:8, col:12> col:12 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fd2ff91a380 <col:22, col:26> col:26 referenced __lcpp_y '_A2'
| |   |-ParmVarDecl 0x7fd2ff91a3f8 <col:36, col:41> col:41 referenced __lcpp_z 'int *'
| |   |-CompoundStmt 0x7fd2ff91ae38 <line:1418:1, line:1423:1>
| |   | |-DeclStmt 0x7fd2ff91a858 <line:1419:5, col:66>
| |   | | `-TypedefDecl 0x7fd2ff91a800 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fd2ff91a790 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fd2ff91ac50 <line:1420:5, line:1421:68>
| |   | | `-StaticAssertDecl 0x7fd2ff91ac18 <line:1420:5, line:1421:67> line:1420:5
| |   | |   |-ParenExpr 0x7fd2ff91abd0 <col:19, line:1421:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fd2ff91abb0 <line:1420:20, line:1421:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fd2ff91ab90 <line:1420:21, line:1421:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fd2ff91ab68 <line:1420:22, line:1421:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fd2ff91a9c8 <line:1420:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fd2ff91ab28 <line:1421:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fd2ff91abf0 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fd2ff91ae20 <line:1422:5, col:79>
| |   |   `-CallExpr 0x7fd2ff91ade0 <col:12, col:79> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fd2ff91ac88 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'remquo' 0x7fd3008045c8 0x7fd2ff9194d0 0x7fd2ff9199e0 0x7fd2ff91a5e0
| |   |     |-CStyleCastExpr 0x7fd2ff91ad30 <col:21, col:36> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fd2ff91acf8 <col:36> '_A1' lvalue ParmVar 0x7fd2ff91a310 '__lcpp_x' '_A1'
| |   |     |-CStyleCastExpr 0x7fd2ff91ad90 <col:46, col:61> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fd2ff91ad58 <col:61> '_A2' lvalue ParmVar 0x7fd2ff91a380 '__lcpp_y' '_A2'
| |   |     `-DeclRefExpr 0x7fd2ff91adb8 <col:71> 'int *' lvalue ParmVar 0x7fd2ff91a3f8 '__lcpp_z' 'int *'
| |   |-AlwaysInlineAttr 0x7fd2ff91a648 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd2ff91a690 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2ff91af48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1427:1, col:109> col:46 rint 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fd2ff91aeb0 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fd2ff91b138 <col:83, col:109>
| | | `-ReturnStmt 0x7fd2ff91b120 <col:84, col:107>
| | |   `-CallExpr 0x7fd2ff91b0d8 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fd2ff91b0c0 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2ff91b060 <col:91, col:93> 'float (float)' lvalue Function 0x7fd300800f48 'rintf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fd2ff91b108 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2ff91b098 <col:99> 'float' lvalue ParmVar 0x7fd2ff91aeb0 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fd2ff91afe8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2ff91b030 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2ff91b238 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1428:1, col:109> col:46 rint 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fd2ff91b1a0 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fd2ff91b428 <col:83, col:109>
| | | `-ReturnStmt 0x7fd2ff91b410 <col:84, col:107>
| | |   `-CallExpr 0x7fd2ff91b3c8 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fd2ff91b3b0 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2ff91b350 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fd300801290 'rintl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fd2ff91b3f8 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2ff91b388 <col:99> 'long double' lvalue ParmVar 0x7fd2ff91b1a0 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fd2ff91b2d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2ff91b320 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd2ff91b8f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1430:1, line:1433:63> col:1 rint
| | |-TemplateTypeParmDecl 0x7fd2ff91b448 <line:1430:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd2ff91b858 <line:1431:1, line:1433:63> col:1 rint 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd2ff91b780 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd2ff91be10 <col:30, col:63>
| |   | `-ReturnStmt 0x7fd2ff91bdf8 <col:31, col:61>
| |   |   `-CallExpr 0x7fd2ff91bdc8 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fd2ff91bdb0 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fd2ff91bd78 <col:38, col:40> 'double (double)' lvalue Function 0x7fd3008010f0 'rint' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fd2ff91ba70 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fd2ff91ba30 <col:53> '_A1' lvalue ParmVar 0x7fd2ff91b780 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd2ff91b948 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd2ff91b990 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2ff91bf10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1437:1, col:111> col:46 round 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fd2ff91be78 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fd2ff91c100 <col:84, col:111>
| | | `-ReturnStmt 0x7fd2ff91c0e8 <col:85, col:109>
| | |   `-CallExpr 0x7fd2ff91c0a0 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7fd2ff91c088 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2ff91c028 <col:92, col:94> 'float (float)' lvalue Function 0x7fd300801a88 'roundf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fd2ff91c0d0 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2ff91c060 <col:101> 'float' lvalue ParmVar 0x7fd2ff91be78 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fd2ff91bfb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2ff91bff8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2ff91c200 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1438:1, col:111> col:46 round 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fd2ff91c168 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fd2ff91c3f0 <col:84, col:111>
| | | `-ReturnStmt 0x7fd2ff91c3d8 <col:85, col:109>
| | |   `-CallExpr 0x7fd2ff91c390 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7fd2ff91c378 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2ff91c318 <col:92, col:94> 'long double (long double)' lvalue Function 0x7fd300801dc8 'roundl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fd2ff91c3c0 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2ff91c350 <col:101> 'long double' lvalue ParmVar 0x7fd2ff91c168 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fd2ff91c2a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2ff91c2e8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd2ff91c8b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1440:1, line:1443:65> col:1 round
| | |-TemplateTypeParmDecl 0x7fd2ff91c410 <line:1440:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd2ff91c818 <line:1441:1, line:1443:65> col:1 round 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd2ff91c740 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd2ff91cdd0 <col:31, col:65>
| |   | `-ReturnStmt 0x7fd2ff91cdb8 <col:32, col:63>
| |   |   `-CallExpr 0x7fd2ff91cd88 <col:39, col:63> 'double'
| |   |     |-ImplicitCastExpr 0x7fd2ff91cd70 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fd2ff91cd38 <col:39, col:41> 'double (double)' lvalue Function 0x7fd300801c28 'round' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fd2ff91ca30 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fd2ff91c9f0 <col:55> '_A1' lvalue ParmVar 0x7fd2ff91c740 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd2ff91c908 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd2ff91c950 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2ff91cf50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1447:1, col:140> col:46 scalbln 'float (float, long) noexcept' inline
| | |-ParmVarDecl 0x7fd2ff91ce38 <col:54, col:60> col:60 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fd2ff91ceb0 <col:70, col:75> col:75 used __lcpp_y 'long'
| | |-CompoundStmt 0x7fd2ff91d1c0 <col:101, col:140>
| | | `-ReturnStmt 0x7fd2ff91d1a8 <col:102, col:138>
| | |   `-CallExpr 0x7fd2ff91d140 <col:109, col:138> 'float'
| | |     |-ImplicitCastExpr 0x7fd2ff91d128 <col:109, col:111> 'float (*)(float, long)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2ff91d070 <col:109, col:111> 'float (float, long)' lvalue Function 0x7fd2ff90e1a8 'scalblnf' 'float (float, long)'
| | |     |-ImplicitCastExpr 0x7fd2ff91d178 <col:120> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fd2ff91d0a8 <col:120> 'float' lvalue ParmVar 0x7fd2ff91ce38 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fd2ff91d190 <col:130> 'long' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2ff91d0d0 <col:130> 'long' lvalue ParmVar 0x7fd2ff91ceb0 '__lcpp_y' 'long'
| | |-AlwaysInlineAttr 0x7fd2ff91cff8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2ff91d040 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2ff91d340 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1448:1, col:140> col:46 scalbln 'long double (long double, long) noexcept' inline
| | |-ParmVarDecl 0x7fd2ff91d228 <col:54, col:66> col:66 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fd2ff91d2a0 <col:76, col:81> col:81 used __lcpp_y 'long'
| | |-CompoundStmt 0x7fd2ff91d5b0 <col:101, col:140>
| | | `-ReturnStmt 0x7fd2ff91d598 <col:102, col:138>
| | |   `-CallExpr 0x7fd2ff91d530 <col:109, col:138> 'long double'
| | |     |-ImplicitCastExpr 0x7fd2ff91d518 <col:109, col:111> 'long double (*)(long double, long)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2ff91d460 <col:109, col:111> 'long double (long double, long)' lvalue Function 0x7fd2ff90e708 'scalblnl' 'long double (long double, long)'
| | |     |-ImplicitCastExpr 0x7fd2ff91d568 <col:120> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fd2ff91d498 <col:120> 'long double' lvalue ParmVar 0x7fd2ff91d228 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fd2ff91d580 <col:130> 'long' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2ff91d4c0 <col:130> 'long' lvalue ParmVar 0x7fd2ff91d2a0 '__lcpp_y' 'long'
| | |-AlwaysInlineAttr 0x7fd2ff91d3e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2ff91d430 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd2ff91db70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1450:1, line:1453:94> col:1 scalbln
| | |-TemplateTypeParmDecl 0x7fd2ff91d5d0 <line:1450:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd2ff91dad8 <line:1451:1, line:1453:94> col:1 scalbln 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1, long) noexcept' inline
| |   |-ParmVarDecl 0x7fd2ff91d930 <col:9, col:13> col:13 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fd2ff91d9a8 <col:23, col:28> col:28 referenced __lcpp_y 'long'
| |   |-CompoundStmt 0x7fd2ff91e108 <col:48, col:94>
| |   | `-ReturnStmt 0x7fd2ff91e0f0 <col:49, col:92>
| |   |   `-CallExpr 0x7fd2ff91e0a0 <col:56, col:92> 'double'
| |   |     |-ImplicitCastExpr 0x7fd2ff91e088 <col:56, col:58> 'double (*)(double, long)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fd2ff91e028 <col:56, col:58> 'double (double, long)' lvalue Function 0x7fd2ff90e458 'scalbln' 'double (double, long)'
| |   |     |-CStyleCastExpr 0x7fd2ff91dcf8 <col:66, col:74> 'double' <Dependent>
| |   |     | `-DeclRefExpr 0x7fd2ff91dcb8 <col:74> '_A1' lvalue ParmVar 0x7fd2ff91d930 '__lcpp_x' '_A1'
| |   |     `-ImplicitCastExpr 0x7fd2ff91e0d8 <col:84> 'long' <LValueToRValue>
| |   |       `-DeclRefExpr 0x7fd2ff91dd20 <col:84> 'long' lvalue ParmVar 0x7fd2ff91d9a8 '__lcpp_y' 'long'
| |   |-AlwaysInlineAttr 0x7fd2ff91dbd0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd2ff91dc18 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2ff91e288 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1457:1, col:137> col:46 scalbn 'float (float, int) noexcept' inline
| | |-ParmVarDecl 0x7fd2ff91e170 <col:53, col:59> col:59 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fd2ff91e1e8 <col:69, col:73> col:73 used __lcpp_y 'int'
| | |-CompoundStmt 0x7fd2ff91e4c8 <col:99, col:137>
| | | `-ReturnStmt 0x7fd2ff91e4b0 <col:100, col:135>
| | |   `-CallExpr 0x7fd2ff91e448 <col:107, col:135> 'float'
| | |     |-ImplicitCastExpr 0x7fd2ff91e430 <col:107, col:109> 'float (*)(float, int)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2ff91e3a8 <col:107, col:109> 'float (float, int)' lvalue Function 0x7fd2ff90dae8 'scalbnf' 'float (float, int)'
| | |     |-ImplicitCastExpr 0x7fd2ff91e480 <col:117> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fd2ff91e3e0 <col:117> 'float' lvalue ParmVar 0x7fd2ff91e170 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fd2ff91e498 <col:127> 'int' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2ff91e408 <col:127> 'int' lvalue ParmVar 0x7fd2ff91e1e8 '__lcpp_y' 'int'
| | |-AlwaysInlineAttr 0x7fd2ff91e330 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2ff91e378 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2ff91e648 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1458:1, col:137> col:46 scalbn 'long double (long double, int) noexcept' inline
| | |-ParmVarDecl 0x7fd2ff91e530 <col:53, col:65> col:65 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fd2ff91e5a8 <col:75, col:79> col:79 used __lcpp_y 'int'
| | |-CompoundStmt 0x7fd2ff91e888 <col:99, col:137>
| | | `-ReturnStmt 0x7fd2ff91e870 <col:100, col:135>
| | |   `-CallExpr 0x7fd2ff91e808 <col:107, col:135> 'long double'
| | |     |-ImplicitCastExpr 0x7fd2ff91e7f0 <col:107, col:109> 'long double (*)(long double, int)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2ff91e768 <col:107, col:109> 'long double (long double, int)' lvalue Function 0x7fd2ff90df38 'scalbnl' 'long double (long double, int)'
| | |     |-ImplicitCastExpr 0x7fd2ff91e840 <col:117> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fd2ff91e7a0 <col:117> 'long double' lvalue ParmVar 0x7fd2ff91e530 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fd2ff91e858 <col:127> 'int' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2ff91e7c8 <col:127> 'int' lvalue ParmVar 0x7fd2ff91e5a8 '__lcpp_y' 'int'
| | |-AlwaysInlineAttr 0x7fd2ff91e6f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2ff91e738 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd2ff91ede0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1460:1, line:1463:91> col:1 scalbn
| | |-TemplateTypeParmDecl 0x7fd2ff91e8a8 <line:1460:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd2ff91ed48 <line:1461:1, line:1463:91> col:1 scalbn 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1, int) noexcept' inline
| |   |-ParmVarDecl 0x7fd2ff91ebe0 <col:8, col:12> col:12 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fd2ff91ec58 <col:22, col:26> col:26 referenced __lcpp_y 'int'
| |   |-CompoundStmt 0x7fd2ff91f350 <col:46, col:91>
| |   | `-ReturnStmt 0x7fd2ff91f338 <col:47, col:89>
| |   |   `-CallExpr 0x7fd2ff91f2e8 <col:54, col:89> 'double'
| |   |     |-ImplicitCastExpr 0x7fd2ff91f2d0 <col:54, col:56> 'double (*)(double, int)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fd2ff91f298 <col:54, col:56> 'double (double, int)' lvalue Function 0x7fd2ff90dd10 'scalbn' 'double (double, int)'
| |   |     |-CStyleCastExpr 0x7fd2ff91ef68 <col:63, col:71> 'double' <Dependent>
| |   |     | `-DeclRefExpr 0x7fd2ff91ef28 <col:71> '_A1' lvalue ParmVar 0x7fd2ff91ebe0 '__lcpp_x' '_A1'
| |   |     `-ImplicitCastExpr 0x7fd2ff91f320 <col:81> 'int' <LValueToRValue>
| |   |       `-DeclRefExpr 0x7fd2ff91ef90 <col:81> 'int' lvalue ParmVar 0x7fd2ff91ec58 '__lcpp_y' 'int'
| |   |-AlwaysInlineAttr 0x7fd2ff91ee40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd2ff91ee88 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2ff91f450 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1467:1, col:113> col:46 tgamma 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fd2ff91f3b8 <col:53, col:59> col:59 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fd2ff91f640 <col:85, col:113>
| | | `-ReturnStmt 0x7fd2ff91f628 <col:86, col:111>
| | |   `-CallExpr 0x7fd2ff91f5e0 <col:93, col:111> 'float'
| | |     |-ImplicitCastExpr 0x7fd2ff91f5c8 <col:93, col:95> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2ff91f568 <col:93, col:95> 'float (float)' lvalue Function 0x7fd2ff9113c0 'tgammaf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fd2ff91f610 <col:103> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2ff91f5a0 <col:103> 'float' lvalue ParmVar 0x7fd2ff91f3b8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fd2ff91f4f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2ff91f538 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2ff91f740 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1468:1, col:113> col:46 tgamma 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fd2ff91f6a8 <col:53, col:65> col:65 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fd2ff91f930 <col:85, col:113>
| | | `-ReturnStmt 0x7fd2ff91f918 <col:86, col:111>
| | |   `-CallExpr 0x7fd2ff91f8d0 <col:93, col:111> 'long double'
| | |     |-ImplicitCastExpr 0x7fd2ff91f8b8 <col:93, col:95> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2ff91f858 <col:93, col:95> 'long double (long double)' lvalue Function 0x7fd2ff911700 'tgammal' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fd2ff91f900 <col:103> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2ff91f890 <col:103> 'long double' lvalue ParmVar 0x7fd2ff91f6a8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fd2ff91f7e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2ff91f828 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fd2ff91fdf0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1470:1, line:1473:67> col:1 tgamma
| | |-TemplateTypeParmDecl 0x7fd2ff91f950 <line:1470:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fd2ff91fd58 <line:1471:1, line:1473:67> col:1 tgamma 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fd2ff91fc80 <col:8, col:12> col:12 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fd2ff920310 <col:32, col:67>
| |   | `-ReturnStmt 0x7fd2ff9202f8 <col:33, col:65>
| |   |   `-CallExpr 0x7fd2ff9202c8 <col:40, col:65> 'double'
| |   |     |-ImplicitCastExpr 0x7fd2ff9202b0 <col:40, col:42> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fd2ff920278 <col:40, col:42> 'double (double)' lvalue Function 0x7fd2ff911560 'tgamma' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fd2ff91ff70 <col:49, col:57> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fd2ff91ff30 <col:57> '_A1' lvalue ParmVar 0x7fd2ff91fc80 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fd2ff91fe48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fd2ff91fe90 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2ff920410 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1477:1, col:111> col:46 trunc 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fd2ff920378 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fd2ff920600 <col:84, col:111>
| | | `-ReturnStmt 0x7fd2ff9205e8 <col:85, col:109>
| | |   `-CallExpr 0x7fd2ff9205a0 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7fd2ff920588 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2ff920528 <col:92, col:94> 'float (float)' lvalue Function 0x7fd300803000 'truncf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fd2ff9205d0 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2ff920560 <col:101> 'float' lvalue ParmVar 0x7fd2ff920378 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fd2ff9204b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2ff9204f8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fd2ff920700 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1478:1, col:111> col:46 trunc 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fd2ff920668 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fd2ff9208f0 <col:84, col:111>
| | | `-ReturnStmt 0x7fd2ff9208d8 <col:85, col:109>
| | |   `-CallExpr 0x7fd2ff920890 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7fd2ff920878 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fd2ff920818 <col:92, col:94> 'long double (long double)' lvalue Function 0x7fd300803340 'truncl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fd2ff9208c0 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fd2ff920850 <col:101> 'long double' lvalue ParmVar 0x7fd2ff920668 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fd2ff9207a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fd2ff9207e8 <col:51, col:74> Hidden
| `-FunctionTemplateDecl 0x7fd2ff920db0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1480:1, line:1483:65> col:1 trunc
|   |-TemplateTypeParmDecl 0x7fd2ff920910 <line:1480:11, col:17> col:17 referenced class depth 0 index 0 _A1
|   `-FunctionDecl 0x7fd2ff920d18 <line:1481:1, line:1483:65> col:1 trunc 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
|     |-ParmVarDecl 0x7fd2ff920c40 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
|     |-CompoundStmt 0x7fd2ff9212d0 <col:31, col:65>
|     | `-ReturnStmt 0x7fd2ff9212b8 <col:32, col:63>
|     |   `-CallExpr 0x7fd2ff921288 <col:39, col:63> 'double'
|     |     |-ImplicitCastExpr 0x7fd2ff921270 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
|     |     | `-DeclRefExpr 0x7fd2ff921238 <col:39, col:41> 'double (double)' lvalue Function 0x7fd3008031a0 'trunc' 'double (double)'
|     |     `-CStyleCastExpr 0x7fd2ff920f30 <col:47, col:55> 'double' <Dependent>
|     |       `-DeclRefExpr 0x7fd2ff920ef0 <col:55> '_A1' lvalue ParmVar 0x7fd2ff920c40 '__lcpp_x' '_A1'
|     |-AlwaysInlineAttr 0x7fd2ff920e08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|     `-VisibilityAttr 0x7fd2ff920e50 <col:51, col:74> Hidden
|-LinkageSpecDecl 0x7fd300830e58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:439:12> col:12 implicit C
| `-FunctionDecl 0x7fd300830ea8 <col:12> col:12 implicit referenced __builtin_addressof 'void *(void &) noexcept' extern
|   |-ParmVarDecl 0x7fd300830f40 <<invalid sloc>> <invalid sloc> 'void &'
|   |-NoThrowAttr 0x7fd300830fa8 <col:12> Implicit
|   `-ConstAttr 0x7fd300830ff0 <col:12> Implicit
|-LinkageSpecDecl 0x7fd30005c740 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:331:90> col:90 implicit C
| `-FunctionDecl 0x7fd30005c790 <col:90> col:90 implicit used __builtin_huge_valf 'float (void) noexcept' extern
|   |-NoThrowAttr 0x7fd30005c828 <col:90> Implicit
|   `-ConstAttr 0x7fd30005c870 <col:90> Implicit
|-LinkageSpecDecl 0x7fd30005c920 <line:332:91> col:91 implicit C
| `-FunctionDecl 0x7fd30005c970 <col:91> col:91 implicit used __builtin_nanf 'float (const char *) noexcept' extern
|   |-ParmVarDecl 0x7fd30005ca08 <<invalid sloc>> <invalid sloc> 'const char *'
|   |-NoThrowAttr 0x7fd30005ca70 <col:91> Implicit
|   `-ConstAttr 0x7fd30005cab8 <col:91> Implicit
|-LinkageSpecDecl 0x7fd30005cc20 <line:333:95> col:95 implicit C
| `-FunctionDecl 0x7fd30005cc70 <col:95> col:95 implicit used __builtin_nansf 'float (const char *) noexcept' extern
|   |-ParmVarDecl 0x7fd30005cd08 <<invalid sloc>> <invalid sloc> 'const char *'
|   |-NoThrowAttr 0x7fd30005cd70 <col:95> Implicit
|   `-ConstAttr 0x7fd30005cdb8 <col:95> Implicit
|-LinkageSpecDecl 0x7fd30005f870 <line:377:90> col:90 implicit C
| `-FunctionDecl 0x7fd30005f8c0 <col:90> col:90 implicit used __builtin_huge_val 'double (void) noexcept' extern
|   |-NoThrowAttr 0x7fd30005f958 <col:90> Implicit
|   `-ConstAttr 0x7fd30005f9a0 <col:90> Implicit
|-LinkageSpecDecl 0x7fd30005fa50 <line:378:91> col:91 implicit C
| `-FunctionDecl 0x7fd30005faa0 <col:91> col:91 implicit used __builtin_nan 'double (const char *) noexcept' extern
|   |-ParmVarDecl 0x7fd30005fb38 <<invalid sloc>> <invalid sloc> 'const char *'
|   |-NoThrowAttr 0x7fd30005fba0 <col:91> Implicit
|   `-ConstAttr 0x7fd30005fbe8 <col:91> Implicit
|-LinkageSpecDecl 0x7fd30005fd50 <line:379:95> col:95 implicit C
| `-FunctionDecl 0x7fd30005fda0 <col:95> col:95 implicit used __builtin_nans 'double (const char *) noexcept' extern
|   |-ParmVarDecl 0x7fd30005fe38 <<invalid sloc>> <invalid sloc> 'const char *'
|   |-NoThrowAttr 0x7fd30005fea0 <col:95> Implicit
|   `-ConstAttr 0x7fd30005fee8 <col:95> Implicit
|-LinkageSpecDecl 0x7fd3000629c8 <line:423:90> col:90 implicit C
| `-FunctionDecl 0x7fd300062a18 <col:90> col:90 implicit used __builtin_huge_vall 'long double (void) noexcept' extern
|   |-NoThrowAttr 0x7fd300062ab0 <col:90> Implicit
|   `-ConstAttr 0x7fd300062af8 <col:90> Implicit
|-LinkageSpecDecl 0x7fd300062ba8 <line:424:91> col:91 implicit C
| `-FunctionDecl 0x7fd300062bf8 <col:91> col:91 implicit used __builtin_nanl 'long double (const char *) noexcept' extern
|   |-ParmVarDecl 0x7fd300062c90 <<invalid sloc>> <invalid sloc> 'const char *'
|   |-NoThrowAttr 0x7fd300062cf8 <col:91> Implicit
|   `-ConstAttr 0x7fd300062d40 <col:91> Implicit
|-LinkageSpecDecl 0x7fd300062eb0 <line:425:95> col:95 implicit C
| `-FunctionDecl 0x7fd300062f00 <col:95> col:95 implicit used __builtin_nansl 'long double (const char *) noexcept' extern
|   |-ParmVarDecl 0x7fd300062f98 <<invalid sloc>> <invalid sloc> 'const char *'
|   |-NoThrowAttr 0x7fd300063000 <col:95> Implicit
|   `-ConstAttr 0x7fd300063048 <col:95> Implicit
|-LinkageSpecDecl 0x7fd300889fb0 </usr/include/math.h:557:25> col:25 implicit C
| `-FunctionDecl 0x7fd30088a000 <col:25> col:25 implicit referenced __builtin_isgreater 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7fd30088a098 <col:25> Implicit
|   `-ConstAttr 0x7fd30088a0e0 <col:25> Implicit
|-LinkageSpecDecl 0x7fd30188f158 <line:558:30> col:30 implicit C
| `-FunctionDecl 0x7fd30188f1a8 <col:30> col:30 implicit referenced __builtin_isgreaterequal 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7fd30188f240 <col:30> Implicit
|   `-ConstAttr 0x7fd30188f288 <col:30> Implicit
|-LinkageSpecDecl 0x7fd3018902c8 <line:559:22> col:22 implicit C
| `-FunctionDecl 0x7fd301890318 <col:22> col:22 implicit referenced __builtin_isless 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7fd3018903b0 <col:22> Implicit
|   `-ConstAttr 0x7fd3018903f8 <col:22> Implicit
|-LinkageSpecDecl 0x7fd301891458 <line:560:27> col:27 implicit C
| `-FunctionDecl 0x7fd3018914a8 <col:27> col:27 implicit referenced __builtin_islessequal 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7fd301891540 <col:27> Implicit
|   `-ConstAttr 0x7fd301891588 <col:27> Implicit
|-LinkageSpecDecl 0x7fd301892600 <line:561:29> col:29 implicit C
| `-FunctionDecl 0x7fd301892650 <col:29> col:29 implicit referenced __builtin_islessgreater 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7fd3018926e8 <col:29> Implicit
|   `-ConstAttr 0x7fd301892730 <col:29> Implicit
|-LinkageSpecDecl 0x7fd301893778 <line:562:27> col:27 implicit C
| `-FunctionDecl 0x7fd3018937c8 <col:27> col:27 implicit referenced __builtin_isunordered 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7fd301893860 <col:27> Implicit
|   `-ConstAttr 0x7fd3018938a8 <col:27> Implicit
|-NamespaceDecl 0x7fd2ff9212f0 prev 0x7fd300035198 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:438:37, line:439:38> line:438:47 std
| |-original Namespace 0x7fd2ff865c58 'std'
| `-NamespaceDecl 0x7fd2ff921358 prev 0x7fd300035200 <col:52, line:439:36> <scratch space>:440:1 __1 inline
|   |-original Namespace 0x7fd2ff865cc0 '__1'
|   |-UsingDecl 0x7fd2ff9213c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:313:1, col:9> col:9 ::signbit
|   |-UsingShadowDecl 0x7fd2ff921418 <col:9> col:9 implicit FunctionTemplate 0x7fd300880898 'signbit'
|   |-UsingShadowDecl 0x7fd2ff921460 <col:9> col:9 implicit FunctionTemplate 0x7fd300881390 'signbit'
|   |-UsingShadowDecl 0x7fd2ff9214a8 <col:9> col:9 implicit FunctionTemplate 0x7fd300881be0 'signbit'
|   |-UsingDecl 0x7fd2ff9214f8 <line:314:1, col:9> col:9 ::fpclassify
|   |-UsingShadowDecl 0x7fd2ff921548 <col:9> col:9 implicit FunctionTemplate 0x7fd300882c60 'fpclassify'
|   |-UsingShadowDecl 0x7fd2ff921590 <col:9> col:9 implicit FunctionTemplate 0x7fd3008834e0 'fpclassify'
|   |-UsingDecl 0x7fd2ff9215e0 <line:315:1, col:9> col:9 ::isfinite
|   |-UsingShadowDecl 0x7fd2ff921630 <col:9> col:9 implicit FunctionTemplate 0x7fd300884780 'isfinite'
|   |-UsingShadowDecl 0x7fd2ff921678 <col:9> col:9 implicit FunctionTemplate 0x7fd300885170 'isfinite'
|   |-UsingDecl 0x7fd2ff9216c8 <line:316:1, col:9> col:9 ::isinf
|   |-UsingShadowDecl 0x7fd2ff921718 <col:9> col:9 implicit FunctionTemplate 0x7fd300886200 'isinf'
|   |-UsingShadowDecl 0x7fd2ff921760 <col:9> col:9 implicit FunctionTemplate 0x7fd300886b00 'isinf'
|   |-UsingDecl 0x7fd2ff9217b0 <line:317:1, col:9> col:9 ::isnan
|   |-UsingShadowDecl 0x7fd2ff921800 <col:9> col:9 implicit FunctionTemplate 0x7fd300887a50 'isnan'
|   |-UsingShadowDecl 0x7fd2ff921848 <col:9> col:9 implicit FunctionTemplate 0x7fd3008882d0 'isnan'
|   |-UsingDecl 0x7fd2ff921898 <line:318:1, col:9> col:9 ::isnormal
|   |-UsingShadowDecl 0x7fd2ff9218e8 <col:9> col:9 implicit FunctionTemplate 0x7fd300889240 'isnormal'
|   |-UsingShadowDecl 0x7fd2ff921930 <col:9> col:9 implicit FunctionTemplate 0x7fd3008899d0 'isnormal'
|   |-UsingDecl 0x7fd2ff921980 <line:319:1, col:9> col:9 ::isgreater
|   |-UsingShadowDecl 0x7fd2ff9219d0 <col:9> col:9 implicit FunctionTemplate 0x7fd30188e860 'isgreater'
|   |-UsingDecl 0x7fd2ff921a20 <line:320:1, col:9> col:9 ::isgreaterequal
|   |-UsingShadowDecl 0x7fd2ff921a70 <col:9> col:9 implicit FunctionTemplate 0x7fd30188faa0 'isgreaterequal'
|   |-UsingDecl 0x7fd2ff921ac0 <line:321:1, col:9> col:9 ::isless
|   |-UsingShadowDecl 0x7fd2ff921b10 <col:9> col:9 implicit FunctionTemplate 0x7fd301890c30 'isless'
|   |-UsingDecl 0x7fd2ff921b60 <line:322:1, col:9> col:9 ::islessequal
|   |-UsingShadowDecl 0x7fd2ff921bb0 <col:9> col:9 implicit FunctionTemplate 0x7fd301891da0 'islessequal'
|   |-UsingDecl 0x7fd2ff921c00 <line:323:1, col:9> col:9 ::islessgreater
|   |-UsingShadowDecl 0x7fd2ff921c50 <col:9> col:9 implicit FunctionTemplate 0x7fd301892f50 'islessgreater'
|   |-UsingDecl 0x7fd2ff921ca0 <line:324:1, col:9> col:9 ::isunordered
|   |-UsingShadowDecl 0x7fd2ff921cf0 <col:9> col:9 implicit FunctionTemplate 0x7fd3018940c0 'isunordered'
|   |-UsingDecl 0x7fd2ff921d40 <line:325:1, col:9> col:9 ::isunordered
|   |-UsingShadowDecl 0x7fd2ff921d90 prev 0x7fd2ff921cf0 <col:9> col:9 implicit FunctionTemplate 0x7fd3018940c0 'isunordered'
|   |-UsingDecl 0x7fd2ff921de0 <line:327:1, col:9> col:9 ::float_t
|   |-UsingShadowDecl 0x7fd2ff921e30 <col:9> col:9 implicit Typedef 0x7fd2ff865e40 'float_t'
|   | `-<<<NULL>>>
|   |-UsingDecl 0x7fd2ff921e80 <line:328:1, col:9> col:9 ::double_t
|   |-UsingShadowDecl 0x7fd2ff921ed0 <col:9> col:9 implicit Typedef 0x7fd2ff865eb0 'double_t'
|   | `-<<<NULL>>>
|   |-UsingDecl 0x7fd2ff921f20 <line:331:1, col:9> col:9 ::abs
|   |-UsingShadowDecl 0x7fd2ff921f70 <col:9> col:9 implicit Function 0x7fd301894600 'abs' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fd2ff921fb8 <col:9> col:9 implicit Function 0x7fd3018948f0 'abs' 'double (double) noexcept'
|   |-UsingShadowDecl 0x7fd2ff922000 <col:9> col:9 implicit Function 0x7fd301894be0 'abs' 'long double (long double) noexcept'
|   |-UsingDecl 0x7fd2ff922050 <line:334:1, col:9> col:9 ::acos
|   |-UsingShadowDecl 0x7fd2ff9220a0 <col:9> col:9 implicit Function 0x7fd2ff900ad8 'acos' 'double (double)'
|   |-UsingShadowDecl 0x7fd2ff9220e8 <col:9> col:9 implicit Function 0x7fd301894ed0 'acos' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fd2ff922130 <col:9> col:9 implicit Function 0x7fd3018951c0 'acos' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fd2ff922178 <col:9> col:9 implicit FunctionTemplate 0x7fd301895960 'acos'
|   |-UsingDecl 0x7fd2ff9221c8 <line:335:1, col:9> col:9 ::acosf
|   |-UsingShadowDecl 0x7fd2ff922218 <col:9> col:9 implicit Function 0x7fd2ff900938 'acosf' 'float (float)'
|   |-UsingDecl 0x7fd2ff922268 <line:336:1, col:9> col:9 ::asin
|   |-UsingShadowDecl 0x7fd2ff9222b8 <col:9> col:9 implicit Function 0x7fd2ff901000 'asin' 'double (double)'
|   |-UsingShadowDecl 0x7fd2ff922300 <col:9> col:9 implicit Function 0x7fd3018ce360 'asin' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fd2ff922348 <col:9> col:9 implicit Function 0x7fd3018ce650 'asin' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fd2ff922390 <col:9> col:9 implicit FunctionTemplate 0x7fd3018ced00 'asin'
|   |-UsingDecl 0x7fd2ff9223e0 <line:337:1, col:9> col:9 ::asinf
|   |-UsingShadowDecl 0x7fd2ff922430 <col:9> col:9 implicit Function 0x7fd2ff900e18 'asinf' 'float (float)'
|   |-UsingDecl 0x7fd2ff922480 <line:338:1, col:9> col:9 ::atan
|   |-UsingShadowDecl 0x7fd2ff9224d0 <col:9> col:9 implicit Function 0x7fd2ff9014e0 'atan' 'double (double)'
|   |-UsingShadowDecl 0x7fd2ff922518 <col:9> col:9 implicit Function 0x7fd3018cf320 'atan' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fd2ff922560 <col:9> col:9 implicit Function 0x7fd30088aa40 'atan' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fd2ff9225a8 <col:9> col:9 implicit FunctionTemplate 0x7fd30088b0f0 'atan'
|   |-UsingDecl 0x7fd2ff9225f8 <line:339:1, col:9> col:9 ::atanf
|   |-UsingShadowDecl 0x7fd2ff922648 <col:9> col:9 implicit Function 0x7fd2ff901340 'atanf' 'float (float)'
|   |-UsingDecl 0x7fd2ff922698 <line:340:1, col:9> col:9 ::atan2
|   |-UsingShadowDecl 0x7fd2ff9226e8 <col:9> col:9 implicit Function 0x7fd2ff901b98 'atan2' 'double (double, double)'
|   |-UsingShadowDecl 0x7fd2ff922730 <col:9> col:9 implicit Function 0x7fd30088b790 'atan2' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7fd2ff922778 <col:9> col:9 implicit Function 0x7fd30088bb80 'atan2' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fd2ff9227c0 <col:9> col:9 implicit FunctionTemplate 0x7fd30088c750 'atan2'
|   |-UsingDecl 0x7fd2ff922810 <line:341:1, col:9> col:9 ::atan2f
|   |-UsingShadowDecl 0x7fd2ff922860 <col:9> col:9 implicit Function 0x7fd2ff9018e8 'atan2f' 'float (float, float)'
|   |-UsingDecl 0x7fd2ff9228b0 <line:342:1, col:9> col:9 ::ceil
|   |-UsingShadowDecl 0x7fd2ff922900 <col:9> col:9 implicit Function 0x7fd300800248 'ceil' 'double (double)'
|   |-UsingShadowDecl 0x7fd2ff922948 <col:9> col:9 implicit Function 0x7fd30088e168 'ceil' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fd2ff922990 <col:9> col:9 implicit Function 0x7fd30088e458 'ceil' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fd2ff9229d8 <col:9> col:9 implicit FunctionTemplate 0x7fd30088eb10 'ceil'
|   |-UsingDecl 0x7fd2ff922a28 <line:343:1, col:9> col:9 ::ceilf
|   |-UsingShadowDecl 0x7fd2ff922a78 <col:9> col:9 implicit Function 0x7fd3008000a8 'ceilf' 'float (float)'
|   |-UsingDecl 0x7fd2ff922ac8 <line:344:1, col:9> col:9 ::cos
|   |-UsingShadowDecl 0x7fd2ff922b18 <col:9> col:9 implicit Function 0x7fd2ff9029d0 'cos' 'double (double)'
|   |-UsingShadowDecl 0x7fd2ff922b60 <col:9> col:9 implicit Function 0x7fd30088f130 'cos' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fd2ff922ba8 <col:9> col:9 implicit Function 0x7fd30088f420 'cos' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fd2ff922bf0 <col:9> col:9 implicit FunctionTemplate 0x7fd30088fb00 'cos'
|   |-UsingDecl 0x7fd2ff922c40 <line:345:1, col:9> col:9 ::cosf
|   |-UsingShadowDecl 0x7fd2ff922c90 <col:9> col:9 implicit Function 0x7fd2ff902830 'cosf' 'float (float)'
|   |-UsingDecl 0x7fd2ff922ce0 <line:346:1, col:9> col:9 ::cosh
|   |-UsingShadowDecl 0x7fd2ff922d30 <col:9> col:9 implicit Function 0x7fd2ff904f30 'cosh' 'double (double)'
|   |-UsingShadowDecl 0x7fd2ff922d78 <col:9> col:9 implicit Function 0x7fd300890120 'cosh' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fd2ff922dc0 <col:9> col:9 implicit Function 0x7fd300890410 'cosh' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fd2ff922e08 <col:9> col:9 implicit FunctionTemplate 0x7fd300890ac0 'cosh'
|   |-UsingDecl 0x7fd2ff922e58 <line:347:1, col:9> col:9 ::coshf
|   |-UsingShadowDecl 0x7fd2ff922ea8 <col:9> col:9 implicit Function 0x7fd2ff904d90 'coshf' 'float (float)'
|   |-UsingDecl 0x7fd2ff922ef8 <line:349:1, col:9> col:9 ::exp
|   |-UsingShadowDecl 0x7fd2ff922f48 <col:9> col:9 implicit Function 0x7fd2ff9065f0 'exp' 'double (double)'
|   |-UsingShadowDecl 0x7fd2ff922f90 <col:9> col:9 implicit Function 0x7fd3008910e0 'exp' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fd2ff922fd8 <col:9> col:9 implicit Function 0x7fd3008913d0 'exp' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fd2ff923020 <col:9> col:9 implicit FunctionTemplate 0x7fd300891aa0 'exp'
|   |-UsingDecl 0x7fd2ff923070 <line:350:1, col:9> col:9 ::expf
|   |-UsingShadowDecl 0x7fd2ff9230c0 <col:9> col:9 implicit Function 0x7fd2ff906450 'expf' 'float (float)'
|   |-UsingDecl 0x7fd2ff923110 <line:352:1, col:9> col:9 ::fabs
|   |-UsingShadowDecl 0x7fd2ff923160 <col:9> col:9 implicit Function 0x7fd2ff90ea90 'fabs' 'double (double)'
|   |-UsingShadowDecl 0x7fd2ff9231a8 <col:9> col:9 implicit Function 0x7fd3008920c0 'fabs' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fd2ff9231f0 <col:9> col:9 implicit Function 0x7fd3008923b0 'fabs' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fd2ff923238 <col:9> col:9 implicit FunctionTemplate 0x7fd300892a60 'fabs'
|   |-UsingDecl 0x7fd2ff923288 <line:353:1, col:9> col:9 ::fabsf
|   |-UsingShadowDecl 0x7fd2ff9232d8 <col:9> col:9 implicit Function 0x7fd2ff90e8f0 'fabsf' 'float (float)'
|   |-UsingDecl 0x7fd2ff923328 <line:354:1, col:9> col:9 ::floor
|   |-UsingShadowDecl 0x7fd2ff923378 <col:9> col:9 implicit Function 0x7fd300800728 'floor' 'double (double)'
|   |-UsingShadowDecl 0x7fd2ff9233c0 <col:9> col:9 implicit Function 0x7fd300893080 'floor' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fd2ff923408 <col:9> col:9 implicit Function 0x7fd300893370 'floor' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fd2ff923450 <col:9> col:9 implicit FunctionTemplate 0x7fd300893a40 'floor'
|   |-UsingDecl 0x7fd2ff9234a0 <line:355:1, col:9> col:9 ::floorf
|   |-UsingShadowDecl 0x7fd2ff9234f0 <col:9> col:9 implicit Function 0x7fd300800588 'floorf' 'float (float)'
|   |-UsingDecl 0x7fd2ff923540 <line:357:1, col:9> col:9 ::fmod
|   |-UsingShadowDecl 0x7fd2ff923590 <col:9> col:9 implicit Function 0x7fd300803788 'fmod' 'double (double, double)'
|   |-UsingShadowDecl 0x7fd2ff9235d8 <col:9> col:9 implicit Function 0x7fd3008940e0 'fmod' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7fd2ff923620 <col:9> col:9 implicit Function 0x7fd3008944a0 'fmod' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fd2ff923668 <col:9> col:9 implicit FunctionTemplate 0x7fd300894f40 'fmod'
|   |-UsingDecl 0x7fd2ff9236b8 <line:358:1, col:9> col:9 ::fmodf
|   |-UsingShadowDecl 0x7fd2ff923708 <col:9> col:9 implicit Function 0x7fd300803560 'fmodf' 'float (float, float)'
|   |-UsingDecl 0x7fd2ff923758 <line:360:1, col:9> col:9 ::frexp
|   |-UsingShadowDecl 0x7fd2ff9237a8 <col:9> col:9 implicit Function 0x7fd2ff90c028 'frexp' 'double (double, int *)'
|   |-UsingShadowDecl 0x7fd2ff9237f0 <col:9> col:9 implicit Function 0x7fd300895918 'frexp' 'float (float, int *) noexcept'
|   |-UsingShadowDecl 0x7fd2ff923838 <col:9> col:9 implicit Function 0x7fd300895d30 'frexp' 'long double (long double, int *) noexcept'
|   |-UsingShadowDecl 0x7fd2ff923880 <col:9> col:9 implicit FunctionTemplate 0x7fd300896560 'frexp'
|   |-UsingDecl 0x7fd2ff9238d0 <line:361:1, col:9> col:9 ::frexpf
|   |-UsingShadowDecl 0x7fd2ff923920 <col:9> col:9 implicit Function 0x7fd2ff90bd88 'frexpf' 'float (float, int *)'
|   |-UsingDecl 0x7fd2ff923970 <line:362:1, col:9> col:9 ::ldexp
|   |-UsingShadowDecl 0x7fd2ff9239c0 <col:9> col:9 implicit Function 0x7fd2ff90b800 'ldexp' 'double (double, int)'
|   |-UsingShadowDecl 0x7fd2ff923a08 <col:9> col:9 implicit Function 0x7fd300896c78 'ldexp' 'float (float, int) noexcept'
|   |-UsingShadowDecl 0x7fd2ff923a50 <col:9> col:9 implicit Function 0x7fd300897060 'ldexp' 'long double (long double, int) noexcept'
|   |-UsingShadowDecl 0x7fd2ff923a98 <col:9> col:9 implicit FunctionTemplate 0x7fd300897898 'ldexp'
|   |-UsingDecl 0x7fd2ff923ae8 <line:363:1, col:9> col:9 ::ldexpf
|   |-UsingShadowDecl 0x7fd2ff923b38 <col:9> col:9 implicit Function 0x7fd2ff90a538 'ldexpf' 'float (float, int)'
|   |-UsingDecl 0x7fd2ff923b88 <line:365:1, col:9> col:9 ::log
|   |-UsingShadowDecl 0x7fd2ff923bd8 <col:9> col:9 implicit Function 0x7fd2ff907500 'log' 'double (double)'
|   |-UsingShadowDecl 0x7fd2ff923c20 <col:9> col:9 implicit Function 0x7fd300897f38 'log' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fd2ff923c68 <col:9> col:9 implicit Function 0x7fd300898228 'log' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fd2ff923cb0 <col:9> col:9 implicit FunctionTemplate 0x7fd3008988e0 'log'
|   |-UsingDecl 0x7fd2ff923d00 <line:366:1, col:9> col:9 ::logf
|   |-UsingShadowDecl 0x7fd2ff923d50 <col:9> col:9 implicit Function 0x7fd2ff907360 'logf' 'float (float)'
|   |-UsingDecl 0x7fd2ff923da0 <line:368:1, col:9> col:9 ::log10
|   |-UsingShadowDecl 0x7fd2ff923df0 <col:9> col:9 implicit Function 0x7fd2ff907a30 'log10' 'double (double)'
|   |-UsingShadowDecl 0x7fd2ff923e38 <col:9> col:9 implicit Function 0x7fd300898f00 'log10' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fd2ff923e80 <col:9> col:9 implicit Function 0x7fd3008991f0 'log10' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fd2ff923ec8 <col:9> col:9 implicit FunctionTemplate 0x7fd3008998d8 'log10'
|   |-UsingDecl 0x7fd2ff923f18 <line:369:1, col:9> col:9 ::log10f
|   |-UsingShadowDecl 0x7fd2ff923f68 <col:9> col:9 implicit Function 0x7fd2ff907890 'log10f' 'float (float)'
|   |-UsingDecl 0x7fd2ff923fb8 <line:370:1, col:9> col:9 ::modf
|   |-UsingShadowDecl 0x7fd2ff924008 <col:9> col:9 implicit Function 0x7fd2ff909fd8 'modf' 'double (double, double *)'
|   |-UsingShadowDecl 0x7fd2ff924050 <col:9> col:9 implicit Function 0x7fd300899f80 'modf' 'float (float, float *) noexcept'
|   |-UsingShadowDecl 0x7fd2ff924098 <col:9> col:9 implicit Function 0x7fd30089a3a0 'modf' 'long double (long double, long double *) noexcept'
|   |-UsingDecl 0x7fd2ff9240e8 <line:371:1, col:9> col:9 ::modff
|   |-UsingShadowDecl 0x7fd2ff924138 <col:9> col:9 implicit Function 0x7fd2ff909d18 'modff' 'float (float, float *)'
|   |-UsingDecl 0x7fd2ff924188 <line:373:1, col:9> col:9 ::pow
|   |-UsingShadowDecl 0x7fd2ff9241d8 <col:9> col:9 implicit Function 0x7fd2ff90fc50 'pow' 'double (double, double)'
|   |-UsingShadowDecl 0x7fd2ff924220 <col:9> col:9 implicit Function 0x7fd30089a7c0 'pow' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7fd2ff924268 <col:9> col:9 implicit Function 0x7fd30089ab80 'pow' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fd2ff9242b0 <col:9> col:9 implicit FunctionTemplate 0x7fd30089b620 'pow'
|   |-UsingDecl 0x7fd2ff924300 <line:374:1, col:9> col:9 ::powf
|   |-UsingShadowDecl 0x7fd2ff924350 <col:9> col:9 implicit Function 0x7fd2ff90fa28 'powf' 'float (float, float)'
|   |-UsingDecl 0x7fd2ff9243a0 <line:376:1, col:9> col:9 ::sin
|   |-UsingShadowDecl 0x7fd2ff9243f0 <col:9> col:9 implicit Function 0x7fd2ff902eb0 'sin' 'double (double)'
|   |-UsingShadowDecl 0x7fd2ff924438 <col:9> col:9 implicit Function 0x7fd30089bf58 'sin' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fd2ff924480 <col:9> col:9 implicit Function 0x7fd30089c248 'sin' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fd2ff9244c8 <col:9> col:9 implicit FunctionTemplate 0x7fd30089c900 'sin'
|   |-UsingDecl 0x7fd2ff924518 <line:377:1, col:9> col:9 ::sinf
|   |-UsingShadowDecl 0x7fd2ff924568 <col:9> col:9 implicit Function 0x7fd2ff902d10 'sinf' 'float (float)'
|   |-UsingDecl 0x7fd2ff9245b8 <line:378:1, col:9> col:9 ::sinh
|   |-UsingShadowDecl 0x7fd2ff924608 <col:9> col:9 implicit Function 0x7fd2ff905c30 'sinh' 'double (double)'
|   |-UsingShadowDecl 0x7fd2ff924650 <col:9> col:9 implicit Function 0x7fd30089cf20 'sinh' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fd2ff924698 <col:9> col:9 implicit Function 0x7fd30089d210 'sinh' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fd2ff9246e0 <col:9> col:9 implicit FunctionTemplate 0x7fd30089fad8 'sinh'
|   |-UsingDecl 0x7fd2ff924730 <line:379:1, col:9> col:9 ::sinhf
|   |-UsingShadowDecl 0x7fd2ff924780 <col:9> col:9 implicit Function 0x7fd2ff905a90 'sinhf' 'float (float)'
|   |-UsingDecl 0x7fd2ff9247d0 <line:381:1, col:9> col:9 ::sqrt
|   |-UsingShadowDecl 0x7fd2ff924820 <col:9> col:9 implicit Function 0x7fd2ff9101c0 'sqrt' 'double (double)'
|   |-UsingShadowDecl 0x7fd2ff924868 <col:9> col:9 implicit Function 0x7fd3008a0100 'sqrt' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fd2ff9248b0 <col:9> col:9 implicit Function 0x7fd3008a03f0 'sqrt' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fd2ff9248f8 <col:9> col:9 implicit FunctionTemplate 0x7fd3008a0aa0 'sqrt'
|   |-UsingDecl 0x7fd2ff924948 <line:382:1, col:9> col:9 ::sqrtf
|   |-UsingShadowDecl 0x7fd2ff924998 <col:9> col:9 implicit Function 0x7fd2ff910020 'sqrtf' 'float (float)'
|   |-UsingDecl 0x7fd2ff9249e8 <line:383:1, col:9> col:9 ::tan
|   |-UsingShadowDecl 0x7fd2ff924a38 <col:9> col:9 implicit Function 0x7fd2ff903390 'tan' 'double (double)'
|   |-UsingShadowDecl 0x7fd2ff924a80 <col:9> col:9 implicit Function 0x7fd3008a10c0 'tan' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fd2ff924ac8 <col:9> col:9 implicit Function 0x7fd3008a13b0 'tan' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fd2ff924b10 <col:9> col:9 implicit FunctionTemplate 0x7fd3008a1a98 'tan'
|   |-UsingDecl 0x7fd2ff924b60 <line:384:1, col:9> col:9 ::tanf
|   |-UsingShadowDecl 0x7fd2ff924bb0 <col:9> col:9 implicit Function 0x7fd2ff9031f0 'tanf' 'float (float)'
|   |-UsingDecl 0x7fd2ff924c00 <line:386:1, col:9> col:9 ::tanh
|   |-UsingShadowDecl 0x7fd2ff924c50 <col:9> col:9 implicit Function 0x7fd2ff906110 'tanh' 'double (double)'
|   |-UsingShadowDecl 0x7fd2ff924c98 <col:9> col:9 implicit Function 0x7fd3008a20c0 'tanh' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fd2ff924ce0 <col:9> col:9 implicit Function 0x7fd3008a23b0 'tanh' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fd2ff924d28 <col:9> col:9 implicit FunctionTemplate 0x7fd3008a2a60 'tanh'
|   |-UsingDecl 0x7fd2ff924d78 <line:387:1, col:9> col:9 ::tanhf
|   |-UsingShadowDecl 0x7fd2ff924dc8 <col:9> col:9 implicit Function 0x7fd2ff905f70 'tanhf' 'float (float)'
|   |-UsingDecl 0x7fd2ff924e18 <line:389:1, col:9> col:9 ::acosh
|   |-UsingShadowDecl 0x7fd2ff924e68 <col:9> col:9 implicit Function 0x7fd2ff904090 'acosh' 'double (double)'
|   |-UsingShadowDecl 0x7fd2ff924eb0 <col:9> col:9 implicit Function 0x7fd3008a3080 'acosh' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fd2ff924ef8 <col:9> col:9 implicit Function 0x7fd3008a3370 'acosh' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fd2ff924f40 <col:9> col:9 implicit FunctionTemplate 0x7fd3008a3a98 'acosh'
|   |-UsingDecl 0x7fd2ff924f90 <line:390:1, col:9> col:9 ::acoshf
|   |-UsingShadowDecl 0x7fd2ff924fe0 <col:9> col:9 implicit Function 0x7fd2ff9036d0 'acoshf' 'float (float)'
|   |-UsingDecl 0x7fd2ff925030 <line:391:1, col:9> col:9 ::asinh
|   |-UsingShadowDecl 0x7fd2ff925080 <col:9> col:9 implicit Function 0x7fd2ff904570 'asinh' 'double (double)'
|   |-UsingShadowDecl 0x7fd2ff9250c8 <col:9> col:9 implicit Function 0x7fd3008a40c0 'asinh' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fd2ff925110 <col:9> col:9 implicit Function 0x7fd3008a43b0 'asinh' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fd2ff925158 <col:9> col:9 implicit FunctionTemplate 0x7fd3008a4a60 'asinh'
|   |-UsingDecl 0x7fd2ff9251a8 <line:392:1, col:9> col:9 ::asinhf
|   |-UsingShadowDecl 0x7fd2ff9251f8 <col:9> col:9 implicit Function 0x7fd2ff9043d0 'asinhf' 'float (float)'
|   |-UsingDecl 0x7fd2ff925248 <line:393:1, col:9> col:9 ::atanh
|   |-UsingShadowDecl 0x7fd2ff925298 <col:9> col:9 implicit Function 0x7fd2ff904a50 'atanh' 'double (double)'
|   |-UsingShadowDecl 0x7fd2ff9252e0 <col:9> col:9 implicit Function 0x7fd3008a5080 'atanh' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fd2ff925328 <col:9> col:9 implicit Function 0x7fd3008a5370 'atanh' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fd2ff925370 <col:9> col:9 implicit FunctionTemplate 0x7fd3008a5a98 'atanh'
|   |-UsingDecl 0x7fd2ff9253c0 <line:394:1, col:9> col:9 ::atanhf
|   |-UsingShadowDecl 0x7fd2ff925410 <col:9> col:9 implicit Function 0x7fd2ff9048b0 'atanhf' 'float (float)'
|   |-UsingDecl 0x7fd2ff925460 <line:395:1, col:9> col:9 ::cbrt
|   |-UsingShadowDecl 0x7fd2ff9254b0 <col:9> col:9 implicit Function 0x7fd2ff90ef70 'cbrt' 'double (double)'
|   |-UsingShadowDecl 0x7fd2ff9254f8 <col:9> col:9 implicit Function 0x7fd3008a60c0 'cbrt' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fd2ff925540 <col:9> col:9 implicit Function 0x7fd3008a63b0 'cbrt' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fd2ff925588 <col:9> col:9 implicit FunctionTemplate 0x7fd3008a6a60 'cbrt'
|   |-UsingDecl 0x7fd2ff9255d8 <line:396:1, col:9> col:9 ::cbrtf
|   |-UsingShadowDecl 0x7fd2ff925628 <col:9> col:9 implicit Function 0x7fd2ff90edd0 'cbrtf' 'float (float)'
|   |-UsingDecl 0x7fd2ff925678 <line:398:1, col:9> col:9 ::copysign
|   |-UsingShadowDecl 0x7fd2ff9256c8 <col:9> col:9 implicit Function 0x7fd300804c68 'copysign' 'double (double, double)'
|   |-UsingShadowDecl 0x7fd2ff925710 <col:9> col:9 implicit Function 0x7fd3008a7100 'copysign' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7fd2ff925758 <col:9> col:9 implicit Function 0x7fd3008a74c0 'copysign' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fd2ff9257a0 <col:9> col:9 implicit FunctionTemplate 0x7fd3008a7f80 'copysign'
|   |-UsingDecl 0x7fd2ff925800 <line:399:1, col:9> col:9 ::copysignf
|   |-UsingShadowDecl 0x7fd2ff925850 <col:9> col:9 implicit Function 0x7fd300804a40 'copysignf' 'float (float, float)'
|   |-UsingDecl 0x7fd2ff9258a0 <line:401:1, col:9> col:9 ::erf
|   |-UsingShadowDecl 0x7fd2ff9258f0 <col:9> col:9 implicit Function 0x7fd2ff9106a0 'erf' 'double (double)'
|   |-UsingShadowDecl 0x7fd2ff925938 <col:9> col:9 implicit Function 0x7fd3008a88b8 'erf' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fd2ff925980 <col:9> col:9 implicit Function 0x7fd3008a8ba8 'erf' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fd2ff9259c8 <col:9> col:9 implicit FunctionTemplate 0x7fd3008a9260 'erf'
|   |-UsingDecl 0x7fd2ff925a18 <line:402:1, col:9> col:9 ::erff
|   |-UsingShadowDecl 0x7fd2ff925a68 <col:9> col:9 implicit Function 0x7fd2ff910500 'erff' 'float (float)'
|   |-UsingDecl 0x7fd2ff925ab8 <line:403:1, col:9> col:9 ::erfc
|   |-UsingShadowDecl 0x7fd2ff925b08 <col:9> col:9 implicit Function 0x7fd2ff910bd0 'erfc' 'double (double)'
|   |-UsingShadowDecl 0x7fd2ff925b50 <col:9> col:9 implicit Function 0x7fd3008a9880 'erfc' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fd2ff925b98 <col:9> col:9 implicit Function 0x7fd3008aab78 'erfc' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fd2ff925be0 <col:9> col:9 implicit FunctionTemplate 0x7fd3008ab230 'erfc'
|   |-UsingDecl 0x7fd2ff925c30 <line:404:1, col:9> col:9 ::erfcf
|   |-UsingShadowDecl 0x7fd2ff925c80 <col:9> col:9 implicit Function 0x7fd2ff910a30 'erfcf' 'float (float)'
|   |-UsingDecl 0x7fd2ff925cd0 <line:405:1, col:9> col:9 ::exp2
|   |-UsingShadowDecl 0x7fd2ff925d20 <col:9> col:9 implicit Function 0x7fd2ff906b40 'exp2' 'double (double)'
|   |-UsingShadowDecl 0x7fd2ff925d68 <col:9> col:9 implicit Function 0x7fd3008ab850 'exp2' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fd2ff925db0 <col:9> col:9 implicit Function 0x7fd3008abb40 'exp2' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fd2ff925df8 <col:9> col:9 implicit FunctionTemplate 0x7fd3008ac1f0 'exp2'
|   |-UsingDecl 0x7fd2ff925e48 <line:406:1, col:9> col:9 ::exp2f
|   |-UsingShadowDecl 0x7fd2ff925e98 <col:9> col:9 implicit Function 0x7fd2ff9069a0 'exp2f' 'float (float)'
|   |-UsingDecl 0x7fd2ff925ee8 <line:407:1, col:9> col:9 ::expm1
|   |-UsingShadowDecl 0x7fd2ff925f38 <col:9> col:9 implicit Function 0x7fd2ff907020 'expm1' 'double (double)'
|   |-UsingShadowDecl 0x7fd2ff925f80 <col:9> col:9 implicit Function 0x7fd3008ac810 'expm1' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fd2ff925fc8 <col:9> col:9 implicit Function 0x7fd3008acb00 'expm1' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fd2ff926010 <col:9> col:9 implicit FunctionTemplate 0x7fd3008ad1b0 'expm1'
|   |-UsingDecl 0x7fd2ff926060 <line:408:1, col:9> col:9 ::expm1f
|   |-UsingShadowDecl 0x7fd2ff9260b0 <col:9> col:9 implicit Function 0x7fd2ff906e80 'expm1f' 'float (float)'
|   |-UsingDecl 0x7fd2ff926100 <line:409:1, col:9> col:9 ::fdim
|   |-UsingShadowDecl 0x7fd2ff926150 <col:9> col:9 implicit Function 0x7fd300808790 'fdim' 'double (double, double)'
|   |-UsingShadowDecl 0x7fd2ff926198 <col:9> col:9 implicit Function 0x7fd3008ad850 'fdim' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7fd2ff9261e0 <col:9> col:9 implicit Function 0x7fd3008adc10 'fdim' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fd2ff926228 <col:9> col:9 implicit FunctionTemplate 0x7fd3008ae6b0 'fdim'
|   |-UsingDecl 0x7fd2ff926278 <line:410:1, col:9> col:9 ::fdimf
|   |-UsingShadowDecl 0x7fd2ff9262c8 <col:9> col:9 implicit Function 0x7fd300808568 'fdimf' 'float (float, float)'
|   |-UsingDecl 0x7fd2ff926318 <line:411:1, col:9> col:9 ::fmaf
|   |-UsingShadowDecl 0x7fd2ff926368 <col:9> col:9 implicit Function 0x7fd30080c9a8 'fmaf' 'float (float, float, float)'
|   |-UsingDecl 0x7fd2ff9263b8 <line:412:1, col:9> col:9 ::fma
|   |-UsingShadowDecl 0x7fd2ff926408 <col:9> col:9 implicit Function 0x7fd30080ccf8 'fma' 'double (double, double, double)'
|   |-UsingShadowDecl 0x7fd2ff926450 <col:9> col:9 implicit Function 0x7fd3008b1108 'fma' 'float (float, float, float) noexcept'
|   |-UsingShadowDecl 0x7fd2ff926498 <col:9> col:9 implicit Function 0x7fd3008b15c0 'fma' 'long double (long double, long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fd2ff9264e0 <col:9> col:9 implicit FunctionTemplate 0x7fd3008b24d0 'fma'
|   |-UsingDecl 0x7fd2ff926530 <line:413:1, col:9> col:9 ::fmax
|   |-UsingShadowDecl 0x7fd2ff926580 <col:9> col:9 implicit Function 0x7fd300808e08 'fmax' 'double (double, double)'
|   |-UsingShadowDecl 0x7fd2ff9265c8 <col:9> col:9 implicit Function 0x7fd3008b3220 'fmax' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7fd2ff926610 <col:9> col:9 implicit Function 0x7fd3008b35e0 'fmax' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fd2ff926658 <col:9> col:9 implicit FunctionTemplate 0x7fd3008b4080 'fmax'
|   |-UsingDecl 0x7fd2ff9266a8 <line:414:1, col:9> col:9 ::fmaxf
|   |-UsingShadowDecl 0x7fd2ff9266f8 <col:9> col:9 implicit Function 0x7fd300808be0 'fmaxf' 'float (float, float)'
|   |-UsingDecl 0x7fd2ff926748 <line:415:1, col:9> col:9 ::fmin
|   |-UsingShadowDecl 0x7fd2ff926798 <col:9> col:9 implicit Function 0x7fd30080c488 'fmin' 'double (double, double)'
|   |-UsingShadowDecl 0x7fd2ff9267e0 <col:9> col:9 implicit Function 0x7fd3008b4a40 'fmin' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7fd2ff926828 <col:9> col:9 implicit Function 0x7fd3008b4e00 'fmin' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fd2ff926870 <col:9> col:9 implicit FunctionTemplate 0x7fd3008b58a0 'fmin'
|   |-UsingDecl 0x7fd2ff9268c0 <line:416:1, col:9> col:9 ::fminf
|   |-UsingShadowDecl 0x7fd2ff926910 <col:9> col:9 implicit Function 0x7fd30080c260 'fminf' 'float (float, float)'
|   |-UsingDecl 0x7fd2ff926960 <line:417:1, col:9> col:9 ::hypot
|   |-UsingShadowDecl 0x7fd2ff9269b0 <col:9> col:9 implicit Function 0x7fd2ff90f558 'hypot' 'double (double, double)'
|   |-UsingShadowDecl 0x7fd2ff9269f8 <col:9> col:9 implicit Function 0x7fd3008b6258 'hypot' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7fd2ff926a40 <col:9> col:9 implicit Function 0x7fd3008b6618 'hypot' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fd2ff926a88 <col:9> col:9 implicit FunctionTemplate 0x7fd3008b7100 'hypot'
|   |-UsingDecl 0x7fd2ff926ad8 <line:418:1, col:9> col:9 ::hypotf
|   |-UsingShadowDecl 0x7fd2ff926b28 <col:9> col:9 implicit Function 0x7fd2ff90f330 'hypotf' 'float (float, float)'
|   |-UsingDecl 0x7fd2ff926b78 <line:419:1, col:9> col:9 ::ilogb
|   |-UsingShadowDecl 0x7fd2ff926bc8 <col:9> col:9 implicit Function 0x7fd2ff90c678 'ilogb' 'int (double)'
|   |-UsingShadowDecl 0x7fd2ff926c10 <col:9> col:9 implicit Function 0x7fd3008b7a38 'ilogb' 'int (float) noexcept'
|   |-UsingShadowDecl 0x7fd2ff926c58 <col:9> col:9 implicit Function 0x7fd3008b7d28 'ilogb' 'int (long double) noexcept'
|   |-UsingShadowDecl 0x7fd2ff926ca0 <col:9> col:9 implicit FunctionTemplate 0x7fd3008b83e0 'ilogb'
|   |-UsingDecl 0x7fd2ff926cf0 <line:420:1, col:9> col:9 ::ilogbf
|   |-UsingShadowDecl 0x7fd2ff926d40 <col:9> col:9 implicit Function 0x7fd2ff90c4a0 'ilogbf' 'int (float)'
|   |-UsingDecl 0x7fd2ff926d90 <line:421:1, col:9> col:9 ::lgamma
|   |-UsingShadowDecl 0x7fd2ff926de0 <col:9> col:9 implicit Function 0x7fd2ff9110a0 'lgamma' 'double (double)'
|   |-UsingShadowDecl 0x7fd2ff926e28 <col:9> col:9 implicit Function 0x7fd3008b8cb8 'lgamma' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fd2ff926e70 <col:9> col:9 implicit Function 0x7fd3008b8fa8 'lgamma' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fd2ff926eb8 <col:9> col:9 implicit FunctionTemplate 0x7fd3008b9660 'lgamma'
|   |-UsingDecl 0x7fd2ff926f08 <line:422:1, col:9> col:9 ::lgammaf
|   |-UsingShadowDecl 0x7fd2ff926f58 <col:9> col:9 implicit Function 0x7fd2ff910f10 'lgammaf' 'float (float)'
|   |-UsingDecl 0x7fd2ff926fa8 <line:423:1, col:9> col:9 ::llrint
|   |-UsingShadowDecl 0x7fd2ff926ff8 <col:9> col:9 implicit Function 0x7fd3008026a8 'llrint' 'long long (double)'
|   |-UsingShadowDecl 0x7fd2ff927040 <col:9> col:9 implicit Function 0x7fd3008b9c80 'llrint' 'long long (float) noexcept'
|   |-UsingShadowDecl 0x7fd2ff927088 <col:9> col:9 implicit Function 0x7fd3008b9fa0 'llrint' 'long long (long double) noexcept'
|   |-UsingShadowDecl 0x7fd2ff9270d0 <col:9> col:9 implicit FunctionTemplate 0x7fd3008ba770 'llrint'
|   |-UsingDecl 0x7fd2ff927120 <line:424:1, col:9> col:9 ::llrintf
|   |-UsingShadowDecl 0x7fd2ff927170 <col:9> col:9 implicit Function 0x7fd300802488 'llrintf' 'long long (float)'
|   |-UsingDecl 0x7fd2ff9271c0 <line:425:1, col:9> col:9 ::llround
|   |-UsingShadowDecl 0x7fd2ff927210 <col:9> col:9 implicit Function 0x7fd300802c48 'llround' 'long long (double)'
|   |-UsingShadowDecl 0x7fd2ff927258 <col:9> col:9 implicit Function 0x7fd3008bb048 'llround' 'long long (float) noexcept'
|   |-UsingShadowDecl 0x7fd2ff9272a0 <col:9> col:9 implicit Function 0x7fd3008bb338 'llround' 'long long (long double) noexcept'
|   |-UsingShadowDecl 0x7fd2ff9272e8 <col:9> col:9 implicit FunctionTemplate 0x7fd3008bb9f0 'llround'
|   |-UsingDecl 0x7fd2ff927338 <line:426:1, col:9> col:9 ::llroundf
|   |-UsingShadowDecl 0x7fd2ff927388 <col:9> col:9 implicit Function 0x7fd300802aa8 'llroundf' 'long long (float)'
|   |-UsingDecl 0x7fd2ff9273d8 <line:427:1, col:9> col:9 ::log1p
|   |-UsingShadowDecl 0x7fd2ff927428 <col:9> col:9 implicit Function 0x7fd2ff9083f0 'log1p' 'double (double)'
|   |-UsingShadowDecl 0x7fd2ff927470 <col:9> col:9 implicit Function 0x7fd3008bc010 'log1p' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fd2ff9274b8 <col:9> col:9 implicit Function 0x7fd3008bc300 'log1p' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fd2ff927500 <col:9> col:9 implicit FunctionTemplate 0x7fd3008bc9b0 'log1p'
|   |-UsingDecl 0x7fd2ff927550 <line:428:1, col:9> col:9 ::log1pf
|   |-UsingShadowDecl 0x7fd2ff9275a0 <col:9> col:9 implicit Function 0x7fd2ff908250 'log1pf' 'float (float)'
|   |-UsingDecl 0x7fd2ff9275f0 <line:429:1, col:9> col:9 ::log2
|   |-UsingShadowDecl 0x7fd2ff927640 <col:9> col:9 implicit Function 0x7fd2ff907f10 'log2' 'double (double)'
|   |-UsingShadowDecl 0x7fd2ff927688 <col:9> col:9 implicit Function 0x7fd3008bcfd0 'log2' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fd2ff9276d0 <col:9> col:9 implicit Function 0x7fd3008bd2c0 'log2' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fd2ff927718 <col:9> col:9 implicit FunctionTemplate 0x7fd3008bd970 'log2'
|   |-UsingDecl 0x7fd2ff927768 <line:430:1, col:9> col:9 ::log2f
|   |-UsingShadowDecl 0x7fd2ff9277b8 <col:9> col:9 implicit Function 0x7fd2ff907d70 'log2f' 'float (float)'
|   |-UsingDecl 0x7fd2ff927808 <line:431:1, col:9> col:9 ::logb
|   |-UsingShadowDecl 0x7fd2ff927858 <col:9> col:9 implicit Function 0x7fd2ff9098f0 'logb' 'double (double)'
|   |-UsingShadowDecl 0x7fd2ff9278a0 <col:9> col:9 implicit Function 0x7fd3008bdf90 'logb' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fd2ff9278e8 <col:9> col:9 implicit Function 0x7fd3008be280 'logb' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fd2ff927930 <col:9> col:9 implicit FunctionTemplate 0x7fd3008be930 'logb'
|   |-UsingDecl 0x7fd2ff927980 <line:432:1, col:9> col:9 ::logbf
|   |-UsingShadowDecl 0x7fd2ff9279d0 <col:9> col:9 implicit Function 0x7fd2ff908730 'logbf' 'float (float)'
|   |-UsingDecl 0x7fd2ff927a20 <line:433:1, col:9> col:9 ::lrint
|   |-UsingShadowDecl 0x7fd2ff927a70 <col:9> col:9 implicit Function 0x7fd300801688 'lrint' 'long (double)'
|   |-UsingShadowDecl 0x7fd2ff927ab8 <col:9> col:9 implicit Function 0x7fd2ff911d50 'lrint' 'long (float) noexcept'
|   |-UsingShadowDecl 0x7fd2ff927b00 <col:9> col:9 implicit Function 0x7fd2ff912070 'lrint' 'long (long double) noexcept'
|   |-UsingShadowDecl 0x7fd2ff927b48 <col:9> col:9 implicit FunctionTemplate 0x7fd2ff912840 'lrint'
|   |-UsingDecl 0x7fd2ff927b98 <line:434:1, col:9> col:9 ::lrintf
|   |-UsingShadowDecl 0x7fd2ff927be8 <col:9> col:9 implicit Function 0x7fd300801468 'lrintf' 'long (float)'
|   |-UsingDecl 0x7fd2ff927c38 <line:435:1, col:9> col:9 ::lround
|   |-UsingShadowDecl 0x7fd2ff927c88 <col:9> col:9 implicit Function 0x7fd300802108 'lround' 'long (double)'
|   |-UsingShadowDecl 0x7fd2ff927cd0 <col:9> col:9 implicit Function 0x7fd2ff9130f8 'lround' 'long (float) noexcept'
|   |-UsingShadowDecl 0x7fd2ff927d18 <col:9> col:9 implicit Function 0x7fd2ff9133e8 'lround' 'long (long double) noexcept'
|   |-UsingShadowDecl 0x7fd2ff927d60 <col:9> col:9 implicit FunctionTemplate 0x7fd2ff913aa0 'lround'
|   |-UsingDecl 0x7fd2ff927db0 <line:436:1, col:9> col:9 ::lroundf
|   |-UsingShadowDecl 0x7fd2ff927e00 <col:9> col:9 implicit Function 0x7fd300801f68 'lroundf' 'long (float)'
|   |-UsingDecl 0x7fd2ff927e50 <line:438:1, col:9> col:9 ::nan
|   |-UsingShadowDecl 0x7fd2ff927ea0 <col:9> col:9 implicit Function 0x7fd3008052e8 'nan' 'double (const char *)'
|   |-UsingDecl 0x7fd2ff927ef0 <line:439:1, col:9> col:9 ::nanf
|   |-UsingShadowDecl 0x7fd2ff927f40 <col:9> col:9 implicit Function 0x7fd3008050c8 'nanf' 'float (const char *)'
|   |-UsingDecl 0x7fd2ff927f90 <line:441:1, col:9> col:9 ::nearbyint
|   |-UsingShadowDecl 0x7fd2ff927fe0 <col:9> col:9 implicit Function 0x7fd300800c08 'nearbyint' 'double (double)'
|   |-UsingShadowDecl 0x7fd2ff928028 <col:9> col:9 implicit Function 0x7fd2ff9140c0 'nearbyint' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fd2ff928070 <col:9> col:9 implicit Function 0x7fd2ff9143b0 'nearbyint' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fd2ff9280b8 <col:9> col:9 implicit FunctionTemplate 0x7fd2ff914a60 'nearbyint'
|   |-UsingDecl 0x7fd2ff928108 <line:442:1, col:9> col:9 ::nearbyintf
|   |-UsingShadowDecl 0x7fd2ff928158 <col:9> col:9 implicit Function 0x7fd300800a68 'nearbyintf' 'float (float)'
|   |-UsingDecl 0x7fd2ff9281a8 <line:443:1, col:9> col:9 ::nextafter
|   |-UsingShadowDecl 0x7fd2ff9281f8 <col:9> col:9 implicit Function 0x7fd300805990 'nextafter' 'double (double, double)'
|   |-UsingShadowDecl 0x7fd2ff928240 <col:9> col:9 implicit Function 0x7fd2ff915100 'nextafter' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7fd2ff928288 <col:9> col:9 implicit Function 0x7fd2ff9154c0 'nextafter' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fd2ff9282d0 <col:9> col:9 implicit FunctionTemplate 0x7fd2ff915f60 'nextafter'
|   |-UsingDecl 0x7fd2ff928320 <line:444:1, col:9> col:9 ::nextafterf
|   |-UsingShadowDecl 0x7fd2ff928370 <col:9> col:9 implicit Function 0x7fd300805768 'nextafterf' 'float (float, float)'
|   |-UsingDecl 0x7fd2ff9283c0 <line:445:1, col:9> col:9 ::nexttoward
|   |-UsingShadowDecl 0x7fd2ff928410 <col:9> col:9 implicit Function 0x7fd300805e28 'nexttoward' 'double (double, long double)'
|   |-UsingShadowDecl 0x7fd2ff928458 <col:9> col:9 implicit Function 0x7fd2ff916918 'nexttoward' 'float (float, long double) noexcept'
|   |-UsingShadowDecl 0x7fd2ff9284a0 <col:9> col:9 implicit Function 0x7fd2ff916d00 'nexttoward' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fd2ff9284e8 <col:9> col:9 implicit FunctionTemplate 0x7fd2ff9174d0 'nexttoward'
|   |-UsingDecl 0x7fd2ff928538 <line:446:1, col:9> col:9 ::nexttowardf
|   |-UsingShadowDecl 0x7fd2ff928588 <col:9> col:9 implicit Function 0x7fd3008080d8 'nexttowardf' 'float (float, long double)'
|   |-UsingDecl 0x7fd2ff9285d8 <line:447:1, col:9> col:9 ::remainder
|   |-UsingShadowDecl 0x7fd2ff928628 <col:9> col:9 implicit Function 0x7fd300803e00 'remainder' 'double (double, double)'
|   |-UsingShadowDecl 0x7fd2ff928670 <col:9> col:9 implicit Function 0x7fd2ff917be8 'remainder' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7fd2ff9286b8 <col:9> col:9 implicit Function 0x7fd2ff917fa8 'remainder' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fd2ff928700 <col:9> col:9 implicit FunctionTemplate 0x7fd2ff918a50 'remainder'
|   |-UsingDecl 0x7fd2ff928750 <line:448:1, col:9> col:9 ::remainderf
|   |-UsingShadowDecl 0x7fd2ff9287a0 <col:9> col:9 implicit Function 0x7fd300803bd8 'remainderf' 'float (float, float)'
|   |-UsingDecl 0x7fd2ff9287f0 <line:449:1, col:9> col:9 ::remquo
|   |-UsingShadowDecl 0x7fd2ff928840 <col:9> col:9 implicit Function 0x7fd3008045c8 'remquo' 'double (double, double, int *)'
|   |-UsingShadowDecl 0x7fd2ff928888 <col:9> col:9 implicit Function 0x7fd2ff9194d0 'remquo' 'float (float, float, int *) noexcept'
|   |-UsingShadowDecl 0x7fd2ff9288d0 <col:9> col:9 implicit Function 0x7fd2ff9199e0 'remquo' 'long double (long double, long double, int *) noexcept'
|   |-UsingShadowDecl 0x7fd2ff928918 <col:9> col:9 implicit FunctionTemplate 0x7fd2ff91a5e0 'remquo'
|   |-UsingDecl 0x7fd2ff928968 <line:450:1, col:9> col:9 ::remquof
|   |-UsingShadowDecl 0x7fd2ff9289b8 <col:9> col:9 implicit Function 0x7fd300804328 'remquof' 'float (float, float, int *)'
|   |-UsingDecl 0x7fd2ff928a08 <line:451:1, col:9> col:9 ::rint
|   |-UsingShadowDecl 0x7fd2ff928a58 <col:9> col:9 implicit Function 0x7fd3008010f0 'rint' 'double (double)'
|   |-UsingShadowDecl 0x7fd2ff928aa0 <col:9> col:9 implicit Function 0x7fd2ff91af48 'rint' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fd2ff928ae8 <col:9> col:9 implicit Function 0x7fd2ff91b238 'rint' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fd2ff928b30 <col:9> col:9 implicit FunctionTemplate 0x7fd2ff91b8f0 'rint'
|   |-UsingDecl 0x7fd2ff928b80 <line:452:1, col:9> col:9 ::rintf
|   |-UsingShadowDecl 0x7fd2ff928bd0 <col:9> col:9 implicit Function 0x7fd300800f48 'rintf' 'float (float)'
|   |-UsingDecl 0x7fd2ff928c20 <line:453:1, col:9> col:9 ::round
|   |-UsingShadowDecl 0x7fd2ff928c70 <col:9> col:9 implicit Function 0x7fd300801c28 'round' 'double (double)'
|   |-UsingShadowDecl 0x7fd2ff928cb8 <col:9> col:9 implicit Function 0x7fd2ff91bf10 'round' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fd2ff928d00 <col:9> col:9 implicit Function 0x7fd2ff91c200 'round' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fd2ff928d48 <col:9> col:9 implicit FunctionTemplate 0x7fd2ff91c8b0 'round'
|   |-UsingDecl 0x7fd2ff928d98 <line:454:1, col:9> col:9 ::roundf
|   |-UsingShadowDecl 0x7fd2ff928de8 <col:9> col:9 implicit Function 0x7fd300801a88 'roundf' 'float (float)'
|   |-UsingDecl 0x7fd2ff928e38 <line:455:1, col:9> col:9 ::scalbln
|   |-UsingShadowDecl 0x7fd2ff928e88 <col:9> col:9 implicit Function 0x7fd2ff90e458 'scalbln' 'double (double, long)'
|   |-UsingShadowDecl 0x7fd2ff928ed0 <col:9> col:9 implicit Function 0x7fd2ff91cf50 'scalbln' 'float (float, long) noexcept'
|   |-UsingShadowDecl 0x7fd2ff928f18 <col:9> col:9 implicit Function 0x7fd2ff91d340 'scalbln' 'long double (long double, long) noexcept'
|   |-UsingShadowDecl 0x7fd2ff928f60 <col:9> col:9 implicit FunctionTemplate 0x7fd2ff91db70 'scalbln'
|   |-UsingDecl 0x7fd2ff928fb0 <line:456:1, col:9> col:9 ::scalblnf
|   |-UsingShadowDecl 0x7fd2ff929000 <col:9> col:9 implicit Function 0x7fd2ff90e1a8 'scalblnf' 'float (float, long)'
|   |-UsingDecl 0x7fd2ff929050 <line:457:1, col:9> col:9 ::scalbn
|   |-UsingShadowDecl 0x7fd2ff9290a0 <col:9> col:9 implicit Function 0x7fd2ff90dd10 'scalbn' 'double (double, int)'
|   |-UsingShadowDecl 0x7fd2ff9290e8 <col:9> col:9 implicit Function 0x7fd2ff91e288 'scalbn' 'float (float, int) noexcept'
|   |-UsingShadowDecl 0x7fd2ff929130 <col:9> col:9 implicit Function 0x7fd2ff91e648 'scalbn' 'long double (long double, int) noexcept'
|   |-UsingShadowDecl 0x7fd2ff929178 <col:9> col:9 implicit FunctionTemplate 0x7fd2ff91ede0 'scalbn'
|   |-UsingDecl 0x7fd2ff9291c8 <line:458:1, col:9> col:9 ::scalbnf
|   |-UsingShadowDecl 0x7fd2ff929218 <col:9> col:9 implicit Function 0x7fd2ff90dae8 'scalbnf' 'float (float, int)'
|   |-UsingDecl 0x7fd2ff929268 <line:459:1, col:9> col:9 ::tgamma
|   |-UsingShadowDecl 0x7fd2ff9292b8 <col:9> col:9 implicit Function 0x7fd2ff911560 'tgamma' 'double (double)'
|   |-UsingShadowDecl 0x7fd2ff929300 <col:9> col:9 implicit Function 0x7fd2ff91f450 'tgamma' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fd2ff929348 <col:9> col:9 implicit Function 0x7fd2ff91f740 'tgamma' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fd2ff929390 <col:9> col:9 implicit FunctionTemplate 0x7fd2ff91fdf0 'tgamma'
|   |-UsingDecl 0x7fd2ff9293e0 <line:460:1, col:9> col:9 ::tgammaf
|   |-UsingShadowDecl 0x7fd2ff929430 <col:9> col:9 implicit Function 0x7fd2ff9113c0 'tgammaf' 'float (float)'
|   |-UsingDecl 0x7fd2ff929480 <line:461:1, col:9> col:9 ::trunc
|   |-UsingShadowDecl 0x7fd2ff9294d0 <col:9> col:9 implicit Function 0x7fd3008031a0 'trunc' 'double (double)'
|   |-UsingShadowDecl 0x7fd2ff929518 <col:9> col:9 implicit Function 0x7fd2ff920410 'trunc' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fd2ff929560 <col:9> col:9 implicit Function 0x7fd2ff920700 'trunc' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fd2ff9295a8 <col:9> col:9 implicit FunctionTemplate 0x7fd2ff920db0 'trunc'
|   |-UsingDecl 0x7fd2ff9295f8 <line:462:1, col:9> col:9 ::truncf
|   |-UsingShadowDecl 0x7fd2ff929648 <col:9> col:9 implicit Function 0x7fd300803000 'truncf' 'float (float)'
|   |-UsingDecl 0x7fd2ff929698 <line:464:1, col:9> col:9 ::acosl
|   |-UsingShadowDecl 0x7fd2ff9296e8 <col:9> col:9 implicit Function 0x7fd2ff900c78 'acosl' 'long double (long double)'
|   |-UsingDecl 0x7fd2ff929738 <line:465:1, col:9> col:9 ::asinl
|   |-UsingShadowDecl 0x7fd2ff929788 <col:9> col:9 implicit Function 0x7fd2ff9011a0 'asinl' 'long double (long double)'
|   |-UsingDecl 0x7fd2ff92b800 <line:466:1, col:9> col:9 ::atanl
|   |-UsingShadowDecl 0x7fd2ff92b850 <col:9> col:9 implicit Function 0x7fd2ff901680 'atanl' 'long double (long double)'
|   |-UsingDecl 0x7fd2ff92b8a0 <line:467:1, col:9> col:9 ::atan2l
|   |-UsingShadowDecl 0x7fd2ff92b8f0 <col:9> col:9 implicit Function 0x7fd2ff901e48 'atan2l' 'long double (long double, long double)'
|   |-UsingDecl 0x7fd2ff92b940 <line:468:1, col:9> col:9 ::ceill
|   |-UsingShadowDecl 0x7fd2ff92b990 <col:9> col:9 implicit Function 0x7fd3008003e8 'ceill' 'long double (long double)'
|   |-UsingDecl 0x7fd2ff92b9e0 <line:469:1, col:9> col:9 ::cosl
|   |-UsingShadowDecl 0x7fd2ff92ba30 <col:9> col:9 implicit Function 0x7fd2ff902b70 'cosl' 'long double (long double)'
|   |-UsingDecl 0x7fd2ff92ba80 <line:470:1, col:9> col:9 ::coshl
|   |-UsingShadowDecl 0x7fd2ff92bad0 <col:9> col:9 implicit Function 0x7fd2ff9058f0 'coshl' 'long double (long double)'
|   |-UsingDecl 0x7fd2ff92bb20 <line:471:1, col:9> col:9 ::expl
|   |-UsingShadowDecl 0x7fd2ff92bb70 <col:9> col:9 implicit Function 0x7fd2ff906800 'expl' 'long double (long double)'
|   |-UsingDecl 0x7fd2ff92bbc0 <line:472:1, col:9> col:9 ::fabsl
|   |-UsingShadowDecl 0x7fd2ff92bc10 <col:9> col:9 implicit Function 0x7fd2ff90ec30 'fabsl' 'long double (long double)'
|   |-UsingDecl 0x7fd2ff92bc60 <line:473:1, col:9> col:9 ::floorl
|   |-UsingShadowDecl 0x7fd2ff92bcb0 <col:9> col:9 implicit Function 0x7fd3008008c8 'floorl' 'long double (long double)'
|   |-UsingDecl 0x7fd2ff92bd00 <line:474:1, col:9> col:9 ::fmodl
|   |-UsingShadowDecl 0x7fd2ff92bd50 <col:9> col:9 implicit Function 0x7fd3008039b0 'fmodl' 'long double (long double, long double)'
|   |-UsingDecl 0x7fd2ff92bda0 <line:475:1, col:9> col:9 ::frexpl
|   |-UsingShadowDecl 0x7fd2ff92bdf0 <col:9> col:9 implicit Function 0x7fd2ff90c2c8 'frexpl' 'long double (long double, int *)'
|   |-UsingDecl 0x7fd2ff92be40 <line:476:1, col:9> col:9 ::ldexpl
|   |-UsingShadowDecl 0x7fd2ff92be90 <col:9> col:9 implicit Function 0x7fd2ff90bab8 'ldexpl' 'long double (long double, int)'
|   |-UsingDecl 0x7fd2ff92bee0 <line:477:1, col:9> col:9 ::logl
|   |-UsingShadowDecl 0x7fd2ff92bf30 <col:9> col:9 implicit Function 0x7fd2ff9076a0 'logl' 'long double (long double)'
|   |-UsingDecl 0x7fd2ff92bf80 <line:478:1, col:9> col:9 ::log10l
|   |-UsingShadowDecl 0x7fd2ff92bfd0 <col:9> col:9 implicit Function 0x7fd2ff907bd0 'log10l' 'long double (long double)'
|   |-UsingDecl 0x7fd2ff92c020 <line:479:1, col:9> col:9 ::modfl
|   |-UsingShadowDecl 0x7fd2ff92c070 <col:9> col:9 implicit Function 0x7fd2ff90a298 'modfl' 'long double (long double, long double *)'
|   |-UsingDecl 0x7fd2ff92c0c0 <line:480:1, col:9> col:9 ::powl
|   |-UsingShadowDecl 0x7fd2ff92c110 <col:9> col:9 implicit Function 0x7fd2ff90fe78 'powl' 'long double (long double, long double)'
|   |-UsingDecl 0x7fd2ff92c160 <line:481:1, col:9> col:9 ::sinl
|   |-UsingShadowDecl 0x7fd2ff92c1b0 <col:9> col:9 implicit Function 0x7fd2ff903050 'sinl' 'long double (long double)'
|   |-UsingDecl 0x7fd2ff92c200 <line:482:1, col:9> col:9 ::sinhl
|   |-UsingShadowDecl 0x7fd2ff92c250 <col:9> col:9 implicit Function 0x7fd2ff905dd0 'sinhl' 'long double (long double)'
|   |-UsingDecl 0x7fd2ff92c2a0 <line:483:1, col:9> col:9 ::sqrtl
|   |-UsingShadowDecl 0x7fd2ff92c2f0 <col:9> col:9 implicit Function 0x7fd2ff910360 'sqrtl' 'long double (long double)'
|   |-UsingDecl 0x7fd2ff92c340 <line:484:1, col:9> col:9 ::tanl
|   |-UsingShadowDecl 0x7fd2ff92c390 <col:9> col:9 implicit Function 0x7fd2ff903530 'tanl' 'long double (long double)'
|   |-UsingDecl 0x7fd2ff92c3e0 <line:486:1, col:9> col:9 ::tanhl
|   |-UsingShadowDecl 0x7fd2ff92c430 <col:9> col:9 implicit Function 0x7fd2ff9062b0 'tanhl' 'long double (long double)'
|   |-UsingDecl 0x7fd2ff92c480 <line:487:1, col:9> col:9 ::acoshl
|   |-UsingShadowDecl 0x7fd2ff92c4d0 <col:9> col:9 implicit Function 0x7fd2ff904230 'acoshl' 'long double (long double)'
|   |-UsingDecl 0x7fd2ff92c520 <line:488:1, col:9> col:9 ::asinhl
|   |-UsingShadowDecl 0x7fd2ff92c570 <col:9> col:9 implicit Function 0x7fd2ff904710 'asinhl' 'long double (long double)'
|   |-UsingDecl 0x7fd2ff92c5c0 <line:489:1, col:9> col:9 ::atanhl
|   |-UsingShadowDecl 0x7fd2ff92c610 <col:9> col:9 implicit Function 0x7fd2ff904bf0 'atanhl' 'long double (long double)'
|   |-UsingDecl 0x7fd2ff92c660 <line:490:1, col:9> col:9 ::cbrtl
|   |-UsingShadowDecl 0x7fd2ff92c6b0 <col:9> col:9 implicit Function 0x7fd2ff90f110 'cbrtl' 'long double (long double)'
|   |-UsingDecl 0x7fd2ff92c700 <line:492:1, col:9> col:9 ::copysignl
|   |-UsingShadowDecl 0x7fd2ff92c750 <col:9> col:9 implicit Function 0x7fd300804e90 'copysignl' 'long double (long double, long double)'
|   |-UsingDecl 0x7fd2ff92c7a0 <line:494:1, col:9> col:9 ::erfl
|   |-UsingShadowDecl 0x7fd2ff92c7f0 <col:9> col:9 implicit Function 0x7fd2ff910890 'erfl' 'long double (long double)'
|   |-UsingDecl 0x7fd2ff92c840 <line:495:1, col:9> col:9 ::erfcl
|   |-UsingShadowDecl 0x7fd2ff92c890 <col:9> col:9 implicit Function 0x7fd2ff910d70 'erfcl' 'long double (long double)'
|   |-UsingDecl 0x7fd2ff92c8e0 <line:496:1, col:9> col:9 ::exp2l
|   |-UsingShadowDecl 0x7fd2ff92c930 <col:9> col:9 implicit Function 0x7fd2ff906ce0 'exp2l' 'long double (long double)'
|   |-UsingDecl 0x7fd2ff92c980 <line:497:1, col:9> col:9 ::expm1l
|   |-UsingShadowDecl 0x7fd2ff92c9d0 <col:9> col:9 implicit Function 0x7fd2ff9071c0 'expm1l' 'long double (long double)'
|   |-UsingDecl 0x7fd2ff92ca20 <line:498:1, col:9> col:9 ::fdiml
|   |-UsingShadowDecl 0x7fd2ff92ca70 <col:9> col:9 implicit Function 0x7fd3008089b8 'fdiml' 'long double (long double, long double)'
|   |-UsingDecl 0x7fd2ff92cac0 <line:499:1, col:9> col:9 ::fmal
|   |-UsingShadowDecl 0x7fd2ff92cb10 <col:9> col:9 implicit Function 0x7fd2ff90c888 'fmal' 'long double (long double, long double, long double)'
|   |-UsingDecl 0x7fd2ff92cb60 <line:500:1, col:9> col:9 ::fmaxl
|   |-UsingShadowDecl 0x7fd2ff92cbb0 <col:9> col:9 implicit Function 0x7fd30080c038 'fmaxl' 'long double (long double, long double)'
|   |-UsingDecl 0x7fd2ff92cc00 <line:501:1, col:9> col:9 ::fminl
|   |-UsingShadowDecl 0x7fd2ff92cc50 <col:9> col:9 implicit Function 0x7fd30080c6b0 'fminl' 'long double (long double, long double)'
|   |-UsingDecl 0x7fd2ff92cca0 <line:502:1, col:9> col:9 ::hypotl
|   |-UsingShadowDecl 0x7fd2ff92ccf0 <col:9> col:9 implicit Function 0x7fd2ff90f800 'hypotl' 'long double (long double, long double)'
|   |-UsingDecl 0x7fd2ff92cd40 <line:503:1, col:9> col:9 ::ilogbl
|   |-UsingShadowDecl 0x7fd2ff92cd90 <col:9> col:9 implicit Function 0x7fd2ff90d890 'ilogbl' 'int (long double)'
|   |-UsingDecl 0x7fd2ff92cde0 <line:504:1, col:9> col:9 ::lgammal
|   |-UsingShadowDecl 0x7fd2ff92ce30 <col:9> col:9 implicit Function 0x7fd2ff911230 'lgammal' 'long double (long double)'
|   |-UsingDecl 0x7fd2ff92ce80 <line:505:1, col:9> col:9 ::llrintl
|   |-UsingShadowDecl 0x7fd2ff92ced0 <col:9> col:9 implicit Function 0x7fd3008028c8 'llrintl' 'long long (long double)'
|   |-UsingDecl 0x7fd2ff92cf20 <line:506:1, col:9> col:9 ::llroundl
|   |-UsingShadowDecl 0x7fd2ff92cf70 <col:9> col:9 implicit Function 0x7fd300802de8 'llroundl' 'long long (long double)'
|   |-UsingDecl 0x7fd2ff92cfc0 <line:507:1, col:9> col:9 ::log1pl
|   |-UsingShadowDecl 0x7fd2ff92d010 <col:9> col:9 implicit Function 0x7fd2ff908590 'log1pl' 'long double (long double)'
|   |-UsingDecl 0x7fd2ff92d060 <line:508:1, col:9> col:9 ::log2l
|   |-UsingShadowDecl 0x7fd2ff92d0b0 <col:9> col:9 implicit Function 0x7fd2ff9080b0 'log2l' 'long double (long double)'
|   |-UsingDecl 0x7fd2ff92d100 <line:509:1, col:9> col:9 ::logbl
|   |-UsingShadowDecl 0x7fd2ff92d150 <col:9> col:9 implicit Function 0x7fd2ff909a90 'logbl' 'long double (long double)'
|   |-UsingDecl 0x7fd2ff92d1a0 <line:510:1, col:9> col:9 ::lrintl
|   |-UsingShadowDecl 0x7fd2ff92d1f0 <col:9> col:9 implicit Function 0x7fd3008018a8 'lrintl' 'long (long double)'
|   |-UsingDecl 0x7fd2ff92d240 <line:511:1, col:9> col:9 ::lroundl
|   |-UsingShadowDecl 0x7fd2ff92d290 <col:9> col:9 implicit Function 0x7fd3008022a8 'lroundl' 'long (long double)'
|   |-UsingDecl 0x7fd2ff92d2e0 <line:512:1, col:9> col:9 ::nanl
|   |-UsingShadowDecl 0x7fd2ff92d330 <col:9> col:9 implicit Function 0x7fd300805508 'nanl' 'long double (const char *)'
|   |-UsingDecl 0x7fd2ff92d380 <line:513:1, col:9> col:9 ::nearbyintl
|   |-UsingShadowDecl 0x7fd2ff92d3d0 <col:9> col:9 implicit Function 0x7fd300800da8 'nearbyintl' 'long double (long double)'
|   |-UsingDecl 0x7fd2ff92d420 <line:514:1, col:9> col:9 ::nextafterl
|   |-UsingShadowDecl 0x7fd2ff92d470 <col:9> col:9 implicit Function 0x7fd300805bb8 'nextafterl' 'long double (long double, long double)'
|   |-UsingDecl 0x7fd2ff92d4c0 <line:515:1, col:9> col:9 ::nexttowardl
|   |-UsingShadowDecl 0x7fd2ff92d510 <col:9> col:9 implicit Function 0x7fd300808340 'nexttowardl' 'long double (long double, long double)'
|   |-UsingDecl 0x7fd2ff92d560 <line:516:1, col:9> col:9 ::remainderl
|   |-UsingShadowDecl 0x7fd2ff92d5b0 <col:9> col:9 implicit Function 0x7fd300804038 'remainderl' 'long double (long double, long double)'
|   |-UsingDecl 0x7fd2ff92d600 <line:517:1, col:9> col:9 ::remquol
|   |-UsingShadowDecl 0x7fd2ff92d650 <col:9> col:9 implicit Function 0x7fd300804868 'remquol' 'long double (long double, long double, int *)'
|   |-UsingDecl 0x7fd2ff92d6a0 <line:518:1, col:9> col:9 ::rintl
|   |-UsingShadowDecl 0x7fd2ff92d6f0 <col:9> col:9 implicit Function 0x7fd300801290 'rintl' 'long double (long double)'
|   |-UsingDecl 0x7fd2ff92d740 <line:519:1, col:9> col:9 ::roundl
|   |-UsingShadowDecl 0x7fd2ff92d790 <col:9> col:9 implicit Function 0x7fd300801dc8 'roundl' 'long double (long double)'
|   |-UsingDecl 0x7fd2ff92d7e0 <line:520:1, col:9> col:9 ::scalblnl
|   |-UsingShadowDecl 0x7fd2ff92d830 <col:9> col:9 implicit Function 0x7fd2ff90e708 'scalblnl' 'long double (long double, long)'
|   |-UsingDecl 0x7fd2ff92d880 <line:521:1, col:9> col:9 ::scalbnl
|   |-UsingShadowDecl 0x7fd2ff92d8d0 <col:9> col:9 implicit Function 0x7fd2ff90df38 'scalbnl' 'long double (long double, int)'
|   |-UsingDecl 0x7fd2ff92d920 <line:522:1, col:9> col:9 ::tgammal
|   |-UsingShadowDecl 0x7fd2ff92d970 <col:9> col:9 implicit Function 0x7fd2ff911700 'tgammal' 'long double (long double)'
|   |-UsingDecl 0x7fd2ff92d9c0 <line:523:1, col:9> col:9 ::truncl
|   |-UsingShadowDecl 0x7fd2ff92da10 <col:9> col:9 implicit Function 0x7fd300803340 'truncl' 'long double (long double)'
|   |-FunctionTemplateDecl 0x7fd2ff92dee0 <line:549:1, line:559:1> line:552:1 __libcpp_isnan
|   | |-TemplateTypeParmDecl 0x7fd2ff92da58 <line:549:11, col:17> col:17 referenced class depth 0 index 0 _A1
|   | `-FunctionDecl 0x7fd2ff92de48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:559:1> line:552:1 constexpr __libcpp_isnan 'typename enable_if<is_floating_point<_A1>::value, _Bool>::type (_A1) noexcept'
|   |   |-ParmVarDecl 0x7fd2ff92dd70 <col:16, col:20> col:20 referenced __lcpp_x '_A1'
|   |   |-CompoundStmt 0x7fd2ff92e168 <line:553:1, line:559:1>
|   |   | `-ReturnStmt 0x7fd2ff92e150 <line:555:5, col:36>
|   |   |   `-CallExpr 0x7fd2ff92e120 <col:12, col:36> '<dependent type>'
|   |   |     |-DeclRefExpr 0x7fd2ff92e0d0 <col:12> '<builtin fn type>' Function 0x7fd2ff92dfe0 '__builtin_isnan' 'int (...) noexcept'
|   |   |     `-DeclRefExpr 0x7fd2ff92e0f8 <col:28> '_A1' lvalue ParmVar 0x7fd2ff92dd70 '__lcpp_x' '_A1'
|   |   |-AlwaysInlineAttr 0x7fd2ff92df38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
|   |   `-VisibilityAttr 0x7fd2ff92df80 <col:48, col:71> Hidden
|   |-FunctionTemplateDecl 0x7fd2ff92e700 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:561:1, line:567:1> line:564:1 __libcpp_isnan
|   | |-TemplateTypeParmDecl 0x7fd2ff92e188 <line:561:11, col:17> col:17 referenced class depth 0 index 0 _A1
|   | `-FunctionDecl 0x7fd2ff92e668 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:567:1> line:564:1 constexpr __libcpp_isnan 'typename enable_if<!is_floating_point<_A1>::value, _Bool>::type (_A1) noexcept'
|   |   |-ParmVarDecl 0x7fd2ff92e550 <col:16, col:20> col:20 referenced __lcpp_x '_A1'
|   |   |-CompoundStmt 0x7fd2ff92e880 <line:565:1, line:567:1>
|   |   | `-ReturnStmt 0x7fd2ff92e868 <line:566:5, col:26>
|   |   |   `-CallExpr 0x7fd2ff92e838 <col:12, col:26> '<dependent type>'
|   |   |     |-UnresolvedLookupExpr 0x7fd2ff92e7b0 <col:12> '<overloaded function type>' lvalue (ADL) = 'isnan' 0x7fd2ff921848 0x7fd2ff921800
|   |   |     `-DeclRefExpr 0x7fd2ff92e810 <col:18> '_A1' lvalue ParmVar 0x7fd2ff92e550 '__lcpp_x' '_A1'
|   |   |-AlwaysInlineAttr 0x7fd2ff92e758 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
|   |   `-VisibilityAttr 0x7fd2ff92e7a0 <col:48, col:71> Hidden
|   |-FunctionTemplateDecl 0x7fd2ff92ed20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:569:1, line:579:1> line:572:1 __libcpp_isinf
|   | |-TemplateTypeParmDecl 0x7fd2ff92e8a0 <line:569:11, col:17> col:17 referenced class depth 0 index 0 _A1
|   | `-FunctionDecl 0x7fd2ff92ec88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:579:1> line:572:1 constexpr __libcpp_isinf 'typename enable_if<is_floating_point<_A1>::value, _Bool>::type (_A1) noexcept'
|   |   |-ParmVarDecl 0x7fd2ff92ebb0 <col:16, col:20> col:20 referenced __lcpp_x '_A1'
|   |   |-CompoundStmt 0x7fd2ff92efa8 <line:573:1, line:579:1>
|   |   | `-ReturnStmt 0x7fd2ff92ef90 <line:575:5, col:36>
|   |   |   `-CallExpr 0x7fd2ff92ef60 <col:12, col:36> '<dependent type>'
|   |   |     |-DeclRefExpr 0x7fd2ff92ef10 <col:12> '<builtin fn type>' Function 0x7fd2ff92ee20 '__builtin_isinf' 'int (...) noexcept'
|   |   |     `-DeclRefExpr 0x7fd2ff92ef38 <col:28> '_A1' lvalue ParmVar 0x7fd2ff92ebb0 '__lcpp_x' '_A1'
|   |   |-AlwaysInlineAttr 0x7fd2ff92ed78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
|   |   `-VisibilityAttr 0x7fd2ff92edc0 <col:48, col:71> Hidden
|   |-FunctionTemplateDecl 0x7fd2ff92f460 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:581:1, line:587:1> line:584:1 __libcpp_isinf
|   | |-TemplateTypeParmDecl 0x7fd2ff92efc8 <line:581:11, col:17> col:17 referenced class depth 0 index 0 _A1
|   | `-FunctionDecl 0x7fd2ff92f3c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:587:1> line:584:1 constexpr __libcpp_isinf 'typename enable_if<!is_floating_point<_A1>::value, _Bool>::type (_A1) noexcept'
|   |   |-ParmVarDecl 0x7fd2ff92f2f0 <col:16, col:20> col:20 referenced __lcpp_x '_A1'
|   |   |-CompoundStmt 0x7fd2ff92f5e0 <line:585:1, line:587:1>
|   |   | `-ReturnStmt 0x7fd2ff92f5c8 <line:586:5, col:26>
|   |   |   `-CallExpr 0x7fd2ff92f598 <col:12, col:26> '<dependent type>'
|   |   |     |-UnresolvedLookupExpr 0x7fd2ff92f510 <col:12> '<overloaded function type>' lvalue (ADL) = 'isinf' 0x7fd2ff921760 0x7fd2ff921718
|   |   |     `-DeclRefExpr 0x7fd2ff92f570 <col:18> '_A1' lvalue ParmVar 0x7fd2ff92f2f0 '__lcpp_x' '_A1'
|   |   |-AlwaysInlineAttr 0x7fd2ff92f4b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
|   |   `-VisibilityAttr 0x7fd2ff92f500 <col:48, col:71> Hidden
|   |-FunctionTemplateDecl 0x7fd2ff937aa0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:589:1, line:599:1> line:592:1 __libcpp_isfinite
|   | |-TemplateTypeParmDecl 0x7fd2ff92f600 <line:589:11, col:17> col:17 referenced class depth 0 index 0 _A1
|   | `-FunctionDecl 0x7fd2ff937a08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:599:1> line:592:1 constexpr __libcpp_isfinite 'typename enable_if<is_floating_point<_A1>::value, _Bool>::type (_A1) noexcept'
|   |   |-ParmVarDecl 0x7fd2ff937930 <col:19, col:23> col:23 referenced __lcpp_x '_A1'
|   |   |-CompoundStmt 0x7fd2ff937d28 <line:593:1, line:599:1>
|   |   | `-ReturnStmt 0x7fd2ff937d10 <line:595:5, col:39>
|   |   |   `-CallExpr 0x7fd2ff937ce0 <col:12, col:39> '<dependent type>'
|   |   |     |-DeclRefExpr 0x7fd2ff937c90 <col:12> '<builtin fn type>' Function 0x7fd2ff937ba0 '__builtin_isfinite' 'int (...) noexcept'
|   |   |     `-DeclRefExpr 0x7fd2ff937cb8 <col:31> '_A1' lvalue ParmVar 0x7fd2ff937930 '__lcpp_x' '_A1'
|   |   |-AlwaysInlineAttr 0x7fd2ff937af8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
|   |   `-VisibilityAttr 0x7fd2ff937b40 <col:48, col:71> Hidden
|   `-FunctionTemplateDecl 0x7fd2ff9381e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:601:1, line:607:1> line:604:1 __libcpp_isfinite
|     |-TemplateTypeParmDecl 0x7fd2ff937d48 <line:601:11, col:17> col:17 referenced class depth 0 index 0 _A1
|     `-FunctionDecl 0x7fd2ff938148 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:607:1> line:604:1 constexpr __libcpp_isfinite 'typename enable_if<!is_floating_point<_A1>::value, _Bool>::type (_A1) noexcept'
|       |-ParmVarDecl 0x7fd2ff938070 <col:19, col:23> col:23 referenced __lcpp_x '_A1'
|       |-CompoundStmt 0x7fd2ff938360 <line:605:1, line:607:1>
|       | `-ReturnStmt 0x7fd2ff938348 <line:606:5, col:29>
|       |   `-CallExpr 0x7fd2ff938318 <col:12, col:29> '<dependent type>'
|       |     |-UnresolvedLookupExpr 0x7fd2ff938290 <col:12> '<overloaded function type>' lvalue (ADL) = 'isfinite' 0x7fd2ff921678 0x7fd2ff921630
|       |     `-DeclRefExpr 0x7fd2ff9382f0 <col:21> '_A1' lvalue ParmVar 0x7fd2ff938070 '__lcpp_x' '_A1'
|       |-AlwaysInlineAttr 0x7fd2ff938238 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
|       `-VisibilityAttr 0x7fd2ff938280 <col:48, col:71> Hidden
|-LinkageSpecDecl 0x7fd2ff92df90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:555:12> col:12 implicit C
| `-FunctionDecl 0x7fd2ff92dfe0 <col:12> col:12 implicit referenced __builtin_isnan 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7fd2ff92e078 <col:12> Implicit
|   `-ConstAttr 0x7fd2ff92e0c0 <col:12> Implicit
|-LinkageSpecDecl 0x7fd2ff92edd0 <line:575:12> col:12 implicit C
| `-FunctionDecl 0x7fd2ff92ee20 <col:12> col:12 implicit referenced __builtin_isinf 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7fd2ff92eeb8 <col:12> Implicit
|   `-ConstAttr 0x7fd2ff92ef00 <col:12> Implicit
|-LinkageSpecDecl 0x7fd2ff937b50 <line:595:12> col:12 implicit C
| `-FunctionDecl 0x7fd2ff937ba0 <col:12> col:12 implicit referenced __builtin_isfinite 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7fd2ff937c38 <col:12> Implicit
|   `-ConstAttr 0x7fd2ff937c80 <col:12> Implicit
|-CXXRecordDecl 0x7fd2ff938380 <object_model_refined/3_data/06_multiple_inheritance.cpp:3:1, line:5:1> line:3:8 referenced struct P1 definition
| |-CXXRecordDecl 0x7fd2ff9384a8 <col:1, col:8> col:8 implicit struct P1
| |-FieldDecl 0x7fd2ff938558 <line:4:5, col:12> col:12 referenced x 'double'
| |-CXXConstructorDecl 0x7fd2ff939b68 <line:3:8> col:8 implicit P1 'void (void) noexcept' inline default trivial
| |-CXXDestructorDecl 0x7fd2ff939c48 <col:8> col:8 implicit ~P1 'void (void)' inline default trivial noexcept-unevaluated 0x7fd2ff939c48
| |-CXXConstructorDecl 0x7fd2ff939f08 <col:8> col:8 implicit constexpr P1 'void (const struct P1 &)' inline default trivial noexcept-unevaluated 0x7fd2ff939f08
| | `-ParmVarDecl 0x7fd2ff93a030 <col:8> col:8 'const struct P1 &'
| `-CXXConstructorDecl 0x7fd2ff93a0c8 <col:8> col:8 implicit constexpr P1 'void (struct P1 &&)' inline default trivial noexcept-unevaluated 0x7fd2ff93a0c8
|   `-ParmVarDecl 0x7fd2ff93a1f0 <col:8> col:8 'struct P1 &&'
|-CXXRecordDecl 0x7fd2ff9385c0 <line:7:1, line:9:1> line:7:8 referenced struct P2 definition
| |-CXXRecordDecl 0x7fd2ff9386e8 <col:1, col:8> col:8 implicit struct P2
| |-FieldDecl 0x7fd2ff938798 <line:8:5, col:12> col:12 referenced y 'double'
| |-CXXConstructorDecl 0x7fd2ff939d48 <line:7:8> col:8 implicit P2 'void (void) noexcept' inline default trivial
| |-CXXDestructorDecl 0x7fd2ff939e28 <col:8> col:8 implicit ~P2 'void (void)' inline default trivial noexcept-unevaluated 0x7fd2ff939e28
| |-CXXConstructorDecl 0x7fd2ff93a258 <col:8> col:8 implicit constexpr P2 'void (const struct P2 &)' inline default trivial noexcept-unevaluated 0x7fd2ff93a258
| | `-ParmVarDecl 0x7fd2ff93a380 <col:8> col:8 'const struct P2 &'
| `-CXXConstructorDecl 0x7fd2ff93a418 <col:8> col:8 implicit constexpr P2 'void (struct P2 &&)' inline default trivial noexcept-unevaluated 0x7fd2ff93a418
|   `-ParmVarDecl 0x7fd2ff93a540 <col:8> col:8 'struct P2 &&'
|-CXXRecordDecl 0x7fd2ff938800 <line:11:1, line:13:1> line:11:8 referenced struct P3 definition
| |-public 'struct P1'
| |-public 'struct P2'
| |-CXXRecordDecl 0x7fd2ff9389a8 <col:1, col:8> col:8 implicit struct P3
| |-FieldDecl 0x7fd2ff938a58 <line:12:5, col:12> col:12 z 'double'
| |-CXXConstructorDecl 0x7fd2ff939a68 <line:11:8> col:8 implicit referenced P3 'void (void) noexcept' inline default trivial
| |-CXXConstructorDecl 0x7fd2ff93a5a8 <col:8> col:8 implicit constexpr P3 'void (const struct P3 &)' inline default trivial noexcept-unevaluated 0x7fd2ff93a5a8
| | `-ParmVarDecl 0x7fd2ff93a6d0 <col:8> col:8 'const struct P3 &'
| `-CXXConstructorDecl 0x7fd2ff93a768 <col:8> col:8 implicit constexpr P3 'void (struct P3 &&)' inline default trivial noexcept-unevaluated 0x7fd2ff93a768
|   `-ParmVarDecl 0x7fd2ff93a890 <col:8> col:8 'struct P3 &&'
|-FunctionDecl 0x7fd2ff938bc8 <line:15:1, line:18:1> line:15:8 used func1 'double (const struct P1 &)'
| |-ParmVarDecl 0x7fd2ff938af8 <col:14, col:24> col:24 used p 'const struct P1 &'
| `-CompoundStmt 0x7fd2ff938d98 <line:16:1, line:18:1>
|   `-ReturnStmt 0x7fd2ff938d80 <line:17:5, col:20>
|     `-BinaryOperator 0x7fd2ff938d58 <col:12, col:20> 'double' '*'
|       |-ImplicitCastExpr 0x7fd2ff938d28 <col:12, col:14> 'double' <LValueToRValue>
|       | `-MemberExpr 0x7fd2ff938c90 <col:12, col:14> 'const double' lvalue .x 0x7fd2ff938558
|       |   `-DeclRefExpr 0x7fd2ff938c68 <col:12> 'const struct P1' lvalue ParmVar 0x7fd2ff938af8 'p' 'const struct P1 &'
|       `-ImplicitCastExpr 0x7fd2ff938d40 <col:18, col:20> 'double' <LValueToRValue>
|         `-MemberExpr 0x7fd2ff938cf0 <col:18, col:20> 'const double' lvalue .x 0x7fd2ff938558
|           `-DeclRefExpr 0x7fd2ff938cc8 <col:18> 'const struct P1' lvalue ParmVar 0x7fd2ff938af8 'p' 'const struct P1 &'
|-FunctionDecl 0x7fd2ff938ec8 <line:20:1, line:23:1> line:20:8 used func2 'double (const struct P2 &)'
| |-ParmVarDecl 0x7fd2ff938df8 <col:14, col:24> col:24 used p 'const struct P2 &'
| `-CompoundStmt 0x7fd2ff939098 <line:21:1, line:23:1>
|   `-ReturnStmt 0x7fd2ff939080 <line:22:5, col:20>
|     `-BinaryOperator 0x7fd2ff939058 <col:12, col:20> 'double' '*'
|       |-ImplicitCastExpr 0x7fd2ff939028 <col:12, col:14> 'double' <LValueToRValue>
|       | `-MemberExpr 0x7fd2ff938f90 <col:12, col:14> 'const double' lvalue .y 0x7fd2ff938798
|       |   `-DeclRefExpr 0x7fd2ff938f68 <col:12> 'const struct P2' lvalue ParmVar 0x7fd2ff938df8 'p' 'const struct P2 &'
|       `-ImplicitCastExpr 0x7fd2ff939040 <col:18, col:20> 'double' <LValueToRValue>
|         `-MemberExpr 0x7fd2ff938ff0 <col:18, col:20> 'const double' lvalue .y 0x7fd2ff938798
|           `-DeclRefExpr 0x7fd2ff938fc8 <col:18> 'const struct P2' lvalue ParmVar 0x7fd2ff938df8 'p' 'const struct P2 &'
|-FunctionDecl 0x7fd2ff9391c8 <line:25:1, line:28:1> line:25:8 used func3 'double (const struct P3 &)'
| |-ParmVarDecl 0x7fd2ff9390f8 <col:14, col:24> col:24 used p 'const struct P3 &'
| `-CompoundStmt 0x7fd2ff939888 <line:26:1, line:28:1>
|   `-ReturnStmt 0x7fd2ff939870 <line:27:5, col:41>
|     `-CallExpr 0x7fd2ff939840 <col:12, col:41> 'double'
|       |-ImplicitCastExpr 0x7fd2ff939828 <col:12, col:17> 'double (*)(double)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x7fd2ff9397e8 <col:12, col:17> 'double (double)' lvalue Function 0x7fd2ff9101c0 'sqrt' 'double (double)' (UsingShadow 0x7fd2ff924820 'sqrt')
|       `-BinaryOperator 0x7fd2ff939590 <col:22, col:40> 'double' '+'
|         |-CallExpr 0x7fd2ff939400 <col:22, col:29> 'double'
|         | |-ImplicitCastExpr 0x7fd2ff9393e8 <col:22> 'double (*)(const struct P1 &)' <FunctionToPointerDecay>
|         | | `-DeclRefExpr 0x7fd2ff939390 <col:22> 'double (const struct P1 &)' lvalue Function 0x7fd2ff938bc8 'func1' 'double (const struct P1 &)'
|         | `-ImplicitCastExpr 0x7fd2ff939430 <col:28> 'const struct P1' lvalue <DerivedToBase (P1)>
|         |   `-DeclRefExpr 0x7fd2ff939368 <col:28> 'const struct P3' lvalue ParmVar 0x7fd2ff9390f8 'p' 'const struct P3 &'
|         `-CallExpr 0x7fd2ff939540 <col:33, col:40> 'double'
|           |-ImplicitCastExpr 0x7fd2ff939528 <col:33> 'double (*)(const struct P2 &)' <FunctionToPointerDecay>
|           | `-DeclRefExpr 0x7fd2ff9394d0 <col:33> 'double (const struct P2 &)' lvalue Function 0x7fd2ff938ec8 'func2' 'double (const struct P2 &)'
|           `-ImplicitCastExpr 0x7fd2ff939570 <col:39> 'const struct P2' lvalue <DerivedToBase (P2)>
|             `-DeclRefExpr 0x7fd2ff9394a8 <col:39> 'const struct P3' lvalue ParmVar 0x7fd2ff9390f8 'p' 'const struct P3 &'
`-FunctionDecl 0x7fd2ff9398d0 <line:30:1, line:37:1> line:30:5 main 'int (void)'
  `-CompoundStmt 0x7fd2ff93af50 <line:31:1, line:37:1>
    |-DeclStmt 0x7fd2ff93ab68 <line:32:5, col:12>
    | `-VarDecl 0x7fd2ff9399a8 <col:5, col:11> col:8 used p3 'struct P3' listinit
    |   `-CXXConstructExpr 0x7fd2ff93a8f8 <col:8, col:11> 'struct P3' 'void (void) noexcept' zeroing
    |-DeclStmt 0x7fd2ff93aca8 <line:33:5, col:17>
    | `-VarDecl 0x7fd2ff93abb8 <col:5, col:15> col:9 pv 'struct P2 *' cinit
    |   `-ImplicitCastExpr 0x7fd2ff93ac88 <col:14, col:15> 'struct P2 *' <DerivedToBase (P2)>
    |     `-UnaryOperator 0x7fd2ff93ac68 <col:14, col:15> 'struct P3 *' prefix '&'
    |       `-DeclRefExpr 0x7fd2ff93ac18 <col:15> 'struct P3' lvalue Var 0x7fd2ff9399a8 'p3' 'struct P3'
    |-DeclStmt 0x7fd2ff93af00 <line:35:5, col:23>
    | `-VarDecl 0x7fd2ff93acd0 <col:5, col:22> col:10 v 'double':'double' cinit
    |   `-CallExpr 0x7fd2ff93ae20 <col:14, col:22> 'double'
    |     |-ImplicitCastExpr 0x7fd2ff93ae08 <col:14> 'double (*)(const struct P3 &)' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x7fd2ff93adb0 <col:14> 'double (const struct P3 &)' lvalue Function 0x7fd2ff9391c8 'func3' 'double (const struct P3 &)'
    |     `-ImplicitCastExpr 0x7fd2ff93ae50 <col:20> 'const struct P3' lvalue <NoOp>
    |       `-DeclRefExpr 0x7fd2ff93ad88 <col:20> 'struct P3' lvalue Var 0x7fd2ff9399a8 'p3' 'struct P3'
    `-ReturnStmt 0x7fd2ff93af38 <line:36:5, col:12>
      `-IntegerLiteral 0x7fd2ff93af18 <col:12> 'int' 0
