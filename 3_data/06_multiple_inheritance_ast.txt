TranslationUnitDecl 0x7ffe438326d0 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x7ffe43832c60 <<invalid sloc>> <invalid sloc> implicit referenced __int128_t '__int128'
| `-BuiltinType 0x7ffe43832940 '__int128'
|-TypedefDecl 0x7ffe43832cd0 <<invalid sloc>> <invalid sloc> implicit referenced __uint128_t 'unsigned __int128'
| `-BuiltinType 0x7ffe43832960 'unsigned __int128'
|-TypedefDecl 0x7ffe43833018 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x7ffe43832dc0 'struct __NSConstantString_tag'
|   `-CXXRecord 0x7ffe43832d28 '__NSConstantString_tag'
|-TypedefDecl 0x7ffe438330b0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x7ffe43833070 'char *'
|   `-BuiltinType 0x7ffe43832760 'char'
|-TypedefDecl 0x7ffe43865c00 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x7ffe43833390 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x7ffe438331a0 'struct __va_list_tag'
|     `-CXXRecord 0x7ffe43833108 '__va_list_tag'
|-NamespaceDecl 0x7ffe43865c58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:442:1, line:445:1> line:442:11 std
| `-NamespaceDecl 0x7ffe43865cc0 <line:443:3, line:444:3> <scratch space>:25:1 __1 inline
|-LinkageSpecDecl 0x7ffe43865dd8 </usr/include/sys/cdefs.h:71:23, line:72:21> line:71:30 C
| |-TypedefDecl 0x7ffe43865e40 </usr/include/math.h:44:5, col:19> col:19 float_t 'float'
| | `-BuiltinType 0x7ffe438328c0 'float'
| |-TypedefDecl 0x7ffe43865eb0 <line:45:5, col:20> col:20 double_t 'double'
| | `-BuiltinType 0x7ffe438328e0 'double'
| |-FunctionDecl 0x7ffe43865fd8 <line:111:1, col:35> col:12 __math_errhandling 'int (void)' extern
| |-FunctionDecl 0x7ffe43866198 <line:144:1, col:31> col:12 referenced __fpclassifyf 'int (float)' extern
| | `-ParmVarDecl 0x7ffe438660c8 <col:26> col:31 'float'
| |-FunctionDecl 0x7ffe43866318 <line:145:1, col:32> col:12 referenced __fpclassifyd 'int (double)' extern
| | `-ParmVarDecl 0x7ffe43866250 <col:26> col:32 'double'
| |-FunctionDecl 0x7ffe43866498 <line:146:1, col:37> col:12 referenced __fpclassifyl 'int (long double)' extern
| | `-ParmVarDecl 0x7ffe438663d0 <col:26, col:31> col:37 'long double'
| |-FunctionDecl 0x7ffe438665e0 </usr/include/sys/cdefs.h:300:36, /usr/include/math.h:188:52> col:28 used __inline_isfinitef 'int (float)' inline
| | |-ParmVarDecl 0x7ffe43866550 <col:47> col:52 'float'
| | `-AlwaysInlineAttr 0x7ffe43866680 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7ffe43866770 <line:300:36, /usr/include/math.h:189:53> col:28 used __inline_isfinited 'int (double)' inline
| | |-ParmVarDecl 0x7ffe438666e0 <col:47> col:53 'double'
| | `-AlwaysInlineAttr 0x7ffe43866810 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7ffe43866900 <line:300:36, /usr/include/math.h:190:58> col:28 used __inline_isfinitel 'int (long double)' inline
| | |-ParmVarDecl 0x7ffe43866870 <col:47, col:52> col:58 'long double'
| | `-AlwaysInlineAttr 0x7ffe438669a0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7ffe43866a90 <line:300:36, /usr/include/math.h:191:49> col:28 __inline_isinff 'int (float)' inline
| | |-ParmVarDecl 0x7ffe43866a00 <col:44> col:49 'float'
| | `-AlwaysInlineAttr 0x7ffe43866b30 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7ffe438fde30 <line:300:36, /usr/include/math.h:192:50> col:28 __inline_isinfd 'int (double)' inline
| | |-ParmVarDecl 0x7ffe43866b90 <col:44> col:50 'double'
| | `-AlwaysInlineAttr 0x7ffe438fded0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7ffe438fdfc0 <line:300:36, /usr/include/math.h:193:55> col:28 __inline_isinfl 'int (long double)' inline
| | |-ParmVarDecl 0x7ffe438fdf30 <col:44, col:49> col:55 'long double'
| | `-AlwaysInlineAttr 0x7ffe438fe060 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7ffe438fe150 <line:300:36, /usr/include/math.h:194:49> col:28 __inline_isnanf 'int (float)' inline
| | |-ParmVarDecl 0x7ffe438fe0c0 <col:44> col:49 'float'
| | `-AlwaysInlineAttr 0x7ffe438fe1f0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7ffe438fe2e0 <line:300:36, /usr/include/math.h:195:50> col:28 __inline_isnand 'int (double)' inline
| | |-ParmVarDecl 0x7ffe438fe250 <col:44> col:50 'double'
| | `-AlwaysInlineAttr 0x7ffe438fe380 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7ffe438fe470 <line:300:36, /usr/include/math.h:196:55> col:28 __inline_isnanl 'int (long double)' inline
| | |-ParmVarDecl 0x7ffe438fe3e0 <col:44, col:49> col:55 'long double'
| | `-AlwaysInlineAttr 0x7ffe438fe510 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7ffe438fe600 <line:300:36, /usr/include/math.h:197:52> col:28 __inline_isnormalf 'int (float)' inline
| | |-ParmVarDecl 0x7ffe438fe570 <col:47> col:52 'float'
| | `-AlwaysInlineAttr 0x7ffe438fe6a0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7ffe438fe790 <line:300:36, /usr/include/math.h:198:53> col:28 __inline_isnormald 'int (double)' inline
| | |-ParmVarDecl 0x7ffe438fe700 <col:47> col:53 'double'
| | `-AlwaysInlineAttr 0x7ffe438fe830 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7ffe438fe920 <line:300:36, /usr/include/math.h:199:58> col:28 __inline_isnormall 'int (long double)' inline
| | |-ParmVarDecl 0x7ffe438fe890 <col:47, col:52> col:58 'long double'
| | `-AlwaysInlineAttr 0x7ffe438fe9c0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7ffe438feab0 <line:300:36, /usr/include/math.h:200:51> col:28 __inline_signbitf 'int (float)' inline
| | |-ParmVarDecl 0x7ffe438fea20 <col:46> col:51 'float'
| | `-AlwaysInlineAttr 0x7ffe438feb50 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7ffe438fec40 <line:300:36, /usr/include/math.h:201:52> col:28 __inline_signbitd 'int (double)' inline
| | |-ParmVarDecl 0x7ffe438febb0 <col:46> col:52 'double'
| | `-AlwaysInlineAttr 0x7ffe438fece0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7ffe438fee00 <line:300:36, /usr/include/math.h:202:57> col:28 __inline_signbitl 'int (long double)' inline
| | |-ParmVarDecl 0x7ffe438fed40 <col:46, col:51> col:57 'long double'
| | `-AlwaysInlineAttr 0x7ffe438feea0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7ffe438fef90 prev 0x7ffe438665e0 <line:300:36, /usr/include/math.h:206:1> line:204:28 used __inline_isfinitef 'int (float)' inline
| | |-ParmVarDecl 0x7ffe438fef00 <col:47, col:53> col:53 used __x 'float'
| | |-CompoundStmt 0x7ffe438ff738 <col:58, line:206:1>
| | | `-ReturnStmt 0x7ffe438ff720 <line:205:5, col:65>
| | |   `-ImplicitCastExpr 0x7ffe438ff708 <col:12, col:65> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7ffe438ff6e0 <col:12, col:65> '_Bool' '&&'
| | |       |-BinaryOperator 0x7ffe438ff0f8 <col:12, col:19> '_Bool' '=='
| | |       | |-ImplicitCastExpr 0x7ffe438ff0c8 <col:12> 'float' <LValueToRValue>
| | |       | | `-DeclRefExpr 0x7ffe438ff078 <col:12> 'float' lvalue ParmVar 0x7ffe438fef00 '__x' 'float'
| | |       | `-ImplicitCastExpr 0x7ffe438ff0e0 <col:19> 'float' <LValueToRValue>
| | |       |   `-DeclRefExpr 0x7ffe438ff0a0 <col:19> 'float' lvalue ParmVar 0x7ffe438fef00 '__x' 'float'
| | |       `-BinaryOperator 0x7ffe438ff6b8 <col:26, col:65> '_Bool' '!='
| | |         |-CallExpr 0x7ffe438ff400 <col:26, col:45> 'float'
| | |         | |-ImplicitCastExpr 0x7ffe438ff3e8 <col:26> 'float (*)(float) noexcept' <BuiltinFnToFnPtr>
| | |         | | `-DeclRefExpr 0x7ffe438ff340 <col:26> '<builtin fn type>' Function 0x7ffe438ff1e8 '__builtin_fabsf' 'float (float) noexcept'
| | |         | `-ImplicitCastExpr 0x7ffe438ff430 <col:42> 'float' <LValueToRValue>
| | |         |   `-DeclRefExpr 0x7ffe438ff368 <col:42> 'float' lvalue ParmVar 0x7ffe438fef00 '__x' 'float'
| | |         `-CallExpr 0x7ffe438ff690 <col:50, col:65> 'float'
| | |           `-ImplicitCastExpr 0x7ffe438ff678 <col:50> 'float (*)(void) noexcept' <BuiltinFnToFnPtr>
| | |             `-DeclRefExpr 0x7ffe438ff5f0 <col:50> '<builtin fn type>' Function 0x7ffe438ff500 '__builtin_inff' 'float (void) noexcept'
| | `-AlwaysInlineAttr 0x7ffe438ff030 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7ffe438ff800 prev 0x7ffe43866770 <line:300:36, /usr/include/math.h:209:1> line:207:28 used __inline_isfinited 'int (double)' inline
| | |-ParmVarDecl 0x7ffe438ff770 <col:47, col:54> col:54 used __x 'double'
| | |-CompoundStmt 0x7ffe43900438 <col:59, line:209:1>
| | | `-ReturnStmt 0x7ffe43900420 <line:208:5, col:63>
| | |   `-ImplicitCastExpr 0x7ffe43900408 <col:12, col:63> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7ffe439003e0 <col:12, col:63> '_Bool' '&&'
| | |       |-BinaryOperator 0x7ffe438ff968 <col:12, col:19> '_Bool' '=='
| | |       | |-ImplicitCastExpr 0x7ffe438ff938 <col:12> 'double' <LValueToRValue>
| | |       | | `-DeclRefExpr 0x7ffe438ff8e8 <col:12> 'double' lvalue ParmVar 0x7ffe438ff770 '__x' 'double'
| | |       | `-ImplicitCastExpr 0x7ffe438ff950 <col:19> 'double' <LValueToRValue>
| | |       |   `-DeclRefExpr 0x7ffe438ff910 <col:19> 'double' lvalue ParmVar 0x7ffe438ff770 '__x' 'double'
| | |       `-BinaryOperator 0x7ffe439003b8 <col:26, col:63> '_Bool' '!='
| | |         |-CallExpr 0x7ffe438ffc70 <col:26, col:44> 'double'
| | |         | |-ImplicitCastExpr 0x7ffe438ffc58 <col:26> 'double (*)(double) noexcept' <BuiltinFnToFnPtr>
| | |         | | `-DeclRefExpr 0x7ffe438ffbb0 <col:26> '<builtin fn type>' Function 0x7ffe438ffa58 '__builtin_fabs' 'double (double) noexcept'
| | |         | `-ImplicitCastExpr 0x7ffe438ffca0 <col:41> 'double' <LValueToRValue>
| | |         |   `-DeclRefExpr 0x7ffe438ffbd8 <col:41> 'double' lvalue ParmVar 0x7ffe438ff770 '__x' 'double'
| | |         `-CallExpr 0x7ffe43900390 <col:49, col:63> 'double'
| | |           `-ImplicitCastExpr 0x7ffe43900378 <col:49> 'double (*)(void) noexcept' <BuiltinFnToFnPtr>
| | |             `-DeclRefExpr 0x7ffe439002f0 <col:49> '<builtin fn type>' Function 0x7ffe43900200 '__builtin_inf' 'double (void) noexcept'
| | `-AlwaysInlineAttr 0x7ffe438ff8a0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7ffe43900500 prev 0x7ffe43866900 <line:300:36, /usr/include/math.h:212:1> line:210:28 used __inline_isfinitel 'int (long double)' inline
| | |-ParmVarDecl 0x7ffe43900470 <col:47, col:59> col:59 used __x 'long double'
| | |-CompoundStmt 0x7ffe43900ca8 <col:64, line:212:1>
| | | `-ReturnStmt 0x7ffe43900c90 <line:211:5, col:65>
| | |   `-ImplicitCastExpr 0x7ffe43900c78 <col:12, col:65> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7ffe43900c50 <col:12, col:65> '_Bool' '&&'
| | |       |-BinaryOperator 0x7ffe43900668 <col:12, col:19> '_Bool' '=='
| | |       | |-ImplicitCastExpr 0x7ffe43900638 <col:12> 'long double' <LValueToRValue>
| | |       | | `-DeclRefExpr 0x7ffe439005e8 <col:12> 'long double' lvalue ParmVar 0x7ffe43900470 '__x' 'long double'
| | |       | `-ImplicitCastExpr 0x7ffe43900650 <col:19> 'long double' <LValueToRValue>
| | |       |   `-DeclRefExpr 0x7ffe43900610 <col:19> 'long double' lvalue ParmVar 0x7ffe43900470 '__x' 'long double'
| | |       `-BinaryOperator 0x7ffe43900c28 <col:26, col:65> '_Bool' '!='
| | |         |-CallExpr 0x7ffe43900970 <col:26, col:45> 'long double'
| | |         | |-ImplicitCastExpr 0x7ffe43900958 <col:26> 'long double (*)(long double) noexcept' <BuiltinFnToFnPtr>
| | |         | | `-DeclRefExpr 0x7ffe439008b0 <col:26> '<builtin fn type>' Function 0x7ffe43900758 '__builtin_fabsl' 'long double (long double) noexcept'
| | |         | `-ImplicitCastExpr 0x7ffe439009a0 <col:42> 'long double' <LValueToRValue>
| | |         |   `-DeclRefExpr 0x7ffe439008d8 <col:42> 'long double' lvalue ParmVar 0x7ffe43900470 '__x' 'long double'
| | |         `-CallExpr 0x7ffe43900c00 <col:50, col:65> 'long double'
| | |           `-ImplicitCastExpr 0x7ffe43900be8 <col:50> 'long double (*)(void) noexcept' <BuiltinFnToFnPtr>
| | |             `-DeclRefExpr 0x7ffe43900b60 <col:50> '<builtin fn type>' Function 0x7ffe43900a70 '__builtin_infl' 'long double (void) noexcept'
| | `-AlwaysInlineAttr 0x7ffe439005a0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7ffe43900d70 prev 0x7ffe43866a90 <line:300:36, /usr/include/math.h:215:1> line:213:28 referenced __inline_isinff 'int (float)' inline
| | |-ParmVarDecl 0x7ffe43900ce0 <col:44, col:50> col:50 used __x 'float'
| | |-CompoundStmt 0x7ffe43900fc8 <col:55, line:215:1>
| | | `-ReturnStmt 0x7ffe43900fb0 <line:214:5, col:51>
| | |   `-ImplicitCastExpr 0x7ffe43900f98 <col:12, col:51> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7ffe43900f70 <col:12, col:51> '_Bool' '=='
| | |       |-CallExpr 0x7ffe43900ec0 <col:12, col:31> 'float'
| | |       | |-ImplicitCastExpr 0x7ffe43900ea8 <col:12> 'float (*)(float) noexcept' <BuiltinFnToFnPtr>
| | |       | | `-DeclRefExpr 0x7ffe43900e58 <col:12> '<builtin fn type>' Function 0x7ffe438ff1e8 '__builtin_fabsf' 'float (float) noexcept'
| | |       | `-ImplicitCastExpr 0x7ffe43900ef0 <col:28> 'float' <LValueToRValue>
| | |       |   `-DeclRefExpr 0x7ffe43900e80 <col:28> 'float' lvalue ParmVar 0x7ffe43900ce0 '__x' 'float'
| | |       `-CallExpr 0x7ffe43900f48 <col:36, col:51> 'float'
| | |         `-ImplicitCastExpr 0x7ffe43900f30 <col:36> 'float (*)(void) noexcept' <BuiltinFnToFnPtr>
| | |           `-DeclRefExpr 0x7ffe43900f08 <col:36> '<builtin fn type>' Function 0x7ffe438ff500 '__builtin_inff' 'float (void) noexcept'
| | `-AlwaysInlineAttr 0x7ffe43900e10 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7ffe43901090 prev 0x7ffe438fde30 <line:300:36, /usr/include/math.h:218:1> line:216:28 referenced __inline_isinfd 'int (double)' inline
| | |-ParmVarDecl 0x7ffe43901000 <col:44, col:51> col:51 used __x 'double'
| | |-CompoundStmt 0x7ffe439016e8 <col:56, line:218:1>
| | | `-ReturnStmt 0x7ffe439016d0 <line:217:5, col:49>
| | |   `-ImplicitCastExpr 0x7ffe439016b8 <col:12, col:49> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7ffe43901690 <col:12, col:49> '_Bool' '=='
| | |       |-CallExpr 0x7ffe439011e0 <col:12, col:30> 'double'
| | |       | |-ImplicitCastExpr 0x7ffe439011c8 <col:12> 'double (*)(double) noexcept' <BuiltinFnToFnPtr>
| | |       | | `-DeclRefExpr 0x7ffe43901178 <col:12> '<builtin fn type>' Function 0x7ffe438ffa58 '__builtin_fabs' 'double (double) noexcept'
| | |       | `-ImplicitCastExpr 0x7ffe43901610 <col:27> 'double' <LValueToRValue>
| | |       |   `-DeclRefExpr 0x7ffe439011a0 <col:27> 'double' lvalue ParmVar 0x7ffe43901000 '__x' 'double'
| | |       `-CallExpr 0x7ffe43901668 <col:35, col:49> 'double'
| | |         `-ImplicitCastExpr 0x7ffe43901650 <col:35> 'double (*)(void) noexcept' <BuiltinFnToFnPtr>
| | |           `-DeclRefExpr 0x7ffe43901628 <col:35> '<builtin fn type>' Function 0x7ffe43900200 '__builtin_inf' 'double (void) noexcept'
| | `-AlwaysInlineAttr 0x7ffe43901130 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7ffe439017b0 prev 0x7ffe438fdfc0 <line:300:36, /usr/include/math.h:221:1> line:219:28 referenced __inline_isinfl 'int (long double)' inline
| | |-ParmVarDecl 0x7ffe43901720 <col:44, col:56> col:56 used __x 'long double'
| | |-CompoundStmt 0x7ffe43901a08 <col:61, line:221:1>
| | | `-ReturnStmt 0x7ffe439019f0 <line:220:5, col:51>
| | |   `-ImplicitCastExpr 0x7ffe439019d8 <col:12, col:51> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7ffe439019b0 <col:12, col:51> '_Bool' '=='
| | |       |-CallExpr 0x7ffe43901900 <col:12, col:31> 'long double'
| | |       | |-ImplicitCastExpr 0x7ffe439018e8 <col:12> 'long double (*)(long double) noexcept' <BuiltinFnToFnPtr>
| | |       | | `-DeclRefExpr 0x7ffe43901898 <col:12> '<builtin fn type>' Function 0x7ffe43900758 '__builtin_fabsl' 'long double (long double) noexcept'
| | |       | `-ImplicitCastExpr 0x7ffe43901930 <col:28> 'long double' <LValueToRValue>
| | |       |   `-DeclRefExpr 0x7ffe439018c0 <col:28> 'long double' lvalue ParmVar 0x7ffe43901720 '__x' 'long double'
| | |       `-CallExpr 0x7ffe43901988 <col:36, col:51> 'long double'
| | |         `-ImplicitCastExpr 0x7ffe43901970 <col:36> 'long double (*)(void) noexcept' <BuiltinFnToFnPtr>
| | |           `-DeclRefExpr 0x7ffe43901948 <col:36> '<builtin fn type>' Function 0x7ffe43900a70 '__builtin_infl' 'long double (void) noexcept'
| | `-AlwaysInlineAttr 0x7ffe43901850 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7ffe43901ad0 prev 0x7ffe438fe150 <line:300:36, /usr/include/math.h:224:1> line:222:28 referenced __inline_isnanf 'int (float)' inline
| | |-ParmVarDecl 0x7ffe43901a40 <col:44, col:50> col:50 used __x 'float'
| | |-CompoundStmt 0x7ffe43901c90 <col:55, line:224:1>
| | | `-ReturnStmt 0x7ffe43901c78 <line:223:5, col:19>
| | |   `-ImplicitCastExpr 0x7ffe43901c60 <col:12, col:19> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7ffe43901c38 <col:12, col:19> '_Bool' '!='
| | |       |-ImplicitCastExpr 0x7ffe43901c08 <col:12> 'float' <LValueToRValue>
| | |       | `-DeclRefExpr 0x7ffe43901bb8 <col:12> 'float' lvalue ParmVar 0x7ffe43901a40 '__x' 'float'
| | |       `-ImplicitCastExpr 0x7ffe43901c20 <col:19> 'float' <LValueToRValue>
| | |         `-DeclRefExpr 0x7ffe43901be0 <col:19> 'float' lvalue ParmVar 0x7ffe43901a40 '__x' 'float'
| | `-AlwaysInlineAttr 0x7ffe43901b70 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7ffe43901d58 prev 0x7ffe438fe2e0 <line:300:36, /usr/include/math.h:227:1> line:225:28 referenced __inline_isnand 'int (double)' inline
| | |-ParmVarDecl 0x7ffe43901cc8 <col:44, col:51> col:51 used __x 'double'
| | |-CompoundStmt 0x7ffe43901f18 <col:56, line:227:1>
| | | `-ReturnStmt 0x7ffe43901f00 <line:226:5, col:19>
| | |   `-ImplicitCastExpr 0x7ffe43901ee8 <col:12, col:19> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7ffe43901ec0 <col:12, col:19> '_Bool' '!='
| | |       |-ImplicitCastExpr 0x7ffe43901e90 <col:12> 'double' <LValueToRValue>
| | |       | `-DeclRefExpr 0x7ffe43901e40 <col:12> 'double' lvalue ParmVar 0x7ffe43901cc8 '__x' 'double'
| | |       `-ImplicitCastExpr 0x7ffe43901ea8 <col:19> 'double' <LValueToRValue>
| | |         `-DeclRefExpr 0x7ffe43901e68 <col:19> 'double' lvalue ParmVar 0x7ffe43901cc8 '__x' 'double'
| | `-AlwaysInlineAttr 0x7ffe43901df8 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7ffe43901fe0 prev 0x7ffe438fe470 <line:300:36, /usr/include/math.h:230:1> line:228:28 referenced __inline_isnanl 'int (long double)' inline
| | |-ParmVarDecl 0x7ffe43901f50 <col:44, col:56> col:56 used __x 'long double'
| | |-CompoundStmt 0x7ffe439021a0 <col:61, line:230:1>
| | | `-ReturnStmt 0x7ffe43902188 <line:229:5, col:19>
| | |   `-ImplicitCastExpr 0x7ffe43902170 <col:12, col:19> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7ffe43902148 <col:12, col:19> '_Bool' '!='
| | |       |-ImplicitCastExpr 0x7ffe43902118 <col:12> 'long double' <LValueToRValue>
| | |       | `-DeclRefExpr 0x7ffe439020c8 <col:12> 'long double' lvalue ParmVar 0x7ffe43901f50 '__x' 'long double'
| | |       `-ImplicitCastExpr 0x7ffe43902130 <col:19> 'long double' <LValueToRValue>
| | |         `-DeclRefExpr 0x7ffe439020f0 <col:19> 'long double' lvalue ParmVar 0x7ffe43901f50 '__x' 'long double'
| | `-AlwaysInlineAttr 0x7ffe43902080 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7ffe43902268 prev 0x7ffe438feab0 <line:300:36, /usr/include/math.h:235:1> line:231:28 referenced __inline_signbitf 'int (float)' inline
| | |-ParmVarDecl 0x7ffe439021d8 <col:46, col:52> col:52 used __x 'float'
| | |-CompoundStmt 0x7ffe43903ed8 <col:57, line:235:1>
| | | |-DeclStmt 0x7ffe43903bb0 <line:232:5, col:47>
| | | | |-CXXRecordDecl 0x7ffe43902350 <col:5, col:42> col:5 union definition
| | | | | |-FieldDecl 0x7ffe43902490 <col:13, col:19> col:19 referenced __f 'float'
| | | | | |-FieldDecl 0x7ffe439024f0 <col:24, col:37> col:37 referenced __u 'unsigned int'
| | | | | |-CXXConstructorDecl 0x7ffe43903680 <col:5> col:5 implicit used  'void (void) noexcept' inline default trivial
| | | | | | `-CompoundStmt 0x7ffe43903b50 <col:5>
| | | | | |-CXXConstructorDecl 0x7ffe439037c8 <col:5> col:5 implicit constexpr  'void (const union (anonymous at /usr/include/math.h:232:5) &)' inline default trivial noexcept-unevaluated 0x7ffe439037c8
| | | | | | `-ParmVarDecl 0x7ffe439038f0 <col:5> col:5 'const union (anonymous at /usr/include/math.h:232:5) &'
| | | | | `-CXXConstructorDecl 0x7ffe43903988 <col:5> col:5 implicit constexpr  'void (union (anonymous at /usr/include/math.h:232:5) &&)' inline default trivial noexcept-unevaluated 0x7ffe43903988
| | | | |   `-ParmVarDecl 0x7ffe43903ab0 <col:5> col:5 'union (anonymous at /usr/include/math.h:232:5) &&'
| | | | `-VarDecl 0x7ffe43903600 <col:5, col:44> col:44 used __u 'union (anonymous union at /usr/include/math.h:232:5)':'union (anonymous at /usr/include/math.h:232:5)' callinit
| | | |   `-CXXConstructExpr 0x7ffe43903b68 <col:44> 'union (anonymous union at /usr/include/math.h:232:5)':'union (anonymous at /usr/include/math.h:232:5)' 'void (void) noexcept'
| | | |-BinaryOperator 0x7ffe43903c68 <line:233:5, col:15> 'float' lvalue '='
| | | | |-MemberExpr 0x7ffe43903bf0 <col:5, col:9> 'float' lvalue .__f 0x7ffe43902490
| | | | | `-DeclRefExpr 0x7ffe43903bc8 <col:5> 'union (anonymous union at /usr/include/math.h:232:5)':'union (anonymous at /usr/include/math.h:232:5)' lvalue Var 0x7ffe43903600 '__u' 'union (anonymous union at /usr/include/math.h:232:5)':'union (anonymous at /usr/include/math.h:232:5)'
| | | | `-ImplicitCastExpr 0x7ffe43903c50 <col:15> 'float' <LValueToRValue>
| | | |   `-DeclRefExpr 0x7ffe43903c28 <col:15> 'float' lvalue ParmVar 0x7ffe439021d8 '__x' 'float'
| | | `-ReturnStmt 0x7ffe43903ec0 <line:234:5, col:31>
| | |   `-CStyleCastExpr 0x7ffe43903e98 <col:12, col:31> 'int' <NoOp>
| | |     `-ImplicitCastExpr 0x7ffe43903e80 <col:17, col:31> 'int' <IntegralCast>
| | |       `-ParenExpr 0x7ffe43903e60 <col:17, col:31> 'unsigned int'
| | |         `-BinaryOperator 0x7ffe43903df0 <col:18, col:29> 'unsigned int' '>>'
| | |           |-ImplicitCastExpr 0x7ffe43903dd8 <col:18, col:22> 'unsigned int' <LValueToRValue>
| | |           | `-MemberExpr 0x7ffe43903d80 <col:18, col:22> 'unsigned int' lvalue .__u 0x7ffe439024f0
| | |           |   `-DeclRefExpr 0x7ffe43903d58 <col:18> 'union (anonymous union at /usr/include/math.h:232:5)':'union (anonymous at /usr/include/math.h:232:5)' lvalue Var 0x7ffe43903600 '__u' 'union (anonymous union at /usr/include/math.h:232:5)':'union (anonymous at /usr/include/math.h:232:5)'
| | |           `-IntegerLiteral 0x7ffe43903db8 <col:29> 'int' 31
| | `-AlwaysInlineAttr 0x7ffe43902308 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7ffe43903fb0 prev 0x7ffe438fec40 <line:300:36, /usr/include/math.h:240:1> line:236:28 referenced __inline_signbitd 'int (double)' inline
| | |-ParmVarDecl 0x7ffe43903f20 <col:46, col:53> col:53 used __x 'double'
| | |-CompoundStmt 0x7ffe439065b0 <col:58, line:240:1>
| | | |-DeclStmt 0x7ffe43906288 <line:237:5, col:54>
| | | | |-CXXRecordDecl 0x7ffe43904098 <col:5, col:49> col:5 union definition
| | | | | |-FieldDecl 0x7ffe439041d0 <col:13, col:20> col:20 referenced __f 'double'
| | | | | |-FieldDecl 0x7ffe43904230 <col:25, col:44> col:44 referenced __u 'unsigned long long'
| | | | | |-CXXConstructorDecl 0x7ffe43904370 <col:5> col:5 implicit used  'void (void) noexcept' inline default trivial
| | | | | | `-CompoundStmt 0x7ffe43906228 <col:5>
| | | | | |-CXXConstructorDecl 0x7ffe43904488 <col:5> col:5 implicit constexpr  'void (const union (anonymous at /usr/include/math.h:237:5) &)' inline default trivial noexcept-unevaluated 0x7ffe43904488
| | | | | | `-ParmVarDecl 0x7ffe43906000 <col:5> col:5 'const union (anonymous at /usr/include/math.h:237:5) &'
| | | | | `-CXXConstructorDecl 0x7ffe43906098 <col:5> col:5 implicit constexpr  'void (union (anonymous at /usr/include/math.h:237:5) &&)' inline default trivial noexcept-unevaluated 0x7ffe43906098
| | | | |   `-ParmVarDecl 0x7ffe439061c0 <col:5> col:5 'union (anonymous at /usr/include/math.h:237:5) &&'
| | | | `-VarDecl 0x7ffe439042f0 <col:5, col:51> col:51 used __u 'union (anonymous union at /usr/include/math.h:237:5)':'union (anonymous at /usr/include/math.h:237:5)' callinit
| | | |   `-CXXConstructExpr 0x7ffe43906240 <col:51> 'union (anonymous union at /usr/include/math.h:237:5)':'union (anonymous at /usr/include/math.h:237:5)' 'void (void) noexcept'
| | | |-BinaryOperator 0x7ffe43906340 <line:238:5, col:15> 'double' lvalue '='
| | | | |-MemberExpr 0x7ffe439062c8 <col:5, col:9> 'double' lvalue .__f 0x7ffe439041d0
| | | | | `-DeclRefExpr 0x7ffe439062a0 <col:5> 'union (anonymous union at /usr/include/math.h:237:5)':'union (anonymous at /usr/include/math.h:237:5)' lvalue Var 0x7ffe439042f0 '__u' 'union (anonymous union at /usr/include/math.h:237:5)':'union (anonymous at /usr/include/math.h:237:5)'
| | | | `-ImplicitCastExpr 0x7ffe43906328 <col:15> 'double' <LValueToRValue>
| | | |   `-DeclRefExpr 0x7ffe43906300 <col:15> 'double' lvalue ParmVar 0x7ffe43903f20 '__x' 'double'
| | | `-ReturnStmt 0x7ffe43906598 <line:239:5, col:31>
| | |   `-CStyleCastExpr 0x7ffe43906570 <col:12, col:31> 'int' <NoOp>
| | |     `-ImplicitCastExpr 0x7ffe43906558 <col:17, col:31> 'int' <IntegralCast>
| | |       `-ParenExpr 0x7ffe43906538 <col:17, col:31> 'unsigned long long'
| | |         `-BinaryOperator 0x7ffe439064c8 <col:18, col:29> 'unsigned long long' '>>'
| | |           |-ImplicitCastExpr 0x7ffe439064b0 <col:18, col:22> 'unsigned long long' <LValueToRValue>
| | |           | `-MemberExpr 0x7ffe43906458 <col:18, col:22> 'unsigned long long' lvalue .__u 0x7ffe43904230
| | |           |   `-DeclRefExpr 0x7ffe43906430 <col:18> 'union (anonymous union at /usr/include/math.h:237:5)':'union (anonymous at /usr/include/math.h:237:5)' lvalue Var 0x7ffe439042f0 '__u' 'union (anonymous union at /usr/include/math.h:237:5)':'union (anonymous at /usr/include/math.h:237:5)'
| | |           `-IntegerLiteral 0x7ffe43906490 <col:29> 'int' 63
| | `-AlwaysInlineAttr 0x7ffe43904050 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7ffe43906688 prev 0x7ffe438fee00 <line:300:36, /usr/include/math.h:249:1> line:242:28 referenced __inline_signbitl 'int (long double)' inline
| | |-ParmVarDecl 0x7ffe439065f8 <col:46, col:58> col:58 used __x 'long double'
| | |-CompoundStmt 0x7ffe43908360 <col:63, line:249:1>
| | | |-DeclStmt 0x7ffe43907f38 <line:243:5, line:246:10>
| | | | |-CXXRecordDecl 0x7ffe43906770 <line:243:5, line:246:5> line:243:5 union definition
| | | | | |-FieldDecl 0x7ffe439068b0 <line:244:9, col:21> col:21 referenced __ld 'long double'
| | | | | |-CXXRecordDecl 0x7ffe439068f8 <line:245:9, col:64> col:9 struct definition
| | | | | | |-FieldDecl 0x7ffe43906a30 <col:17, col:36> col:36 __m 'unsigned long long'
| | | | | | |-FieldDecl 0x7ffe43906a90 <col:41, col:56> col:56 referenced __sexp 'unsigned short'
| | | | | | |-CXXConstructorDecl 0x7ffe43906da8 <col:9> col:9 implicit  'void (void) noexcept' inline default trivial
| | | | | | |-CXXDestructorDecl 0x7ffe43906e88 <col:9> col:9 implicit ~ 'void (void)' inline default trivial noexcept-unevaluated 0x7ffe43906e88
| | | | | | |-CXXConstructorDecl 0x7ffe439079c8 <col:9> col:9 implicit constexpr  'void (const struct (anonymous at /usr/include/math.h:245:9) &)' inline default trivial noexcept-unevaluated 0x7ffe439079c8
| | | | | | | `-ParmVarDecl 0x7ffe43907af0 <col:9> col:9 'const struct (anonymous at /usr/include/math.h:245:9) &'
| | | | | | `-CXXConstructorDecl 0x7ffe43907b88 <col:9> col:9 implicit constexpr  'void (struct (anonymous at /usr/include/math.h:245:9) &&)' inline default trivial noexcept-unevaluated 0x7ffe43907b88
| | | | | |   `-ParmVarDecl 0x7ffe43907cb0 <col:9> col:9 'struct (anonymous at /usr/include/math.h:245:9) &&'
| | | | | |-FieldDecl 0x7ffe43906b50 <col:9, col:66> col:66 referenced __p 'struct (anonymous struct at /usr/include/math.h:245:9)':'struct (anonymous at /usr/include/math.h:245:9)'
| | | | | |-CXXConstructorDecl 0x7ffe43906ca0 <line:243:5> col:5 implicit used  'void (void) noexcept' inline default trivial
| | | | | | `-CompoundStmt 0x7ffe43907ed8 <col:5>
| | | | | |-CXXConstructorDecl 0x7ffe43907800 <col:5> col:5 implicit constexpr  'void (const union (anonymous at /usr/include/math.h:243:5) &)' inline default trivial noexcept-unevaluated 0x7ffe43907800
| | | | | | `-ParmVarDecl 0x7ffe43907930 <col:5> col:5 'const union (anonymous at /usr/include/math.h:243:5) &'
| | | | | `-CXXConstructorDecl 0x7ffe43907d48 <col:5> col:5 implicit constexpr  'void (union (anonymous at /usr/include/math.h:243:5) &&)' inline default trivial noexcept-unevaluated 0x7ffe43907d48
| | | | |   `-ParmVarDecl 0x7ffe43907e70 <col:5> col:5 'union (anonymous at /usr/include/math.h:243:5) &&'
| | | | `-VarDecl 0x7ffe43906c20 <col:5, line:246:7> col:7 used __u 'union (anonymous union at /usr/include/math.h:243:5)':'union (anonymous at /usr/include/math.h:243:5)' callinit
| | | |   `-CXXConstructExpr 0x7ffe43907ef0 <col:7> 'union (anonymous union at /usr/include/math.h:243:5)':'union (anonymous at /usr/include/math.h:243:5)' 'void (void) noexcept'
| | | |-BinaryOperator 0x7ffe43907ff0 <line:247:5, col:16> 'long double' lvalue '='
| | | | |-MemberExpr 0x7ffe43907f78 <col:5, col:9> 'long double' lvalue .__ld 0x7ffe439068b0
| | | | | `-DeclRefExpr 0x7ffe43907f50 <col:5> 'union (anonymous union at /usr/include/math.h:243:5)':'union (anonymous at /usr/include/math.h:243:5)' lvalue Var 0x7ffe43906c20 '__u' 'union (anonymous union at /usr/include/math.h:243:5)':'union (anonymous at /usr/include/math.h:243:5)'
| | | | `-ImplicitCastExpr 0x7ffe43907fd8 <col:16> 'long double' <LValueToRValue>
| | | |   `-DeclRefExpr 0x7ffe43907fb0 <col:16> 'long double' lvalue ParmVar 0x7ffe439065f8 '__x' 'long double'
| | | `-ReturnStmt 0x7ffe43908348 <line:248:5, col:38>
| | |   `-CStyleCastExpr 0x7ffe43908320 <col:12, col:38> 'int' <NoOp>
| | |     `-ParenExpr 0x7ffe43908300 <col:17, col:38> 'int'
| | |       `-BinaryOperator 0x7ffe43908290 <col:18, col:36> 'int' '>>'
| | |         |-ImplicitCastExpr 0x7ffe43908278 <col:18, col:26> 'int' <IntegralCast>
| | |         | `-ImplicitCastExpr 0x7ffe43908260 <col:18, col:26> 'unsigned short' <LValueToRValue>
| | |         |   `-MemberExpr 0x7ffe43908208 <col:18, col:26> 'unsigned short' lvalue .__sexp 0x7ffe43906a90
| | |         |     `-MemberExpr 0x7ffe439081d0 <col:18, col:22> 'struct (anonymous struct at /usr/include/math.h:245:9)':'struct (anonymous at /usr/include/math.h:245:9)' lvalue .__p 0x7ffe43906b50
| | |         |       `-DeclRefExpr 0x7ffe439081a8 <col:18> 'union (anonymous union at /usr/include/math.h:243:5)':'union (anonymous at /usr/include/math.h:243:5)' lvalue Var 0x7ffe43906c20 '__u' 'union (anonymous union at /usr/include/math.h:243:5)':'union (anonymous at /usr/include/math.h:243:5)'
| | |         `-IntegerLiteral 0x7ffe43908240 <col:36> 'int' 15
| | `-AlwaysInlineAttr 0x7ffe43906728 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7ffe43908438 prev 0x7ffe438fe600 <line:300:36, /usr/include/math.h:259:1> line:257:28 referenced __inline_isnormalf 'int (float)' inline
| | |-ParmVarDecl 0x7ffe439083a8 <col:47, col:53> col:53 used __x 'float'
| | |-CompoundStmt 0x7ffe439087c0 <col:58, line:259:1>
| | | `-ReturnStmt 0x7ffe439087a8 <line:258:5, <built-in>:145:21>
| | |   `-ImplicitCastExpr 0x7ffe43908790 </usr/include/math.h:258:12, <built-in>:145:21> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7ffe43908768 </usr/include/math.h:258:12, <built-in>:145:21> '_Bool' '&&'
| | |       |-ImplicitCastExpr 0x7ffe43908750 </usr/include/math.h:258:12, col:34> '_Bool' <IntegralToBoolean>
| | |       | `-CallExpr 0x7ffe43908610 <col:12, col:34> 'int'
| | |       |   |-ImplicitCastExpr 0x7ffe439085f8 <col:12> 'int (*)(float)' <FunctionToPointerDecay>
| | |       |   | `-DeclRefExpr 0x7ffe439085a0 <col:12> 'int (float)' lvalue Function 0x7ffe438fef90 '__inline_isfinitef' 'int (float)'
| | |       |   `-ImplicitCastExpr 0x7ffe43908640 <col:31> 'float' <LValueToRValue>
| | |       |     `-DeclRefExpr 0x7ffe43908578 <col:31> 'float' lvalue ParmVar 0x7ffe439083a8 '__x' 'float'
| | |       `-BinaryOperator 0x7ffe43908728 <col:39, <built-in>:145:21> '_Bool' '>='
| | |         |-CallExpr 0x7ffe439086c0 </usr/include/math.h:258:39, col:58> 'float'
| | |         | |-ImplicitCastExpr 0x7ffe439086a8 <col:39> 'float (*)(float) noexcept' <BuiltinFnToFnPtr>
| | |         | | `-DeclRefExpr 0x7ffe43908658 <col:39> '<builtin fn type>' Function 0x7ffe438ff1e8 '__builtin_fabsf' 'float (float) noexcept'
| | |         | `-ImplicitCastExpr 0x7ffe439086f0 <col:55> 'float' <LValueToRValue>
| | |         |   `-DeclRefExpr 0x7ffe43908680 <col:55> 'float' lvalue ParmVar 0x7ffe439083a8 '__x' 'float'
| | |         `-FloatingLiteral 0x7ffe43908708 <<built-in>:145:21> 'float' 1.175494e-38
| | `-AlwaysInlineAttr 0x7ffe439084d8 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7ffe43908c90 prev 0x7ffe438fe790 <line:300:36, /usr/include/math.h:262:1> line:260:28 referenced __inline_isnormald 'int (double)' inline
| | |-ParmVarDecl 0x7ffe43908c00 <col:47, col:54> col:54 used __x 'double'
| | |-CompoundStmt 0x7ffe43909010 <col:59, line:262:1>
| | | `-ReturnStmt 0x7ffe43908ff8 <line:261:5, <built-in>:159:21>
| | |   `-ImplicitCastExpr 0x7ffe43908fe0 </usr/include/math.h:261:12, <built-in>:159:21> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7ffe43908fb8 </usr/include/math.h:261:12, <built-in>:159:21> '_Bool' '&&'
| | |       |-ImplicitCastExpr 0x7ffe43908fa0 </usr/include/math.h:261:12, col:34> '_Bool' <IntegralToBoolean>
| | |       | `-CallExpr 0x7ffe43908e60 <col:12, col:34> 'int'
| | |       |   |-ImplicitCastExpr 0x7ffe43908e48 <col:12> 'int (*)(double)' <FunctionToPointerDecay>
| | |       |   | `-DeclRefExpr 0x7ffe43908df8 <col:12> 'int (double)' lvalue Function 0x7ffe438ff800 '__inline_isfinited' 'int (double)'
| | |       |   `-ImplicitCastExpr 0x7ffe43908e90 <col:31> 'double' <LValueToRValue>
| | |       |     `-DeclRefExpr 0x7ffe43908dd0 <col:31> 'double' lvalue ParmVar 0x7ffe43908c00 '__x' 'double'
| | |       `-BinaryOperator 0x7ffe43908f78 <col:39, <built-in>:159:21> '_Bool' '>='
| | |         |-CallExpr 0x7ffe43908f10 </usr/include/math.h:261:39, col:57> 'double'
| | |         | |-ImplicitCastExpr 0x7ffe43908ef8 <col:39> 'double (*)(double) noexcept' <BuiltinFnToFnPtr>
| | |         | | `-DeclRefExpr 0x7ffe43908ea8 <col:39> '<builtin fn type>' Function 0x7ffe438ffa58 '__builtin_fabs' 'double (double) noexcept'
| | |         | `-ImplicitCastExpr 0x7ffe43908f40 <col:54> 'double' <LValueToRValue>
| | |         |   `-DeclRefExpr 0x7ffe43908ed0 <col:54> 'double' lvalue ParmVar 0x7ffe43908c00 '__x' 'double'
| | |         `-FloatingLiteral 0x7ffe43908f58 <<built-in>:159:21> 'double' 2.225074e-308
| | `-AlwaysInlineAttr 0x7ffe43908d30 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7ffe439090d8 prev 0x7ffe438fe920 <line:300:36, /usr/include/math.h:265:1> line:263:28 referenced __inline_isnormall 'int (long double)' inline
| | |-ParmVarDecl 0x7ffe43909048 <col:47, col:59> col:59 used __x 'long double'
| | |-CompoundStmt 0x7ffe43909470 <col:64, line:265:1>
| | | `-ReturnStmt 0x7ffe43909458 <line:264:5, <built-in>:173:22>
| | |   `-ImplicitCastExpr 0x7ffe43909440 </usr/include/math.h:264:12, <built-in>:173:22> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7ffe43909418 </usr/include/math.h:264:12, <built-in>:173:22> '_Bool' '&&'
| | |       |-ImplicitCastExpr 0x7ffe43909400 </usr/include/math.h:264:12, col:34> '_Bool' <IntegralToBoolean>
| | |       | `-CallExpr 0x7ffe439092b0 <col:12, col:34> 'int'
| | |       |   |-ImplicitCastExpr 0x7ffe43909298 <col:12> 'int (*)(long double)' <FunctionToPointerDecay>
| | |       |   | `-DeclRefExpr 0x7ffe43909240 <col:12> 'int (long double)' lvalue Function 0x7ffe43900500 '__inline_isfinitel' 'int (long double)'
| | |       |   `-ImplicitCastExpr 0x7ffe439092e0 <col:31> 'long double' <LValueToRValue>
| | |       |     `-DeclRefExpr 0x7ffe43909218 <col:31> 'long double' lvalue ParmVar 0x7ffe43909048 '__x' 'long double'
| | |       `-BinaryOperator 0x7ffe439093d8 <col:39, <built-in>:173:22> '_Bool' '>='
| | |         |-CallExpr 0x7ffe43909360 </usr/include/math.h:264:39, col:58> 'long double'
| | |         | |-ImplicitCastExpr 0x7ffe43909348 <col:39> 'long double (*)(long double) noexcept' <BuiltinFnToFnPtr>
| | |         | | `-DeclRefExpr 0x7ffe439092f8 <col:39> '<builtin fn type>' Function 0x7ffe43900758 '__builtin_fabsl' 'long double (long double) noexcept'
| | |         | `-ImplicitCastExpr 0x7ffe43909390 <col:55> 'long double' <LValueToRValue>
| | |         |   `-DeclRefExpr 0x7ffe43909320 <col:55> 'long double' lvalue ParmVar 0x7ffe43909048 '__x' 'long double'
| | |         `-FloatingLiteral 0x7ffe439093a8 <<built-in>:173:22> 'long double' 0.000000e+00
| | `-AlwaysInlineAttr 0x7ffe43909178 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7ffe43909538 </usr/include/math.h:322:1, col:25> col:14 used acosf 'float (float)' extern
| | |-ParmVarDecl 0x7ffe439094a8 <col:20> col:25 'float'
| | |-ConstAttr 0x7ffe439095d8 <col:14> Implicit
| | `-NoThrowAttr 0x7ffe43909620 <col:14> Implicit
| |-FunctionDecl 0x7ffe439096d8 <line:323:1, col:26> col:15 referenced acos 'double (double)' extern
| | |-ParmVarDecl 0x7ffe43909648 <col:20> col:26 'double'
| | |-ConstAttr 0x7ffe43909778 <col:15> Implicit
| | `-NoThrowAttr 0x7ffe439097c0 <col:15> Implicit
| |-FunctionDecl 0x7ffe43909878 <line:324:1, col:37> col:20 used acosl 'long double (long double)' extern
| | |-ParmVarDecl 0x7ffe439097e8 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7ffe43909918 <col:20> Implicit
| | `-NoThrowAttr 0x7ffe43909960 <col:20> Implicit
| |-FunctionDecl 0x7ffe43909a18 <line:326:1, col:25> col:14 used asinf 'float (float)' extern
| | |-ParmVarDecl 0x7ffe43909988 <col:20> col:25 'float'
| | |-ConstAttr 0x7ffe43909ab8 <col:14> Implicit
| | `-NoThrowAttr 0x7ffe43909b00 <col:14> Implicit
| |-FunctionDecl 0x7ffe43909c00 <line:327:1, col:26> col:15 referenced asin 'double (double)' extern
| | |-ParmVarDecl 0x7ffe43909b28 <col:20> col:26 'double'
| | |-ConstAttr 0x7ffe43909ca0 <col:15> Implicit
| | `-NoThrowAttr 0x7ffe43909ce8 <col:15> Implicit
| |-FunctionDecl 0x7ffe43909da0 <line:328:1, col:37> col:20 used asinl 'long double (long double)' extern
| | |-ParmVarDecl 0x7ffe43909d10 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7ffe43909e40 <col:20> Implicit
| | `-NoThrowAttr 0x7ffe43909e88 <col:20> Implicit
| |-FunctionDecl 0x7ffe43909f40 <line:330:1, col:25> col:14 used atanf 'float (float)' extern
| | |-ParmVarDecl 0x7ffe43909eb0 <col:20> col:25 'float'
| | |-ConstAttr 0x7ffe43909fe0 <col:14> Implicit
| | `-NoThrowAttr 0x7ffe4390a028 <col:14> Implicit
| |-FunctionDecl 0x7ffe4390a0e0 <line:331:1, col:26> col:15 referenced atan 'double (double)' extern
| | |-ParmVarDecl 0x7ffe4390a050 <col:20> col:26 'double'
| | |-ConstAttr 0x7ffe4390a180 <col:15> Implicit
| | `-NoThrowAttr 0x7ffe4390a1c8 <col:15> Implicit
| |-FunctionDecl 0x7ffe4390a280 <line:332:1, col:37> col:20 used atanl 'long double (long double)' extern
| | |-ParmVarDecl 0x7ffe4390a1f0 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7ffe4390a320 <col:20> Implicit
| | `-NoThrowAttr 0x7ffe4390a368 <col:20> Implicit
| |-FunctionDecl 0x7ffe4390a4e8 <line:334:1, col:33> col:14 used atan2f 'float (float, float)' extern
| | |-ParmVarDecl 0x7ffe4390a390 <col:21> col:26 'float'
| | |-ParmVarDecl 0x7ffe4390a408 <col:28> col:33 'float'
| | |-ConstAttr 0x7ffe4390a5d0 <col:14> Implicit
| | `-NoThrowAttr 0x7ffe4390a618 <col:14> Implicit
| |-FunctionDecl 0x7ffe4390a798 <line:335:1, col:35> col:15 atan2 'double (double, double)' extern
| | |-ParmVarDecl 0x7ffe4390a640 <col:21> col:27 'double'
| | |-ParmVarDecl 0x7ffe4390a6b8 <col:29> col:35 'double'
| | |-ConstAttr 0x7ffe4390a880 <col:15> Implicit
| | `-NoThrowAttr 0x7ffe4390a8c8 <col:15> Implicit
| |-FunctionDecl 0x7ffe4390aa48 <line:336:1, col:51> col:20 used atan2l 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7ffe4390a8f0 <col:27, col:32> col:38 'long double'
| | |-ParmVarDecl 0x7ffe4390a968 <col:40, col:45> col:51 'long double'
| | |-ConstAttr 0x7ffe4390ab30 <col:20> Implicit
| | `-NoThrowAttr 0x7ffe4390ab78 <col:20> Implicit
| |-FunctionDecl 0x7ffe4390b430 <line:338:1, col:24> col:14 used cosf 'float (float)' extern
| | |-ParmVarDecl 0x7ffe4390aba0 <col:19> col:24 'float'
| | |-ConstAttr 0x7ffe4390b4d0 <col:14> Implicit
| | `-NoThrowAttr 0x7ffe4390b518 <col:14> Implicit
| |-FunctionDecl 0x7ffe4390b5d0 <line:339:1, col:25> col:15 referenced cos 'double (double)' extern
| | |-ParmVarDecl 0x7ffe4390b540 <col:19> col:25 'double'
| | |-ConstAttr 0x7ffe4390b670 <col:15> Implicit
| | `-NoThrowAttr 0x7ffe4390b6b8 <col:15> Implicit
| |-FunctionDecl 0x7ffe4390b770 <line:340:1, col:36> col:20 used cosl 'long double (long double)' extern
| | |-ParmVarDecl 0x7ffe4390b6e0 <col:25, col:30> col:36 'long double'
| | |-ConstAttr 0x7ffe4390b810 <col:20> Implicit
| | `-NoThrowAttr 0x7ffe4390b858 <col:20> Implicit
| |-FunctionDecl 0x7ffe4390b910 <line:342:1, col:24> col:14 used sinf 'float (float)' extern
| | |-ParmVarDecl 0x7ffe4390b880 <col:19> col:24 'float'
| | |-ConstAttr 0x7ffe4390b9b0 <col:14> Implicit
| | `-NoThrowAttr 0x7ffe4390b9f8 <col:14> Implicit
| |-FunctionDecl 0x7ffe4390bab0 <line:343:1, col:25> col:15 referenced sin 'double (double)' extern
| | |-ParmVarDecl 0x7ffe4390ba20 <col:19> col:25 'double'
| | |-ConstAttr 0x7ffe4390bb50 <col:15> Implicit
| | `-NoThrowAttr 0x7ffe4390bb98 <col:15> Implicit
| |-FunctionDecl 0x7ffe4390bc50 <line:344:1, col:36> col:20 used sinl 'long double (long double)' extern
| | |-ParmVarDecl 0x7ffe4390bbc0 <col:25, col:30> col:36 'long double'
| | |-ConstAttr 0x7ffe4390bcf0 <col:20> Implicit
| | `-NoThrowAttr 0x7ffe4390bd38 <col:20> Implicit
| |-FunctionDecl 0x7ffe4390bdf0 <line:346:1, col:24> col:14 used tanf 'float (float)' extern
| | |-ParmVarDecl 0x7ffe4390bd60 <col:19> col:24 'float'
| | |-ConstAttr 0x7ffe4390be90 <col:14> Implicit
| | `-NoThrowAttr 0x7ffe4390bed8 <col:14> Implicit
| |-FunctionDecl 0x7ffe4390bf90 <line:347:1, col:25> col:15 referenced tan 'double (double)' extern
| | |-ParmVarDecl 0x7ffe4390bf00 <col:19> col:25 'double'
| | |-ConstAttr 0x7ffe4390c030 <col:15> Implicit
| | `-NoThrowAttr 0x7ffe4390c078 <col:15> Implicit
| |-FunctionDecl 0x7ffe4390c130 <line:348:1, col:36> col:20 used tanl 'long double (long double)' extern
| | |-ParmVarDecl 0x7ffe4390c0a0 <col:25, col:30> col:36 'long double'
| | |-ConstAttr 0x7ffe4390c1d0 <col:20> Implicit
| | `-NoThrowAttr 0x7ffe4390c218 <col:20> Implicit
| |-FunctionDecl 0x7ffe4390c2d0 <line:350:1, col:26> col:14 used acoshf 'float (float)' extern
| | |-ParmVarDecl 0x7ffe4390c240 <col:21> col:26 'float'
| | |-ConstAttr 0x7ffe4390c370 <col:14> Implicit
| | `-NoThrowAttr 0x7ffe4390c3b8 <col:14> Implicit
| |-FunctionDecl 0x7ffe4390cc90 <line:351:1, col:27> col:15 referenced acosh 'double (double)' extern
| | |-ParmVarDecl 0x7ffe4390cc00 <col:21> col:27 'double'
| | |-ConstAttr 0x7ffe4390cd30 <col:15> Implicit
| | `-NoThrowAttr 0x7ffe4390cd78 <col:15> Implicit
| |-FunctionDecl 0x7ffe4390ce30 <line:352:1, col:38> col:20 used acoshl 'long double (long double)' extern
| | |-ParmVarDecl 0x7ffe4390cda0 <col:27, col:32> col:38 'long double'
| | |-ConstAttr 0x7ffe4390ced0 <col:20> Implicit
| | `-NoThrowAttr 0x7ffe4390cf18 <col:20> Implicit
| |-FunctionDecl 0x7ffe4390cfd0 <line:354:1, col:26> col:14 used asinhf 'float (float)' extern
| | |-ParmVarDecl 0x7ffe4390cf40 <col:21> col:26 'float'
| | |-ConstAttr 0x7ffe4390d070 <col:14> Implicit
| | `-NoThrowAttr 0x7ffe4390d0b8 <col:14> Implicit
| |-FunctionDecl 0x7ffe4390d170 <line:355:1, col:27> col:15 referenced asinh 'double (double)' extern
| | |-ParmVarDecl 0x7ffe4390d0e0 <col:21> col:27 'double'
| | |-ConstAttr 0x7ffe4390d210 <col:15> Implicit
| | `-NoThrowAttr 0x7ffe4390d258 <col:15> Implicit
| |-FunctionDecl 0x7ffe4390d310 <line:356:1, col:38> col:20 used asinhl 'long double (long double)' extern
| | |-ParmVarDecl 0x7ffe4390d280 <col:27, col:32> col:38 'long double'
| | |-ConstAttr 0x7ffe4390d3b0 <col:20> Implicit
| | `-NoThrowAttr 0x7ffe4390d3f8 <col:20> Implicit
| |-FunctionDecl 0x7ffe4390d4b0 <line:358:1, col:26> col:14 used atanhf 'float (float)' extern
| | |-ParmVarDecl 0x7ffe4390d420 <col:21> col:26 'float'
| | |-ConstAttr 0x7ffe4390d550 <col:14> Implicit
| | `-NoThrowAttr 0x7ffe4390d598 <col:14> Implicit
| |-FunctionDecl 0x7ffe4390d650 <line:359:1, col:27> col:15 referenced atanh 'double (double)' extern
| | |-ParmVarDecl 0x7ffe4390d5c0 <col:21> col:27 'double'
| | |-ConstAttr 0x7ffe4390d6f0 <col:15> Implicit
| | `-NoThrowAttr 0x7ffe4390d738 <col:15> Implicit
| |-FunctionDecl 0x7ffe4390d7f0 <line:360:1, col:38> col:20 used atanhl 'long double (long double)' extern
| | |-ParmVarDecl 0x7ffe4390d760 <col:27, col:32> col:38 'long double'
| | |-ConstAttr 0x7ffe4390d890 <col:20> Implicit
| | `-NoThrowAttr 0x7ffe4390d8d8 <col:20> Implicit
| |-FunctionDecl 0x7ffe4390d990 <line:362:1, col:25> col:14 used coshf 'float (float)' extern
| | |-ParmVarDecl 0x7ffe4390d900 <col:20> col:25 'float'
| | |-ConstAttr 0x7ffe4390da30 <col:14> Implicit
| | `-NoThrowAttr 0x7ffe4390da78 <col:14> Implicit
| |-FunctionDecl 0x7ffe4390db30 <line:363:1, col:26> col:15 referenced cosh 'double (double)' extern
| | |-ParmVarDecl 0x7ffe4390daa0 <col:20> col:26 'double'
| | |-ConstAttr 0x7ffe4390dbd0 <col:15> Implicit
| | `-NoThrowAttr 0x7ffe4390e438 <col:15> Implicit
| |-FunctionDecl 0x7ffe4390e4f0 <line:364:1, col:37> col:20 used coshl 'long double (long double)' extern
| | |-ParmVarDecl 0x7ffe4390e460 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7ffe4390e590 <col:20> Implicit
| | `-NoThrowAttr 0x7ffe4390e5d8 <col:20> Implicit
| |-FunctionDecl 0x7ffe4390e690 <line:366:1, col:25> col:14 used sinhf 'float (float)' extern
| | |-ParmVarDecl 0x7ffe4390e600 <col:20> col:25 'float'
| | |-ConstAttr 0x7ffe4390e730 <col:14> Implicit
| | `-NoThrowAttr 0x7ffe4390e778 <col:14> Implicit
| |-FunctionDecl 0x7ffe4390e830 <line:367:1, col:26> col:15 referenced sinh 'double (double)' extern
| | |-ParmVarDecl 0x7ffe4390e7a0 <col:20> col:26 'double'
| | |-ConstAttr 0x7ffe4390e8d0 <col:15> Implicit
| | `-NoThrowAttr 0x7ffe4390e918 <col:15> Implicit
| |-FunctionDecl 0x7ffe4390e9d0 <line:368:1, col:37> col:20 used sinhl 'long double (long double)' extern
| | |-ParmVarDecl 0x7ffe4390e940 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7ffe4390ea70 <col:20> Implicit
| | `-NoThrowAttr 0x7ffe4390eab8 <col:20> Implicit
| |-FunctionDecl 0x7ffe4390eb70 <line:370:1, col:25> col:14 used tanhf 'float (float)' extern
| | |-ParmVarDecl 0x7ffe4390eae0 <col:20> col:25 'float'
| | |-ConstAttr 0x7ffe4390ec10 <col:14> Implicit
| | `-NoThrowAttr 0x7ffe4390ec58 <col:14> Implicit
| |-FunctionDecl 0x7ffe4390ed10 <line:371:1, col:26> col:15 referenced tanh 'double (double)' extern
| | |-ParmVarDecl 0x7ffe4390ec80 <col:20> col:26 'double'
| | |-ConstAttr 0x7ffe4390edb0 <col:15> Implicit
| | `-NoThrowAttr 0x7ffe4390edf8 <col:15> Implicit
| |-FunctionDecl 0x7ffe4390eeb0 <line:372:1, col:37> col:20 used tanhl 'long double (long double)' extern
| | |-ParmVarDecl 0x7ffe4390ee20 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7ffe4390ef50 <col:20> Implicit
| | `-NoThrowAttr 0x7ffe4390ef98 <col:20> Implicit
| |-FunctionDecl 0x7ffe4390f050 <line:374:1, col:24> col:14 used expf 'float (float)' extern
| | |-ParmVarDecl 0x7ffe4390efc0 <col:19> col:24 'float'
| | |-ConstAttr 0x7ffe4390f0f0 <col:14> Implicit
| | `-NoThrowAttr 0x7ffe4390f138 <col:14> Implicit
| |-FunctionDecl 0x7ffe4390f1f0 <line:375:1, col:25> col:15 referenced exp 'double (double)' extern
| | |-ParmVarDecl 0x7ffe4390f160 <col:19> col:25 'double'
| | |-ConstAttr 0x7ffe4390f290 <col:15> Implicit
| | `-NoThrowAttr 0x7ffe4390f2d8 <col:15> Implicit
| |-FunctionDecl 0x7ffe4390f400 <line:376:1, col:36> col:20 used expl 'long double (long double)' extern
| | |-ParmVarDecl 0x7ffe4390f300 <col:25, col:30> col:36 'long double'
| | |-ConstAttr 0x7ffe4390f4a0 <col:20> Implicit
| | `-NoThrowAttr 0x7ffe4390f4e8 <col:20> Implicit
| |-FunctionDecl 0x7ffe4390f5a0 <line:378:1, col:25> col:14 used exp2f 'float (float)' extern
| | |-ParmVarDecl 0x7ffe4390f510 <col:20> col:25 'float'
| | |-ConstAttr 0x7ffe4390f640 <col:14> Implicit
| | `-NoThrowAttr 0x7ffe4390f688 <col:14> Implicit
| |-FunctionDecl 0x7ffe4390f740 <line:379:1, col:26> col:15 referenced exp2 'double (double)' extern
| | |-ParmVarDecl 0x7ffe4390f6b0 <col:20> col:26 'double'
| | |-ConstAttr 0x7ffe4390f7e0 <col:15> Implicit
| | `-NoThrowAttr 0x7ffe4390f828 <col:15> Implicit
| |-FunctionDecl 0x7ffe4390f8e0 <line:380:1, col:37> col:20 used exp2l 'long double (long double)' extern
| | |-ParmVarDecl 0x7ffe4390f850 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7ffe4390f980 <col:20> Implicit
| | `-NoThrowAttr 0x7ffe4390f9c8 <col:20> Implicit
| |-FunctionDecl 0x7ffe4390fa80 <line:382:1, col:26> col:14 used expm1f 'float (float)' extern
| | |-ParmVarDecl 0x7ffe4390f9f0 <col:21> col:26 'float'
| | |-ConstAttr 0x7ffe4390fb20 <col:14> Implicit
| | `-NoThrowAttr 0x7ffe4390fb68 <col:14> Implicit
| |-FunctionDecl 0x7ffe4390fc20 <line:383:1, col:27> col:15 referenced expm1 'double (double)' extern
| | |-ParmVarDecl 0x7ffe4390fb90 <col:21> col:27 'double'
| | |-ConstAttr 0x7ffe4390fcc0 <col:15> Implicit
| | `-NoThrowAttr 0x7ffe4390fd08 <col:15> Implicit
| |-FunctionDecl 0x7ffe4390fdc0 <line:384:1, col:38> col:20 used expm1l 'long double (long double)' extern
| | |-ParmVarDecl 0x7ffe4390fd30 <col:27, col:32> col:38 'long double'
| | |-ConstAttr 0x7ffe4390fe60 <col:20> Implicit
| | `-NoThrowAttr 0x7ffe4390fea8 <col:20> Implicit
| |-FunctionDecl 0x7ffe4390ff60 <line:386:1, col:24> col:14 used logf 'float (float)' extern
| | |-ParmVarDecl 0x7ffe4390fed0 <col:19> col:24 'float'
| | |-ConstAttr 0x7ffe43910000 <col:14> Implicit
| | `-NoThrowAttr 0x7ffe43910048 <col:14> Implicit
| |-FunctionDecl 0x7ffe43910100 <line:387:1, col:25> col:15 referenced log 'double (double)' extern
| | |-ParmVarDecl 0x7ffe43910070 <col:19> col:25 'double'
| | |-ConstAttr 0x7ffe439101a0 <col:15> Implicit
| | `-NoThrowAttr 0x7ffe439101e8 <col:15> Implicit
| |-FunctionDecl 0x7ffe439102a0 <line:388:1, col:36> col:20 used logl 'long double (long double)' extern
| | |-ParmVarDecl 0x7ffe43910210 <col:25, col:30> col:36 'long double'
| | |-ConstAttr 0x7ffe43910340 <col:20> Implicit
| | `-NoThrowAttr 0x7ffe43910388 <col:20> Implicit
| |-FunctionDecl 0x7ffe43910490 <line:390:1, col:26> col:14 used log10f 'float (float)' extern
| | |-ParmVarDecl 0x7ffe43910400 <col:21> col:26 'float'
| | |-ConstAttr 0x7ffe43910530 <col:14> Implicit
| | `-NoThrowAttr 0x7ffe43910578 <col:14> Implicit
| |-FunctionDecl 0x7ffe43910630 <line:391:1, col:27> col:15 referenced log10 'double (double)' extern
| | |-ParmVarDecl 0x7ffe439105a0 <col:21> col:27 'double'
| | |-ConstAttr 0x7ffe439106d0 <col:15> Implicit
| | `-NoThrowAttr 0x7ffe43910718 <col:15> Implicit
| |-FunctionDecl 0x7ffe439107d0 <line:392:1, col:38> col:20 used log10l 'long double (long double)' extern
| | |-ParmVarDecl 0x7ffe43910740 <col:27, col:32> col:38 'long double'
| | |-ConstAttr 0x7ffe43910870 <col:20> Implicit
| | `-NoThrowAttr 0x7ffe439108b8 <col:20> Implicit
| |-FunctionDecl 0x7ffe43910970 <line:394:1, col:25> col:14 used log2f 'float (float)' extern
| | |-ParmVarDecl 0x7ffe439108e0 <col:20> col:25 'float'
| | |-ConstAttr 0x7ffe43910a10 <col:14> Implicit
| | `-NoThrowAttr 0x7ffe43910a58 <col:14> Implicit
| |-FunctionDecl 0x7ffe43910b10 <line:395:1, col:26> col:15 referenced log2 'double (double)' extern
| | |-ParmVarDecl 0x7ffe43910a80 <col:20> col:26 'double'
| | |-ConstAttr 0x7ffe43910bb0 <col:15> Implicit
| | `-NoThrowAttr 0x7ffe43910bf8 <col:15> Implicit
| |-FunctionDecl 0x7ffe43910cb0 <line:396:1, col:37> col:20 used log2l 'long double (long double)' extern
| | |-ParmVarDecl 0x7ffe43910c20 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7ffe43910d50 <col:20> Implicit
| | `-NoThrowAttr 0x7ffe43910d98 <col:20> Implicit
| |-FunctionDecl 0x7ffe43910e50 <line:398:1, col:26> col:14 used log1pf 'float (float)' extern
| | |-ParmVarDecl 0x7ffe43910dc0 <col:21> col:26 'float'
| | |-ConstAttr 0x7ffe43910ef0 <col:14> Implicit
| | `-NoThrowAttr 0x7ffe43910f38 <col:14> Implicit
| |-FunctionDecl 0x7ffe43910ff0 <line:399:1, col:27> col:15 referenced log1p 'double (double)' extern
| | |-ParmVarDecl 0x7ffe43910f60 <col:21> col:27 'double'
| | |-ConstAttr 0x7ffe43911090 <col:15> Implicit
| | `-NoThrowAttr 0x7ffe439110d8 <col:15> Implicit
| |-FunctionDecl 0x7ffe43911190 <line:400:1, col:38> col:20 used log1pl 'long double (long double)' extern
| | |-ParmVarDecl 0x7ffe43911100 <col:27, col:32> col:38 'long double'
| | |-ConstAttr 0x7ffe43911230 <col:20> Implicit
| | `-NoThrowAttr 0x7ffe43911278 <col:20> Implicit
| |-FunctionDecl 0x7ffe43911330 <line:402:1, col:25> col:14 used logbf 'float (float)' extern
| | |-ParmVarDecl 0x7ffe439112a0 <col:20> col:25 'float'
| | |-ConstAttr 0x7ffe439113d0 <col:14> Implicit
| | `-NoThrowAttr 0x7ffe43912438 <col:14> Implicit
| |-FunctionDecl 0x7ffe439124f0 <line:403:1, col:26> col:15 referenced logb 'double (double)' extern
| | |-ParmVarDecl 0x7ffe43912460 <col:20> col:26 'double'
| | |-ConstAttr 0x7ffe43912590 <col:15> Implicit
| | `-NoThrowAttr 0x7ffe439125d8 <col:15> Implicit
| |-FunctionDecl 0x7ffe43912690 <line:404:1, col:37> col:20 used logbl 'long double (long double)' extern
| | |-ParmVarDecl 0x7ffe43912600 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7ffe43912730 <col:20> Implicit
| | `-NoThrowAttr 0x7ffe43912778 <col:20> Implicit
| |-FunctionDecl 0x7ffe43912918 <line:406:1, col:34> col:14 used modff 'float (float, float *)' extern
| | |-ParmVarDecl 0x7ffe439127a0 <col:20> col:25 'float'
| | |-ParmVarDecl 0x7ffe43912840 <col:27, col:33> col:34 'float *'
| | `-NoThrowAttr 0x7ffe43912a00 <col:14> Implicit
| |-FunctionDecl 0x7ffe43912bd8 <line:407:1, col:36> col:15 modf 'double (double, double *)' extern
| | |-ParmVarDecl 0x7ffe43912a60 <col:20> col:26 'double'
| | |-ParmVarDecl 0x7ffe43912b00 <col:28, col:35> col:36 'double *'
| | `-NoThrowAttr 0x7ffe43912cc0 <col:15> Implicit
| |-FunctionDecl 0x7ffe43912e98 <line:408:1, col:52> col:20 used modfl 'long double (long double, long double *)' extern
| | |-ParmVarDecl 0x7ffe43912d20 <col:26, col:31> col:37 'long double'
| | |-ParmVarDecl 0x7ffe43912dc0 <col:39, col:51> col:52 'long double *'
| | `-NoThrowAttr 0x7ffe43912f80 <col:20> Implicit
| |-FunctionDecl 0x7ffe43913138 <line:410:1, col:31> col:14 used ldexpf 'float (float, int)' extern
| | |-ParmVarDecl 0x7ffe43912fe0 <col:21> col:26 'float'
| | |-ParmVarDecl 0x7ffe43913058 <col:28> col:31 'int'
| | |-ConstAttr 0x7ffe43913220 <col:14> Implicit
| | `-NoThrowAttr 0x7ffe43913268 <col:14> Implicit
| |-FunctionDecl 0x7ffe43914400 <line:411:1, col:32> col:15 referenced ldexp 'double (double, int)' extern
| | |-ParmVarDecl 0x7ffe43913290 <col:21> col:27 'double'
| | |-ParmVarDecl 0x7ffe43913308 <col:29> col:32 'int'
| | |-ConstAttr 0x7ffe439144f0 <col:15> Implicit
| | `-NoThrowAttr 0x7ffe43914538 <col:15> Implicit
| |-FunctionDecl 0x7ffe439146b8 <line:412:1, col:43> col:20 used ldexpl 'long double (long double, int)' extern
| | |-ParmVarDecl 0x7ffe43914560 <col:27, col:32> col:38 'long double'
| | |-ParmVarDecl 0x7ffe439145d8 <col:40> col:43 'int'
| | |-ConstAttr 0x7ffe439147a0 <col:20> Implicit
| | `-NoThrowAttr 0x7ffe439147e8 <col:20> Implicit
| |-FunctionDecl 0x7ffe43914988 <line:414:1, col:33> col:14 used frexpf 'float (float, int *)' extern
| | |-ParmVarDecl 0x7ffe43914810 <col:21> col:26 'float'
| | |-ParmVarDecl 0x7ffe439148b0 <col:28, col:32> col:33 'int *'
| | `-NoThrowAttr 0x7ffe43914a70 <col:14> Implicit
| |-FunctionDecl 0x7ffe43914c28 <line:415:1, col:34> col:15 referenced frexp 'double (double, int *)' extern
| | |-ParmVarDecl 0x7ffe43914ad0 <col:21> col:27 'double'
| | |-ParmVarDecl 0x7ffe43914b48 <col:29, col:33> col:34 'int *'
| | `-NoThrowAttr 0x7ffe43914d10 <col:15> Implicit
| |-FunctionDecl 0x7ffe43914ec8 <line:416:1, col:45> col:20 used frexpl 'long double (long double, int *)' extern
| | |-ParmVarDecl 0x7ffe43914d70 <col:27, col:32> col:38 'long double'
| | |-ParmVarDecl 0x7ffe43914de8 <col:40, col:44> col:45 'int *'
| | `-NoThrowAttr 0x7ffe43914fb0 <col:20> Implicit
| |-FunctionDecl 0x7ffe439150a0 <line:418:1, col:24> col:12 used ilogbf 'int (float)' extern
| | |-ParmVarDecl 0x7ffe43915010 <col:19> col:24 'float'
| | |-ConstAttr 0x7ffe43915178 <col:12> Implicit
| | `-NoThrowAttr 0x7ffe439151c0 <col:12> Implicit
| |-FunctionDecl 0x7ffe43915278 <line:419:1, col:24> col:12 referenced ilogb 'int (double)' extern
| | |-ParmVarDecl 0x7ffe439151e8 <col:18> col:24 'double'
| | |-ConstAttr 0x7ffe43915358 <col:12> Implicit
| | `-NoThrowAttr 0x7ffe439153a0 <col:12> Implicit
| |-FunctionDecl 0x7ffe43916490 <line:420:1, col:30> col:12 used ilogbl 'int (long double)' extern
| | |-ParmVarDecl 0x7ffe43916400 <col:19, col:24> col:30 'long double'
| | |-ConstAttr 0x7ffe43916568 <col:12> Implicit
| | `-NoThrowAttr 0x7ffe439165b0 <col:12> Implicit
| |-FunctionDecl 0x7ffe439166e8 <line:422:1, col:32> col:14 used scalbnf 'float (float, int)' extern
| | |-ParmVarDecl 0x7ffe439165d8 <col:22> col:27 'float'
| | |-ParmVarDecl 0x7ffe43916650 <col:29> col:32 'int'
| | |-ConstAttr 0x7ffe43916790 <col:14> Implicit
| | `-NoThrowAttr 0x7ffe439167d8 <col:14> Implicit
| |-FunctionDecl 0x7ffe43916910 <line:423:1, col:33> col:15 referenced scalbn 'double (double, int)' extern
| | |-ParmVarDecl 0x7ffe43916800 <col:22> col:28 'double'
| | |-ParmVarDecl 0x7ffe43916878 <col:30> col:33 'int'
| | |-ConstAttr 0x7ffe439169b8 <col:15> Implicit
| | `-NoThrowAttr 0x7ffe43916a00 <col:15> Implicit
| |-FunctionDecl 0x7ffe43916b38 <line:424:1, col:44> col:20 used scalbnl 'long double (long double, int)' extern
| | |-ParmVarDecl 0x7ffe43916a28 <col:28, col:33> col:39 'long double'
| | |-ParmVarDecl 0x7ffe43916aa0 <col:41> col:44 'int'
| | |-ConstAttr 0x7ffe43916be0 <col:20> Implicit
| | `-NoThrowAttr 0x7ffe43916c28 <col:20> Implicit
| |-FunctionDecl 0x7ffe43916da8 <line:426:1, col:38> col:14 used scalblnf 'float (float, long)' extern
| | |-ParmVarDecl 0x7ffe43916c50 <col:23> col:28 'float'
| | |-ParmVarDecl 0x7ffe43916cc8 <col:30, col:35> col:38 'long'
| | |-ConstAttr 0x7ffe43916e90 <col:14> Implicit
| | `-NoThrowAttr 0x7ffe43916ed8 <col:14> Implicit
| |-FunctionDecl 0x7ffe43917058 <line:427:1, col:39> col:15 referenced scalbln 'double (double, long)' extern
| | |-ParmVarDecl 0x7ffe43916f00 <col:23> col:29 'double'
| | |-ParmVarDecl 0x7ffe43916f78 <col:31, col:36> col:39 'long'
| | |-ConstAttr 0x7ffe43917140 <col:15> Implicit
| | `-NoThrowAttr 0x7ffe43917188 <col:15> Implicit
| |-FunctionDecl 0x7ffe43917308 <line:428:1, col:50> col:20 used scalblnl 'long double (long double, long)' extern
| | |-ParmVarDecl 0x7ffe439171b0 <col:29, col:34> col:40 'long double'
| | |-ParmVarDecl 0x7ffe43917228 <col:42, col:47> col:50 'long'
| | |-ConstAttr 0x7ffe439173f0 <col:20> Implicit
| | `-NoThrowAttr 0x7ffe43917438 <col:20> Implicit
| |-FunctionDecl 0x7ffe439174f0 <line:430:1, col:25> col:14 used fabsf 'float (float)' extern
| | |-ParmVarDecl 0x7ffe43917460 <col:20> col:25 'float'
| | |-NoThrowAttr 0x7ffe43917590 <col:14> Implicit
| | `-ConstAttr 0x7ffe439175d8 <col:14> Implicit
| |-FunctionDecl 0x7ffe43917690 <line:431:1, col:26> col:15 used fabs 'double (double)' extern
| | |-ParmVarDecl 0x7ffe43917600 <col:20> col:26 'double'
| | |-NoThrowAttr 0x7ffe43917730 <col:15> Implicit
| | `-ConstAttr 0x7ffe43917778 <col:15> Implicit
| |-FunctionDecl 0x7ffe43917830 <line:432:1, col:37> col:20 used fabsl 'long double (long double)' extern
| | |-ParmVarDecl 0x7ffe439177a0 <col:26, col:31> col:37 'long double'
| | |-NoThrowAttr 0x7ffe439178d0 <col:20> Implicit
| | `-ConstAttr 0x7ffe43917918 <col:20> Implicit
| |-FunctionDecl 0x7ffe439179d0 <line:434:1, col:25> col:14 used cbrtf 'float (float)' extern
| | |-ParmVarDecl 0x7ffe43917940 <col:20> col:25 'float'
| | |-ConstAttr 0x7ffe43917a70 <col:14> Implicit
| | `-NoThrowAttr 0x7ffe43917ab8 <col:14> Implicit
| |-FunctionDecl 0x7ffe43917b70 <line:435:1, col:26> col:15 referenced cbrt 'double (double)' extern
| | |-ParmVarDecl 0x7ffe43917ae0 <col:20> col:26 'double'
| | |-ConstAttr 0x7ffe43917c10 <col:15> Implicit
| | `-NoThrowAttr 0x7ffe43917c58 <col:15> Implicit
| |-FunctionDecl 0x7ffe43917d10 <line:436:1, col:37> col:20 used cbrtl 'long double (long double)' extern
| | |-ParmVarDecl 0x7ffe43917c80 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7ffe43917db0 <col:20> Implicit
| | `-NoThrowAttr 0x7ffe43917df8 <col:20> Implicit
| |-FunctionDecl 0x7ffe43917f30 <line:438:1, col:33> col:14 used hypotf 'float (float, float)' extern
| | |-ParmVarDecl 0x7ffe43917e20 <col:21> col:26 'float'
| | |-ParmVarDecl 0x7ffe43917e98 <col:28> col:33 'float'
| | |-ConstAttr 0x7ffe43917fd8 <col:14> Implicit
| | `-NoThrowAttr 0x7ffe43918020 <col:14> Implicit
| |-FunctionDecl 0x7ffe43918158 <line:439:1, col:35> col:15 hypot 'double (double, double)' extern
| | |-ParmVarDecl 0x7ffe43918048 <col:21> col:27 'double'
| | |-ParmVarDecl 0x7ffe439180c0 <col:29> col:35 'double'
| | |-ConstAttr 0x7ffe43918200 <col:15> Implicit
| | `-NoThrowAttr 0x7ffe43918248 <col:15> Implicit
| |-FunctionDecl 0x7ffe43918400 <line:440:1, col:51> col:20 used hypotl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7ffe43918270 <col:27, col:32> col:38 'long double'
| | |-ParmVarDecl 0x7ffe439182e8 <col:40, col:45> col:51 'long double'
| | |-ConstAttr 0x7ffe439184a8 <col:20> Implicit
| | `-NoThrowAttr 0x7ffe439184f0 <col:20> Implicit
| |-FunctionDecl 0x7ffe43918628 <line:442:1, col:31> col:14 used powf 'float (float, float)' extern
| | |-ParmVarDecl 0x7ffe43918518 <col:19> col:24 'float'
| | |-ParmVarDecl 0x7ffe43918590 <col:26> col:31 'float'
| | |-ConstAttr 0x7ffe439186d0 <col:14> Implicit
| | `-NoThrowAttr 0x7ffe43918718 <col:14> Implicit
| |-FunctionDecl 0x7ffe43918850 <line:443:1, col:33> col:15 pow 'double (double, double)' extern
| | |-ParmVarDecl 0x7ffe43918740 <col:19> col:25 'double'
| | |-ParmVarDecl 0x7ffe439187b8 <col:27> col:33 'double'
| | |-ConstAttr 0x7ffe439188f8 <col:15> Implicit
| | `-NoThrowAttr 0x7ffe43918940 <col:15> Implicit
| |-FunctionDecl 0x7ffe43918a78 <line:444:1, col:49> col:20 used powl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7ffe43918968 <col:25, col:30> col:36 'long double'
| | |-ParmVarDecl 0x7ffe439189e0 <col:38, col:43> col:49 'long double'
| | |-ConstAttr 0x7ffe43918b20 <col:20> Implicit
| | `-NoThrowAttr 0x7ffe43918b68 <col:20> Implicit
| |-FunctionDecl 0x7ffe43918c20 <line:446:1, col:25> col:14 used sqrtf 'float (float)' extern
| | |-ParmVarDecl 0x7ffe43918b90 <col:20> col:25 'float'
| | |-ConstAttr 0x7ffe43918cc0 <col:14> Implicit
| | `-NoThrowAttr 0x7ffe43918d08 <col:14> Implicit
| |-FunctionDecl 0x7ffe43918dc0 <line:447:1, col:26> col:15 used sqrt 'double (double)' extern
| | |-ParmVarDecl 0x7ffe43918d30 <col:20> col:26 'double'
| | |-ConstAttr 0x7ffe43918e60 <col:15> Implicit
| | `-NoThrowAttr 0x7ffe43918ea8 <col:15> Implicit
| |-FunctionDecl 0x7ffe43918f60 <line:448:1, col:37> col:20 used sqrtl 'long double (long double)' extern
| | |-ParmVarDecl 0x7ffe43918ed0 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7ffe43919000 <col:20> Implicit
| | `-NoThrowAttr 0x7ffe43919048 <col:20> Implicit
| |-FunctionDecl 0x7ffe43919100 <line:450:1, col:24> col:14 used erff 'float (float)' extern
| | |-ParmVarDecl 0x7ffe43919070 <col:19> col:24 'float'
| | |-ConstAttr 0x7ffe439191a0 <col:14> Implicit
| | `-NoThrowAttr 0x7ffe439191e8 <col:14> Implicit
| |-FunctionDecl 0x7ffe439192a0 <line:451:1, col:25> col:15 referenced erf 'double (double)' extern
| | |-ParmVarDecl 0x7ffe43919210 <col:19> col:25 'double'
| | |-ConstAttr 0x7ffe43919340 <col:15> Implicit
| | `-NoThrowAttr 0x7ffe43919388 <col:15> Implicit
| |-FunctionDecl 0x7ffe43919490 <line:452:1, col:36> col:20 used erfl 'long double (long double)' extern
| | |-ParmVarDecl 0x7ffe43919400 <col:25, col:30> col:36 'long double'
| | |-ConstAttr 0x7ffe43919530 <col:20> Implicit
| | `-NoThrowAttr 0x7ffe43919578 <col:20> Implicit
| |-FunctionDecl 0x7ffe43919630 <line:454:1, col:25> col:14 used erfcf 'float (float)' extern
| | |-ParmVarDecl 0x7ffe439195a0 <col:20> col:25 'float'
| | |-ConstAttr 0x7ffe439196d0 <col:14> Implicit
| | `-NoThrowAttr 0x7ffe43919718 <col:14> Implicit
| |-FunctionDecl 0x7ffe439197d0 <line:455:1, col:26> col:15 referenced erfc 'double (double)' extern
| | |-ParmVarDecl 0x7ffe43919740 <col:20> col:26 'double'
| | |-ConstAttr 0x7ffe43919870 <col:15> Implicit
| | `-NoThrowAttr 0x7ffe439198b8 <col:15> Implicit
| |-FunctionDecl 0x7ffe43919970 <line:456:1, col:37> col:20 used erfcl 'long double (long double)' extern
| | |-ParmVarDecl 0x7ffe439198e0 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7ffe43919a10 <col:20> Implicit
| | `-NoThrowAttr 0x7ffe43919a58 <col:20> Implicit
| |-FunctionDecl 0x7ffe43919b10 <line:461:1, col:27> col:14 used lgammaf 'float (float)' extern
| | |-ParmVarDecl 0x7ffe43919a80 <col:22> col:27 'float'
| | `-NoThrowAttr 0x7ffe43919bb0 <col:14> Implicit
| |-FunctionDecl 0x7ffe43919ca0 <line:462:1, col:28> col:15 referenced lgamma 'double (double)' extern
| | |-ParmVarDecl 0x7ffe43919c10 <col:22> col:28 'double'
| | `-NoThrowAttr 0x7ffe43919d40 <col:15> Implicit
| |-FunctionDecl 0x7ffe43919e30 <line:463:1, col:39> col:20 used lgammal 'long double (long double)' extern
| | |-ParmVarDecl 0x7ffe43919da0 <col:28, col:33> col:39 'long double'
| | `-NoThrowAttr 0x7ffe43919ed0 <col:20> Implicit
| |-FunctionDecl 0x7ffe43919fc0 <line:465:1, col:27> col:14 used tgammaf 'float (float)' extern
| | |-ParmVarDecl 0x7ffe43919f30 <col:22> col:27 'float'
| | |-ConstAttr 0x7ffe4391a060 <col:14> Implicit
| | `-NoThrowAttr 0x7ffe4391a0a8 <col:14> Implicit
| |-FunctionDecl 0x7ffe4391a160 <line:466:1, col:28> col:15 referenced tgamma 'double (double)' extern
| | |-ParmVarDecl 0x7ffe4391a0d0 <col:22> col:28 'double'
| | |-ConstAttr 0x7ffe4391a200 <col:15> Implicit
| | `-NoThrowAttr 0x7ffe4391a248 <col:15> Implicit
| |-FunctionDecl 0x7ffe4391a300 <line:467:1, col:39> col:20 used tgammal 'long double (long double)' extern
| | |-ParmVarDecl 0x7ffe4391a270 <col:28, col:33> col:39 'long double'
| | |-ConstAttr 0x7ffe4391a3a0 <col:20> Implicit
| | `-NoThrowAttr 0x7ffe4391a3e8 <col:20> Implicit
| |-FunctionDecl 0x7ffe4391a4a8 <line:469:1, col:25> col:14 used ceilf 'float (float)' extern
| | |-ParmVarDecl 0x7ffe4391a418 <col:20> col:25 'float'
| | |-NoThrowAttr 0x7ffe4391a548 <col:14> Implicit
| | `-ConstAttr 0x7ffe4391a590 <col:14> Implicit
| |-FunctionDecl 0x7ffe4391a648 <line:470:1, col:26> col:15 referenced ceil 'double (double)' extern
| | |-ParmVarDecl 0x7ffe4391a5b8 <col:20> col:26 'double'
| | |-NoThrowAttr 0x7ffe4391a6e8 <col:15> Implicit
| | `-ConstAttr 0x7ffe4391a730 <col:15> Implicit
| |-FunctionDecl 0x7ffe4391a7e8 <line:471:1, col:37> col:20 used ceill 'long double (long double)' extern
| | |-ParmVarDecl 0x7ffe4391a758 <col:26, col:31> col:37 'long double'
| | |-NoThrowAttr 0x7ffe4391a888 <col:20> Implicit
| | `-ConstAttr 0x7ffe4391a8d0 <col:20> Implicit
| |-FunctionDecl 0x7ffe4391a988 <line:473:1, col:26> col:14 used floorf 'float (float)' extern
| | |-ParmVarDecl 0x7ffe4391a8f8 <col:21> col:26 'float'
| | |-NoThrowAttr 0x7ffe4391aa28 <col:14> Implicit
| | `-ConstAttr 0x7ffe4391aa70 <col:14> Implicit
| |-FunctionDecl 0x7ffe4391ab28 <line:474:1, col:27> col:15 referenced floor 'double (double)' extern
| | |-ParmVarDecl 0x7ffe4391aa98 <col:21> col:27 'double'
| | |-NoThrowAttr 0x7ffe4391abc8 <col:15> Implicit
| | `-ConstAttr 0x7ffe4391ac10 <col:15> Implicit
| |-FunctionDecl 0x7ffe4391acc8 <line:475:1, col:38> col:20 used floorl 'long double (long double)' extern
| | |-ParmVarDecl 0x7ffe4391ac38 <col:27, col:32> col:38 'long double'
| | |-NoThrowAttr 0x7ffe4391ad68 <col:20> Implicit
| | `-ConstAttr 0x7ffe4391adb0 <col:20> Implicit
| |-FunctionDecl 0x7ffe4391ae68 <line:477:1, col:30> col:14 used nearbyintf 'float (float)' extern
| | |-ParmVarDecl 0x7ffe4391add8 <col:25> col:30 'float'
| | |-NoThrowAttr 0x7ffe4391af08 <col:14> Implicit
| | `-ConstAttr 0x7ffe4391af50 <col:14> Implicit
| |-FunctionDecl 0x7ffe4391b008 <line:478:1, col:31> col:15 referenced nearbyint 'double (double)' extern
| | |-ParmVarDecl 0x7ffe4391af78 <col:25> col:31 'double'
| | |-NoThrowAttr 0x7ffe4391b0a8 <col:15> Implicit
| | `-ConstAttr 0x7ffe4391b0f0 <col:15> Implicit
| |-FunctionDecl 0x7ffe4391b1a8 <line:479:1, col:42> col:20 used nearbyintl 'long double (long double)' extern
| | |-ParmVarDecl 0x7ffe4391b118 <col:31, col:36> col:42 'long double'
| | |-NoThrowAttr 0x7ffe4391b248 <col:20> Implicit
| | `-ConstAttr 0x7ffe4391b290 <col:20> Implicit
| |-FunctionDecl 0x7ffe4391b348 <line:481:1, col:25> col:14 used rintf 'float (float)' extern
| | |-ParmVarDecl 0x7ffe4391b2b8 <col:20> col:25 'float'
| | |-NoThrowAttr 0x7ffe4391b3e8 <col:14> Implicit
| | `-ConstAttr 0x7ffe4391b438 <col:14> Implicit
| |-FunctionDecl 0x7ffe4391b4f0 <line:482:1, col:26> col:15 referenced rint 'double (double)' extern
| | |-ParmVarDecl 0x7ffe4391b460 <col:20> col:26 'double'
| | |-NoThrowAttr 0x7ffe4391b590 <col:15> Implicit
| | `-ConstAttr 0x7ffe4391b5d8 <col:15> Implicit
| |-FunctionDecl 0x7ffe4391b690 <line:483:1, col:37> col:20 used rintl 'long double (long double)' extern
| | |-ParmVarDecl 0x7ffe4391b600 <col:26, col:31> col:37 'long double'
| | |-NoThrowAttr 0x7ffe4391b730 <col:20> Implicit
| | `-ConstAttr 0x7ffe4391b778 <col:20> Implicit
| |-FunctionDecl 0x7ffe4391b868 <line:485:1, col:29> col:17 used lrintf 'long (float)' extern
| | |-ParmVarDecl 0x7ffe4391b7a0 <col:24> col:29 'float'
| | |-ConstAttr 0x7ffe4391b948 <col:17> Implicit
| | `-NoThrowAttr 0x7ffe4391b990 <col:17> Implicit
| |-FunctionDecl 0x7ffe4391ba88 <line:486:1, col:29> col:17 referenced lrint 'long (double)' extern
| | |-ParmVarDecl 0x7ffe4391b9b8 <col:23> col:29 'double'
| | |-ConstAttr 0x7ffe4391bb68 <col:17> Implicit
| | `-NoThrowAttr 0x7ffe4391bbb0 <col:17> Implicit
| |-FunctionDecl 0x7ffe4391bca8 <line:487:1, col:35> col:17 used lrintl 'long (long double)' extern
| | |-ParmVarDecl 0x7ffe4391bbd8 <col:24, col:29> col:35 'long double'
| | |-ConstAttr 0x7ffe4391bd88 <col:17> Implicit
| | `-NoThrowAttr 0x7ffe4391bdd0 <col:17> Implicit
| |-FunctionDecl 0x7ffe4391be88 <line:489:1, col:26> col:14 used roundf 'float (float)' extern
| | |-ParmVarDecl 0x7ffe4391bdf8 <col:21> col:26 'float'
| | |-NoThrowAttr 0x7ffe4391bf28 <col:14> Implicit
| | `-ConstAttr 0x7ffe4391bf70 <col:14> Implicit
| |-FunctionDecl 0x7ffe4391c028 <line:490:1, col:27> col:15 referenced round 'double (double)' extern
| | |-ParmVarDecl 0x7ffe4391bf98 <col:21> col:27 'double'
| | |-NoThrowAttr 0x7ffe4391c0c8 <col:15> Implicit
| | `-ConstAttr 0x7ffe4391c110 <col:15> Implicit
| |-FunctionDecl 0x7ffe4391c1c8 <line:491:1, col:38> col:20 used roundl 'long double (long double)' extern
| | |-ParmVarDecl 0x7ffe4391c138 <col:27, col:32> col:38 'long double'
| | |-NoThrowAttr 0x7ffe4391c268 <col:20> Implicit
| | `-ConstAttr 0x7ffe4391c2b0 <col:20> Implicit
| |-FunctionDecl 0x7ffe4391c368 <line:493:1, col:30> col:17 used lroundf 'long (float)' extern
| | |-ParmVarDecl 0x7ffe4391c2d8 <col:25> col:30 'float'
| | |-ConstAttr 0x7ffe4391c408 <col:17> Implicit
| | `-NoThrowAttr 0x7ffe4391c450 <col:17> Implicit
| |-FunctionDecl 0x7ffe4391c508 <line:494:1, col:30> col:17 referenced lround 'long (double)' extern
| | |-ParmVarDecl 0x7ffe4391c478 <col:24> col:30 'double'
| | |-ConstAttr 0x7ffe4391c5a8 <col:17> Implicit
| | `-NoThrowAttr 0x7ffe4391c5f0 <col:17> Implicit
| |-FunctionDecl 0x7ffe4391c6a8 <line:495:1, col:36> col:17 used lroundl 'long (long double)' extern
| | |-ParmVarDecl 0x7ffe4391c618 <col:25, col:30> col:36 'long double'
| | |-ConstAttr 0x7ffe4391c748 <col:17> Implicit
| | `-NoThrowAttr 0x7ffe4391c790 <col:17> Implicit
| |-FunctionDecl 0x7ffe4391c888 <line:500:1, col:35> col:22 used llrintf 'long long (float)' extern
| | |-ParmVarDecl 0x7ffe4391c7b8 <col:30> col:35 'float'
| | |-ConstAttr 0x7ffe4391c968 <col:22> Implicit
| | `-NoThrowAttr 0x7ffe4391c9b0 <col:22> Implicit
| |-FunctionDecl 0x7ffe4391caa8 <line:501:1, col:35> col:22 referenced llrint 'long long (double)' extern
| | |-ParmVarDecl 0x7ffe4391c9d8 <col:29> col:35 'double'
| | |-ConstAttr 0x7ffe4391cb88 <col:22> Implicit
| | `-NoThrowAttr 0x7ffe4391cbd0 <col:22> Implicit
| |-FunctionDecl 0x7ffe4391ccc8 <line:502:1, col:41> col:22 used llrintl 'long long (long double)' extern
| | |-ParmVarDecl 0x7ffe4391cbf8 <col:30, col:35> col:41 'long double'
| | |-ConstAttr 0x7ffe4391cda8 <col:22> Implicit
| | `-NoThrowAttr 0x7ffe4391cdf0 <col:22> Implicit
| |-FunctionDecl 0x7ffe4391cea8 <line:504:1, col:36> col:22 used llroundf 'long long (float)' extern
| | |-ParmVarDecl 0x7ffe4391ce18 <col:31> col:36 'float'
| | |-ConstAttr 0x7ffe4391cf48 <col:22> Implicit
| | `-NoThrowAttr 0x7ffe4391cf90 <col:22> Implicit
| |-FunctionDecl 0x7ffe4391d048 <line:505:1, col:36> col:22 referenced llround 'long long (double)' extern
| | |-ParmVarDecl 0x7ffe4391cfb8 <col:30> col:36 'double'
| | |-ConstAttr 0x7ffe4391d0e8 <col:22> Implicit
| | `-NoThrowAttr 0x7ffe4391d130 <col:22> Implicit
| |-FunctionDecl 0x7ffe4391d1e8 <line:506:1, col:42> col:22 used llroundl 'long long (long double)' extern
| | |-ParmVarDecl 0x7ffe4391d158 <col:31, col:36> col:42 'long double'
| | |-ConstAttr 0x7ffe4391d288 <col:22> Implicit
| | `-NoThrowAttr 0x7ffe4391d2d0 <col:22> Implicit
| |-FunctionDecl 0x7ffe4391d400 <line:509:1, col:26> col:14 used truncf 'float (float)' extern
| | |-ParmVarDecl 0x7ffe4391d2f8 <col:21> col:26 'float'
| | |-NoThrowAttr 0x7ffe4391d4a0 <col:14> Implicit
| | `-ConstAttr 0x7ffe4391d4e8 <col:14> Implicit
| |-FunctionDecl 0x7ffe4391d5a0 <line:510:1, col:27> col:15 referenced trunc 'double (double)' extern
| | |-ParmVarDecl 0x7ffe4391d510 <col:21> col:27 'double'
| | |-NoThrowAttr 0x7ffe4391d640 <col:15> Implicit
| | `-ConstAttr 0x7ffe4391d688 <col:15> Implicit
| |-FunctionDecl 0x7ffe4391d740 <line:511:1, col:38> col:20 used truncl 'long double (long double)' extern
| | |-ParmVarDecl 0x7ffe4391d6b0 <col:27, col:32> col:38 'long double'
| | |-NoThrowAttr 0x7ffe4391d7e0 <col:20> Implicit
| | `-ConstAttr 0x7ffe4391d828 <col:20> Implicit
| |-FunctionDecl 0x7ffe4391d960 <line:513:1, col:32> col:14 used fmodf 'float (float, float)' extern
| | |-ParmVarDecl 0x7ffe4391d850 <col:20> col:25 'float'
| | |-ParmVarDecl 0x7ffe4391d8c8 <col:27> col:32 'float'
| | |-ConstAttr 0x7ffe4391da08 <col:14> Implicit
| | `-NoThrowAttr 0x7ffe4391da50 <col:14> Implicit
| |-FunctionDecl 0x7ffe4391db88 <line:514:1, col:34> col:15 fmod 'double (double, double)' extern
| | |-ParmVarDecl 0x7ffe4391da78 <col:20> col:26 'double'
| | |-ParmVarDecl 0x7ffe4391daf0 <col:28> col:34 'double'
| | |-ConstAttr 0x7ffe4391dc30 <col:15> Implicit
| | `-NoThrowAttr 0x7ffe4391dc78 <col:15> Implicit
| |-FunctionDecl 0x7ffe4391ddb0 <line:515:1, col:50> col:20 used fmodl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7ffe4391dca0 <col:26, col:31> col:37 'long double'
| | |-ParmVarDecl 0x7ffe4391dd18 <col:39, col:44> col:50 'long double'
| | |-ConstAttr 0x7ffe4391de58 <col:20> Implicit
| | `-NoThrowAttr 0x7ffe4391dea0 <col:20> Implicit
| |-FunctionDecl 0x7ffe4391dfd8 <line:517:1, col:37> col:14 used remainderf 'float (float, float)' extern
| | |-ParmVarDecl 0x7ffe4391dec8 <col:25> col:30 'float'
| | |-ParmVarDecl 0x7ffe4391df40 <col:32> col:37 'float'
| | |-ConstAttr 0x7ffe4391e080 <col:14> Implicit
| | `-NoThrowAttr 0x7ffe4391e0c8 <col:14> Implicit
| |-FunctionDecl 0x7ffe4391e200 <line:518:1, col:39> col:15 remainder 'double (double, double)' extern
| | |-ParmVarDecl 0x7ffe4391e0f0 <col:25> col:31 'double'
| | |-ParmVarDecl 0x7ffe4391e168 <col:33> col:39 'double'
| | |-ConstAttr 0x7ffe4391e2a8 <col:15> Implicit
| | `-NoThrowAttr 0x7ffe4391e2f0 <col:15> Implicit
| |-FunctionDecl 0x7ffe4391e438 <line:519:1, col:55> col:20 used remainderl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7ffe4391e318 <col:31, col:36> col:42 'long double'
| | |-ParmVarDecl 0x7ffe4391e390 <col:44, col:49> col:55 'long double'
| | |-ConstAttr 0x7ffe4391e4e0 <col:20> Implicit
| | `-NoThrowAttr 0x7ffe4391e528 <col:20> Implicit
| |-FunctionDecl 0x7ffe4391e728 <line:521:1, col:41> col:14 used remquof 'float (float, float, int *)' extern
| | |-ParmVarDecl 0x7ffe4391e550 <col:22> col:27 'float'
| | |-ParmVarDecl 0x7ffe4391e5c8 <col:29> col:34 'float'
| | `-ParmVarDecl 0x7ffe4391e640 <col:36, col:40> col:41 'int *'
| |-FunctionDecl 0x7ffe4391e9c8 <line:522:1, col:43> col:15 remquo 'double (double, double, int *)' extern
| | |-ParmVarDecl 0x7ffe4391e7f0 <col:22> col:28 'double'
| | |-ParmVarDecl 0x7ffe4391e868 <col:30> col:36 'double'
| | `-ParmVarDecl 0x7ffe4391e8e0 <col:38, col:42> col:43 'int *'
| |-FunctionDecl 0x7ffe4391ec68 <line:523:1, col:59> col:20 used remquol 'long double (long double, long double, int *)' extern
| | |-ParmVarDecl 0x7ffe4391ea90 <col:28, col:33> col:39 'long double'
| | |-ParmVarDecl 0x7ffe4391eb08 <col:41, col:46> col:52 'long double'
| | `-ParmVarDecl 0x7ffe4391eb80 <col:54, col:58> col:59 'int *'
| |-FunctionDecl 0x7ffe4391ee40 <line:525:1, col:36> col:14 used copysignf 'float (float, float)' extern
| | |-ParmVarDecl 0x7ffe4391ed30 <col:24> col:29 'float'
| | |-ParmVarDecl 0x7ffe4391eda8 <col:31> col:36 'float'
| | |-NoThrowAttr 0x7ffe4391eee8 <col:14> Implicit
| | `-ConstAttr 0x7ffe4391ef30 <col:14> Implicit
| |-FunctionDecl 0x7ffe4391f068 <line:526:1, col:38> col:15 copysign 'double (double, double)' extern
| | |-ParmVarDecl 0x7ffe4391ef58 <col:24> col:30 'double'
| | |-ParmVarDecl 0x7ffe4391efd0 <col:32> col:38 'double'
| | |-NoThrowAttr 0x7ffe4391f110 <col:15> Implicit
| | `-ConstAttr 0x7ffe4391f158 <col:15> Implicit
| |-FunctionDecl 0x7ffe4391f290 <line:527:1, col:54> col:20 used copysignl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7ffe4391f180 <col:30, col:35> col:41 'long double'
| | |-ParmVarDecl 0x7ffe4391f1f8 <col:43, col:48> col:54 'long double'
| | |-NoThrowAttr 0x7ffe4391f338 <col:20> Implicit
| | `-ConstAttr 0x7ffe4391f380 <col:20> Implicit
| |-FunctionDecl 0x7ffe4391f4c8 <line:529:1, col:31> col:14 nanf 'float (const char *)' extern
| | |-ParmVarDecl 0x7ffe4391f400 <col:19, col:30> col:31 'const char *'
| | |-NoThrowAttr 0x7ffe4391f5a8 <col:14> Implicit
| | `-ConstAttr 0x7ffe4391f5f0 <col:14> Implicit
| |-FunctionDecl 0x7ffe4391f6e8 <line:530:1, col:31> col:15 nan 'double (const char *)' extern
| | |-ParmVarDecl 0x7ffe4391f618 <col:19, col:30> col:31 'const char *'
| | |-NoThrowAttr 0x7ffe4391f7c8 <col:15> Implicit
| | `-ConstAttr 0x7ffe4391f810 <col:15> Implicit
| |-FunctionDecl 0x7ffe4391f908 <line:531:1, col:37> col:20 nanl 'long double (const char *)' extern
| | |-ParmVarDecl 0x7ffe4391f838 <col:25, col:36> col:37 'const char *'
| | |-NoThrowAttr 0x7ffe4391f9e8 <col:20> Implicit
| | `-ConstAttr 0x7ffe4391fa30 <col:20> Implicit
| |-FunctionDecl 0x7ffe4391fb68 <line:533:1, col:37> col:14 used nextafterf 'float (float, float)' extern
| | |-ParmVarDecl 0x7ffe4391fa58 <col:25> col:30 'float'
| | |-ParmVarDecl 0x7ffe4391fad0 <col:32> col:37 'float'
| | |-ConstAttr 0x7ffe4391fc10 <col:14> Implicit
| | `-NoThrowAttr 0x7ffe4391fc58 <col:14> Implicit
| |-FunctionDecl 0x7ffe4391fd90 <line:534:1, col:39> col:15 nextafter 'double (double, double)' extern
| | |-ParmVarDecl 0x7ffe4391fc80 <col:25> col:31 'double'
| | |-ParmVarDecl 0x7ffe4391fcf8 <col:33> col:39 'double'
| | |-ConstAttr 0x7ffe4391fe38 <col:15> Implicit
| | `-NoThrowAttr 0x7ffe4391fe80 <col:15> Implicit
| |-FunctionDecl 0x7ffe4391ffb8 <line:535:1, col:55> col:20 used nextafterl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7ffe4391fea8 <col:31, col:36> col:42 'long double'
| | |-ParmVarDecl 0x7ffe4391ff20 <col:44, col:49> col:55 'long double'
| | |-ConstAttr 0x7ffe43920060 <col:20> Implicit
| | `-NoThrowAttr 0x7ffe439200a8 <col:20> Implicit
| |-FunctionDecl 0x7ffe43920228 <line:537:1, col:45> col:15 referenced nexttoward 'double (double, long double)' extern
| | |-ParmVarDecl 0x7ffe439200d0 <col:26> col:32 'double'
| | |-ParmVarDecl 0x7ffe43920148 <col:34, col:39> col:45 'long double'
| | |-ConstAttr 0x7ffe43920310 <col:15> Implicit
| | `-NoThrowAttr 0x7ffe43920358 <col:15> Implicit
| |-FunctionDecl 0x7ffe439114d8 <line:538:1, col:44> col:14 used nexttowardf 'float (float, long double)' extern
| | |-ParmVarDecl 0x7ffe43920380 <col:26> col:31 'float'
| | |-ParmVarDecl 0x7ffe43911400 <col:33, col:38> col:44 'long double'
| | |-ConstAttr 0x7ffe439115c0 <col:14> Implicit
| | `-NoThrowAttr 0x7ffe43911608 <col:14> Implicit
| |-FunctionDecl 0x7ffe43911740 <line:539:1, col:56> col:20 used nexttowardl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7ffe43911630 <col:32, col:37> col:43 'long double'
| | |-ParmVarDecl 0x7ffe439116a8 <col:45, col:50> col:56 'long double'
| | |-ConstAttr 0x7ffe439117e8 <col:20> Implicit
| | `-NoThrowAttr 0x7ffe43911830 <col:20> Implicit
| |-FunctionDecl 0x7ffe43911968 <line:541:1, col:32> col:14 used fdimf 'float (float, float)' extern
| | |-ParmVarDecl 0x7ffe43911858 <col:20> col:25 'float'
| | |-ParmVarDecl 0x7ffe439118d0 <col:27> col:32 'float'
| | |-ConstAttr 0x7ffe43911a10 <col:14> Implicit
| | `-NoThrowAttr 0x7ffe43911a58 <col:14> Implicit
| |-FunctionDecl 0x7ffe43911b90 <line:542:1, col:34> col:15 fdim 'double (double, double)' extern
| | |-ParmVarDecl 0x7ffe43911a80 <col:20> col:26 'double'
| | |-ParmVarDecl 0x7ffe43911af8 <col:28> col:34 'double'
| | |-ConstAttr 0x7ffe43911c38 <col:15> Implicit
| | `-NoThrowAttr 0x7ffe43911c80 <col:15> Implicit
| |-FunctionDecl 0x7ffe43911db8 <line:543:1, col:50> col:20 used fdiml 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7ffe43911ca8 <col:26, col:31> col:37 'long double'
| | |-ParmVarDecl 0x7ffe43911d20 <col:39, col:44> col:50 'long double'
| | |-ConstAttr 0x7ffe43911e60 <col:20> Implicit
| | `-NoThrowAttr 0x7ffe43911ea8 <col:20> Implicit
| |-FunctionDecl 0x7ffe43911fe0 <line:545:1, col:32> col:14 used fmaxf 'float (float, float)' extern
| | |-ParmVarDecl 0x7ffe43911ed0 <col:20> col:25 'float'
| | |-ParmVarDecl 0x7ffe43911f48 <col:27> col:32 'float'
| | |-NoThrowAttr 0x7ffe43912088 <col:14> Implicit
| | `-ConstAttr 0x7ffe439120d0 <col:14> Implicit
| |-FunctionDecl 0x7ffe43912208 <line:546:1, col:34> col:15 fmax 'double (double, double)' extern
| | |-ParmVarDecl 0x7ffe439120f8 <col:20> col:26 'double'
| | |-ParmVarDecl 0x7ffe43912170 <col:28> col:34 'double'
| | |-NoThrowAttr 0x7ffe439122b0 <col:15> Implicit
| | `-ConstAttr 0x7ffe439122f8 <col:15> Implicit
| |-FunctionDecl 0x7ffe43924438 <line:547:1, col:50> col:20 used fmaxl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7ffe43912320 <col:26, col:31> col:37 'long double'
| | |-ParmVarDecl 0x7ffe43912398 <col:39, col:44> col:50 'long double'
| | |-NoThrowAttr 0x7ffe439244e0 <col:20> Implicit
| | `-ConstAttr 0x7ffe43924528 <col:20> Implicit
| |-FunctionDecl 0x7ffe43924660 <line:549:1, col:32> col:14 used fminf 'float (float, float)' extern
| | |-ParmVarDecl 0x7ffe43924550 <col:20> col:25 'float'
| | |-ParmVarDecl 0x7ffe439245c8 <col:27> col:32 'float'
| | |-NoThrowAttr 0x7ffe43924708 <col:14> Implicit
| | `-ConstAttr 0x7ffe43924750 <col:14> Implicit
| |-FunctionDecl 0x7ffe43924888 <line:550:1, col:34> col:15 fmin 'double (double, double)' extern
| | |-ParmVarDecl 0x7ffe43924778 <col:20> col:26 'double'
| | |-ParmVarDecl 0x7ffe439247f0 <col:28> col:34 'double'
| | |-NoThrowAttr 0x7ffe43924930 <col:15> Implicit
| | `-ConstAttr 0x7ffe43924978 <col:15> Implicit
| |-FunctionDecl 0x7ffe43924ab0 <line:551:1, col:50> col:20 used fminl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7ffe439249a0 <col:26, col:31> col:37 'long double'
| | |-ParmVarDecl 0x7ffe43924a18 <col:39, col:44> col:50 'long double'
| | |-NoThrowAttr 0x7ffe43924b58 <col:20> Implicit
| | `-ConstAttr 0x7ffe43924ba0 <col:20> Implicit
| |-FunctionDecl 0x7ffe43924da8 <line:553:1, col:38> col:14 used fmaf 'float (float, float, float)' extern
| | |-ParmVarDecl 0x7ffe43924bc8 <col:19> col:24 'float'
| | |-ParmVarDecl 0x7ffe43924c40 <col:26> col:31 'float'
| | |-ParmVarDecl 0x7ffe43924cb8 <col:33> col:38 'float'
| | |-ConstAttr 0x7ffe43924ea8 <col:14> Implicit
| | `-NoThrowAttr 0x7ffe43924ef0 <col:14> Implicit
| |-FunctionDecl 0x7ffe439250f8 <line:554:1, col:41> col:15 fma 'double (double, double, double)' extern
| | |-ParmVarDecl 0x7ffe43924f18 <col:19> col:25 'double'
| | |-ParmVarDecl 0x7ffe43924f90 <col:27> col:33 'double'
| | |-ParmVarDecl 0x7ffe43925008 <col:35> col:41 'double'
| | |-ConstAttr 0x7ffe439251f8 <col:15> Implicit
| | `-NoThrowAttr 0x7ffe43925240 <col:15> Implicit
| |-FunctionDecl 0x7ffe43915488 <line:555:1, col:62> col:20 used fmal 'long double (long double, long double, long double)' extern
| | |-ParmVarDecl 0x7ffe43925268 <col:25, col:30> col:36 'long double'
| | |-ParmVarDecl 0x7ffe439252e0 <col:38, col:43> col:49 'long double'
| | |-ParmVarDecl 0x7ffe43925358 <col:51, col:56> col:62 'long double'
| | |-ConstAttr 0x7ffe43915588 <col:20> Implicit
| | `-NoThrowAttr 0x7ffe439155d0 <col:20> Implicit
| |-FunctionDecl 0x7ffe43915688 <line:565:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:565:14 __inff 'float (void)' extern
| | `-AvailabilityAttr 0x7ffe43915720 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
| |-FunctionDecl 0x7ffe43915868 </usr/include/math.h:566:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:566:15 __inf 'double (void)' extern
| | `-AvailabilityAttr 0x7ffe43915900 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
| |-FunctionDecl 0x7ffe43915a48 </usr/include/math.h:567:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:567:20 __infl 'long double (void)' extern
| | `-AvailabilityAttr 0x7ffe43915ae0 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
| |-FunctionDecl 0x7ffe43915c28 </usr/include/math.h:569:1, /usr/include/AvailabilityInternal.h:20677:124> /usr/include/math.h:569:14 __nan 'float (void)' extern
| | `-AvailabilityAttr 0x7ffe43915cc0 </usr/include/AvailabilityInternal.h:20677:87, col:122> macos 10.0 0 0 "" ""
| |-FunctionDecl 0x7ffe43915e18 </usr/include/math.h:597:1, /usr/include/AvailabilityInternal.h:21622:124> /usr/include/math.h:597:14 __exp10f 'float (float)' extern
| | |-ParmVarDecl 0x7ffe43915d78 <col:23> col:28 'float'
| | |-AvailabilityAttr 0x7ffe43915eb8 </usr/include/AvailabilityInternal.h:21622:87, col:122> macos 10.9 0 0 "" ""
| | |-ConstAttr 0x7ffe43915f58 </usr/include/math.h:597:14> Implicit
| | `-NoThrowAttr 0x7ffe43915f68 <col:14> Implicit
| |-FunctionDecl 0x7ffe43916030 <line:598:1, /usr/include/AvailabilityInternal.h:21622:124> /usr/include/math.h:598:15 __exp10 'double (double)' extern
| | |-ParmVarDecl 0x7ffe43915f90 <col:23> col:29 'double'
| | |-AvailabilityAttr 0x7ffe439160d0 </usr/include/AvailabilityInternal.h:21622:87, col:122> macos 10.9 0 0 "" ""
| | |-ConstAttr 0x7ffe43916170 </usr/include/math.h:598:15> Implicit
| | `-NoThrowAttr 0x7ffe43916180 <col:15> Implicit
| |-FunctionDecl 0x7ffe43927400 </usr/include/sys/cdefs.h:300:36, /usr/include/math.h:604:78> col:29 __sincosf 'void (float, float *, float *)' inline
| | |-ParmVarDecl 0x7ffe439161a8 <col:39, col:45> col:45 __x 'float'
| | |-ParmVarDecl 0x7ffe43916220 <col:50, col:57> col:57 __sinp 'float *'
| | |-ParmVarDecl 0x7ffe43916298 <col:65, col:72> col:72 __cosp 'float *'
| | `-AlwaysInlineAttr 0x7ffe439274b0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7ffe439276e0 <line:300:36, /usr/include/math.h:605:80> col:29 __sincos 'void (double, double *, double *)' inline
| | |-ParmVarDecl 0x7ffe43927510 <col:38, col:45> col:45 __x 'double'
| | |-ParmVarDecl 0x7ffe43927588 <col:50, col:58> col:58 __sinp 'double *'
| | |-ParmVarDecl 0x7ffe43927600 <col:66, col:74> col:74 __cosp 'double *'
| | `-AlwaysInlineAttr 0x7ffe43927790 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7ffe43927890 </usr/include/math.h:614:1, /usr/include/AvailabilityInternal.h:21622:124> /usr/include/math.h:614:14 __cospif 'float (float)' extern
| | |-ParmVarDecl 0x7ffe439277f0 <col:23> col:28 'float'
| | |-AvailabilityAttr 0x7ffe43927930 </usr/include/AvailabilityInternal.h:21622:87, col:122> macos 10.9 0 0 "" ""
| | |-ConstAttr 0x7ffe439279d0 </usr/include/math.h:614:14> Implicit
| | `-NoThrowAttr 0x7ffe439279e0 <col:14> Implicit
| |-FunctionDecl 0x7ffe43927aa8 <line:615:1, /usr/include/AvailabilityInternal.h:21622:124> /usr/include/math.h:615:15 __cospi 'double (double)' extern
| | |-ParmVarDecl 0x7ffe43927a08 <col:23> col:29 'double'
| | |-AvailabilityAttr 0x7ffe43927b48 </usr/include/AvailabilityInternal.h:21622:87, col:122> macos 10.9 0 0 "" ""
| | |-ConstAttr 0x7ffe43927be8 </usr/include/math.h:615:15> Implicit
| | `-NoThrowAttr 0x7ffe43927bf8 <col:15> Implicit
| |-FunctionDecl 0x7ffe43927cc0 <line:616:1, /usr/include/AvailabilityInternal.h:21622:124> /usr/include/math.h:616:14 __sinpif 'float (float)' extern
| | |-ParmVarDecl 0x7ffe43927c20 <col:23> col:28 'float'
| | |-AvailabilityAttr 0x7ffe43927d60 </usr/include/AvailabilityInternal.h:21622:87, col:122> macos 10.9 0 0 "" ""
| | |-ConstAttr 0x7ffe43927e00 </usr/include/math.h:616:14> Implicit
| | `-NoThrowAttr 0x7ffe43927e10 <col:14> Implicit
| |-FunctionDecl 0x7ffe43927ed8 <line:617:1, /usr/include/AvailabilityInternal.h:21622:124> /usr/include/math.h:617:15 __sinpi 'double (double)' extern
| | |-ParmVarDecl 0x7ffe43927e38 <col:23> col:29 'double'
| | |-AvailabilityAttr 0x7ffe43927f78 </usr/include/AvailabilityInternal.h:21622:87, col:122> macos 10.9 0 0 "" ""
| | |-ConstAttr 0x7ffe43928018 </usr/include/math.h:617:15> Implicit
| | `-NoThrowAttr 0x7ffe43928028 <col:15> Implicit
| |-FunctionDecl 0x7ffe439280f0 <line:618:1, /usr/include/AvailabilityInternal.h:21622:124> /usr/include/math.h:618:14 __tanpif 'float (float)' extern
| | |-ParmVarDecl 0x7ffe43928050 <col:23> col:28 'float'
| | |-AvailabilityAttr 0x7ffe43928190 </usr/include/AvailabilityInternal.h:21622:87, col:122> macos 10.9 0 0 "" ""
| | |-ConstAttr 0x7ffe43928230 </usr/include/math.h:618:14> Implicit
| | `-NoThrowAttr 0x7ffe43928240 <col:14> Implicit
| |-FunctionDecl 0x7ffe43928308 <line:619:1, /usr/include/AvailabilityInternal.h:21622:124> /usr/include/math.h:619:15 __tanpi 'double (double)' extern
| | |-ParmVarDecl 0x7ffe43928268 <col:23> col:29 'double'
| | |-AvailabilityAttr 0x7ffe4392e400 </usr/include/AvailabilityInternal.h:21622:87, col:122> macos 10.9 0 0 "" ""
| | |-ConstAttr 0x7ffe4392e4a0 </usr/include/math.h:619:15> Implicit
| | `-NoThrowAttr 0x7ffe4392e4b0 <col:15> Implicit
| |-FunctionDecl 0x7ffe4392e660 </usr/include/sys/cdefs.h:300:36, /usr/include/math.h:645:80> col:29 __sincospif 'void (float, float *, float *)' inline
| | |-ParmVarDecl 0x7ffe4392e4d8 <col:41, col:47> col:47 __x 'float'
| | |-ParmVarDecl 0x7ffe4392e550 <col:52, col:59> col:59 __sinp 'float *'
| | |-ParmVarDecl 0x7ffe4392e5c8 <col:67, col:74> col:74 __cosp 'float *'
| | `-AlwaysInlineAttr 0x7ffe4392e710 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7ffe4392e8f8 <line:300:36, /usr/include/math.h:646:82> col:29 __sincospi 'void (double, double *, double *)' inline
| | |-ParmVarDecl 0x7ffe4392e770 <col:40, col:47> col:47 __x 'double'
| | |-ParmVarDecl 0x7ffe4392e7e8 <col:52, col:60> col:60 __sinp 'double *'
| | |-ParmVarDecl 0x7ffe4392e860 <col:68, col:76> col:76 __cosp 'double *'
| | `-AlwaysInlineAttr 0x7ffe4392e9a8 </usr/include/sys/cdefs.h:313:68> always_inline
| |-CXXRecordDecl 0x7ffe4392e9f0 </usr/include/math.h:653:1, col:51> col:8 struct __float2 definition
| | |-CXXRecordDecl 0x7ffe4392eb18 <col:1, col:8> col:8 implicit struct __float2
| | |-FieldDecl 0x7ffe4392ebc8 <col:19, col:25> col:25 referenced __sinval 'float'
| | |-FieldDecl 0x7ffe4392ec28 <col:35, col:41> col:41 referenced __cosval 'float'
| | |-CXXDestructorDecl 0x7ffe43935c68 <col:8> col:8 implicit referenced ~__float2 'void (void) noexcept' inline default trivial
| | |-CXXConstructorDecl 0x7ffe43935d68 <col:8> col:8 implicit __float2 'void (void)' inline default trivial noexcept-unevaluated 0x7ffe43935d68
| | |-CXXConstructorDecl 0x7ffe43935e78 <col:8> col:8 implicit constexpr __float2 'void (const struct __float2 &)' inline default trivial noexcept-unevaluated 0x7ffe43935e78
| | | `-ParmVarDecl 0x7ffe43935fa0 <col:8> col:8 'const struct __float2 &'
| | `-CXXConstructorDecl 0x7ffe43936038 <col:8> col:8 implicit used constexpr __float2 'void (struct __float2 &&) noexcept' inline default trivial
| |   |-ParmVarDecl 0x7ffe43936160 <col:8> col:8 used 'struct __float2 &&'
| |   |-CXXCtorInitializer Field 0x7ffe4392ebc8 '__sinval' 'float'
| |   | `-ImplicitCastExpr 0x7ffe439362b8 <col:8> 'float' <LValueToRValue>
| |   |   `-MemberExpr 0x7ffe43936280 <col:8> 'float' xvalue .__sinval 0x7ffe4392ebc8
| |   |     `-CXXStaticCastExpr 0x7ffe43936250 <col:8> 'struct __float2' xvalue static_cast<struct __float2 &&> <NoOp>
| |   |       `-DeclRefExpr 0x7ffe43936218 <col:8> 'struct __float2' lvalue ParmVar 0x7ffe43936160 '' 'struct __float2 &&'
| |   |-CXXCtorInitializer Field 0x7ffe4392ec28 '__cosval' 'float'
| |   | `-ImplicitCastExpr 0x7ffe43936398 <col:8> 'float' <LValueToRValue>
| |   |   `-MemberExpr 0x7ffe43936360 <col:8> 'float' xvalue .__cosval 0x7ffe4392ec28
| |   |     `-CXXStaticCastExpr 0x7ffe43936330 <col:8> 'struct __float2' xvalue static_cast<struct __float2 &&> <NoOp>
| |   |       `-DeclRefExpr 0x7ffe439362f8 <col:8> 'struct __float2' lvalue ParmVar 0x7ffe43936160 '' 'struct __float2 &&'
| |   `-CompoundStmt 0x7ffe439363e8 <col:8>
| |-CXXRecordDecl 0x7ffe4392ec90 <line:654:1, col:54> col:8 struct __double2 definition
| | |-CXXRecordDecl 0x7ffe4392edb8 <col:1, col:8> col:8 implicit struct __double2
| | |-FieldDecl 0x7ffe4392ee68 <col:20, col:27> col:27 referenced __sinval 'double'
| | |-FieldDecl 0x7ffe4392eec8 <col:37, col:44> col:44 referenced __cosval 'double'
| | |-CXXDestructorDecl 0x7ffe438d2888 <col:8> col:8 implicit referenced ~__double2 'void (void) noexcept' inline default trivial
| | |-CXXConstructorDecl 0x7ffe438d2988 <col:8> col:8 implicit __double2 'void (void)' inline default trivial noexcept-unevaluated 0x7ffe438d2988
| | |-CXXConstructorDecl 0x7ffe438d2a98 <col:8> col:8 implicit constexpr __double2 'void (const struct __double2 &)' inline default trivial noexcept-unevaluated 0x7ffe438d2a98
| | | `-ParmVarDecl 0x7ffe438d2bc0 <col:8> col:8 'const struct __double2 &'
| | `-CXXConstructorDecl 0x7ffe438d2c58 <col:8> col:8 implicit used constexpr __double2 'void (struct __double2 &&) noexcept' inline default trivial
| |   |-ParmVarDecl 0x7ffe438d2d80 <col:8> col:8 used 'struct __double2 &&'
| |   |-CXXCtorInitializer Field 0x7ffe4392ee68 '__sinval' 'double'
| |   | `-ImplicitCastExpr 0x7ffe438d2ed8 <col:8> 'double' <LValueToRValue>
| |   |   `-MemberExpr 0x7ffe438d2ea0 <col:8> 'double' xvalue .__sinval 0x7ffe4392ee68
| |   |     `-CXXStaticCastExpr 0x7ffe438d2e70 <col:8> 'struct __double2' xvalue static_cast<struct __double2 &&> <NoOp>
| |   |       `-DeclRefExpr 0x7ffe438d2e38 <col:8> 'struct __double2' lvalue ParmVar 0x7ffe438d2d80 '' 'struct __double2 &&'
| |   |-CXXCtorInitializer Field 0x7ffe4392eec8 '__cosval' 'double'
| |   | `-ImplicitCastExpr 0x7ffe438d2fb8 <col:8> 'double' <LValueToRValue>
| |   |   `-MemberExpr 0x7ffe438d2f80 <col:8> 'double' xvalue .__cosval 0x7ffe4392eec8
| |   |     `-CXXStaticCastExpr 0x7ffe438d2f50 <col:8> 'struct __double2' xvalue static_cast<struct __double2 &&> <NoOp>
| |   |       `-DeclRefExpr 0x7ffe438d2f18 <col:8> 'struct __double2' lvalue ParmVar 0x7ffe438d2d80 '' 'struct __double2 &&'
| |   `-CompoundStmt 0x7ffe438d3008 <col:8>
| |-FunctionDecl 0x7ffe4392f090 <line:656:1, col:45> col:24 used __sincosf_stret 'struct __float2 (float)' extern
| | `-ParmVarDecl 0x7ffe4392ef48 <col:40> col:45 'float'
| |-FunctionDecl 0x7ffe4392f290 <line:657:1, col:46> col:25 used __sincos_stret 'struct __double2 (double)' extern
| | `-ParmVarDecl 0x7ffe4392f148 <col:40> col:46 'double'
| |-FunctionDecl 0x7ffe43935600 <line:658:1, col:47> col:24 used __sincospif_stret 'struct __float2 (float)' extern
| | `-ParmVarDecl 0x7ffe4392f348 <col:42> col:47 'float'
| |-FunctionDecl 0x7ffe43935750 <line:659:1, col:48> col:25 used __sincospi_stret 'struct __double2 (double)' extern
| | `-ParmVarDecl 0x7ffe439356b8 <col:42> col:48 'double'
| |-FunctionDecl 0x7ffe43935990 prev 0x7ffe43927400 </usr/include/sys/cdefs.h:300:36, /usr/include/math.h:664:1> line:661:29 __sincosf 'void (float, float *, float *)' inline
| | |-ParmVarDecl 0x7ffe43935808 <col:39, col:45> col:45 used __x 'float'
| | |-ParmVarDecl 0x7ffe43935880 <col:50, col:57> col:57 used __sinp 'float *'
| | |-ParmVarDecl 0x7ffe439358f8 <col:65, col:72> col:72 used __cosp 'float *'
| | |-CompoundStmt 0x7ffe438d23e0 <col:80, line:664:1>
| | | |-DeclStmt 0x7ffe43936450 <line:662:5, col:57>
| | | | `-VarDecl 0x7ffe43935aa8 <col:5, col:56> col:27 used __stret 'const struct __float2':'const struct __float2' cinit
| | | |   `-ExprWithCleanups 0x7ffe43936438 <col:37, col:56> 'const struct __float2':'const struct __float2'
| | | |     `-CXXConstructExpr 0x7ffe43936400 <col:37, col:56> 'const struct __float2':'const struct __float2' 'void (struct __float2 &&) noexcept' elidable
| | | |       `-MaterializeTemporaryExpr 0x7ffe439361c8 <col:37, col:56> 'struct __float2':'struct __float2' xvalue
| | | |         `-CallExpr 0x7ffe43935c20 <col:37, col:56> 'struct __float2':'struct __float2'
| | | |           |-ImplicitCastExpr 0x7ffe43935c08 <col:37> 'struct __float2 (*)(float)' <FunctionToPointerDecay>
| | | |           | `-DeclRefExpr 0x7ffe43935b88 <col:37> 'struct __float2 (float)' lvalue Function 0x7ffe4392f090 '__sincosf_stret' 'struct __float2 (float)'
| | | |           `-ImplicitCastExpr 0x7ffe43935c50 <col:53> 'float' <LValueToRValue>
| | | |             `-DeclRefExpr 0x7ffe43935b60 <col:53> 'float' lvalue ParmVar 0x7ffe43935808 '__x' 'float'
| | | |-BinaryOperator 0x7ffe43936540 <line:663:5, col:23> 'float' lvalue '='
| | | | |-UnaryOperator 0x7ffe439364a8 <col:5, col:6> 'float' lvalue prefix '*'
| | | | | `-ImplicitCastExpr 0x7ffe43936490 <col:6> 'float *' <LValueToRValue>
| | | | |   `-DeclRefExpr 0x7ffe43936468 <col:6> 'float *' lvalue ParmVar 0x7ffe43935880 '__sinp' 'float *'
| | | | `-ImplicitCastExpr 0x7ffe43936528 <col:15, col:23> 'float' <LValueToRValue>
| | | |   `-MemberExpr 0x7ffe439364f0 <col:15, col:23> 'const float' lvalue .__sinval 0x7ffe4392ebc8
| | | |     `-DeclRefExpr 0x7ffe439364c8 <col:15> 'const struct __float2':'const struct __float2' lvalue Var 0x7ffe43935aa8 '__stret' 'const struct __float2':'const struct __float2'
| | | `-BinaryOperator 0x7ffe438d23b8 <col:33, col:51> 'float' lvalue '='
| | |   |-UnaryOperator 0x7ffe438d2320 <col:33, col:34> 'float' lvalue prefix '*'
| | |   | `-ImplicitCastExpr 0x7ffe438d2308 <col:34> 'float *' <LValueToRValue>
| | |   |   `-DeclRefExpr 0x7ffe438d22e0 <col:34> 'float *' lvalue ParmVar 0x7ffe439358f8 '__cosp' 'float *'
| | |   `-ImplicitCastExpr 0x7ffe438d23a0 <col:43, col:51> 'float' <LValueToRValue>
| | |     `-MemberExpr 0x7ffe438d2368 <col:43, col:51> 'const float' lvalue .__cosval 0x7ffe4392ec28
| | |       `-DeclRefExpr 0x7ffe438d2340 <col:43> 'const struct __float2':'const struct __float2' lvalue Var 0x7ffe43935aa8 '__stret' 'const struct __float2':'const struct __float2'
| | `-AlwaysInlineAttr 0x7ffe43935a40 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7ffe438d25b0 prev 0x7ffe439276e0 <line:300:36, /usr/include/math.h:669:1> line:666:29 __sincos 'void (double, double *, double *)' inline
| | |-ParmVarDecl 0x7ffe438d2428 <col:38, col:45> col:45 used __x 'double'
| | |-ParmVarDecl 0x7ffe438d24a0 <col:50, col:58> col:58 used __sinp 'double *'
| | |-ParmVarDecl 0x7ffe438d2518 <col:66, col:74> col:74 used __cosp 'double *'
| | |-CompoundStmt 0x7ffe438d33e0 <col:82, line:669:1>
| | | |-DeclStmt 0x7ffe438d3070 <line:667:5, col:57>
| | | | `-VarDecl 0x7ffe438d26c8 <col:5, col:56> col:28 used __stret 'const struct __double2':'const struct __double2' cinit
| | | |   `-ExprWithCleanups 0x7ffe438d3058 <col:38, col:56> 'const struct __double2':'const struct __double2'
| | | |     `-CXXConstructExpr 0x7ffe438d3020 <col:38, col:56> 'const struct __double2':'const struct __double2' 'void (struct __double2 &&) noexcept' elidable
| | | |       `-MaterializeTemporaryExpr 0x7ffe438d2de8 <col:38, col:56> 'struct __double2':'struct __double2' xvalue
| | | |         `-CallExpr 0x7ffe438d2840 <col:38, col:56> 'struct __double2':'struct __double2'
| | | |           |-ImplicitCastExpr 0x7ffe438d2828 <col:38> 'struct __double2 (*)(double)' <FunctionToPointerDecay>
| | | |           | `-DeclRefExpr 0x7ffe438d27a8 <col:38> 'struct __double2 (double)' lvalue Function 0x7ffe4392f290 '__sincos_stret' 'struct __double2 (double)'
| | | |           `-ImplicitCastExpr 0x7ffe438d2870 <col:53> 'double' <LValueToRValue>
| | | |             `-DeclRefExpr 0x7ffe438d2780 <col:53> 'double' lvalue ParmVar 0x7ffe438d2428 '__x' 'double'
| | | |-BinaryOperator 0x7ffe438d3160 <line:668:5, col:23> 'double' lvalue '='
| | | | |-UnaryOperator 0x7ffe438d30c8 <col:5, col:6> 'double' lvalue prefix '*'
| | | | | `-ImplicitCastExpr 0x7ffe438d30b0 <col:6> 'double *' <LValueToRValue>
| | | | |   `-DeclRefExpr 0x7ffe438d3088 <col:6> 'double *' lvalue ParmVar 0x7ffe438d24a0 '__sinp' 'double *'
| | | | `-ImplicitCastExpr 0x7ffe438d3148 <col:15, col:23> 'double' <LValueToRValue>
| | | |   `-MemberExpr 0x7ffe438d3110 <col:15, col:23> 'const double' lvalue .__sinval 0x7ffe4392ee68
| | | |     `-DeclRefExpr 0x7ffe438d30e8 <col:15> 'const struct __double2':'const struct __double2' lvalue Var 0x7ffe438d26c8 '__stret' 'const struct __double2':'const struct __double2'
| | | `-BinaryOperator 0x7ffe438d33b8 <col:33, col:51> 'double' lvalue '='
| | |   |-UnaryOperator 0x7ffe438d3320 <col:33, col:34> 'double' lvalue prefix '*'
| | |   | `-ImplicitCastExpr 0x7ffe438d3308 <col:34> 'double *' <LValueToRValue>
| | |   |   `-DeclRefExpr 0x7ffe438d32e0 <col:34> 'double *' lvalue ParmVar 0x7ffe438d2518 '__cosp' 'double *'
| | |   `-ImplicitCastExpr 0x7ffe438d33a0 <col:43, col:51> 'double' <LValueToRValue>
| | |     `-MemberExpr 0x7ffe438d3368 <col:43, col:51> 'const double' lvalue .__cosval 0x7ffe4392eec8
| | |       `-DeclRefExpr 0x7ffe438d3340 <col:43> 'const struct __double2':'const struct __double2' lvalue Var 0x7ffe438d26c8 '__stret' 'const struct __double2':'const struct __double2'
| | `-AlwaysInlineAttr 0x7ffe438d2660 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7ffe438d35b0 prev 0x7ffe4392e660 <line:300:36, /usr/include/math.h:674:1> line:671:29 __sincospif 'void (float, float *, float *)' inline
| | |-ParmVarDecl 0x7ffe438d3428 <col:41, col:47> col:47 used __x 'float'
| | |-ParmVarDecl 0x7ffe438d34a0 <col:52, col:59> col:59 used __sinp 'float *'
| | |-ParmVarDecl 0x7ffe438d3518 <col:67, col:74> col:74 used __cosp 'float *'
| | |-CompoundStmt 0x7ffe438d3b08 <col:82, line:674:1>
| | | |-DeclStmt 0x7ffe438d3898 <line:672:5, col:59>
| | | | `-VarDecl 0x7ffe438d36c8 <col:5, col:58> col:27 used __stret 'const struct __float2':'const struct __float2' cinit
| | | |   `-ExprWithCleanups 0x7ffe438d3880 <col:37, col:58> 'const struct __float2':'const struct __float2'
| | | |     `-CXXConstructExpr 0x7ffe438d3848 <col:37, col:58> 'const struct __float2':'const struct __float2' 'void (struct __float2 &&) noexcept' elidable
| | | |       `-MaterializeTemporaryExpr 0x7ffe438d3830 <col:37, col:58> 'struct __float2':'struct __float2' xvalue
| | | |         `-CallExpr 0x7ffe438d37e8 <col:37, col:58> 'struct __float2':'struct __float2'
| | | |           |-ImplicitCastExpr 0x7ffe438d37d0 <col:37> 'struct __float2 (*)(float)' <FunctionToPointerDecay>
| | | |           | `-DeclRefExpr 0x7ffe438d37a8 <col:37> 'struct __float2 (float)' lvalue Function 0x7ffe43935600 '__sincospif_stret' 'struct __float2 (float)'
| | | |           `-ImplicitCastExpr 0x7ffe438d3818 <col:55> 'float' <LValueToRValue>
| | | |             `-DeclRefExpr 0x7ffe438d3780 <col:55> 'float' lvalue ParmVar 0x7ffe438d3428 '__x' 'float'
| | | |-BinaryOperator 0x7ffe438d3988 <line:673:5, col:23> 'float' lvalue '='
| | | | |-UnaryOperator 0x7ffe438d38f0 <col:5, col:6> 'float' lvalue prefix '*'
| | | | | `-ImplicitCastExpr 0x7ffe438d38d8 <col:6> 'float *' <LValueToRValue>
| | | | |   `-DeclRefExpr 0x7ffe438d38b0 <col:6> 'float *' lvalue ParmVar 0x7ffe438d34a0 '__sinp' 'float *'
| | | | `-ImplicitCastExpr 0x7ffe438d3970 <col:15, col:23> 'float' <LValueToRValue>
| | | |   `-MemberExpr 0x7ffe438d3938 <col:15, col:23> 'const float' lvalue .__sinval 0x7ffe4392ebc8
| | | |     `-DeclRefExpr 0x7ffe438d3910 <col:15> 'const struct __float2':'const struct __float2' lvalue Var 0x7ffe438d36c8 '__stret' 'const struct __float2':'const struct __float2'
| | | `-BinaryOperator 0x7ffe438d3ae0 <col:33, col:51> 'float' lvalue '='
| | |   |-UnaryOperator 0x7ffe438d3a48 <col:33, col:34> 'float' lvalue prefix '*'
| | |   | `-ImplicitCastExpr 0x7ffe438d3a30 <col:34> 'float *' <LValueToRValue>
| | |   |   `-DeclRefExpr 0x7ffe438d3a08 <col:34> 'float *' lvalue ParmVar 0x7ffe438d3518 '__cosp' 'float *'
| | |   `-ImplicitCastExpr 0x7ffe438d3ac8 <col:43, col:51> 'float' <LValueToRValue>
| | |     `-MemberExpr 0x7ffe438d3a90 <col:43, col:51> 'const float' lvalue .__cosval 0x7ffe4392ec28
| | |       `-DeclRefExpr 0x7ffe438d3a68 <col:43> 'const struct __float2':'const struct __float2' lvalue Var 0x7ffe438d36c8 '__stret' 'const struct __float2':'const struct __float2'
| | `-AlwaysInlineAttr 0x7ffe438d3660 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7ffe438d3cd8 prev 0x7ffe4392e8f8 <line:300:36, /usr/include/math.h:679:1> line:676:29 __sincospi 'void (double, double *, double *)' inline
| | |-ParmVarDecl 0x7ffe438d3b50 <col:40, col:47> col:47 used __x 'double'
| | |-ParmVarDecl 0x7ffe438d3bc8 <col:52, col:60> col:60 used __sinp 'double *'
| | |-ParmVarDecl 0x7ffe438d3c40 <col:68, col:76> col:76 used __cosp 'double *'
| | |-CompoundStmt 0x7ffe438d4240 <col:84, line:679:1>
| | | |-DeclStmt 0x7ffe438d3fc0 <line:677:5, col:59>
| | | | `-VarDecl 0x7ffe438d3df0 <col:5, col:58> col:28 used __stret 'const struct __double2':'const struct __double2' cinit
| | | |   `-ExprWithCleanups 0x7ffe438d3fa8 <col:38, col:58> 'const struct __double2':'const struct __double2'
| | | |     `-CXXConstructExpr 0x7ffe438d3f70 <col:38, col:58> 'const struct __double2':'const struct __double2' 'void (struct __double2 &&) noexcept' elidable
| | | |       `-MaterializeTemporaryExpr 0x7ffe438d3f58 <col:38, col:58> 'struct __double2':'struct __double2' xvalue
| | | |         `-CallExpr 0x7ffe438d3f10 <col:38, col:58> 'struct __double2':'struct __double2'
| | | |           |-ImplicitCastExpr 0x7ffe438d3ef8 <col:38> 'struct __double2 (*)(double)' <FunctionToPointerDecay>
| | | |           | `-DeclRefExpr 0x7ffe438d3ed0 <col:38> 'struct __double2 (double)' lvalue Function 0x7ffe43935750 '__sincospi_stret' 'struct __double2 (double)'
| | | |           `-ImplicitCastExpr 0x7ffe438d3f40 <col:55> 'double' <LValueToRValue>
| | | |             `-DeclRefExpr 0x7ffe438d3ea8 <col:55> 'double' lvalue ParmVar 0x7ffe438d3b50 '__x' 'double'
| | | |-BinaryOperator 0x7ffe438d40b0 <line:678:5, col:23> 'double' lvalue '='
| | | | |-UnaryOperator 0x7ffe438d4018 <col:5, col:6> 'double' lvalue prefix '*'
| | | | | `-ImplicitCastExpr 0x7ffe438d4000 <col:6> 'double *' <LValueToRValue>
| | | | |   `-DeclRefExpr 0x7ffe438d3fd8 <col:6> 'double *' lvalue ParmVar 0x7ffe438d3bc8 '__sinp' 'double *'
| | | | `-ImplicitCastExpr 0x7ffe438d4098 <col:15, col:23> 'double' <LValueToRValue>
| | | |   `-MemberExpr 0x7ffe438d4060 <col:15, col:23> 'const double' lvalue .__sinval 0x7ffe4392ee68
| | | |     `-DeclRefExpr 0x7ffe438d4038 <col:15> 'const struct __double2':'const struct __double2' lvalue Var 0x7ffe438d3df0 '__stret' 'const struct __double2':'const struct __double2'
| | | `-BinaryOperator 0x7ffe438d4218 <col:33, col:51> 'double' lvalue '='
| | |   |-UnaryOperator 0x7ffe438d4170 <col:33, col:34> 'double' lvalue prefix '*'
| | |   | `-ImplicitCastExpr 0x7ffe438d4158 <col:34> 'double *' <LValueToRValue>
| | |   |   `-DeclRefExpr 0x7ffe438d4130 <col:34> 'double *' lvalue ParmVar 0x7ffe438d3c40 '__cosp' 'double *'
| | |   `-ImplicitCastExpr 0x7ffe438d4200 <col:43, col:51> 'double' <LValueToRValue>
| | |     `-MemberExpr 0x7ffe438d41b8 <col:43, col:51> 'const double' lvalue .__cosval 0x7ffe4392eec8
| | |       `-DeclRefExpr 0x7ffe438d4190 <col:43> 'const struct __double2':'const struct __double2' lvalue Var 0x7ffe438d3df0 '__stret' 'const struct __double2':'const struct __double2'
| | `-AlwaysInlineAttr 0x7ffe438d3d88 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7ffe438d4328 </usr/include/math.h:687:1, /usr/include/AvailabilityInternal.h:20677:124> /usr/include/math.h:687:15 j0 'double (double)' extern
| | |-ParmVarDecl 0x7ffe438d4288 <col:18> col:24 'double'
| | `-AvailabilityAttr 0x7ffe438d43c8 </usr/include/AvailabilityInternal.h:20677:87, col:122> macos 10.0 0 0 "" ""
| |-FunctionDecl 0x7ffe438d4520 </usr/include/math.h:688:1, /usr/include/AvailabilityInternal.h:20677:124> /usr/include/math.h:688:15 j1 'double (double)' extern
| | |-ParmVarDecl 0x7ffe438d4480 <col:18> col:24 'double'
| | `-AvailabilityAttr 0x7ffe438d45c0 </usr/include/AvailabilityInternal.h:20677:87, col:122> macos 10.0 0 0 "" ""
| |-FunctionDecl 0x7ffe438d47d8 </usr/include/math.h:689:1, /usr/include/AvailabilityInternal.h:20677:124> /usr/include/math.h:689:15 jn 'double (int, double)' extern
| | |-ParmVarDecl 0x7ffe438d4678 <col:18> col:21 'int'
| | |-ParmVarDecl 0x7ffe438d46f0 <col:23> col:29 'double'
| | `-AvailabilityAttr 0x7ffe438d4880 </usr/include/AvailabilityInternal.h:20677:87, col:122> macos 10.0 0 0 "" ""
| |-FunctionDecl 0x7ffe438d49d8 </usr/include/math.h:690:1, /usr/include/AvailabilityInternal.h:20677:124> /usr/include/math.h:690:15 y0 'double (double)' extern
| | |-ParmVarDecl 0x7ffe438d4938 <col:18> col:24 'double'
| | `-AvailabilityAttr 0x7ffe438d4a78 </usr/include/AvailabilityInternal.h:20677:87, col:122> macos 10.0 0 0 "" ""
| |-FunctionDecl 0x7ffe438d4bd0 </usr/include/math.h:691:1, /usr/include/AvailabilityInternal.h:20677:124> /usr/include/math.h:691:15 y1 'double (double)' extern
| | |-ParmVarDecl 0x7ffe438d4b30 <col:18> col:24 'double'
| | `-AvailabilityAttr 0x7ffe438d4c70 </usr/include/AvailabilityInternal.h:20677:87, col:122> macos 10.0 0 0 "" ""
| |-FunctionDecl 0x7ffe438d4e48 </usr/include/math.h:692:1, /usr/include/AvailabilityInternal.h:20677:124> /usr/include/math.h:692:15 yn 'double (int, double)' extern
| | |-ParmVarDecl 0x7ffe438d4d28 <col:18> col:21 'int'
| | |-ParmVarDecl 0x7ffe438d4da0 <col:23> col:29 'double'
| | `-AvailabilityAttr 0x7ffe438d4ef0 </usr/include/AvailabilityInternal.h:20677:87, col:122> macos 10.0 0 0 "" ""
| |-FunctionDecl 0x7ffe438d50b8 </usr/include/math.h:693:1, col:35> col:15 scalb 'double (double, double)' extern
| | |-ParmVarDecl 0x7ffe438d4fa8 <col:21> col:27 'double'
| | `-ParmVarDecl 0x7ffe438d5020 <col:29> col:35 'double'
| |-VarDecl 0x7ffe438d5178 <line:694:1, col:12> col:12 signgam 'int' extern
| |-FunctionDecl 0x7ffe439386a0 <line:751:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:751:17 rinttol 'long (double)' extern
| | |-ParmVarDecl 0x7ffe43938600 <col:25> col:31 'double'
| | `-AvailabilityAttr 0x7ffe43938740 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
| |-FunctionDecl 0x7ffe43938898 </usr/include/math.h:753:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:753:17 roundtol 'long (double)' extern
| | |-ParmVarDecl 0x7ffe439387f8 <col:26> col:32 'double'
| | `-AvailabilityAttr 0x7ffe43938938 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
| |-FunctionDecl 0x7ffe43938b10 </usr/include/math.h:755:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:755:15 drem 'double (double, double)' extern
| | |-ParmVarDecl 0x7ffe439389f0 <col:20> col:26 'double'
| | |-ParmVarDecl 0x7ffe43938a68 <col:28> col:34 'double'
| | `-AvailabilityAttr 0x7ffe43938bb8 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
| |-FunctionDecl 0x7ffe43938d10 </usr/include/math.h:757:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:757:12 finite 'int (double)' extern
| | |-ParmVarDecl 0x7ffe43938c70 <col:19> col:25 'double'
| | `-AvailabilityAttr 0x7ffe43938db0 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
| |-FunctionDecl 0x7ffe43938f08 </usr/include/math.h:759:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:759:15 gamma 'double (double)' extern
| | |-ParmVarDecl 0x7ffe43938e68 <col:21> col:27 'double'
| | `-AvailabilityAttr 0x7ffe43938fa8 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
| `-FunctionDecl 0x7ffe43939100 </usr/include/math.h:761:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:761:15 significand 'double (double)' extern
|   |-ParmVarDecl 0x7ffe43939060 <col:27> col:33 'double'
|   `-AvailabilityAttr 0x7ffe439391a0 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
|-LinkageSpecDecl 0x7ffe438ff198 </usr/include/math.h:205:26> col:26 implicit C
| `-FunctionDecl 0x7ffe438ff1e8 <col:26> col:26 implicit used __builtin_fabsf 'float (float) noexcept' extern
|   |-ParmVarDecl 0x7ffe438ff280 <<invalid sloc>> <invalid sloc> 'float'
|   |-NoThrowAttr 0x7ffe438ff2e8 <col:26> Implicit
|   `-ConstAttr 0x7ffe438ff330 <col:26> Implicit
|-LinkageSpecDecl 0x7ffe438ff4b0 <col:50> col:50 implicit C
| `-FunctionDecl 0x7ffe438ff500 <col:50> col:50 implicit used __builtin_inff 'float (void) noexcept' extern
|   |-NoThrowAttr 0x7ffe438ff598 <col:50> Implicit
|   `-ConstAttr 0x7ffe438ff5e0 <col:50> Implicit
|-LinkageSpecDecl 0x7ffe438ffa08 <line:208:26> col:26 implicit C
| `-FunctionDecl 0x7ffe438ffa58 <col:26> col:26 implicit used __builtin_fabs 'double (double) noexcept' extern
|   |-ParmVarDecl 0x7ffe438ffaf0 <<invalid sloc>> <invalid sloc> 'double'
|   |-NoThrowAttr 0x7ffe438ffb58 <col:26> Implicit
|   `-ConstAttr 0x7ffe438ffba0 <col:26> Implicit
|-LinkageSpecDecl 0x7ffe438ffd20 <col:49> col:49 implicit C
| `-FunctionDecl 0x7ffe43900200 <col:49> col:49 implicit used __builtin_inf 'double (void) noexcept' extern
|   |-NoThrowAttr 0x7ffe43900298 <col:49> Implicit
|   `-ConstAttr 0x7ffe439002e0 <col:49> Implicit
|-LinkageSpecDecl 0x7ffe43900708 <line:211:26> col:26 implicit C
| `-FunctionDecl 0x7ffe43900758 <col:26> col:26 implicit used __builtin_fabsl 'long double (long double) noexcept' extern
|   |-ParmVarDecl 0x7ffe439007f0 <<invalid sloc>> <invalid sloc> 'long double'
|   |-NoThrowAttr 0x7ffe43900858 <col:26> Implicit
|   `-ConstAttr 0x7ffe439008a0 <col:26> Implicit
|-LinkageSpecDecl 0x7ffe43900a20 <col:50> col:50 implicit C
| `-FunctionDecl 0x7ffe43900a70 <col:50> col:50 implicit used __builtin_infl 'long double (void) noexcept' extern
|   |-NoThrowAttr 0x7ffe43900b08 <col:50> Implicit
|   `-ConstAttr 0x7ffe43900b50 <col:50> Implicit
|-LinkageSpecDecl 0x7ffe439392e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:307:1, line:1485:1> line:307:8 C++
| |-TypedefDecl 0x7ffe43939350 </usr/local/Cellar/llvm/5.0.0/bin/../lib/clang/5.0.0/include/stddef.h:51:1, col:26> col:26 ptrdiff_t 'long'
| | `-BuiltinType 0x7ffe438327e0 'long'
| |-TypedefDecl 0x7ffe439393c0 <line:62:1, col:23> col:23 referenced size_t 'unsigned long'
| | `-BuiltinType 0x7ffe43832880 'unsigned long'
| |-TypedefDecl 0x7ffe43939430 </usr/local/Cellar/llvm/5.0.0/bin/../lib/clang/5.0.0/include/__stddef_max_align_t.h:32:1, col:21> col:21 max_align_t 'long double'
| | `-BuiltinType 0x7ffe43832900 'long double'
| |-NamespaceDecl 0x7ffe43939488 prev 0x7ffe43865c58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__nullptr:55:1, line:58:1> line:55:11 std
| | |-original Namespace 0x7ffe43865c58 'std'
| | `-TypedefDecl 0x7ffe43939548 <line:57:5, col:31> col:31 referenced nullptr_t 'decltype(nullptr)':'nullptr_t'
| |   `-DecltypeType 0x7ffe43939510 'decltype(nullptr)' sugar
| |     |-CXXNullPtrLiteralExpr 0x7ffe439394f0 <col:22> 'nullptr_t'
| |     `-BuiltinType 0x7ffe43832c10 'nullptr_t'
| |-NamespaceDecl 0x7ffe4393c200 prev 0x7ffe43939488 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:438:37, line:439:38> line:438:47 std
| | |-original Namespace 0x7ffe43865c58 'std'
| | `-NamespaceDecl 0x7ffe4393c268 prev 0x7ffe43865cc0 <col:52, line:439:36> <scratch space>:343:1 __1 inline
| |   |-original Namespace 0x7ffe43865cc0 '__1'
| |   |-UsingDecl 0x7ffe4393c2f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cstddef:49:1, col:9> col:9 ::ptrdiff_t
| |   |-UsingShadowDecl 0x7ffe4393c340 <col:9> col:9 implicit Typedef 0x7ffe43939350 'ptrdiff_t'
| |   | `-<<<NULL>>>
| |   |-UsingDecl 0x7ffe4393c390 <line:50:1, col:9> col:9 ::size_t
| |   |-UsingShadowDecl 0x7ffe4393c3e0 <col:9> col:9 implicit Typedef 0x7ffe439393c0 'size_t'
| |   | `-TypedefType 0x7ffe43964e80 'size_t' sugar
| |   |   |-Typedef 0x7ffe439393c0 'size_t'
| |   |   `-BuiltinType 0x7ffe43832880 'unsigned long'
| |   |-UsingDecl 0x7ffe4393c430 <line:55:1, col:9> col:9 ::max_align_t
| |   `-UsingShadowDecl 0x7ffe4393c480 <col:9> col:9 implicit Typedef 0x7ffe43939430 'max_align_t'
| |     `-<<<NULL>>>
| |-NamespaceDecl 0x7ffe4393c4c8 prev 0x7ffe4393c200 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:438:37, line:439:38> line:438:47 std
| | |-original Namespace 0x7ffe43865c58 'std'
| | `-NamespaceDecl 0x7ffe4393c530 prev 0x7ffe4393c268 <col:52, line:439:36> <scratch space>:344:1 __1 inline
| |   |-original Namespace 0x7ffe43865cc0 '__1'
| |   |-ClassTemplateDecl 0x7ffe4393c840 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:398:1, col:61> col:61 pair
| |   | |-TemplateTypeParmDecl 0x7ffe4393c598 <col:11, col:17> col:17 class depth 0 index 0 _T1
| |   | |-TemplateTypeParmDecl 0x7ffe4393c638 <col:22, col:28> col:28 class depth 0 index 1 _T2
| |   | `-CXXRecordDecl 0x7ffe4393c7a8 <col:33, col:61> col:61 struct pair
| |   |   `-TypeVisibilityAttr 0x7ffe4393ca78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |-ClassTemplateDecl 0x7ffe4393cc08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:399:1, col:49> col:49 reference_wrapper
| |   | |-TemplateTypeParmDecl 0x7ffe4393cac0 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe4393cb70 <col:22, col:49> col:49 class reference_wrapper
| |   |   `-TypeVisibilityAttr 0x7ffe4393ce18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |-ClassTemplateDecl 0x7ffe4393cfa8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:400:1, col:50> col:50 hash
| |   | |-TemplateTypeParmDecl 0x7ffe4393ce60 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe4393cf10 <col:22, col:50> col:50 struct hash
| |   |   `-TypeVisibilityAttr 0x7ffe4393d1b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |-ClassTemplateDecl 0x7ffe4393e718 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:402:1, line:403:38> col:8 __void_t
| |   | |-TemplateTypeParmDecl 0x7ffe4393e600 <line:402:11> col:11 class depth 0 index 0
| |   | `-CXXRecordDecl 0x7ffe4393e680 <line:403:1, col:38> col:8 struct __void_t definition
| |   |   |-CXXRecordDecl 0x7ffe4393e990 <col:1, col:8> col:8 implicit struct __void_t
| |   |   `-TypedefDecl 0x7ffe4393ea38 <col:19, col:32> col:32 type 'void'
| |   |     `-BuiltinType 0x7ffe43832720 'void'
| |   |-ClassTemplateDecl 0x7ffe4393ebc8 <line:405:1, line:406:39> col:8 __identity
| |   | |-TemplateTypeParmDecl 0x7ffe4393eab0 <line:405:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe4393eb30 <line:406:1, col:39> col:8 struct __identity definition
| |   |   |-CXXRecordDecl 0x7ffe4393ee40 <col:1, col:8> col:8 implicit struct __identity
| |   |   `-TypedefDecl 0x7ffe4393eee8 <col:21, col:33> col:33 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7ffe4393eaf0 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7ffe4393eab0 '_Tp'
| |   |-ClassTemplateDecl 0x7ffe4393f118 <line:408:1, line:409:60> col:29 __dependent_type
| |   | |-TemplateTypeParmDecl 0x7ffe4393ef60 <line:408:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7ffe4393efd8 <col:22> col:26 '_Bool' depth 0 index 1
| |   | `-CXXRecordDecl 0x7ffe4393f080 <line:409:1, col:60> col:29 struct __dependent_type definition
| |   |   |-public '_Tp'
| |   |   |-TypeVisibilityAttr 0x7ffe4393f3e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7ffe4393f468 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:409:1, col:29> col:29 implicit struct __dependent_type
| |   |-ClassTemplateDecl 0x7ffe4393f788 <line:411:1, line:412:63> col:33 conditional
| |   | |-NonTypeTemplateParmDecl 0x7ffe4393f530 <line:411:11, col:16> col:16 '_Bool' depth 0 index 0 _Bp
| |   | |-TemplateTypeParmDecl 0x7ffe4393f588 <col:21, col:27> col:27 referenced class depth 0 index 1 _If
| |   | |-TemplateTypeParmDecl 0x7ffe4393f600 <col:32, col:38> col:38 class depth 0 index 2 _Then
| |   | `-CXXRecordDecl 0x7ffe4393f6f0 <line:412:5, col:63> col:33 struct conditional definition
| |   |   |-TypeVisibilityAttr 0x7ffe4393fa90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7ffe4393fad8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:412:5, col:33> col:33 implicit struct conditional
| |   |   `-TypedefDecl 0x7ffe4393fb80 <col:46, col:58> col:58 type '_If'
| |   |     `-TemplateTypeParmType 0x7ffe4393f5d0 '_If' dependent depth 0 index 1
| |   |       `-TemplateTypeParm 0x7ffe4393f588 '_If'
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe4393fef8 <line:413:1, line:414:84> col:33 struct conditional definition
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateTypeParmDecl 0x7ffe4393fbf8 <line:413:11, col:17> col:17 referenced class depth 0 index 0 _If
| |   | |-TemplateTypeParmDecl 0x7ffe4393fc68 <col:22, col:28> col:28 referenced class depth 0 index 1 _Then
| |   | |-TypeVisibilityAttr 0x7ffe43940090 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7ffe43940230 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:414:5, col:33> col:33 implicit struct conditional
| |   | `-TypedefDecl 0x7ffe439402d8 <col:65, col:79> col:79 type '_Then'
| |   |   `-TemplateTypeParmType 0x7ffe4393fcb0 '_Then' dependent depth 0 index 1
| |   |     `-TemplateTypeParm 0x7ffe4393fc68 '_Then'
| |   |-TypeAliasTemplateDecl 0x7ffe43941730 <line:417:1, col:106> col:45 conditional_t
| |   | |-NonTypeTemplateParmDecl 0x7ffe43940360 <col:11, col:16> col:16 referenced '_Bool' depth 0 index 0 _Bp
| |   | |-TemplateTypeParmDecl 0x7ffe439403b8 <col:21, col:27> col:27 referenced class depth 0 index 1 _If
| |   | |-TemplateTypeParmDecl 0x7ffe43940428 <col:32, col:38> col:38 referenced class depth 0 index 2 _Then
| |   | `-TypeAliasDecl 0x7ffe439416d0 <col:45, col:106> col:51 conditional_t 'typename conditional<_Bp, _If, _Then>::type'
| |   |   `-DependentNameType 0x7ffe43941660 'typename conditional<_Bp, _If, _Then>::type' dependent
| |   |-ClassTemplateDecl 0x7ffe43941940 <line:420:1, col:74> col:56 __lazy_enable_if
| |   | |-NonTypeTemplateParmDecl 0x7ffe43941790 <col:11> col:15 '_Bool' depth 0 index 0
| |   | |-TemplateTypeParmDecl 0x7ffe439417e8 <col:17, col:23> col:23 class depth 0 index 1 _Tp
| |   | `-CXXRecordDecl 0x7ffe439418a8 <col:28, col:74> col:56 struct __lazy_enable_if definition
| |   |   |-TypeVisibilityAttr 0x7ffe43941c00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7ffe43941c48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:420:28, col:56> col:56 implicit struct __lazy_enable_if
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe43941f10 <line:421:1, col:111> col:50 struct __lazy_enable_if definition
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7ffe43941d00 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7ffe43942080 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7ffe439421f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:421:22, col:50> col:50 implicit struct __lazy_enable_if
| |   | `-TypedefDecl 0x7ffe43942370 <col:79, col:106> col:106 type 'typename _Tp::type'
| |   |   `-DependentNameType 0x7ffe43942300 'typename _Tp::type' dependent
| |   |-ClassTemplateDecl 0x7ffe439425b0 <line:423:1, col:74> col:63 enable_if
| |   | |-NonTypeTemplateParmDecl 0x7ffe439423f8 <col:11> col:15 '_Bool' depth 0 index 0
| |   | |-TemplateTypeParmDecl 0x7ffe43942460 <col:17, col:29> col:23 class depth 0 index 1 _Tp
| |   | | `-TemplateArgument type 'void'
| |   | |-CXXRecordDecl 0x7ffe43942518 <col:35, col:74> col:63 struct enable_if definition
| |   | | |-TypeVisibilityAttr 0x7ffe43942870 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | | `-CXXRecordDecl 0x7ffe439428b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:423:35, col:63> col:63 implicit struct enable_if
| |   | |-ClassTemplateSpecializationDecl 0x7ffe4414ac80 <col:1, col:74> col:63 struct enable_if definition
| |   | | |-TemplateArgument integral 0
| |   | | |-TemplateArgument type 'double'
| |   | | `-CXXRecordDecl 0x7ffe4414af10 prev 0x7ffe4414ac80 <col:35, col:63> col:63 implicit struct enable_if
| |   | |-ClassTemplateSpecializationDecl 0x7ffe4417a188 <col:1, col:74> col:63 struct enable_if definition
| |   | | |-TemplateArgument integral 0
| |   | | |-TemplateArgument type 'int'
| |   | | `-CXXRecordDecl 0x7ffe4417a468 prev 0x7ffe4417a188 <col:35, col:63> col:63 implicit struct enable_if
| |   | |-ClassTemplateSpecializationDecl 0x7ffe4417c538 <col:1, col:74> col:63 struct enable_if definition
| |   | | |-TemplateArgument integral 0
| |   | | |-TemplateArgument type 'long long'
| |   | | `-CXXRecordDecl 0x7ffe4417c7d0 prev 0x7ffe4417c538 <col:35, col:63> col:63 implicit struct enable_if
| |   | `-ClassTemplateSpecializationDecl 0x7ffe441827e8 <col:1, col:74> col:63 struct enable_if definition
| |   |   |-TemplateArgument integral 0
| |   |   |-TemplateArgument type 'long'
| |   |   `-CXXRecordDecl 0x7ffe44182a80 prev 0x7ffe441827e8 <col:35, col:63> col:63 implicit struct enable_if
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe43942b80 <line:424:1, col:89> col:50 struct enable_if definition
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7ffe43942970 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7ffe43942cf0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7ffe43942e60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:424:22, col:50> col:50 implicit struct enable_if
| |   | `-TypedefDecl 0x7ffe43942f08 <col:72, col:84> col:84 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7ffe439429b0 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7ffe43942970 '_Tp'
| |   |-TypeAliasTemplateDecl 0x7ffe439432a0 <line:427:1, col:89> col:39 enable_if_t
| |   | |-NonTypeTemplateParmDecl 0x7ffe43942f90 <col:11, col:16> col:16 referenced '_Bool' depth 0 index 0 _Bp
| |   | |-TemplateTypeParmDecl 0x7ffe43942ff8 <col:21, col:33> col:27 referenced class depth 0 index 1 _Tp
| |   | | `-TemplateArgument type 'void'
| |   | `-TypeAliasDecl 0x7ffe43943240 <col:39, col:89> col:45 enable_if_t 'typename enable_if<_Bp, _Tp>::type'
| |   |   `-DependentNameType 0x7ffe439431d0 'typename enable_if<_Bp, _Tp>::type' dependent
| |   |-FunctionTemplateDecl 0x7ffe439436c8 <line:433:1, line:440:1> line:437:1 addressof
| |   | |-TemplateTypeParmDecl 0x7ffe439432f0 <line:433:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7ffe43943630 <line:434:1, line:440:1> line:437:1 addressof '_Tp *(_Tp &) noexcept' inline
| |   |   |-ParmVarDecl 0x7ffe439434b8 <col:11, col:16> col:16 referenced __x '_Tp &'
| |   |   |-CompoundStmt 0x7ffe43943a98 <line:438:1, line:440:1>
| |   |   | `-ReturnStmt 0x7ffe43943a80 <line:439:5, col:35>
| |   |   |   `-CallExpr 0x7ffe43943a50 <col:12, col:35> '<dependent type>'
| |   |   |     |-DeclRefExpr 0x7ffe43943a00 <col:12> '<builtin fn type>' Function 0x7ffe439438a8 '__builtin_addressof' 'void *(void &) noexcept'
| |   |   |     `-DeclRefExpr 0x7ffe43943a28 <col:32> '_Tp' lvalue ParmVar 0x7ffe439434b8 '__x' '_Tp &'
| |   |   |-AlwaysInlineAttr 0x7ffe43943720 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   |-VisibilityAttr 0x7ffe43943768 <col:51, col:74> Hidden
| |   |   `-NoSanitizeAttr 0x7ffe43943778 <line:296:39, col:60> cfi
| |   |-FunctionTemplateDecl 0x7ffe43943d80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:496:1, col:50> col:27 addressof
| |   | |-TemplateTypeParmDecl 0x7ffe43943ab8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7ffe43943ce8 <col:22, col:50> col:27 addressof '_Tp *(const _Tp &&) noexcept' delete
| |   |   `-ParmVarDecl 0x7ffe43943ba8 <col:37, col:46> col:48 'const _Tp &&'
| |   |-CXXRecordDecl 0x7ffe43943dd8 <line:499:1, col:28> col:8 referenced struct __two definition
| |   | |-CXXRecordDecl 0x7ffe43943ef8 <col:1, col:8> col:8 implicit struct __two
| |   | `-FieldDecl 0x7ffe43943fd0 <col:15, col:26> col:20 __lx 'char [2]'
| |   |-ClassTemplateDecl 0x7ffe439441f8 <line:503:1, line:515:1> line:504:29 integral_constant
| |   | |-TemplateTypeParmDecl 0x7ffe43944038 <line:503:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7ffe439440b8 <col:22, col:26> col:26 referenced '_Tp' depth 0 index 1 __v
| |   | |-CXXRecordDecl 0x7ffe43944160 <line:504:1, line:515:1> line:504:29 struct integral_constant definition
| |   | | |-TypeVisibilityAttr 0x7ffe439444c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | | |-CXXRecordDecl 0x7ffe43944508 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:504:1, col:29> col:29 implicit referenced struct integral_constant
| |   | | |-VarDecl 0x7ffe43944c00 <line:506:5, col:53> col:45 referenced value 'const _Tp' static constexpr cinit
| |   | | | `-DeclRefExpr 0x7ffe43944c60 <col:53> '_Tp' NonTypeTemplateParm 0x7ffe439440b8 '__v' '_Tp'
| |   | | |-TypedefDecl 0x7ffe43944c98 <line:507:5, col:31> col:31 referenced value_type '_Tp'
| |   | | | `-TemplateTypeParmType 0x7ffe43944080 '_Tp' dependent depth 0 index 0
| |   | | |   `-TemplateTypeParm 0x7ffe43944038 '_Tp'
| |   | | |-TypedefDecl 0x7ffe43944d00 <line:508:5, col:31> col:31 type 'integral_constant<_Tp, __v>'
| |   | | | `-InjectedClassNameType 0x7ffe43944430 'integral_constant<_Tp, __v>' dependent
| |   | | |   `-CXXRecord 0x7ffe43944160 'integral_constant'
| |   | | |-CXXConversionDecl 0x7ffe43944e98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:510:79> col:27 constexpr operator type-parameter-0-0 'std::__1::integral_constant::value_type (void) const noexcept'
| |   | | | |-CompoundStmt 0x7ffe43945168 <col:65, col:79>
| |   | | | | `-ReturnStmt 0x7ffe43945150 <col:66, col:73>
| |   | | | |   `-DeclRefExpr 0x7ffe43945128 <col:73> 'const _Tp' lvalue Var 0x7ffe43944c00 'value' 'const _Tp'
| |   | | | |-AlwaysInlineAttr 0x7ffe43944f30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | | `-VisibilityAttr 0x7ffe43944f78 <col:51, col:74> Hidden
| |   | | `-CXXMethodDecl 0x7ffe43944fe8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:513:75> col:31 constexpr operator() 'std::__1::integral_constant::value_type (void) const noexcept'
| |   | |   |-CompoundStmt 0x7ffe439451c8 <col:61, col:75>
| |   | |   | `-ReturnStmt 0x7ffe439451b0 <col:62, col:69>
| |   | |   |   `-DeclRefExpr 0x7ffe43945188 <col:69> 'const _Tp' lvalue Var 0x7ffe43944c00 'value' 'const _Tp'
| |   | |   |-AlwaysInlineAttr 0x7ffe43945080 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | |   `-VisibilityAttr 0x7ffe439450c8 <col:51, col:74> Hidden
| |   | |-ClassTemplateSpecializationDecl 0x7ffe439456a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:503:1, line:515:1> line:504:29 struct integral_constant definition
| |   | | |-TemplateArgument type '_Bool'
| |   | | |-TemplateArgument integral 1
| |   | | |-CXXRecordDecl 0x7ffe43947c58 prev 0x7ffe439456a8 <col:1, col:29> col:29 implicit struct integral_constant
| |   | | |-VarDecl 0x7ffe43947d00 <line:506:5, col:53> col:45 value 'const _Bool':'const _Bool' static constexpr cinit
| |   | | | `-SubstNonTypeTemplateParmExpr 0x7ffe43947d88 <col:53> '_Bool'
| |   | | |   `-CXXBoolLiteralExpr 0x7ffe43947d70 <col:53> '_Bool' true
| |   | | |-TypedefDecl 0x7ffe43947e18 <line:507:5, col:31> col:31 value_type '_Bool':'_Bool'
| |   | | | `-SubstTemplateTypeParmType 0x7ffe43945670 '_Bool' sugar
| |   | | |   |-TemplateTypeParmType 0x7ffe43944080 '_Tp' dependent depth 0 index 0
| |   | | |   | `-TemplateTypeParm 0x7ffe43944038 '_Tp'
| |   | | |   `-BuiltinType 0x7ffe43832740 '_Bool'
| |   | | |-TypedefDecl 0x7ffe43947e80 <line:508:5, col:31> col:31 type 'struct std::__1::integral_constant<_Bool, true>'
| |   | | | `-RecordType 0x7ffe439457b0 'struct std::__1::integral_constant<_Bool, true>'
| |   | | |   `-ClassTemplateSpecialization 0x7ffe439456a8 'integral_constant'
| |   | | |-CXXConversionDecl 0x7ffe43947f68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:510:79> col:27 constexpr operator bool 'std::__1::integral_constant<_Bool, true>::value_type (void) const noexcept'
| |   | | | `-AlwaysInlineAttr 0x7ffe43948038 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-CXXMethodDecl 0x7ffe439480b0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:513:75> col:31 constexpr operator() 'std::__1::integral_constant<_Bool, true>::value_type (void) const noexcept'
| |   | |   `-AlwaysInlineAttr 0x7ffe43948158 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | |-ClassTemplateSpecializationDecl 0x7ffe43945980 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:503:1, line:515:1> line:504:29 struct integral_constant definition
| |   | | |-TemplateArgument type '_Bool'
| |   | | |-TemplateArgument integral 0
| |   | | |-CXXRecordDecl 0x7ffe43946aa8 prev 0x7ffe43945980 <col:1, col:29> col:29 implicit struct integral_constant
| |   | | |-VarDecl 0x7ffe43946b50 <line:506:5, col:53> col:45 referenced value 'const _Bool':'const _Bool' static constexpr cinit
| |   | | | `-SubstNonTypeTemplateParmExpr 0x7ffe43946bd8 <col:53> '_Bool'
| |   | | |   `-CXXBoolLiteralExpr 0x7ffe43946bc0 <col:53> '_Bool' false
| |   | | |-TypedefDecl 0x7ffe43946c68 <line:507:5, col:31> col:31 value_type '_Bool':'_Bool'
| |   | | | `-SubstTemplateTypeParmType 0x7ffe43945670 '_Bool' sugar
| |   | | |   |-TemplateTypeParmType 0x7ffe43944080 '_Tp' dependent depth 0 index 0
| |   | | |   | `-TemplateTypeParm 0x7ffe43944038 '_Tp'
| |   | | |   `-BuiltinType 0x7ffe43832740 '_Bool'
| |   | | |-TypedefDecl 0x7ffe43946cd0 <line:508:5, col:31> col:31 type 'struct std::__1::integral_constant<_Bool, false>'
| |   | | | `-RecordType 0x7ffe43945a80 'struct std::__1::integral_constant<_Bool, false>'
| |   | | |   `-ClassTemplateSpecialization 0x7ffe43945980 'integral_constant'
| |   | | |-CXXConversionDecl 0x7ffe43946e08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:510:79> col:27 constexpr operator bool 'std::__1::integral_constant<_Bool, false>::value_type (void) const noexcept'
| |   | | | `-AlwaysInlineAttr 0x7ffe43946ed8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-CXXMethodDecl 0x7ffe43946f50 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:513:75> col:31 constexpr operator() 'std::__1::integral_constant<_Bool, false>::value_type (void) const noexcept'
| |   | |   `-AlwaysInlineAttr 0x7ffe43947800 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | `-ClassTemplateSpecializationDecl 0x7ffe43992300 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:503:1, line:515:1> line:504:29 struct integral_constant definition
| |   |   |-TemplateArgument type 'unsigned long'
| |   |   |-TemplateArgument integral 0
| |   |   |-CXXRecordDecl 0x7ffe43992530 prev 0x7ffe43992300 <col:1, col:29> col:29 implicit struct integral_constant
| |   |   |-VarDecl 0x7ffe43992600 <line:506:5, col:53> col:45 value 'const unsigned long':'const unsigned long' static constexpr cinit
| |   |   | `-SubstNonTypeTemplateParmExpr 0x7ffe43992690 <col:53> 'unsigned long'
| |   |   |   `-IntegerLiteral 0x7ffe43992670 <col:53> 'unsigned long' 0
| |   |   |-TypedefDecl 0x7ffe43992720 <line:507:5, col:31> col:31 value_type 'unsigned long':'unsigned long'
| |   |   | `-SubstTemplateTypeParmType 0x7ffe439922b0 'unsigned long' sugar
| |   |   |   |-TemplateTypeParmType 0x7ffe43944080 '_Tp' dependent depth 0 index 0
| |   |   |   | `-TemplateTypeParm 0x7ffe43944038 '_Tp'
| |   |   |   `-BuiltinType 0x7ffe43832880 'unsigned long'
| |   |   |-TypedefDecl 0x7ffe43992788 <line:508:5, col:31> col:31 type 'struct std::__1::integral_constant<unsigned long, 0>'
| |   |   | `-RecordType 0x7ffe43992400 'struct std::__1::integral_constant<unsigned long, 0>'
| |   |   |   `-ClassTemplateSpecialization 0x7ffe43992300 'integral_constant'
| |   |   |-CXXConversionDecl 0x7ffe439928b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:510:79> col:27 constexpr operator unsigned long 'std::__1::integral_constant<unsigned long, 0>::value_type (void) const noexcept'
| |   |   | `-AlwaysInlineAttr 0x7ffe43992988 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-CXXMethodDecl 0x7ffe43992a00 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:513:75> col:31 constexpr operator() 'std::__1::integral_constant<unsigned long, 0>::value_type (void) const noexcept'
| |   |     `-AlwaysInlineAttr 0x7ffe43992aa8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |-VarDecl 0x7ffe43945570 parent 0x7ffe43944160 prev 0x7ffe43944c00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:517:1, line:518:58> col:58 value 'const _Tp' constexpr
| |   |-TypedefDecl 0x7ffe439458c0 <line:528:1, col:38> col:38 referenced true_type 'integral_constant<_Bool, (true)>':'struct std::__1::integral_constant<_Bool, true>'
| |   | `-TemplateSpecializationType 0x7ffe439457d0 'integral_constant<_Bool, (true)>' sugar integral_constant
| |   |   |-TemplateArgument type '_Bool'
| |   |   |-TemplateArgument expr
| |   |   | `-ParenExpr 0x7ffe43945638 <line:525:59, col:63> '_Bool'
| |   |   |   `-CXXBoolLiteralExpr 0x7ffe43945620 <line:528:31> '_Bool' true
| |   |   `-RecordType 0x7ffe439457b0 'struct std::__1::integral_constant<_Bool, true>'
| |   |     `-ClassTemplateSpecialization 0x7ffe439456a8 'integral_constant'
| |   |-TypedefDecl 0x7ffe43945b90 <line:529:1, col:38> col:38 referenced false_type 'integral_constant<_Bool, (false)>':'struct std::__1::integral_constant<_Bool, false>'
| |   | `-TemplateSpecializationType 0x7ffe43945aa0 'integral_constant<_Bool, (false)>' sugar integral_constant
| |   |   |-TemplateArgument type '_Bool'
| |   |   |-TemplateArgument expr
| |   |   | `-ParenExpr 0x7ffe43945940 <line:525:59, col:63> '_Bool'
| |   |   |   `-CXXBoolLiteralExpr 0x7ffe43945928 <line:529:31> '_Bool' false
| |   |   `-RecordType 0x7ffe43945a80 'struct std::__1::integral_constant<_Bool, false>'
| |   |     `-ClassTemplateSpecialization 0x7ffe43945980 'integral_constant'
| |   |-ClassTemplateDecl 0x7ffe439461b0 <line:535:1, line:536:8> col:8 __lazy_and_impl
| |   | |-NonTypeTemplateParmDecl 0x7ffe43946000 <line:535:11, col:16> col:16 '_Bool' depth 0 index 0 _Last
| |   | |-TemplateTypeParmDecl 0x7ffe43946058 <col:23, col:32> col:32 class depth 0 index 1 ... _Preds
| |   | |-CXXRecordDecl 0x7ffe43946118 <line:536:1, col:8> col:8 struct __lazy_and_impl
| |   | `-ClassTemplateSpecialization 0x7ffe43947978 '__lazy_and_impl'
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe43946750 <line:538:1, line:539:56> col:8 struct __lazy_and_impl definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0...'
| |   | |-TemplateTypeParmDecl 0x7ffe43946498 <line:538:11, col:20> col:20 referenced class depth 0 index 0 ... _Preds
| |   | `-CXXRecordDecl 0x7ffe43947898 <line:539:1, col:8> col:8 implicit struct __lazy_and_impl
| |   |-ClassTemplateSpecializationDecl 0x7ffe43947978 <line:541:1, line:542:43> col:8 struct __lazy_and_impl definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument pack
| |   | `-CXXRecordDecl 0x7ffe439481f0 <col:1, col:8> col:8 implicit struct __lazy_and_impl
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe439484c0 <line:544:1, line:545:84> col:8 struct __lazy_and_impl definition
| |   | |-public 'integral_constant<_Bool, _Pred::type::value>'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7ffe439482a8 <line:544:11, col:17> col:17 referenced class depth 0 index 0 _Pred
| |   | `-CXXRecordDecl 0x7ffe43948df8 <line:545:1, col:8> col:8 implicit struct __lazy_and_impl
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe439491e0 <line:547:1, line:548:88> col:8 struct __lazy_and_impl definition
| |   | |-public '__lazy_and_impl<_Hp::type::value, _Tp...>'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | `-TemplateArgument type 'type-parameter-0-1...'
| |   | |-TemplateTypeParmDecl 0x7ffe43948eb0 <line:547:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-TemplateTypeParmDecl 0x7ffe43948f18 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Tp
| |   | `-CXXRecordDecl 0x7ffe43949778 <line:548:1, col:8> col:8 implicit struct __lazy_and_impl
| |   |-ClassTemplateDecl 0x7ffe439499c0 <line:550:1, line:551:64> col:8 __lazy_and
| |   | |-TemplateTypeParmDecl 0x7ffe43949830 <line:550:11, col:17> col:17 class depth 0 index 0 _P1
| |   | |-TemplateTypeParmDecl 0x7ffe43949898 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Pr
| |   | `-CXXRecordDecl 0x7ffe43949928 <line:551:1, col:64> col:8 struct __lazy_and definition
| |   |   |-public '__lazy_and_impl<_P1::type::value, _Pr...>'
| |   |   `-CXXRecordDecl 0x7ffe43949ef8 <col:1, col:8> col:8 implicit struct __lazy_and
| |   |-ClassTemplateDecl 0x7ffe4394a140 <line:555:1, line:556:8> col:8 __lazy_or_impl
| |   | |-NonTypeTemplateParmDecl 0x7ffe43949fc0 <line:555:11, col:16> col:16 '_Bool' depth 0 index 0 _List
| |   | |-TemplateTypeParmDecl 0x7ffe4394a018 <col:23, col:32> col:32 class depth 0 index 1 ... _Preds
| |   | |-CXXRecordDecl 0x7ffe4394a0a8 <line:556:1, col:8> col:8 struct __lazy_or_impl
| |   | `-ClassTemplateSpecialization 0x7ffe4394aa30 '__lazy_or_impl'
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe4394a650 <line:558:1, line:559:53> col:8 struct __lazy_or_impl definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0...'
| |   | |-TemplateTypeParmDecl 0x7ffe4394a3f8 <line:558:11, col:20> col:20 referenced class depth 0 index 0 ... _Preds
| |   | `-CXXRecordDecl 0x7ffe4394a950 <line:559:1, col:8> col:8 implicit struct __lazy_or_impl
| |   |-ClassTemplateSpecializationDecl 0x7ffe4394aa30 <line:561:1, line:562:44> col:8 struct __lazy_or_impl definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument pack
| |   | `-CXXRecordDecl 0x7ffe4394acb8 <col:1, col:8> col:8 implicit struct __lazy_or_impl
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe4394b0a0 <line:564:1, line:566:53> line:565:8 struct __lazy_or_impl definition
| |   | |-public '__lazy_or_impl<_Hp::type::value, _Tp...>'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | `-TemplateArgument type 'type-parameter-0-1...'
| |   | |-TemplateTypeParmDecl 0x7ffe4394ad70 <line:564:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-TemplateTypeParmDecl 0x7ffe4394add8 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Tp
| |   | `-CXXRecordDecl 0x7ffe4394b638 <line:565:1, col:8> col:8 implicit struct __lazy_or_impl
| |   |-ClassTemplateDecl 0x7ffe4394b880 <line:568:1, line:569:62> col:8 __lazy_or
| |   | |-TemplateTypeParmDecl 0x7ffe4394b6f0 <line:568:11, col:17> col:17 class depth 0 index 0 _P1
| |   | |-TemplateTypeParmDecl 0x7ffe4394b758 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Pr
| |   | `-CXXRecordDecl 0x7ffe4394b7e8 <line:569:1, col:62> col:8 struct __lazy_or definition
| |   |   |-public '__lazy_or_impl<_P1::type::value, _Pr...>'
| |   |   `-CXXRecordDecl 0x7ffe4394bd88 <col:1, col:8> col:8 implicit struct __lazy_or
| |   |-ClassTemplateDecl 0x7ffe4394bf58 <line:573:1, line:574:67> col:8 __lazy_not
| |   | |-TemplateTypeParmDecl 0x7ffe4394be40 <line:573:11, col:17> col:17 class depth 0 index 0 _Pred
| |   | `-CXXRecordDecl 0x7ffe4394bec0 <line:574:1, col:67> col:8 struct __lazy_not definition
| |   |   |-public 'integral_constant<_Bool, !_Pred::type::value>'
| |   |   `-CXXRecordDecl 0x7ffe4394c418 <col:1, col:8> col:8 implicit struct __lazy_not
| |   |-ClassTemplateDecl 0x7ffe4394c5e8 <line:577:1, col:27> col:27 __and_
| |   | |-TemplateTypeParmDecl 0x7ffe4394c4d0 <col:10> col:10 class depth 0 index 0 ...
| |   | |-CXXRecordDecl 0x7ffe4394c550 <col:20, col:27> col:27 struct __and_
| |   | `-ClassTemplateSpecialization 0x7ffe4394c868 '__and_'
| |   |-ClassTemplateSpecializationDecl 0x7ffe4394c868 <line:578:1, col:41> col:19 struct __and_ definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument pack
| |   | `-CXXRecordDecl 0x7ffe4394caa0 <col:12, col:19> col:19 implicit struct __and_
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe43952508 <line:580:1, col:47> col:28 struct __and_ definition
| |   | |-public '_B0'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7ffe4394cb58 <col:10, col:16> col:16 referenced class depth 0 index 0 _B0
| |   | `-CXXRecordDecl 0x7ffe439527b0 <col:21, col:28> col:28 implicit struct __and_
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe43952af8 <line:582:1, line:583:68> col:8 struct __and_ definition
| |   | |-public 'conditional<_B0::value, _B1, _B0>::type'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | `-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateTypeParmDecl 0x7ffe43952868 <line:582:10, col:16> col:16 referenced class depth 0 index 0 _B0
| |   | |-TemplateTypeParmDecl 0x7ffe439528d8 <col:21, col:27> col:27 referenced class depth 0 index 1 _B1
| |   | `-CXXRecordDecl 0x7ffe43953100 <line:583:1, col:8> col:8 implicit struct __and_
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe439536b8 <line:585:1, line:587:73> line:586:8 struct __and_ definition
| |   | |-public 'conditional<_B0::value, __and_<_B1, _B2, _Bn...>, _B0>::type'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | |-TemplateArgument type 'type-parameter-0-1'
| |   | | |-TemplateArgument type 'type-parameter-0-2'
| |   | | `-TemplateArgument type 'type-parameter-0-3...'
| |   | |-TemplateTypeParmDecl 0x7ffe439531b8 <line:585:10, col:16> col:16 referenced class depth 0 index 0 _B0
| |   | |-TemplateTypeParmDecl 0x7ffe43953228 <col:21, col:27> col:27 referenced class depth 0 index 1 _B1
| |   | |-TemplateTypeParmDecl 0x7ffe43953298 <col:32, col:38> col:38 referenced class depth 0 index 2 _B2
| |   | |-TemplateTypeParmDecl 0x7ffe43953308 <col:43, col:52> col:52 referenced class depth 0 index 3 ... _Bn
| |   | `-CXXRecordDecl 0x7ffe43953ff0 <line:586:1, col:8> col:8 implicit struct __and_
| |   |-ClassTemplateDecl 0x7ffe439541c8 <line:590:1, col:27> col:27 __or_
| |   | |-TemplateTypeParmDecl 0x7ffe439540a8 <col:10> col:10 class depth 0 index 0 ...
| |   | |-CXXRecordDecl 0x7ffe43954130 <col:20, col:27> col:27 struct __or_
| |   | `-ClassTemplateSpecialization 0x7ffe43954488 '__or_'
| |   |-ClassTemplateSpecializationDecl 0x7ffe43954488 <line:591:1, col:41> col:19 struct __or_ definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument pack
| |   | `-CXXRecordDecl 0x7ffe439546c0 <col:12, col:19> col:19 implicit struct __or_
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe43954918 <line:593:1, col:46> col:28 struct __or_ definition
| |   | |-public '_B0'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7ffe43954778 <col:10, col:16> col:16 referenced class depth 0 index 0 _B0
| |   | `-CXXRecordDecl 0x7ffe43954bc0 <col:21, col:28> col:28 implicit struct __or_
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe43954f08 <line:595:1, line:596:67> col:8 struct __or_ definition
| |   | |-public 'conditional<_B0::value, _B0, _B1>::type'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | `-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateTypeParmDecl 0x7ffe43954c78 <line:595:10, col:16> col:16 referenced class depth 0 index 0 _B0
| |   | |-TemplateTypeParmDecl 0x7ffe43954ce8 <col:21, col:27> col:27 referenced class depth 0 index 1 _B1
| |   | `-CXXRecordDecl 0x7ffe43955510 <line:596:1, col:8> col:8 implicit struct __or_
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe43955a68 <line:598:1, line:600:73> line:599:8 struct __or_ definition
| |   | |-public 'conditional<_B0::value, _B0, __or_<_B1, _B2, _Bn...> >::type'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | |-TemplateArgument type 'type-parameter-0-1'
| |   | | |-TemplateArgument type 'type-parameter-0-2'
| |   | | `-TemplateArgument type 'type-parameter-0-3...'
| |   | |-TemplateTypeParmDecl 0x7ffe439555c8 <line:598:10, col:16> col:16 referenced class depth 0 index 0 _B0
| |   | |-TemplateTypeParmDecl 0x7ffe43955638 <col:21, col:27> col:27 referenced class depth 0 index 1 _B1
| |   | |-TemplateTypeParmDecl 0x7ffe439556a8 <col:32, col:38> col:38 referenced class depth 0 index 2 _B2
| |   | |-TemplateTypeParmDecl 0x7ffe43955718 <col:43, col:52> col:52 referenced class depth 0 index 3 ... _Bn
| |   | `-CXXRecordDecl 0x7ffe43957400 <line:599:1, col:8> col:8 implicit struct __or_
| |   |-ClassTemplateDecl 0x7ffe439575d8 <line:603:1, line:604:71> col:8 __not_
| |   | |-TemplateTypeParmDecl 0x7ffe439574b8 <line:603:10, col:16> col:16 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe43957540 <line:604:1, col:71> col:8 struct __not_ definition
| |   |   |-public 'conditional<_Tp::value, false_type, true_type>::type'
| |   |   `-CXXRecordDecl 0x7ffe43957b80 <col:1, col:8> col:8 implicit struct __not_
| |   |-ClassTemplateDecl 0x7ffe43957d88 <line:610:1, col:91> col:50 is_const
| |   | |-TemplateTypeParmDecl 0x7ffe43957c38 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe43957cf0 <col:22, col:91> col:50 struct is_const definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TypeVisibilityAttr 0x7ffe43958000 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7ffe43958088 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:610:22, col:50> col:50 implicit struct is_const
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe439582d8 <line:611:1, col:90> col:50 struct is_const definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'const type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7ffe43958140 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7ffe43958438 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7ffe439585b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:611:22, col:50> col:50 implicit struct is_const
| |   |-ClassTemplateDecl 0x7ffe439587b8 <line:620:1, col:97> col:50 is_volatile
| |   | |-TemplateTypeParmDecl 0x7ffe43958668 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe43958720 <col:22, col:97> col:50 struct is_volatile definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TypeVisibilityAttr 0x7ffe43958a30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7ffe43958ab8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:620:22, col:50> col:50 implicit struct is_volatile
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe43958d08 <line:621:1, col:96> col:50 struct is_volatile definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'volatile type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7ffe43958b70 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7ffe43958e48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7ffe43958fc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:621:22, col:50> col:50 implicit struct is_volatile
| |   |-ClassTemplateDecl 0x7ffe439591c8 <line:630:1, col:92> col:50 remove_const
| |   | |-TemplateTypeParmDecl 0x7ffe43959078 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7ffe43959130 <col:22, col:92> col:50 struct remove_const definition
| |   | | |-TypeVisibilityAttr 0x7ffe43940668 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | | |-CXXRecordDecl 0x7ffe439406b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:630:22, col:50> col:50 implicit struct remove_const
| |   | | `-TypedefDecl 0x7ffe43940758 <col:75, col:87> col:87 type '_Tp'
| |   | |   `-TemplateTypeParmType 0x7ffe439590c0 '_Tp' dependent depth 0 index 0
| |   | |     `-TemplateTypeParm 0x7ffe43959078 '_Tp'
| |   | `-ClassTemplateSpecializationDecl 0x7ffe44149d38 <col:1, col:92> col:50 struct remove_const definition
| |   |   |-TemplateArgument type 'double'
| |   |   |-CXXRecordDecl 0x7ffe44149f80 prev 0x7ffe44149d38 <col:22, col:50> col:50 implicit struct remove_const
| |   |   `-TypedefDecl 0x7ffe4414a058 <col:75, col:87> col:87 referenced type 'double':'double'
| |   |     `-SubstTemplateTypeParmType 0x7ffe4414a020 'double' sugar
| |   |       |-TemplateTypeParmType 0x7ffe439590c0 '_Tp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7ffe43959078 '_Tp'
| |   |       `-BuiltinType 0x7ffe438328e0 'double'
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe43940968 <line:631:1, col:92> col:50 struct remove_const definition
| |   | |-TemplateArgument type 'const type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7ffe439407d0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7ffe43940aa8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7ffe43940be0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:631:22, col:50> col:50 implicit struct remove_const
| |   | `-TypedefDecl 0x7ffe43940c88 <col:75, col:87> col:87 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7ffe43940810 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7ffe439407d0 '_Tp'
| |   |-TypeAliasTemplateDecl 0x7ffe43940f40 <line:633:1, col:73> col:22 remove_const_t
| |   | |-TemplateTypeParmDecl 0x7ffe43940d00 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7ffe43940ee0 <col:22, col:73> col:28 remove_const_t 'typename remove_const<_Tp>::type'
| |   |   `-DependentNameType 0x7ffe43940e70 'typename remove_const<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7ffe439410d8 <line:638:1, col:98> col:50 remove_volatile
| |   | |-TemplateTypeParmDecl 0x7ffe43940f90 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7ffe43941040 <col:22, col:98> col:50 struct remove_volatile definition
| |   | | |-TypeVisibilityAttr 0x7ffe43941350 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | | |-CXXRecordDecl 0x7ffe43941398 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:638:22, col:50> col:50 implicit struct remove_volatile
| |   | | `-TypedefDecl 0x7ffe43941440 <col:81, col:93> col:93 type '_Tp'
| |   | |   `-TemplateTypeParmType 0x7ffe43940fd0 '_Tp' dependent depth 0 index 0
| |   | |     `-TemplateTypeParm 0x7ffe43940f90 '_Tp'
| |   | `-ClassTemplateSpecializationDecl 0x7ffe4414a140 <col:1, col:98> col:50 struct remove_volatile definition
| |   |   |-TemplateArgument type 'double'
| |   |   |-CXXRecordDecl 0x7ffe4414a390 prev 0x7ffe4414a140 <col:22, col:50> col:50 implicit struct remove_volatile
| |   |   `-TypedefDecl 0x7ffe4414a468 <col:81, col:93> col:93 referenced type 'double':'double'
| |   |     `-SubstTemplateTypeParmType 0x7ffe4414a430 'double' sugar
| |   |       |-TemplateTypeParmType 0x7ffe43940fd0 '_Tp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7ffe43940f90 '_Tp'
| |   |       `-BuiltinType 0x7ffe438328e0 'double'
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe4395b488 <line:639:1, col:98> col:50 struct remove_volatile definition
| |   | |-TemplateArgument type 'volatile type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7ffe439414b8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7ffe4395b5c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7ffe4395b700 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:639:22, col:50> col:50 implicit struct remove_volatile
| |   | `-TypedefDecl 0x7ffe4395b7a8 <col:81, col:93> col:93 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7ffe43941500 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7ffe439414b8 '_Tp'
| |   |-TypeAliasTemplateDecl 0x7ffe4395ba60 <line:641:1, col:79> col:22 remove_volatile_t
| |   | |-TemplateTypeParmDecl 0x7ffe4395b820 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7ffe4395ba00 <col:22, col:79> col:28 remove_volatile_t 'typename remove_volatile<_Tp>::type'
| |   |   `-DependentNameType 0x7ffe4395b990 'typename remove_volatile<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7ffe4395bbf8 <line:646:1, line:647:80> line:646:50 remove_cv
| |   | |-TemplateTypeParmDecl 0x7ffe4395bab0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7ffe4395bb60 <col:22, line:647:80> line:646:50 struct remove_cv definition
| |   | | |-TypeVisibilityAttr 0x7ffe4395be70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | | |-CXXRecordDecl 0x7ffe4395beb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:646:22, col:50> col:50 implicit struct remove_cv
| |   | | `-TypedefDecl 0x7ffe4395c210 <line:647:2, col:75> col:75 type 'typename remove_volatile<typename remove_const<_Tp>::type>::type'
| |   | |   `-DependentNameType 0x7ffe4395c1a0 'typename remove_volatile<typename remove_const<_Tp>::type>::type' dependent
| |   | `-ClassTemplateSpecializationDecl 0x7ffe44149a58 <line:646:1, line:647:80> line:646:50 struct remove_cv definition
| |   |   |-TemplateArgument type 'double'
| |   |   |-CXXRecordDecl 0x7ffe44149c68 prev 0x7ffe44149a58 <col:22, col:50> col:50 implicit struct remove_cv
| |   |   `-TypedefDecl 0x7ffe4414a550 <line:647:2, col:75> col:75 referenced type 'typename remove_volatile<typename remove_const<double>::type>::type':'double'
| |   |     `-ElaboratedType 0x7ffe4414a500 'typename remove_volatile<typename remove_const<double>::type>::type' sugar
| |   |       `-TypedefType 0x7ffe4414a4e0 'std::__1::remove_volatile<double>::type' sugar
| |   |         |-Typedef 0x7ffe4414a468 'type'
| |   |         `-SubstTemplateTypeParmType 0x7ffe4414a430 'double' sugar
| |   |           |-TemplateTypeParmType 0x7ffe43940fd0 '_Tp' dependent depth 0 index 0
| |   |           | `-TemplateTypeParm 0x7ffe43940f90 '_Tp'
| |   |           `-BuiltinType 0x7ffe438328e0 'double'
| |   |-TypeAliasTemplateDecl 0x7ffe4395c4d0 <line:649:1, col:67> col:22 remove_cv_t
| |   | |-TemplateTypeParmDecl 0x7ffe4395c288 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7ffe4395c470 <col:22, col:67> col:28 remove_cv_t 'typename remove_cv<_Tp>::type'
| |   |   `-DependentNameType 0x7ffe4395c400 'typename remove_cv<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7ffe4395c638 <line:654:1, col:73> col:29 __libcpp_is_void
| |   | |-TemplateTypeParmDecl 0x7ffe4395c520 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7ffe4395c5a0 <col:22, col:73> col:29 struct __libcpp_is_void definition
| |   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | | `-CXXRecordDecl 0x7ffe4395c8f0 <col:22, col:29> col:29 implicit struct __libcpp_is_void
| |   | `-ClassTemplateSpecialization 0x7ffe4395c9c8 '__libcpp_is_void'
| |   |-ClassTemplateSpecializationDecl 0x7ffe4395c9c8 <line:655:1, col:72> col:29 struct __libcpp_is_void definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'void'
| |   | `-CXXRecordDecl 0x7ffe4395cc30 <col:22, col:29> col:29 implicit struct __libcpp_is_void
| |   |-ClassTemplateDecl 0x7ffe4395ce38 <line:657:1, line:658:63> line:657:50 is_void
| |   | |-TemplateTypeParmDecl 0x7ffe4395cce8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe4395cda0 <col:22, line:658:63> line:657:50 struct is_void definition
| |   |   |-public '__libcpp_is_void<typename remove_cv<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7ffe4395d0b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7ffe4395d318 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:657:22, col:50> col:50 implicit struct is_void
| |   |-ClassTemplateDecl 0x7ffe4395d518 <line:667:1, col:76> col:29 __is_nullptr_t_impl
| |   | |-TemplateTypeParmDecl 0x7ffe4395d400 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7ffe4395d480 <col:22, col:76> col:29 struct __is_nullptr_t_impl definition
| |   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | | `-CXXRecordDecl 0x7ffe4395d7d0 <col:22, col:29> col:29 implicit struct __is_nullptr_t_impl
| |   | `-ClassTemplateSpecialization 0x7ffe4395d8d0 '__is_nullptr_t_impl'
| |   |-ClassTemplateSpecializationDecl 0x7ffe4395d8d0 <line:668:1, col:80> col:29 struct __is_nullptr_t_impl definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'nullptr_t'
| |   | `-CXXRecordDecl 0x7ffe4395db40 <col:22, col:29> col:29 implicit struct __is_nullptr_t_impl
| |   |-ClassTemplateDecl 0x7ffe4395dd48 <line:670:1, line:671:66> line:670:50 __is_nullptr_t
| |   | |-TemplateTypeParmDecl 0x7ffe4395dbf8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe4395dcb0 <col:22, line:671:66> line:670:50 struct __is_nullptr_t definition
| |   |   |-public '__is_nullptr_t_impl<typename remove_cv<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7ffe4395dfc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7ffe4395e228 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:670:22, col:50> col:50 implicit struct __is_nullptr_t
| |   |-ClassTemplateDecl 0x7ffe4395e498 <line:674:1, line:675:66> line:674:50 is_null_pointer
| |   | |-TemplateTypeParmDecl 0x7ffe4395e2e0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe4395e400 <col:22, line:675:66> line:674:50 struct is_null_pointer definition
| |   |   |-public '__is_nullptr_t_impl<typename remove_cv<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7ffe4395e710 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7ffe4395e928 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:674:22, col:50> col:50 implicit struct is_null_pointer
| |   |-ClassTemplateDecl 0x7ffe4395eaf8 <line:685:1, col:91> col:29 __libcpp_is_integral
| |   | |-TemplateTypeParmDecl 0x7ffe4395e9e0 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7ffe4395ea60 <col:22, col:91> col:29 struct __libcpp_is_integral definition
| |   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | | `-CXXRecordDecl 0x7ffe4395edb0 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   | |-ClassTemplateSpecialization 0x7ffe4395ee88 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7ffe4395f1c8 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7ffe4395f510 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7ffe4395f860 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7ffe4395fba8 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7ffe4395fee8 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7ffe43960228 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7ffe43960588 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7ffe439608d0 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7ffe43960c20 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7ffe43960f70 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7ffe439612c0 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7ffe43961610 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7ffe43961960 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7ffe43961cb0 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7ffe43962020 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7ffe43962400 '__libcpp_is_integral'
| |   | `-ClassTemplateSpecializationDecl 0x7ffe4414a640 <col:1, col:91> col:29 struct __libcpp_is_integral definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TemplateArgument type 'double'
| |   |   `-CXXRecordDecl 0x7ffe4414a860 prev 0x7ffe4414a640 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7ffe4395ee88 <line:686:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type '_Bool'
| |   | `-CXXRecordDecl 0x7ffe4395f0f0 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7ffe4395f1c8 <line:687:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'char'
| |   | `-CXXRecordDecl 0x7ffe4395f430 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7ffe4395f510 <line:688:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'signed char'
| |   | `-CXXRecordDecl 0x7ffe4395f780 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7ffe4395f860 <line:689:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'unsigned char'
| |   | `-CXXRecordDecl 0x7ffe4395fad0 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7ffe4395fba8 <line:690:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'wchar_t'
| |   | `-CXXRecordDecl 0x7ffe4395fe10 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7ffe4395fee8 <line:692:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'char16_t'
| |   | `-CXXRecordDecl 0x7ffe43960150 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7ffe43960228 <line:693:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'char32_t'
| |   | `-CXXRecordDecl 0x7ffe439604a8 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7ffe43960588 <line:695:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'short'
| |   | `-CXXRecordDecl 0x7ffe439607f0 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7ffe439608d0 <line:696:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'unsigned short'
| |   | `-CXXRecordDecl 0x7ffe43960b40 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7ffe43960c20 <line:697:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'int'
| |   | `-CXXRecordDecl 0x7ffe43960e90 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7ffe43960f70 <line:698:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'unsigned int'
| |   | `-CXXRecordDecl 0x7ffe439611e0 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7ffe439612c0 <line:699:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'long'
| |   | `-CXXRecordDecl 0x7ffe43961530 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7ffe43961610 <line:700:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'unsigned long'
| |   | `-CXXRecordDecl 0x7ffe43961880 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7ffe43961960 <line:701:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'long long'
| |   | `-CXXRecordDecl 0x7ffe43961bd0 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7ffe43961cb0 <line:702:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'unsigned long long'
| |   | `-CXXRecordDecl 0x7ffe43961f20 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7ffe43962020 <line:704:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type '__int128'
| |   | `-CXXRecordDecl 0x7ffe43962290 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7ffe43962400 <line:705:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'unsigned __int128'
| |   | `-CXXRecordDecl 0x7ffe43962670 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateDecl 0x7ffe43962878 <line:708:1, line:709:67> line:708:50 is_integral
| |   | |-TemplateTypeParmDecl 0x7ffe43962728 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7ffe439627e0 <col:22, line:709:67> line:708:50 struct is_integral definition
| |   | | |-public '__libcpp_is_integral<typename remove_cv<_Tp>::type>'
| |   | | |-TypeVisibilityAttr 0x7ffe43962af0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | | `-CXXRecordDecl 0x7ffe43962d58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:708:22, col:50> col:50 implicit struct is_integral
| |   | `-ClassTemplateSpecializationDecl 0x7ffe44149808 <col:1, line:709:67> line:708:50 struct is_integral definition
| |   |   |-public '__libcpp_is_integral<typename remove_cv<double>::type>':'struct std::__1::__libcpp_is_integral<double>'
| |   |   |-TemplateArgument type 'double'
| |   |   `-CXXRecordDecl 0x7ffe4414a948 prev 0x7ffe44149808 <col:22, col:50> col:50 implicit struct is_integral
| |   |-ClassTemplateDecl 0x7ffe43962f28 <line:718:1, col:90> col:29 __libcpp_is_floating_point
| |   | |-TemplateTypeParmDecl 0x7ffe43962e10 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7ffe43962e90 <col:22, col:90> col:29 struct __libcpp_is_floating_point definition
| |   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | | `-CXXRecordDecl 0x7ffe439631e0 <col:22, col:29> col:29 implicit struct __libcpp_is_floating_point
| |   | |-ClassTemplateSpecialization 0x7ffe439632c0 '__libcpp_is_floating_point'
| |   | |-ClassTemplateSpecialization 0x7ffe43963610 '__libcpp_is_floating_point'
| |   | `-ClassTemplateSpecialization 0x7ffe43963960 '__libcpp_is_floating_point'
| |   |-ClassTemplateSpecializationDecl 0x7ffe439632c0 <line:719:1, col:89> col:29 struct __libcpp_is_floating_point definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'float'
| |   | `-CXXRecordDecl 0x7ffe43963530 <col:22, col:29> col:29 implicit struct __libcpp_is_floating_point
| |   |-ClassTemplateSpecializationDecl 0x7ffe43963610 <line:720:1, col:89> col:29 struct __libcpp_is_floating_point definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'double'
| |   | `-CXXRecordDecl 0x7ffe43963880 <col:22, col:29> col:29 implicit struct __libcpp_is_floating_point
| |   |-ClassTemplateSpecializationDecl 0x7ffe43963960 <line:721:1, col:89> col:29 struct __libcpp_is_floating_point definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'long double'
| |   | `-CXXRecordDecl 0x7ffe43963bd0 <col:22, col:29> col:29 implicit struct __libcpp_is_floating_point
| |   |-ClassTemplateDecl 0x7ffe43963dd8 <line:723:1, line:724:73> line:723:50 is_floating_point
| |   | |-TemplateTypeParmDecl 0x7ffe43963c88 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe43963d40 <col:22, line:724:73> line:723:50 struct is_floating_point definition
| |   |   |-public '__libcpp_is_floating_point<typename remove_cv<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7ffe43964050 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7ffe439642b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:723:22, col:50> col:50 implicit struct is_floating_point
| |   |-ClassTemplateDecl 0x7ffe439644c8 <line:733:1, line:734:26> line:733:50 is_array
| |   | |-TemplateTypeParmDecl 0x7ffe43964370 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe43964430 <col:22, line:734:26> line:733:50 struct is_array definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TypeVisibilityAttr 0x7ffe43964740 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7ffe439647c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:733:22, col:50> col:50 implicit struct is_array
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe43964a88 <line:735:1, line:736:25> line:735:50 struct is_array definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 []'
| |   | |-TemplateTypeParmDecl 0x7ffe43964880 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7ffe43964bd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7ffe43964d50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:735:22, col:50> col:50 implicit struct is_array
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe439650f8 <line:737:1, line:738:25> line:737:62 struct is_array definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
| |   | |-TemplateTypeParmDecl 0x7ffe43964e08 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7ffe43964eb0 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Np
| |   | |-TypeVisibilityAttr 0x7ffe43965248 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7ffe43965400 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:737:34, col:62> col:62 implicit struct is_array
| |   |-ClassTemplateDecl 0x7ffe439655d8 <line:747:1, col:76> col:29 __libcpp_is_pointer
| |   | |-TemplateTypeParmDecl 0x7ffe439654b8 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe43965540 <col:22, col:76> col:29 struct __libcpp_is_pointer definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   `-CXXRecordDecl 0x7ffe43965890 <col:22, col:29> col:29 implicit struct __libcpp_is_pointer
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe43965ae8 <line:748:1, col:75> col:29 struct __libcpp_is_pointer definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 *'
| |   | |-TemplateTypeParmDecl 0x7ffe43965948 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe43965d60 <col:22, col:29> col:29 implicit struct __libcpp_is_pointer
| |   |-ClassTemplateDecl 0x7ffe43965f68 <line:750:1, line:751:66> line:750:50 is_pointer
| |   | |-TemplateTypeParmDecl 0x7ffe43965e18 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe43965ed0 <col:22, line:751:66> line:750:50 struct is_pointer definition
| |   |   |-public '__libcpp_is_pointer<typename remove_cv<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7ffe439661e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7ffe43966c60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:750:22, col:50> col:50 implicit struct is_pointer
| |   |-ClassTemplateDecl 0x7ffe43966e68 <line:760:1, col:97> col:50 is_lvalue_reference
| |   | |-TemplateTypeParmDecl 0x7ffe43966d18 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe43966dd0 <col:22, col:97> col:50 struct is_lvalue_reference definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TypeVisibilityAttr 0x7ffe439670e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7ffe43967168 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:760:22, col:50> col:50 implicit struct is_lvalue_reference
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe439673e8 <line:761:1, col:96> col:50 struct is_lvalue_reference definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateTypeParmDecl 0x7ffe43967220 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7ffe43967528 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7ffe439676a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:761:22, col:50> col:50 implicit struct is_lvalue_reference
| |   |-ClassTemplateDecl 0x7ffe439678a8 <line:763:1, col:98> col:50 is_rvalue_reference
| |   | |-TemplateTypeParmDecl 0x7ffe43967758 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe43967810 <col:22, col:98> col:50 struct is_rvalue_reference definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TypeVisibilityAttr 0x7ffe43967b20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7ffe43968400 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:763:22, col:50> col:50 implicit struct is_rvalue_reference
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe439686b8 <line:765:1, col:97> col:50 struct is_rvalue_reference definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 &&'
| |   | |-TemplateTypeParmDecl 0x7ffe439684b8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7ffe439687f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7ffe43968970 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:765:22, col:50> col:50 implicit struct is_rvalue_reference
| |   |-ClassTemplateDecl 0x7ffe43968b78 <line:768:1, col:91> col:50 is_reference
| |   | |-TemplateTypeParmDecl 0x7ffe43968a28 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe43968ae0 <col:22, col:91> col:50 struct is_reference definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TypeVisibilityAttr 0x7ffe43968df0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7ffe43968e78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:768:22, col:50> col:50 implicit struct is_reference
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe439690f8 <line:769:1, col:90> col:50 struct is_reference definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateTypeParmDecl 0x7ffe43968f30 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7ffe43969238 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7ffe4396a400 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:769:22, col:50> col:50 implicit struct is_reference
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe4396a688 <line:771:1, col:90> col:50 struct is_reference definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 &&'
| |   | |-TemplateTypeParmDecl 0x7ffe4396a4b8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7ffe4396a7c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7ffe4396a940 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:771:22, col:50> col:50 implicit struct is_reference
| |   |-ClassTemplateDecl 0x7ffe4396ab48 <line:788:1, line:789:56> line:788:50 is_union
| |   | |-TemplateTypeParmDecl 0x7ffe4396a9f8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe4396aab0 <col:22, line:789:56> line:788:50 struct is_union definition
| |   |   |-public 'integral_constant<_Bool, __is_union(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7ffe4396adc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7ffe4396afa8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:788:22, col:50> col:50 implicit struct is_union
| |   |-ClassTemplateDecl 0x7ffe4396b1a8 <line:808:1, line:809:56> line:808:50 is_class
| |   | |-TemplateTypeParmDecl 0x7ffe4396b060 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe4396b110 <col:22, line:809:56> line:808:50 struct is_class definition
| |   |   |-public 'integral_constant<_Bool, __is_class(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7ffe4396b468 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7ffe4396b648 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:808:22, col:50> col:50 implicit struct is_class
| |   |-ClassTemplateDecl 0x7ffe4396b8c0 <line:831:1, col:100> col:61 is_same
| |   | |-TemplateTypeParmDecl 0x7ffe4396b700 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7ffe4396b768 <col:22, col:28> col:28 class depth 0 index 1 _Up
| |   | `-CXXRecordDecl 0x7ffe4396b828 <col:33, col:100> col:61 struct is_same definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TypeVisibilityAttr 0x7ffe4396bb60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7ffe4396bbe8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:831:33, col:61> col:61 implicit struct is_same
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe4396bea0 <line:832:1, col:99> col:61 struct is_same definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7ffe4396bca0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7ffe4396c008 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7ffe4396c1b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:832:33, col:61> col:61 implicit struct is_same
| |   |-NamespaceDecl 0x7ffe4396c268 <line:841:1, line:849:1> line:841:11 __libcpp_is_function_imp
| |   | |-CXXRecordDecl 0x7ffe4396c2d0 <line:843:1, col:22> col:8 referenced struct __dummy_type definition
| |   | | `-CXXRecordDecl 0x7ffe4396d400 <col:1, col:8> col:8 implicit struct __dummy_type
| |   | |-FunctionTemplateDecl 0x7ffe4396d718 <line:844:1, col:39> col:28 __test
| |   | | |-TemplateTypeParmDecl 0x7ffe4396d4b8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | | `-FunctionDecl 0x7ffe4396d680 <col:22, col:39> col:28 __test 'char (_Tp *)'
| |   | |   `-ParmVarDecl 0x7ffe4396d578 <col:35, col:38> col:39 '_Tp *'
| |   | |-FunctionTemplateDecl 0x7ffe4396d958 <line:845:1, col:46> col:27 __test
| |   | | |-TemplateTypeParmDecl 0x7ffe4396d770 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | | `-FunctionDecl 0x7ffe4396d8c0 <col:22, col:46> col:27 __test 'char (struct std::__1::__libcpp_is_function_imp::__dummy_type)'
| |   | |   `-ParmVarDecl 0x7ffe4396d800 <col:34> col:46 'struct std::__1::__libcpp_is_function_imp::__dummy_type'
| |   | |-FunctionTemplateDecl 0x7ffe4396db18 <line:846:1, col:38> col:28 __test
| |   | | |-TemplateTypeParmDecl 0x7ffe4396d9b0 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | | `-FunctionDecl 0x7ffe4396da80 <col:22, col:38> col:28 __test 'struct std::__1::__two (...)'
| |   | |-FunctionTemplateDecl 0x7ffe4396ddd8 <line:847:1, col:40> col:28 __source
| |   | | |-TemplateTypeParmDecl 0x7ffe4396db68 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | | `-FunctionDecl 0x7ffe4396dd40 <col:22, col:40> col:28 __source '_Tp &(int)'
| |   | |   `-ParmVarDecl 0x7ffe4396dc08 <col:37> col:40 'int'
| |   | `-FunctionTemplateDecl 0x7ffe4396df98 <line:848:1, col:47> col:35 __source
| |   |   |-TemplateTypeParmDecl 0x7ffe4396de30 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   |   `-FunctionDecl 0x7ffe4396df00 <col:22, col:47> col:35 __source 'struct std::__1::__libcpp_is_function_imp::__dummy_type (...)'
| |   |-ClassTemplateDecl 0x7ffe4396e770 <line:851:1, line:858:6> line:856:8 __libcpp_is_function
| |   | |-TemplateTypeParmDecl 0x7ffe4396dfe8 <line:851:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7ffe4396e660 <col:22, line:855:50> line:851:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7ffe4396e628 <col:29, line:855:50> '<dependent type>' '||'
| |   | |     |-BinaryOperator 0x7ffe4396e4f8 <line:851:29, line:854:48> '<dependent type>' '||'
| |   | |     | |-BinaryOperator 0x7ffe4396e3a8 <line:851:29, line:853:43> '<dependent type>' '||'
| |   | |     | | |-BinaryOperator 0x7ffe4396e278 <line:851:29, line:852:44> '<dependent type>' '||'
| |   | |     | | | |-DependentScopeDeclRefExpr 0x7ffe4396e128 <line:851:29, col:44> '<dependent type>' lvalue
| |   | |     | | | `-DependentScopeDeclRefExpr 0x7ffe4396e238 <line:852:29, col:44> '<dependent type>' lvalue
| |   | |     | | `-DependentScopeDeclRefExpr 0x7ffe4396e368 <line:853:29, col:43> '<dependent type>' lvalue
| |   | |     | `-DependentScopeDeclRefExpr 0x7ffe4396e4b8 <line:854:29, col:48> '<dependent type>' lvalue
| |   | |     `-DependentScopeDeclRefExpr 0x7ffe4396e5e8 <line:855:29, col:50> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7ffe4396e6d8 <line:856:1, line:858:6> line:856:8 struct __libcpp_is_function definition
| |   |   |-public 'integral_constant<_Bool, sizeof (__libcpp_is_function_imp::__test<_Tp>(__libcpp_is_function_imp::__source<_Tp>(0))) == 1>'
| |   |   `-CXXRecordDecl 0x7ffe4396eec8 <col:1, col:8> col:8 implicit struct __libcpp_is_function
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe4396f160 <line:859:1, col:82> col:29 struct __libcpp_is_function definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7ffe4396ef80 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe4396f430 <col:22, col:29> col:29 implicit struct __libcpp_is_function
| |   |-ClassTemplateDecl 0x7ffe4396f638 <line:861:1, line:862:41> line:861:50 is_function
| |   | |-TemplateTypeParmDecl 0x7ffe4396f4e8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe4396f5a0 <col:22, line:862:41> line:861:50 struct is_function definition
| |   |   |-public '__libcpp_is_function<_Tp>'
| |   |   |-TypeVisibilityAttr 0x7ffe4396f8b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7ffe43970028 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:861:22, col:50> col:50 implicit struct is_function
| |   |-ClassTemplateDecl 0x7ffe439702d8 <line:875:1, line:878:1> line:876:8 __member_pointer_traits_imp
| |   | |-TemplateTypeParmDecl 0x7ffe439700e0 <line:875:11, col:17> col:17 class depth 0 index 0 _MP
| |   | |-NonTypeTemplateParmDecl 0x7ffe43970158 <col:22, col:27> col:27 '_Bool' depth 0 index 1 _IsMemberFunctionPtr
| |   | |-NonTypeTemplateParmDecl 0x7ffe439701c0 <col:49, col:54> col:54 '_Bool' depth 0 index 2 _IsMemberObjectPtr
| |   | `-CXXRecordDecl 0x7ffe43970240 <line:876:1, line:878:1> line:876:8 struct __member_pointer_traits_imp definition
| |   |   `-CXXRecordDecl 0x7ffe439706e0 <col:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   |-ClassTemplateDecl 0x7ffe439708b8 <line:881:1, line:882:26> line:881:29 __libcpp_is_member_function_pointer
| |   | |-TemplateTypeParmDecl 0x7ffe43970798 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe43970820 <col:22, line:882:26> line:881:29 struct __libcpp_is_member_function_pointer definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   `-CXXRecordDecl 0x7ffe43970b70 <col:22, col:29> col:29 implicit struct __libcpp_is_member_function_pointer
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe43970ec8 <line:884:1, line:886:33> line:885:8 struct __libcpp_is_member_function_pointer definition
| |   | |-public 'is_function<_Ret>'
| |   | |-TemplateArgument type 'type-parameter-0-0 type-parameter-0-1::*'
| |   | |-TemplateTypeParmDecl 0x7ffe43970c28 <line:884:11, col:17> col:17 referenced class depth 0 index 0 _Ret
| |   | |-TemplateTypeParmDecl 0x7ffe43970c98 <col:23, col:29> col:29 class depth 0 index 1 _Class
| |   | `-CXXRecordDecl 0x7ffe439711c8 <line:885:1, col:8> col:8 implicit struct __libcpp_is_member_function_pointer
| |   |-ClassTemplateDecl 0x7ffe43971400 <line:888:1, line:889:88> line:888:50 is_member_function_pointer
| |   | |-TemplateTypeParmDecl 0x7ffe43971280 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe43971330 <col:22, line:889:88> line:888:50 struct is_member_function_pointer definition
| |   |   |-public '__libcpp_is_member_function_pointer<typename remove_cv<_Tp>::type>::type'
| |   |   |-TypeVisibilityAttr 0x7ffe43971680 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7ffe439719c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:888:22, col:50> col:50 implicit struct is_member_function_pointer
| |   |-ClassTemplateDecl 0x7ffe43971b98 <line:898:1, col:100> col:40 __libcpp_is_member_pointer
| |   | |-TemplateTypeParmDecl 0x7ffe43971a78 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe43971b00 <col:33, col:100> col:40 struct __libcpp_is_member_pointer definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   `-CXXRecordDecl 0x7ffe43971e50 <col:33, col:40> col:40 implicit struct __libcpp_is_member_pointer
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe43972178 <line:899:1, col:99> col:40 struct __libcpp_is_member_pointer definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 type-parameter-0-1::*'
| |   | |-TemplateTypeParmDecl 0x7ffe43971f08 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7ffe43971f78 <col:22, col:28> col:28 class depth 0 index 1 _Up
| |   | `-CXXRecordDecl 0x7ffe43972400 <col:33, col:40> col:40 implicit struct __libcpp_is_member_pointer
| |   |-ClassTemplateDecl 0x7ffe43972608 <line:901:1, line:902:73> line:901:50 is_member_pointer
| |   | |-TemplateTypeParmDecl 0x7ffe439724b8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe43972570 <col:22, line:902:73> line:901:50 struct is_member_pointer definition
| |   |   |-public '__libcpp_is_member_pointer<typename remove_cv<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7ffe43972880 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7ffe43972ae8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:901:22, col:50> col:50 implicit struct is_member_pointer
| |   |-ClassTemplateDecl 0x7ffe43972ce8 <line:911:1, line:913:79> line:911:50 is_member_object_pointer
| |   | |-TemplateTypeParmDecl 0x7ffe43972ba0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe43972c50 <col:22, line:913:79> line:911:50 struct is_member_object_pointer definition
| |   |   |-public 'integral_constant<_Bool, is_member_pointer<_Tp>::value && !is_member_function_pointer<_Tp>::value>'
| |   |   |-TypeVisibilityAttr 0x7ffe43972f60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7ffe43973400 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:911:22, col:50> col:50 implicit struct is_member_object_pointer
| |   |-ClassTemplateDecl 0x7ffe43973608 <line:924:1, line:925:55> line:924:50 is_enum
| |   | |-TemplateTypeParmDecl 0x7ffe439734b8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe43973570 <col:22, line:925:55> line:924:50 struct is_enum definition
| |   |   |-public 'integral_constant<_Bool, __is_enum(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7ffe43973880 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7ffe43973a68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:924:22, col:50> col:50 implicit struct is_enum
| |   |-ClassTemplateDecl 0x7ffe43973c68 <line:950:1, line:952:70> line:950:50 is_arithmetic
| |   | |-TemplateTypeParmDecl 0x7ffe43973b20 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe43973bd0 <col:22, line:952:70> line:950:50 struct is_arithmetic definition
| |   |   |-public 'integral_constant<_Bool, is_integral<_Tp>::value || is_floating_point<_Tp>::value>'
| |   |   |-TypeVisibilityAttr 0x7ffe43973ee0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7ffe43974318 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:950:22, col:50> col:50 implicit struct is_arithmetic
| |   |-ClassTemplateDecl 0x7ffe43974548 <line:961:1, line:964:66> line:961:50 is_fundamental
| |   | |-TemplateTypeParmDecl 0x7ffe43974400 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe439744b0 <col:22, line:964:66> line:961:50 struct is_fundamental definition
| |   |   |-public 'integral_constant<_Bool, is_void<_Tp>::value || __is_nullptr_t<_Tp>::value || is_arithmetic<_Tp>::value>'
| |   |   |-TypeVisibilityAttr 0x7ffe439747c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7ffe43974d18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:961:22, col:50> col:50 implicit struct is_fundamental
| |   |-ClassTemplateDecl 0x7ffe43974f18 <line:973:1, line:978:71> line:973:50 is_scalar
| |   | |-TemplateTypeParmDecl 0x7ffe43974dd0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7ffe43974e80 <col:22, line:978:71> line:973:50 struct is_scalar definition
| |   | | |-public 'integral_constant<_Bool, is_arithmetic<_Tp>::value || is_member_pointer<_Tp>::value || is_pointer<_Tp>::value || __is_nullptr_t<_Tp>::value || is_enum<_Tp>::value>'
| |   | | |-TypeVisibilityAttr 0x7ffe43975190 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | | `-CXXRecordDecl 0x7ffe43975988 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:973:22, col:50> col:50 implicit struct is_scalar
| |   | `-ClassTemplateSpecialization 0x7ffe43975a90 'is_scalar'
| |   |-ClassTemplateSpecializationDecl 0x7ffe43975a90 <line:980:1, col:82> col:41 struct is_scalar definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'nullptr_t'
| |   | |-TypeVisibilityAttr 0x7ffe43975bc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7ffe43975d40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:980:13, col:41> col:41 implicit struct is_scalar
| |   |-ClassTemplateDecl 0x7ffe43975f48 <line:989:1, line:993:63> line:989:50 is_object
| |   | |-TemplateTypeParmDecl 0x7ffe43975df8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe43975eb0 <col:22, line:993:63> line:989:50 struct is_object definition
| |   |   |-public 'integral_constant<_Bool, is_scalar<_Tp>::value || is_array<_Tp>::value || is_union<_Tp>::value || is_class<_Tp>::value>'
| |   |   |-TypeVisibilityAttr 0x7ffe439761c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7ffe43976868 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:989:22, col:50> col:50 implicit struct is_object
| |   |-ClassTemplateDecl 0x7ffe43976a68 <line:1002:1, line:1003:68> line:1002:50 is_compound
| |   | |-TemplateTypeParmDecl 0x7ffe43976920 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe439769d0 <col:22, line:1003:68> line:1002:50 struct is_compound definition
| |   |   |-public 'integral_constant<_Bool, !is_fundamental<_Tp>::value>'
| |   |   |-TypeVisibilityAttr 0x7ffe43976ce0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7ffe43976fd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1002:22, col:50> col:50 implicit struct is_compound
| |   |-CXXRecordDecl 0x7ffe43977090 <line:1013:1, line:1016:1> line:1013:8 struct __is_referenceable_impl definition
| |   | |-CXXRecordDecl 0x7ffe439771b8 <col:1, col:8> col:8 implicit struct __is_referenceable_impl
| |   | |-FunctionTemplateDecl 0x7ffe439774c0 <line:1014:5, col:48> col:38 __test
| |   | | |-TemplateTypeParmDecl 0x7ffe43977250 <col:15, col:21> col:21 referenced class depth 0 index 0 _Tp
| |   | | `-CXXMethodDecl 0x7ffe43977428 <col:26, col:48> col:38 __test '_Tp &(int)' static
| |   | |   `-ParmVarDecl 0x7ffe439772e8 <col:45> col:48 'int'
| |   | `-FunctionTemplateDecl 0x7ffe43977658 <line:1015:5, col:49> col:39 __test
| |   |   |-TemplateTypeParmDecl 0x7ffe43977518 <col:15, col:21> col:21 class depth 0 index 0 _Tp
| |   |   `-CXXMethodDecl 0x7ffe439775c0 <col:26, col:49> col:39 __test 'struct std::__1::__two (...)' static
| |   |-ClassTemplateDecl 0x7ffe439777e8 <line:1018:1, line:1020:81> line:1019:8 __is_referenceable
| |   | |-TemplateTypeParmDecl 0x7ffe439776c8 <line:1018:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe43977750 <line:1019:1, line:1020:81> line:1019:8 struct __is_referenceable definition
| |   |   |-public 'integral_constant<_Bool, !is_same<decltype(struct __is_referenceable_impl::__test<_Tp>(0)), struct __two>::value>'
| |   |   `-CXXRecordDecl 0x7ffe43977f88 <col:1, col:8> col:8 implicit struct __is_referenceable
| |   |-ClassTemplateDecl 0x7ffe43978548 <line:1025:1, line:1028:50> col:8 __add_const
| |   | |-TemplateTypeParmDecl 0x7ffe43978040 <line:1025:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7ffe43978438 <col:22, line:1027:44> line:1025:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7ffe43978400 <col:29, line:1027:44> '<dependent type>' '||'
| |   | |     |-BinaryOperator 0x7ffe439782c8 <line:1025:29, line:1026:47> '<dependent type>' '||'
| |   | |     | |-DependentScopeDeclRefExpr 0x7ffe43978178 <line:1025:29, col:48> '<dependent type>' lvalue
| |   | |     | `-DependentScopeDeclRefExpr 0x7ffe43978288 <line:1026:29, col:47> '<dependent type>' lvalue
| |   | |     `-DependentScopeDeclRefExpr 0x7ffe439783b8 <line:1027:29, col:44> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7ffe439784b0 <line:1028:1, col:50> col:8 struct __add_const definition
| |   |   |-CXXRecordDecl 0x7ffe43978810 <col:1, col:8> col:8 implicit struct __add_const
| |   |   `-TypedefDecl 0x7ffe439788b8 <col:33, col:45> col:45 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7ffe43978080 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7ffe43978040 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe43978b10 <line:1030:1, line:1031:56> col:8 struct __add_const definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7ffe43978930 <line:1030:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7ffe43978da0 <line:1031:1, col:8> col:8 implicit struct __add_const
| |   | `-TypedefDecl 0x7ffe43978e48 <col:33, col:51> col:51 type 'const _Tp'
| |   |   `-QualType 0x7ffe43978971 'const _Tp' const
| |   |     `-TemplateTypeParmType 0x7ffe43978970 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7ffe43978930 '_Tp'
| |   |-ClassTemplateDecl 0x7ffe43979008 <line:1033:1, line:1034:51> line:1033:50 add_const
| |   | |-TemplateTypeParmDecl 0x7ffe43978ec0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe43978f70 <col:22, line:1034:51> line:1033:50 struct add_const definition
| |   |   |-TypeVisibilityAttr 0x7ffe43979280 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7ffe439792c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1033:22, col:50> col:50 implicit struct add_const
| |   |   `-TypedefDecl 0x7ffe439798c0 <line:1034:6, col:46> col:46 type 'typename __add_const<_Tp>::type'
| |   |     `-DependentNameType 0x7ffe43979850 'typename __add_const<_Tp>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7ffe43979b80 <line:1037:1, col:67> col:22 add_const_t
| |   | |-TemplateTypeParmDecl 0x7ffe43979938 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7ffe43979b20 <col:22, col:67> col:28 add_const_t 'typename add_const<_Tp>::type'
| |   |   `-DependentNameType 0x7ffe43979ab0 'typename add_const<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7ffe4397a0d0 <line:1042:1, line:1045:53> col:8 __add_volatile
| |   | |-TemplateTypeParmDecl 0x7ffe43979bd0 <line:1042:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7ffe43979fc0 <col:22, line:1044:47> line:1042:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7ffe43979f88 <col:29, line:1044:47> '<dependent type>' '||'
| |   | |     |-BinaryOperator 0x7ffe43979e58 <line:1042:29, line:1043:47> '<dependent type>' '||'
| |   | |     | |-DependentScopeDeclRefExpr 0x7ffe43979d08 <line:1042:29, col:48> '<dependent type>' lvalue
| |   | |     | `-DependentScopeDeclRefExpr 0x7ffe43979e18 <line:1043:29, col:47> '<dependent type>' lvalue
| |   | |     `-DependentScopeDeclRefExpr 0x7ffe43979f48 <line:1044:29, col:47> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7ffe4397a038 <line:1045:1, col:53> col:8 struct __add_volatile definition
| |   |   |-CXXRecordDecl 0x7ffe4397aa00 <col:1, col:8> col:8 implicit struct __add_volatile
| |   |   `-TypedefDecl 0x7ffe4397aaa8 <col:36, col:48> col:48 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7ffe43979c10 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7ffe43979bd0 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe4397ad00 <line:1047:1, line:1048:62> col:8 struct __add_volatile definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7ffe4397ab20 <line:1047:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7ffe4397af90 <line:1048:1, col:8> col:8 implicit struct __add_volatile
| |   | `-TypedefDecl 0x7ffe4397b038 <col:36, col:57> col:57 type 'volatile _Tp'
| |   |   `-QualType 0x7ffe4397ab64 'volatile _Tp' volatile
| |   |     `-TemplateTypeParmType 0x7ffe4397ab60 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7ffe4397ab20 '_Tp'
| |   |-ClassTemplateDecl 0x7ffe4397b1f8 <line:1050:1, line:1051:54> line:1050:50 add_volatile
| |   | |-TemplateTypeParmDecl 0x7ffe4397b0b0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe4397b160 <col:22, line:1051:54> line:1050:50 struct add_volatile definition
| |   |   |-TypeVisibilityAttr 0x7ffe4397b470 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7ffe4397b4b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1050:22, col:50> col:50 implicit struct add_volatile
| |   |   `-TypedefDecl 0x7ffe4397c0a0 <line:1051:6, col:49> col:49 type 'typename __add_volatile<_Tp>::type'
| |   |     `-DependentNameType 0x7ffe4397c030 'typename __add_volatile<_Tp>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7ffe4397c360 <line:1054:1, col:73> col:22 add_volatile_t
| |   | |-TemplateTypeParmDecl 0x7ffe4397c118 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7ffe4397c300 <col:22, col:73> col:28 add_volatile_t 'typename add_volatile<_Tp>::type'
| |   |   `-DependentNameType 0x7ffe4397c290 'typename add_volatile<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7ffe4397c4f8 <line:1059:1, line:1060:78> line:1059:50 add_cv
| |   | |-TemplateTypeParmDecl 0x7ffe4397c3b0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe4397c460 <col:22, line:1060:78> line:1059:50 struct add_cv definition
| |   |   |-TypeVisibilityAttr 0x7ffe4397c770 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7ffe4397c7b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1059:22, col:50> col:50 implicit struct add_cv
| |   |   `-TypedefDecl 0x7ffe4397cb10 <line:1060:6, col:73> col:73 type 'typename add_const<typename add_volatile<_Tp>::type>::type'
| |   |     `-DependentNameType 0x7ffe4397caa0 'typename add_const<typename add_volatile<_Tp>::type>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7ffe4397cdd0 <line:1063:1, col:61> col:22 add_cv_t
| |   | |-TemplateTypeParmDecl 0x7ffe4397cb88 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7ffe4397cd70 <col:22, col:61> col:28 add_cv_t 'typename add_cv<_Tp>::type'
| |   |   `-DependentNameType 0x7ffe4397cd00 'typename add_cv<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7ffe4397cf68 <line:1068:1, col:92> col:50 remove_reference
| |   | |-TemplateTypeParmDecl 0x7ffe4397ce20 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe4397ced0 <col:22, col:92> col:50 struct remove_reference definition
| |   |   |-TypeVisibilityAttr 0x7ffe4397d830 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7ffe4397d878 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1068:22, col:50> col:50 implicit struct remove_reference
| |   |   `-TypedefDecl 0x7ffe4397d920 <col:75, col:87> col:87 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7ffe4397ce60 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7ffe4397ce20 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe4397db68 <line:1069:1, col:92> col:50 struct remove_reference definition
| |   | |-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateTypeParmDecl 0x7ffe4397d998 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7ffe4397dca8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7ffe4397dde0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1069:22, col:50> col:50 implicit struct remove_reference
| |   | `-TypedefDecl 0x7ffe4397de88 <col:75, col:87> col:87 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7ffe4397d9e0 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7ffe4397d998 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe4397e0c8 <line:1071:1, col:92> col:50 struct remove_reference definition
| |   | |-TemplateArgument type 'type-parameter-0-0 &&'
| |   | |-TemplateTypeParmDecl 0x7ffe4397df00 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7ffe4397e208 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7ffe4397e340 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1071:22, col:50> col:50 implicit struct remove_reference
| |   | `-TypedefDecl 0x7ffe4397e3e8 <col:75, col:87> col:87 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7ffe4397df40 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7ffe4397df00 '_Tp'
| |   |-TypeAliasTemplateDecl 0x7ffe4397eca0 <line:1075:1, col:81> col:22 remove_reference_t
| |   | |-TemplateTypeParmDecl 0x7ffe4397e460 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7ffe4397ec40 <col:22, col:81> col:28 remove_reference_t 'typename remove_reference<_Tp>::type'
| |   |   `-DependentNameType 0x7ffe4397e5d0 'typename remove_reference<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7ffe4397ef88 <line:1080:1, col:128> col:68 __add_lvalue_reference_impl
| |   | |-TemplateTypeParmDecl 0x7ffe4397ecf0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7ffe4397ee78 <col:22, col:54> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7ffe4397ee28 <col:29, col:54> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7ffe4397eef0 <col:61, col:128> col:68 struct __add_lvalue_reference_impl definition
| |   |   |-CXXRecordDecl 0x7ffe4397f250 <col:61, col:68> col:68 implicit struct __add_lvalue_reference_impl
| |   |   `-TypedefDecl 0x7ffe4397f2f8 <col:109, col:122> col:122 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7ffe4397ed30 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7ffe4397ecf0 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe4397f550 <line:1081:1, col:128> col:68 struct __add_lvalue_reference_impl definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7ffe4397f370 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7ffe4397f7e0 <col:61, col:68> col:68 implicit struct __add_lvalue_reference_impl
| |   | `-TypedefDecl 0x7ffe4397f8b8 <col:109, col:122> col:122 type '_Tp &'
| |   |   `-LValueReferenceType 0x7ffe4397f880 '_Tp &' dependent
| |   |     `-TemplateTypeParmType 0x7ffe4397f3b0 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7ffe4397f370 '_Tp'
| |   |-ClassTemplateDecl 0x7ffe4397fa78 <line:1083:1, line:1084:63> line:1083:50 add_lvalue_reference
| |   | |-TemplateTypeParmDecl 0x7ffe4397f930 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe4397f9e0 <col:22, line:1084:63> line:1083:50 struct add_lvalue_reference definition
| |   |   |-TypeVisibilityAttr 0x7ffe4397fd30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7ffe4397fd78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1083:22, col:50> col:50 implicit struct add_lvalue_reference
| |   |   `-TypedefDecl 0x7ffe43980110 <line:1084:2, col:58> col:58 type 'typename __add_lvalue_reference_impl<_Tp>::type'
| |   |     `-DependentNameType 0x7ffe439800a0 'typename __add_lvalue_reference_impl<_Tp>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7ffe439803d0 <line:1087:1, col:89> col:22 add_lvalue_reference_t
| |   | |-TemplateTypeParmDecl 0x7ffe43980188 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7ffe43980370 <col:22, col:89> col:28 add_lvalue_reference_t 'typename add_lvalue_reference<_Tp>::type'
| |   |   `-DependentNameType 0x7ffe43980300 'typename add_lvalue_reference<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7ffe439806b8 <line:1092:1, col:129> col:68 __add_rvalue_reference_impl
| |   | |-TemplateTypeParmDecl 0x7ffe43980420 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7ffe439805a8 <col:22, col:54> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7ffe43980558 <col:29, col:54> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7ffe43980620 <col:61, col:129> col:68 struct __add_rvalue_reference_impl definition
| |   |   |-CXXRecordDecl 0x7ffe43980980 <col:61, col:68> col:68 implicit struct __add_rvalue_reference_impl
| |   |   `-TypedefDecl 0x7ffe43980a28 <col:109, col:123> col:123 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7ffe43980460 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7ffe43980420 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe43984cd0 <line:1093:1, col:129> col:68 struct __add_rvalue_reference_impl definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7ffe43980aa0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7ffe43984f60 <col:61, col:68> col:68 implicit struct __add_rvalue_reference_impl
| |   | `-TypedefDecl 0x7ffe43985038 <col:109, col:123> col:123 type '_Tp &&'
| |   |   `-RValueReferenceType 0x7ffe43985000 '_Tp &&' dependent
| |   |     `-TemplateTypeParmType 0x7ffe43980ae0 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7ffe43980aa0 '_Tp'
| |   |-ClassTemplateDecl 0x7ffe439851f8 <line:1095:1, line:1096:63> line:1095:50 add_rvalue_reference
| |   | |-TemplateTypeParmDecl 0x7ffe439850b0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe43985160 <col:22, line:1096:63> line:1095:50 struct add_rvalue_reference definition
| |   |   |-TypeVisibilityAttr 0x7ffe43985470 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7ffe439854b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1095:22, col:50> col:50 implicit struct add_rvalue_reference
| |   |   `-TypedefDecl 0x7ffe43985830 <line:1096:2, col:58> col:58 type 'typename __add_rvalue_reference_impl<_Tp>::type'
| |   |     `-DependentNameType 0x7ffe439857c0 'typename __add_rvalue_reference_impl<_Tp>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7ffe43985af0 <line:1099:1, col:89> col:22 add_rvalue_reference_t
| |   | |-TemplateTypeParmDecl 0x7ffe439858a8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7ffe43985a90 <col:22, col:89> col:28 add_rvalue_reference_t 'typename add_rvalue_reference<_Tp>::type'
| |   |   `-DependentNameType 0x7ffe43985a20 'typename add_rvalue_reference<_Tp>::type' dependent
| |   |-FunctionTemplateDecl 0x7ffe43985dc8 <line:1106:1, col:41> col:28 __declval
| |   | |-TemplateTypeParmDecl 0x7ffe43985b40 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7ffe43985d30 <col:22, col:41> col:28 __declval '_Tp &&(int)'
| |   |   `-ParmVarDecl 0x7ffe43985c00 <col:38> col:41 'int'
| |   |-FunctionTemplateDecl 0x7ffe43986058 <line:1107:1, col:42> col:28 __declval
| |   | |-TemplateTypeParmDecl 0x7ffe43985e20 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7ffe43985fc0 <col:22, col:42> col:28 __declval '_Tp (long)'
| |   |   `-ParmVarDecl 0x7ffe43985eb8 <col:38> col:42 'long'
| |   |-FunctionTemplateDecl 0x7ffe43986450 <line:1109:1, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:758:21> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1111:1 declval
| |   | |-TemplateTypeParmDecl 0x7ffe439860b0 <line:1109:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7ffe439863b8 <line:1110:1, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:758:21> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1111:1 declval 'decltype(std::__1::__declval<_Tp>(0)) (void) noexcept'
| |   |-ClassTemplateDecl 0x7ffe439865b8 <line:1123:1, line:1126:1> line:1124:8 __uncvref
| |   | |-TemplateTypeParmDecl 0x7ffe439864a0 <line:1123:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe43986520 <line:1124:1, line:1126:1> line:1124:8 struct __uncvref definition
| |   |   |-CXXRecordDecl 0x7ffe43986830 <col:1, col:8> col:8 implicit struct __uncvref
| |   |   `-TypedefDecl 0x7ffe43986b90 <line:1125:5, col:76> col:76 type 'typename remove_cv<typename remove_reference<_Tp>::type>::type'
| |   |     `-DependentNameType 0x7ffe43986b20 'typename remove_cv<typename remove_reference<_Tp>::type>::type' dependent
| |   |-ClassTemplateDecl 0x7ffe43986d38 <line:1128:1, line:1131:1> line:1129:8 __unconstref
| |   | |-TemplateTypeParmDecl 0x7ffe43986c20 <line:1128:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe43986ca0 <line:1129:1, line:1131:1> line:1129:8 struct __unconstref definition
| |   |   |-CXXRecordDecl 0x7ffe43986fb0 <col:1, col:8> col:8 implicit struct __unconstref
| |   |   `-TypedefDecl 0x7ffe43987310 <line:1130:5, col:79> col:79 type 'typename remove_const<typename remove_reference<_Tp>::type>::type'
| |   |     `-DependentNameType 0x7ffe439872a0 'typename remove_const<typename remove_reference<_Tp>::type>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7ffe439875d0 <line:1134:1, line:1135:46> col:1 __uncvref_t
| |   | |-TemplateTypeParmDecl 0x7ffe43987388 <line:1134:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7ffe43987570 <line:1135:1, col:46> col:7 __uncvref_t 'typename __uncvref<_Tp>::type'
| |   |   `-DependentNameType 0x7ffe43987500 'typename __uncvref<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7ffe439877b0 <line:1140:1, line:1142:68> line:1141:8 __is_same_uncvref
| |   | |-TemplateTypeParmDecl 0x7ffe43987620 <line:1140:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7ffe43987688 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | `-CXXRecordDecl 0x7ffe43987718 <line:1141:1, line:1142:68> line:1141:8 struct __is_same_uncvref definition
| |   |   |-public 'is_same<typename __uncvref<_Tp>::type, typename __uncvref<_Up>::type>'
| |   |   `-CXXRecordDecl 0x7ffe4395a688 <col:1, col:8> col:8 implicit struct __is_same_uncvref
| |   |-CXXRecordDecl 0x7ffe4395a740 <line:1144:1, line:1147:1> line:1144:8 referenced struct __any definition
| |   | |-CXXRecordDecl 0x7ffe4395a868 <col:1, col:8> col:8 implicit referenced struct __any
| |   | `-CXXConstructorDecl 0x7ffe4395a9a0 <line:1146:5, col:14> col:5 __any 'void (...)'
| |   |-ClassTemplateDecl 0x7ffe4395abb8 <line:1151:1, col:104> col:50 remove_pointer
| |   | |-TemplateTypeParmDecl 0x7ffe4395aa68 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe4395ab20 <col:22, col:104> col:50 struct remove_pointer definition
| |   |   |-TypeVisibilityAttr 0x7ffe4395ae30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7ffe4395ae78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1151:22, col:50> col:50 implicit struct remove_pointer
| |   |   `-TypedefDecl 0x7ffe4395af20 <col:87, col:99> col:99 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7ffe4395aab0 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7ffe4395aa68 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe4395b168 <line:1152:1, col:104> col:50 struct remove_pointer definition
| |   | |-TemplateArgument type 'type-parameter-0-0 *'
| |   | |-TemplateTypeParmDecl 0x7ffe4395af98 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7ffe4395b2a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7ffe43989600 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1152:22, col:50> col:50 implicit struct remove_pointer
| |   | `-TypedefDecl 0x7ffe439896a8 <col:87, col:99> col:99 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7ffe4395afe0 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7ffe4395af98 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe439898e8 <line:1153:1, col:104> col:50 struct remove_pointer definition
| |   | |-TemplateArgument type 'type-parameter-0-0 *const'
| |   | |-TemplateTypeParmDecl 0x7ffe43989720 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7ffe43989a28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7ffe43989b60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1153:22, col:50> col:50 implicit struct remove_pointer
| |   | `-TypedefDecl 0x7ffe43989c08 <col:87, col:99> col:99 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7ffe43989760 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7ffe43989720 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe43989e48 <line:1154:1, col:104> col:50 struct remove_pointer definition
| |   | |-TemplateArgument type 'type-parameter-0-0 *volatile'
| |   | |-TemplateTypeParmDecl 0x7ffe43989c80 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7ffe43989f88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7ffe4398a0c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1154:22, col:50> col:50 implicit struct remove_pointer
| |   | `-TypedefDecl 0x7ffe4398a168 <col:87, col:99> col:99 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7ffe43989cc0 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7ffe43989c80 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe4398a3a8 <line:1155:1, col:104> col:50 struct remove_pointer definition
| |   | |-TemplateArgument type 'type-parameter-0-0 *const volatile'
| |   | |-TemplateTypeParmDecl 0x7ffe4398a1e0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7ffe4398a4e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7ffe4398a668 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1155:22, col:50> col:50 implicit struct remove_pointer
| |   | `-TypedefDecl 0x7ffe4398a710 <col:87, col:99> col:99 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7ffe4398a220 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7ffe4398a1e0 '_Tp'
| |   |-TypeAliasTemplateDecl 0x7ffe4398a9d0 <line:1158:1, col:77> col:22 remove_pointer_t
| |   | |-TemplateTypeParmDecl 0x7ffe4398a788 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7ffe4398a970 <col:22, col:77> col:28 remove_pointer_t 'typename remove_pointer<_Tp>::type'
| |   |   `-DependentNameType 0x7ffe4398a900 'typename remove_pointer<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7ffe4398afa0 <line:1163:1, line:1167:57> line:1166:8 __add_pointer_impl
| |   | |-TemplateTypeParmDecl 0x7ffe4398aa20 <line:1163:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7ffe4398ae90 <line:1164:9, line:1165:63> line:1164:14 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7ffe4398ae58 <col:16, line:1165:63> '<dependent type>' '||'
| |   | |     |-DependentScopeDeclRefExpr 0x7ffe4398ab58 <line:1164:16, col:41> '<dependent type>' lvalue
| |   | |     `-DependentScopeDeclRefExpr 0x7ffe4398ae18 <line:1165:17, col:63> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7ffe4398af08 <line:1166:1, line:1167:57> line:1166:8 struct __add_pointer_impl definition
| |   |   |-CXXRecordDecl 0x7ffe4398b260 <col:1, col:8> col:8 implicit struct __add_pointer_impl
| |   |   `-TypedefDecl 0x7ffe4398b480 <line:1167:6, col:52> col:52 type 'typename remove_reference<_Tp>::type *'
| |   |     `-PointerType 0x7ffe4398b430 'typename remove_reference<_Tp>::type *' dependent
| |   |       `-DependentNameType 0x7ffe4398b3b0 'typename remove_reference<_Tp>::type' dependent
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe4398c730 <line:1168:1, line:1169:23> line:1168:29 struct __add_pointer_impl definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7ffe4398b4f8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7ffe4398c9c0 <col:22, col:29> col:29 implicit struct __add_pointer_impl
| |   | `-TypedefDecl 0x7ffe4398ca68 <line:1169:6, col:18> col:18 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7ffe4398b540 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7ffe4398b4f8 '_Tp'
| |   |-ClassTemplateDecl 0x7ffe4398cc28 <line:1171:1, line:1172:58> line:1171:50 add_pointer
| |   | |-TemplateTypeParmDecl 0x7ffe4398cae0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe4398cb90 <col:22, line:1172:58> line:1171:50 struct add_pointer definition
| |   |   |-TypeVisibilityAttr 0x7ffe4398cea0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7ffe4398cee8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1171:22, col:50> col:50 implicit struct add_pointer
| |   |   `-TypedefDecl 0x7ffe4398d4b0 <line:1172:6, col:53> col:53 type 'typename __add_pointer_impl<_Tp>::type'
| |   |     `-DependentNameType 0x7ffe4398d440 'typename __add_pointer_impl<_Tp>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7ffe4398d7b0 <line:1175:1, col:71> col:22 add_pointer_t
| |   | |-TemplateTypeParmDecl 0x7ffe4398d528 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7ffe4398d750 <col:22, col:71> col:28 add_pointer_t 'typename add_pointer<_Tp>::type'
| |   |   `-DependentNameType 0x7ffe4398d6e0 'typename add_pointer<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7ffe4398da98 <line:1180:1, line:1181:82> col:8 __libcpp_is_signed_impl
| |   | |-TemplateTypeParmDecl 0x7ffe4398d800 <line:1180:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7ffe4398d988 <col:22, col:47> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7ffe4398d938 <col:29, col:47> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7ffe4398da00 <line:1181:1, col:82> col:8 struct __libcpp_is_signed_impl definition
| |   |   |-public 'integral_constant<_Bool, (_Tp(-1) < _Tp(0))>'
| |   |   `-CXXRecordDecl 0x7ffe4398dff8 <col:1, col:8> col:8 implicit struct __libcpp_is_signed_impl
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe4398e290 <line:1183:1, line:1184:64> col:8 struct __libcpp_is_signed_impl definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7ffe4398e0b0 <line:1183:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe4398e560 <line:1184:1, col:8> col:8 implicit struct __libcpp_is_signed_impl
| |   |-ClassTemplateDecl 0x7ffe4398e8b8 <line:1186:1, line:1187:66> col:8 __libcpp_is_signed
| |   | |-TemplateTypeParmDecl 0x7ffe4398e620 <line:1186:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7ffe4398e7a8 <col:22, col:49> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7ffe4398e758 <col:29, col:49> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7ffe4398e820 <line:1187:1, col:66> col:8 struct __libcpp_is_signed definition
| |   |   |-public '__libcpp_is_signed_impl<_Tp>'
| |   |   `-CXXRecordDecl 0x7ffe4398edb8 <col:1, col:8> col:8 implicit struct __libcpp_is_signed
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe4398f050 <line:1189:1, col:81> col:29 struct __libcpp_is_signed definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7ffe4398ee70 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe4398f320 <col:22, col:29> col:29 implicit struct __libcpp_is_signed
| |   |-ClassTemplateDecl 0x7ffe4398f528 <line:1191:1, col:94> col:50 is_signed
| |   | |-TemplateTypeParmDecl 0x7ffe4398f3d8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe4398f490 <col:22, col:94> col:50 struct is_signed definition
| |   |   |-public '__libcpp_is_signed<_Tp>'
| |   |   |-TypeVisibilityAttr 0x7ffe4398f830 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7ffe4398fab8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1191:22, col:50> col:50 implicit struct is_signed
| |   |-ClassTemplateDecl 0x7ffe4398fe08 <line:1200:1, line:1201:84> col:8 __libcpp_is_unsigned_impl
| |   | |-TemplateTypeParmDecl 0x7ffe4398fb70 <line:1200:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7ffe4398fcf8 <col:22, col:47> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7ffe4398fca8 <col:29, col:47> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7ffe4398fd70 <line:1201:1, col:84> col:8 struct __libcpp_is_unsigned_impl definition
| |   |   |-public 'integral_constant<_Bool, (_Tp(0) < _Tp(-1))>'
| |   |   `-CXXRecordDecl 0x7ffe43990368 <col:1, col:8> col:8 implicit struct __libcpp_is_unsigned_impl
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe43990600 <line:1203:1, line:1204:67> col:8 struct __libcpp_is_unsigned_impl definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7ffe43990420 <line:1203:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe439908d0 <line:1204:1, col:8> col:8 implicit struct __libcpp_is_unsigned_impl
| |   |-ClassTemplateDecl 0x7ffe43990c28 <line:1206:1, line:1207:70> col:8 __libcpp_is_unsigned
| |   | |-TemplateTypeParmDecl 0x7ffe43990988 <line:1206:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7ffe43990b18 <col:22, col:49> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7ffe43990ac8 <col:29, col:49> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7ffe43990b90 <line:1207:1, col:70> col:8 struct __libcpp_is_unsigned definition
| |   |   |-public '__libcpp_is_unsigned_impl<_Tp>'
| |   |   `-CXXRecordDecl 0x7ffe43991128 <col:1, col:8> col:8 implicit struct __libcpp_is_unsigned
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe439913c0 <line:1209:1, col:83> col:29 struct __libcpp_is_unsigned definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7ffe439911e0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe439916a8 <col:22, col:29> col:29 implicit struct __libcpp_is_unsigned
| |   |-ClassTemplateDecl 0x7ffe439918a8 <line:1211:1, col:98> col:50 is_unsigned
| |   | |-TemplateTypeParmDecl 0x7ffe43991760 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe43991810 <col:22, col:98> col:50 struct is_unsigned definition
| |   |   |-public '__libcpp_is_unsigned<_Tp>'
| |   |   |-TypeVisibilityAttr 0x7ffe43991b20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7ffe43991da8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1211:22, col:50> col:50 implicit struct is_unsigned
| |   |-ClassTemplateDecl 0x7ffe43991fa8 <line:1220:1, line:1221:44> line:1220:50 rank
| |   | |-TemplateTypeParmDecl 0x7ffe43991e60 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe43991f10 <col:22, line:1221:44> line:1220:50 struct rank definition
| |   |   |-public 'integral_constant<size_t, 0>':'struct std::__1::integral_constant<unsigned long, 0>'
| |   |   |-TypeVisibilityAttr 0x7ffe43992220 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7ffe43992b40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1220:22, col:50> col:50 implicit struct rank
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe43992dd8 <line:1222:1, line:1223:63> line:1222:50 struct rank definition
| |   | |-public 'integral_constant<size_t, rank<_Tp>::value + 1>'
| |   | |-TemplateArgument type 'type-parameter-0-0 []'
| |   | |-TemplateTypeParmDecl 0x7ffe43992bf8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7ffe43992f28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7ffe43993348 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1222:22, col:50> col:50 implicit struct rank
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe43993688 <line:1224:1, line:1225:63> line:1224:62 struct rank definition
| |   | |-public 'integral_constant<size_t, rank<_Tp>::value + 1>'
| |   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
| |   | |-TemplateTypeParmDecl 0x7ffe43993400 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7ffe43993478 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Np
| |   | |-TypeVisibilityAttr 0x7ffe439937d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7ffe43993b88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1224:34, col:62> col:62 implicit struct rank
| |   |-ClassTemplateDecl 0x7ffe43993e38 <line:1234:1, line:1235:44> line:1234:68 extent
| |   | |-TemplateTypeParmDecl 0x7ffe43993c40 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7ffe43993ce0 <col:22, col:37> col:31 'unsigned int' depth 0 index 1 _Ip
| |   | | `-TemplateArgument expr
| |   | |   `-ImplicitCastExpr 0x7ffe43993d38 <col:37> 'unsigned int' <IntegralCast>
| |   | |     `-IntegerLiteral 0x7ffe43993ca8 <col:37> 'int' 0
| |   | `-CXXRecordDecl 0x7ffe43993da0 <col:40, line:1235:44> line:1234:68 struct extent definition
| |   |   |-public 'integral_constant<size_t, 0>':'struct std::__1::integral_constant<unsigned long, 0>'
| |   |   |-TypeVisibilityAttr 0x7ffe43994100 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7ffe43994288 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1234:40, col:68> col:68 implicit struct extent
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe43994600 <line:1236:1, line:1237:44> line:1236:50 struct extent definition
| |   | |-public 'integral_constant<size_t, 0>':'struct std::__1::integral_constant<unsigned long, 0>'
| |   | |-TemplateArgument type 'type-parameter-0-0 []'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7ffe43994340 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7ffe43994788 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7ffe43994a38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1236:22, col:50> col:50 implicit struct extent
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe43994dc0 <line:1238:1, line:1239:68> line:1238:64 struct extent definition
| |   | |-public 'integral_constant<size_t, extent<_Tp, _Ip - 1>::value>'
| |   | |-TemplateArgument type 'type-parameter-0-0 []'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7ffe43994c68 <col:78> 'unsigned int' NonTypeTemplateParm 0x7ffe43994b70 '_Ip' 'unsigned int'
| |   | |-TemplateTypeParmDecl 0x7ffe43994af0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7ffe43994b70 <col:22, col:31> col:31 referenced 'unsigned int' depth 0 index 1 _Ip
| |   | |-TypeVisibilityAttr 0x7ffe43994f28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7ffe43995458 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1238:36, col:64> col:64 implicit struct extent
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe44800230 <line:1240:1, line:1241:46> line:1240:62 struct extent definition
| |   | |-public 'integral_constant<size_t, _Np>'
| |   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7ffe43995510 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7ffe43995588 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Np
| |   | |-TypeVisibilityAttr 0x7ffe448003b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7ffe448006b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1240:34, col:62> col:62 implicit struct extent
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe44800af0 <line:1242:1, line:1243:68> line:1242:76 struct extent definition
| |   | |-public 'integral_constant<size_t, extent<_Tp, _Ip - 1>::value>'
| |   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7ffe44800990 <col:93> 'unsigned int' NonTypeTemplateParm 0x7ffe44800858 '_Ip' 'unsigned int'
| |   | |-TemplateTypeParmDecl 0x7ffe44800770 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7ffe448007e8 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Np
| |   | |-NonTypeTemplateParmDecl 0x7ffe44800858 <col:34, col:43> col:43 referenced 'unsigned int' depth 0 index 2 _Ip
| |   | |-TypeVisibilityAttr 0x7ffe44800c58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7ffe440065b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1242:48, col:76> col:76 implicit struct extent
| |   |-ClassTemplateDecl 0x7ffe440067b8 <line:1252:1, line:1253:23> line:1252:50 remove_extent
| |   | |-TemplateTypeParmDecl 0x7ffe44006670 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe44006720 <col:22, line:1253:23> line:1252:50 struct remove_extent definition
| |   |   |-TypeVisibilityAttr 0x7ffe44006a30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7ffe44006a78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1252:22, col:50> col:50 implicit struct remove_extent
| |   |   `-TypedefDecl 0x7ffe44006b20 <line:1253:6, col:18> col:18 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7ffe440066b0 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7ffe44006670 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe44006d78 <line:1254:1, line:1255:23> line:1254:50 struct remove_extent definition
| |   | |-TemplateArgument type 'type-parameter-0-0 []'
| |   | |-TemplateTypeParmDecl 0x7ffe44006b98 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7ffe44006ec8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7ffe44007000 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1254:22, col:50> col:50 implicit struct remove_extent
| |   | `-TypedefDecl 0x7ffe440070a8 <line:1255:6, col:18> col:18 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7ffe44006be0 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7ffe44006b98 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe44007400 <line:1256:1, line:1257:23> line:1256:62 struct remove_extent definition
| |   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
| |   | |-TemplateTypeParmDecl 0x7ffe44007120 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7ffe44007198 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Np
| |   | |-TypeVisibilityAttr 0x7ffe44007548 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7ffe44007680 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1256:34, col:62> col:62 implicit struct remove_extent
| |   | `-TypedefDecl 0x7ffe44007728 <line:1257:6, col:18> col:18 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7ffe44007160 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7ffe44007120 '_Tp'
| |   |-TypeAliasTemplateDecl 0x7ffe440079e0 <line:1260:1, col:75> col:22 remove_extent_t
| |   | |-TemplateTypeParmDecl 0x7ffe440077a0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7ffe44007980 <col:22, col:75> col:28 remove_extent_t 'typename remove_extent<_Tp>::type'
| |   |   `-DependentNameType 0x7ffe44007910 'typename remove_extent<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7ffe44007b78 <line:1265:1, line:1266:23> line:1265:50 remove_all_extents
| |   | |-TemplateTypeParmDecl 0x7ffe44007a30 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe44007ae0 <col:22, line:1266:23> line:1265:50 struct remove_all_extents definition
| |   |   |-TypeVisibilityAttr 0x7ffe44007df0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7ffe44007e38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1265:22, col:50> col:50 implicit struct remove_all_extents
| |   |   `-TypedefDecl 0x7ffe44007ee0 <line:1266:6, col:18> col:18 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7ffe44007a70 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7ffe44007a30 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe44008138 <line:1267:1, line:1268:58> line:1267:50 struct remove_all_extents definition
| |   | |-TemplateArgument type 'type-parameter-0-0 []'
| |   | |-TemplateTypeParmDecl 0x7ffe44007f58 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7ffe44008288 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7ffe44008400 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1267:22, col:50> col:50 implicit struct remove_all_extents
| |   | `-TypedefDecl 0x7ffe44008600 <line:1268:6, col:53> col:53 type 'typename remove_all_extents<_Tp>::type'
| |   |   `-DependentNameType 0x7ffe44008590 'typename remove_all_extents<_Tp>::type' dependent
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe44008908 <line:1269:1, line:1270:58> line:1269:62 struct remove_all_extents definition
| |   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
| |   | |-TemplateTypeParmDecl 0x7ffe44008678 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7ffe440086f8 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Np
| |   | |-TypeVisibilityAttr 0x7ffe44008a58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7ffe44008b90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1269:34, col:62> col:62 implicit struct remove_all_extents
| |   | `-TypedefDecl 0x7ffe44008d50 <line:1270:6, col:53> col:53 type 'typename remove_all_extents<_Tp>::type'
| |   |   `-DependentNameType 0x7ffe44008ce0 'typename remove_all_extents<_Tp>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7ffe44008fd0 <line:1273:1, col:85> col:22 remove_all_extents_t
| |   | |-TemplateTypeParmDecl 0x7ffe44008dc8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7ffe44008f70 <col:22, col:85> col:28 remove_all_extents_t 'typename remove_all_extents<_Tp>::type'
| |   |   `-DependentNameType 0x7ffe44008f00 'typename remove_all_extents<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7ffe440091a8 <line:1278:1, line:1281:1> line:1279:8 __decay
| |   | |-TemplateTypeParmDecl 0x7ffe44009020 <line:1278:11, col:17> col:17 referenced class depth 0 index 0 _Up
| |   | |-NonTypeTemplateParmDecl 0x7ffe44009098 <col:22> col:26 '_Bool' depth 0 index 1
| |   | `-CXXRecordDecl 0x7ffe44009110 <line:1279:1, line:1281:1> line:1279:8 struct __decay definition
| |   |   |-CXXRecordDecl 0x7ffe4400a490 <col:1, col:8> col:8 implicit struct __decay
| |   |   `-TypedefDecl 0x7ffe4400a650 <line:1280:5, col:43> col:43 type 'typename remove_cv<_Up>::type'
| |   |     `-DependentNameType 0x7ffe4400a5e0 'typename remove_cv<_Up>::type' dependent
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe4400a8b0 <line:1283:1, line:1297:1> line:1284:8 struct __decay definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7ffe4400a6c8 <line:1283:11, col:17> col:17 referenced class depth 0 index 0 _Up
| |   | |-CXXRecordDecl 0x7ffe4400ab40 <line:1284:1, col:8> col:8 implicit struct __decay
| |   | |-AccessSpecDecl 0x7ffe4400abd8 <line:1285:1, col:7> col:1 public
| |   | `-TypedefDecl 0x7ffe4400b670 <line:1286:5, line:1296:30> col:30 type 'typename conditional<is_array<_Up>::value, typename remove_extent<_Up>::type *, typename conditional<is_function<_Up>::value, typename add_pointer<_Up>::type, typename remove_cv<_Up>::type>::type>::type'
| |   |   `-DependentNameType 0x7ffe4400b600 'typename conditional<is_array<_Up>::value, typename remove_extent<_Up>::type *, typename conditional<is_function<_Up>::value, typename add_pointer<_Up>::type, typename remove_cv<_Up>::type>::type>::type' dependent
| |   |-ClassTemplateDecl 0x7ffe4400b838 <line:1299:1, line:1306:1> line:1300:29 decay
| |   | |-TemplateTypeParmDecl 0x7ffe4400b6e8 <line:1299:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe4400b7a0 <line:1300:1, line:1306:1> line:1300:29 struct decay definition
| |   |   |-TypeVisibilityAttr 0x7ffe4400bab0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7ffe4400baf8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1300:1, col:29> col:29 implicit struct decay
| |   |   |-AccessSpecDecl 0x7ffe4400bb90 <line:1302:1, col:8> col:1 private
| |   |   |-TypedefDecl 0x7ffe4400bce0 <line:1303:5, col:50> col:50 referenced _Up 'typename remove_reference<_Tp>::type'
| |   |   | `-DependentNameType 0x7ffe4400bc70 'typename remove_reference<_Tp>::type' dependent
| |   |   |-AccessSpecDecl 0x7ffe4400bd38 <line:1304:1, col:7> col:1 public
| |   |   `-TypedefDecl 0x7ffe4400c100 <line:1305:5, col:73> col:73 type 'typename __decay<_Up, __is_referenceable<_Up>::value>::type'
| |   |     `-DependentNameType 0x7ffe4400c090 'typename __decay<_Up, __is_referenceable<_Up>::value>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7ffe4400c800 <line:1309:1, col:59> col:22 decay_t
| |   | |-TemplateTypeParmDecl 0x7ffe4400c178 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7ffe4400c360 <col:22, col:59> col:28 decay_t 'typename decay<_Tp>::type'
| |   |   `-DependentNameType 0x7ffe4400c2f0 'typename decay<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7ffe4400c998 <line:1314:1, line:1315:59> line:1314:50 is_abstract
| |   | |-TemplateTypeParmDecl 0x7ffe4400c850 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe4400c900 <col:22, line:1315:59> line:1314:50 struct is_abstract definition
| |   |   |-public 'integral_constant<_Bool, __is_abstract(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7ffe4400cc10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7ffe4400cdf8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1314:22, col:50> col:50 implicit struct is_abstract
| |   |-ClassTemplateDecl 0x7ffe4400cff8 <line:1325:1, line:1326:70> col:1 __libcpp_is_final
| |   | |-TemplateTypeParmDecl 0x7ffe4400ceb0 <line:1325:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe4400cf60 <col:22, line:1326:70> col:1 struct __libcpp_is_final definition
| |   |   |-public 'integral_constant<_Bool, __is_final(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7ffe4400d270 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7ffe4400d458 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1325:22, line:1326:1> col:1 implicit struct __libcpp_is_final
| |   |-ClassTemplateDecl 0x7ffe4400d658 <line:1333:1, line:1334:61> col:1 is_final
| |   | |-TemplateTypeParmDecl 0x7ffe4400d510 <line:1333:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe4400d5c0 <col:22, line:1334:61> col:1 struct is_final definition
| |   |   |-public 'integral_constant<_Bool, __is_final(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7ffe4400d8e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7ffe4400da68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1333:22, line:1334:1> col:1 implicit struct is_final
| |   |-ClassTemplateDecl 0x7ffe4400dce0 <line:1359:1, line:1361:63> line:1360:29 is_base_of
| |   | |-TemplateTypeParmDecl 0x7ffe4400db20 <line:1359:11, col:17> col:17 referenced class depth 0 index 0 _Bp
| |   | |-TemplateTypeParmDecl 0x7ffe4400db88 <col:22, col:28> col:28 referenced class depth 0 index 1 _Dp
| |   | `-CXXRecordDecl 0x7ffe4400dc48 <line:1360:1, line:1361:63> line:1360:29 struct is_base_of definition
| |   |   |-public 'integral_constant<_Bool, __is_base_of(_Bp, _Dp)>'
| |   |   |-TypeVisibilityAttr 0x7ffe4400df80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7ffe4400e178 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1360:1, col:29> col:29 implicit struct is_base_of
| |   |-ClassTemplateDecl 0x7ffe4400e3f0 <line:1399:1, line:1401:65> line:1399:61 is_convertible
| |   | |-TemplateTypeParmDecl 0x7ffe4400e230 <col:11, col:17> col:17 referenced class depth 0 index 0 _T1
| |   | |-TemplateTypeParmDecl 0x7ffe4400e298 <col:22, col:28> col:28 referenced class depth 0 index 1 _T2
| |   | `-CXXRecordDecl 0x7ffe4400e358 <col:33, line:1401:65> line:1399:61 struct is_convertible definition
| |   |   |-public 'integral_constant<_Bool, __is_convertible_to(_T1, _T2) && !is_abstract<_T2>::value>'
| |   |   |-TypeVisibilityAttr 0x7ffe4400e690 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7ffe4400fa48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1399:33, col:61> col:61 implicit struct is_convertible
| |   |-ClassTemplateDecl 0x7ffe4400fc48 <line:1489:1, line:1491:56> line:1490:29 is_empty
| |   | |-TemplateTypeParmDecl 0x7ffe4400fb00 <line:1489:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe4400fbb0 <line:1490:1, line:1491:56> line:1490:29 struct is_empty definition
| |   |   |-public 'integral_constant<_Bool, __is_empty(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7ffe4400fec0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7ffe440100a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1490:1, col:29> col:29 implicit struct is_empty
| |   |-ClassTemplateDecl 0x7ffe440102a8 <line:1525:1, line:1527:62> line:1526:29 is_polymorphic
| |   | |-TemplateTypeParmDecl 0x7ffe44010160 <line:1525:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe44010210 <line:1526:1, line:1527:62> line:1526:29 struct is_polymorphic definition
| |   |   |-public 'integral_constant<_Bool, __is_polymorphic(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7ffe44010520 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7ffe44010708 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1526:1, col:29> col:29 implicit struct is_polymorphic
| |   |-ClassTemplateDecl 0x7ffe44010908 <line:1550:1, line:1551:70> line:1550:50 has_virtual_destructor
| |   | |-TemplateTypeParmDecl 0x7ffe440107c0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe44010870 <col:22, line:1551:70> line:1550:50 struct has_virtual_destructor definition
| |   |   |-public 'integral_constant<_Bool, __has_virtual_destructor(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7ffe44010b80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7ffe44010d68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1550:22, col:50> col:50 implicit struct has_virtual_destructor
| |   |-ClassTemplateDecl 0x7ffe44010f68 <line:1567:1, line:1568:59> line:1567:50 alignment_of
| |   | |-TemplateTypeParmDecl 0x7ffe44010e20 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe44010ed0 <col:22, line:1568:59> line:1567:50 struct alignment_of definition
| |   |   |-public 'integral_constant<size_t, __alignof(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7ffe440111e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7ffe440113c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1567:22, col:50> col:50 implicit struct alignment_of
| |   |-ClassTemplateDecl 0x7ffe44011610 <line:1577:1, line:1582:1> line:1578:8 __type_list
| |   | |-TemplateTypeParmDecl 0x7ffe44011480 <line:1577:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-TemplateTypeParmDecl 0x7ffe440114e8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Tp
| |   | |-CXXRecordDecl 0x7ffe44011578 <line:1578:1, line:1582:1> line:1578:8 struct __type_list definition
| |   | | |-CXXRecordDecl 0x7ffe440118f0 <col:1, col:8> col:8 implicit struct __type_list
| |   | | |-TypedefDecl 0x7ffe44011998 <line:1580:5, col:17> col:17 _Head '_Hp'
| |   | | | `-TemplateTypeParmType 0x7ffe440114c0 '_Hp' dependent depth 0 index 0
| |   | | |   `-TemplateTypeParm 0x7ffe44011480 '_Hp'
| |   | | `-TypedefDecl 0x7ffe44011a00 <line:1581:5, col:17> col:17 _Tail '_Tp'
| |   | |   `-TemplateTypeParmType 0x7ffe44011530 '_Tp' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7ffe440114e8 '_Tp'
| |   | |-ClassTemplateSpecializationDecl 0x7ffe44015f18 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<int *>'
| |   | | `-TemplateArgument type 'struct std::__1::__nat'
| |   | |-ClassTemplateSpecializationDecl 0x7ffe44016130 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<struct std::__1::__struct_double4>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat>'
| |   | |-ClassTemplateSpecializationDecl 0x7ffe44016340 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<struct std::__1::__struct_double>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> >'
| |   | |-ClassTemplateSpecializationDecl 0x7ffe44016550 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<long double>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > >'
| |   | |-ClassTemplateSpecializationDecl 0x7ffe44016800 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<double>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > >'
| |   | |-ClassTemplateSpecializationDecl 0x7ffe44016a10 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<unsigned long long>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > >'
| |   | |-ClassTemplateSpecializationDecl 0x7ffe44016c20 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<unsigned long>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > >'
| |   | |-ClassTemplateSpecializationDecl 0x7ffe44016e30 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<unsigned int>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<unsigned long>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > > >'
| |   | |-ClassTemplateSpecializationDecl 0x7ffe44017040 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<unsigned short>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<unsigned int>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > > > >'
| |   | |-ClassTemplateSpecializationDecl 0x7ffe44017250 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<unsigned char>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<unsigned short>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned int>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > > > > >'
| |   | |-ClassTemplateSpecializationDecl 0x7ffe440356e8 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type '__int128'
| |   | | `-TemplateArgument type 'struct std::__1::__nat'
| |   | |-ClassTemplateSpecializationDecl 0x7ffe44035900 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'long long'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<__int128, struct std::__1::__nat>'
| |   | |-ClassTemplateSpecializationDecl 0x7ffe44035b10 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'long'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> >'
| |   | |-ClassTemplateSpecializationDecl 0x7ffe44035d20 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'int'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > >'
| |   | |-ClassTemplateSpecializationDecl 0x7ffe44035f30 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'short'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > >'
| |   | |-ClassTemplateSpecializationDecl 0x7ffe44036140 <line:1577:1, line:1582:1> line:1578:8 struct __type_list definition
| |   | | |-TemplateArgument type 'signed char'
| |   | | |-TemplateArgument type 'struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > >'
| |   | | |-CXXRecordDecl 0x7ffe4403e488 prev 0x7ffe44036140 <col:1, col:8> col:8 implicit struct __type_list
| |   | | |-TypedefDecl 0x7ffe4403e558 <line:1580:5, col:17> col:17 referenced _Head 'signed char':'signed char'
| |   | | | `-SubstTemplateTypeParmType 0x7ffe4403e520 'signed char' sugar
| |   | | |   |-TemplateTypeParmType 0x7ffe440114c0 '_Hp' dependent depth 0 index 0
| |   | | |   | `-TemplateTypeParm 0x7ffe44011480 '_Hp'
| |   | | |   `-BuiltinType 0x7ffe43832780 'signed char'
| |   | | `-TypedefDecl 0x7ffe4403e5e8 <line:1581:5, col:17> col:17 _Tail 'struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > >':'struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > >'
| |   | |   `-SubstTemplateTypeParmType 0x7ffe4403e5b0 'struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > >' sugar
| |   | |     |-TemplateTypeParmType 0x7ffe44011530 '_Tp' dependent depth 0 index 1
| |   | |     | `-TemplateTypeParm 0x7ffe440114e8 '_Tp'
| |   | |     `-RecordType 0x7ffe44036030 'struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > >'
| |   | |       `-ClassTemplateSpecialization 0x7ffe44035f30 '__type_list'
| |   | |-ClassTemplateSpecializationDecl 0x7ffe44036440 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'unsigned __int128'
| |   | | `-TemplateArgument type 'struct std::__1::__nat'
| |   | |-ClassTemplateSpecializationDecl 0x7ffe44036650 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'unsigned long long'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat>'
| |   | |-ClassTemplateSpecializationDecl 0x7ffe44036860 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'unsigned long'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> >'
| |   | |-ClassTemplateSpecializationDecl 0x7ffe44036a70 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'unsigned int'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > >'
| |   | |-ClassTemplateSpecializationDecl 0x7ffe44036c90 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'unsigned short'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > >'
| |   | `-ClassTemplateSpecializationDecl 0x7ffe44036ea0 <line:1577:1, line:1582:1> line:1578:8 struct __type_list definition
| |   |   |-TemplateArgument type 'unsigned char'
| |   |   |-TemplateArgument type 'struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > >'
| |   |   |-CXXRecordDecl 0x7ffe44045d68 prev 0x7ffe44036ea0 <col:1, col:8> col:8 implicit struct __type_list
| |   |   |-TypedefDecl 0x7ffe44045e38 <line:1580:5, col:17> col:17 referenced _Head 'unsigned char':'unsigned char'
| |   |   | `-SubstTemplateTypeParmType 0x7ffe44045e00 'unsigned char' sugar
| |   |   |   |-TemplateTypeParmType 0x7ffe440114c0 '_Hp' dependent depth 0 index 0
| |   |   |   | `-TemplateTypeParm 0x7ffe44011480 '_Hp'
| |   |   |   `-BuiltinType 0x7ffe43832820 'unsigned char'
| |   |   `-TypedefDecl 0x7ffe44045ec8 <line:1581:5, col:17> col:17 _Tail 'struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > >':'struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > >'
| |   |     `-SubstTemplateTypeParmType 0x7ffe44045e90 'struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > >' sugar
| |   |       |-TemplateTypeParmType 0x7ffe44011530 '_Tp' dependent depth 0 index 1
| |   |       | `-TemplateTypeParm 0x7ffe440114e8 '_Tp'
| |   |       `-RecordType 0x7ffe44036d90 'struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > >'
| |   |         `-ClassTemplateSpecialization 0x7ffe44036c90 '__type_list'
| |   |-CXXRecordDecl 0x7ffe44011a78 <line:1584:1, line:1592:1> line:1584:8 referenced struct __nat definition
| |   | |-CXXRecordDecl 0x7ffe44011b98 <col:1, col:8> col:8 implicit referenced struct __nat
| |   | |-CXXConstructorDecl 0x7ffe44011c98 <line:1587:5, col:20> col:5 __nat 'void (void)' delete trivial
| |   | |-CXXConstructorDecl 0x7ffe44011e40 <line:1588:5, col:32> col:5 __nat 'void (const struct std::__1::__nat &)' delete trivial
| |   | | `-ParmVarDecl 0x7ffe44011d78 <col:11, col:22> col:23 'const struct std::__1::__nat &'
| |   | |-CXXMethodDecl 0x7ffe44011ff0 <line:1589:5, col:43> col:12 operator= 'struct std::__1::__nat &(const struct std::__1::__nat &)' delete trivial
| |   | | `-ParmVarDecl 0x7ffe44011f00 <col:22, col:33> col:34 'const struct std::__1::__nat &'
| |   | `-CXXDestructorDecl 0x7ffe440120e0 <line:1590:5, col:21> col:5 ~__nat 'void (void)' delete trivial noexcept-unevaluated 0x7ffe440120e0
| |   |-ClassTemplateDecl 0x7ffe440122d8 <line:1594:1, line:1599:1> line:1595:8 __align_type
| |   | |-TemplateTypeParmDecl 0x7ffe440121b8 <line:1594:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7ffe44012240 <line:1595:1, line:1599:1> line:1595:8 struct __align_type definition
| |   | | |-CXXRecordDecl 0x7ffe44012550 <col:1, col:8> col:8 implicit struct __align_type
| |   | | |-VarDecl 0x7ffe440125f8 <line:1597:5, col:52> col:25 value 'const size_t':'const unsigned long' static cinit
| |   | | | `-DependentScopeDeclRefExpr 0x7ffe44012728 <col:33, col:52> '<dependent type>' lvalue
| |   | | `-TypedefDecl 0x7ffe44012778 <line:1598:5, col:17> col:17 type '_Tp'
| |   | |   `-TemplateTypeParmType 0x7ffe44012200 '_Tp' dependent depth 0 index 0
| |   | |     `-TemplateTypeParm 0x7ffe440121b8 '_Tp'
| |   | |-ClassTemplateSpecializationDecl 0x7ffe44013900 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
| |   | | `-TemplateArgument type 'unsigned char'
| |   | |-ClassTemplateSpecializationDecl 0x7ffe44013ad0 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
| |   | | `-TemplateArgument type 'unsigned short'
| |   | |-ClassTemplateSpecializationDecl 0x7ffe44013ca0 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
| |   | | `-TemplateArgument type 'unsigned int'
| |   | |-ClassTemplateSpecializationDecl 0x7ffe44013e70 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
| |   | | `-TemplateArgument type 'unsigned long'
| |   | |-ClassTemplateSpecializationDecl 0x7ffe44014040 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
| |   | | `-TemplateArgument type 'unsigned long long'
| |   | |-ClassTemplateSpecializationDecl 0x7ffe44014210 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
| |   | | `-TemplateArgument type 'double'
| |   | |-ClassTemplateSpecializationDecl 0x7ffe44015800 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
| |   | | `-TemplateArgument type 'long double'
| |   | |-ClassTemplateSpecializationDecl 0x7ffe440159c8 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
| |   | | `-TemplateArgument type 'struct std::__1::__struct_double'
| |   | |-ClassTemplateSpecializationDecl 0x7ffe44015b88 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
| |   | | `-TemplateArgument type 'struct std::__1::__struct_double4'
| |   | `-ClassTemplateSpecializationDecl 0x7ffe44015d50 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
| |   |   `-TemplateArgument type 'int *'
| |   |-CXXRecordDecl 0x7ffe44013400 <line:1601:1, col:42> col:8 referenced struct __struct_double definition
| |   | |-CXXRecordDecl 0x7ffe44013528 <col:1, col:8> col:8 implicit struct __struct_double
| |   | `-FieldDecl 0x7ffe440135d8 <col:25, col:37> col:37 __lx 'long double'
| |   |-CXXRecordDecl 0x7ffe44013640 <line:1602:1, col:41> col:8 referenced struct __struct_double4 definition
| |   | |-CXXRecordDecl 0x7ffe44013768 <col:1, col:8> col:8 implicit struct __struct_double4
| |   | `-FieldDecl 0x7ffe44013880 <col:26, col:39> col:33 __lx 'double [4]'
| |   |-TypedefDecl 0x7ffe44017460 <line:1604:1, line:1616:25> col:25 referenced __all_types '__type_list<__align_type<unsigned char>, __type_list<__align_type<unsigned short>, __type_list<__align_type<unsigned int>, __type_list<__align_type<unsigned long>, __type_list<__align_type<unsigned long long>, __type_list<__align_type<double>, __type_list<__align_type<long double>, __type_list<__align_type<struct std::__1::__struct_double>, __type_list<__align_type<struct std::__1::__struct_double4>, __type_list<__align_type<int *>, struct std::__1::__nat> > > > > > > > > >':'struct std::__1::__type_list<struct std::__1::__align_type<unsigned char>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned short>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned int>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > > > > > >'
| |   | `-TemplateSpecializationType 0x7ffe44017370 '__type_list<__align_type<unsigned char>, __type_list<__align_type<unsigned short>, __type_list<__align_type<unsigned int>, __type_list<__align_type<unsigned long>, __type_list<__align_type<unsigned long long>, __type_list<__align_type<double>, __type_list<__align_type<long double>, __type_list<__align_type<struct std::__1::__struct_double>, __type_list<__align_type<struct std::__1::__struct_double4>, __type_list<__align_type<int *>, struct std::__1::__nat> > > > > > > > > >' sugar __type_list
| |   |   |-TemplateArgument type '__align_type<unsigned char>':'struct std::__1::__align_type<unsigned char>'
| |   |   |-TemplateArgument type '__type_list<__align_type<unsigned short>, __type_list<__align_type<unsigned int>, __type_list<__align_type<unsigned long>, __type_list<__align_type<unsigned long long>, __type_list<__align_type<double>, __type_list<__align_type<long double>, __type_list<__align_type<struct std::__1::__struct_double>, __type_list<__align_type<struct std::__1::__struct_double4>, __type_list<__align_type<int *>, struct std::__1::__nat> > > > > > > > >':'struct std::__1::__type_list<struct std::__1::__align_type<unsigned short>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned int>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > > > > >'
| |   |   `-RecordType 0x7ffe44017350 'struct std::__1::__type_list<struct std::__1::__align_type<unsigned char>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned short>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned int>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > > > > > >'
| |   |     `-ClassTemplateSpecialization 0x7ffe44017250 '__type_list'
| |   |-ClassTemplateDecl 0x7ffe44017648 <line:1618:1, col:44> col:44 __find_pod
| |   | |-TemplateTypeParmDecl 0x7ffe440174b8 <col:11, col:17> col:17 class depth 0 index 0 _TL
| |   | |-NonTypeTemplateParmDecl 0x7ffe44017538 <col:22, col:29> col:29 'size_t':'unsigned long' depth 0 index 1 _Align
| |   | `-CXXRecordDecl 0x7ffe440175b0 <col:37, col:44> col:44 struct __find_pod
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe44017cb0 <line:1620:1, line:1628:1> line:1621:8 struct __find_pod definition
| |   | |-TemplateArgument type '__type_list<type-parameter-0-0, struct std::__1::__nat>'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7ffe44017b50 <col:44> 'size_t':'unsigned long' NonTypeTemplateParm 0x7ffe44017968 '_Align' 'size_t':'unsigned long'
| |   | |-TemplateTypeParmDecl 0x7ffe440178e8 <line:1620:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-NonTypeTemplateParmDecl 0x7ffe44017968 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Align
| |   | |-CXXRecordDecl 0x7ffe44017f80 <line:1621:1, col:8> col:8 implicit struct __find_pod
| |   | `-TypedefDecl 0x7ffe440183c0 <line:1623:5, line:1627:34> col:34 type 'typename conditional<_Align == _Hp::value, typename _Hp::type, void>::type'
| |   |   `-DependentNameType 0x7ffe44018350 'typename conditional<_Align == _Hp::value, typename _Hp::type, void>::type' dependent
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe44018870 <line:1630:1, line:1638:1> line:1631:8 struct __find_pod definition
| |   | |-TemplateArgument type '__type_list<type-parameter-0-0, type-parameter-0-1>'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7ffe440186c0 <col:42> 'size_t':'unsigned long' NonTypeTemplateParm 0x7ffe44018528 '_Align' 'size_t':'unsigned long'
| |   | |-TemplateTypeParmDecl 0x7ffe44018438 <line:1630:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-TemplateTypeParmDecl 0x7ffe440184a8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7ffe44018528 <col:33, col:40> col:40 referenced 'size_t':'unsigned long' depth 0 index 2 _Align
| |   | |-CXXRecordDecl 0x7ffe44018b40 <line:1631:1, col:8> col:8 implicit struct __find_pod
| |   | `-TypedefDecl 0x7ffe44019190 <line:1633:5, line:1637:34> col:34 type 'typename conditional<_Align == _Hp::value, typename _Hp::type, typename __find_pod<_Tp, _Align>::type>::type'
| |   |   `-DependentNameType 0x7ffe44019120 'typename conditional<_Align == _Hp::value, typename _Hp::type, typename __find_pod<_Tp, _Align>::type>::type' dependent
| |   |-ClassTemplateDecl 0x7ffe44019398 <line:1640:1, col:42> col:42 __find_max_align
| |   | |-TemplateTypeParmDecl 0x7ffe44019208 <col:11, col:17> col:17 class depth 0 index 0 _TL
| |   | |-NonTypeTemplateParmDecl 0x7ffe44019288 <col:22, col:29> col:29 'size_t':'unsigned long' depth 0 index 1 _Len
| |   | `-CXXRecordDecl 0x7ffe44019300 <col:35, col:42> col:42 struct __find_max_align
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe44019960 <line:1642:1, line:1643:104> col:8 struct __find_max_align definition
| |   | |-public 'integral_constant<size_t, _Hp::value>'
| |   | |-TemplateArgument type '__type_list<type-parameter-0-0, struct std::__1::__nat>'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7ffe44019800 <col:50> 'size_t':'unsigned long' NonTypeTemplateParm 0x7ffe44019678 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateTypeParmDecl 0x7ffe440195f8 <line:1642:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-NonTypeTemplateParmDecl 0x7ffe44019678 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Len
| |   | `-CXXRecordDecl 0x7ffe44019e48 <line:1643:1, col:8> col:8 implicit struct __find_max_align
| |   |-ClassTemplateDecl 0x7ffe4401a0f8 <line:1645:1, line:1653:1> line:1646:8 __select_align
| |   | |-NonTypeTemplateParmDecl 0x7ffe44019f10 <line:1645:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-NonTypeTemplateParmDecl 0x7ffe44019f78 <col:24, col:31> col:31 referenced 'size_t':'unsigned long' depth 0 index 1 _A1
| |   | |-NonTypeTemplateParmDecl 0x7ffe44019fe0 <col:36, col:43> col:43 referenced 'size_t':'unsigned long' depth 0 index 2 _A2
| |   | `-CXXRecordDecl 0x7ffe4401a060 <line:1646:1, line:1653:1> line:1646:8 struct __select_align definition
| |   |   |-CXXRecordDecl 0x7ffe4401a450 <col:1, col:8> col:8 implicit struct __select_align
| |   |   |-AccessSpecDecl 0x7ffe4401a4e8 <line:1648:1, col:8> col:1 private
| |   |   |-VarDecl 0x7ffe4401a520 <line:1649:5, col:51> col:25 referenced __min 'const size_t':'const unsigned long' static cinit
| |   |   | `-ConditionalOperator 0x7ffe4401a648 <col:33, col:51> 'size_t':'unsigned long'
| |   |   |   |-BinaryOperator 0x7ffe4401a5d0 <col:33, col:39> '_Bool' '<'
| |   |   |   | |-DeclRefExpr 0x7ffe4401a580 <col:33> 'size_t':'unsigned long' NonTypeTemplateParm 0x7ffe44019fe0 '_A2' 'size_t':'unsigned long'
| |   |   |   | `-DeclRefExpr 0x7ffe4401a5a8 <col:39> 'size_t':'unsigned long' NonTypeTemplateParm 0x7ffe44019f78 '_A1' 'size_t':'unsigned long'
| |   |   |   |-DeclRefExpr 0x7ffe4401a5f8 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7ffe44019fe0 '_A2' 'size_t':'unsigned long'
| |   |   |   `-DeclRefExpr 0x7ffe4401a620 <col:51> 'size_t':'unsigned long' NonTypeTemplateParm 0x7ffe44019f78 '_A1' 'size_t':'unsigned long'
| |   |   |-VarDecl 0x7ffe4401a688 <line:1650:5, col:51> col:25 referenced __max 'const size_t':'const unsigned long' static cinit
| |   |   | `-ConditionalOperator 0x7ffe4401a7b0 <col:33, col:51> 'size_t':'unsigned long'
| |   |   |   |-BinaryOperator 0x7ffe4401a738 <col:33, col:39> '_Bool' '<'
| |   |   |   | |-DeclRefExpr 0x7ffe4401a6e8 <col:33> 'size_t':'unsigned long' NonTypeTemplateParm 0x7ffe44019f78 '_A1' 'size_t':'unsigned long'
| |   |   |   | `-DeclRefExpr 0x7ffe4401a710 <col:39> 'size_t':'unsigned long' NonTypeTemplateParm 0x7ffe44019fe0 '_A2' 'size_t':'unsigned long'
| |   |   |   |-DeclRefExpr 0x7ffe4401a760 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7ffe44019fe0 '_A2' 'size_t':'unsigned long'
| |   |   |   `-DeclRefExpr 0x7ffe4401a788 <col:51> 'size_t':'unsigned long' NonTypeTemplateParm 0x7ffe44019f78 '_A1' 'size_t':'unsigned long'
| |   |   |-AccessSpecDecl 0x7ffe4401ac00 <line:1651:1, col:7> col:1 public
| |   |   `-VarDecl 0x7ffe4401ac38 <line:1652:5, col:56> col:25 value 'const size_t':'const unsigned long' static cinit
| |   |     `-ImplicitCastExpr 0x7ffe4401ada8 <col:33, col:56> 'size_t':'unsigned long' <LValueToRValue>
| |   |       `-ConditionalOperator 0x7ffe4401ad78 <col:33, col:56> 'const size_t':'const unsigned long' lvalue
| |   |         |-BinaryOperator 0x7ffe4401ad00 <col:33, col:40> '_Bool' '<'
| |   |         | |-DeclRefExpr 0x7ffe4401ac98 <col:33> 'size_t':'unsigned long' NonTypeTemplateParm 0x7ffe44019f10 '_Len' 'size_t':'unsigned long'
| |   |         | `-ImplicitCastExpr 0x7ffe4401ace8 <col:40> 'size_t':'unsigned long' <LValueToRValue>
| |   |         |   `-DeclRefExpr 0x7ffe4401acc0 <col:40> 'const size_t':'const unsigned long' lvalue Var 0x7ffe4401a688 '__max' 'const size_t':'const unsigned long'
| |   |         |-DeclRefExpr 0x7ffe4401ad28 <col:48> 'const size_t':'const unsigned long' lvalue Var 0x7ffe4401a520 '__min' 'const size_t':'const unsigned long'
| |   |         `-DeclRefExpr 0x7ffe4401ad50 <col:56> 'const size_t':'const unsigned long' lvalue Var 0x7ffe4401a688 '__max' 'const size_t':'const unsigned long'
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe4401b1c0 <line:1655:1, line:1657:118> line:1656:8 struct __find_max_align definition
| |   | |-public 'integral_constant<size_t, __select_align<_Len, _Hp::value, __find_max_align<_Tp, _Len>::value>::value>'
| |   | |-TemplateArgument type '__type_list<type-parameter-0-0, type-parameter-0-1>'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7ffe4401b060 <col:48> 'size_t':'unsigned long' NonTypeTemplateParm 0x7ffe4401aec8 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateTypeParmDecl 0x7ffe4401ade0 <line:1655:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-TemplateTypeParmDecl 0x7ffe4401ae48 <col:22, col:28> col:28 referenced class depth 0 index 1 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7ffe4401aec8 <col:33, col:40> col:40 referenced 'size_t':'unsigned long' depth 0 index 2 _Len
| |   | `-CXXRecordDecl 0x7ffe4401bad8 <line:1656:1, col:8> col:8 implicit struct __find_max_align
| |   |-ClassTemplateDecl 0x7ffe4401bf38 <line:1659:1, line:1669:1> line:1660:29 aligned_storage
| |   | |-NonTypeTemplateParmDecl 0x7ffe4401bba0 <line:1659:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-NonTypeTemplateParmDecl 0x7ffe4401bdf8 <col:24, col:77> col:31 referenced 'size_t':'unsigned long' depth 0 index 1 _Align
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7ffe4401bda8 <col:40, col:77> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7ffe4401bea0 <line:1660:1, line:1669:1> line:1660:29 struct aligned_storage definition
| |   |   |-TypeVisibilityAttr 0x7ffe4401c220 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7ffe4401c268 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1660:1, col:29> col:29 implicit struct aligned_storage
| |   |   |-TypedefDecl 0x7ffe4401c520 <line:1662:5, col:60> col:60 referenced _Aligner 'typename __find_pod<__all_types, _Align>::type'
| |   |   | `-DependentNameType 0x7ffe4401c4b0 'typename __find_pod<__all_types, _Align>::type' dependent
| |   |   |-StaticAssertDecl 0x7ffe4401c7c0 <line:1663:5, col:48> col:5
| |   |   | |-UnaryOperator 0x7ffe4401c6f8 <col:19, col:39> '<dependent type>' prefix '!'
| |   |   | | `-DependentScopeDeclRefExpr 0x7ffe4401c6b8 <col:20, col:39> '<dependent type>' lvalue
| |   |   | `-StringLiteral 0x7ffe4401c798 <col:46> 'const char [1]' lvalue ""
| |   |   `-CXXRecordDecl 0x7ffe4401c7f8 <line:1664:5, line:1668:5> line:1664:11 union type definition
| |   |     |-CXXRecordDecl 0x7ffe4401c918 <col:5, col:11> col:11 implicit union type
| |   |     |-FieldDecl 0x7ffe4401c9c0 <line:1666:9, col:18> col:18 __align 'std::__1::aligned_storage::_Aligner':'typename __find_pod<__all_types, _Align>::type'
| |   |     `-FieldDecl 0x7ffe4401d028 <line:1667:9, col:65> col:23 __data 'unsigned char [(_Len + _Align - 1) / _Align * _Align]'
| |   |-TypeAliasTemplateDecl 0x7ffe4401d530 <line:1672:1, line:1673:71> col:5 aligned_storage_t
| |   | |-NonTypeTemplateParmDecl 0x7ffe4401d0c0 <line:1672:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-NonTypeTemplateParmDecl 0x7ffe4401d288 <col:24, col:77> col:31 referenced 'size_t':'unsigned long' depth 0 index 1 _Align
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7ffe4401d238 <col:40, col:77> '<dependent type>' lvalue
| |   | `-TypeAliasDecl 0x7ffe4401d4d0 <line:1673:5, col:71> col:11 aligned_storage_t 'typename aligned_storage<_Len, _Align>::type'
| |   |   `-DependentNameType 0x7ffe4401d460 'typename aligned_storage<_Len, _Align>::type' dependent
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe4401d7c0 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7ffe4401d630 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7ffe4401d590 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 1
| |   | |-NonTypeTemplateParmDecl 0x7ffe4401d590 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7ffe4401d928 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7ffe4401da90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7ffe4401db48 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7ffe4401dc68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7ffe4401db28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1686:40> 'int' 1
| |   |   |-CXXRecordDecl 0x7ffe4401dcb8 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7ffe4401df88 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 1 - 1) / 1 * 1]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe4401f660 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7ffe4401f4d0 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7ffe4401f430 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 2
| |   | |-NonTypeTemplateParmDecl 0x7ffe4401f430 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7ffe4401f7c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7ffe4401f930 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7ffe4401f9e8 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7ffe4401fb08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7ffe4401f9c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1687:40> 'int' 2
| |   |   |-CXXRecordDecl 0x7ffe4401fb58 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7ffe4401fe28 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 2 - 1) / 2 * 2]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe440200f0 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7ffe4401ff60 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7ffe4401fec0 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 4
| |   | |-NonTypeTemplateParmDecl 0x7ffe4401fec0 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7ffe44020258 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7ffe44020400 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7ffe440204b8 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7ffe440205d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7ffe44020498 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1688:40> 'int' 4
| |   |   |-CXXRecordDecl 0x7ffe44020628 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7ffe440208f8 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 4 - 1) / 4 * 4]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe44020bc0 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7ffe44020a30 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7ffe44020990 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 8
| |   | |-NonTypeTemplateParmDecl 0x7ffe44020990 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7ffe44020d28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7ffe44020e90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7ffe44020f48 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7ffe44021068 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7ffe44020f28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1689:40> 'int' 8
| |   |   |-CXXRecordDecl 0x7ffe440210b8 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7ffe44021388 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 8 - 1) / 8 * 8]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe44021660 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7ffe440214d0 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7ffe44021430 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 16
| |   | |-NonTypeTemplateParmDecl 0x7ffe44021430 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7ffe440217c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7ffe44021930 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7ffe440219e8 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7ffe44021b08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7ffe440219c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1690:40> 'int' 16
| |   |   |-CXXRecordDecl 0x7ffe44021b58 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7ffe44021e28 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 16 - 1) / 16 * 16]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe440220f0 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7ffe44021f60 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7ffe44021ec0 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 32
| |   | |-NonTypeTemplateParmDecl 0x7ffe44021ec0 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7ffe44022258 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7ffe440223c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7ffe44022478 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7ffe44022598 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7ffe44022458 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1691:40> 'int' 32
| |   |   |-CXXRecordDecl 0x7ffe440225e8 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7ffe440228b8 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 32 - 1) / 32 * 32]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe44022b80 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7ffe440229f0 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7ffe44022950 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 64
| |   | |-NonTypeTemplateParmDecl 0x7ffe44022950 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7ffe44022ce8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7ffe44022e50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7ffe44022f08 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7ffe44023028 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7ffe44022ee8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1692:40> 'int' 64
| |   |   |-CXXRecordDecl 0x7ffe44023078 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7ffe44023348 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 64 - 1) / 64 * 64]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe44023630 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7ffe440234a0 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7ffe44023400 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 128
| |   | |-NonTypeTemplateParmDecl 0x7ffe44023400 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7ffe44023798 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7ffe44023900 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7ffe440239b8 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7ffe44023ad8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7ffe44023998 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1693:40> 'int' 128
| |   |   |-CXXRecordDecl 0x7ffe44023b28 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7ffe44023df8 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 128 - 1) / 128 * 128]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe440240c0 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7ffe44023f30 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7ffe44023e90 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 256
| |   | |-NonTypeTemplateParmDecl 0x7ffe44023e90 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7ffe44024228 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7ffe44024390 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7ffe44024448 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7ffe44024568 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7ffe44024428 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1694:40> 'int' 256
| |   |   |-CXXRecordDecl 0x7ffe440245b8 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7ffe44024888 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 256 - 1) / 256 * 256]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe44024b50 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7ffe440249c0 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7ffe44024920 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 512
| |   | |-NonTypeTemplateParmDecl 0x7ffe44024920 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7ffe44024cb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7ffe44024e20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7ffe44024ed8 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7ffe44024ff8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7ffe44024eb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1695:40> 'int' 512
| |   |   |-CXXRecordDecl 0x7ffe44025048 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7ffe44025318 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 512 - 1) / 512 * 512]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe44025630 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7ffe440254a0 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7ffe44025400 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 1024
| |   | |-NonTypeTemplateParmDecl 0x7ffe44025400 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7ffe44025798 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7ffe44025900 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7ffe440259b8 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7ffe44025ad8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7ffe44025998 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1696:40> 'int' 1024
| |   |   |-CXXRecordDecl 0x7ffe44025b28 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7ffe44025df8 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 1024 - 1) / 1024 * 1024]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe440260c0 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7ffe44025f30 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7ffe44025e90 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 2048
| |   | |-NonTypeTemplateParmDecl 0x7ffe44025e90 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7ffe44026228 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7ffe44026390 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7ffe44026448 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7ffe44026568 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7ffe44026428 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1697:40> 'int' 2048
| |   |   |-CXXRecordDecl 0x7ffe440265b8 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7ffe44026888 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 2048 - 1) / 2048 * 2048]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe44026b50 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7ffe440269c0 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7ffe44026920 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 4096
| |   | |-NonTypeTemplateParmDecl 0x7ffe44026920 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7ffe44026cb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7ffe44026e20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7ffe44026ed8 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7ffe44026ff8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7ffe44026eb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1698:40> 'int' 4096
| |   |   |-CXXRecordDecl 0x7ffe44027048 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7ffe44027318 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 4096 - 1) / 4096 * 4096]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe44027630 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7ffe440274a0 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7ffe44027400 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 8192
| |   | |-NonTypeTemplateParmDecl 0x7ffe44027400 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7ffe44027798 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7ffe44027900 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7ffe440279b8 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7ffe44027ad8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7ffe44027998 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1699:40> 'int' 8192
| |   |   |-CXXRecordDecl 0x7ffe44027b28 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7ffe44027df8 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 8192 - 1) / 8192 * 8192]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe440280c0 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7ffe44027f30 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7ffe44027e90 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 16384
| |   | |-NonTypeTemplateParmDecl 0x7ffe44027e90 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7ffe44028228 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7ffe44028390 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7ffe44028448 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7ffe44028568 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7ffe44028428 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1702:40> 'int' 16384
| |   |   |-CXXRecordDecl 0x7ffe440285b8 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7ffe44028888 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 16384 - 1) / 16384 * 16384]'
| |   |-ClassTemplateDecl 0x7ffe44028a98 <line:1711:1, line:1712:8> col:8 __static_max
| |   | |-NonTypeTemplateParmDecl 0x7ffe44028920 <line:1711:11, col:18> col:18 'size_t':'unsigned long' depth 0 index 0 _I0
| |   | |-NonTypeTemplateParmDecl 0x7ffe44028988 <col:23, col:33> col:33 'size_t':'unsigned long' depth 0 index 1 ... _In
| |   | `-CXXRecordDecl 0x7ffe44028a00 <line:1712:1, col:8> col:8 struct __static_max
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe44028f10 <line:1714:1, line:1718:1> line:1715:8 struct __static_max definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7ffe44028de8 <col:21> 'size_t':'unsigned long' NonTypeTemplateParm 0x7ffe44028d78 '_I0' 'size_t':'unsigned long'
| |   | |-TemplateArgument pack
| |   | |-NonTypeTemplateParmDecl 0x7ffe44028d78 <line:1714:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _I0
| |   | |-CXXRecordDecl 0x7ffe440291a0 <line:1715:1, col:8> col:8 implicit struct __static_max
| |   | `-VarDecl 0x7ffe44029248 <line:1717:5, col:33> col:25 value 'const size_t':'const unsigned long' static cinit
| |   |   `-DeclRefExpr 0x7ffe440292a8 <col:33> 'size_t':'unsigned long' NonTypeTemplateParm 0x7ffe44028d78 '_I0' 'size_t':'unsigned long'
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe440296e0 <line:1720:1, line:1725:1> line:1721:8 struct __static_max definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7ffe44029480 <col:21> 'size_t':'unsigned long' NonTypeTemplateParm 0x7ffe44029300 '_I0' 'size_t':'unsigned long'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument expr
| |   | | | `-DeclRefExpr 0x7ffe440294a8 <col:26> 'size_t':'unsigned long' NonTypeTemplateParm 0x7ffe44029368 '_I1' 'size_t':'unsigned long'
| |   | | `-TemplateArgument expr
| |   | |   `-PackExpansionExpr 0x7ffe440294f8 <col:31, col:34> '<dependent type>'
| |   | |     `-DeclRefExpr 0x7ffe440294d0 <col:31> 'size_t':'unsigned long' NonTypeTemplateParm 0x7ffe44029400 '_In' 'size_t':'unsigned long'
| |   | |-NonTypeTemplateParmDecl 0x7ffe44029300 <line:1720:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _I0
| |   | |-NonTypeTemplateParmDecl 0x7ffe44029368 <col:23, col:30> col:30 referenced 'size_t':'unsigned long' depth 0 index 1 _I1
| |   | |-NonTypeTemplateParmDecl 0x7ffe44029400 <col:35, col:45> col:45 referenced 'size_t':'unsigned long' depth 0 index 2 ... _In
| |   | |-CXXRecordDecl 0x7ffe440299e0 <line:1721:1, col:8> col:8 implicit struct __static_max
| |   | `-VarDecl 0x7ffe44029a88 <line:1723:5, line:1724:73> line:1723:25 value 'const size_t':'const unsigned long' static cinit
| |   |   `-ConditionalOperator 0x7ffe44029fb8 <col:33, line:1724:73> '<dependent type>'
| |   |     |-BinaryOperator 0x7ffe44029b38 <line:1723:33, col:40> '_Bool' '>='
| |   |     | |-DeclRefExpr 0x7ffe44029ae8 <col:33> 'size_t':'unsigned long' NonTypeTemplateParm 0x7ffe44029300 '_I0' 'size_t':'unsigned long'
| |   |     | `-DeclRefExpr 0x7ffe44029b10 <col:40> 'size_t':'unsigned long' NonTypeTemplateParm 0x7ffe44029368 '_I1' 'size_t':'unsigned long'
| |   |     |-DependentScopeDeclRefExpr 0x7ffe44029d48 <col:46, col:73> '<dependent type>' lvalue
| |   |     `-DependentScopeDeclRefExpr 0x7ffe44029f78 <line:1724:46, col:73> '<dependent type>' lvalue
| |   |-ClassTemplateDecl 0x7ffe4402a238 <line:1727:1, line:1735:1> line:1728:8 aligned_union
| |   | |-NonTypeTemplateParmDecl 0x7ffe4402a018 <line:1727:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TemplateTypeParmDecl 0x7ffe4402a070 <col:24, col:30> col:30 referenced class depth 0 index 1 _Type0
| |   | |-TemplateTypeParmDecl 0x7ffe4402a0d8 <col:38, col:47> col:47 referenced class depth 0 index 2 ... _Types
| |   | `-CXXRecordDecl 0x7ffe4402a1a0 <line:1728:1, line:1735:1> line:1728:8 struct aligned_union definition
| |   |   |-CXXRecordDecl 0x7ffe4402a5d0 <col:1, col:8> col:8 implicit struct aligned_union
| |   |   |-VarDecl 0x7ffe4402a678 <line:1730:5, line:1731:81> line:1730:25 referenced alignment_value 'const size_t':'const unsigned long' static cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7ffe4402a8d8 <col:43, line:1731:81> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7ffe4402a928 <line:1732:5, line:1733:66> line:1732:25 referenced __len 'const size_t':'const unsigned long' static cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7ffe4402ac08 <col:33, line:1733:66> '<dependent type>' lvalue
| |   |   `-TypedefDecl 0x7ffe4402aeb0 <line:1734:5, col:68> col:68 type 'typename aligned_storage<__len, alignment_value>::type'
| |   |     `-DependentNameType 0x7ffe4402ae40 'typename aligned_storage<__len, alignment_value>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7ffe4402b2d0 <line:1738:1, col:106> col:41 aligned_union_t
| |   | |-NonTypeTemplateParmDecl 0x7ffe4402af38 <col:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TemplateTypeParmDecl 0x7ffe4402af90 <col:24, col:33> col:33 referenced class depth 0 index 1 ... _Types
| |   | `-TypeAliasDecl 0x7ffe4402b270 <col:41, col:106> col:47 aligned_union_t 'typename aligned_union<_Len, _Types...>::type'
| |   |   `-DependentNameType 0x7ffe4402b200 'typename aligned_union<_Len, _Types...>::type' dependent
| |   |-ClassTemplateDecl 0x7ffe4402c298 <line:1743:1, line:1760:1> line:1744:8 __numeric_type
| |   | |-TemplateTypeParmDecl 0x7ffe4402b320 <line:1743:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7ffe4402c200 <line:1744:1, line:1760:1> line:1744:8 struct __numeric_type definition
| |   | | |-CXXRecordDecl 0x7ffe4402c510 <col:1, col:8> col:8 implicit struct __numeric_type
| |   | | |-CXXMethodDecl 0x7ffe4402c5f8 <line:1746:4, col:26> col:16 __test 'void (...)' static
| |   | | |-CXXMethodDecl 0x7ffe4402c738 <line:1747:4, col:29> col:17 __test 'float (float)' static
| |   | | | `-ParmVarDecl 0x7ffe4402c6a8 <col:24> col:29 'float'
| |   | | |-CXXMethodDecl 0x7ffe4402c8b8 <line:1748:4, col:29> col:18 __test 'double (char)' static
| |   | | | `-ParmVarDecl 0x7ffe4402c7e8 <col:25> col:29 'char'
| |   | | |-CXXMethodDecl 0x7ffe4402ca38 <line:1749:4, col:28> col:18 __test 'double (int)' static
| |   | | | `-ParmVarDecl 0x7ffe4402c970 <col:25> col:28 'int'
| |   | | |-CXXMethodDecl 0x7ffe4402cbb8 <line:1750:4, col:33> col:18 __test 'double (unsigned int)' static
| |   | | | `-ParmVarDecl 0x7ffe4402caf0 <col:25> col:33 'unsigned int'
| |   | | |-CXXMethodDecl 0x7ffe4402cd38 <line:1751:4, col:29> col:18 __test 'double (long)' static
| |   | | | `-ParmVarDecl 0x7ffe4402cc70 <col:25> col:29 'long'
| |   | | |-CXXMethodDecl 0x7ffe4402ceb8 <line:1752:4, col:38> col:18 __test 'double (unsigned long)' static
| |   | | | `-ParmVarDecl 0x7ffe4402cdf0 <col:25, col:34> col:38 'unsigned long'
| |   | | |-CXXMethodDecl 0x7ffe4402d038 <line:1753:4, col:34> col:18 __test 'double (long long)' static
| |   | | | `-ParmVarDecl 0x7ffe4402cf70 <col:25, col:30> col:34 'long long'
| |   | | |-CXXMethodDecl 0x7ffe4402d1b8 <line:1754:4, col:43> col:18 __test 'double (unsigned long long)' static
| |   | | | `-ParmVarDecl 0x7ffe4402d0f0 <col:25, col:39> col:43 'unsigned long long'
| |   | | |-CXXMethodDecl 0x7ffe4402d300 <line:1755:4, col:31> col:18 __test 'double (double)' static
| |   | | | `-ParmVarDecl 0x7ffe4402d270 <col:25> col:31 'double'
| |   | | |-CXXMethodDecl 0x7ffe4402d448 <line:1756:4, col:41> col:23 __test 'long double (long double)' static
| |   | | | `-ParmVarDecl 0x7ffe4402d3b8 <col:30, col:35> col:41 'long double'
| |   | | |-TypedefDecl 0x7ffe4402d708 <line:1758:4, col:45> col:45 referenced type 'decltype(__test(declval<_Tp>()))'
| |   | | | `-DecltypeType 0x7ffe4402d6d0 'decltype(__test(declval<_Tp>()))' dependent
| |   | | |   `-CallExpr 0x7ffe4402d660 <col:21, col:42> '<dependent type>'
| |   | | |     |-UnresolvedLookupExpr 0x7ffe4402d4e8 <col:21> '<dependent type>' lvalue (no ADL) = '__test' 0x7ffe4402d448 0x7ffe4402d300 0x7ffe4402d1b8 0x7ffe4402d038 0x7ffe4402ceb8 0x7ffe4402cd38 0x7ffe4402cbb8 0x7ffe4402ca38 0x7ffe4402c8b8 0x7ffe4402c738 0x7ffe4402c5f8
| |   | | |     `-CallExpr 0x7ffe4402d638 <col:28, col:41> '<dependent type>'
| |   | | |       `-UnresolvedLookupExpr 0x7ffe4402d5a0 <col:28, col:39> '<dependent type>' lvalue (ADL) = 'declval' 0x7ffe43986450
| |   | | `-VarDecl 0x7ffe4402d770 <line:1759:4, col:52> col:22 value 'const _Bool' static cinit
| |   | |   `-UnaryOperator 0x7ffe4402d998 <col:30, col:52> '<dependent type>' prefix '!'
| |   | |     `-DependentScopeDeclRefExpr 0x7ffe4402d958 <col:31, col:52> '<dependent type>' lvalue
| |   | `-ClassTemplateSpecialization 0x7ffe4402d9f8 '__numeric_type'
| |   |-ClassTemplateSpecializationDecl 0x7ffe4402d9f8 <line:1762:1, line:1766:1> line:1763:8 struct __numeric_type definition
| |   | |-TemplateArgument type 'void'
| |   | |-CXXRecordDecl 0x7ffe4402dc20 <col:1, col:8> col:8 implicit struct __numeric_type
| |   | `-VarDecl 0x7ffe4402dcc8 <line:1765:4, col:30> col:22 referenced value 'const _Bool' static cinit
| |   |   `-CXXBoolLiteralExpr 0x7ffe4402dd28 <col:30> '_Bool' true
| |   |-ClassTemplateDecl 0x7ffe4402f8a0 <line:1770:1, line:1778:1> line:1774:7 __promote_imp
| |   | |-TemplateTypeParmDecl 0x7ffe4402ddb8 <line:1770:11, col:17> col:17 referenced class depth 0 index 0 _A1
| |   | |-TemplateTypeParmDecl 0x7ffe4402de38 <col:22, col:34> col:28 referenced class depth 0 index 1 _A2
| |   | | `-TemplateArgument type 'void'
| |   | |-TemplateTypeParmDecl 0x7ffe4402deb8 <col:40, col:52> col:46 referenced class depth 0 index 2 _A3
| |   | | `-TemplateArgument type 'void'
| |   | |-NonTypeTemplateParmDecl 0x7ffe4402f780 <line:1771:11, line:1773:39> line:1771:16 '_Bool' depth 0 index 3
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7ffe4402f748 <col:18, line:1773:39> '<dependent type>' '&&'
| |   | |     |-BinaryOperator 0x7ffe4402e198 <line:1771:18, line:1772:39> '<dependent type>' '&&'
| |   | |     | |-DependentScopeDeclRefExpr 0x7ffe4402dff8 <line:1771:18, col:39> '<dependent type>' lvalue
| |   | |     | `-DependentScopeDeclRefExpr 0x7ffe4402e158 <line:1772:18, col:39> '<dependent type>' lvalue
| |   | |     `-DependentScopeDeclRefExpr 0x7ffe4402f708 <line:1773:18, col:39> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7ffe4402f808 <line:1774:1, line:1778:1> line:1774:7 class __promote_imp definition
| |   |   |-CXXRecordDecl 0x7ffe4402fbc0 <col:1, col:7> col:7 implicit class __promote_imp
| |   |   |-AccessSpecDecl 0x7ffe4402fc58 <line:1776:1, col:7> col:1 public
| |   |   `-VarDecl 0x7ffe4402fc90 <line:1777:5, col:31> col:23 value 'const _Bool' static cinit
| |   |     `-CXXBoolLiteralExpr 0x7ffe4402fcf0 <col:31> '_Bool' false
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe440300e0 <line:1780:1, line:1790:1> line:1781:7 class __promote_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument type 'type-parameter-0-2'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7ffe4402fd28 <line:1780:11, col:17> col:17 referenced class depth 0 index 0 _A1
| |   | |-TemplateTypeParmDecl 0x7ffe4402fd98 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| |   | |-TemplateTypeParmDecl 0x7ffe4402fe08 <col:33, col:39> col:39 referenced class depth 0 index 2 _A3
| |   | |-CXXRecordDecl 0x7ffe44030420 <line:1781:1, col:7> col:7 implicit class __promote_imp
| |   | |-AccessSpecDecl 0x7ffe440304b8 <line:1783:1, col:8> col:1 private
| |   | |-TypedefDecl 0x7ffe44030a90 <line:1784:5, col:47> col:47 referenced __type1 'typename __promote_imp<_A1>::type'
| |   | | `-DependentNameType 0x7ffe44030a20 'typename __promote_imp<_A1>::type' dependent
| |   | |-TypedefDecl 0x7ffe44031040 <line:1785:5, col:47> col:47 referenced __type2 'typename __promote_imp<_A2>::type'
| |   | | `-DependentNameType 0x7ffe44030fd0 'typename __promote_imp<_A2>::type' dependent
| |   | |-TypedefDecl 0x7ffe44032400 <line:1786:5, col:47> col:47 referenced __type3 'typename __promote_imp<_A3>::type'
| |   | | `-DependentNameType 0x7ffe44031580 'typename __promote_imp<_A3>::type' dependent
| |   | |-AccessSpecDecl 0x7ffe44032458 <line:1787:1, col:7> col:1 public
| |   | |-TypedefDecl 0x7ffe44032658 <line:1788:5, col:57> col:57 type 'decltype(std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type1() + std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type2() + std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type3())'
| |   | | `-DecltypeType 0x7ffe44032620 'decltype(std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type1() + std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type2() + std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type3())' dependent
| |   | |   `-BinaryOperator 0x7ffe440325b8 <col:22, col:54> '<dependent type>' '+'
| |   | |     |-BinaryOperator 0x7ffe44032538 <col:22, col:42> '<dependent type>' '+'
| |   | |     | |-CXXUnresolvedConstructExpr 0x7ffe440324b0 <col:22, col:30> 'std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type1':'typename __promote_imp<_A1>::type'
| |   | |     | `-CXXUnresolvedConstructExpr 0x7ffe44032510 <col:34, col:42> 'std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type2':'typename __promote_imp<_A2>::type'
| |   | |     `-CXXUnresolvedConstructExpr 0x7ffe44032590 <col:46, col:54> 'std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type3':'typename __promote_imp<_A3>::type'
| |   | `-VarDecl 0x7ffe440326c0 <line:1789:5, col:31> col:23 value 'const _Bool' static cinit
| |   |   `-CXXBoolLiteralExpr 0x7ffe44032720 <col:31> '_Bool' true
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe44032a90 <line:1792:1, line:1801:1> line:1793:7 class __promote_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument type 'void'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7ffe44032758 <line:1792:11, col:17> col:17 referenced class depth 0 index 0 _A1
| |   | |-TemplateTypeParmDecl 0x7ffe440327c8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| |   | |-CXXRecordDecl 0x7ffe44032dd0 <line:1793:1, col:7> col:7 implicit class __promote_imp
| |   | |-AccessSpecDecl 0x7ffe44032e68 <line:1795:1, col:8> col:1 private
| |   | |-TypedefDecl 0x7ffe440332c0 <line:1796:5, col:47> col:47 referenced __type1 'typename __promote_imp<_A1>::type'
| |   | | `-DependentNameType 0x7ffe44033250 'typename __promote_imp<_A1>::type' dependent
| |   | |-TypedefDecl 0x7ffe44033750 <line:1797:5, col:47> col:47 referenced __type2 'typename __promote_imp<_A2>::type'
| |   | | `-DependentNameType 0x7ffe440336e0 'typename __promote_imp<_A2>::type' dependent
| |   | |-AccessSpecDecl 0x7ffe440337a8 <line:1798:1, col:7> col:1 public
| |   | |-TypedefDecl 0x7ffe44033928 <line:1799:5, col:45> col:45 type 'decltype(std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, void, true>::__type1() + std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, void, true>::__type2())'
| |   | | `-DecltypeType 0x7ffe440338f0 'decltype(std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, void, true>::__type1() + std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, void, true>::__type2())' dependent
| |   | |   `-BinaryOperator 0x7ffe44033888 <col:22, col:42> '<dependent type>' '+'
| |   | |     |-CXXUnresolvedConstructExpr 0x7ffe44033800 <col:22, col:30> 'std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, void, true>::__type1':'typename __promote_imp<_A1>::type'
| |   | |     `-CXXUnresolvedConstructExpr 0x7ffe44033860 <col:34, col:42> 'std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, void, true>::__type2':'typename __promote_imp<_A2>::type'
| |   | `-VarDecl 0x7ffe44033990 <line:1800:5, col:31> col:23 value 'const _Bool' static cinit
| |   |   `-CXXBoolLiteralExpr 0x7ffe440339f0 <col:31> '_Bool' true
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe44033cf0 <line:1803:1, line:1809:1> line:1804:7 class __promote_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'void'
| |   | |-TemplateArgument type 'void'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7ffe44033a28 <line:1803:11, col:17> col:17 referenced class depth 0 index 0 _A1
| |   | |-CXXRecordDecl 0x7ffe44034030 <line:1804:1, col:7> col:7 implicit class __promote_imp
| |   | |-AccessSpecDecl 0x7ffe440340c8 <line:1806:1, col:7> col:1 public
| |   | |-TypedefDecl 0x7ffe44034240 <line:1807:5, col:48> col:48 type 'typename __numeric_type<_A1>::type'
| |   | | `-DependentNameType 0x7ffe440341d0 'typename __numeric_type<_A1>::type' dependent
| |   | `-VarDecl 0x7ffe440342a8 <line:1808:5, col:31> col:23 value 'const _Bool' static cinit
| |   |   `-CXXBoolLiteralExpr 0x7ffe44034308 <col:31> '_Bool' true
| |   |-ClassTemplateDecl 0x7ffe44034d68 <line:1811:1, line:1812:56> col:7 __promote
| |   | |-TemplateTypeParmDecl 0x7ffe44034340 <line:1811:11, col:17> col:17 referenced class depth 0 index 0 _A1
| |   | |-TemplateTypeParmDecl 0x7ffe440343b8 <col:22, col:34> col:28 referenced class depth 0 index 1 _A2
| |   | | `-TemplateArgument type 'void'
| |   | |-TemplateTypeParmDecl 0x7ffe44034c38 <col:40, col:52> col:46 referenced class depth 0 index 2 _A3
| |   | | `-TemplateArgument type 'void'
| |   | `-CXXRecordDecl 0x7ffe44034cd0 <line:1812:1, col:56> col:7 class __promote definition
| |   |   |-public '__promote_imp<_A1, _A2, _A3>'
| |   |   `-CXXRecordDecl 0x7ffe44035598 <col:1, col:7> col:7 implicit class __promote
| |   |-TypedefDecl 0x7ffe44036350 <line:1816:1, line:1829:15> col:15 referenced __signed_types '__type_list<signed char, __type_list<short, __type_list<int, __type_list<long, __type_list<long long, __type_list<__int128_t, struct std::__1::__nat> > > > > >':'struct std::__1::__type_list<signed char, struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > > >'
| |   | `-TemplateSpecializationType 0x7ffe44036260 '__type_list<signed char, __type_list<short, __type_list<int, __type_list<long, __type_list<long long, __type_list<__int128_t, struct std::__1::__nat> > > > > >' sugar __type_list
| |   |   |-TemplateArgument type 'signed char'
| |   |   |-TemplateArgument type '__type_list<short, __type_list<int, __type_list<long, __type_list<long long, __type_list<__int128_t, struct std::__1::__nat> > > > >':'struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > >'
| |   |   `-RecordType 0x7ffe44036240 'struct std::__1::__type_list<signed char, struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > > >'
| |   |     `-ClassTemplateSpecialization 0x7ffe44036140 '__type_list'
| |   |-TypedefDecl 0x7ffe440370b0 <line:1831:1, line:1844:15> col:15 referenced __unsigned_types '__type_list<unsigned char, __type_list<unsigned short, __type_list<unsigned int, __type_list<unsigned long, __type_list<unsigned long long, __type_list<__uint128_t, struct std::__1::__nat> > > > > >':'struct std::__1::__type_list<unsigned char, struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > > >'
| |   | `-TemplateSpecializationType 0x7ffe44036fc0 '__type_list<unsigned char, __type_list<unsigned short, __type_list<unsigned int, __type_list<unsigned long, __type_list<unsigned long long, __type_list<__uint128_t, struct std::__1::__nat> > > > > >' sugar __type_list
| |   |   |-TemplateArgument type 'unsigned char'
| |   |   |-TemplateArgument type '__type_list<unsigned short, __type_list<unsigned int, __type_list<unsigned long, __type_list<unsigned long long, __type_list<__uint128_t, struct std::__1::__nat> > > > >':'struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > >'
| |   |   `-RecordType 0x7ffe44036fa0 'struct std::__1::__type_list<unsigned char, struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > > >'
| |   |     `-ClassTemplateSpecialization 0x7ffe44036ea0 '__type_list'
| |   |-ClassTemplateDecl 0x7ffe44037450 <line:1846:1, col:100> col:100 __find_first
| |   | |-TemplateTypeParmDecl 0x7ffe44037108 <col:11, col:17> col:17 class depth 0 index 0 _TypeList
| |   | |-NonTypeTemplateParmDecl 0x7ffe44037188 <col:28, col:35> col:35 referenced 'size_t':'unsigned long' depth 0 index 1 _Size
| |   | |-NonTypeTemplateParmDecl 0x7ffe44037338 <col:42, col:90> col:47 '_Bool' depth 0 index 2
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7ffe44037300 <col:49, col:90> '_Bool' '<='
| |   | |     |-DeclRefExpr 0x7ffe440371e0 <col:49> 'size_t':'unsigned long' NonTypeTemplateParm 0x7ffe44037188 '_Size' 'size_t':'unsigned long'
| |   | |     `-UnaryExprOrTypeTraitExpr 0x7ffe440372e0 <col:58, col:90> 'unsigned long' sizeof 'typename _TypeList::_Head'
| |   | `-CXXRecordDecl 0x7ffe440373b8 <col:93, col:100> col:100 struct __find_first
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe44037b78 <line:1848:1, line:1852:1> line:1849:8 struct __find_first definition
| |   | |-TemplateArgument type '__type_list<type-parameter-0-0, type-parameter-0-1>'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7ffe440379a0 <col:44> 'size_t':'unsigned long' NonTypeTemplateParm 0x7ffe44037808 '_Size' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7ffe44037718 <line:1848:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-TemplateTypeParmDecl 0x7ffe44037788 <col:22, col:28> col:28 referenced class depth 0 index 1 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7ffe44037808 <col:33, col:40> col:40 referenced 'size_t':'unsigned long' depth 0 index 2 _Size
| |   | |-CXXRecordDecl 0x7ffe44037eb0 <line:1849:1, col:8> col:8 implicit struct __find_first
| |   | `-TypedefDecl 0x7ffe44037f58 <line:1851:5, col:17> col:17 type '_Hp'
| |   |   `-TemplateTypeParmType 0x7ffe44037760 '_Hp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7ffe44037718 '_Hp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe44038428 <line:1854:1, line:1858:1> line:1855:8 struct __find_first definition
| |   | |-TemplateArgument type '__type_list<type-parameter-0-0, type-parameter-0-1>'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7ffe44038250 <col:44> 'size_t':'unsigned long' NonTypeTemplateParm 0x7ffe440380b8 '_Size' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7ffe44037fd0 <line:1854:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-TemplateTypeParmDecl 0x7ffe44038038 <col:22, col:28> col:28 referenced class depth 0 index 1 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7ffe440380b8 <col:33, col:40> col:40 referenced 'size_t':'unsigned long' depth 0 index 2 _Size
| |   | |-CXXRecordDecl 0x7ffe44038760 <line:1855:1, col:8> col:8 implicit struct __find_first
| |   | `-TypedefDecl 0x7ffe44039200 <line:1857:5, col:53> col:53 type 'typename __find_first<_Tp, _Size>::type'
| |   |   `-DependentNameType 0x7ffe44038b40 'typename __find_first<_Tp, _Size>::type' dependent
| |   |-ClassTemplateDecl 0x7ffe440399c8 <line:1860:1, line:1865:1> line:1862:8 __apply_cv
| |   | |-TemplateTypeParmDecl 0x7ffe44039278 <line:1860:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7ffe440392e8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-NonTypeTemplateParmDecl 0x7ffe440395d8 <col:33, col:88> col:38 '_Bool' depth 0 index 2
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7ffe44039588 <col:40, col:88> '<dependent type>' lvalue
| |   | |-NonTypeTemplateParmDecl 0x7ffe440398a8 <line:1861:30, col:88> col:35 '_Bool' depth 0 index 3
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7ffe44039858 <col:37, col:88> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7ffe44039930 <line:1862:1, line:1865:1> line:1862:8 struct __apply_cv definition
| |   |   |-CXXRecordDecl 0x7ffe44039d10 <col:1, col:8> col:8 implicit struct __apply_cv
| |   |   `-TypedefDecl 0x7ffe44039db8 <line:1864:5, col:17> col:17 type '_Up'
| |   |     `-TemplateTypeParmType 0x7ffe44039330 '_Up' dependent depth 0 index 1
| |   |       `-TemplateTypeParm 0x7ffe440392e8 '_Up'
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe4403a170 <line:1867:1, line:1871:1> line:1868:8 struct __apply_cv definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7ffe44039e30 <line:1867:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7ffe44039e98 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7ffe4403a4c0 <line:1868:1, col:8> col:8 implicit struct __apply_cv
| |   | `-TypedefDecl 0x7ffe4403a568 <line:1870:5, col:23> col:23 type 'const _Up'
| |   |   `-QualType 0x7ffe44039ee1 'const _Up' const
| |   |     `-TemplateTypeParmType 0x7ffe44039ee0 '_Up' dependent depth 0 index 1
| |   |       `-TemplateTypeParm 0x7ffe44039e98 '_Up'
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe4403a920 <line:1873:1, line:1877:1> line:1874:8 struct __apply_cv definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7ffe4403a5e0 <line:1873:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7ffe4403a648 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7ffe4403ac70 <line:1874:1, col:8> col:8 implicit struct __apply_cv
| |   | `-TypedefDecl 0x7ffe4403ad18 <line:1876:5, col:26> col:26 type 'volatile _Up'
| |   |   `-QualType 0x7ffe4403a694 'volatile _Up' volatile
| |   |     `-TemplateTypeParmType 0x7ffe4403a690 '_Up' dependent depth 0 index 1
| |   |       `-TemplateTypeParm 0x7ffe4403a648 '_Up'
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe4403b0d0 <line:1879:1, line:1883:1> line:1880:8 struct __apply_cv definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7ffe4403ad90 <line:1879:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7ffe4403adf8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7ffe4403b470 <line:1880:1, col:8> col:8 implicit struct __apply_cv
| |   | `-TypedefDecl 0x7ffe4403b518 <line:1882:5, col:32> col:32 type 'const volatile _Up'
| |   |   `-QualType 0x7ffe4403ae45 'const volatile _Up' const volatile
| |   |     `-TemplateTypeParmType 0x7ffe4403ae40 '_Up' dependent depth 0 index 1
| |   |       `-TemplateTypeParm 0x7ffe4403adf8 '_Up'
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe4403b900 <line:1885:1, line:1889:1> line:1886:8 struct __apply_cv definition
| |   | |-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7ffe4403b590 <line:1885:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7ffe4403b5f8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7ffe4403bc50 <line:1886:1, col:8> col:8 implicit struct __apply_cv
| |   | `-TypedefDecl 0x7ffe4403bd58 <line:1888:5, col:18> col:18 type '_Up &'
| |   |   `-LValueReferenceType 0x7ffe4403bd20 '_Up &' dependent
| |   |     `-TemplateTypeParmType 0x7ffe4403b640 '_Up' dependent depth 0 index 1
| |   |       `-TemplateTypeParm 0x7ffe4403b5f8 '_Up'
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe4403c140 <line:1891:1, line:1895:1> line:1892:8 struct __apply_cv definition
| |   | |-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7ffe4403bdd0 <line:1891:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7ffe4403be38 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7ffe4403c490 <line:1892:1, col:8> col:8 implicit struct __apply_cv
| |   | `-TypedefDecl 0x7ffe4403c598 <line:1894:5, col:24> col:24 type 'const _Up &'
| |   |   `-LValueReferenceType 0x7ffe4403c560 'const _Up &' dependent
| |   |     `-QualType 0x7ffe4403be81 'const _Up' const
| |   |       `-TemplateTypeParmType 0x7ffe4403be80 '_Up' dependent depth 0 index 1
| |   |         `-TemplateTypeParm 0x7ffe4403be38 '_Up'
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe4403c980 <line:1897:1, line:1901:1> line:1898:8 struct __apply_cv definition
| |   | |-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7ffe4403c610 <line:1897:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7ffe4403c678 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7ffe4403ccd0 <line:1898:1, col:8> col:8 implicit struct __apply_cv
| |   | `-TypedefDecl 0x7ffe4403cdd8 <line:1900:5, col:27> col:27 type 'volatile _Up &'
| |   |   `-LValueReferenceType 0x7ffe4403cda0 'volatile _Up &' dependent
| |   |     `-QualType 0x7ffe4403c6c4 'volatile _Up' volatile
| |   |       `-TemplateTypeParmType 0x7ffe4403c6c0 '_Up' dependent depth 0 index 1
| |   |         `-TemplateTypeParm 0x7ffe4403c678 '_Up'
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe4403d200 <line:1903:1, line:1907:1> line:1904:8 struct __apply_cv definition
| |   | |-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7ffe4403ce50 <line:1903:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7ffe4403ceb8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7ffe4403d550 <line:1904:1, col:8> col:8 implicit struct __apply_cv
| |   | `-TypedefDecl 0x7ffe4403d658 <line:1906:5, col:33> col:33 type 'const volatile _Up &'
| |   |   `-LValueReferenceType 0x7ffe4403d620 'const volatile _Up &' dependent
| |   |     `-QualType 0x7ffe4403cf05 'const volatile _Up' const volatile
| |   |       `-TemplateTypeParmType 0x7ffe4403cf00 '_Up' dependent depth 0 index 1
| |   |         `-TemplateTypeParm 0x7ffe4403ceb8 '_Up'
| |   |-ClassTemplateDecl 0x7ffe4403daa0 <line:1909:1, line:1910:23> col:8 __make_signed
| |   | |-TemplateTypeParmDecl 0x7ffe4403d6d0 <line:1909:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7ffe4403d990 <col:22, col:70> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7ffe4403d958 <col:29, col:70> '<dependent type>' '||'
| |   | |     |-DependentScopeDeclRefExpr 0x7ffe4403d808 <col:29, col:47> '<dependent type>' lvalue
| |   | |     `-DependentScopeDeclRefExpr 0x7ffe4403d918 <col:56, col:70> '<dependent type>' lvalue
| |   | |-CXXRecordDecl 0x7ffe4403da08 <line:1910:1, col:23> col:8 struct __make_signed definition
| |   | | `-CXXRecordDecl 0x7ffe4403dd60 <col:1, col:8> col:8 implicit struct __make_signed
| |   | |-ClassTemplateSpecialization 0x7ffe4403e9d0 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7ffe4403ed38 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7ffe4403f118 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7ffe44040d18 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7ffe440410f8 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7ffe440414d8 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7ffe440418b8 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7ffe44041c98 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7ffe44042078 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7ffe44042450 '__make_signed'
| |   | `-ClassTemplateSpecialization 0x7ffe44042818 '__make_signed'
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe4403e000 <line:1912:1, line:1916:1> line:1913:8 struct __make_signed definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7ffe4403de18 <line:1912:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7ffe4403e290 <line:1913:1, col:8> col:8 implicit struct __make_signed
| |   | `-TypedefDecl 0x7ffe4403e920 <line:1915:5, col:70> col:70 type 'typename __find_first<__signed_types, sizeof(_Tp)>::type'
| |   |   `-DependentNameType 0x7ffe4403e8b0 'typename __find_first<__signed_types, sizeof(_Tp)>::type' dependent
| |   |-ClassTemplateSpecializationDecl 0x7ffe4403e9d0 <line:1918:1, col:61> col:20 struct __make_signed definition
| |   | |-TemplateArgument type '_Bool'
| |   | |-TemplateArgument integral 1
| |   | `-CXXRecordDecl 0x7ffe4403ec40 <col:13, col:20> col:20 implicit struct __make_signed
| |   |-ClassTemplateSpecializationDecl 0x7ffe4403ed38 <line:1919:1, col:84> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'short'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7ffe4403efb0 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7ffe4403f060 <col:61, col:79> col:79 type 'short'
| |   |   `-BuiltinType 0x7ffe438327a0 'short'
| |   |-ClassTemplateSpecializationDecl 0x7ffe4403f118 <line:1920:1, col:84> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'unsigned short'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7ffe44040bb0 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7ffe44040c60 <col:61, col:79> col:79 type 'short'
| |   |   `-BuiltinType 0x7ffe438327a0 'short'
| |   |-ClassTemplateSpecializationDecl 0x7ffe44040d18 <line:1921:1, col:84> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'int'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7ffe44040f90 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7ffe44041040 <col:61, col:79> col:79 type 'int'
| |   |   `-BuiltinType 0x7ffe438327c0 'int'
| |   |-ClassTemplateSpecializationDecl 0x7ffe440410f8 <line:1922:1, col:84> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'unsigned int'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7ffe44041370 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7ffe44041420 <col:61, col:79> col:79 type 'int'
| |   |   `-BuiltinType 0x7ffe438327c0 'int'
| |   |-ClassTemplateSpecializationDecl 0x7ffe440414d8 <line:1923:1, col:84> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'long'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7ffe44041750 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7ffe44041800 <col:61, col:79> col:79 type 'long'
| |   |   `-BuiltinType 0x7ffe438327e0 'long'
| |   |-ClassTemplateSpecializationDecl 0x7ffe440418b8 <line:1924:1, col:84> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'unsigned long'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7ffe44041b30 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7ffe44041be0 <col:61, col:79> col:79 type 'long'
| |   |   `-BuiltinType 0x7ffe438327e0 'long'
| |   |-ClassTemplateSpecializationDecl 0x7ffe44041c98 <line:1925:1, col:84> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'long long'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7ffe44041f10 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7ffe44041fc0 <col:61, col:79> col:79 type 'long long'
| |   |   `-BuiltinType 0x7ffe43832800 'long long'
| |   |-ClassTemplateSpecializationDecl 0x7ffe44042078 <line:1926:1, col:84> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'unsigned long long'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7ffe440422f0 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7ffe440423a0 <col:61, col:79> col:79 type 'long long'
| |   |   `-BuiltinType 0x7ffe43832800 'long long'
| |   |-ClassTemplateSpecializationDecl 0x7ffe44042450 <line:1928:1, col:85> col:20 struct __make_signed definition
| |   | |-TemplateArgument type '__int128'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7ffe440426c0 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7ffe44042768 <col:61, col:80> col:80 type '__int128_t':'__int128'
| |   |   `-TypedefType 0x7ffe43961ff0 '__int128_t' sugar
| |   |     |-Typedef 0x7ffe43832c60 '__int128_t'
| |   |     `-BuiltinType 0x7ffe43832940 '__int128'
| |   |-ClassTemplateSpecializationDecl 0x7ffe44042818 <line:1929:1, col:85> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'unsigned __int128'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7ffe44042ac0 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7ffe44042b68 <col:61, col:80> col:80 type '__int128_t':'__int128'
| |   |   `-TypedefType 0x7ffe43961ff0 '__int128_t' sugar
| |   |     |-Typedef 0x7ffe43832c60 '__int128_t'
| |   |     `-BuiltinType 0x7ffe43832940 '__int128'
| |   |-ClassTemplateDecl 0x7ffe44042d28 <line:1932:1, line:1936:1> line:1933:29 make_signed
| |   | |-TemplateTypeParmDecl 0x7ffe44042be0 <line:1932:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe44042c90 <line:1933:1, line:1936:1> line:1933:29 struct make_signed definition
| |   |   |-TypeVisibilityAttr 0x7ffe44042fa0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7ffe44042fe8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1933:1, col:29> col:29 implicit struct make_signed
| |   |   `-TypedefDecl 0x7ffe44043ca0 <line:1935:5, col:105> col:105 type 'typename __apply_cv<_Tp, typename __make_signed<typename remove_cv<_Tp>::type>::type>::type'
| |   |     `-DependentNameType 0x7ffe44043c30 'typename __apply_cv<_Tp, typename __make_signed<typename remove_cv<_Tp>::type>::type>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7ffe44043f60 <line:1939:1, col:71> col:22 make_signed_t
| |   | |-TemplateTypeParmDecl 0x7ffe44043d18 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7ffe44043f00 <col:22, col:71> col:28 make_signed_t 'typename make_signed<_Tp>::type'
| |   |   `-DependentNameType 0x7ffe44043e90 'typename make_signed<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7ffe44044380 <line:1942:1, line:1943:25> col:8 __make_unsigned
| |   | |-TemplateTypeParmDecl 0x7ffe44043fb0 <line:1942:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7ffe44044270 <col:22, col:70> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7ffe44044238 <col:29, col:70> '<dependent type>' '||'
| |   | |     |-DependentScopeDeclRefExpr 0x7ffe440440e8 <col:29, col:47> '<dependent type>' lvalue
| |   | |     `-DependentScopeDeclRefExpr 0x7ffe440441f8 <col:56, col:70> '<dependent type>' lvalue
| |   | |-CXXRecordDecl 0x7ffe440442e8 <line:1943:1, col:25> col:8 struct __make_unsigned definition
| |   | | `-CXXRecordDecl 0x7ffe44044640 <col:1, col:8> col:8 implicit struct __make_unsigned
| |   | |-ClassTemplateSpecialization 0x7ffe440462b0 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7ffe44046618 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7ffe440469f8 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7ffe44046dd8 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7ffe440471b8 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7ffe44047598 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7ffe4404fe00 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7ffe440501d8 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7ffe440505b8 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7ffe44050990 '__make_unsigned'
| |   | `-ClassTemplateSpecialization 0x7ffe44050d58 '__make_unsigned'
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe440448e0 <line:1945:1, line:1949:1> line:1946:8 struct __make_unsigned definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7ffe440446f8 <line:1945:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7ffe44045b70 <line:1946:1, col:8> col:8 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7ffe44046200 <line:1948:5, col:72> col:72 type 'typename __find_first<__unsigned_types, sizeof(_Tp)>::type'
| |   |   `-DependentNameType 0x7ffe44046190 'typename __find_first<__unsigned_types, sizeof(_Tp)>::type' dependent
| |   |-ClassTemplateSpecializationDecl 0x7ffe440462b0 <line:1951:1, col:63> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type '_Bool'
| |   | |-TemplateArgument integral 1
| |   | `-CXXRecordDecl 0x7ffe44046520 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   |-ClassTemplateSpecializationDecl 0x7ffe44046618 <line:1952:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'short'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7ffe44046890 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7ffe44046940 <col:63, col:90> col:90 type 'unsigned short'
| |   |   `-BuiltinType 0x7ffe43832840 'unsigned short'
| |   |-ClassTemplateSpecializationDecl 0x7ffe440469f8 <line:1953:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'unsigned short'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7ffe44046c70 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7ffe44046d20 <col:63, col:90> col:90 type 'unsigned short'
| |   |   `-BuiltinType 0x7ffe43832840 'unsigned short'
| |   |-ClassTemplateSpecializationDecl 0x7ffe44046dd8 <line:1954:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'int'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7ffe44047050 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7ffe44047100 <col:63, col:90> col:90 type 'unsigned int'
| |   |   `-BuiltinType 0x7ffe43832860 'unsigned int'
| |   |-ClassTemplateSpecializationDecl 0x7ffe440471b8 <line:1955:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'unsigned int'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7ffe44047430 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7ffe440474e0 <col:63, col:90> col:90 type 'unsigned int'
| |   |   `-BuiltinType 0x7ffe43832860 'unsigned int'
| |   |-ClassTemplateSpecializationDecl 0x7ffe44047598 <line:1956:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'long'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7ffe44047810 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7ffe440478c0 <col:63, col:90> col:90 type 'unsigned long'
| |   |   `-BuiltinType 0x7ffe43832880 'unsigned long'
| |   |-ClassTemplateSpecializationDecl 0x7ffe4404fe00 <line:1957:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'unsigned long'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7ffe44050070 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7ffe44050120 <col:63, col:90> col:90 type 'unsigned long'
| |   |   `-BuiltinType 0x7ffe43832880 'unsigned long'
| |   |-ClassTemplateSpecializationDecl 0x7ffe440501d8 <line:1958:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'long long'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7ffe44050450 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7ffe44050500 <col:63, col:90> col:90 type 'unsigned long long'
| |   |   `-BuiltinType 0x7ffe438328a0 'unsigned long long'
| |   |-ClassTemplateSpecializationDecl 0x7ffe440505b8 <line:1959:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'unsigned long long'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7ffe44050830 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7ffe440508e0 <col:63, col:90> col:90 type 'unsigned long long'
| |   |   `-BuiltinType 0x7ffe438328a0 'unsigned long long'
| |   |-ClassTemplateSpecializationDecl 0x7ffe44050990 <line:1961:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type '__int128'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7ffe44050c00 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7ffe44050ca8 <col:63, col:90> col:90 type '__uint128_t':'unsigned __int128'
| |   |   `-TypedefType 0x7ffe43962360 '__uint128_t' sugar
| |   |     |-Typedef 0x7ffe43832cd0 '__uint128_t'
| |   |     `-BuiltinType 0x7ffe43832960 'unsigned __int128'
| |   |-ClassTemplateSpecializationDecl 0x7ffe44050d58 <line:1962:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'unsigned __int128'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7ffe44050fd0 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7ffe44051078 <col:63, col:90> col:90 type '__uint128_t':'unsigned __int128'
| |   |   `-TypedefType 0x7ffe43962360 '__uint128_t' sugar
| |   |     |-Typedef 0x7ffe43832cd0 '__uint128_t'
| |   |     `-BuiltinType 0x7ffe43832960 'unsigned __int128'
| |   |-ClassTemplateDecl 0x7ffe44051238 <line:1965:1, line:1969:1> line:1966:29 make_unsigned
| |   | |-TemplateTypeParmDecl 0x7ffe440510f0 <line:1965:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe440511a0 <line:1966:1, line:1969:1> line:1966:29 struct make_unsigned definition
| |   |   |-TypeVisibilityAttr 0x7ffe440514b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7ffe440514f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1966:1, col:29> col:29 implicit struct make_unsigned
| |   |   `-TypedefDecl 0x7ffe440520b0 <line:1968:5, col:107> col:107 type 'typename __apply_cv<_Tp, typename __make_unsigned<typename remove_cv<_Tp>::type>::type>::type'
| |   |     `-DependentNameType 0x7ffe44052040 'typename __apply_cv<_Tp, typename __make_unsigned<typename remove_cv<_Tp>::type>::type>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7ffe44052370 <line:1972:1, col:75> col:22 make_unsigned_t
| |   | |-TemplateTypeParmDecl 0x7ffe44052128 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7ffe44052310 <col:22, col:75> col:28 make_unsigned_t 'typename make_unsigned<_Tp>::type'
| |   |   `-DependentNameType 0x7ffe440522a0 'typename make_unsigned<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7ffe44052508 <line:2010:1, line:2011:42> col:29 common_type
| |   | |-TemplateTypeParmDecl 0x7ffe440523c0 <line:2010:11, col:20> col:20 class depth 0 index 0 ... _Tp
| |   | `-CXXRecordDecl 0x7ffe44052470 <line:2011:1, col:42> col:29 struct common_type definition
| |   |   |-TypeVisibilityAttr 0x7ffe440527e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7ffe44052828 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2011:1, col:29> col:29 implicit struct common_type
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe44052aa8 <line:2015:1, line:2017:37> line:2016:29 struct common_type definition
| |   | |-public 'common_type<_Tp, _Tp>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7ffe440528e0 <line:2015:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7ffe44052c18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7ffe44052ef8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2016:1, col:29> col:29 implicit struct common_type
| |   |-ClassTemplateDecl 0x7ffe440531c8 <line:2021:1, line:2022:28> col:8 __common_type2_imp
| |   | |-TemplateTypeParmDecl 0x7ffe44052fb0 <line:2021:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7ffe44053018 <col:22, col:28> col:28 class depth 0 index 1 _Up
| |   | |-TemplateTypeParmDecl 0x7ffe44053098 <col:33, col:41> col:33 class depth 0 index 2
| |   | | `-TemplateArgument type 'void'
| |   | `-CXXRecordDecl 0x7ffe44053130 <line:2022:1, col:28> col:8 struct __common_type2_imp definition
| |   |   `-CXXRecordDecl 0x7ffe440534a0 <col:1, col:8> col:8 implicit struct __common_type2_imp
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe44053c98 <line:2024:1, line:2033:1> line:2025:8 struct __common_type2_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument type 'typename __void_t<decltype(true ? std::__1::declval<_Tp>() : std::__1::declval<_Up>())>::type'
| |   | |-TemplateTypeParmDecl 0x7ffe44053558 <line:2024:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7ffe440535c8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7ffe440543c0 <line:2025:1, col:8> col:8 implicit struct __common_type2_imp
| |   | `-TypedefDecl 0x7ffe44054880 <line:2030:5, line:2032:14> col:14 type 'typename decay<decltype(true ? std::__1::declval<_Tp>() : std::__1::declval<_Up>())>::type'
| |   |   `-DependentNameType 0x7ffe44054810 'typename decay<decltype(true ? std::__1::declval<_Tp>() : std::__1::declval<_Up>())>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7ffe44055790 <line:2035:1, line:2043:6> line:2038:1 __common_type2
| |   | |-TemplateTypeParmDecl 0x7ffe440548f8 <line:2035:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7ffe44054968 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-TemplateTypeParmDecl 0x7ffe44054b00 <line:2036:11, col:45> col:17 referenced class depth 0 index 2 _DTp
| |   | | `-TemplateArgument type 'typename decay<_Tp>::type'
| |   | |-TemplateTypeParmDecl 0x7ffe44054d20 <line:2037:11, col:45> col:17 referenced class depth 0 index 3 _DUp
| |   | | `-TemplateArgument type 'typename decay<_Up>::type'
| |   | `-TypeAliasDecl 0x7ffe44055730 <line:2038:1, line:2043:6> line:2038:7 __common_type2 'typename conditional<is_same<_Tp, _DTp>::value && is_same<_Up, _DUp>::value, __common_type2_imp<_Tp, _Up>, common_type<_DTp, _DUp> >::type'
| |   |   `-DependentNameType 0x7ffe440556c0 'typename conditional<is_same<_Tp, _DTp>::value && is_same<_Up, _DUp>::value, __common_type2_imp<_Tp, _Up>, common_type<_DTp, _DUp> >::type' dependent
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe44055a98 <line:2045:1, line:2047:33> line:2046:29 struct common_type definition
| |   | |-public '__common_type2<_Tp, _Up>':'typename conditional<is_same<type-parameter-0-0, typename decay<type-parameter-0-0>::type>::value && is_same<type-parameter-0-1, typename decay<type-parameter-0-1>::type>::value, __common_type2_imp<type-parameter-0-0, type-parameter-0-1, void>, common_type<typename decay<type-parameter-0-0>::type, typename decay<type-parameter-0-1>::type> >::type'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | `-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateTypeParmDecl 0x7ffe440557e0 <line:2045:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7ffe44055848 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-TypeVisibilityAttr 0x7ffe44055c48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7ffe440580c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2046:1, col:29> col:29 implicit struct common_type
| |   |-ClassTemplateDecl 0x7ffe44058298 <line:2051:1, col:31> col:31 __common_types
| |   | |-TemplateTypeParmDecl 0x7ffe44058178 <col:11, col:20> col:20 class depth 0 index 0 ... Tp
| |   | `-CXXRecordDecl 0x7ffe44058200 <col:24, col:31> col:31 struct __common_types
| |   |-ClassTemplateDecl 0x7ffe440586b0 <line:2053:1, line:2054:28> col:8 __common_type_impl
| |   | |-TemplateTypeParmDecl 0x7ffe44058508 <line:2053:11> col:11 class depth 0 index 0
| |   | |-TemplateTypeParmDecl 0x7ffe44058588 <col:18, col:26> col:18 class depth 0 index 1
| |   | | `-TemplateArgument type 'void'
| |   | `-CXXRecordDecl 0x7ffe44058618 <line:2054:1, col:28> col:8 struct __common_type_impl definition
| |   |   `-CXXRecordDecl 0x7ffe44058950 <col:1, col:8> col:8 implicit struct __common_type_impl
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe440591a0 <line:2056:1, line:2062:1> line:2057:8 struct __common_type_impl definition
| |   | |-TemplateArgument type '__common_types<type-parameter-0-0, type-parameter-0-1>'
| |   | |-TemplateArgument type 'typename __void_t<typename common_type<type-parameter-0-0, type-parameter-0-1>::type>::type'
| |   | |-TemplateTypeParmDecl 0x7ffe44058a08 <line:2056:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7ffe44058a78 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7ffe44059520 <line:2057:1, col:8> col:8 implicit struct __common_type_impl
| |   | `-TypedefDecl 0x7ffe44059780 <line:2061:3, col:48> col:48 type 'typename common_type<_Tp, _Up>::type'
| |   |   `-DependentNameType 0x7ffe44059710 'typename common_type<_Tp, _Up>::type' dependent
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe4405a000 <line:2064:1, line:2071:1> line:2065:8 struct __common_type_impl definition
| |   | |-public '__common_type_impl<__common_types<typename common_type<_Tp, _Up>::type, _Vp...> >'
| |   | |-TemplateArgument type '__common_types<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2...>'
| |   | |-TemplateArgument type 'typename __void_t<typename common_type<type-parameter-0-0, type-parameter-0-1>::type>::type'
| |   | |-TemplateTypeParmDecl 0x7ffe440597f8 <line:2064:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7ffe44059868 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-TemplateTypeParmDecl 0x7ffe440598d8 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Vp
| |   | `-CXXRecordDecl 0x7ffe4405a7e8 <line:2065:1, col:8> col:8 implicit struct __common_type_impl
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe4405ac78 <line:2073:1, line:2075:62> line:2074:29 struct common_type definition
| |   | |-public '__common_type_impl<__common_types<_Tp, _Up, _Vp...> >'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | |-TemplateArgument type 'type-parameter-0-1'
| |   | | `-TemplateArgument type 'type-parameter-0-2...'
| |   | |-TemplateTypeParmDecl 0x7ffe4405a8a0 <line:2073:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7ffe4405a908 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-TemplateTypeParmDecl 0x7ffe4405a978 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Vp
| |   | |-TypeVisibilityAttr 0x7ffe4405ae68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7ffe4405b318 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2074:1, col:29> col:29 implicit struct common_type
| |   |-TypeAliasTemplateDecl 0x7ffe4405b6b0 <line:2078:1, col:77> col:25 common_type_t
| |   | |-TemplateTypeParmDecl 0x7ffe4405b400 <col:11, col:20> col:20 referenced class depth 0 index 0 ... _Tp
| |   | `-TypeAliasDecl 0x7ffe4405b650 <col:25, col:77> col:31 common_type_t 'typename common_type<_Tp...>::type'
| |   |   `-DependentNameType 0x7ffe4405b5e0 'typename common_type<_Tp...>::type' dependent
| |   |-ClassTemplateDecl 0x7ffe4405b890 <line:2085:1, col:74> col:41 __select_2nd
| |   | |-TemplateTypeParmDecl 0x7ffe4405b700 <col:10> col:10 typename depth 0 index 0
| |   | |-TemplateTypeParmDecl 0x7ffe4405b768 <col:20, col:29> col:29 referenced typename depth 0 index 1 _Tp
| |   | `-CXXRecordDecl 0x7ffe4405b7f8 <col:34, col:74> col:41 struct __select_2nd definition
| |   |   |-CXXRecordDecl 0x7ffe4405bb30 <col:34, col:41> col:41 implicit struct __select_2nd
| |   |   `-TypedefDecl 0x7ffe4405bbd8 <col:56, col:68> col:68 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7ffe4405b7b0 '_Tp' dependent depth 0 index 1
| |   |       `-TemplateTypeParm 0x7ffe4405b768 '_Tp'
| |   |-FunctionTemplateDecl 0x7ffe4405c3c8 <line:2087:1, line:2089:25> col:1 __is_assignable_test
| |   | |-TemplateTypeParmDecl 0x7ffe4405bc50 <line:2087:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7ffe4405bcb8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | `-FunctionDecl 0x7ffe4405c330 <line:2088:1, line:2089:25> col:1 __is_assignable_test 'typename __select_2nd<decltype((std::__1::declval<_Tp>() = std::__1::declval<_Arg>())), true_type>::type (int)'
| |   |   `-ParmVarDecl 0x7ffe4405c218 <col:22> col:25 'int'
| |   |-FunctionTemplateDecl 0x7ffe4405c638 <line:2091:1, line:2092:36> col:12 __is_assignable_test
| |   | |-TemplateTypeParmDecl 0x7ffe4405c420 <line:2091:11> col:11 class depth 0 index 0
| |   | |-TemplateTypeParmDecl 0x7ffe4405c488 <col:18> col:18 class depth 0 index 1
| |   | `-FunctionDecl 0x7ffe4405c5a0 <line:2092:1, col:36> col:12 __is_assignable_test 'std::__1::false_type (...)'
| |   |-ClassTemplateDecl 0x7ffe4405cb28 <line:2095:1, line:2097:69> line:2096:8 __is_assignable_imp
| |   | |-TemplateTypeParmDecl 0x7ffe4405c688 <line:2095:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7ffe4405c6f8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | |-NonTypeTemplateParmDecl 0x7ffe4405ca10 <col:34, col:79> col:39 '_Bool' depth 0 index 2
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7ffe4405c9d8 <col:41, col:79> '<dependent type>' '||'
| |   | |     |-DependentScopeDeclRefExpr 0x7ffe4405c838 <col:41, col:55> '<dependent type>' lvalue
| |   | |     `-DependentScopeDeclRefExpr 0x7ffe4405c998 <col:64, col:79> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7ffe4405ca90 <line:2096:1, line:2097:69> line:2096:8 struct __is_assignable_imp definition
| |   |   |-public 'decltype((std::__1::__is_assignable_test<_Tp, _Arg>(0)))'
| |   |   `-CXXRecordDecl 0x7ffe4405d098 <col:1, col:8> col:8 implicit struct __is_assignable_imp
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe4406a4a0 <line:2099:1, line:2103:1> line:2100:8 struct __is_assignable_imp definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7ffe4405d150 <line:2099:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7ffe4405d1b8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | `-CXXRecordDecl 0x7ffe4406a7c0 <line:2100:1, col:8> col:8 implicit struct __is_assignable_imp
| |   |-ClassTemplateDecl 0x7ffe4406aa10 <line:2105:1, line:2107:46> line:2106:8 is_assignable
| |   | |-TemplateTypeParmDecl 0x7ffe4406a878 <line:2105:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7ffe4406a8e8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | `-CXXRecordDecl 0x7ffe4406a978 <line:2106:1, line:2107:46> line:2106:8 struct is_assignable definition
| |   |   |-public '__is_assignable_imp<_Tp, _Arg>'
| |   |   `-CXXRecordDecl 0x7ffe4406b0a8 <col:1, col:8> col:8 implicit struct is_assignable
| |   |-ClassTemplateDecl 0x7ffe4406b2a8 <line:2116:1, line:2118:88> line:2116:50 is_copy_assignable
| |   | |-TemplateTypeParmDecl 0x7ffe4406b160 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe4406b210 <col:22, line:2118:88> line:2116:50 struct is_copy_assignable definition
| |   |   |-public 'is_assignable<typename add_lvalue_reference<_Tp>::type, typename add_lvalue_reference<typename add_const<_Tp>::type>::type>'
| |   |   |-TypeVisibilityAttr 0x7ffe4406b520 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7ffe4406ba88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2116:22, col:50> col:50 implicit struct is_copy_assignable
| |   |-ClassTemplateDecl 0x7ffe4406bc88 <line:2127:1, line:2130:71> line:2127:50 is_move_assignable
| |   | |-TemplateTypeParmDecl 0x7ffe4406bb40 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe4406bbf0 <col:22, line:2130:71> line:2127:50 struct is_move_assignable definition
| |   |   |-public 'is_assignable<typename add_lvalue_reference<_Tp>::type, typename add_rvalue_reference<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7ffe4406bf00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7ffe4406c2c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2127:22, col:50> col:50 implicit struct is_move_assignable
| |   |-ClassTemplateDecl 0x7ffe4406c498 <line:2149:1, line:2150:52> col:8 __is_destructible_apply
| |   | |-TemplateTypeParmDecl 0x7ffe4406c380 <line:2149:11> col:11 class depth 0 index 0
| |   | `-CXXRecordDecl 0x7ffe4406c400 <line:2150:1, col:52> col:8 struct __is_destructible_apply definition
| |   |   |-CXXRecordDecl 0x7ffe4406c710 <col:1, col:8> col:8 implicit struct __is_destructible_apply
| |   |   `-TypedefDecl 0x7ffe4406c7c0 <col:34, col:46> col:46 type 'int'
| |   |     `-BuiltinType 0x7ffe438327c0 'int'
| |   |-ClassTemplateDecl 0x7ffe4406c958 <line:2152:1, line:2163:1> line:2153:8 __is_destructor_wellformed
| |   | |-TemplateTypeParmDecl 0x7ffe4406c838 <line:2152:11, col:20> col:20 referenced typename depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe4406c8c0 <line:2153:1, line:2163:1> line:2153:8 struct __is_destructor_wellformed definition
| |   |   |-CXXRecordDecl 0x7ffe4406cbd0 <col:1, col:8> col:8 implicit struct __is_destructor_wellformed
| |   |   |-FunctionTemplateDecl 0x7ffe4406d2e8 <line:2154:5, line:2157:5> line:2155:18 __test
| |   |   | |-TemplateTypeParmDecl 0x7ffe4406cc68 <line:2154:15, col:24> col:24 referenced typename depth 1 index 0 _Tp1
| |   |   | `-CXXMethodDecl 0x7ffe4406d250 <line:2155:5, line:2157:5> line:2155:18 __test 'char (typename __is_destructible_apply<decltype(std::__1::declval<_Tp1 &>().~_Tp1())>::type)' static
| |   |   |   `-ParmVarDecl 0x7ffe4406d120 <line:2156:9, col:86> line:2157:5 'typename __is_destructible_apply<decltype(std::__1::declval<_Tp1 &>().~_Tp1())>::type'
| |   |   |-FunctionTemplateDecl 0x7ffe4406d478 <line:2159:5, line:2160:29> col:18 __test
| |   |   | |-TemplateTypeParmDecl 0x7ffe4406d340 <line:2159:15, col:24> col:24 typename depth 1 index 0 _Tp1
| |   |   | `-CXXMethodDecl 0x7ffe4406d3e0 <line:2160:5, col:29> col:18 __test 'struct std::__1::__two (...)' static
| |   |   `-VarDecl 0x7ffe4406d4d8 <line:2162:5, col:69> col:23 value 'const _Bool' static cinit
| |   |     `-BinaryOperator 0x7ffe4406d6c0 <col:31, col:69> '_Bool' '=='
| |   |       |-UnaryExprOrTypeTraitExpr 0x7ffe4406d670 <col:31, col:53> 'unsigned long' sizeof
| |   |       | `-ParenExpr 0x7ffe4406d650 <col:37, col:53> '<dependent type>'
| |   |       |   `-CallExpr 0x7ffe4406d620 <col:38, col:52> '<dependent type>'
| |   |       |     |-UnresolvedLookupExpr 0x7ffe4406d560 <col:38, col:48> '<dependent type>' lvalue (no ADL) = '__test' 0x7ffe4406d478 0x7ffe4406d2e8
| |   |       |     `-IntegerLiteral 0x7ffe4406d600 <col:50> 'int' 12
| |   |       `-UnaryExprOrTypeTraitExpr 0x7ffe4406d6a0 <col:58, col:69> 'unsigned long' sizeof 'char'
| |   |-ClassTemplateDecl 0x7ffe4406d898 <line:2165:1, line:2166:8> col:8 __destructible_imp
| |   | |-TemplateTypeParmDecl 0x7ffe4406d708 <line:2165:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7ffe4406d788 <col:22> col:26 '_Bool' depth 0 index 1
| |   | `-CXXRecordDecl 0x7ffe4406d800 <line:2166:1, col:8> col:8 struct __destructible_imp
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe4406dce0 <line:2168:1, line:2171:92> line:2169:8 struct __destructible_imp definition
| |   | |-public 'std::__1::integral_constant<_Bool, __is_destructor_wellformed<typename std::__1::remove_all_extents<_Tp>::type>::value>':'integral_constant<_Bool, __is_destructor_wellformed<typename std::__1::remove_all_extents<_Tp>::type>::value>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7ffe4406daf8 <line:2168:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe4406e818 <line:2169:1, col:8> col:8 implicit struct __destructible_imp
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe4406eab0 <line:2173:1, line:2175:32> line:2174:8 struct __destructible_imp definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7ffe4406e8d0 <line:2173:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe4406edf0 <line:2174:1, col:8> col:8 implicit struct __destructible_imp
| |   |-ClassTemplateDecl 0x7ffe4406f038 <line:2177:1, line:2178:8> col:8 __destructible_false
| |   | |-TemplateTypeParmDecl 0x7ffe4406eea8 <line:2177:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7ffe4406ef28 <col:22> col:26 '_Bool' depth 0 index 1
| |   | `-CXXRecordDecl 0x7ffe4406efa0 <line:2178:1, col:8> col:8 struct __destructible_false
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe4406f480 <line:2180:1, line:2181:108> col:8 struct __destructible_false definition
| |   | |-public '__destructible_imp<_Tp, std::__1::is_reference<_Tp>::value>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7ffe4406f298 <line:2180:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe4406f9c8 <line:2181:1, col:8> col:8 implicit struct __destructible_false
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe4406fc60 <line:2183:1, line:2184:68> col:8 struct __destructible_false definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7ffe4406fa80 <line:2183:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe4406ffa0 <line:2184:1, col:8> col:8 implicit struct __destructible_false
| |   |-ClassTemplateDecl 0x7ffe44070178 <line:2186:1, line:2188:73> line:2187:8 is_destructible
| |   | |-TemplateTypeParmDecl 0x7ffe44070058 <line:2186:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7ffe440700e0 <line:2187:1, line:2188:73> line:2187:8 struct is_destructible definition
| |   | | |-public '__destructible_false<_Tp, std::__1::is_function<_Tp>::value>'
| |   | | `-CXXRecordDecl 0x7ffe440706a8 <col:1, col:8> col:8 implicit struct is_destructible
| |   | `-ClassTemplateSpecialization 0x7ffe44070cc8 'is_destructible'
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe44070928 <line:2190:1, line:2192:33> line:2191:8 struct is_destructible definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'type-parameter-0-0 []'
| |   | |-TemplateTypeParmDecl 0x7ffe44070760 <line:2190:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe44070bf0 <line:2191:1, col:8> col:8 implicit struct is_destructible
| |   |-ClassTemplateSpecializationDecl 0x7ffe44070cc8 <line:2194:1, line:2196:33> line:2195:8 struct is_destructible definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'void'
| |   | `-CXXRecordDecl 0x7ffe44070f70 <col:1, col:8> col:8 implicit struct is_destructible
| |   |-FunctionTemplateDecl 0x7ffe44071438 <line:2207:1, line:2214:1> line:2210:1 move
| |   | |-TemplateTypeParmDecl 0x7ffe44071028 <line:2207:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7ffe440713a0 <line:2208:1, line:2214:1> line:2210:1 constexpr move 'typename remove_reference<_Tp>::type &&(_Tp &&) noexcept' inline
| |   |   |-ParmVarDecl 0x7ffe44071218 <col:6, col:12> col:12 referenced __t '_Tp &&'
| |   |   |-CompoundStmt 0x7ffe44071750 <line:2211:1, line:2214:1>
| |   |   | |-DeclStmt 0x7ffe44071668 <line:2212:5, col:53>
| |   |   | | `-TypedefDecl 0x7ffe44071610 <col:5, col:50> col:50 referenced _Up 'typename remove_reference<_Tp>::type'
| |   |   | |   `-DependentNameType 0x7ffe440715a0 'typename remove_reference<_Tp>::type' dependent
| |   |   | `-ReturnStmt 0x7ffe44071738 <line:2213:5, col:34>
| |   |   |   `-CXXStaticCastExpr 0x7ffe44071708 <col:12, col:34> '_Up':'typename remove_reference<_Tp>::type' xvalue static_cast<_Up &&> <Dependent>
| |   |   |     `-DeclRefExpr 0x7ffe440716a0 <col:31> '_Tp' lvalue ParmVar 0x7ffe44071218 '__t' '_Tp &&'
| |   |   |-AlwaysInlineAttr 0x7ffe44071490 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7ffe440714d8 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7ffe44071b80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2216:1, line:2222:1> line:2219:1 forward
| |   | |-TemplateTypeParmDecl 0x7ffe44071778 <line:2216:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7ffe44071ae8 <line:2217:1, line:2222:1> line:2219:1 constexpr forward '_Tp &&(typename remove_reference<_Tp>::type &) noexcept' inline
| |   |   |-ParmVarDecl 0x7ffe440719b0 <col:9, col:47> col:47 referenced __t 'typename remove_reference<_Tp>::type &'
| |   |   |-CompoundStmt 0x7ffe44071cb0 <line:2220:1, line:2222:1>
| |   |   | `-ReturnStmt 0x7ffe44071c98 <line:2221:5, col:34>
| |   |   |   `-CXXStaticCastExpr 0x7ffe44071c68 <col:12, col:34> '_Tp' xvalue static_cast<_Tp &&> <Dependent>
| |   |   |     `-DeclRefExpr 0x7ffe44071c30 <col:31> 'typename remove_reference<_Tp>::type' lvalue ParmVar 0x7ffe440719b0 '__t' 'typename remove_reference<_Tp>::type &'
| |   |   |-AlwaysInlineAttr 0x7ffe44071bd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7ffe44071c20 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7ffe440720a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2224:1, line:2232:1> line:2227:1 forward
| |   | |-TemplateTypeParmDecl 0x7ffe44071cd0 <line:2224:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7ffe44072008 <line:2225:1, line:2232:1> line:2227:1 constexpr forward '_Tp &&(typename remove_reference<_Tp>::type &&) noexcept' inline
| |   |   |-ParmVarDecl 0x7ffe44071ed0 <col:9, col:48> col:48 referenced __t 'typename remove_reference<_Tp>::type &&'
| |   |   |-CompoundStmt 0x7ffe44072418 <line:2228:1, line:2232:1>
| |   |   | |-DeclStmt 0x7ffe44072380 <line:2229:5, line:2230:60>
| |   |   | | `-StaticAssertDecl 0x7ffe44072348 <line:2229:5, line:2230:59> line:2229:5
| |   |   | |   |-UnaryOperator 0x7ffe44072258 <col:19, col:46> '<dependent type>' prefix '!'
| |   |   | |   | `-DependentScopeDeclRefExpr 0x7ffe44072218 <col:20, col:46> '<dependent type>' lvalue
| |   |   | |   `-StringLiteral 0x7ffe440722f8 <line:2230:19> 'const char [39]' lvalue "can not forward an rvalue as an lvalue"
| |   |   | `-ReturnStmt 0x7ffe44072400 <line:2231:5, col:34>
| |   |   |   `-CXXStaticCastExpr 0x7ffe440723d0 <col:12, col:34> '_Tp' xvalue static_cast<_Tp &&> <Dependent>
| |   |   |     `-DeclRefExpr 0x7ffe44072398 <col:31> 'typename remove_reference<_Tp>::type' lvalue ParmVar 0x7ffe44071ed0 '__t' 'typename remove_reference<_Tp>::type &&'
| |   |   |-AlwaysInlineAttr 0x7ffe440720f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7ffe44072140 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7ffe44072800 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2277:1, line:2283:1> line:2280:1 __decay_copy
| |   | |-TemplateTypeParmDecl 0x7ffe44072440 <line:2277:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7ffe44072740 <line:2278:1, line:2283:1> line:2280:1 __decay_copy 'typename decay<_Tp>::type (_Tp &&)' inline
| |   |   |-ParmVarDecl 0x7ffe44072628 <col:14, col:20> col:20 referenced __t '_Tp &&'
| |   |   |-CompoundStmt 0x7ffe44072a18 <line:2281:1, line:2283:1>
| |   |   | `-ReturnStmt 0x7ffe44072a00 <line:2282:5, col:35>
| |   |   |   `-CallExpr 0x7ffe440729d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2282:35> '<dependent type>'
| |   |   |     |-UnresolvedLookupExpr 0x7ffe44072908 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2282:30> '<dependent type>' lvalue (no ADL) = 'forward' 0x7ffe44071b80 0x7ffe440720a0
| |   |   |     `-DeclRefExpr 0x7ffe440729a8 <col:32> '_Tp' lvalue ParmVar 0x7ffe44072628 '__t' '_Tp &&'
| |   |   |-AlwaysInlineAttr 0x7ffe44072858 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7ffe440728a0 <col:51, col:74> Hidden
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe44072fb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2299:1, line:2305:1> line:2300:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...)'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7ffe44072a38 <line:2299:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7ffe44072aa8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7ffe44072b18 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7ffe440732d0 <line:2300:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7ffe44073378 <line:2302:5, col:20> col:20 _ClassType '_Class'
| |   | | `-TemplateTypeParmType 0x7ffe44072af0 '_Class' dependent depth 0 index 1
| |   | |   `-TemplateTypeParm 0x7ffe44072aa8 '_Class'
| |   | |-TypedefDecl 0x7ffe440733e0 <line:2303:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7ffe44072a80 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7ffe44072a38 '_Rp'
| |   | `-TypedefDecl 0x7ffe440734d8 <line:2304:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7ffe44072d10 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7ffe44072cd0 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7ffe44072a80 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7ffe44072a38 '_Rp'
| |   |       `-PackExpansionType 0x7ffe44072bf0 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7ffe44072b60 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7ffe44072b18 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe44073ac8 <line:2307:1, line:2313:1> line:2308:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...)'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7ffe44073550 <line:2307:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7ffe440735b8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7ffe44073628 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7ffe44073de0 <line:2308:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7ffe44073e88 <line:2310:5, col:20> col:20 _ClassType '_Class'
| |   | | `-TemplateTypeParmType 0x7ffe44073600 '_Class' dependent depth 0 index 1
| |   | |   `-TemplateTypeParm 0x7ffe440735b8 '_Class'
| |   | |-TypedefDecl 0x7ffe44073ef0 <line:2311:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7ffe44073590 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7ffe44073550 '_Rp'
| |   | `-TypedefDecl 0x7ffe44073fe8 <line:2312:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7ffe44073820 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7ffe440737e0 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7ffe44073590 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7ffe44073550 '_Rp'
| |   |       |-PackExpansionType 0x7ffe44073700 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7ffe44073670 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7ffe44073628 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe440745d8 <line:2315:1, line:2321:1> line:2316:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7ffe44074060 <line:2315:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7ffe440740c8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7ffe44074138 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7ffe44075150 <line:2316:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7ffe440751f8 <line:2318:5, col:26> col:26 _ClassType 'const _Class'
| |   | | `-QualType 0x7ffe44074111 'const _Class' const
| |   | |   `-TemplateTypeParmType 0x7ffe44074110 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7ffe440740c8 '_Class'
| |   | |-TypedefDecl 0x7ffe44075260 <line:2319:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7ffe440740a0 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7ffe44074060 '_Rp'
| |   | `-TypedefDecl 0x7ffe440753c8 <line:2320:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7ffe44075370 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7ffe44075330 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7ffe440740a0 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7ffe44074060 '_Rp'
| |   |       `-PackExpansionType 0x7ffe44074210 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7ffe44074180 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7ffe44074138 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe440759b8 <line:2323:1, line:2329:1> line:2324:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) const'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7ffe44075440 <line:2323:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7ffe440754a8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7ffe44075518 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7ffe44075cd0 <line:2324:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7ffe44075d78 <line:2326:5, col:26> col:26 _ClassType 'const _Class'
| |   | | `-QualType 0x7ffe440754f1 'const _Class' const
| |   | |   `-TemplateTypeParmType 0x7ffe440754f0 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7ffe440754a8 '_Class'
| |   | |-TypedefDecl 0x7ffe44075de0 <line:2327:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7ffe44075480 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7ffe44075440 '_Rp'
| |   | `-TypedefDecl 0x7ffe44075f48 <line:2328:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7ffe44075ef0 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7ffe44075eb0 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7ffe44075480 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7ffe44075440 '_Rp'
| |   |       |-PackExpansionType 0x7ffe440755f0 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7ffe44075560 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7ffe44075518 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe44076538 <line:2331:1, line:2337:1> line:2332:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) volatile'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7ffe44075fc0 <line:2331:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7ffe44076028 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7ffe44076098 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7ffe44076850 <line:2332:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7ffe440768f8 <line:2334:5, col:29> col:29 _ClassType 'volatile _Class'
| |   | | `-QualType 0x7ffe44076074 'volatile _Class' volatile
| |   | |   `-TemplateTypeParmType 0x7ffe44076070 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7ffe44076028 '_Class'
| |   | |-TypedefDecl 0x7ffe44076960 <line:2335:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7ffe44076000 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7ffe44075fc0 '_Rp'
| |   | `-TypedefDecl 0x7ffe44076ac8 <line:2336:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7ffe44076a70 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7ffe44076a30 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7ffe44076000 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7ffe44075fc0 '_Rp'
| |   |       `-PackExpansionType 0x7ffe44076170 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7ffe440760e0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7ffe44076098 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe44077d18 <line:2339:1, line:2345:1> line:2340:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) volatile'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7ffe44076b40 <line:2339:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7ffe44076ba8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7ffe44076c18 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7ffe44078030 <line:2340:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7ffe440780d8 <line:2342:5, col:29> col:29 _ClassType 'volatile _Class'
| |   | | `-QualType 0x7ffe44076bf4 'volatile _Class' volatile
| |   | |   `-TemplateTypeParmType 0x7ffe44076bf0 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7ffe44076ba8 '_Class'
| |   | |-TypedefDecl 0x7ffe44078140 <line:2343:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7ffe44076b80 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7ffe44076b40 '_Rp'
| |   | `-TypedefDecl 0x7ffe440782a8 <line:2344:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7ffe44078250 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7ffe44078210 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7ffe44076b80 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7ffe44076b40 '_Rp'
| |   |       |-PackExpansionType 0x7ffe44076cf0 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7ffe44076c60 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7ffe44076c18 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe44078898 <line:2347:1, line:2353:1> line:2348:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const volatile'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7ffe44078320 <line:2347:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7ffe44078388 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7ffe440783f8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7ffe44078bb0 <line:2348:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7ffe44078c58 <line:2350:5, col:35> col:35 _ClassType 'const volatile _Class'
| |   | | `-QualType 0x7ffe440783d5 'const volatile _Class' const volatile
| |   | |   `-TemplateTypeParmType 0x7ffe440783d0 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7ffe44078388 '_Class'
| |   | |-TypedefDecl 0x7ffe44078cc0 <line:2351:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7ffe44078360 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7ffe44078320 '_Rp'
| |   | `-TypedefDecl 0x7ffe44078e28 <line:2352:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7ffe44078dd0 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7ffe44078d90 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7ffe44078360 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7ffe44078320 '_Rp'
| |   |       `-PackExpansionType 0x7ffe440784d0 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7ffe44078440 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7ffe440783f8 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe44079418 <line:2355:1, line:2361:1> line:2356:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) const volatile'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7ffe44078ea0 <line:2355:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7ffe44078f08 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7ffe44078f78 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7ffe44079730 <line:2356:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7ffe440797d8 <line:2358:5, col:35> col:35 _ClassType 'const volatile _Class'
| |   | | `-QualType 0x7ffe44078f55 'const volatile _Class' const volatile
| |   | |   `-TemplateTypeParmType 0x7ffe44078f50 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7ffe44078f08 '_Class'
| |   | |-TypedefDecl 0x7ffe44079840 <line:2359:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7ffe44078ee0 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7ffe44078ea0 '_Rp'
| |   | `-TypedefDecl 0x7ffe440799a8 <line:2360:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7ffe44079950 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7ffe44079910 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7ffe44078ee0 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7ffe44078ea0 '_Rp'
| |   |       |-PackExpansionType 0x7ffe44079050 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7ffe44078fc0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7ffe44078f78 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe4407ab98 <line:2366:1, line:2372:1> line:2367:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) &'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7ffe44079a20 <line:2366:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7ffe44079a88 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7ffe44079af8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7ffe4407aeb0 <line:2367:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7ffe4407af88 <line:2369:5, col:21> col:21 _ClassType '_Class &'
| |   | | `-LValueReferenceType 0x7ffe4407af50 '_Class &' dependent
| |   | |   `-TemplateTypeParmType 0x7ffe44079ad0 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7ffe44079a88 '_Class'
| |   | |-TypedefDecl 0x7ffe4407aff0 <line:2370:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7ffe44079a60 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7ffe44079a20 '_Rp'
| |   | `-TypedefDecl 0x7ffe4407b158 <line:2371:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7ffe4407b100 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7ffe4407b0c0 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7ffe44079a60 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7ffe44079a20 '_Rp'
| |   |       `-PackExpansionType 0x7ffe44079bd0 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7ffe44079b40 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7ffe44079af8 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe4407b748 <line:2374:1, line:2380:1> line:2375:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) &'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7ffe4407b1d0 <line:2374:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7ffe4407b238 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7ffe4407b2a8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7ffe4407ba60 <line:2375:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7ffe4407bb38 <line:2377:5, col:21> col:21 _ClassType '_Class &'
| |   | | `-LValueReferenceType 0x7ffe4407bb00 '_Class &' dependent
| |   | |   `-TemplateTypeParmType 0x7ffe4407b280 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7ffe4407b238 '_Class'
| |   | |-TypedefDecl 0x7ffe4407bba0 <line:2378:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7ffe4407b210 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7ffe4407b1d0 '_Rp'
| |   | `-TypedefDecl 0x7ffe4407bd08 <line:2379:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7ffe4407bcb0 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7ffe4407bc70 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7ffe4407b210 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7ffe4407b1d0 '_Rp'
| |   |       |-PackExpansionType 0x7ffe4407b380 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7ffe4407b2f0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7ffe4407b2a8 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe4407c2f8 <line:2382:1, line:2388:1> line:2383:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const &'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7ffe4407bd80 <line:2382:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7ffe4407bde8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7ffe4407be58 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7ffe4407c610 <line:2383:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7ffe4407c6e8 <line:2385:5, col:27> col:27 _ClassType 'const _Class &'
| |   | | `-LValueReferenceType 0x7ffe4407c6b0 'const _Class &' dependent
| |   | |   `-QualType 0x7ffe4407be31 'const _Class' const
| |   | |     `-TemplateTypeParmType 0x7ffe4407be30 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7ffe4407bde8 '_Class'
| |   | |-TypedefDecl 0x7ffe4407c750 <line:2386:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7ffe4407bdc0 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7ffe4407bd80 '_Rp'
| |   | `-TypedefDecl 0x7ffe4407d4f8 <line:2387:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7ffe4407d4a0 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7ffe4407d460 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7ffe4407bdc0 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7ffe4407bd80 '_Rp'
| |   |       `-PackExpansionType 0x7ffe4407bf30 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7ffe4407bea0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7ffe4407be58 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe4407dae8 <line:2390:1, line:2396:1> line:2391:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) const &'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7ffe4407d570 <line:2390:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7ffe4407d5d8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7ffe4407d648 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7ffe4407de00 <line:2391:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7ffe4407ded8 <line:2393:5, col:27> col:27 _ClassType 'const _Class &'
| |   | | `-LValueReferenceType 0x7ffe4407dea0 'const _Class &' dependent
| |   | |   `-QualType 0x7ffe4407d621 'const _Class' const
| |   | |     `-TemplateTypeParmType 0x7ffe4407d620 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7ffe4407d5d8 '_Class'
| |   | |-TypedefDecl 0x7ffe4407df40 <line:2394:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7ffe4407d5b0 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7ffe4407d570 '_Rp'
| |   | `-TypedefDecl 0x7ffe4407e0a8 <line:2395:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7ffe4407e050 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7ffe4407e010 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7ffe4407d5b0 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7ffe4407d570 '_Rp'
| |   |       |-PackExpansionType 0x7ffe4407d720 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7ffe4407d690 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7ffe4407d648 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe4407e698 <line:2398:1, line:2404:1> line:2399:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) volatile &'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7ffe4407e120 <line:2398:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7ffe4407e188 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7ffe4407e1f8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7ffe4407e9b0 <line:2399:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7ffe4407ea88 <line:2401:5, col:30> col:30 _ClassType 'volatile _Class &'
| |   | | `-LValueReferenceType 0x7ffe4407ea50 'volatile _Class &' dependent
| |   | |   `-QualType 0x7ffe4407e1d4 'volatile _Class' volatile
| |   | |     `-TemplateTypeParmType 0x7ffe4407e1d0 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7ffe4407e188 '_Class'
| |   | |-TypedefDecl 0x7ffe4407eaf0 <line:2402:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7ffe4407e160 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7ffe4407e120 '_Rp'
| |   | `-TypedefDecl 0x7ffe4407ec58 <line:2403:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7ffe4407ec00 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7ffe4407ebc0 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7ffe4407e160 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7ffe4407e120 '_Rp'
| |   |       `-PackExpansionType 0x7ffe4407e2d0 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7ffe4407e240 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7ffe4407e1f8 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe4407f248 <line:2406:1, line:2412:1> line:2407:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) volatile &'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7ffe4407ecd0 <line:2406:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7ffe4407ed38 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7ffe4407eda8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7ffe4407fd70 <line:2407:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7ffe4407fe48 <line:2409:5, col:30> col:30 _ClassType 'volatile _Class &'
| |   | | `-LValueReferenceType 0x7ffe4407fe10 'volatile _Class &' dependent
| |   | |   `-QualType 0x7ffe4407ed84 'volatile _Class' volatile
| |   | |     `-TemplateTypeParmType 0x7ffe4407ed80 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7ffe4407ed38 '_Class'
| |   | |-TypedefDecl 0x7ffe4407feb0 <line:2410:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7ffe4407ed10 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7ffe4407ecd0 '_Rp'
| |   | `-TypedefDecl 0x7ffe44080018 <line:2411:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7ffe4407ffc0 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7ffe4407ff80 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7ffe4407ed10 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7ffe4407ecd0 '_Rp'
| |   |       |-PackExpansionType 0x7ffe4407ee80 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7ffe4407edf0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7ffe4407eda8 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe44080608 <line:2414:1, line:2420:1> line:2415:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const volatile &'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7ffe44080090 <line:2414:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7ffe440800f8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7ffe44080168 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7ffe44080920 <line:2415:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7ffe440809f8 <line:2417:5, col:36> col:36 _ClassType 'const volatile _Class &'
| |   | | `-LValueReferenceType 0x7ffe440809c0 'const volatile _Class &' dependent
| |   | |   `-QualType 0x7ffe44080145 'const volatile _Class' const volatile
| |   | |     `-TemplateTypeParmType 0x7ffe44080140 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7ffe440800f8 '_Class'
| |   | |-TypedefDecl 0x7ffe44080a60 <line:2418:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7ffe440800d0 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7ffe44080090 '_Rp'
| |   | `-TypedefDecl 0x7ffe44080bc8 <line:2419:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7ffe44080b70 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7ffe44080b30 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7ffe440800d0 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7ffe44080090 '_Rp'
| |   |       `-PackExpansionType 0x7ffe44080240 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7ffe440801b0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7ffe44080168 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe440811b8 <line:2422:1, line:2428:1> line:2423:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) const volatile &'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7ffe44080c40 <line:2422:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7ffe44080ca8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7ffe44080d18 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7ffe440814d0 <line:2423:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7ffe440815a8 <line:2425:5, col:36> col:36 _ClassType 'const volatile _Class &'
| |   | | `-LValueReferenceType 0x7ffe44081570 'const volatile _Class &' dependent
| |   | |   `-QualType 0x7ffe44080cf5 'const volatile _Class' const volatile
| |   | |     `-TemplateTypeParmType 0x7ffe44080cf0 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7ffe44080ca8 '_Class'
| |   | |-TypedefDecl 0x7ffe44081610 <line:2426:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7ffe44080c80 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7ffe44080c40 '_Rp'
| |   | `-TypedefDecl 0x7ffe44081778 <line:2427:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7ffe44081720 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7ffe440816e0 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7ffe44080c80 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7ffe44080c40 '_Rp'
| |   |       |-PackExpansionType 0x7ffe44080df0 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7ffe44080d60 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7ffe44080d18 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe44083398 <line:2430:1, line:2436:1> line:2431:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) &&'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7ffe440817f0 <line:2430:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7ffe44081858 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7ffe440818c8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7ffe440836b0 <line:2431:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7ffe440837b8 <line:2433:5, col:22> col:22 _ClassType '_Class &&'
| |   | | `-RValueReferenceType 0x7ffe44083780 '_Class &&' dependent
| |   | |   `-TemplateTypeParmType 0x7ffe440818a0 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7ffe44081858 '_Class'
| |   | |-TypedefDecl 0x7ffe44083820 <line:2434:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7ffe44081830 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7ffe440817f0 '_Rp'
| |   | `-TypedefDecl 0x7ffe44083988 <line:2435:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7ffe44083930 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7ffe440838f0 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7ffe44081830 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7ffe440817f0 '_Rp'
| |   |       `-PackExpansionType 0x7ffe440819a0 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7ffe44081910 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7ffe440818c8 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe44083f78 <line:2438:1, line:2444:1> line:2439:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) &&'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7ffe44083a00 <line:2438:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7ffe44083a68 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7ffe44083ad8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7ffe44084290 <line:2439:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7ffe44084368 <line:2441:5, col:22> col:22 _ClassType '_Class &&'
| |   | | `-RValueReferenceType 0x7ffe44084330 '_Class &&' dependent
| |   | |   `-TemplateTypeParmType 0x7ffe44083ab0 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7ffe44083a68 '_Class'
| |   | |-TypedefDecl 0x7ffe440843d0 <line:2442:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7ffe44083a40 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7ffe44083a00 '_Rp'
| |   | `-TypedefDecl 0x7ffe44084538 <line:2443:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7ffe440844e0 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7ffe440844a0 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7ffe44083a40 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7ffe44083a00 '_Rp'
| |   |       |-PackExpansionType 0x7ffe44083bb0 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7ffe44083b20 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7ffe44083ad8 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe44084b28 <line:2446:1, line:2452:1> line:2447:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const &&'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7ffe440845b0 <line:2446:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7ffe44084618 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7ffe44084688 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7ffe44084e40 <line:2447:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7ffe44084f48 <line:2449:5, col:28> col:28 _ClassType 'const _Class &&'
| |   | | `-RValueReferenceType 0x7ffe44084f10 'const _Class &&' dependent
| |   | |   `-QualType 0x7ffe44084661 'const _Class' const
| |   | |     `-TemplateTypeParmType 0x7ffe44084660 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7ffe44084618 '_Class'
| |   | |-TypedefDecl 0x7ffe44084fb0 <line:2450:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7ffe440845f0 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7ffe440845b0 '_Rp'
| |   | `-TypedefDecl 0x7ffe44085118 <line:2451:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7ffe440850c0 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7ffe44085080 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7ffe440845f0 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7ffe440845b0 '_Rp'
| |   |       `-PackExpansionType 0x7ffe44084760 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7ffe440846d0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7ffe44084688 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe44086308 <line:2454:1, line:2460:1> line:2455:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) const &&'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7ffe44085190 <line:2454:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7ffe44085e00 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7ffe44085e68 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7ffe44086620 <line:2455:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7ffe440866f8 <line:2457:5, col:28> col:28 _ClassType 'const _Class &&'
| |   | | `-RValueReferenceType 0x7ffe440866c0 'const _Class &&' dependent
| |   | |   `-QualType 0x7ffe44085e41 'const _Class' const
| |   | |     `-TemplateTypeParmType 0x7ffe44085e40 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7ffe44085e00 '_Class'
| |   | |-TypedefDecl 0x7ffe44086760 <line:2458:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7ffe440851d0 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7ffe44085190 '_Rp'
| |   | `-TypedefDecl 0x7ffe440868c8 <line:2459:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7ffe44086870 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7ffe44086830 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7ffe440851d0 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7ffe44085190 '_Rp'
| |   |       |-PackExpansionType 0x7ffe44085f40 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7ffe44085eb0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7ffe44085e68 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe44086eb8 <line:2462:1, line:2468:1> line:2463:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) volatile &&'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7ffe44086940 <line:2462:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7ffe440869a8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7ffe44086a18 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7ffe440871d0 <line:2463:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7ffe440872d8 <line:2465:5, col:31> col:31 _ClassType 'volatile _Class &&'
| |   | | `-RValueReferenceType 0x7ffe440872a0 'volatile _Class &&' dependent
| |   | |   `-QualType 0x7ffe440869f4 'volatile _Class' volatile
| |   | |     `-TemplateTypeParmType 0x7ffe440869f0 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7ffe440869a8 '_Class'
| |   | |-TypedefDecl 0x7ffe44087340 <line:2466:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7ffe44086980 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7ffe44086940 '_Rp'
| |   | `-TypedefDecl 0x7ffe440874a8 <line:2467:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7ffe44087450 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7ffe44087410 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7ffe44086980 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7ffe44086940 '_Rp'
| |   |       `-PackExpansionType 0x7ffe44086af0 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7ffe44086a60 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7ffe44086a18 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe44087a98 <line:2470:1, line:2476:1> line:2471:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) volatile &&'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7ffe44087520 <line:2470:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7ffe44087588 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7ffe440875f8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7ffe44088600 <line:2471:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7ffe440886d8 <line:2473:5, col:31> col:31 _ClassType 'volatile _Class &&'
| |   | | `-RValueReferenceType 0x7ffe440886a0 'volatile _Class &&' dependent
| |   | |   `-QualType 0x7ffe440875d4 'volatile _Class' volatile
| |   | |     `-TemplateTypeParmType 0x7ffe440875d0 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7ffe44087588 '_Class'
| |   | |-TypedefDecl 0x7ffe44088740 <line:2474:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7ffe44087560 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7ffe44087520 '_Rp'
| |   | `-TypedefDecl 0x7ffe440888a8 <line:2475:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7ffe44088850 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7ffe44088810 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7ffe44087560 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7ffe44087520 '_Rp'
| |   |       |-PackExpansionType 0x7ffe440876d0 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7ffe44087640 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7ffe440875f8 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe44088e98 <line:2478:1, line:2484:1> line:2479:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const volatile &&'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7ffe44088920 <line:2478:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7ffe44088988 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7ffe440889f8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7ffe440891b0 <line:2479:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7ffe440892b8 <line:2481:5, col:37> col:37 _ClassType 'const volatile _Class &&'
| |   | | `-RValueReferenceType 0x7ffe44089280 'const volatile _Class &&' dependent
| |   | |   `-QualType 0x7ffe440889d5 'const volatile _Class' const volatile
| |   | |     `-TemplateTypeParmType 0x7ffe440889d0 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7ffe44088988 '_Class'
| |   | |-TypedefDecl 0x7ffe44089320 <line:2482:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7ffe44088960 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7ffe44088920 '_Rp'
| |   | `-TypedefDecl 0x7ffe44089488 <line:2483:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7ffe44089430 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7ffe440893f0 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7ffe44088960 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7ffe44088920 '_Rp'
| |   |       `-PackExpansionType 0x7ffe44088ad0 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7ffe44088a40 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7ffe440889f8 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe44089a78 <line:2486:1, line:2492:1> line:2487:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) const volatile &&'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7ffe44089500 <line:2486:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7ffe44089568 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7ffe440895d8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7ffe44089d90 <line:2487:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7ffe44089e68 <line:2489:5, col:37> col:37 _ClassType 'const volatile _Class &&'
| |   | | `-RValueReferenceType 0x7ffe44089e30 'const volatile _Class &&' dependent
| |   | |   `-QualType 0x7ffe440895b5 'const volatile _Class' const volatile
| |   | |     `-TemplateTypeParmType 0x7ffe440895b0 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7ffe44089568 '_Class'
| |   | |-TypedefDecl 0x7ffe44089ed0 <line:2490:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7ffe44089540 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7ffe44089500 '_Rp'
| |   | `-TypedefDecl 0x7ffe4408a038 <line:2491:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7ffe44089fe0 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7ffe44089fa0 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7ffe44089540 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7ffe44089500 '_Rp'
| |   |       |-PackExpansionType 0x7ffe440896b0 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7ffe44089620 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7ffe440895d8 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe4408a408 <line:2756:1, line:2761:1> line:2757:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 type-parameter-0-1::*'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7ffe4408a0b0 <line:2756:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7ffe4408a118 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-CXXRecordDecl 0x7ffe4408b350 <line:2757:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7ffe4408b3f8 <line:2759:5, col:20> col:20 _ClassType '_Class'
| |   | | `-TemplateTypeParmType 0x7ffe4408a160 '_Class' dependent depth 0 index 1
| |   | |   `-TemplateTypeParm 0x7ffe4408a118 '_Class'
| |   | `-TypedefDecl 0x7ffe4408b460 <line:2760:5, col:17> col:17 _ReturnType '_Rp'
| |   |   `-TemplateTypeParmType 0x7ffe4408a0f0 '_Rp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7ffe4408a0b0 '_Rp'
| |   |-ClassTemplateDecl 0x7ffe4408b5f8 <line:2763:1, line:2772:1> line:2764:8 __member_pointer_traits
| |   | |-TemplateTypeParmDecl 0x7ffe4408b4d8 <line:2763:11, col:17> col:17 referenced class depth 0 index 0 _MP
| |   | `-CXXRecordDecl 0x7ffe4408b560 <line:2764:1, line:2772:1> line:2764:8 struct __member_pointer_traits definition
| |   |   |-public '__member_pointer_traits_imp<typename remove_cv<_MP>::type, is_member_function_pointer<_MP>::value, is_member_object_pointer<_MP>::value>'
| |   |   `-CXXRecordDecl 0x7ffe4408bd78 <col:1, col:8> col:8 implicit struct __member_pointer_traits
| |   |-ClassTemplateDecl 0x7ffe4408bf48 <line:2775:1, line:2776:37> col:8 __member_pointer_class_type
| |   | |-TemplateTypeParmDecl 0x7ffe4408be30 <line:2775:11, col:17> col:17 class depth 0 index 0 _DecayedFp
| |   | `-CXXRecordDecl 0x7ffe4408beb0 <line:2776:1, col:37> col:8 struct __member_pointer_class_type definition
| |   |   `-CXXRecordDecl 0x7ffe4408c1c0 <col:1, col:8> col:8 implicit struct __member_pointer_class_type
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe4408c4e8 <line:2778:1, line:2781:1> line:2779:8 struct __member_pointer_class_type definition
| |   | |-TemplateArgument type 'type-parameter-0-0 type-parameter-0-1::*'
| |   | |-TemplateTypeParmDecl 0x7ffe4408c278 <line:2778:11, col:17> col:17 referenced class depth 0 index 0 _Ret
| |   | |-TemplateTypeParmDecl 0x7ffe4408c2e8 <col:23, col:29> col:29 referenced class depth 0 index 1 _ClassType
| |   | |-CXXRecordDecl 0x7ffe4408c730 <line:2779:1, col:8> col:8 implicit struct __member_pointer_class_type
| |   | `-TypedefDecl 0x7ffe4408c7d8 <line:2780:3, col:22> col:22 type '_ClassType'
| |   |   `-TemplateTypeParmType 0x7ffe4408c330 '_ClassType' dependent depth 0 index 1
| |   |     `-TemplateTypeParm 0x7ffe4408c2e8 '_ClassType'
| |   |-ClassTemplateDecl 0x7ffe4408c968 <line:2785:1, col:34> col:34 result_of
| |   | |-TemplateTypeParmDecl 0x7ffe4408c850 <col:11, col:17> col:17 class depth 0 index 0 _Callable
| |   | `-CXXRecordDecl 0x7ffe4408c8d0 <col:28, col:34> col:34 class result_of
| |   |-NamespaceDecl 0x7ffe4408cb78 <line:2937:1, line:2940:1> line:2937:11 __is_construct
| |   | `-CXXRecordDecl 0x7ffe4408cbe0 <line:2939:1, col:15> col:8 struct __nat definition
| |   |   `-CXXRecordDecl 0x7ffe4408cd08 <col:1, col:8> col:8 implicit struct __nat
| |   |-ClassTemplateDecl 0x7ffe4408cf80 <line:3059:1, line:3062:6> line:3060:29 is_constructible
| |   | |-TemplateTypeParmDecl 0x7ffe4408cdc0 <line:3059:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7ffe4408ce28 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | `-CXXRecordDecl 0x7ffe4408cee8 <line:3060:1, line:3062:6> line:3060:29 struct is_constructible definition
| |   |   |-public 'integral_constant<_Bool, __is_constructible(_Tp, _Args...)>'
| |   |   |-TypeVisibilityAttr 0x7ffe4408d690 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7ffe4408d898 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3060:1, col:29> col:29 implicit struct is_constructible
| |   |-ClassTemplateDecl 0x7ffe4408da98 <line:3250:1, line:3253:6> line:3251:29 is_default_constructible
| |   | |-TemplateTypeParmDecl 0x7ffe4408d950 <line:3250:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe4408da00 <line:3251:1, line:3253:6> line:3251:29 struct is_default_constructible definition
| |   |   |-public 'is_constructible<_Tp>'
| |   |   |-TypeVisibilityAttr 0x7ffe4408dd10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7ffe4408de78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3251:1, col:29> col:29 implicit struct is_default_constructible
| |   |-ClassTemplateDecl 0x7ffe4408e078 <line:3262:1, line:3265:88> line:3263:29 is_copy_constructible
| |   | |-TemplateTypeParmDecl 0x7ffe4408df30 <line:3262:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe4408dfe0 <line:3263:1, line:3265:88> line:3263:29 struct is_copy_constructible definition
| |   |   |-public 'is_constructible<_Tp, typename add_lvalue_reference<typename add_const<_Tp>::type>::type>'
| |   |   |-TypeVisibilityAttr 0x7ffe4408e2f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7ffe4408e6e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3263:1, col:29> col:29 implicit struct is_copy_constructible
| |   |-ClassTemplateDecl 0x7ffe4408e8e8 <line:3274:1, line:3281:6> line:3275:29 is_move_constructible
| |   | |-TemplateTypeParmDecl 0x7ffe4408e7a0 <line:3274:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe4408e850 <line:3275:1, line:3281:6> line:3275:29 struct is_move_constructible definition
| |   |   |-public 'is_constructible<_Tp, typename add_rvalue_reference<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7ffe4408eb60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7ffe4408ee48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3275:1, col:29> col:29 implicit struct is_move_constructible
| |   |-ClassTemplateDecl 0x7ffe4408f0c0 <line:3294:1, line:3298:1> line:3295:29 is_trivially_constructible
| |   | |-TemplateTypeParmDecl 0x7ffe4408ef00 <line:3294:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7ffe4408ef68 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | `-CXXRecordDecl 0x7ffe4408f028 <line:3295:1, line:3298:1> line:3295:29 struct is_trivially_constructible definition
| |   |   |-public 'integral_constant<_Bool, __is_trivially_constructible(_Tp, _Args...)>'
| |   |   |-TypeVisibilityAttr 0x7ffe4408f3c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7ffe44093600 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3295:1, col:29> col:29 implicit struct is_trivially_constructible
| |   |-ClassTemplateDecl 0x7ffe44093808 <line:3422:1, line:3424:6> line:3422:50 is_trivially_default_constructible
| |   | |-TemplateTypeParmDecl 0x7ffe440936b8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe44093770 <col:22, line:3424:6> line:3422:50 struct is_trivially_default_constructible definition
| |   |   |-public 'is_trivially_constructible<_Tp>'
| |   |   |-TypeVisibilityAttr 0x7ffe44093a80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7ffe44093be8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3422:22, col:50> col:50 implicit struct is_trivially_default_constructible
| |   |-ClassTemplateDecl 0x7ffe44093de8 <line:3433:1, line:3435:6> line:3433:50 is_trivially_copy_constructible
| |   | |-TemplateTypeParmDecl 0x7ffe44093ca0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe44093d50 <col:22, line:3435:6> line:3433:50 struct is_trivially_copy_constructible definition
| |   |   |-public 'is_trivially_constructible<_Tp, typename add_lvalue_reference<const _Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7ffe44094060 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7ffe440943d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3433:22, col:50> col:50 implicit struct is_trivially_copy_constructible
| |   |-ClassTemplateDecl 0x7ffe440945d8 <line:3444:1, line:3450:6> line:3444:50 is_trivially_move_constructible
| |   | |-TemplateTypeParmDecl 0x7ffe44094490 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe44094540 <col:22, line:3450:6> line:3444:50 struct is_trivially_move_constructible definition
| |   |   |-public 'is_trivially_constructible<_Tp, typename add_rvalue_reference<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7ffe44094850 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7ffe44094b38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3444:22, col:50> col:50 implicit struct is_trivially_move_constructible
| |   |-ClassTemplateDecl 0x7ffe44094d80 <line:3461:1, line:3465:1> line:3462:8 is_trivially_assignable
| |   | |-TemplateTypeParmDecl 0x7ffe44094bf0 <line:3461:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7ffe44094c58 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | `-CXXRecordDecl 0x7ffe44094ce8 <line:3462:1, line:3465:1> line:3462:8 struct is_trivially_assignable definition
| |   |   |-public 'integral_constant<_Bool, __is_trivially_assignable(_Tp, _Arg)>'
| |   |   `-CXXRecordDecl 0x7ffe440951d8 <col:1, col:8> col:8 implicit struct is_trivially_assignable
| |   |-ClassTemplateDecl 0x7ffe440953d8 <line:3502:1, line:3504:88> line:3502:50 is_trivially_copy_assignable
| |   | |-TemplateTypeParmDecl 0x7ffe44095290 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe44095340 <col:22, line:3504:88> line:3502:50 struct is_trivially_copy_assignable definition
| |   |   |-public 'is_trivially_assignable<typename add_lvalue_reference<_Tp>::type, typename add_lvalue_reference<typename add_const<_Tp>::type>::type>'
| |   |   |-TypeVisibilityAttr 0x7ffe44097868 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7ffe44097d38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3502:22, col:50> col:50 implicit struct is_trivially_copy_assignable
| |   |-ClassTemplateDecl 0x7ffe44097f38 <line:3513:1, line:3520:6> line:3513:50 is_trivially_move_assignable
| |   | |-TemplateTypeParmDecl 0x7ffe44097df0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe44097ea0 <col:22, line:3520:6> line:3513:50 struct is_trivially_move_assignable definition
| |   |   |-public 'is_trivially_assignable<typename add_lvalue_reference<_Tp>::type, typename add_rvalue_reference<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7ffe440981b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7ffe44098578 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3513:22, col:50> col:50 implicit struct is_trivially_move_assignable
| |   |-ClassTemplateDecl 0x7ffe44098778 <line:3531:1, line:3532:101> line:3531:50 is_trivially_destructible
| |   | |-TemplateTypeParmDecl 0x7ffe44098630 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe440986e0 <col:22, line:3532:101> line:3531:50 struct is_trivially_destructible definition
| |   |   |-public 'integral_constant<_Bool, is_destructible<_Tp>::value && __has_trivial_destructor(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7ffe440989f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7ffe44098d38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3531:22, col:50> col:50 implicit struct is_trivially_destructible
| |   |-ClassTemplateDecl 0x7ffe44099060 <line:3568:1, col:57> col:57 __libcpp_is_nothrow_constructible
| |   | |-NonTypeTemplateParmDecl 0x7ffe44098e00 <col:11> col:15 '_Bool' depth 0 index 0
| |   | |-NonTypeTemplateParmDecl 0x7ffe44098e68 <col:17> col:21 '_Bool' depth 0 index 1
| |   | |-TemplateTypeParmDecl 0x7ffe44098ec0 <col:23, col:29> col:29 class depth 0 index 2 _Tp
| |   | |-TemplateTypeParmDecl 0x7ffe44098f28 <col:34, col:43> col:43 class depth 0 index 3 ... _Args
| |   | `-CXXRecordDecl 0x7ffe44098fc8 <col:50, col:57> col:57 struct __libcpp_is_nothrow_constructible
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe44099800 <line:3570:1, line:3574:1> line:3571:8 struct __libcpp_is_nothrow_constructible definition
| |   | |-public 'integral_constant<_Bool, noexcept(_Tp(declval<_Args>()...))>'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-1...'
| |   | |-TemplateTypeParmDecl 0x7ffe440993a8 <line:3570:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7ffe44099418 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | `-CXXRecordDecl 0x7ffe44099e48 <line:3571:1, col:8> col:8 implicit struct __libcpp_is_nothrow_constructible
| |   |-FunctionTemplateDecl 0x7ffe4409a130 <line:3576:1, line:3577:47> col:6 __implicit_conversion_to
| |   | |-TemplateTypeParmDecl 0x7ffe44099f00 <line:3576:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7ffe4409a098 <line:3577:1, col:47> col:6 __implicit_conversion_to 'void (_Tp) noexcept'
| |   |   |-ParmVarDecl 0x7ffe44099f90 <col:31> col:34 '_Tp'
| |   |   `-CompoundStmt 0x7ffe4409a188 <col:45, col:47>
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe4409a510 <line:3579:1, line:3583:1> line:3580:8 struct __libcpp_is_nothrow_constructible definition
| |   | |-public 'integral_constant<_Bool, noexcept(__implicit_conversion_to<_Tp>(declval<_Arg>()))>'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateTypeParmDecl 0x7ffe4409a1a0 <line:3579:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7ffe4409a208 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | `-CXXRecordDecl 0x7ffe4409abc8 <line:3580:1, col:8> col:8 implicit struct __libcpp_is_nothrow_constructible
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe4409b0a0 <line:3585:1, line:3589:1> line:3586:8 struct __libcpp_is_nothrow_constructible definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7ffe4409adf8 <col:69> '_Bool' NonTypeTemplateParm 0x7ffe4409acf8 '_IsReference' '_Bool'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-2...'
| |   | |-TemplateTypeParmDecl 0x7ffe4409ac80 <line:3585:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7ffe4409acf8 <col:22, col:27> col:27 referenced '_Bool' depth 0 index 1 _IsReference
| |   | |-TemplateTypeParmDecl 0x7ffe4409ad50 <col:41, col:50> col:50 referenced class depth 0 index 2 ... _Args
| |   | `-CXXRecordDecl 0x7ffe4409b440 <line:3586:1, col:8> col:8 implicit struct __libcpp_is_nothrow_constructible
| |   |-ClassTemplateDecl 0x7ffe4409b6c0 <line:3591:1, line:3595:1> line:3592:29 is_nothrow_constructible
| |   | |-TemplateTypeParmDecl 0x7ffe4409b4f8 <line:3591:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7ffe4409b568 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | `-CXXRecordDecl 0x7ffe4409b628 <line:3592:1, line:3595:1> line:3592:29 struct is_nothrow_constructible definition
| |   |   |-public '__libcpp_is_nothrow_constructible<is_constructible<_Tp, _Args...>::value, is_reference<_Tp>::value, _Tp, _Args...>'
| |   |   |-TypeVisibilityAttr 0x7ffe4409bab0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7ffe4409c008 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3592:1, col:29> col:29 implicit struct is_nothrow_constructible
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe4409c370 <line:3597:1, line:3601:1> line:3598:29 struct is_nothrow_constructible definition
| |   | |-public '__libcpp_is_nothrow_constructible<is_constructible<_Tp>::value, is_reference<_Tp>::value, _Tp>'
| |   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
| |   | |-TemplateArgument pack
| |   | |-TemplateTypeParmDecl 0x7ffe4409c0c0 <line:3597:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7ffe4409c138 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Ns
| |   | |-TypeVisibilityAttr 0x7ffe4409c4d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7ffe4409ca18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3598:1, col:29> col:29 implicit struct is_nothrow_constructible
| |   |-ClassTemplateDecl 0x7ffe4409cc18 <line:3720:1, line:3722:6> line:3720:50 is_nothrow_default_constructible
| |   | |-TemplateTypeParmDecl 0x7ffe4409cad0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe4409cb80 <col:22, line:3722:6> line:3720:50 struct is_nothrow_default_constructible definition
| |   |   |-public 'is_nothrow_constructible<_Tp>'
| |   |   |-TypeVisibilityAttr 0x7ffe4409ce90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7ffe4409cff8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3720:22, col:50> col:50 implicit struct is_nothrow_default_constructible
| |   |-ClassTemplateDecl 0x7ffe4409d1f8 <line:3731:1, line:3733:88> line:3731:50 is_nothrow_copy_constructible
| |   | |-TemplateTypeParmDecl 0x7ffe4409d0b0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe4409d160 <col:22, line:3733:88> line:3731:50 struct is_nothrow_copy_constructible definition
| |   |   |-public 'is_nothrow_constructible<_Tp, typename add_lvalue_reference<typename add_const<_Tp>::type>::type>'
| |   |   |-TypeVisibilityAttr 0x7ffe4409d470 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7ffe4409f878 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3731:22, col:50> col:50 implicit struct is_nothrow_copy_constructible
| |   |-ClassTemplateDecl 0x7ffe4409fa78 <line:3742:1, line:3748:6> line:3742:50 is_nothrow_move_constructible
| |   | |-TemplateTypeParmDecl 0x7ffe4409f930 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe4409f9e0 <col:22, line:3748:6> line:3742:50 struct is_nothrow_move_constructible definition
| |   |   |-public 'is_nothrow_constructible<_Tp, typename add_rvalue_reference<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7ffe4409fcf0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7ffe4409ffd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3742:22, col:50> col:50 implicit struct is_nothrow_move_constructible
| |   |-ClassTemplateDecl 0x7ffe440a0298 <line:3759:1, col:47> col:47 __libcpp_is_nothrow_assignable
| |   | |-NonTypeTemplateParmDecl 0x7ffe440a00a0 <col:11> col:15 '_Bool' depth 0 index 0
| |   | |-TemplateTypeParmDecl 0x7ffe440a00f8 <col:17, col:23> col:23 class depth 0 index 1 _Tp
| |   | |-TemplateTypeParmDecl 0x7ffe440a0168 <col:28, col:34> col:34 class depth 0 index 2 _Arg
| |   | `-CXXRecordDecl 0x7ffe440a0200 <col:40, col:47> col:47 struct __libcpp_is_nothrow_assignable
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe440a0808 <line:3761:1, line:3765:1> line:3762:8 struct __libcpp_is_nothrow_assignable definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateTypeParmDecl 0x7ffe440a0538 <line:3761:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7ffe440a05a8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | `-CXXRecordDecl 0x7ffe440a0b30 <line:3762:1, col:8> col:8 implicit struct __libcpp_is_nothrow_assignable
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe440a0eb8 <line:3767:1, line:3771:1> line:3768:8 struct __libcpp_is_nothrow_assignable definition
| |   | |-public 'integral_constant<_Bool, noexcept(std::__1::declval<_Tp>() = std::__1::declval<_Arg>())>'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateTypeParmDecl 0x7ffe440a0be8 <line:3767:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7ffe440a0c58 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | `-CXXRecordDecl 0x7ffe440a1558 <line:3768:1, col:8> col:8 implicit struct __libcpp_is_nothrow_assignable
| |   |-ClassTemplateDecl 0x7ffe440a4800 <line:3773:1, line:3777:1> line:3774:29 is_nothrow_assignable
| |   | |-TemplateTypeParmDecl 0x7ffe440a1610 <line:3773:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7ffe440a1678 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | `-CXXRecordDecl 0x7ffe440a1738 <line:3774:1, line:3777:1> line:3774:29 struct is_nothrow_assignable definition
| |   |   |-public '__libcpp_is_nothrow_assignable<is_assignable<_Tp, _Arg>::value, _Tp, _Arg>'
| |   |   |-TypeVisibilityAttr 0x7ffe440a4aa0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7ffe440a4e18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3774:1, col:29> col:29 implicit struct is_nothrow_assignable
| |   |-ClassTemplateDecl 0x7ffe440a5018 <line:3830:1, line:3832:88> line:3830:50 is_nothrow_copy_assignable
| |   | |-TemplateTypeParmDecl 0x7ffe440a4ed0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe440a4f80 <col:22, line:3832:88> line:3830:50 struct is_nothrow_copy_assignable definition
| |   |   |-public 'is_nothrow_assignable<typename add_lvalue_reference<_Tp>::type, typename add_lvalue_reference<typename add_const<_Tp>::type>::type>'
| |   |   |-TypeVisibilityAttr 0x7ffe440a5290 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7ffe440a5768 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3830:22, col:50> col:50 implicit struct is_nothrow_copy_assignable
| |   |-ClassTemplateDecl 0x7ffe440a5968 <line:3841:1, line:3848:6> line:3841:50 is_nothrow_move_assignable
| |   | |-TemplateTypeParmDecl 0x7ffe440a5820 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe440a58d0 <col:22, line:3848:6> line:3841:50 struct is_nothrow_move_assignable definition
| |   |   |-public 'is_nothrow_assignable<typename add_lvalue_reference<_Tp>::type, typename add_rvalue_reference<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7ffe440a5be0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7ffe440a5fa8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3841:22, col:50> col:50 implicit struct is_nothrow_move_assignable
| |   |-ClassTemplateDecl 0x7ffe440a61f0 <line:3859:1, col:35> col:35 __libcpp_is_nothrow_destructible
| |   | |-NonTypeTemplateParmDecl 0x7ffe440a6070 <col:11> col:15 '_Bool' depth 0 index 0
| |   | |-TemplateTypeParmDecl 0x7ffe440a60c8 <col:17, col:23> col:23 class depth 0 index 1 _Tp
| |   | `-CXXRecordDecl 0x7ffe440a6158 <col:28, col:35> col:35 struct __libcpp_is_nothrow_destructible
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe440a6630 <line:3861:1, line:3865:1> line:3862:8 struct __libcpp_is_nothrow_destructible definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7ffe440a6448 <line:3861:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe440a6900 <line:3862:1, col:8> col:8 implicit struct __libcpp_is_nothrow_destructible
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe440a6ba0 <line:3867:1, line:3871:1> line:3868:8 struct __libcpp_is_nothrow_destructible definition
| |   | |-public 'integral_constant<_Bool, noexcept(std::__1::declval<_Tp>().~_Tp())>'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7ffe440a69b8 <line:3867:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe440a7148 <line:3868:1, col:8> col:8 implicit struct __libcpp_is_nothrow_destructible
| |   |-ClassTemplateDecl 0x7ffe440a7348 <line:3873:1, line:3877:1> line:3874:29 is_nothrow_destructible
| |   | |-TemplateTypeParmDecl 0x7ffe440a7200 <line:3873:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe440a72b0 <line:3874:1, line:3877:1> line:3874:29 struct is_nothrow_destructible definition
| |   |   |-public '__libcpp_is_nothrow_destructible<is_destructible<_Tp>::value, _Tp>'
| |   |   |-TypeVisibilityAttr 0x7ffe440a75c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7ffe440a7878 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3874:1, col:29> col:29 implicit struct is_nothrow_destructible
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe440a7bb8 <line:3879:1, line:3883:1> line:3880:29 struct is_nothrow_destructible definition
| |   | |-public 'is_nothrow_destructible<_Tp>'
| |   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
| |   | |-TemplateTypeParmDecl 0x7ffe440a7930 <line:3879:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7ffe440a79a8 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Ns
| |   | |-TypeVisibilityAttr 0x7ffe440a7d08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7ffe440a7ef8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3880:1, col:29> col:29 implicit struct is_nothrow_destructible
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe440a8178 <line:3885:1, line:3889:1> line:3886:29 struct is_nothrow_destructible definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateTypeParmDecl 0x7ffe440a7fb0 <line:3885:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7ffe440a82b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7ffe440a8430 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3886:1, col:29> col:29 implicit struct is_nothrow_destructible
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe440a86b8 <line:3893:1, line:3897:1> line:3894:29 struct is_nothrow_destructible definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 &&'
| |   | |-TemplateTypeParmDecl 0x7ffe440a84e8 <line:3893:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7ffe440a8800 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7ffe440a8980 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3894:1, col:29> col:29 implicit struct is_nothrow_destructible
| |   |-ClassTemplateDecl 0x7ffe440a8b88 <line:3925:1, line:3926:54> line:3925:50 is_pod
| |   | |-TemplateTypeParmDecl 0x7ffe440a8a38 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe440a8af0 <col:22, line:3926:54> line:3925:50 struct is_pod definition
| |   |   |-public 'integral_constant<_Bool, __is_pod(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7ffe440a8e00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7ffe440a8fe8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3925:22, col:50> col:50 implicit struct is_pod
| |   |-ClassTemplateDecl 0x7ffe440a91e8 <line:3945:1, line:3952:6> line:3945:50 is_literal_type
| |   | |-TemplateTypeParmDecl 0x7ffe440a90a0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe440a9150 <col:22, line:3952:6> line:3945:50 struct is_literal_type definition
| |   |   |-public 'integral_constant<_Bool, __is_literal(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7ffe440a9460 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7ffe440a9648 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3945:22, col:50> col:50 implicit struct is_literal_type
| |   |-ClassTemplateDecl 0x7ffe440a9848 <line:3961:1, line:3967:6> line:3961:50 is_standard_layout
| |   | |-TemplateTypeParmDecl 0x7ffe440a9700 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe440a97b0 <col:22, line:3967:6> line:3961:50 struct is_standard_layout definition
| |   |   |-public 'integral_constant<_Bool, __is_standard_layout(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7ffe440a9ac0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7ffe440a9ca8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3961:22, col:50> col:50 implicit struct is_standard_layout
| |   |-ClassTemplateDecl 0x7ffe440a9ea8 <line:3976:1, line:3984:6> line:3976:50 is_trivially_copyable
| |   | |-TemplateTypeParmDecl 0x7ffe440a9d60 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe440a9e10 <col:22, line:3984:6> line:3976:50 struct is_trivially_copyable definition
| |   |   |-public 'integral_constant<_Bool, __is_trivially_copyable(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7ffe440aa120 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7ffe440aa308 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3976:22, col:50> col:50 implicit struct is_trivially_copyable
| |   |-ClassTemplateDecl 0x7ffe440aa508 <line:3993:1, line:4000:6> line:3993:50 is_trivial
| |   | |-TemplateTypeParmDecl 0x7ffe440aa3c0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe440aa470 <col:22, line:4000:6> line:3993:50 struct is_trivial definition
| |   |   |-public 'integral_constant<_Bool, __is_trivial(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7ffe440aa780 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7ffe440ac978 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3993:22, col:50> col:50 implicit struct is_trivial
| |   |-ClassTemplateDecl 0x7ffe440acb48 <line:4007:1, col:78> col:29 __is_reference_wrapper_impl
| |   | |-TemplateTypeParmDecl 0x7ffe440aca30 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe440acab0 <col:22, col:78> col:29 struct __is_reference_wrapper_impl definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   `-CXXRecordDecl 0x7ffe440ace00 <col:22, col:29> col:29 implicit struct __is_reference_wrapper_impl
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe440ad0d8 <line:4008:1, col:102> col:29 struct __is_reference_wrapper_impl definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'reference_wrapper<type-parameter-0-0>'
| |   | |-TemplateTypeParmDecl 0x7ffe440aceb8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe440ad380 <col:22, col:29> col:29 implicit struct __is_reference_wrapper_impl
| |   |-ClassTemplateDecl 0x7ffe440ad558 <line:4009:1, line:4010:74> line:4009:29 __is_reference_wrapper
| |   | |-TemplateTypeParmDecl 0x7ffe440ad438 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe440ad4c0 <col:22, line:4010:74> line:4009:29 struct __is_reference_wrapper definition
| |   |   |-public '__is_reference_wrapper_impl<typename remove_cv<_Tp>::type>'
| |   |   `-CXXRecordDecl 0x7ffe440ad9e8 <col:22, col:29> col:29 implicit struct __is_reference_wrapper
| |   |-ClassTemplateDecl 0x7ffe440adbb8 <line:4016:1, col:32> col:32 __check_complete
| |   | |-TemplateTypeParmDecl 0x7ffe440adaa0 <col:11, col:20> col:20 class depth 0 index 0 ... _Tp
| |   | |-CXXRecordDecl 0x7ffe440adb20 <col:25, col:32> col:32 struct __check_complete
| |   | `-ClassTemplateSpecialization 0x7ffe440ade38 '__check_complete'
| |   |-ClassTemplateSpecializationDecl 0x7ffe440ade38 <line:4018:1, line:4021:1> line:4019:8 struct __check_complete definition
| |   | |-TemplateArgument pack
| |   | `-CXXRecordDecl 0x7ffe440ae030 <col:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe440ae498 <line:4023:1, line:4028:1> line:4024:8 struct __check_complete definition
| |   | |-private '__check_complete<_Hp>'
| |   | |-private '__check_complete<_T0, _Tp...>'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | |-TemplateArgument type 'type-parameter-0-1'
| |   | | `-TemplateArgument type 'type-parameter-0-2...'
| |   | |-TemplateTypeParmDecl 0x7ffe440ae0e8 <line:4023:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-TemplateTypeParmDecl 0x7ffe440ae158 <col:22, col:28> col:28 referenced class depth 0 index 1 _T0
| |   | |-TemplateTypeParmDecl 0x7ffe440ae1c8 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Tp
| |   | `-CXXRecordDecl 0x7ffe440aeae0 <line:4024:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe440aeda8 <line:4030:1, line:4034:1> line:4031:8 struct __check_complete definition
| |   | |-private '__check_complete<_Hp>'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | `-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7ffe440aeb98 <line:4030:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | `-CXXRecordDecl 0x7ffe440af168 <line:4031:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe440af368 <line:4036:1, line:4040:1> line:4037:8 struct __check_complete definition
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7ffe440af220 <line:4036:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7ffe440af5d0 <line:4037:1, col:8> col:8 implicit struct __check_complete
| |   | `-StaticAssertDecl 0x7ffe440af7b8 <line:4039:5, col:60> col:5
| |   |   |-BinaryOperator 0x7ffe440af6d0 <col:19, col:33> '_Bool' '>'
| |   |   | |-UnaryExprOrTypeTraitExpr 0x7ffe440af678 <col:19, col:29> 'unsigned long' sizeof '_Tp'
| |   |   | `-ImplicitCastExpr 0x7ffe440af6b8 <col:33> 'unsigned long' <IntegralCast>
| |   |   |   `-IntegerLiteral 0x7ffe440af698 <col:33> 'int' 0
| |   |   `-StringLiteral 0x7ffe440af778 <col:36> 'const char [23]' lvalue "Type must be complete."
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe440af9d8 <line:4042:1, line:4046:1> line:4043:8 struct __check_complete definition
| |   | |-private '__check_complete<_Tp>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateTypeParmDecl 0x7ffe440af810 <line:4042:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe440afd28 <line:4043:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe440affa8 <line:4048:1, line:4052:1> line:4049:8 struct __check_complete definition
| |   | |-private '__check_complete<_Tp>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 &&'
| |   | |-TemplateTypeParmDecl 0x7ffe440afde0 <line:4048:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe440b02f8 <line:4049:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe440b0800 <line:4054:1, line:4058:1> line:4055:8 struct __check_complete definition
| |   | |-private '__check_complete<_Rp>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (*)(type-parameter-0-1...)'
| |   | |-TemplateTypeParmDecl 0x7ffe440b03b0 <line:4054:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7ffe440b0418 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Param
| |   | `-CXXRecordDecl 0x7ffe440b0b68 <line:4055:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe440b0f88 <line:4060:1, line:4063:1> line:4061:8 struct __check_complete definition
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'void (*)(type-parameter-0-0...)'
| |   | |-TemplateTypeParmDecl 0x7ffe440b0c20 <line:4060:11, col:20> col:20 referenced class depth 0 index 0 ... _Param
| |   | `-CXXRecordDecl 0x7ffe440b1210 <line:4061:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe440b15d8 <line:4065:1, line:4069:1> line:4066:8 struct __check_complete definition
| |   | |-private '__check_complete<_Rp>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1...)'
| |   | |-TemplateTypeParmDecl 0x7ffe440b12c8 <line:4065:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7ffe440b1338 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Param
| |   | `-CXXRecordDecl 0x7ffe440b1938 <line:4066:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe440b1c78 <line:4071:1, line:4074:1> line:4072:8 struct __check_complete definition
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'void (type-parameter-0-0...)'
| |   | |-TemplateTypeParmDecl 0x7ffe440b19f0 <line:4071:11, col:20> col:20 referenced class depth 0 index 0 ... _Param
| |   | `-CXXRecordDecl 0x7ffe440b1ef0 <line:4072:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe440b23f8 <line:4076:1, line:4080:1> line:4077:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...)'
| |   | |-TemplateTypeParmDecl 0x7ffe440b1fa8 <line:4076:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7ffe440b2018 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7ffe440b2088 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7ffe440b2800 <line:4077:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe440b2d08 <line:4082:1, line:4086:1> line:4083:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const'
| |   | |-TemplateTypeParmDecl 0x7ffe440b28b8 <line:4082:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7ffe440b2928 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7ffe440b2998 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7ffe440b3078 <line:4083:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe440b3578 <line:4088:1, line:4092:1> line:4089:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) volatile'
| |   | |-TemplateTypeParmDecl 0x7ffe440b3130 <line:4088:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7ffe440b3198 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7ffe440b3208 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7ffe440b38e8 <line:4089:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe440b3de8 <line:4094:1, line:4098:1> line:4095:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const volatile'
| |   | |-TemplateTypeParmDecl 0x7ffe440b39a0 <line:4094:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7ffe440b3a08 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7ffe440b3a78 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7ffe440b4158 <line:4095:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe440b4658 <line:4100:1, line:4104:1> line:4101:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) &'
| |   | |-TemplateTypeParmDecl 0x7ffe440b4210 <line:4100:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7ffe440b4278 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7ffe440b42e8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7ffe440b53d8 <line:4101:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe440b58d8 <line:4106:1, line:4110:1> line:4107:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const &'
| |   | |-TemplateTypeParmDecl 0x7ffe440b5490 <line:4106:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7ffe440b54f8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7ffe440b5568 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7ffe440b5c48 <line:4107:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe440b6148 <line:4112:1, line:4116:1> line:4113:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) volatile &'
| |   | |-TemplateTypeParmDecl 0x7ffe440b5d00 <line:4112:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7ffe440b5d68 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7ffe440b5dd8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7ffe440b64b8 <line:4113:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe440b69b8 <line:4118:1, line:4122:1> line:4119:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const volatile &'
| |   | |-TemplateTypeParmDecl 0x7ffe440b6570 <line:4118:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7ffe440b65d8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7ffe440b6648 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7ffe440b6d28 <line:4119:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe440b7240 <line:4124:1, line:4128:1> line:4125:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) &&'
| |   | |-TemplateTypeParmDecl 0x7ffe440b6de0 <line:4124:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7ffe440b6e48 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7ffe440b6eb8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7ffe440b75a8 <line:4125:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe440b7aa8 <line:4130:1, line:4134:1> line:4131:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const &&'
| |   | |-TemplateTypeParmDecl 0x7ffe440b7660 <line:4130:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7ffe440b76c8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7ffe440b7738 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7ffe440b7e18 <line:4131:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe440b8318 <line:4136:1, line:4140:1> line:4137:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) volatile &&'
| |   | |-TemplateTypeParmDecl 0x7ffe440b7ed0 <line:4136:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7ffe440b7f38 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7ffe440b7fa8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7ffe440b8688 <line:4137:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe440b8b88 <line:4142:1, line:4146:1> line:4143:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const volatile &&'
| |   | |-TemplateTypeParmDecl 0x7ffe440b8740 <line:4142:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7ffe440b87a8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7ffe440b8818 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7ffe440b8ef8 <line:4143:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe440b9288 <line:4148:1, line:4152:1> line:4149:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 type-parameter-0-1::*'
| |   | |-TemplateTypeParmDecl 0x7ffe440b8fb0 <line:4148:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7ffe440b9018 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | `-CXXRecordDecl 0x7ffe440b95e8 <line:4149:1, col:8> col:8 implicit struct __check_complete
| |   |-TypeAliasTemplateDecl 0x7ffe440ba2a0 <line:4155:1, line:4163:8> line:4159:1 __enable_if_bullet1
| |   | |-TemplateTypeParmDecl 0x7ffe440b96a0 <line:4155:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7ffe440b9708 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7ffe440b98a0 <line:4156:10, col:48> col:16 referenced class depth 0 index 2 _DecayFp
| |   | | `-TemplateArgument type 'typename decay<_Fp>::type'
| |   | |-TemplateTypeParmDecl 0x7ffe440b9a30 <line:4157:10, col:48> col:16 referenced class depth 0 index 3 _DecayA0
| |   | | `-TemplateArgument type 'typename decay<_A0>::type'
| |   | |-TemplateTypeParmDecl 0x7ffe440b9c50 <line:4158:10, col:74> col:16 referenced class depth 0 index 4 _ClassT
| |   | | `-TemplateArgument type 'typename __member_pointer_class_type<_DecayFp>::type'
| |   | `-TypeAliasDecl 0x7ffe440ba240 <line:4159:1, line:4163:8> line:4159:7 __enable_if_bullet1 'typename enable_if<is_member_function_pointer<_DecayFp>::value && is_base_of<_ClassT, _DecayA0>::value>::type'
| |   |   `-DependentNameType 0x7ffe440ba1d0 'typename enable_if<is_member_function_pointer<_DecayFp>::value && is_base_of<_ClassT, _DecayA0>::value>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7ffe440babf0 <line:4165:1, line:4172:8> line:4168:1 __enable_if_bullet2
| |   | |-TemplateTypeParmDecl 0x7ffe440ba2f0 <line:4165:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7ffe440ba358 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7ffe440ba4f0 <line:4166:10, col:48> col:16 referenced class depth 0 index 2 _DecayFp
| |   | | `-TemplateArgument type 'typename decay<_Fp>::type'
| |   | |-TemplateTypeParmDecl 0x7ffe440ba680 <line:4167:10, col:48> col:16 referenced class depth 0 index 3 _DecayA0
| |   | | `-TemplateArgument type 'typename decay<_A0>::type'
| |   | `-TypeAliasDecl 0x7ffe440bab90 <line:4168:1, line:4172:8> line:4168:7 __enable_if_bullet2 'typename enable_if<is_member_function_pointer<_DecayFp>::value && __is_reference_wrapper<_DecayA0>::value>::type'
| |   |   `-DependentNameType 0x7ffe440bab20 'typename enable_if<is_member_function_pointer<_DecayFp>::value && __is_reference_wrapper<_DecayA0>::value>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7ffe440bca10 <line:4174:1, line:4183:8> line:4178:1 __enable_if_bullet3
| |   | |-TemplateTypeParmDecl 0x7ffe440bac40 <line:4174:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7ffe440baca8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7ffe440bae40 <line:4175:10, col:48> col:16 referenced class depth 0 index 2 _DecayFp
| |   | | `-TemplateArgument type 'typename decay<_Fp>::type'
| |   | |-TemplateTypeParmDecl 0x7ffe440bafd0 <line:4176:10, col:48> col:16 referenced class depth 0 index 3 _DecayA0
| |   | | `-TemplateArgument type 'typename decay<_A0>::type'
| |   | |-TemplateTypeParmDecl 0x7ffe440bb160 <line:4177:10, col:74> col:16 referenced class depth 0 index 4 _ClassT
| |   | | `-TemplateArgument type 'typename __member_pointer_class_type<_DecayFp>::type'
| |   | `-TypeAliasDecl 0x7ffe440bc9b0 <line:4178:1, line:4183:8> line:4178:7 __enable_if_bullet3 'typename enable_if<is_member_function_pointer<_DecayFp>::value && !is_base_of<_ClassT, _DecayA0>::value && !__is_reference_wrapper<_DecayA0>::value>::type'
| |   |   `-DependentNameType 0x7ffe440bc940 'typename enable_if<is_member_function_pointer<_DecayFp>::value && !is_base_of<_ClassT, _DecayA0>::value && !__is_reference_wrapper<_DecayA0>::value>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7ffe440bd530 <line:4185:1, line:4193:8> line:4189:1 __enable_if_bullet4
| |   | |-TemplateTypeParmDecl 0x7ffe440bca60 <line:4185:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7ffe440bcac8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7ffe440bcc60 <line:4186:10, col:48> col:16 referenced class depth 0 index 2 _DecayFp
| |   | | `-TemplateArgument type 'typename decay<_Fp>::type'
| |   | |-TemplateTypeParmDecl 0x7ffe440bcdf0 <line:4187:10, col:48> col:16 referenced class depth 0 index 3 _DecayA0
| |   | | `-TemplateArgument type 'typename decay<_A0>::type'
| |   | |-TemplateTypeParmDecl 0x7ffe440bcf80 <line:4188:10, col:74> col:16 referenced class depth 0 index 4 _ClassT
| |   | | `-TemplateArgument type 'typename __member_pointer_class_type<_DecayFp>::type'
| |   | `-TypeAliasDecl 0x7ffe440bd4d0 <line:4189:1, line:4193:8> line:4189:7 __enable_if_bullet4 'typename enable_if<is_member_object_pointer<_DecayFp>::value && is_base_of<_ClassT, _DecayA0>::value>::type'
| |   |   `-DependentNameType 0x7ffe440bd460 'typename enable_if<is_member_object_pointer<_DecayFp>::value && is_base_of<_ClassT, _DecayA0>::value>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7ffe440bde10 <line:4195:1, line:4202:8> line:4198:1 __enable_if_bullet5
| |   | |-TemplateTypeParmDecl 0x7ffe440bd580 <line:4195:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7ffe440bd5e8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7ffe440bd780 <line:4196:10, col:48> col:16 referenced class depth 0 index 2 _DecayFp
| |   | | `-TemplateArgument type 'typename decay<_Fp>::type'
| |   | |-TemplateTypeParmDecl 0x7ffe440bd910 <line:4197:10, col:48> col:16 referenced class depth 0 index 3 _DecayA0
| |   | | `-TemplateArgument type 'typename decay<_A0>::type'
| |   | `-TypeAliasDecl 0x7ffe440bddb0 <line:4198:1, line:4202:8> line:4198:7 __enable_if_bullet5 'typename enable_if<is_member_object_pointer<_DecayFp>::value && __is_reference_wrapper<_DecayA0>::value>::type'
| |   |   `-DependentNameType 0x7ffe440bdd40 'typename enable_if<is_member_object_pointer<_DecayFp>::value && __is_reference_wrapper<_DecayA0>::value>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7ffe440bfa50 <line:4204:1, line:4213:8> line:4208:1 __enable_if_bullet6
| |   | |-TemplateTypeParmDecl 0x7ffe440bde60 <line:4204:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7ffe440bdec8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7ffe440be060 <line:4205:10, col:48> col:16 referenced class depth 0 index 2 _DecayFp
| |   | | `-TemplateArgument type 'typename decay<_Fp>::type'
| |   | |-TemplateTypeParmDecl 0x7ffe440be1f0 <line:4206:10, col:48> col:16 referenced class depth 0 index 3 _DecayA0
| |   | | `-TemplateArgument type 'typename decay<_A0>::type'
| |   | |-TemplateTypeParmDecl 0x7ffe440be380 <line:4207:10, col:74> col:16 referenced class depth 0 index 4 _ClassT
| |   | | `-TemplateArgument type 'typename __member_pointer_class_type<_DecayFp>::type'
| |   | `-TypeAliasDecl 0x7ffe440bf9f0 <line:4208:1, line:4213:8> line:4208:7 __enable_if_bullet6 'typename enable_if<is_member_object_pointer<_DecayFp>::value && !is_base_of<_ClassT, _DecayA0>::value && !__is_reference_wrapper<_DecayA0>::value>::type'
| |   |   `-DependentNameType 0x7ffe440bf980 'typename enable_if<is_member_object_pointer<_DecayFp>::value && !is_base_of<_ClassT, _DecayA0>::value && !__is_reference_wrapper<_DecayA0>::value>::type' dependent
| |   |-FunctionTemplateDecl 0x7ffe440bfe48 <line:4223:1, line:4224:44> col:6 __invoke
| |   | |-TemplateTypeParmDecl 0x7ffe440bfaa0 <line:4223:11, col:20> col:20 referenced class depth 0 index 0 ... _Args
| |   | `-FunctionDecl 0x7ffe440bfdb0 <line:4224:1, col:44> col:6 __invoke 'auto (struct std::__1::__any, _Args &&...) -> struct std::__1::__nat'
| |   |   |-ParmVarDecl 0x7ffe440bfb30 <col:15> col:20 'struct std::__1::__any'
| |   |   `-ParmVarDecl 0x7ffe440bfc68 <col:22, col:33> col:33 __args '_Args &&...'
| |   |-FunctionTemplateDecl 0x7ffe440c0198 <line:4226:1, line:4227:54> col:6 __invoke_constexpr
| |   | |-TemplateTypeParmDecl 0x7ffe440bfea8 <line:4226:11, col:20> col:20 referenced class depth 0 index 0 ... _Args
| |   | `-FunctionDecl 0x7ffe440c0100 <line:4227:1, col:54> col:6 __invoke_constexpr 'auto (struct std::__1::__any, _Args &&...) -> struct std::__1::__nat'
| |   |   |-ParmVarDecl 0x7ffe440bff40 <col:25> col:30 'struct std::__1::__any'
| |   |   `-ParmVarDecl 0x7ffe440c0018 <col:32, col:43> col:43 __args '_Args &&...'
| |   |-FunctionTemplateDecl 0x7ffe440c3ae8 <line:4231:1, line:4221:27> line:4235:1 __invoke
| |   | |-TemplateTypeParmDecl 0x7ffe440c01f8 <line:4231:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7ffe440c0268 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7ffe440c02d8 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Args
| |   | |-TemplateTypeParmDecl 0x7ffe440c0e28 <line:4232:11, col:47> col:11 class depth 0 index 3
| |   | | `-TemplateArgument type '__enable_if_bullet1<_Fp, _A0>':'typename enable_if<is_member_function_pointer<typename decay<type-parameter-0-0>::type>::value && is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7ffe440c3a50 <line:4233:1, line:4221:27> line:4235:1 __invoke 'auto (_Fp &&, _A0 &&, _Args &&...) noexcept(noexcept((std::__1::forward<_A0>(__a0) .* __f)(std::__1::forward<_Args>(__args)...))) -> decltype((std::__1::forward<_A0>(__a0) .* __f)(std::__1::forward<_Args>(__args)...))' inline
| |   |   |-ParmVarDecl 0x7ffe440c0f38 <col:10, col:16> col:16 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7ffe440c0fd8 <col:21, col:27> col:27 referenced __a0 '_A0 &&'
| |   |   |-ParmVarDecl 0x7ffe440c1118 <col:33, col:44> col:44 referenced __args '_Args &&...'
| |   |   |-CompoundStmt 0x7ffe440c3f38 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7ffe440c3f20 <col:7, line:4236:88>
| |   |   |   `-CallExpr 0x7ffe440c3ef0 <col:23, col:88> '<dependent type>'
| |   |   |     |-ParenExpr 0x7ffe440c3d60 <col:23, col:54> '<dependent type>'
| |   |   |     | `-BinaryOperator 0x7ffe440c3d38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4236:51> '<dependent type>' '.*'
| |   |   |     |   |-CallExpr 0x7ffe440c3ce0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4236:48> '<dependent type>'
| |   |   |     |   | |-UnresolvedLookupExpr 0x7ffe440c3c18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4236:42> '<dependent type>' lvalue (no ADL) = 'forward' 0x7ffe44071b80 0x7ffe440720a0
| |   |   |     |   | `-DeclRefExpr 0x7ffe440c3cb8 <col:44> '_A0' lvalue ParmVar 0x7ffe440c0fd8 '__a0' '_A0 &&'
| |   |   |     |   `-DeclRefExpr 0x7ffe440c3d10 <col:51> '_Fp' lvalue ParmVar 0x7ffe440c0f38 '__f' '_Fp &&'
| |   |   |     `-PackExpansionExpr 0x7ffe440c3ed0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4236:85> '<dependent type>'
| |   |   |       `-CallExpr 0x7ffe440c3ea0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4236:84> '<dependent type>'
| |   |   |         |-UnresolvedLookupExpr 0x7ffe440c3dd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4236:76> '<dependent type>' lvalue (no ADL) = 'forward' 0x7ffe44071b80 0x7ffe440720a0
| |   |   |         `-DeclRefExpr 0x7ffe440c3e78 <col:78> '_Args &&...' lvalue ParmVar 0x7ffe440c1118 '__args' '_Args &&...'
| |   |   |-AlwaysInlineAttr 0x7ffe440c3b50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7ffe440c3b98 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7ffe440c5400 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4238:1, line:4221:27> line:4242:1 __invoke_constexpr
| |   | |-TemplateTypeParmDecl 0x7ffe440c3f58 <line:4238:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7ffe440c3fc8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7ffe440c4038 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Args
| |   | |-TemplateTypeParmDecl 0x7ffe440c4868 <line:4239:11, col:47> col:11 class depth 0 index 3
| |   | | `-TemplateArgument type '__enable_if_bullet1<_Fp, _A0>':'typename enable_if<is_member_function_pointer<typename decay<type-parameter-0-0>::type>::value && is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7ffe440c5340 <line:4240:1, line:4221:27> line:4242:1 constexpr __invoke_constexpr 'auto (_Fp &&, _A0 &&, _Args &&...) noexcept(noexcept((std::__1::forward<_A0>(__a0) .* __f)(std::__1::forward<_Args>(__args)...))) -> decltype((std::__1::forward<_A0>(__a0) .* __f)(std::__1::forward<_Args>(__args)...))' inline
| |   |   |-ParmVarDecl 0x7ffe440c4978 <col:20, col:26> col:26 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7ffe440c4a18 <col:31, col:37> col:37 referenced __a0 '_A0 &&'
| |   |   |-ParmVarDecl 0x7ffe440c4af8 <col:43, col:54> col:54 referenced __args '_Args &&...'
| |   |   |-CompoundStmt 0x7ffe440c5850 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7ffe440c5838 <col:7, line:4243:88>
| |   |   |   `-CallExpr 0x7ffe440c5808 <col:23, col:88> '<dependent type>'
| |   |   |     |-ParenExpr 0x7ffe440c5678 <col:23, col:54> '<dependent type>'
| |   |   |     | `-BinaryOperator 0x7ffe440c5650 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4243:51> '<dependent type>' '.*'
| |   |   |     |   |-CallExpr 0x7ffe440c55f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4243:48> '<dependent type>'
| |   |   |     |   | |-UnresolvedLookupExpr 0x7ffe440c5530 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4243:42> '<dependent type>' lvalue (no ADL) = 'forward' 0x7ffe44071b80 0x7ffe440720a0
| |   |   |     |   | `-DeclRefExpr 0x7ffe440c55d0 <col:44> '_A0' lvalue ParmVar 0x7ffe440c4a18 '__a0' '_A0 &&'
| |   |   |     |   `-DeclRefExpr 0x7ffe440c5628 <col:51> '_Fp' lvalue ParmVar 0x7ffe440c4978 '__f' '_Fp &&'
| |   |   |     `-PackExpansionExpr 0x7ffe440c57e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4243:85> '<dependent type>'
| |   |   |       `-CallExpr 0x7ffe440c57b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4243:84> '<dependent type>'
| |   |   |         |-UnresolvedLookupExpr 0x7ffe440c56f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4243:76> '<dependent type>' lvalue (no ADL) = 'forward' 0x7ffe44071b80 0x7ffe440720a0
| |   |   |         `-DeclRefExpr 0x7ffe440c5790 <col:78> '_Args &&...' lvalue ParmVar 0x7ffe440c4af8 '__args' '_Args &&...'
| |   |   |-AlwaysInlineAttr 0x7ffe440c5468 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7ffe440c54b0 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7ffe440c6c88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4245:1, line:4221:27> line:4249:1 __invoke
| |   | |-TemplateTypeParmDecl 0x7ffe440c5870 <line:4245:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7ffe440c58d8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7ffe440c5948 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Args
| |   | |-TemplateTypeParmDecl 0x7ffe440c6208 <line:4246:11, col:47> col:11 class depth 0 index 3
| |   | | `-TemplateArgument type '__enable_if_bullet2<_Fp, _A0>':'typename enable_if<is_member_function_pointer<typename decay<type-parameter-0-0>::type>::value && __is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7ffe440c6bf0 <line:4247:1, line:4221:27> line:4249:1 __invoke 'auto (_Fp &&, _A0 &&, _Args &&...) noexcept(noexcept((__a0.get() .* __f)(std::__1::forward<_Args>(__args)...))) -> decltype((__a0.get() .* __f)(std::__1::forward<_Args>(__args)...))' inline
| |   |   |-ParmVarDecl 0x7ffe440c6318 <col:10, col:16> col:16 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7ffe440c63b8 <col:21, col:27> col:27 referenced __a0 '_A0 &&'
| |   |   |-ParmVarDecl 0x7ffe440c6498 <col:33, col:44> col:44 referenced __args '_Args &&...'
| |   |   |-CompoundStmt 0x7ffe440c7018 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7ffe440c7000 <col:7, line:4250:73>
| |   |   |   `-CallExpr 0x7ffe440c6fd0 <col:23, col:73> '<dependent type>'
| |   |   |     |-ParenExpr 0x7ffe440c6e40 <col:23, col:39> '<dependent type>'
| |   |   |     | `-BinaryOperator 0x7ffe440c6e18 <col:24, col:36> '<dependent type>' '.*'
| |   |   |     |   |-CallExpr 0x7ffe440c6dc8 <col:24, col:33> '<dependent type>'
| |   |   |     |   | `-CXXDependentScopeMemberExpr 0x7ffe440c6d70 <col:24, col:29> '<dependent type>' lvalue .get
| |   |   |     |   |   `-DeclRefExpr 0x7ffe440c6d48 <col:24> '_A0' lvalue ParmVar 0x7ffe440c63b8 '__a0' '_A0 &&'
| |   |   |     |   `-DeclRefExpr 0x7ffe440c6df0 <col:36> '_Fp' lvalue ParmVar 0x7ffe440c6318 '__f' '_Fp &&'
| |   |   |     `-PackExpansionExpr 0x7ffe440c6fb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4250:70> '<dependent type>'
| |   |   |       `-CallExpr 0x7ffe440c6f80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4250:69> '<dependent type>'
| |   |   |         |-UnresolvedLookupExpr 0x7ffe440c6eb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4250:61> '<dependent type>' lvalue (no ADL) = 'forward' 0x7ffe44071b80 0x7ffe440720a0
| |   |   |         `-DeclRefExpr 0x7ffe440c6f58 <col:63> '_Args &&...' lvalue ParmVar 0x7ffe440c6498 '__args' '_Args &&...'
| |   |   |-AlwaysInlineAttr 0x7ffe440c6cf0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7ffe440c6d38 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7ffe440c81f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4252:1, line:4221:27> line:4256:1 __invoke_constexpr
| |   | |-TemplateTypeParmDecl 0x7ffe440c7038 <line:4252:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7ffe440c70a8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7ffe440c7118 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Args
| |   | |-TemplateTypeParmDecl 0x7ffe440c7808 <line:4253:11, col:47> col:11 class depth 0 index 3
| |   | | `-TemplateArgument type '__enable_if_bullet2<_Fp, _A0>':'typename enable_if<is_member_function_pointer<typename decay<type-parameter-0-0>::type>::value && __is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7ffe440c8160 <line:4254:1, line:4221:27> line:4256:1 constexpr __invoke_constexpr 'auto (_Fp &&, _A0 &&, _Args &&...) noexcept(noexcept((__a0.get() .* __f)(std::__1::forward<_Args>(__args)...))) -> decltype((__a0.get() .* __f)(std::__1::forward<_Args>(__args)...))' inline
| |   |   |-ParmVarDecl 0x7ffe440c7918 <col:20, col:26> col:26 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7ffe440c79b8 <col:31, col:37> col:37 referenced __a0 '_A0 &&'
| |   |   |-ParmVarDecl 0x7ffe440c7a98 <col:43, col:54> col:54 referenced __args '_Args &&...'
| |   |   |-CompoundStmt 0x7ffe440c8588 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7ffe440c8570 <col:7, line:4257:73>
| |   |   |   `-CallExpr 0x7ffe440c8540 <col:23, col:73> '<dependent type>'
| |   |   |     |-ParenExpr 0x7ffe440c83b0 <col:23, col:39> '<dependent type>'
| |   |   |     | `-BinaryOperator 0x7ffe440c8388 <col:24, col:36> '<dependent type>' '.*'
| |   |   |     |   |-CallExpr 0x7ffe440c8338 <col:24, col:33> '<dependent type>'
| |   |   |     |   | `-CXXDependentScopeMemberExpr 0x7ffe440c82e0 <col:24, col:29> '<dependent type>' lvalue .get
| |   |   |     |   |   `-DeclRefExpr 0x7ffe440c82b8 <col:24> '_A0' lvalue ParmVar 0x7ffe440c79b8 '__a0' '_A0 &&'
| |   |   |     |   `-DeclRefExpr 0x7ffe440c8360 <col:36> '_Fp' lvalue ParmVar 0x7ffe440c7918 '__f' '_Fp &&'
| |   |   |     `-PackExpansionExpr 0x7ffe440c8520 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4257:70> '<dependent type>'
| |   |   |       `-CallExpr 0x7ffe440c84f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4257:69> '<dependent type>'
| |   |   |         |-UnresolvedLookupExpr 0x7ffe440c8428 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4257:61> '<dependent type>' lvalue (no ADL) = 'forward' 0x7ffe44071b80 0x7ffe440720a0
| |   |   |         `-DeclRefExpr 0x7ffe440c84c8 <col:63> '_Args &&...' lvalue ParmVar 0x7ffe440c7a98 '__args' '_Args &&...'
| |   |   |-AlwaysInlineAttr 0x7ffe440c8260 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7ffe440c82a8 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7ffe440c9e08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4259:1, line:4221:27> line:4263:1 __invoke
| |   | |-TemplateTypeParmDecl 0x7ffe440c85a8 <line:4259:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7ffe440c8618 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7ffe440c8688 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Args
| |   | |-TemplateTypeParmDecl 0x7ffe440c91b8 <line:4260:11, col:47> col:11 class depth 0 index 3
| |   | | `-TemplateArgument type '__enable_if_bullet3<_Fp, _A0>':'typename enable_if<is_member_function_pointer<typename decay<type-parameter-0-0>::type>::value && !is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value && !__is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7ffe440c9d70 <line:4261:1, line:4221:27> line:4263:1 __invoke 'auto (_Fp &&, _A0 &&, _Args &&...) noexcept(noexcept(((*std::__1::forward<_A0>(__a0)) .* __f)(std::__1::forward<_Args>(__args)...))) -> decltype(((*std::__1::forward<_A0>(__a0)) .* __f)(std::__1::forward<_Args>(__args)...))' inline
| |   |   |-ParmVarDecl 0x7ffe440c92c8 <col:10, col:16> col:16 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7ffe440c9368 <col:21, col:27> col:27 referenced __a0 '_A0 &&'
| |   |   |-ParmVarDecl 0x7ffe440c9448 <col:33, col:44> col:44 referenced __args '_Args &&...'
| |   |   |-CompoundStmt 0x7ffe440ca280 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7ffe440ca268 <col:7, line:4264:91>
| |   |   |   `-CallExpr 0x7ffe440ca238 <col:23, col:91> '<dependent type>'
| |   |   |     |-ParenExpr 0x7ffe440ca0a8 <col:23, col:57> '<dependent type>'
| |   |   |     | `-BinaryOperator 0x7ffe440ca080 <col:24, col:54> '<dependent type>' '.*'
| |   |   |     |   |-ParenExpr 0x7ffe440ca038 <col:24, col:51> '<dependent type>'
| |   |   |     |   | `-UnaryOperator 0x7ffe440ca018 <col:25, col:50> '<dependent type>' prefix '*'
| |   |   |     |   |   `-CallExpr 0x7ffe440c9fe8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4264:50> '<dependent type>'
| |   |   |     |   |     |-UnresolvedLookupExpr 0x7ffe440c9f20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4264:44> '<dependent type>' lvalue (no ADL) = 'forward' 0x7ffe44071b80 0x7ffe440720a0
| |   |   |     |   |     `-DeclRefExpr 0x7ffe440c9fc0 <col:46> '_A0' lvalue ParmVar 0x7ffe440c9368 '__a0' '_A0 &&'
| |   |   |     |   `-DeclRefExpr 0x7ffe440ca058 <col:54> '_Fp' lvalue ParmVar 0x7ffe440c92c8 '__f' '_Fp &&'
| |   |   |     `-PackExpansionExpr 0x7ffe440ca218 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4264:88> '<dependent type>'
| |   |   |       `-CallExpr 0x7ffe440ca1e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4264:87> '<dependent type>'
| |   |   |         |-UnresolvedLookupExpr 0x7ffe440ca120 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4264:79> '<dependent type>' lvalue (no ADL) = 'forward' 0x7ffe44071b80 0x7ffe440720a0
| |   |   |         `-DeclRefExpr 0x7ffe440ca1c0 <col:81> '_Args &&...' lvalue ParmVar 0x7ffe440c9448 '__args' '_Args &&...'
| |   |   |-AlwaysInlineAttr 0x7ffe440c9e70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7ffe440c9eb8 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7ffe440cb8c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4266:1, line:4221:27> line:4270:1 __invoke_constexpr
| |   | |-TemplateTypeParmDecl 0x7ffe440ca2a0 <line:4266:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7ffe440ca308 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7ffe440ca378 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Args
| |   | |-TemplateTypeParmDecl 0x7ffe440cad08 <line:4267:11, col:47> col:11 class depth 0 index 3
| |   | | `-TemplateArgument type '__enable_if_bullet3<_Fp, _A0>':'typename enable_if<is_member_function_pointer<typename decay<type-parameter-0-0>::type>::value && !is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value && !__is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7ffe440cb830 <line:4268:1, line:4221:27> line:4270:1 constexpr __invoke_constexpr 'auto (_Fp &&, _A0 &&, _Args &&...) noexcept(noexcept(((*std::__1::forward<_A0>(__a0)) .* __f)(std::__1::forward<_Args>(__args)...))) -> decltype(((*std::__1::forward<_A0>(__a0)) .* __f)(std::__1::forward<_Args>(__args)...))' inline
| |   |   |-ParmVarDecl 0x7ffe440cae18 <col:20, col:26> col:26 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7ffe440caeb8 <col:31, col:37> col:37 referenced __a0 '_A0 &&'
| |   |   |-ParmVarDecl 0x7ffe440caf98 <col:43, col:54> col:54 referenced __args '_Args &&...'
| |   |   |-CompoundStmt 0x7ffe440cbd40 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7ffe440cbd28 <col:7, line:4271:91>
| |   |   |   `-CallExpr 0x7ffe440cbcf8 <col:23, col:91> '<dependent type>'
| |   |   |     |-ParenExpr 0x7ffe440cbb68 <col:23, col:57> '<dependent type>'
| |   |   |     | `-BinaryOperator 0x7ffe440cbb40 <col:24, col:54> '<dependent type>' '.*'
| |   |   |     |   |-ParenExpr 0x7ffe440cbaf8 <col:24, col:51> '<dependent type>'
| |   |   |     |   | `-UnaryOperator 0x7ffe440cbad8 <col:25, col:50> '<dependent type>' prefix '*'
| |   |   |     |   |   `-CallExpr 0x7ffe440cbaa8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4271:50> '<dependent type>'
| |   |   |     |   |     |-UnresolvedLookupExpr 0x7ffe440cb9e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4271:44> '<dependent type>' lvalue (no ADL) = 'forward' 0x7ffe44071b80 0x7ffe440720a0
| |   |   |     |   |     `-DeclRefExpr 0x7ffe440cba80 <col:46> '_A0' lvalue ParmVar 0x7ffe440caeb8 '__a0' '_A0 &&'
| |   |   |     |   `-DeclRefExpr 0x7ffe440cbb18 <col:54> '_Fp' lvalue ParmVar 0x7ffe440cae18 '__f' '_Fp &&'
| |   |   |     `-PackExpansionExpr 0x7ffe440cbcd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4271:88> '<dependent type>'
| |   |   |       `-CallExpr 0x7ffe440cbca8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4271:87> '<dependent type>'
| |   |   |         |-UnresolvedLookupExpr 0x7ffe440cbbe0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4271:79> '<dependent type>' lvalue (no ADL) = 'forward' 0x7ffe44071b80 0x7ffe440720a0
| |   |   |         `-DeclRefExpr 0x7ffe440cbc80 <col:81> '_Args &&...' lvalue ParmVar 0x7ffe440caf98 '__args' '_Args &&...'
| |   |   |-AlwaysInlineAttr 0x7ffe440cb930 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7ffe440cb978 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7ffe440ccf38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4275:1, line:4221:27> line:4279:1 __invoke
| |   | |-TemplateTypeParmDecl 0x7ffe440cbd60 <line:4275:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7ffe440cbdc8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7ffe440cc7f8 <line:4276:11, col:47> col:11 class depth 0 index 2
| |   | | `-TemplateArgument type '__enable_if_bullet4<_Fp, _A0>':'typename enable_if<is_member_object_pointer<typename decay<type-parameter-0-0>::type>::value && is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7ffe440ccea0 <line:4277:1, line:4221:27> line:4279:1 __invoke 'auto (_Fp &&, _A0 &&) noexcept(noexcept(std::__1::forward<_A0>(__a0) .* __f)) -> decltype(std::__1::forward<_A0>(__a0) .* __f)' inline
| |   |   |-ParmVarDecl 0x7ffe440cc8f8 <col:10, col:16> col:16 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7ffe440cc998 <col:21, col:27> col:27 referenced __a0 '_A0 &&'
| |   |   |-CompoundStmt 0x7ffe440cd1a8 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7ffe440cd190 <col:7, line:4280:50>
| |   |   |   `-BinaryOperator 0x7ffe440cd168 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4280:50> '<dependent type>' '.*'
| |   |   |     |-CallExpr 0x7ffe440cd110 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4280:47> '<dependent type>'
| |   |   |     | |-UnresolvedLookupExpr 0x7ffe440cd048 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4280:41> '<dependent type>' lvalue (no ADL) = 'forward' 0x7ffe44071b80 0x7ffe440720a0
| |   |   |     | `-DeclRefExpr 0x7ffe440cd0e8 <col:43> '_A0' lvalue ParmVar 0x7ffe440cc998 '__a0' '_A0 &&'
| |   |   |     `-DeclRefExpr 0x7ffe440cd140 <col:50> '_Fp' lvalue ParmVar 0x7ffe440cc8f8 '__f' '_Fp &&'
| |   |   |-AlwaysInlineAttr 0x7ffe440ccf98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7ffe440ccfe0 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7ffe440ce148 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4282:1, line:4221:27> line:4286:1 __invoke_constexpr
| |   | |-TemplateTypeParmDecl 0x7ffe440cd1c8 <line:4282:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7ffe440cd238 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7ffe440cda88 <line:4283:11, col:47> col:11 class depth 0 index 2
| |   | | `-TemplateArgument type '__enable_if_bullet4<_Fp, _A0>':'typename enable_if<is_member_object_pointer<typename decay<type-parameter-0-0>::type>::value && is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7ffe440ce0b0 <line:4284:1, line:4221:27> line:4286:1 constexpr __invoke_constexpr 'auto (_Fp &&, _A0 &&) noexcept(noexcept(std::__1::forward<_A0>(__a0) .* __f)) -> decltype(std::__1::forward<_A0>(__a0) .* __f)' inline
| |   |   |-ParmVarDecl 0x7ffe440cdb88 <col:20, col:26> col:26 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7ffe440cdc28 <col:31, col:37> col:37 referenced __a0 '_A0 &&'
| |   |   |-CompoundStmt 0x7ffe440ce3b8 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7ffe440ce3a0 <col:7, line:4287:50>
| |   |   |   `-BinaryOperator 0x7ffe440ce378 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4287:50> '<dependent type>' '.*'
| |   |   |     |-CallExpr 0x7ffe440ce320 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4287:47> '<dependent type>'
| |   |   |     | |-UnresolvedLookupExpr 0x7ffe440ce258 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4287:41> '<dependent type>' lvalue (no ADL) = 'forward' 0x7ffe44071b80 0x7ffe440720a0
| |   |   |     | `-DeclRefExpr 0x7ffe440ce2f8 <col:43> '_A0' lvalue ParmVar 0x7ffe440cdc28 '__a0' '_A0 &&'
| |   |   |     `-DeclRefExpr 0x7ffe440ce350 <col:50> '_Fp' lvalue ParmVar 0x7ffe440cdb88 '__f' '_Fp &&'
| |   |   |-AlwaysInlineAttr 0x7ffe440ce1a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7ffe440ce1f0 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7ffe440cf298 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4289:1, line:4221:27> line:4293:1 __invoke
| |   | |-TemplateTypeParmDecl 0x7ffe440ce3d8 <line:4289:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7ffe440ce448 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7ffe440ceca8 <line:4290:11, col:47> col:11 class depth 0 index 2
| |   | | `-TemplateArgument type '__enable_if_bullet5<_Fp, _A0>':'typename enable_if<is_member_object_pointer<typename decay<type-parameter-0-0>::type>::value && __is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7ffe440cf200 <line:4291:1, line:4221:27> line:4293:1 __invoke 'auto (_Fp &&, _A0 &&) noexcept(noexcept(__a0.get() .* __f)) -> decltype(__a0.get() .* __f)' inline
| |   |   |-ParmVarDecl 0x7ffe440ceda8 <col:10, col:16> col:16 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7ffe440cee48 <col:21, col:27> col:27 referenced __a0 '_A0 &&'
| |   |   |-CompoundStmt 0x7ffe440cf468 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7ffe440cf450 <col:7, line:4294:35>
| |   |   |   `-BinaryOperator 0x7ffe440cf428 <col:23, col:35> '<dependent type>' '.*'
| |   |   |     |-CallExpr 0x7ffe440cf3d0 <col:23, col:32> '<dependent type>'
| |   |   |     | `-CXXDependentScopeMemberExpr 0x7ffe440cf378 <col:23, col:28> '<dependent type>' lvalue .get
| |   |   |     |   `-DeclRefExpr 0x7ffe440cf350 <col:23> '_A0' lvalue ParmVar 0x7ffe440cee48 '__a0' '_A0 &&'
| |   |   |     `-DeclRefExpr 0x7ffe440cf400 <col:35> '_Fp' lvalue ParmVar 0x7ffe440ceda8 '__f' '_Fp &&'
| |   |   |-AlwaysInlineAttr 0x7ffe440cf2f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7ffe440cf340 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7ffe440d0158 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4296:1, line:4221:27> line:4300:1 __invoke_constexpr
| |   | |-TemplateTypeParmDecl 0x7ffe440cf488 <line:4296:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7ffe440cf4f8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7ffe440cfbe8 <line:4297:11, col:47> col:11 class depth 0 index 2
| |   | | `-TemplateArgument type '__enable_if_bullet5<_Fp, _A0>':'typename enable_if<is_member_object_pointer<typename decay<type-parameter-0-0>::type>::value && __is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7ffe440d00c0 <line:4298:1, line:4221:27> line:4300:1 constexpr __invoke_constexpr 'auto (_Fp &&, _A0 &&) noexcept(noexcept(__a0.get() .* __f)) -> decltype(__a0.get() .* __f)' inline
| |   |   |-ParmVarDecl 0x7ffe440cfce8 <col:20, col:26> col:26 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7ffe440cfd88 <col:31, col:37> col:37 referenced __a0 '_A0 &&'
| |   |   |-CompoundStmt 0x7ffe440d0320 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7ffe440d0308 <col:7, line:4301:35>
| |   |   |   `-BinaryOperator 0x7ffe440d02e0 <col:23, col:35> '<dependent type>' '.*'
| |   |   |     |-CallExpr 0x7ffe440d0290 <col:23, col:32> '<dependent type>'
| |   |   |     | `-CXXDependentScopeMemberExpr 0x7ffe440d0238 <col:23, col:28> '<dependent type>' lvalue .get
| |   |   |     |   `-DeclRefExpr 0x7ffe440d0210 <col:23> '_A0' lvalue ParmVar 0x7ffe440cfd88 '__a0' '_A0 &&'
| |   |   |     `-DeclRefExpr 0x7ffe440d02b8 <col:35> '_Fp' lvalue ParmVar 0x7ffe440cfce8 '__f' '_Fp &&'
| |   |   |-AlwaysInlineAttr 0x7ffe440d01b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7ffe440d0200 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7ffe440d1698 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4303:1, line:4221:27> line:4307:1 __invoke
| |   | |-TemplateTypeParmDecl 0x7ffe440d0340 <line:4303:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7ffe440d03a8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7ffe440d0ed8 <line:4304:11, col:47> col:11 class depth 0 index 2
| |   | | `-TemplateArgument type '__enable_if_bullet6<_Fp, _A0>':'typename enable_if<is_member_object_pointer<typename decay<type-parameter-0-0>::type>::value && !is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value && !__is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7ffe440d1600 <line:4305:1, line:4221:27> line:4307:1 __invoke 'auto (_Fp &&, _A0 &&) noexcept(noexcept((*std::__1::forward<_A0>(__a0)) .* __f)) -> decltype((*std::__1::forward<_A0>(__a0)) .* __f)' inline
| |   |   |-ParmVarDecl 0x7ffe440d0fd8 <col:10, col:16> col:16 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7ffe440d1078 <col:21, col:27> col:27 referenced __a0 '_A0 &&'
| |   |   |-CompoundStmt 0x7ffe440d1948 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7ffe440d1930 <col:7, line:4308:53>
| |   |   |   `-BinaryOperator 0x7ffe440d1908 <col:23, col:53> '<dependent type>' '.*'
| |   |   |     |-ParenExpr 0x7ffe440d18c0 <col:23, col:50> '<dependent type>'
| |   |   |     | `-UnaryOperator 0x7ffe440d18a0 <col:24, col:49> '<dependent type>' prefix '*'
| |   |   |     |   `-CallExpr 0x7ffe440d1870 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4308:49> '<dependent type>'
| |   |   |     |     |-UnresolvedLookupExpr 0x7ffe440d17a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4308:43> '<dependent type>' lvalue (no ADL) = 'forward' 0x7ffe44071b80 0x7ffe440720a0
| |   |   |     |     `-DeclRefExpr 0x7ffe440d1848 <col:45> '_A0' lvalue ParmVar 0x7ffe440d1078 '__a0' '_A0 &&'
| |   |   |     `-DeclRefExpr 0x7ffe440d18e0 <col:53> '_Fp' lvalue ParmVar 0x7ffe440d0fd8 '__f' '_Fp &&'
| |   |   |-AlwaysInlineAttr 0x7ffe440d16f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7ffe440d1740 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7ffe440d2aa8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4310:1, line:4221:27> line:4314:1 __invoke_constexpr
| |   | |-TemplateTypeParmDecl 0x7ffe440d1968 <line:4310:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7ffe440d19d8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7ffe440d2368 <line:4311:11, col:47> col:11 class depth 0 index 2
| |   | | `-TemplateArgument type '__enable_if_bullet6<_Fp, _A0>':'typename enable_if<is_member_object_pointer<typename decay<type-parameter-0-0>::type>::value && !is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value && !__is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7ffe440d2a10 <line:4312:1, line:4221:27> line:4314:1 constexpr __invoke_constexpr 'auto (_Fp &&, _A0 &&) noexcept(noexcept((*std::__1::forward<_A0>(__a0)) .* __f)) -> decltype((*std::__1::forward<_A0>(__a0)) .* __f)' inline
| |   |   |-ParmVarDecl 0x7ffe440d2468 <col:20, col:26> col:26 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7ffe440d2508 <col:31, col:37> col:37 referenced __a0 '_A0 &&'
| |   |   |-CompoundStmt 0x7ffe440d2d58 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7ffe440d2d40 <col:7, line:4315:53>
| |   |   |   `-BinaryOperator 0x7ffe440d2d18 <col:23, col:53> '<dependent type>' '.*'
| |   |   |     |-ParenExpr 0x7ffe440d2cd0 <col:23, col:50> '<dependent type>'
| |   |   |     | `-UnaryOperator 0x7ffe440d2cb0 <col:24, col:49> '<dependent type>' prefix '*'
| |   |   |     |   `-CallExpr 0x7ffe440d2c80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4315:49> '<dependent type>'
| |   |   |     |     |-UnresolvedLookupExpr 0x7ffe440d2bb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4315:43> '<dependent type>' lvalue (no ADL) = 'forward' 0x7ffe44071b80 0x7ffe440720a0
| |   |   |     |     `-DeclRefExpr 0x7ffe440d2c58 <col:45> '_A0' lvalue ParmVar 0x7ffe440d2508 '__a0' '_A0 &&'
| |   |   |     `-DeclRefExpr 0x7ffe440d2cf0 <col:53> '_Fp' lvalue ParmVar 0x7ffe440d2468 '__f' '_Fp &&'
| |   |   |-AlwaysInlineAttr 0x7ffe440d2b08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7ffe440d2b50 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7ffe440d4878 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4319:1, line:4221:27> line:4322:1 __invoke
| |   | |-TemplateTypeParmDecl 0x7ffe440d2d78 <line:4319:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7ffe440d2de8 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | `-FunctionDecl 0x7ffe440d47e0 <line:4320:1, line:4221:27> line:4322:1 __invoke 'auto (_Fp &&, _Args &&...) noexcept(noexcept(std::__1::forward<_Fp>(__f)(std::__1::forward<_Args>(__args)...))) -> decltype(std::__1::forward<_Fp>(__f)(std::__1::forward<_Args>(__args)...))' inline
| |   |   |-ParmVarDecl 0x7ffe440d2ee8 <col:10, col:16> col:16 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7ffe440d3028 <col:21, col:32> col:32 referenced __args '_Args &&...'
| |   |   |-CompoundStmt 0x7ffe440d4c38 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7ffe440d4c20 <col:7, line:4323:80>
| |   |   |   `-CallExpr 0x7ffe440d4bf0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4323:80> '<dependent type>'
| |   |   |     |-CallExpr 0x7ffe440d4a50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4323:46> '<dependent type>'
| |   |   |     | |-UnresolvedLookupExpr 0x7ffe440d4988 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4323:41> '<dependent type>' lvalue (no ADL) = 'forward' 0x7ffe44071b80 0x7ffe440720a0
| |   |   |     | `-DeclRefExpr 0x7ffe440d4a28 <col:43> '_Fp' lvalue ParmVar 0x7ffe440d2ee8 '__f' '_Fp &&'
| |   |   |     `-PackExpansionExpr 0x7ffe440d4bd0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4323:77> '<dependent type>'
| |   |   |       `-CallExpr 0x7ffe440d4ba0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4323:76> '<dependent type>'
| |   |   |         |-UnresolvedLookupExpr 0x7ffe440d4ad8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4323:68> '<dependent type>' lvalue (no ADL) = 'forward' 0x7ffe44071b80 0x7ffe440720a0
| |   |   |         `-DeclRefExpr 0x7ffe440d4b78 <col:70> '_Args &&...' lvalue ParmVar 0x7ffe440d3028 '__args' '_Args &&...'
| |   |   |-AlwaysInlineAttr 0x7ffe440d48d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7ffe440d4920 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7ffe440d5668 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4325:1, line:4221:27> line:4328:1 __invoke_constexpr
| |   | |-TemplateTypeParmDecl 0x7ffe440d4c58 <line:4325:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7ffe440d4cc8 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | `-FunctionDecl 0x7ffe440d55d0 <line:4326:1, line:4221:27> line:4328:1 constexpr __invoke_constexpr 'auto (_Fp &&, _Args &&...) noexcept(noexcept(std::__1::forward<_Fp>(__f)(std::__1::forward<_Args>(__args)...))) -> decltype(std::__1::forward<_Fp>(__f)(std::__1::forward<_Args>(__args)...))' inline
| |   |   |-ParmVarDecl 0x7ffe440d4dc8 <col:20, col:26> col:26 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7ffe440d4ea8 <col:31, col:42> col:42 referenced __args '_Args &&...'
| |   |   |-CompoundStmt 0x7ffe440d5a28 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7ffe440d5a10 <col:7, line:4329:80>
| |   |   |   `-CallExpr 0x7ffe440d59e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4329:80> '<dependent type>'
| |   |   |     |-CallExpr 0x7ffe440d5840 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4329:46> '<dependent type>'
| |   |   |     | |-UnresolvedLookupExpr 0x7ffe440d5778 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4329:41> '<dependent type>' lvalue (no ADL) = 'forward' 0x7ffe44071b80 0x7ffe440720a0
| |   |   |     | `-DeclRefExpr 0x7ffe440d5818 <col:43> '_Fp' lvalue ParmVar 0x7ffe440d4dc8 '__f' '_Fp &&'
| |   |   |     `-PackExpansionExpr 0x7ffe440d59c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4329:77> '<dependent type>'
| |   |   |       `-CallExpr 0x7ffe440d5990 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4329:76> '<dependent type>'
| |   |   |         |-UnresolvedLookupExpr 0x7ffe440d58c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4329:68> '<dependent type>' lvalue (no ADL) = 'forward' 0x7ffe44071b80 0x7ffe440720a0
| |   |   |         `-DeclRefExpr 0x7ffe440d5968 <col:70> '_Args &&...' lvalue ParmVar 0x7ffe440d4ea8 '__args' '_Args &&...'
| |   |   |-AlwaysInlineAttr 0x7ffe440d56c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7ffe440d5710 <col:51, col:74> Hidden
| |   |-ClassTemplateDecl 0x7ffe440d5c58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4335:1, line:4352:1> line:4336:8 __invokable_r
| |   | |-TemplateTypeParmDecl 0x7ffe440d5a48 <line:4335:11, col:17> col:17 referenced class depth 0 index 0 _Ret
| |   | |-TemplateTypeParmDecl 0x7ffe440d5ab8 <col:23, col:29> col:29 referenced class depth 0 index 1 _Fp
| |   | |-TemplateTypeParmDecl 0x7ffe440d5b28 <col:34, col:43> col:43 referenced class depth 0 index 2 ... _Args
| |   | `-CXXRecordDecl 0x7ffe440d5bc0 <line:4336:1, line:4352:1> line:4336:8 struct __invokable_r definition
| |   |   |-private '__check_complete<_Fp>'
| |   |   |-CXXRecordDecl 0x7ffe440d6078 <col:1, col:8> col:8 implicit struct __invokable_r
| |   |   |-TypeAliasDecl 0x7ffe440d64b8 <line:4339:5, col:21> col:11 referenced _Result 'decltype(std::__1::__invoke(std::__1::declval<_Fp>(), std::__1::declval<_Args>()...))'
| |   |   | `-DecltypeType 0x7ffe440d6480 'decltype(std::__1::__invoke(std::__1::declval<_Fp>(), std::__1::declval<_Args>()...))' dependent
| |   |   |   `-CallExpr 0x7ffe440d6400 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4340:74> '<dependent type>'
| |   |   |     |-UnresolvedLookupExpr 0x7ffe440d6140 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4340:16> '<overloaded function type>' lvalue (no ADL) = '__invoke' 0x7ffe440bfe48 0x7ffe440c3ae8 0x7ffe440c6c88 0x7ffe440c9e08 0x7ffe440ccf38 0x7ffe440cf298 0x7ffe440d1698 0x7ffe440d4878
| |   |   |     |-CallExpr 0x7ffe440d62a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4340:45> '<dependent type>'
| |   |   |     | `-UnresolvedLookupExpr 0x7ffe440d6210 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4340:43> '<dependent type>' lvalue (no ADL) = 'declval' 0x7ffe43986450
| |   |   |     `-PackExpansionExpr 0x7ffe440d63d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4340:71> '<dependent type>'
| |   |   |       `-CallExpr 0x7ffe440d63a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4340:70> '<dependent type>'
| |   |   |         `-UnresolvedLookupExpr 0x7ffe440d6310 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4340:68> '<dependent type>' lvalue (no ADL) = 'declval' 0x7ffe43986450
| |   |   `-VarDecl 0x7ffe440d6528 <line:4342:5, line:4351:18> line:4342:23 value 'const _Bool' static cinit
| |   |     `-DependentScopeDeclRefExpr 0x7ffe440d6e40 <line:4343:9, line:4351:18> '<dependent type>' lvalue
| |   |-TypeAliasTemplateDecl 0x7ffe440d7258 <line:4354:1, line:4355:54> col:1 __invokable
| |   | |-TemplateTypeParmDecl 0x7ffe440d6ea0 <line:4354:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7ffe440d6f08 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | `-TypeAliasDecl 0x7ffe440d71f8 <line:4355:1, col:54> col:7 __invokable '__invokable_r<void, _Fp, _Args...>'
| |   |   `-TemplateSpecializationType 0x7ffe440d70c0 '__invokable_r<void, _Fp, _Args...>' dependent __invokable_r
| |   |     |-TemplateArgument type 'void'
| |   |     |-TemplateArgument type '_Fp'
| |   |     `-TemplateArgument type '_Args...'
| |   |-ClassTemplateDecl 0x7ffe440d75c8 <line:4357:1, line:4360:1> line:4358:8 __nothrow_invokable_r_imp
| |   | |-NonTypeTemplateParmDecl 0x7ffe440d72b8 <line:4357:11, col:16> col:16 '_Bool' depth 0 index 0 _IsInvokable
| |   | |-NonTypeTemplateParmDecl 0x7ffe440d7320 <col:30, col:35> col:35 '_Bool' depth 0 index 1 _IsCVVoid
| |   | |-TemplateTypeParmDecl 0x7ffe440d7378 <col:46, col:52> col:52 class depth 0 index 2 _Ret
| |   | |-TemplateTypeParmDecl 0x7ffe440d73e8 <col:58, col:64> col:64 class depth 0 index 3 _Fp
| |   | |-TemplateTypeParmDecl 0x7ffe440d7458 <col:69, col:78> col:78 class depth 0 index 4 ... _Args
| |   | `-CXXRecordDecl 0x7ffe440d7530 <line:4358:1, line:4360:1> line:4358:8 struct __nothrow_invokable_r_imp definition
| |   |   |-CXXRecordDecl 0x7ffe440d79e0 <col:1, col:8> col:8 implicit struct __nothrow_invokable_r_imp
| |   |   `-VarDecl 0x7ffe440d7a88 <line:4359:3, col:29> col:21 value 'const _Bool' static cinit
| |   |     `-CXXBoolLiteralExpr 0x7ffe440d7ae8 <col:29> '_Bool' false
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe440d7fb8 <line:4362:1, line:4372:1> line:4363:8 struct __nothrow_invokable_r_imp definition
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-2...'
| |   | |-TemplateTypeParmDecl 0x7ffe440d7b20 <line:4362:11, col:17> col:17 referenced class depth 0 index 0 _Ret
| |   | |-TemplateTypeParmDecl 0x7ffe440d7b88 <col:23, col:29> col:29 referenced class depth 0 index 1 _Fp
| |   | |-TemplateTypeParmDecl 0x7ffe440d7bf8 <col:34, col:43> col:43 referenced class depth 0 index 2 ... _Args
| |   | |-CXXRecordDecl 0x7ffe440d9600 <line:4363:1, col:8> col:8 implicit referenced struct __nothrow_invokable_r_imp
| |   | |-TypedefDecl 0x7ffe440d96a8 <line:4365:5, col:39> col:39 referenced _ThisT '__nothrow_invokable_r_imp<true, false, type-parameter-0-0, type-parameter-0-1, type-parameter-0-2...>'
| |   | | `-InjectedClassNameType 0x7ffe440d8120 '__nothrow_invokable_r_imp<true, false, type-parameter-0-0, type-parameter-0-1, type-parameter-0-2...>' dependent
| |   | |   `-ClassTemplatePartialSpecialization 0x7ffe440d7fb8 '__nothrow_invokable_r_imp'
| |   | |-FunctionTemplateDecl 0x7ffe440d9960 <line:4367:5, line:4368:38> col:17 __test_noexcept
| |   | | |-TemplateTypeParmDecl 0x7ffe440d9700 <line:4367:15, col:21> col:21 referenced class depth 1 index 0 _Tp
| |   | | `-CXXMethodDecl 0x7ffe440d98c8 <line:4368:5, col:38> col:17 __test_noexcept 'void (_Tp) noexcept' static
| |   | |   `-ParmVarDecl 0x7ffe440d9790 <col:33> col:36 '_Tp'
| |   | `-VarDecl 0x7ffe440d99c8 <line:4370:5, line:4371:76> line:4370:23 value 'const _Bool' static cinit
| |   |   `-CXXNoexceptExpr 0x7ffe440d9ea8 <col:31, line:4371:76> '_Bool'
| |   |     `-CallExpr 0x7ffe440d9e78 <line:4370:40, line:4371:75> '<dependent type>'
| |   |       |-UnresolvedLookupExpr 0x7ffe440d9ac8 <line:4370:40, col:68> '<dependent type>' lvalue (no ADL) = '__test_noexcept' 0x7ffe440d9960
| |   |       `-CallExpr 0x7ffe440d9e40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4371:74> '<dependent type>'
| |   |         |-UnresolvedLookupExpr 0x7ffe440d9b90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4371:16> '<overloaded function type>' lvalue (no ADL) = '__invoke' 0x7ffe440bfe48 0x7ffe440c3ae8 0x7ffe440c6c88 0x7ffe440c9e08 0x7ffe440ccf38 0x7ffe440cf298 0x7ffe440d1698 0x7ffe440d4878
| |   |         |-CallExpr 0x7ffe440d9cf8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4371:45> '<dependent type>'
| |   |         | `-UnresolvedLookupExpr 0x7ffe440d9c60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4371:43> '<dependent type>' lvalue (no ADL) = 'declval' 0x7ffe43986450
| |   |         `-PackExpansionExpr 0x7ffe440d9e20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4371:71> '<dependent type>'
| |   |           `-CallExpr 0x7ffe440d9df8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4371:70> '<dependent type>'
| |   |             `-UnresolvedLookupExpr 0x7ffe440d9d60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4371:68> '<dependent type>' lvalue (no ADL) = 'declval' 0x7ffe43986450
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe440da388 <line:4374:1, line:4379:1> line:4375:8 struct __nothrow_invokable_r_imp definition
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-2...'
| |   | |-TemplateTypeParmDecl 0x7ffe440d9ef0 <line:4374:11, col:17> col:17 referenced class depth 0 index 0 _Ret
| |   | |-TemplateTypeParmDecl 0x7ffe440d9f58 <col:23, col:29> col:29 referenced class depth 0 index 1 _Fp
| |   | |-TemplateTypeParmDecl 0x7ffe440d9fc8 <col:34, col:43> col:43 referenced class depth 0 index 2 ... _Args
| |   | |-CXXRecordDecl 0x7ffe440da760 <line:4375:1, col:8> col:8 implicit struct __nothrow_invokable_r_imp
| |   | `-VarDecl 0x7ffe440da808 <line:4377:5, line:4378:75> line:4377:23 value 'const _Bool' static cinit
| |   |   `-CXXNoexceptExpr 0x7ffe440dab80 <col:31, line:4378:75> '_Bool'
| |   |     `-CallExpr 0x7ffe440dab48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4378:74> '<dependent type>'
| |   |       |-UnresolvedLookupExpr 0x7ffe440da898 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4378:16> '<overloaded function type>' lvalue (no ADL) = '__invoke' 0x7ffe440bfe48 0x7ffe440c3ae8 0x7ffe440c6c88 0x7ffe440c9e08 0x7ffe440ccf38 0x7ffe440cf298 0x7ffe440d1698 0x7ffe440d4878
| |   |       |-CallExpr 0x7ffe440daa00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4378:45> '<dependent type>'
| |   |       | `-UnresolvedLookupExpr 0x7ffe440da968 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4378:43> '<dependent type>' lvalue (no ADL) = 'declval' 0x7ffe43986450
| |   |       `-PackExpansionExpr 0x7ffe440dab28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4378:71> '<dependent type>'
| |   |         `-CallExpr 0x7ffe440dab00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4378:70> '<dependent type>'
| |   |           `-UnresolvedLookupExpr 0x7ffe440daa68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4378:68> '<dependent type>' lvalue (no ADL) = 'declval' 0x7ffe43986450
| |   |-TypeAliasTemplateDecl 0x7ffe440db3d8 <line:4381:1, line:4387:5> line:4382:1 __nothrow_invokable_r
| |   | |-TemplateTypeParmDecl 0x7ffe440dabc8 <line:4381:11, col:17> col:17 referenced class depth 0 index 0 _Ret
| |   | |-TemplateTypeParmDecl 0x7ffe440dac38 <col:23, col:29> col:29 referenced class depth 0 index 1 _Fp
| |   | |-TemplateTypeParmDecl 0x7ffe440daca8 <col:34, col:43> col:43 referenced class depth 0 index 2 ... _Args
| |   | `-TypeAliasDecl 0x7ffe440db378 <line:4382:1, line:4387:5> line:4382:7 __nothrow_invokable_r '__nothrow_invokable_r_imp<__invokable_r<_Ret, _Fp, _Args...>::value, is_void<_Ret>::value, _Ret, _Fp, _Args...>'
| |   |   `-TemplateSpecializationType 0x7ffe440db1b0 '__nothrow_invokable_r_imp<__invokable_r<_Ret, _Fp, _Args...>::value, is_void<_Ret>::value, _Ret, _Fp, _Args...>' dependent __nothrow_invokable_r_imp
| |   |     |-TemplateArgument expr
| |   |     | `-DependentScopeDeclRefExpr 0x7ffe440daf10 <line:4384:13, col:49> '<dependent type>' lvalue
| |   |     |-TemplateArgument expr
| |   |     | `-DependentScopeDeclRefExpr 0x7ffe440db030 <line:4385:13, col:28> '<dependent type>' lvalue
| |   |     |-TemplateArgument type '_Ret'
| |   |     |-TemplateArgument type '_Fp'
| |   |     `-TemplateArgument type '_Args...'
| |   |-ClassTemplateDecl 0x7ffe440db600 <line:4389:1, line:4395:1> line:4390:8 __invoke_of
| |   | |-TemplateTypeParmDecl 0x7ffe440db428 <line:4389:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7ffe440db498 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | `-CXXRecordDecl 0x7ffe440db528 <line:4390:1, line:4395:1> line:4390:8 struct __invoke_of definition
| |   |   |-public 'enable_if<__invokable<_Fp, _Args...>::value, typename __invokable_r<void, _Fp, _Args...>::_Result>'
| |   |   `-CXXRecordDecl 0x7ffe440dc068 <col:1, col:8> col:8 implicit struct __invoke_of
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe440dc428 <line:4399:1, line:4403:1> line:4400:28 class result_of definition
| |   | |-public '__invoke_of<_Fp, _Args...>'
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1...)'
| |   | |-TemplateTypeParmDecl 0x7ffe440dc120 <line:4399:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7ffe440dc188 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | |-TypeVisibilityAttr 0x7ffe440dc580 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7ffe440dc7f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4400:1, col:28> col:28 implicit class result_of
| |   |-TypeAliasTemplateDecl 0x7ffe440dcaf0 <line:4406:1, col:67> col:22 result_of_t
| |   | |-TemplateTypeParmDecl 0x7ffe440dc8b0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7ffe440dca90 <col:22, col:67> col:28 result_of_t 'typename result_of<_Tp>::type'
| |   |   `-DependentNameType 0x7ffe440dca20 'typename result_of<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7ffe440dcc58 <line:4440:1, col:29> col:29 __is_swappable
| |   | |-TemplateTypeParmDecl 0x7ffe440dcb40 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe440dcbc0 <col:22, col:29> col:29 struct __is_swappable
| |   |-ClassTemplateDecl 0x7ffe440dcf88 <line:4441:1, col:29> col:29 __is_nothrow_swappable
| |   | |-TemplateTypeParmDecl 0x7ffe440dce68 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe440dcef0 <col:22, col:29> col:29 struct __is_nothrow_swappable
| |   |-FunctionTemplateDecl 0x7ffe440ddb68 <line:4443:1, line:4460:1> line:4454:1 swap
| |   | |-TemplateTypeParmDecl 0x7ffe440dd198 <line:4443:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7ffe440ddad0 <line:4444:1, line:4460:1> line:4454:1 swap 'typename enable_if<is_move_constructible<_Tp>::value && is_move_assignable<_Tp>::value>::type (_Tp &, _Tp &) noexcept(is_nothrow_move_constructible<_Tp>::value && is_nothrow_move_assignable<_Tp>::value)' inline
| |   |   |-ParmVarDecl 0x7ffe440dd6b8 <col:6, col:11> col:11 referenced __x '_Tp &'
| |   |   |-ParmVarDecl 0x7ffe440dd728 <col:16, col:21> col:21 referenced __y '_Tp &'
| |   |   |-CompoundStmt 0x7ffe440de048 <line:4456:1, line:4460:1>
| |   |   | |-DeclStmt 0x7ffe440dddd0 <line:4457:5, col:30>
| |   |   | | `-VarDecl 0x7ffe440ddcb8 <col:5, col:29> col:9 referenced __t '_Tp' callinit
| |   |   | |   `-ParenListExpr 0x7ffe440ddda0 <col:12, col:29> 'NULL TYPE'
| |   |   | |     `-CallExpr 0x7ffe440ddd40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4457:28> '<dependent type>'
| |   |   | |       |-UnresolvedLookupExpr 0x7ffe440ddc50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4457:20> '<overloaded function type>' lvalue (no ADL) = 'move' 0x7ffe44071438
| |   |   | |       `-DeclRefExpr 0x7ffe440ddd18 <col:25> '_Tp' lvalue ParmVar 0x7ffe440dd6b8 '__x' '_Tp &'
| |   |   | |-BinaryOperator 0x7ffe440ddef0 <line:4458:5, col:26> '<dependent type>' '='
| |   |   | | |-DeclRefExpr 0x7ffe440ddde8 <col:5> '_Tp' lvalue ParmVar 0x7ffe440dd6b8 '__x' '_Tp &'
| |   |   | | `-CallExpr 0x7ffe440ddec0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4458:26> '<dependent type>'
| |   |   | |   |-UnresolvedLookupExpr 0x7ffe440dde40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4458:18> '<overloaded function type>' lvalue (no ADL) = 'move' 0x7ffe44071438
| |   |   | |   `-DeclRefExpr 0x7ffe440dde98 <col:23> '_Tp' lvalue ParmVar 0x7ffe440dd728 '__y' '_Tp &'
| |   |   | `-BinaryOperator 0x7ffe440de020 <line:4459:5, col:26> '<dependent type>' '='
| |   |   |   |-DeclRefExpr 0x7ffe440ddf18 <col:5> '_Tp' lvalue ParmVar 0x7ffe440dd728 '__y' '_Tp &'
| |   |   |   `-CallExpr 0x7ffe440ddff0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4459:26> '<dependent type>'
| |   |   |     |-UnresolvedLookupExpr 0x7ffe440ddf70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4459:18> '<overloaded function type>' lvalue (no ADL) = 'move' 0x7ffe44071438
| |   |   |     `-DeclRefExpr 0x7ffe440ddfc8 <col:23> '_Tp' lvalue Var 0x7ffe440ddcb8 '__t' '_Tp'
| |   |   |-AlwaysInlineAttr 0x7ffe440ddbc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7ffe440ddc10 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7ffe440de9d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4462:1, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:759:35> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4467:1 swap
| |   | |-TemplateTypeParmDecl 0x7ffe440de078 <line:4462:10, col:16> col:16 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7ffe440de0f8 <col:21, col:28> col:28 referenced 'size_t':'unsigned long' depth 0 index 1 _Np
| |   | `-FunctionDecl 0x7ffe440de940 <line:4463:1, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:759:35> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4467:1 swap 'typename enable_if<__is_swappable<_Tp>::value>::type (_Tp (&)[_Np], _Tp (&)[_Np]) noexcept(__is_nothrow_swappable<_Tp>::value)' inline
| |   |   |-ParmVarDecl 0x7ffe440de598 <col:6, col:20> col:12 __a '_Tp (&)[_Np]'
| |   |   |-ParmVarDecl 0x7ffe440de6e8 <col:23, col:37> col:29 __b '_Tp (&)[_Np]'
| |   |   |-AlwaysInlineAttr 0x7ffe440dea38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7ffe440dea80 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7ffe440df0f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4469:1, line:4478:1> line:4472:1 iter_swap
| |   | |-TemplateTypeParmDecl 0x7ffe440dea90 <line:4469:11, col:17> col:17 referenced class depth 0 index 0 _ForwardIterator1
| |   | |-TemplateTypeParmDecl 0x7ffe440deaf8 <col:36, col:42> col:42 referenced class depth 0 index 1 _ForwardIterator2
| |   | `-FunctionDecl 0x7ffe440df060 <line:4470:1, line:4478:1> line:4472:1 iter_swap 'void (_ForwardIterator1, _ForwardIterator2) noexcept(noexcept(swap(*std::__1::declval<_ForwardIterator1>(), *std::__1::declval<_ForwardIterator2>())))' inline
| |   |   |-ParmVarDecl 0x7ffe440debc8 <col:11, col:29> col:29 referenced __a '_ForwardIterator1'
| |   |   |-ParmVarDecl 0x7ffe440dec38 <col:34, col:52> col:52 referenced __b '_ForwardIterator2'
| |   |   |-CompoundStmt 0x7ffe440df2d8 <line:4476:1, line:4478:1>
| |   |   | `-CallExpr 0x7ffe440df2a0 <line:4477:5, col:20> '<dependent type>'
| |   |   |   |-UnresolvedLookupExpr 0x7ffe440df1b0 <col:5> '<overloaded function type>' lvalue (ADL) = 'swap' 0x7ffe440de9d8 0x7ffe440ddb68
| |   |   |   |-UnaryOperator 0x7ffe440df238 <col:10, col:11> '<dependent type>' prefix '*'
| |   |   |   | `-DeclRefExpr 0x7ffe440df210 <col:11> '_ForwardIterator1' lvalue ParmVar 0x7ffe440debc8 '__a' '_ForwardIterator1'
| |   |   |   `-UnaryOperator 0x7ffe440df280 <col:16, col:17> '<dependent type>' prefix '*'
| |   |   |     `-DeclRefExpr 0x7ffe440df258 <col:17> '_ForwardIterator2' lvalue ParmVar 0x7ffe440dec38 '__b' '_ForwardIterator2'
| |   |   |-AlwaysInlineAttr 0x7ffe440df158 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7ffe440df1a0 <col:51, col:74> Hidden
| |   |-NamespaceDecl 0x7ffe440df2f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4482:1, line:4521:1> line:4482:11 __detail
| |   | |-ClassTemplateDecl 0x7ffe440df7f8 <line:4486:1, line:4502:1> line:4488:8 __swappable_with
| |   | | |-TemplateTypeParmDecl 0x7ffe440df360 <line:4486:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | | |-TemplateTypeParmDecl 0x7ffe440df3d8 <col:22, col:34> col:28 referenced class depth 0 index 1 _Up
| |   | | | `-TemplateArgument type '_Tp'
| |   | | |-NonTypeTemplateParmDecl 0x7ffe440df6e0 <line:4487:11, col:66> col:16 '_Bool' depth 0 index 2 _NotVoid
| |   | | | `-TemplateArgument expr
| |   | | |   `-BinaryOperator 0x7ffe440df6a8 <col:27, col:66> '<dependent type>' '&&'
| |   | | |     |-UnaryOperator 0x7ffe440df558 <col:27, col:42> '<dependent type>' prefix '!'
| |   | | |     | `-DependentScopeDeclRefExpr 0x7ffe440df518 <col:28, col:42> '<dependent type>' lvalue
| |   | | |     `-UnaryOperator 0x7ffe440df688 <col:51, col:66> '<dependent type>' prefix '!'
| |   | | |       `-DependentScopeDeclRefExpr 0x7ffe440df648 <col:52, col:66> '<dependent type>' lvalue
| |   | | `-CXXRecordDecl 0x7ffe440df760 <line:4488:1, line:4502:1> line:4488:8 struct __swappable_with definition
| |   | |   |-CXXRecordDecl 0x7ffe440dfb00 <col:1, col:8> col:8 implicit struct __swappable_with
| |   | |   |-FunctionTemplateDecl 0x7ffe440e01b8 <line:4490:5, line:4492:20> col:5 __test_swap
| |   | |   | |-TemplateTypeParmDecl 0x7ffe440dfb98 <line:4490:15, col:21> col:21 referenced class depth 1 index 0 _LHS
| |   | |   | |-TemplateTypeParmDecl 0x7ffe440dfc08 <col:27, col:33> col:33 referenced class depth 1 index 1 _RHS
| |   | |   | `-CXXMethodDecl 0x7ffe440e0120 <line:4491:5, line:4492:20> col:5 __test_swap 'decltype(swap(std::__1::declval<_LHS>(), std::__1::declval<_RHS>())) (int)' static
| |   | |   |   `-ParmVarDecl 0x7ffe440dff78 <col:17> col:20 'int'
| |   | |   |-FunctionTemplateDecl 0x7ffe440e0478 <line:4493:5, line:4494:34> col:18 __test_swap
| |   | |   | |-TemplateTypeParmDecl 0x7ffe440e0210 <line:4493:15> col:15 class depth 1 index 0
| |   | |   | |-TemplateTypeParmDecl 0x7ffe440e0278 <col:22> col:22 class depth 1 index 1
| |   | |   | `-CXXMethodDecl 0x7ffe440e03e0 <line:4494:5, col:34> col:18 __test_swap 'struct std::__1::__nat (long)' static
| |   | |   |   `-ParmVarDecl 0x7ffe440e0320 <col:30> col:34 'long'
| |   | |   |-TypedefDecl 0x7ffe440e06c8 <line:4497:5, col:50> col:50 referenced __swap1 'decltype((__test_swap<_Tp, _Up>(0)))'
| |   | |   | `-DecltypeType 0x7ffe440e0690 'decltype((__test_swap<_Tp, _Up>(0)))' dependent
| |   | |   |   `-ParenExpr 0x7ffe440e0628 <col:22, col:47> '<dependent type>'
| |   | |   |     `-CallExpr 0x7ffe440e05f8 <col:23, col:46> '<dependent type>'
| |   | |   |       |-UnresolvedLookupExpr 0x7ffe440e0508 <col:23, col:43> '<dependent type>' lvalue (no ADL) = '__test_swap' 0x7ffe440e0478 0x7ffe440e01b8
| |   | |   |       `-IntegerLiteral 0x7ffe440e05d8 <col:45> 'int' 0
| |   | |   |-TypedefDecl 0x7ffe440e0918 <line:4498:5, col:50> col:50 referenced __swap2 'decltype((__test_swap<_Up, _Tp>(0)))'
| |   | |   | `-DecltypeType 0x7ffe440e08e0 'decltype((__test_swap<_Up, _Tp>(0)))' dependent
| |   | |   |   `-ParenExpr 0x7ffe440e0878 <col:22, col:47> '<dependent type>'
| |   | |   |     `-CallExpr 0x7ffe440e0848 <col:23, col:46> '<dependent type>'
| |   | |   |       |-UnresolvedLookupExpr 0x7ffe440e0758 <col:23, col:43> '<dependent type>' lvalue (no ADL) = '__test_swap' 0x7ffe440e0478 0x7ffe440e01b8
| |   | |   |       `-IntegerLiteral 0x7ffe440e0828 <col:45> 'int' 0
| |   | |   `-VarDecl 0x7ffe440e0980 <line:4500:5, line:4501:57> line:4500:23 value 'const _Bool' static cinit
| |   | |     `-BinaryOperator 0x7ffe440e0db8 <col:31, line:4501:57> '<dependent type>' '&&'
| |   | |       |-UnaryOperator 0x7ffe440e0ba8 <line:4500:31, col:57> '<dependent type>' prefix '!'
| |   | |       | `-DependentScopeDeclRefExpr 0x7ffe440e0b68 <col:32, col:57> '<dependent type>' lvalue
| |   | |       `-UnaryOperator 0x7ffe440e0d98 <line:4501:31, col:57> '<dependent type>' prefix '!'
| |   | |         `-DependentScopeDeclRefExpr 0x7ffe440e0d58 <col:32, col:57> '<dependent type>' lvalue
| |   | |-ClassTemplatePartialSpecializationDecl 0x7ffe440e10c8 <line:4504:1, line:4505:57> col:8 struct __swappable_with definition
| |   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | |-TemplateArgument type 'type-parameter-0-1'
| |   | | |-TemplateArgument integral 0
| |   | | |-TemplateTypeParmDecl 0x7ffe440e0e00 <line:4504:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | | |-TemplateTypeParmDecl 0x7ffe440e0e68 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | | `-CXXRecordDecl 0x7ffe440e13f0 <line:4505:1, col:8> col:8 implicit struct __swappable_with
| |   | |-ClassTemplateDecl 0x7ffe440e1b40 <line:4507:1, line:4516:1> line:4508:8 __nothrow_swappable_with
| |   | | |-TemplateTypeParmDecl 0x7ffe440e14a8 <line:4507:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | | |-TemplateTypeParmDecl 0x7ffe440e1528 <col:22, col:34> col:28 referenced class depth 0 index 1 _Up
| |   | | | `-TemplateArgument type '_Tp'
| |   | | |-NonTypeTemplateParmDecl 0x7ffe440e1a28 <col:39, col:85> col:44 '_Bool' depth 0 index 2 _Swappable
| |   | | | `-TemplateArgument expr
| |   | | |   `-DependentScopeDeclRefExpr 0x7ffe440e19d8 <col:57, col:85> '<dependent type>' lvalue
| |   | | `-CXXRecordDecl 0x7ffe440e1aa8 <line:4508:1, line:4516:1> line:4508:8 struct __nothrow_swappable_with definition
| |   | |   |-CXXRecordDecl 0x7ffe440e1e40 <col:1, col:8> col:8 implicit struct __nothrow_swappable_with
| |   | |   `-VarDecl 0x7ffe440e1ee8 <line:4509:3, line:4512:66> line:4509:21 value 'const _Bool' static cinit
| |   | |     `-BinaryOperator 0x7ffe440e24c8 <line:4511:7, line:4512:66> '_Bool' '&&'
| |   | |       |-CXXNoexceptExpr 0x7ffe440e21e0 <line:4511:7, col:66> '_Bool'
| |   | |       | `-CallExpr 0x7ffe440e21a8 <col:16, col:65> '<dependent type>'
| |   | |       |   |-UnresolvedLookupExpr 0x7ffe440e1f48 <col:16> '<overloaded function type>' lvalue (ADL) = 'swap' 0x7ffe440de9d8 0x7ffe440ddb68
| |   | |       |   |-CallExpr 0x7ffe440e2080 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4511:41> '<dependent type>'
| |   | |       |   | `-UnresolvedLookupExpr 0x7ffe440e1fe8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4511:39> '<dependent type>' lvalue (no ADL) = 'declval' 0x7ffe43986450
| |   | |       |   `-CallExpr 0x7ffe440e2180 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4511:64> '<dependent type>'
| |   | |       |     `-UnresolvedLookupExpr 0x7ffe440e20e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4511:62> '<dependent type>' lvalue (no ADL) = 'declval' 0x7ffe43986450
| |   | |       `-CXXNoexceptExpr 0x7ffe440e24a0 <line:4512:7, col:66> '_Bool'
| |   | |         `-CallExpr 0x7ffe440e2468 <col:16, col:65> '<dependent type>'
| |   | |           |-UnresolvedLookupExpr 0x7ffe440e2208 <col:16> '<overloaded function type>' lvalue (ADL) = 'swap' 0x7ffe440de9d8 0x7ffe440ddb68
| |   | |           |-CallExpr 0x7ffe440e2340 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4512:41> '<dependent type>'
| |   | |           | `-UnresolvedLookupExpr 0x7ffe440e22a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4512:39> '<dependent type>' lvalue (no ADL) = 'declval' 0x7ffe43986450
| |   | |           `-CallExpr 0x7ffe440e2440 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4512:64> '<dependent type>'
| |   | |             `-UnresolvedLookupExpr 0x7ffe440e23a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4512:62> '<dependent type>' lvalue (no ADL) = 'declval' 0x7ffe43986450
| |   | `-ClassTemplatePartialSpecializationDecl 0x7ffe440e27d8 <line:4518:1, line:4519:64> col:8 struct __nothrow_swappable_with definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TemplateArgument type 'type-parameter-0-0'
| |   |   |-TemplateArgument type 'type-parameter-0-1'
| |   |   |-TemplateArgument integral 0
| |   |   |-TemplateTypeParmDecl 0x7ffe440e2510 <line:4518:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   |   |-TemplateTypeParmDecl 0x7ffe440e2578 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   |   `-CXXRecordDecl 0x7ffe440e2b00 <line:4519:1, col:8> col:8 implicit struct __nothrow_swappable_with
| |   |-ClassTemplateDecl 0x7ffe440e2cd8 prev 0x7ffe440dcc58 <line:4523:1, line:4527:1> line:4524:8 __is_swappable
| |   | |-TemplateTypeParmDecl 0x7ffe440e2bb8 <line:4523:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe440e2c40 prev 0x7ffe440dcbc0 <line:4524:1, line:4527:1> line:4524:8 struct __is_swappable definition
| |   |   |-public 'integral_constant<_Bool, __detail::__swappable_with<_Tp &>::value>'
| |   |   `-CXXRecordDecl 0x7ffe440e3448 <col:1, col:8> col:8 implicit struct __is_swappable
| |   |-ClassTemplateDecl 0x7ffe440e3698 prev 0x7ffe440dcf88 <line:4529:1, line:4533:1> line:4530:8 __is_nothrow_swappable
| |   | |-TemplateTypeParmDecl 0x7ffe440e3500 <line:4529:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe440e3600 prev 0x7ffe440dcef0 <line:4530:1, line:4533:1> line:4530:8 struct __is_nothrow_swappable definition
| |   |   |-public 'integral_constant<_Bool, __detail::__nothrow_swappable_with<_Tp &>::value>'
| |   |   `-CXXRecordDecl 0x7ffe440e3ec8 <col:1, col:8> col:8 implicit struct __is_nothrow_swappable
| |   |-ClassTemplateDecl 0x7ffe440e4098 <line:4589:1, line:4593:1> line:4590:8 underlying_type
| |   | |-TemplateTypeParmDecl 0x7ffe440e3f80 <line:4589:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe440e4000 <line:4590:1, line:4593:1> line:4590:8 struct underlying_type definition
| |   |   |-CXXRecordDecl 0x7ffe440e4310 <col:1, col:8> col:8 implicit struct underlying_type
| |   |   `-TypedefDecl 0x7ffe440e4450 <line:4592:5, col:42> col:42 type '__underlying_type(_Tp)'
| |   |     `-UnaryTransformType 0x7ffe440e4400 '__underlying_type(_Tp)' dependent underlying_type
| |   |       `-TemplateTypeParmType 0x7ffe440e3fc0 '_Tp' dependent depth 0 index 0
| |   |         `-TemplateTypeParm 0x7ffe440e3f80 '_Tp'
| |   |-TypeAliasTemplateDecl 0x7ffe440e4710 <line:4596:1, col:79> col:22 underlying_type_t
| |   | |-TemplateTypeParmDecl 0x7ffe440e44c8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7ffe440e46b0 <col:22, col:79> col:28 underlying_type_t 'typename underlying_type<_Tp>::type'
| |   |   `-DependentNameType 0x7ffe440e4640 'typename underlying_type<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7ffe440e49f8 <line:4612:1, line:4617:1> line:4613:8 __sfinae_underlying_type
| |   | |-TemplateTypeParmDecl 0x7ffe440e4760 <line:4612:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7ffe440e48e8 <col:22, col:43> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7ffe440e4898 <col:29, col:43> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7ffe440e4960 <line:4613:1, line:4617:1> line:4613:8 struct __sfinae_underlying_type definition
| |   |   |-CXXRecordDecl 0x7ffe440e4cc0 <col:1, col:8> col:8 implicit struct __sfinae_underlying_type
| |   |   |-TypedefDecl 0x7ffe440e4e80 <line:4615:5, col:49> col:49 referenced type 'typename underlying_type<_Tp>::type'
| |   |   | `-DependentNameType 0x7ffe440e4e10 'typename underlying_type<_Tp>::type' dependent
| |   |   `-TypedefDecl 0x7ffe440e5038 <line:4616:5, col:37> col:37 __promoted_type 'decltype(((std::__1::__sfinae_underlying_type::type)1) + 0)'
| |   |     `-DecltypeType 0x7ffe440e5000 'decltype(((std::__1::__sfinae_underlying_type::type)1) + 0)' dependent
| |   |       `-BinaryOperator 0x7ffe440e4f98 <col:22, col:34> '<dependent type>' '+'
| |   |         |-ParenExpr 0x7ffe440e4f58 <col:22, col:30> 'std::__1::__sfinae_underlying_type::type':'typename underlying_type<_Tp>::type'
| |   |         | `-CStyleCastExpr 0x7ffe440e4f30 <col:23, col:29> 'std::__1::__sfinae_underlying_type::type':'typename underlying_type<_Tp>::type' <Dependent>
| |   |         |   `-IntegerLiteral 0x7ffe440e4f00 <col:29> 'int' 1
| |   |         `-IntegerLiteral 0x7ffe440e4f78 <col:34> 'int' 0
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe440e5290 <line:4619:1, line:4620:46> col:8 struct __sfinae_underlying_type definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7ffe440e50b0 <line:4619:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe440e5520 <line:4620:1, col:8> col:8 implicit struct __sfinae_underlying_type
| |   |-FunctionDecl 0x7ffe440e66e8 <line:4622:1, line:4623:54> col:5 __convert_to_integral 'int (int)' inline
| |   | |-ParmVarDecl 0x7ffe440e6620 <col:27, col:31> col:31 used __val 'int'
| |   | |-CompoundStmt 0x7ffe440e6838 <col:38, col:54>
| |   | | `-ReturnStmt 0x7ffe440e6820 <col:40, col:47>
| |   | |   `-ImplicitCastExpr 0x7ffe440e6808 <col:47> 'int' <LValueToRValue>
| |   | |     `-DeclRefExpr 0x7ffe440e67e0 <col:47> 'int' lvalue ParmVar 0x7ffe440e6620 '__val' 'int'
| |   | |-AlwaysInlineAttr 0x7ffe440e6788 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | `-VisibilityAttr 0x7ffe440e67d0 <col:51, col:74> Hidden
| |   |-FunctionDecl 0x7ffe440e6968 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4625:1, line:4626:64> col:10 __convert_to_integral 'unsigned int (unsigned int)' inline
| |   | |-ParmVarDecl 0x7ffe440e68a0 <col:32, col:41> col:41 used __val 'unsigned int'
| |   | |-CompoundStmt 0x7ffe440e6ab8 <col:48, col:64>
| |   | | `-ReturnStmt 0x7ffe440e6aa0 <col:50, col:57>
| |   | |   `-ImplicitCastExpr 0x7ffe440e6a88 <col:57> 'unsigned int' <LValueToRValue>
| |   | |     `-DeclRefExpr 0x7ffe440e6a60 <col:57> 'unsigned int' lvalue ParmVar 0x7ffe440e68a0 '__val' 'unsigned int'
| |   | |-AlwaysInlineAttr 0x7ffe440e6a08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | `-VisibilityAttr 0x7ffe440e6a50 <col:51, col:74> Hidden
| |   |-FunctionDecl 0x7ffe440e6be8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4628:1, line:4629:56> col:6 __convert_to_integral 'long (long)' inline
| |   | |-ParmVarDecl 0x7ffe440e6b20 <col:28, col:33> col:33 used __val 'long'
| |   | |-CompoundStmt 0x7ffe440e6d38 <col:40, col:56>
| |   | | `-ReturnStmt 0x7ffe440e6d20 <col:42, col:49>
| |   | |   `-ImplicitCastExpr 0x7ffe440e6d08 <col:49> 'long' <LValueToRValue>
| |   | |     `-DeclRefExpr 0x7ffe440e6ce0 <col:49> 'long' lvalue ParmVar 0x7ffe440e6b20 '__val' 'long'
| |   | |-AlwaysInlineAttr 0x7ffe440e6c88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | `-VisibilityAttr 0x7ffe440e6cd0 <col:51, col:74> Hidden
| |   |-FunctionDecl 0x7ffe440e6e68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4631:1, line:4632:74> col:15 __convert_to_integral 'unsigned long (unsigned long)' inline
| |   | |-ParmVarDecl 0x7ffe440e6da0 <col:37, col:51> col:51 used __val 'unsigned long'
| |   | |-CompoundStmt 0x7ffe440e6fb8 <col:58, col:74>
| |   | | `-ReturnStmt 0x7ffe440e6fa0 <col:60, col:67>
| |   | |   `-ImplicitCastExpr 0x7ffe440e6f88 <col:67> 'unsigned long' <LValueToRValue>
| |   | |     `-DeclRefExpr 0x7ffe440e6f60 <col:67> 'unsigned long' lvalue ParmVar 0x7ffe440e6da0 '__val' 'unsigned long'
| |   | |-AlwaysInlineAttr 0x7ffe440e6f08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | `-VisibilityAttr 0x7ffe440e6f50 <col:51, col:74> Hidden
| |   |-FunctionDecl 0x7ffe440e70e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4634:1, line:4635:66> col:11 __convert_to_integral 'long long (long long)' inline
| |   | |-ParmVarDecl 0x7ffe440e7020 <col:33, col:43> col:43 used __val 'long long'
| |   | |-CompoundStmt 0x7ffe440e7238 <col:50, col:66>
| |   | | `-ReturnStmt 0x7ffe440e7220 <col:52, col:59>
| |   | |   `-ImplicitCastExpr 0x7ffe440e7208 <col:59> 'long long' <LValueToRValue>
| |   | |     `-DeclRefExpr 0x7ffe440e71e0 <col:59> 'long long' lvalue ParmVar 0x7ffe440e7020 '__val' 'long long'
| |   | |-AlwaysInlineAttr 0x7ffe440e7188 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | `-VisibilityAttr 0x7ffe440e71d0 <col:51, col:74> Hidden
| |   |-FunctionDecl 0x7ffe440e7368 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4637:1, line:4638:83> col:20 __convert_to_integral 'unsigned long long (unsigned long long)' inline
| |   | |-ParmVarDecl 0x7ffe440e72a0 <col:42, col:61> col:61 used __val 'unsigned long long'
| |   | |-CompoundStmt 0x7ffe440e74b8 <col:68, col:83>
| |   | | `-ReturnStmt 0x7ffe440e74a0 <col:69, col:76>
| |   | |   `-ImplicitCastExpr 0x7ffe440e7488 <col:76> 'unsigned long long' <LValueToRValue>
| |   | |     `-DeclRefExpr 0x7ffe440e7460 <col:76> 'unsigned long long' lvalue ParmVar 0x7ffe440e72a0 '__val' 'unsigned long long'
| |   | |-AlwaysInlineAttr 0x7ffe440e7408 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | `-VisibilityAttr 0x7ffe440e7450 <col:51, col:74> Hidden
| |   |-FunctionDecl 0x7ffe440e7620 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4641:1, line:4642:68> col:12 __convert_to_integral '__int128_t (__int128_t)' inline
| |   | |-ParmVarDecl 0x7ffe440e7518 <col:34, col:45> col:45 used __val '__int128_t':'__int128'
| |   | |-CompoundStmt 0x7ffe440e7770 <col:52, col:68>
| |   | | `-ReturnStmt 0x7ffe440e7758 <col:54, col:61>
| |   | |   `-ImplicitCastExpr 0x7ffe440e7740 <col:61> '__int128_t':'__int128' <LValueToRValue>
| |   | |     `-DeclRefExpr 0x7ffe440e7718 <col:61> '__int128_t':'__int128' lvalue ParmVar 0x7ffe440e7518 '__val' '__int128_t':'__int128'
| |   | |-AlwaysInlineAttr 0x7ffe440e76c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | `-VisibilityAttr 0x7ffe440e7708 <col:51, col:74> Hidden
| |   |-FunctionDecl 0x7ffe440e78d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4644:1, line:4645:70> col:13 __convert_to_integral '__uint128_t (__uint128_t)' inline
| |   | |-ParmVarDecl 0x7ffe440e77d0 <col:35, col:47> col:47 used __val '__uint128_t':'unsigned __int128'
| |   | |-CompoundStmt 0x7ffe440e7a20 <col:54, col:70>
| |   | | `-ReturnStmt 0x7ffe440e7a08 <col:56, col:63>
| |   | |   `-ImplicitCastExpr 0x7ffe440e79f0 <col:63> '__uint128_t':'unsigned __int128' <LValueToRValue>
| |   | |     `-DeclRefExpr 0x7ffe440e79c8 <col:63> '__uint128_t':'unsigned __int128' lvalue ParmVar 0x7ffe440e77d0 '__val' '__uint128_t':'unsigned __int128'
| |   | |-AlwaysInlineAttr 0x7ffe440e7970 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | `-VisibilityAttr 0x7ffe440e79b8 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7ffe440e7f68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4648:1, line:4651:50> col:1 __convert_to_integral
| |   | |-TemplateTypeParmDecl 0x7ffe440e7a40 <line:4648:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7ffe440e7ed0 <line:4649:1, line:4651:50> col:1 __convert_to_integral 'typename __sfinae_underlying_type<_Tp>::__promoted_type (_Tp)' inline
| |   |   |-ParmVarDecl 0x7ffe440e7dc0 <col:23, col:27> col:27 referenced __val '_Tp'
| |   |   |-CompoundStmt 0x7ffe440e8058 <col:34, col:50>
| |   |   | `-ReturnStmt 0x7ffe440e8040 <col:36, col:43>
| |   |   |   `-DeclRefExpr 0x7ffe440e8018 <col:43> '_Tp' lvalue ParmVar 0x7ffe440e7dc0 '__val' '_Tp'
| |   |   |-AlwaysInlineAttr 0x7ffe440e7fc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7ffe440e8008 <col:51, col:74> Hidden
| |   |-ClassTemplateDecl 0x7ffe440e8198 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4655:1, line:4665:1> line:4656:8 __has_operator_addressof_member_imp
| |   | |-TemplateTypeParmDecl 0x7ffe440e8078 <line:4655:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe440e8100 <line:4656:1, line:4665:1> line:4656:8 struct __has_operator_addressof_member_imp definition
| |   |   |-CXXRecordDecl 0x7ffe440e8410 <col:1, col:8> col:8 implicit struct __has_operator_addressof_member_imp
| |   |   |-FunctionTemplateDecl 0x7ffe440e8b18 <line:4658:5, line:4660:95> line:4659:21 __test
| |   |   | |-TemplateTypeParmDecl 0x7ffe440e84a8 <line:4658:15, col:21> col:21 referenced class depth 1 index 0 _Up
| |   |   | `-CXXMethodDecl 0x7ffe440e8a80 <line:4659:9, line:4660:95> line:4659:21 __test 'auto (int) -> typename __select_2nd<decltype(std::__1::declval<_Up>().operator&()), true_type>::type' static
| |   |   |   `-ParmVarDecl 0x7ffe440e8548 <col:28> col:31 'int'
| |   |   |-FunctionTemplateDecl 0x7ffe440e8db8 <line:4661:5, line:4662:37> col:21 __test
| |   |   | |-TemplateTypeParmDecl 0x7ffe440e8b70 <line:4661:15> col:15 class depth 1 index 0
| |   |   | `-CXXMethodDecl 0x7ffe440e8d20 <line:4662:9, col:37> col:21 __test 'auto (long) -> std::__1::false_type' static
| |   |   |   `-ParmVarDecl 0x7ffe440e8c08 <col:28> col:32 'long'
| |   |   `-VarDecl 0x7ffe440e8e20 <line:4664:5, col:57> col:23 value 'const _Bool' static cinit
| |   |     `-DependentScopeDeclRefExpr 0x7ffe440e9058 <col:31, col:57> '<dependent type>' lvalue
| |   |-ClassTemplateDecl 0x7ffe440e91d8 <line:4667:1, line:4677:1> line:4668:8 __has_operator_addressof_free_imp
| |   | |-TemplateTypeParmDecl 0x7ffe440e90b8 <line:4667:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe440e9140 <line:4668:1, line:4677:1> line:4668:8 struct __has_operator_addressof_free_imp definition
| |   |   |-CXXRecordDecl 0x7ffe440e9450 <col:1, col:8> col:8 implicit struct __has_operator_addressof_free_imp
| |   |   |-FunctionTemplateDecl 0x7ffe440e9b58 <line:4670:5, line:4672:94> line:4671:21 __test
| |   |   | |-TemplateTypeParmDecl 0x7ffe440e94e8 <line:4670:15, col:21> col:21 referenced class depth 1 index 0 _Up
| |   |   | `-CXXMethodDecl 0x7ffe440e9ac0 <line:4671:9, line:4672:94> line:4671:21 __test 'auto (int) -> typename __select_2nd<decltype(operator&(std::__1::declval<_Up>())), true_type>::type' static
| |   |   |   `-ParmVarDecl 0x7ffe440e9588 <col:28> col:31 'int'
| |   |   |-FunctionTemplateDecl 0x7ffe440e9d78 <line:4673:5, line:4674:37> col:21 __test
| |   |   | |-TemplateTypeParmDecl 0x7ffe440e9bb0 <line:4673:15> col:15 class depth 1 index 0
| |   |   | `-CXXMethodDecl 0x7ffe440e9ce0 <line:4674:9, col:37> col:21 __test 'auto (long) -> std::__1::false_type' static
| |   |   |   `-ParmVarDecl 0x7ffe440e9c48 <col:28> col:32 'long'
| |   |   `-VarDecl 0x7ffe440e9de0 <line:4676:5, col:57> col:23 value 'const _Bool' static cinit
| |   |     `-DependentScopeDeclRefExpr 0x7ffe440e9fd8 <col:31, col:57> '<dependent type>' lvalue
| |   |-ClassTemplateDecl 0x7ffe440ea158 <line:4679:1, line:4683:2> line:4680:8 __has_operator_addressof
| |   | |-TemplateTypeParmDecl 0x7ffe440ea038 <line:4679:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe440ea0c0 <line:4680:1, line:4683:2> line:4680:8 struct __has_operator_addressof definition
| |   |   |-public 'integral_constant<_Bool, __has_operator_addressof_member_imp<_Tp>::value || __has_operator_addressof_free_imp<_Tp>::value>'
| |   |   `-CXXRecordDecl 0x7ffe440ea7f8 <col:1, col:8> col:8 implicit struct __has_operator_addressof
| |   |-CXXRecordDecl 0x7ffe440ea8b0 <line:4709:1, col:32> col:8 referenced struct __extract_key_fail_tag definition
| |   | `-CXXRecordDecl 0x7ffe440ea9d8 <col:1, col:8> col:8 implicit struct __extract_key_fail_tag
| |   |-CXXRecordDecl 0x7ffe440eaa90 <line:4710:1, col:32> col:8 referenced struct __extract_key_self_tag definition
| |   | `-CXXRecordDecl 0x7ffe440eabb8 <col:1, col:8> col:8 implicit struct __extract_key_self_tag
| |   |-CXXRecordDecl 0x7ffe440eac70 <line:4711:1, col:33> col:8 referenced struct __extract_key_first_tag definition
| |   | `-CXXRecordDecl 0x7ffe440ead98 <col:1, col:8> col:8 implicit struct __extract_key_first_tag
| |   |-ClassTemplateDecl 0x7ffe440eb1b8 <line:4713:1, line:4717:50> line:4715:8 __can_extract_key
| |   | |-TemplateTypeParmDecl 0x7ffe440eae50 <line:4713:11, col:17> col:17 referenced class depth 0 index 0 _ValTy
| |   | |-TemplateTypeParmDecl 0x7ffe440eaeb8 <col:25, col:31> col:31 referenced class depth 0 index 1 _Key
| |   | |-TemplateTypeParmDecl 0x7ffe440eb090 <line:4714:11, col:60> col:17 referenced class depth 0 index 2 _RawValTy
| |   | | `-TemplateArgument type 'typename __unconstref<_ValTy>::type'
| |   | `-CXXRecordDecl 0x7ffe440eb120 <line:4715:1, line:4717:50> line:4715:8 struct __can_extract_key definition
| |   |   |-public 'conditional<is_same<_RawValTy, _Key>::value, struct __extract_key_self_tag, struct __extract_key_fail_tag>::type'
| |   |   `-CXXRecordDecl 0x7ffe440eb8f0 <col:1, col:8> col:8 implicit struct __can_extract_key
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe440ebec8 <line:4719:1, line:4722:75> line:4720:8 struct __can_extract_key definition
| |   | |-public 'conditional<is_same<typename remove_const<_First>::type, _Key>::value, struct __extract_key_first_tag, struct __extract_key_fail_tag>::type'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument type 'pair<type-parameter-0-2, type-parameter-0-3>'
| |   | |-TemplateTypeParmDecl 0x7ffe440eb9a8 <line:4719:11, col:17> col:17 referenced class depth 0 index 0 _Pair
| |   | |-TemplateTypeParmDecl 0x7ffe440eba18 <col:24, col:30> col:30 referenced class depth 0 index 1 _Key
| |   | |-TemplateTypeParmDecl 0x7ffe440eba88 <col:36, col:42> col:42 referenced class depth 0 index 2 _First
| |   | |-TemplateTypeParmDecl 0x7ffe440ebaf8 <col:50, col:56> col:56 referenced class depth 0 index 3 _Second
| |   | `-CXXRecordDecl 0x7ffe440fd860 <line:4720:1, col:8> col:8 implicit struct __can_extract_key
| |   |-ClassTemplateDecl 0x7ffe440fdcc0 <line:4727:1, line:4730:65> line:4729:8 __can_extract_map_key
| |   | |-TemplateTypeParmDecl 0x7ffe440fd918 <line:4727:11, col:17> col:17 referenced class depth 0 index 0 _ValTy
| |   | |-TemplateTypeParmDecl 0x7ffe440fd988 <col:25, col:31> col:31 referenced class depth 0 index 1 _Key
| |   | |-TemplateTypeParmDecl 0x7ffe440fd9f8 <col:37, col:43> col:43 class depth 0 index 2 _ContainerValueTy
| |   | |-TemplateTypeParmDecl 0x7ffe440fdb90 <line:4728:11, col:60> col:17 referenced class depth 0 index 3 _RawValTy
| |   | | `-TemplateArgument type 'typename __unconstref<_ValTy>::type'
| |   | `-CXXRecordDecl 0x7ffe440fdc28 <line:4729:1, line:4730:65> line:4729:8 struct __can_extract_map_key definition
| |   |   |-public 'integral_constant<_Bool, is_same<_RawValTy, _Key>::value>'
| |   |   `-CXXRecordDecl 0x7ffe440fe308 <col:1, col:8> col:8 implicit struct __can_extract_map_key
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe440fe760 <line:4734:1, line:4736:19> line:4735:8 struct __can_extract_map_key definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument type 'type-parameter-0-2'
| |   | |-TemplateTypeParmDecl 0x7ffe440fe3c0 <line:4734:11, col:17> col:17 referenced class depth 0 index 0 _ValTy
| |   | |-TemplateTypeParmDecl 0x7ffe440fe428 <col:25, col:31> col:31 referenced class depth 0 index 1 _Key
| |   | |-TemplateTypeParmDecl 0x7ffe440fe498 <col:37, col:43> col:43 referenced class depth 0 index 2 _RawValTy
| |   | `-CXXRecordDecl 0x7ffe440feae0 <line:4735:1, col:8> col:8 implicit struct __can_extract_map_key
| |   `-VarDecl 0x7ffe4414aa78 parent 0x7ffe43945980 prev 0x7ffe43946b50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:812:27, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:518:58> col:58 referenced value 'const _Bool':'const _Bool' constexpr
| |-NamespaceDecl 0x7ffe440feb98 prev 0x7ffe4393c4c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:438:37, line:439:38> line:438:47 std
| | |-original Namespace 0x7ffe43865c58 'std'
| | `-NamespaceDecl 0x7ffe440fec00 prev 0x7ffe4393c530 <col:52, line:439:36> <scratch space>:432:1 __1 inline
| |   |-original Namespace 0x7ffe43865cc0 '__1'
| |   |-EnumDecl 0x7ffe440fec68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:125:1, line:132:1> line:125:6 referenced float_round_style
| |   | |-EnumConstantDecl 0x7ffe440fed60 <line:127:5, col:34> col:5 round_indeterminate 'enum std::__1::float_round_style'
| |   | | `-UnaryOperator 0x7ffe440fed40 <col:33, col:34> 'int' prefix '-'
| |   | |   `-IntegerLiteral 0x7ffe440fed20 <col:34> 'int' 1
| |   | |-EnumConstantDecl 0x7ffe440fedc8 <line:128:5, col:34> col:5 referenced round_toward_zero 'enum std::__1::float_round_style'
| |   | | `-IntegerLiteral 0x7ffe440feda8 <col:34> 'int' 0
| |   | |-EnumConstantDecl 0x7ffe440fee30 <line:129:5, col:34> col:5 referenced round_to_nearest 'enum std::__1::float_round_style'
| |   | | `-IntegerLiteral 0x7ffe440fee10 <col:34> 'int' 1
| |   | |-EnumConstantDecl 0x7ffe440fee98 <line:130:5, col:34> col:5 round_toward_infinity 'enum std::__1::float_round_style'
| |   | | `-IntegerLiteral 0x7ffe440fee78 <col:34> 'int' 2
| |   | `-EnumConstantDecl 0x7ffe440fef00 <line:131:5, col:34> col:5 round_toward_neg_infinity 'enum std::__1::float_round_style'
| |   |   `-IntegerLiteral 0x7ffe440feee0 <col:34> 'int' 3
| |   |-EnumDecl 0x7ffe440fef48 <line:134:1, line:139:1> line:134:6 referenced float_denorm_style
| |   | |-EnumConstantDecl 0x7ffe440ff040 <line:136:5, col:29> col:5 denorm_indeterminate 'enum std::__1::float_denorm_style'
| |   | | `-UnaryOperator 0x7ffe440ff020 <col:28, col:29> 'int' prefix '-'
| |   | |   `-IntegerLiteral 0x7ffe440ff000 <col:29> 'int' 1
| |   | |-EnumConstantDecl 0x7ffe440ff0a8 <line:137:5, col:21> col:5 referenced denorm_absent 'enum std::__1::float_denorm_style'
| |   | | `-IntegerLiteral 0x7ffe440ff088 <col:21> 'int' 0
| |   | `-EnumConstantDecl 0x7ffe440ff110 <line:138:5, col:22> col:5 referenced denorm_present 'enum std::__1::float_denorm_style'
| |   |   `-IntegerLiteral 0x7ffe440ff0f0 <col:22> 'int' 1
| |   |-ClassTemplateDecl 0x7ffe440ff3f8 <line:141:1, line:184:1> line:142:7 __libcpp_numeric_limits
| |   | |-TemplateTypeParmDecl 0x7ffe440ff158 <line:141:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7ffe440ff2e8 <col:22, col:49> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7ffe440ff298 <col:29, col:49> '<dependent type>' lvalue
| |   | |-CXXRecordDecl 0x7ffe440ff360 <line:142:1, line:184:1> line:142:7 class __libcpp_numeric_limits definition
| |   | | |-CXXRecordDecl 0x7ffe44048ef0 <col:1, col:7> col:7 implicit class __libcpp_numeric_limits
| |   | | |-AccessSpecDecl 0x7ffe44048f88 <line:144:1, col:10> col:1 protected
| |   | | |-TypedefDecl 0x7ffe44048fc0 <line:145:5, col:17> col:17 referenced type '_Tp'
| |   | | | `-TemplateTypeParmType 0x7ffe440ff1a0 '_Tp' dependent depth 0 index 0
| |   | | |   `-TemplateTypeParm 0x7ffe440ff158 '_Tp'
| |   | | |-VarDecl 0x7ffe44049028 <line:147:5, col:59> col:42 is_specialized 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7ffe44049088 <col:59> '_Bool' false
| |   | | |-CXXMethodDecl 0x7ffe440491a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:148:92> col:61 constexpr min 'std::__1::__libcpp_numeric_limits::type (void) noexcept' static
| |   | | | |-CompoundStmt 0x7ffe4404a998 <col:77, col:92>
| |   | | | | `-ReturnStmt 0x7ffe4404a980 <col:78, col:90>
| |   | | | |   `-CXXUnresolvedConstructExpr 0x7ffe4404a958 <col:85, col:90> 'std::__1::__libcpp_numeric_limits::type':'_Tp'
| |   | | | |-AlwaysInlineAttr 0x7ffe44049240 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | | `-VisibilityAttr 0x7ffe44049288 <col:51, col:74> Hidden
| |   | | |-CXXMethodDecl 0x7ffe440492f0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:149:92> col:61 constexpr max 'std::__1::__libcpp_numeric_limits::type (void) noexcept' static
| |   | | | |-CompoundStmt 0x7ffe4404aa08 <col:77, col:92>
| |   | | | | `-ReturnStmt 0x7ffe4404a9f0 <col:78, col:90>
| |   | | | |   `-CXXUnresolvedConstructExpr 0x7ffe4404a9c8 <col:85, col:90> 'std::__1::__libcpp_numeric_limits::type':'_Tp'
| |   | | | |-AlwaysInlineAttr 0x7ffe44049388 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | | `-VisibilityAttr 0x7ffe440493d0 <col:51, col:74> Hidden
| |   | | |-CXXMethodDecl 0x7ffe44049438 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:150:95> col:61 constexpr lowest 'std::__1::__libcpp_numeric_limits::type (void) noexcept' static
| |   | | | |-CompoundStmt 0x7ffe4404aa78 <col:80, col:95>
| |   | | | | `-ReturnStmt 0x7ffe4404aa60 <col:81, col:93>
| |   | | | |   `-CXXUnresolvedConstructExpr 0x7ffe4404aa38 <col:88, col:93> 'std::__1::__libcpp_numeric_limits::type':'_Tp'
| |   | | | |-AlwaysInlineAttr 0x7ffe440494d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | | `-VisibilityAttr 0x7ffe44049518 <col:51, col:74> Hidden
| |   | | |-VarDecl 0x7ffe44049540 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:152:5, col:50> col:41 digits 'const int' static constexpr cinit
| |   | | | `-IntegerLiteral 0x7ffe440495a0 <col:50> 'int' 0
| |   | | |-VarDecl 0x7ffe440495d8 <line:153:5, col:52> col:41 digits10 'const int' static constexpr cinit
| |   | | | `-IntegerLiteral 0x7ffe44049638 <col:52> 'int' 0
| |   | | |-VarDecl 0x7ffe44049670 <line:154:5, col:56> col:41 max_digits10 'const int' static constexpr cinit
| |   | | | `-IntegerLiteral 0x7ffe440496d0 <col:56> 'int' 0
| |   | | |-VarDecl 0x7ffe44049700 <line:155:5, col:53> col:41 is_signed 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7ffe44049760 <col:53> '_Bool' false
| |   | | |-VarDecl 0x7ffe44049788 <line:156:5, col:54> col:41 is_integer 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7ffe440497e8 <col:54> '_Bool' false
| |   | | |-VarDecl 0x7ffe44049810 <line:157:5, col:52> col:41 is_exact 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7ffe44049870 <col:52> '_Bool' false
| |   | | |-VarDecl 0x7ffe440498a0 <line:158:5, col:49> col:41 radix 'const int' static constexpr cinit
| |   | | | `-IntegerLiteral 0x7ffe44049900 <col:49> 'int' 0
| |   | | |-CXXMethodDecl 0x7ffe44049978 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:159:96> col:61 constexpr epsilon 'std::__1::__libcpp_numeric_limits::type (void) noexcept' static
| |   | | | |-CompoundStmt 0x7ffe4404aae8 <col:81, col:96>
| |   | | | | `-ReturnStmt 0x7ffe4404aad0 <col:82, col:94>
| |   | | | |   `-CXXUnresolvedConstructExpr 0x7ffe4404aaa8 <col:89, col:94> 'std::__1::__libcpp_numeric_limits::type':'_Tp'
| |   | | | |-AlwaysInlineAttr 0x7ffe44049a10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | | `-VisibilityAttr 0x7ffe44049a58 <col:51, col:74> Hidden
| |   | | |-CXXMethodDecl 0x7ffe44049ac0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:160:100> col:61 constexpr round_error 'std::__1::__libcpp_numeric_limits::type (void) noexcept' static
| |   | | | |-CompoundStmt 0x7ffe4404ab58 <col:85, col:100>
| |   | | | | `-ReturnStmt 0x7ffe4404ab40 <col:86, col:98>
| |   | | | |   `-CXXUnresolvedConstructExpr 0x7ffe4404ab18 <col:93, col:98> 'std::__1::__libcpp_numeric_limits::type':'_Tp'
| |   | | | |-AlwaysInlineAttr 0x7ffe44049b58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | | `-VisibilityAttr 0x7ffe44049ba0 <col:51, col:74> Hidden
| |   | | |-VarDecl 0x7ffe44049bc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:162:5, col:56> col:41 min_exponent 'const int' static constexpr cinit
| |   | | | `-IntegerLiteral 0x7ffe44049c28 <col:56> 'int' 0
| |   | | |-VarDecl 0x7ffe44049c60 <line:163:5, col:58> col:41 min_exponent10 'const int' static constexpr cinit
| |   | | | `-IntegerLiteral 0x7ffe44049cc0 <col:58> 'int' 0
| |   | | |-VarDecl 0x7ffe44049cf8 <line:164:5, col:56> col:41 max_exponent 'const int' static constexpr cinit
| |   | | | `-IntegerLiteral 0x7ffe44049d58 <col:56> 'int' 0
| |   | | |-VarDecl 0x7ffe44049d90 <line:165:5, col:58> col:41 max_exponent10 'const int' static constexpr cinit
| |   | | | `-IntegerLiteral 0x7ffe44049df0 <col:58> 'int' 0
| |   | | |-VarDecl 0x7ffe44049e20 <line:167:5, col:56> col:41 has_infinity 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7ffe44049e80 <col:56> '_Bool' false
| |   | | |-VarDecl 0x7ffe44049ea8 <line:168:5, col:57> col:41 has_quiet_NaN 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7ffe44049f08 <col:57> '_Bool' false
| |   | | |-VarDecl 0x7ffe44049f30 <line:169:5, col:61> col:41 has_signaling_NaN 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7ffe44049f90 <col:61> '_Bool' false
| |   | | |-VarDecl 0x7ffe44049fb8 <line:170:5, col:68> col:55 has_denorm 'const enum std::__1::float_denorm_style' static constexpr cinit
| |   | | | `-DeclRefExpr 0x7ffe4404a018 <col:68> 'enum std::__1::float_denorm_style' EnumConstant 0x7ffe440ff0a8 'denorm_absent' 'enum std::__1::float_denorm_style'
| |   | | |-VarDecl 0x7ffe4404a050 <line:171:5, col:59> col:41 has_denorm_loss 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7ffe4404a0b0 <col:59> '_Bool' false
| |   | | |-CXXMethodDecl 0x7ffe4404a120 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:172:97> col:61 constexpr infinity 'std::__1::__libcpp_numeric_limits::type (void) noexcept' static
| |   | | | |-CompoundStmt 0x7ffe4404abc8 <col:82, col:97>
| |   | | | | `-ReturnStmt 0x7ffe4404abb0 <col:83, col:95>
| |   | | | |   `-CXXUnresolvedConstructExpr 0x7ffe4404ab88 <col:90, col:95> 'std::__1::__libcpp_numeric_limits::type':'_Tp'
| |   | | | |-AlwaysInlineAttr 0x7ffe4404a1b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | | `-VisibilityAttr 0x7ffe4404a200 <col:51, col:74> Hidden
| |   | | |-CXXMethodDecl 0x7ffe4404a268 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:173:98> col:61 constexpr quiet_NaN 'std::__1::__libcpp_numeric_limits::type (void) noexcept' static
| |   | | | |-CompoundStmt 0x7ffe4404ac38 <col:83, col:98>
| |   | | | | `-ReturnStmt 0x7ffe4404ac20 <col:84, col:96>
| |   | | | |   `-CXXUnresolvedConstructExpr 0x7ffe4404abf8 <col:91, col:96> 'std::__1::__libcpp_numeric_limits::type':'_Tp'
| |   | | | |-AlwaysInlineAttr 0x7ffe4404a300 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | | `-VisibilityAttr 0x7ffe4404a348 <col:51, col:74> Hidden
| |   | | |-CXXMethodDecl 0x7ffe4404a3b0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:174:102> col:61 constexpr signaling_NaN 'std::__1::__libcpp_numeric_limits::type (void) noexcept' static
| |   | | | |-CompoundStmt 0x7ffe4404aca8 <col:87, col:102>
| |   | | | | `-ReturnStmt 0x7ffe4404ac90 <col:88, col:100>
| |   | | | |   `-CXXUnresolvedConstructExpr 0x7ffe4404ac68 <col:95, col:100> 'std::__1::__libcpp_numeric_limits::type':'_Tp'
| |   | | | |-AlwaysInlineAttr 0x7ffe4404a448 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | | `-VisibilityAttr 0x7ffe4404a490 <col:51, col:74> Hidden
| |   | | |-CXXMethodDecl 0x7ffe4404a4f8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:175:99> col:61 constexpr denorm_min 'std::__1::__libcpp_numeric_limits::type (void) noexcept' static
| |   | | | |-CompoundStmt 0x7ffe4404ad18 <col:84, col:99>
| |   | | | | `-ReturnStmt 0x7ffe4404ad00 <col:85, col:97>
| |   | | | |   `-CXXUnresolvedConstructExpr 0x7ffe4404acd8 <col:92, col:97> 'std::__1::__libcpp_numeric_limits::type':'_Tp'
| |   | | | |-AlwaysInlineAttr 0x7ffe4404a590 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | | `-VisibilityAttr 0x7ffe4404a5d8 <col:51, col:74> Hidden
| |   | | |-VarDecl 0x7ffe4404a5f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:177:5, col:53> col:41 is_iec559 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7ffe4404a658 <col:53> '_Bool' false
| |   | | |-VarDecl 0x7ffe4404a680 <line:178:5, col:54> col:41 is_bounded 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7ffe4404a6e0 <col:54> '_Bool' false
| |   | | |-VarDecl 0x7ffe4404a708 <line:179:5, col:53> col:41 is_modulo 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7ffe4404a768 <col:53> '_Bool' false
| |   | | |-VarDecl 0x7ffe4404a790 <line:181:5, col:49> col:41 traps 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7ffe4404a7f0 <col:49> '_Bool' false
| |   | | |-VarDecl 0x7ffe4404a818 <line:182:5, col:59> col:41 tinyness_before 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7ffe4404a878 <col:59> '_Bool' false
| |   | | `-VarDecl 0x7ffe4404a8a0 <line:183:5, col:68> col:54 round_style 'const enum std::__1::float_round_style' static constexpr cinit
| |   | |   `-DeclRefExpr 0x7ffe4404a900 <col:68> 'enum std::__1::float_round_style' EnumConstant 0x7ffe440fedc8 'round_toward_zero' 'enum std::__1::float_round_style'
| |   | |-ClassTemplateSpecialization 0x7ffe4404f1e0 '__libcpp_numeric_limits'
| |   | |-ClassTemplateSpecialization 0x7ffe4411ba80 '__libcpp_numeric_limits'
| |   | |-ClassTemplateSpecialization 0x7ffe4411eb60 '__libcpp_numeric_limits'
| |   | `-ClassTemplateSpecialization 0x7ffe44121c90 '__libcpp_numeric_limits'
| |   |-ClassTemplateDecl 0x7ffe4404b780 <line:186:1, line:190:1> line:187:8 __libcpp_compute_min
| |   | |-TemplateTypeParmDecl 0x7ffe4404ad38 <line:186:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7ffe4404b600 <col:22, col:26> col:26 referenced 'int' depth 0 index 1 __digits
| |   | |-NonTypeTemplateParmDecl 0x7ffe4404b668 <col:36, col:41> col:41 '_Bool' depth 0 index 2 _IsSigned
| |   | `-CXXRecordDecl 0x7ffe4404b6e8 <line:187:1, line:190:1> line:187:8 struct __libcpp_compute_min definition
| |   |   |-CXXRecordDecl 0x7ffe4404bab0 <col:1, col:8> col:8 implicit struct __libcpp_compute_min
| |   |   `-VarDecl 0x7ffe4404bb58 <line:189:5, col:70> col:40 value 'const _Tp' static constexpr cinit
| |   |     `-CXXUnresolvedConstructExpr 0x7ffe4404bc78 <col:48, col:70> '_Tp'
| |   |       `-BinaryOperator 0x7ffe4404bc50 <col:52, col:62> '<dependent type>' '<<'
| |   |         |-CXXUnresolvedConstructExpr 0x7ffe4404bbf8 <col:52, col:57> '_Tp'
| |   |         | `-IntegerLiteral 0x7ffe4404bbd8 <col:56> 'int' 1
| |   |         `-DeclRefExpr 0x7ffe4404bc28 <col:62> 'int' NonTypeTemplateParm 0x7ffe4404b600 '__digits' 'int'
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe4404bfb8 <line:192:1, line:196:1> line:193:8 struct __libcpp_compute_min definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7ffe4404bdd8 <col:34> 'int' NonTypeTemplateParm 0x7ffe4404bd50 '__digits' 'int'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7ffe4404bcc8 <line:192:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7ffe4404bd50 <col:22, col:26> col:26 referenced 'int' depth 0 index 1 __digits
| |   | |-CXXRecordDecl 0x7ffe4404c290 <line:193:1, col:8> col:8 implicit struct __libcpp_compute_min
| |   | `-VarDecl 0x7ffe4404c338 <line:195:5, col:53> col:40 value 'const _Tp' static constexpr cinit
| |   |   `-CXXUnresolvedConstructExpr 0x7ffe4404c3c8 <col:48, col:53> '_Tp'
| |   |     `-IntegerLiteral 0x7ffe4404c3a8 <col:52> 'int' 0
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe4404c600 <line:198:1, line:249:1> line:199:7 class __libcpp_numeric_limits definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7ffe4404c418 <line:198:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7ffe4404c890 <line:199:1, col:7> col:7 implicit class __libcpp_numeric_limits
| |   | |-AccessSpecDecl 0x7ffe4404c928 <line:201:1, col:10> col:1 protected
| |   | |-TypedefDecl 0x7ffe4404c960 <line:202:5, col:17> col:17 referenced type '_Tp'
| |   | | `-TemplateTypeParmType 0x7ffe4404c460 '_Tp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7ffe4404c418 '_Tp'
| |   | |-VarDecl 0x7ffe4404c9c8 <line:204:5, col:58> col:41 is_specialized 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7ffe4404ca28 <col:58> '_Bool' true
| |   | |-VarDecl 0x7ffe4404ca50 <line:206:5, col:70> col:41 referenced is_signed 'const _Bool' static constexpr cinit
| |   | | `-BinaryOperator 0x7ffe4404cbb0 <col:53, col:70> '<dependent type>' '<'
| |   | |   |-CXXUnresolvedConstructExpr 0x7ffe4404cb20 <col:53, col:60> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | |   | `-UnaryOperator 0x7ffe4404cb00 <col:58, col:59> 'int' prefix '-'
| |   | |   |   `-IntegerLiteral 0x7ffe4404cae0 <col:59> 'int' 1
| |   | |   `-CXXUnresolvedConstructExpr 0x7ffe4404cb80 <col:64, col:70> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | |     `-IntegerLiteral 0x7ffe4404cb60 <col:69> 'int' 0
| |   | |-VarDecl 0x7ffe4404cbf0 <line:207:5, col:106> col:41 referenced digits 'const int' static constexpr cinit
| |   | | `-CXXStaticCastExpr 0x7ffe4404cd90 <col:50, col:106> 'int' static_cast<int> <NoOp>
| |   | |   `-ImplicitCastExpr 0x7ffe4404cd78 <col:67, col:97> 'int' <IntegralCast>
| |   | |     `-BinaryOperator 0x7ffe4404cd38 <col:67, col:97> 'unsigned long' '-'
| |   | |       |-BinaryOperator 0x7ffe4404ccb8 <col:67, <built-in>:66:22> 'unsigned long' '*'
| |   | |       | |-UnaryExprOrTypeTraitExpr 0x7ffe4404cc60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:207:67, col:78> 'unsigned long' sizeof 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | |       | `-ImplicitCastExpr 0x7ffe4404cca0 <<built-in>:66:22> 'unsigned long' <IntegralCast>
| |   | |       |   `-IntegerLiteral 0x7ffe4404cc80 <col:22> 'int' 8
| |   | |       `-ImplicitCastExpr 0x7ffe4404cd20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:207:97> 'unsigned long' <IntegralCast>
| |   | |         `-ImplicitCastExpr 0x7ffe4404cd08 <col:97> '_Bool' <LValueToRValue>
| |   | |           `-DeclRefExpr 0x7ffe4404cce0 <col:97> 'const _Bool' lvalue Var 0x7ffe4404ca50 'is_signed' 'const _Bool'
| |   | |-VarDecl 0x7ffe4404cdd8 <line:208:5, col:65> col:41 digits10 'const int' static constexpr cinit
| |   | | `-BinaryOperator 0x7ffe4404cee0 <col:52, col:65> 'int' '/'
| |   | |   |-BinaryOperator 0x7ffe4404ce98 <col:52, col:61> 'int' '*'
| |   | |   | |-ImplicitCastExpr 0x7ffe4404ce80 <col:52> 'int' <LValueToRValue>
| |   | |   | | `-DeclRefExpr 0x7ffe4404ce38 <col:52> 'const int' lvalue Var 0x7ffe4404cbf0 'digits' 'const int'
| |   | |   | `-IntegerLiteral 0x7ffe4404ce60 <col:61> 'int' 3
| |   | |   `-IntegerLiteral 0x7ffe4404cec0 <col:65> 'int' 10
| |   | |-VarDecl 0x7ffe4404cf20 <line:209:5, col:56> col:41 max_digits10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7ffe4404cf80 <col:56> 'int' 0
| |   | |-VarDecl 0x7ffe4404cfb0 <line:210:5, col:96> col:41 referenced __min 'const std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'const _Tp' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7ffe4404d238 <col:49, col:96> '<dependent type>' lvalue
| |   | |-VarDecl 0x7ffe4404d288 <line:211:5, col:93> col:41 referenced __max 'const std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'const _Tp' static constexpr cinit
| |   | | `-ConditionalOperator 0x7ffe4404d4b8 <col:49, col:93> '<dependent type>'
| |   | |   |-ImplicitCastExpr 0x7ffe4404d4a0 <col:49> '_Bool' <LValueToRValue>
| |   | |   | `-DeclRefExpr 0x7ffe4404d2e8 <col:49> 'const _Bool' lvalue Var 0x7ffe4404ca50 'is_signed' 'const _Bool'
| |   | |   |-CXXUnresolvedConstructExpr 0x7ffe4404d3f0 <col:61, col:82> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | |   | `-BinaryOperator 0x7ffe4404d3c8 <col:66, col:77> '<dependent type>' '^'
| |   | |   |   |-CXXUnresolvedConstructExpr 0x7ffe4404d370 <col:66, col:73> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | |   |   | `-UnaryOperator 0x7ffe4404d350 <col:71, col:72> 'int' prefix '~'
| |   | |   |   |   `-IntegerLiteral 0x7ffe4404d330 <col:72> 'int' 0
| |   | |   |   `-DeclRefExpr 0x7ffe4404d3a0 <col:77> 'const std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'const _Tp' lvalue Var 0x7ffe4404cfb0 '__min' 'const std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'const _Tp'
| |   | |   `-CXXUnresolvedConstructExpr 0x7ffe4404d470 <col:86, col:93> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | |     `-UnaryOperator 0x7ffe4404d450 <col:91, col:92> 'int' prefix '~'
| |   | |       `-IntegerLiteral 0x7ffe4404d430 <col:92> 'int' 0
| |   | |-CXXMethodDecl 0x7ffe4404d600 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:212:91> col:61 referenced constexpr min 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7ffe4404ed10 <col:77, col:91>
| |   | | | `-ReturnStmt 0x7ffe4404ecf8 <col:78, col:85>
| |   | | |   `-DeclRefExpr 0x7ffe4404ecd0 <col:85> 'const std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'const _Tp' lvalue Var 0x7ffe4404cfb0 '__min' 'const std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'const _Tp'
| |   | | |-AlwaysInlineAttr 0x7ffe4404d698 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7ffe4404d6e0 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7ffe4404d748 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:213:91> col:61 constexpr max 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7ffe4404ed70 <col:77, col:91>
| |   | | | `-ReturnStmt 0x7ffe4404ed58 <col:78, col:85>
| |   | | |   `-DeclRefExpr 0x7ffe4404ed30 <col:85> 'const std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'const _Tp' lvalue Var 0x7ffe4404d288 '__max' 'const std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'const _Tp'
| |   | | |-AlwaysInlineAttr 0x7ffe4404d7e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7ffe4404d828 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7ffe4404d890 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:214:94> col:61 constexpr lowest 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7ffe4404edf8 <col:80, col:94>
| |   | | | `-ReturnStmt 0x7ffe4404ede0 <col:81, col:92>
| |   | | |   `-CallExpr 0x7ffe4404edb8 <col:88, col:92> '<dependent type>'
| |   | | |     `-DeclRefExpr 0x7ffe4404ed90 <col:88> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept' lvalue CXXMethod 0x7ffe4404d600 'min' 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept'
| |   | | |-AlwaysInlineAttr 0x7ffe4404d928 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7ffe4404d970 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7ffe4404d990 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:216:5, col:54> col:41 is_integer 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7ffe4404d9f0 <col:54> '_Bool' true
| |   | |-VarDecl 0x7ffe4404da18 <line:217:5, col:52> col:41 is_exact 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7ffe4404da78 <col:52> '_Bool' true
| |   | |-VarDecl 0x7ffe4404daa8 <line:218:5, col:49> col:41 radix 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7ffe4404db08 <col:49> 'int' 2
| |   | |-CXXMethodDecl 0x7ffe4404db80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:219:97> col:61 constexpr epsilon 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7ffe4404ee90 <col:81, col:97>
| |   | | | `-ReturnStmt 0x7ffe4404ee78 <col:82, col:95>
| |   | | |   `-CXXUnresolvedConstructExpr 0x7ffe4404ee48 <col:89, col:95> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | | |     `-IntegerLiteral 0x7ffe4404ee28 <col:94> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7ffe4404dc18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7ffe4404dc60 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7ffe4404dcc8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:220:101> col:61 constexpr round_error 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7ffe4404ef28 <col:85, col:101>
| |   | | | `-ReturnStmt 0x7ffe4404ef10 <col:86, col:99>
| |   | | |   `-CXXUnresolvedConstructExpr 0x7ffe4404eee0 <col:93, col:99> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | | |     `-IntegerLiteral 0x7ffe4404eec0 <col:98> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7ffe4404dd60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7ffe4404dda8 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7ffe4404ddd0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:222:5, col:56> col:41 min_exponent 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7ffe4404de30 <col:56> 'int' 0
| |   | |-VarDecl 0x7ffe4404de68 <line:223:5, col:58> col:41 min_exponent10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7ffe4404dec8 <col:58> 'int' 0
| |   | |-VarDecl 0x7ffe4404df00 <line:224:5, col:56> col:41 max_exponent 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7ffe4404df60 <col:56> 'int' 0
| |   | |-VarDecl 0x7ffe4404df98 <line:225:5, col:58> col:41 max_exponent10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7ffe4404dff8 <col:58> 'int' 0
| |   | |-VarDecl 0x7ffe4404e028 <line:227:5, col:56> col:41 has_infinity 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7ffe4404e088 <col:56> '_Bool' false
| |   | |-VarDecl 0x7ffe4404e0b0 <line:228:5, col:57> col:41 has_quiet_NaN 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7ffe4404e110 <col:57> '_Bool' false
| |   | |-VarDecl 0x7ffe4404e138 <line:229:5, col:61> col:41 has_signaling_NaN 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7ffe4404e198 <col:61> '_Bool' false
| |   | |-VarDecl 0x7ffe4404e1c0 <line:230:5, col:68> col:55 has_denorm 'const enum std::__1::float_denorm_style' static constexpr cinit
| |   | | `-DeclRefExpr 0x7ffe4404e220 <col:68> 'enum std::__1::float_denorm_style' EnumConstant 0x7ffe440ff0a8 'denorm_absent' 'enum std::__1::float_denorm_style'
| |   | |-VarDecl 0x7ffe4404e258 <line:231:5, col:59> col:41 has_denorm_loss 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7ffe4404e2b8 <col:59> '_Bool' false
| |   | |-CXXMethodDecl 0x7ffe4404e328 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:232:98> col:61 constexpr infinity 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7ffe4404efc0 <col:82, col:98>
| |   | | | `-ReturnStmt 0x7ffe4404efa8 <col:83, col:96>
| |   | | |   `-CXXUnresolvedConstructExpr 0x7ffe4404ef78 <col:90, col:96> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | | |     `-IntegerLiteral 0x7ffe4404ef58 <col:95> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7ffe4404e3c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7ffe4404e408 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7ffe4404e470 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:233:99> col:61 constexpr quiet_NaN 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7ffe4404f058 <col:83, col:99>
| |   | | | `-ReturnStmt 0x7ffe4404f040 <col:84, col:97>
| |   | | |   `-CXXUnresolvedConstructExpr 0x7ffe4404f010 <col:91, col:97> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | | |     `-IntegerLiteral 0x7ffe4404eff0 <col:96> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7ffe4404e508 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7ffe4404e550 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7ffe4404e5b8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:234:103> col:61 constexpr signaling_NaN 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7ffe4404f0f0 <col:87, col:103>
| |   | | | `-ReturnStmt 0x7ffe4404f0d8 <col:88, col:101>
| |   | | |   `-CXXUnresolvedConstructExpr 0x7ffe4404f0a8 <col:95, col:101> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | | |     `-IntegerLiteral 0x7ffe4404f088 <col:100> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7ffe4404e650 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7ffe4404e698 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7ffe4404e700 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:235:100> col:61 constexpr denorm_min 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7ffe4404f188 <col:84, col:100>
| |   | | | `-ReturnStmt 0x7ffe4404f170 <col:85, col:98>
| |   | | |   `-CXXUnresolvedConstructExpr 0x7ffe4404f140 <col:92, col:98> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | | |     `-IntegerLiteral 0x7ffe4404f120 <col:97> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7ffe4404e798 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7ffe4404e7e0 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7ffe4404e800 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:237:5, col:53> col:41 is_iec559 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7ffe4404e860 <col:53> '_Bool' false
| |   | |-VarDecl 0x7ffe4404e888 <line:238:5, col:54> col:41 is_bounded 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7ffe4404e8e8 <col:54> '_Bool' true
| |   | |-VarDecl 0x7ffe4404e910 <line:239:5, col:77> col:41 is_modulo 'const _Bool' static constexpr cinit
| |   | | `-UnaryOperator 0x7ffe4404eae8 <col:53, col:77> '<dependent type>' prefix '!'
| |   | |   `-DependentScopeDeclRefExpr 0x7ffe4404eaa8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:239:77> '<dependent type>' lvalue
| |   | |-VarDecl 0x7ffe4404eb18 <line:243:5, col:49> col:41 traps 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7ffe4404eb78 <col:49> '_Bool' true
| |   | |-VarDecl 0x7ffe4404eba0 <line:247:5, col:59> col:41 tinyness_before 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7ffe4404ec00 <col:59> '_Bool' false
| |   | `-VarDecl 0x7ffe4404ec28 <line:248:5, col:68> col:54 round_style 'const enum std::__1::float_round_style' static constexpr cinit
| |   |   `-DeclRefExpr 0x7ffe4404ec88 <col:68> 'enum std::__1::float_round_style' EnumConstant 0x7ffe440fedc8 'round_toward_zero' 'enum std::__1::float_round_style'
| |   |-ClassTemplateSpecializationDecl 0x7ffe4404f1e0 <line:251:1, line:297:1> line:252:7 class __libcpp_numeric_limits definition
| |   | |-TemplateArgument type '_Bool'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7ffe4404f450 <col:1, col:7> col:7 implicit class __libcpp_numeric_limits
| |   | |-AccessSpecDecl 0x7ffe4404f4e8 <line:254:1, col:10> col:1 protected
| |   | |-TypedefDecl 0x7ffe4404f520 <line:255:5, col:18> col:18 referenced type '_Bool'
| |   | | `-BuiltinType 0x7ffe43832740 '_Bool'
| |   | |-VarDecl 0x7ffe4404f588 <line:257:5, col:58> col:41 is_specialized 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7ffe4404f5e8 <col:58> '_Bool' true
| |   | |-VarDecl 0x7ffe44119268 <line:259:5, col:53> col:41 is_signed 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7ffe441192c8 <col:53> '_Bool' false
| |   | |-VarDecl 0x7ffe44119350 <line:260:5, col:50> col:41 digits 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7ffe441193b0 <col:50> 'int' 1
| |   | |-VarDecl 0x7ffe44119440 <line:261:5, col:52> col:41 digits10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7ffe441194a0 <col:52> 'int' 0
| |   | |-VarDecl 0x7ffe44119530 <line:262:5, col:56> col:41 max_digits10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7ffe44119590 <col:56> 'int' 0
| |   | |-VarDecl 0x7ffe44119640 <line:263:5, col:49> col:41 referenced __min 'const std::__1::__libcpp_numeric_limits<_Bool, true>::type':'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7ffe441196a0 <col:49> '_Bool' false
| |   | |-VarDecl 0x7ffe44119720 <line:264:5, col:49> col:41 referenced __max 'const std::__1::__libcpp_numeric_limits<_Bool, true>::type':'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7ffe44119780 <col:49> '_Bool' true
| |   | |-CXXMethodDecl 0x7ffe441198d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:265:91> col:61 used constexpr min 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7ffe4411b4b8 <col:77, col:91>
| |   | | | `-ReturnStmt 0x7ffe4411b4a0 <col:78, col:85>
| |   | | |   `-ImplicitCastExpr 0x7ffe4411b488 <col:85> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type':'_Bool' <LValueToRValue>
| |   | | |     `-DeclRefExpr 0x7ffe4411b460 <col:85> 'const std::__1::__libcpp_numeric_limits<_Bool, true>::type':'const _Bool' lvalue Var 0x7ffe44119640 '__min' 'const std::__1::__libcpp_numeric_limits<_Bool, true>::type':'const _Bool'
| |   | | |-AlwaysInlineAttr 0x7ffe44119970 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7ffe441199b8 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7ffe44119a20 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:266:91> col:61 constexpr max 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7ffe4411b530 <col:77, col:91>
| |   | | | `-ReturnStmt 0x7ffe4411b518 <col:78, col:85>
| |   | | |   `-ImplicitCastExpr 0x7ffe4411b500 <col:85> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type':'_Bool' <LValueToRValue>
| |   | | |     `-DeclRefExpr 0x7ffe4411b4d8 <col:85> 'const std::__1::__libcpp_numeric_limits<_Bool, true>::type':'const _Bool' lvalue Var 0x7ffe44119720 '__max' 'const std::__1::__libcpp_numeric_limits<_Bool, true>::type':'const _Bool'
| |   | | |-AlwaysInlineAttr 0x7ffe44119ab8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7ffe44119b00 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7ffe44119b68 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:267:94> col:61 constexpr lowest 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7ffe4411b630 <col:80, col:94>
| |   | | | `-ReturnStmt 0x7ffe4411b618 <col:81, col:92>
| |   | | |   `-CallExpr 0x7ffe4411b5f0 <col:88, col:92> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type':'_Bool'
| |   | | |     `-ImplicitCastExpr 0x7ffe4411b5d8 <col:88> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (*)(void) noexcept' <FunctionToPointerDecay>
| |   | | |       `-DeclRefExpr 0x7ffe4411b550 <col:88> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept' lvalue CXXMethod 0x7ffe441198d8 'min' 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept'
| |   | | |-AlwaysInlineAttr 0x7ffe44119c00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7ffe44119c48 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7ffe44119c68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:269:5, col:54> col:41 is_integer 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7ffe44119cc8 <col:54> '_Bool' true
| |   | |-VarDecl 0x7ffe44119d48 <line:270:5, col:52> col:41 is_exact 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7ffe44119da8 <col:52> '_Bool' true
| |   | |-VarDecl 0x7ffe44119e30 <line:271:5, col:49> col:41 radix 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7ffe44119e90 <col:49> 'int' 2
| |   | |-CXXMethodDecl 0x7ffe44119f60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:272:97> col:61 constexpr epsilon 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7ffe4411b6d8 <col:81, col:97>
| |   | | | `-ReturnStmt 0x7ffe4411b6c0 <col:82, col:95>
| |   | | |   `-CXXFunctionalCastExpr 0x7ffe4411b698 <col:89, col:95> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type':'_Bool' functional cast to std::__1::__libcpp_numeric_limits<_Bool, true>::type <NoOp>
| |   | | |     `-ImplicitCastExpr 0x7ffe4411b680 <col:94> '_Bool' <IntegralToBoolean>
| |   | | |       `-IntegerLiteral 0x7ffe4411b660 <col:94> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7ffe44119ff8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7ffe4411a040 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7ffe4411a0a8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:273:101> col:61 constexpr round_error 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7ffe4411b780 <col:85, col:101>
| |   | | | `-ReturnStmt 0x7ffe4411b768 <col:86, col:99>
| |   | | |   `-CXXFunctionalCastExpr 0x7ffe4411b740 <col:93, col:99> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type':'_Bool' functional cast to std::__1::__libcpp_numeric_limits<_Bool, true>::type <NoOp>
| |   | | |     `-ImplicitCastExpr 0x7ffe4411b728 <col:98> '_Bool' <IntegralToBoolean>
| |   | | |       `-IntegerLiteral 0x7ffe4411b708 <col:98> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7ffe4411a140 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7ffe4411a188 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7ffe4411a1b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:275:5, col:56> col:41 min_exponent 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7ffe4411a210 <col:56> 'int' 0
| |   | |-VarDecl 0x7ffe4411a2a0 <line:276:5, col:58> col:41 min_exponent10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7ffe4411a300 <col:58> 'int' 0
| |   | |-VarDecl 0x7ffe4411a390 <line:277:5, col:56> col:41 max_exponent 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7ffe4411a3f0 <col:56> 'int' 0
| |   | |-VarDecl 0x7ffe4411a480 <line:278:5, col:58> col:41 max_exponent10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7ffe4411a4e0 <col:58> 'int' 0
| |   | |-VarDecl 0x7ffe4411a568 <line:280:5, col:56> col:41 has_infinity 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7ffe4411a5c8 <col:56> '_Bool' false
| |   | |-VarDecl 0x7ffe4411a648 <line:281:5, col:57> col:41 has_quiet_NaN 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7ffe4411a6a8 <col:57> '_Bool' false
| |   | |-VarDecl 0x7ffe4411a728 <line:282:5, col:61> col:41 has_signaling_NaN 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7ffe4411a788 <col:61> '_Bool' false
| |   | |-VarDecl 0x7ffe4411a808 <line:283:5, col:68> col:55 has_denorm 'const enum std::__1::float_denorm_style' static constexpr cinit
| |   | | `-DeclRefExpr 0x7ffe4411a868 <col:68> 'enum std::__1::float_denorm_style' EnumConstant 0x7ffe440ff0a8 'denorm_absent' 'enum std::__1::float_denorm_style'
| |   | |-VarDecl 0x7ffe4411a8f8 <line:284:5, col:59> col:41 has_denorm_loss 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7ffe4411a958 <col:59> '_Bool' false
| |   | |-CXXMethodDecl 0x7ffe4411aa20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:285:98> col:61 constexpr infinity 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7ffe4411b828 <col:82, col:98>
| |   | | | `-ReturnStmt 0x7ffe4411b810 <col:83, col:96>
| |   | | |   `-CXXFunctionalCastExpr 0x7ffe4411b7e8 <col:90, col:96> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type':'_Bool' functional cast to std::__1::__libcpp_numeric_limits<_Bool, true>::type <NoOp>
| |   | | |     `-ImplicitCastExpr 0x7ffe4411b7d0 <col:95> '_Bool' <IntegralToBoolean>
| |   | | |       `-IntegerLiteral 0x7ffe4411b7b0 <col:95> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7ffe4411aab8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7ffe4411ab00 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7ffe4411ab68 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:286:99> col:61 constexpr quiet_NaN 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7ffe4411b8d0 <col:83, col:99>
| |   | | | `-ReturnStmt 0x7ffe4411b8b8 <col:84, col:97>
| |   | | |   `-CXXFunctionalCastExpr 0x7ffe4411b890 <col:91, col:97> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type':'_Bool' functional cast to std::__1::__libcpp_numeric_limits<_Bool, true>::type <NoOp>
| |   | | |     `-ImplicitCastExpr 0x7ffe4411b878 <col:96> '_Bool' <IntegralToBoolean>
| |   | | |       `-IntegerLiteral 0x7ffe4411b858 <col:96> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7ffe4411ac00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7ffe4411ac48 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7ffe4411acb0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:287:103> col:61 constexpr signaling_NaN 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7ffe4411b978 <col:87, col:103>
| |   | | | `-ReturnStmt 0x7ffe4411b960 <col:88, col:101>
| |   | | |   `-CXXFunctionalCastExpr 0x7ffe4411b938 <col:95, col:101> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type':'_Bool' functional cast to std::__1::__libcpp_numeric_limits<_Bool, true>::type <NoOp>
| |   | | |     `-ImplicitCastExpr 0x7ffe4411b920 <col:100> '_Bool' <IntegralToBoolean>
| |   | | |       `-IntegerLiteral 0x7ffe4411b900 <col:100> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7ffe4411ad48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7ffe4411ad90 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7ffe4411adf8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:288:100> col:61 constexpr denorm_min 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7ffe4411ba20 <col:84, col:100>
| |   | | | `-ReturnStmt 0x7ffe4411ba08 <col:85, col:98>
| |   | | |   `-CXXFunctionalCastExpr 0x7ffe4411b9e0 <col:92, col:98> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type':'_Bool' functional cast to std::__1::__libcpp_numeric_limits<_Bool, true>::type <NoOp>
| |   | | |     `-ImplicitCastExpr 0x7ffe4411b9c8 <col:97> '_Bool' <IntegralToBoolean>
| |   | | |       `-IntegerLiteral 0x7ffe4411b9a8 <col:97> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7ffe4411ae90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7ffe4411aed8 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7ffe4411aef8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:290:5, col:53> col:41 is_iec559 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7ffe4411af58 <col:53> '_Bool' false
| |   | |-VarDecl 0x7ffe4411afd8 <line:291:5, col:54> col:41 is_bounded 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7ffe4411b038 <col:54> '_Bool' true
| |   | |-VarDecl 0x7ffe4411b0b8 <line:292:5, col:53> col:41 is_modulo 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7ffe4411b118 <col:53> '_Bool' false
| |   | |-VarDecl 0x7ffe4411b198 <line:294:5, col:49> col:41 traps 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7ffe4411b200 <col:49> '_Bool' false
| |   | |-VarDecl 0x7ffe4411b280 <line:295:5, col:59> col:41 tinyness_before 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7ffe4411b2e0 <col:59> '_Bool' false
| |   | `-VarDecl 0x7ffe4411b360 <line:296:5, col:68> col:54 round_style 'const enum std::__1::float_round_style' static constexpr cinit
| |   |   `-DeclRefExpr 0x7ffe4411b3c0 <col:68> 'enum std::__1::float_round_style' EnumConstant 0x7ffe440fedc8 'round_toward_zero' 'enum std::__1::float_round_style'
| |   |-ClassTemplateSpecializationDecl 0x7ffe4411ba80 <line:299:1, line:343:1> line:300:7 class __libcpp_numeric_limits definition
| |   | |-TemplateArgument type 'float'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7ffe4411bcf0 <col:1, col:7> col:7 implicit class __libcpp_numeric_limits
| |   | |-AccessSpecDecl 0x7ffe4411bd88 <line:302:1, col:10> col:1 protected
| |   | |-TypedefDecl 0x7ffe4411bdc8 <line:303:5, col:19> col:19 referenced type 'float'
| |   | | `-BuiltinType 0x7ffe438328c0 'float'
| |   | |-VarDecl 0x7ffe4411be30 <line:305:5, col:58> col:41 is_specialized 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7ffe4411be90 <col:58> '_Bool' true
| |   | |-VarDecl 0x7ffe4411bf10 <line:307:5, col:53> col:41 is_signed 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7ffe4411bf70 <col:53> '_Bool' true
| |   | |-VarDecl 0x7ffe4411bff8 <line:308:5, <built-in>:139:26> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:308:41 referenced digits 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7ffe4411c058 <<built-in>:139:26> 'int' 24
| |   | |-VarDecl 0x7ffe4411c0e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:309:5, <built-in>:134:21> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:309:41 digits10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7ffe4411c148 <<built-in>:134:21> 'int' 6
| |   | |-VarDecl 0x7ffe4411c1d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:310:5, col:76> col:41 max_digits10 'const int' static constexpr cinit
| |   | | `-ImplicitCastExpr 0x7ffe4411c3a0 <col:56, col:76> 'const int' <IntegralCast>
| |   | |   `-BinaryOperator 0x7ffe4411c378 <col:56, col:76> 'long' '+'
| |   | |     |-ImplicitCastExpr 0x7ffe4411c360 <col:56> 'long' <IntegralCast>
| |   | |     | `-IntegerLiteral 0x7ffe4411c238 <col:56> 'int' 2
| |   | |     `-BinaryOperator 0x7ffe4411c338 <col:58, col:76> 'long' '/'
| |   | |       |-ParenExpr 0x7ffe4411c2f8 <col:58, col:74> 'long'
| |   | |       | `-BinaryOperator 0x7ffe4411c2d0 <col:59, col:68> 'long' '*'
| |   | |       |   |-ImplicitCastExpr 0x7ffe4411c2b8 <col:59> 'long' <IntegralCast>
| |   | |       |   | `-ImplicitCastExpr 0x7ffe4411c2a0 <col:59> 'int' <LValueToRValue>
| |   | |       |   |   `-DeclRefExpr 0x7ffe4411c258 <col:59> 'const int' lvalue Var 0x7ffe4411bff8 'digits' 'const int'
| |   | |       |   `-IntegerLiteral 0x7ffe4411c280 <col:68> 'long' 30103
| |   | |       `-IntegerLiteral 0x7ffe4411c318 <col:76> 'long' 100000
| |   | |-CXXMethodDecl 0x7ffe4411c4e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:311:97> col:61 constexpr min 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7ffe4411e128 <col:77, col:97>
| |   | | | `-ReturnStmt 0x7ffe4411e110 <col:78, <built-in>:145:21>
| |   | | |   `-FloatingLiteral 0x7ffe4411e0f0 <col:21> 'float' 1.175494e-38
| |   | | |-AlwaysInlineAttr 0x7ffe4411c580 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7ffe4411c5c8 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7ffe4411c630 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:312:97> col:61 used constexpr max 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7ffe4411e180 <col:77, col:97>
| |   | | | `-ReturnStmt 0x7ffe4411e168 <col:78, <built-in>:142:21>
| |   | | |   `-FloatingLiteral 0x7ffe4411e148 <col:21> 'float' 3.402823e+38
| |   | | |-AlwaysInlineAttr 0x7ffe4411c6c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7ffe4411c710 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7ffe4411c778 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:313:95> col:61 constexpr lowest 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7ffe4411e270 <col:80, col:95>
| |   | | | `-ReturnStmt 0x7ffe4411e258 <col:81, col:93>
| |   | | |   `-UnaryOperator 0x7ffe4411e238 <col:88, col:93> 'std::__1::__libcpp_numeric_limits<float, true>::type':'float' prefix '-'
| |   | | |     `-CallExpr 0x7ffe4411e210 <col:89, col:93> 'std::__1::__libcpp_numeric_limits<float, true>::type':'float'
| |   | | |       `-ImplicitCastExpr 0x7ffe4411e1f8 <col:89> 'std::__1::__libcpp_numeric_limits<float, true>::type (*)(void) noexcept' <FunctionToPointerDecay>
| |   | | |         `-DeclRefExpr 0x7ffe4411e1a0 <col:89> 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept' lvalue CXXMethod 0x7ffe4411c630 'max' 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept'
| |   | | |-AlwaysInlineAttr 0x7ffe4411c810 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7ffe4411c858 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7ffe4411c878 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:315:5, col:54> col:41 is_integer 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7ffe4411c8d8 <col:54> '_Bool' false
| |   | |-VarDecl 0x7ffe4411c958 <line:316:5, col:52> col:41 is_exact 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7ffe4411c9b8 <col:52> '_Bool' false
| |   | |-VarDecl 0x7ffe4411ca40 <line:317:5, <built-in>:332:23> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:317:41 radix 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7ffe4411caa0 <<built-in>:332:23> 'int' 2
| |   | |-CXXMethodDecl 0x7ffe4411cb70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:318:105> col:61 constexpr epsilon 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7ffe4411e2c8 <col:81, col:105>
| |   | | | `-ReturnStmt 0x7ffe4411e2b0 <col:82, <built-in>:136:25>
| |   | | |   `-FloatingLiteral 0x7ffe4411e290 <col:25> 'float' 1.192093e-07
| |   | | |-AlwaysInlineAttr 0x7ffe4411cc08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7ffe4411cc50 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7ffe4411ccb8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:319:98> col:61 constexpr round_error 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7ffe4411e320 <col:85, col:98>
| |   | | | `-ReturnStmt 0x7ffe4411e308 <col:86, col:93>
| |   | | |   `-FloatingLiteral 0x7ffe4411e2e8 <col:93> 'float' 5.000000e-01
| |   | | |-AlwaysInlineAttr 0x7ffe4411cd50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7ffe4411cd98 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7ffe4411cdc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:321:5, <built-in>:144:30> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:321:41 min_exponent 'const int' static constexpr cinit
| |   | | `-ParenExpr 0x7ffe4411ce60 <<built-in>:144:25, col:30> 'int'
| |   | |   `-UnaryOperator 0x7ffe4411ce40 <col:26, col:27> 'int' prefix '-'
| |   | |     `-IntegerLiteral 0x7ffe4411ce20 <col:27> 'int' 125
| |   | |-VarDecl 0x7ffe4411cef0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:322:5, <built-in>:143:32> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:322:41 min_exponent10 'const int' static constexpr cinit
| |   | | `-ParenExpr 0x7ffe4411cf90 <<built-in>:143:28, col:32> 'int'
| |   | |   `-UnaryOperator 0x7ffe4411cf70 <col:29, col:30> 'int' prefix '-'
| |   | |     `-IntegerLiteral 0x7ffe4411cf50 <col:30> 'int' 37
| |   | |-VarDecl 0x7ffe4411d020 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:323:5, <built-in>:141:25> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:323:41 max_exponent 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7ffe4411d080 <<built-in>:141:25> 'int' 128
| |   | |-VarDecl 0x7ffe4411d110 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:324:5, <built-in>:140:28> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:324:41 max_exponent10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7ffe4411d170 <<built-in>:140:28> 'int' 38
| |   | |-VarDecl 0x7ffe4411d200 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:326:5, col:56> col:41 has_infinity 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7ffe4411d260 <col:56> '_Bool' true
| |   | |-VarDecl 0x7ffe4411d2e0 <line:327:5, col:57> col:41 has_quiet_NaN 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7ffe4411d340 <col:57> '_Bool' true
| |   | |-VarDecl 0x7ffe4411d3c0 <line:328:5, col:61> col:41 has_signaling_NaN 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7ffe4411d420 <col:61> '_Bool' true
| |   | |-VarDecl 0x7ffe4411d4a0 <line:329:5, col:68> col:55 has_denorm 'const enum std::__1::float_denorm_style' static constexpr cinit
| |   | | `-DeclRefExpr 0x7ffe4411d500 <col:68> 'enum std::__1::float_denorm_style' EnumConstant 0x7ffe440ff110 'denorm_present' 'enum std::__1::float_denorm_style'
| |   | |-VarDecl 0x7ffe4411d590 <line:330:5, col:59> col:41 has_denorm_loss 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7ffe4411d5f0 <col:59> '_Bool' false
| |   | |-CXXMethodDecl 0x7ffe4411d6b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:331:112> col:61 constexpr infinity 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7ffe4411e500 <col:82, col:112>
| |   | | | `-ReturnStmt 0x7ffe4411e4e8 <col:83, col:110>
| |   | | |   `-CallExpr 0x7ffe4411e4c0 <col:90, col:110> 'float'
| |   | | |     `-ImplicitCastExpr 0x7ffe4411e4a8 <col:90> 'float (*)(void) noexcept' <BuiltinFnToFnPtr>
| |   | | |       `-DeclRefExpr 0x7ffe4411e480 <col:90> '<builtin fn type>' Function 0x7ffe4411e390 '__builtin_huge_valf' 'float (void) noexcept'
| |   | | |-AlwaysInlineAttr 0x7ffe4411d750 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7ffe4411d798 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7ffe4411d800 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:332:110> col:61 constexpr quiet_NaN 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7ffe4411e800 <col:83, col:110>
| |   | | | `-ReturnStmt 0x7ffe4411e7e8 <col:84, col:108>
| |   | | |   `-CallExpr 0x7ffe4411e7a0 <col:91, col:108> 'float'
| |   | | |     |-ImplicitCastExpr 0x7ffe4411e788 <col:91> 'float (*)(const char *) noexcept' <BuiltinFnToFnPtr>
| |   | | |     | `-DeclRefExpr 0x7ffe4411e6c8 <col:91> '<builtin fn type>' Function 0x7ffe4411e570 '__builtin_nanf' 'float (const char *) noexcept'
| |   | | |     `-ImplicitCastExpr 0x7ffe4411e7d0 <col:106> 'const char *' <ArrayToPointerDecay>
| |   | | |       `-StringLiteral 0x7ffe4411e6f0 <col:106> 'const char [1]' lvalue ""
| |   | | |-AlwaysInlineAttr 0x7ffe4411d898 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7ffe4411d8e0 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7ffe4411d948 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:333:115> col:61 constexpr signaling_NaN 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7ffe4411eaa8 <col:87, col:115>
| |   | | | `-ReturnStmt 0x7ffe4411ea90 <col:88, col:113>
| |   | | |   `-CallExpr 0x7ffe4411ea48 <col:95, col:113> 'float'
| |   | | |     |-ImplicitCastExpr 0x7ffe4411ea30 <col:95> 'float (*)(const char *) noexcept' <BuiltinFnToFnPtr>
| |   | | |     | `-DeclRefExpr 0x7ffe4411e9c8 <col:95> '<builtin fn type>' Function 0x7ffe4411e870 '__builtin_nansf' 'float (const char *) noexcept'
| |   | | |     `-ImplicitCastExpr 0x7ffe4411ea78 <col:111> 'const char *' <ArrayToPointerDecay>
| |   | | |       `-StringLiteral 0x7ffe4411e9f0 <col:111> 'const char [1]' lvalue ""
| |   | | |-AlwaysInlineAttr 0x7ffe4411d9e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7ffe4411da28 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7ffe4411da90 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:334:111> col:61 constexpr denorm_min 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7ffe4411eb00 <col:84, col:111>
| |   | | | `-ReturnStmt 0x7ffe4411eae8 <col:85, <built-in>:132:28>
| |   | | |   `-FloatingLiteral 0x7ffe4411eac8 <col:28> 'float' 1.401298e-45
| |   | | |-AlwaysInlineAttr 0x7ffe4411db28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7ffe4411db70 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7ffe4411db90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:336:5, col:53> col:41 is_iec559 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7ffe4411dbf0 <col:53> '_Bool' true
| |   | |-VarDecl 0x7ffe4411dc70 <line:337:5, col:54> col:41 is_bounded 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7ffe4411dcd0 <col:54> '_Bool' true
| |   | |-VarDecl 0x7ffe4411dd50 <line:338:5, col:53> col:41 is_modulo 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7ffe4411ddb0 <col:53> '_Bool' false
| |   | |-VarDecl 0x7ffe4411de30 <line:340:5, col:49> col:41 traps 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7ffe4411de90 <col:49> '_Bool' false
| |   | |-VarDecl 0x7ffe4411df10 <line:341:5, col:59> col:41 tinyness_before 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7ffe4411df70 <col:59> '_Bool' false
| |   | `-VarDecl 0x7ffe4411dff0 <line:342:5, col:68> col:54 round_style 'const enum std::__1::float_round_style' static constexpr cinit
| |   |   `-DeclRefExpr 0x7ffe4411e050 <col:68> 'enum std::__1::float_round_style' EnumConstant 0x7ffe440fee30 'round_to_nearest' 'enum std::__1::float_round_style'
| |   |-ClassTemplateSpecializationDecl 0x7ffe4411eb60 <line:345:1, line:389:1> line:346:7 class __libcpp_numeric_limits definition
| |   | |-TemplateArgument type 'double'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7ffe4411edd0 <col:1, col:7> col:7 implicit class __libcpp_numeric_limits
| |   | |-AccessSpecDecl 0x7ffe4411ee68 <line:348:1, col:10> col:1 protected
| |   | |-TypedefDecl 0x7ffe4411eea8 <line:349:5, col:20> col:20 referenced type 'double'
| |   | | `-BuiltinType 0x7ffe438328e0 'double'
| |   | |-VarDecl 0x7ffe4411ef10 <line:351:5, col:58> col:41 is_specialized 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7ffe4411ef70 <col:58> '_Bool' true
| |   | |-VarDecl 0x7ffe4411eff0 <line:353:5, col:53> col:41 is_signed 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7ffe4411f050 <col:53> '_Bool' true
| |   | |-VarDecl 0x7ffe4411f0d8 <line:354:5, <built-in>:153:26> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:354:41 referenced digits 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7ffe4411f138 <<built-in>:153:26> 'int' 53
| |   | |-VarDecl 0x7ffe4411f200 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:355:5, <built-in>:148:21> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:355:41 digits10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7ffe4411f260 <<built-in>:148:21> 'int' 15
| |   | |-VarDecl 0x7ffe4411f2f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:356:5, col:76> col:41 max_digits10 'const int' static constexpr cinit
| |   | | `-ImplicitCastExpr 0x7ffe4411f4b8 <col:56, col:76> 'const int' <IntegralCast>
| |   | |   `-BinaryOperator 0x7ffe4411f490 <col:56, col:76> 'long' '+'
| |   | |     |-ImplicitCastExpr 0x7ffe4411f478 <col:56> 'long' <IntegralCast>
| |   | |     | `-IntegerLiteral 0x7ffe4411f350 <col:56> 'int' 2
| |   | |     `-BinaryOperator 0x7ffe4411f450 <col:58, col:76> 'long' '/'
| |   | |       |-ParenExpr 0x7ffe4411f410 <col:58, col:74> 'long'
| |   | |       | `-BinaryOperator 0x7ffe4411f3e8 <col:59, col:68> 'long' '*'
| |   | |       |   |-ImplicitCastExpr 0x7ffe4411f3d0 <col:59> 'long' <IntegralCast>
| |   | |       |   | `-ImplicitCastExpr 0x7ffe4411f3b8 <col:59> 'int' <LValueToRValue>
| |   | |       |   |   `-DeclRefExpr 0x7ffe4411f370 <col:59> 'const int' lvalue Var 0x7ffe4411f0d8 'digits' 'const int'
| |   | |       |   `-IntegerLiteral 0x7ffe4411f398 <col:68> 'long' 30103
| |   | |       `-IntegerLiteral 0x7ffe4411f430 <col:76> 'long' 100000
| |   | |-CXXMethodDecl 0x7ffe4411f608 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:357:97> col:61 constexpr min 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7ffe44121258 <col:77, col:97>
| |   | | | `-ReturnStmt 0x7ffe44121240 <col:78, <built-in>:159:21>
| |   | | |   `-FloatingLiteral 0x7ffe44121220 <col:21> 'double' 2.225074e-308
| |   | | |-AlwaysInlineAttr 0x7ffe4411f6a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7ffe4411f6e8 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7ffe4411f750 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:358:97> col:61 used constexpr max 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7ffe441212b0 <col:77, col:97>
| |   | | | `-ReturnStmt 0x7ffe44121298 <col:78, <built-in>:156:21>
| |   | | |   `-FloatingLiteral 0x7ffe44121278 <col:21> 'double' 1.797693e+308
| |   | | |-AlwaysInlineAttr 0x7ffe4411f7e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7ffe4411f830 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7ffe4411f898 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:359:95> col:61 constexpr lowest 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7ffe441213a0 <col:80, col:95>
| |   | | | `-ReturnStmt 0x7ffe44121388 <col:81, col:93>
| |   | | |   `-UnaryOperator 0x7ffe44121368 <col:88, col:93> 'std::__1::__libcpp_numeric_limits<double, true>::type':'double' prefix '-'
| |   | | |     `-CallExpr 0x7ffe44121340 <col:89, col:93> 'std::__1::__libcpp_numeric_limits<double, true>::type':'double'
| |   | | |       `-ImplicitCastExpr 0x7ffe44121328 <col:89> 'std::__1::__libcpp_numeric_limits<double, true>::type (*)(void) noexcept' <FunctionToPointerDecay>
| |   | | |         `-DeclRefExpr 0x7ffe441212d0 <col:89> 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept' lvalue CXXMethod 0x7ffe4411f750 'max' 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept'
| |   | | |-AlwaysInlineAttr 0x7ffe4411f930 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7ffe4411f978 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7ffe4411f998 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:361:5, col:54> col:41 is_integer 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7ffe4411f9f8 <col:54> '_Bool' false
| |   | |-VarDecl 0x7ffe4411fa78 <line:362:5, col:52> col:41 is_exact 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7ffe4411fad8 <col:52> '_Bool' false
| |   | |-VarDecl 0x7ffe4411fb60 <line:363:5, <built-in>:332:23> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:363:41 radix 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7ffe4411fbc0 <<built-in>:332:23> 'int' 2
| |   | |-CXXMethodDecl 0x7ffe4411fc90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:364:105> col:61 constexpr epsilon 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7ffe441213f8 <col:81, col:105>
| |   | | | `-ReturnStmt 0x7ffe441213e0 <col:82, <built-in>:150:25>
| |   | | |   `-FloatingLiteral 0x7ffe441213c0 <col:25> 'double' 2.220446e-16
| |   | | |-AlwaysInlineAttr 0x7ffe4411fd28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7ffe4411fd70 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7ffe4411fdd8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:365:97> col:61 constexpr round_error 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7ffe44121450 <col:85, col:97>
| |   | | | `-ReturnStmt 0x7ffe44121438 <col:86, col:93>
| |   | | |   `-FloatingLiteral 0x7ffe44121418 <col:93> 'double' 5.000000e-01
| |   | | |-AlwaysInlineAttr 0x7ffe4411fe70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7ffe4411feb8 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7ffe4411fee0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:367:5, <built-in>:158:31> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:367:41 min_exponent 'const int' static constexpr cinit
| |   | | `-ParenExpr 0x7ffe4411ff80 <<built-in>:158:25, col:31> 'int'
| |   | |   `-UnaryOperator 0x7ffe4411ff60 <col:26, col:27> 'int' prefix '-'
| |   | |     `-IntegerLiteral 0x7ffe4411ff40 <col:27> 'int' 1021
| |   | |-VarDecl 0x7ffe44120010 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:368:5, <built-in>:157:33> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:368:41 min_exponent10 'const int' static constexpr cinit
| |   | | `-ParenExpr 0x7ffe441200b0 <<built-in>:157:28, col:33> 'int'
| |   | |   `-UnaryOperator 0x7ffe44120090 <col:29, col:30> 'int' prefix '-'
| |   | |     `-IntegerLiteral 0x7ffe44120070 <col:30> 'int' 307
| |   | |-VarDecl 0x7ffe44120140 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:369:5, <built-in>:155:25> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:369:41 max_exponent 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7ffe441201a0 <<built-in>:155:25> 'int' 1024
| |   | |-VarDecl 0x7ffe44120230 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:370:5, <built-in>:154:28> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:370:41 max_exponent10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7ffe44120290 <<built-in>:154:28> 'int' 308
| |   | |-VarDecl 0x7ffe44120318 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:372:5, col:56> col:41 has_infinity 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7ffe44120378 <col:56> '_Bool' true
| |   | |-VarDecl 0x7ffe441203f8 <line:373:5, col:57> col:41 has_quiet_NaN 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7ffe44120458 <col:57> '_Bool' true
| |   | |-VarDecl 0x7ffe441204d8 <line:374:5, col:61> col:41 has_signaling_NaN 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7ffe44120538 <col:61> '_Bool' true
| |   | |-VarDecl 0x7ffe441205b8 <line:375:5, col:68> col:55 has_denorm 'const enum std::__1::float_denorm_style' static constexpr cinit
| |   | | `-DeclRefExpr 0x7ffe44120618 <col:68> 'enum std::__1::float_denorm_style' EnumConstant 0x7ffe440ff110 'denorm_present' 'enum std::__1::float_denorm_style'
| |   | |-VarDecl 0x7ffe441206a8 <line:376:5, col:59> col:41 has_denorm_loss 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7ffe44120708 <col:59> '_Bool' false
| |   | |-CXXMethodDecl 0x7ffe441207d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:377:111> col:61 constexpr infinity 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7ffe44121630 <col:82, col:111>
| |   | | | `-ReturnStmt 0x7ffe44121618 <col:83, col:109>
| |   | | |   `-CallExpr 0x7ffe441215f0 <col:90, col:109> 'double'
| |   | | |     `-ImplicitCastExpr 0x7ffe441215d8 <col:90> 'double (*)(void) noexcept' <BuiltinFnToFnPtr>
| |   | | |       `-DeclRefExpr 0x7ffe441215b0 <col:90> '<builtin fn type>' Function 0x7ffe441214c0 '__builtin_huge_val' 'double (void) noexcept'
| |   | | |-AlwaysInlineAttr 0x7ffe44120868 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7ffe441208b0 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7ffe44120918 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:378:109> col:61 constexpr quiet_NaN 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7ffe44121930 <col:83, col:109>
| |   | | | `-ReturnStmt 0x7ffe44121918 <col:84, col:107>
| |   | | |   `-CallExpr 0x7ffe441218d0 <col:91, col:107> 'double'
| |   | | |     |-ImplicitCastExpr 0x7ffe441218b8 <col:91> 'double (*)(const char *) noexcept' <BuiltinFnToFnPtr>
| |   | | |     | `-DeclRefExpr 0x7ffe441217f8 <col:91> '<builtin fn type>' Function 0x7ffe441216a0 '__builtin_nan' 'double (const char *) noexcept'
| |   | | |     `-ImplicitCastExpr 0x7ffe44121900 <col:105> 'const char *' <ArrayToPointerDecay>
| |   | | |       `-StringLiteral 0x7ffe44121820 <col:105> 'const char [1]' lvalue ""
| |   | | |-AlwaysInlineAttr 0x7ffe441209b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7ffe441209f8 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7ffe44120a60 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:379:114> col:61 constexpr signaling_NaN 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7ffe44121bd8 <col:87, col:114>
| |   | | | `-ReturnStmt 0x7ffe44121bc0 <col:88, col:112>
| |   | | |   `-CallExpr 0x7ffe44121b78 <col:95, col:112> 'double'
| |   | | |     |-ImplicitCastExpr 0x7ffe44121b60 <col:95> 'double (*)(const char *) noexcept' <BuiltinFnToFnPtr>
| |   | | |     | `-DeclRefExpr 0x7ffe44121af8 <col:95> '<builtin fn type>' Function 0x7ffe441219a0 '__builtin_nans' 'double (const char *) noexcept'
| |   | | |     `-ImplicitCastExpr 0x7ffe44121ba8 <col:110> 'const char *' <ArrayToPointerDecay>
| |   | | |       `-StringLiteral 0x7ffe44121b20 <col:110> 'const char [1]' lvalue ""
| |   | | |-AlwaysInlineAttr 0x7ffe44120af8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7ffe44120b40 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7ffe44120ba8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:380:111> col:61 constexpr denorm_min 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7ffe44121c30 <col:84, col:111>
| |   | | | `-ReturnStmt 0x7ffe44121c18 <col:85, <built-in>:146:28>
| |   | | |   `-FloatingLiteral 0x7ffe44121bf8 <col:28> 'double' 4.940656e-324
| |   | | |-AlwaysInlineAttr 0x7ffe44120c40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7ffe44120c88 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7ffe44120ca8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:382:5, col:53> col:41 is_iec559 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7ffe44120d08 <col:53> '_Bool' true
| |   | |-VarDecl 0x7ffe44120d88 <line:383:5, col:54> col:41 is_bounded 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7ffe44120de8 <col:54> '_Bool' true
| |   | |-VarDecl 0x7ffe44120e68 <line:384:5, col:53> col:41 is_modulo 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7ffe44120ec8 <col:53> '_Bool' false
| |   | |-VarDecl 0x7ffe44120f48 <line:386:5, col:49> col:41 traps 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7ffe44120fa8 <col:49> '_Bool' false
| |   | |-VarDecl 0x7ffe44121028 <line:387:5, col:59> col:41 tinyness_before 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7ffe44121088 <col:59> '_Bool' false
| |   | `-VarDecl 0x7ffe44121108 <line:388:5, col:68> col:54 round_style 'const enum std::__1::float_round_style' static constexpr cinit
| |   |   `-DeclRefExpr 0x7ffe44121168 <col:68> 'enum std::__1::float_round_style' EnumConstant 0x7ffe440fee30 'round_to_nearest' 'enum std::__1::float_round_style'
| |   |-ClassTemplateSpecializationDecl 0x7ffe44121c90 <line:391:1, line:439:1> line:392:7 class __libcpp_numeric_limits definition
| |   | |-TemplateArgument type 'long double'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7ffe44121f00 <col:1, col:7> col:7 implicit class __libcpp_numeric_limits
| |   | |-AccessSpecDecl 0x7ffe44121f98 <line:394:1, col:10> col:1 protected
| |   | |-TypedefDecl 0x7ffe44121fd8 <line:395:5, col:25> col:25 referenced type 'long double'
| |   | | `-BuiltinType 0x7ffe43832900 'long double'
| |   | |-VarDecl 0x7ffe44122040 <line:397:5, col:58> col:41 is_specialized 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7ffe441220a0 <col:58> '_Bool' true
| |   | |-VarDecl 0x7ffe44122120 <line:399:5, col:53> col:41 is_signed 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7ffe44122180 <col:53> '_Bool' true
| |   | |-VarDecl 0x7ffe44122208 <line:400:5, <built-in>:167:27> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:400:41 referenced digits 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7ffe44122268 <<built-in>:167:27> 'int' 64
| |   | |-VarDecl 0x7ffe441222f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:401:5, <built-in>:162:22> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:401:41 digits10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7ffe44122358 <<built-in>:162:22> 'int' 18
| |   | |-VarDecl 0x7ffe441223e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:402:5, col:76> col:41 max_digits10 'const int' static constexpr cinit
| |   | | `-ImplicitCastExpr 0x7ffe441225b0 <col:56, col:76> 'const int' <IntegralCast>
| |   | |   `-BinaryOperator 0x7ffe44122588 <col:56, col:76> 'long' '+'
| |   | |     |-ImplicitCastExpr 0x7ffe44122570 <col:56> 'long' <IntegralCast>
| |   | |     | `-IntegerLiteral 0x7ffe44122448 <col:56> 'int' 2
| |   | |     `-BinaryOperator 0x7ffe44122548 <col:58, col:76> 'long' '/'
| |   | |       |-ParenExpr 0x7ffe44122508 <col:58, col:74> 'long'
| |   | |       | `-BinaryOperator 0x7ffe441224e0 <col:59, col:68> 'long' '*'
| |   | |       |   |-ImplicitCastExpr 0x7ffe441224c8 <col:59> 'long' <IntegralCast>
| |   | |       |   | `-ImplicitCastExpr 0x7ffe441224b0 <col:59> 'int' <LValueToRValue>
| |   | |       |   |   `-DeclRefExpr 0x7ffe44122468 <col:59> 'const int' lvalue Var 0x7ffe44122208 'digits' 'const int'
| |   | |       |   `-IntegerLiteral 0x7ffe44122490 <col:68> 'long' 30103
| |   | |       `-IntegerLiteral 0x7ffe44122528 <col:76> 'long' 100000
| |   | |-CXXMethodDecl 0x7ffe441226f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:403:98> col:61 constexpr min 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7ffe44124380 <col:77, col:98>
| |   | | | `-ReturnStmt 0x7ffe44124368 <col:78, <built-in>:173:22>
| |   | | |   `-FloatingLiteral 0x7ffe44124338 <col:22> 'long double' 0.000000e+00
| |   | | |-AlwaysInlineAttr 0x7ffe44122790 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7ffe441227d8 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7ffe44122840 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:404:98> col:61 used constexpr max 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7ffe441243e8 <col:77, col:98>
| |   | | | `-ReturnStmt 0x7ffe441243d0 <col:78, <built-in>:170:22>
| |   | | |   `-FloatingLiteral 0x7ffe441243a0 <col:22> 'long double' INF
| |   | | |-AlwaysInlineAttr 0x7ffe441228d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7ffe44122920 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7ffe44122988 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:405:95> col:61 constexpr lowest 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7ffe441244d0 <col:80, col:95>
| |   | | | `-ReturnStmt 0x7ffe441244b8 <col:81, col:93>
| |   | | |   `-UnaryOperator 0x7ffe44124498 <col:88, col:93> 'std::__1::__libcpp_numeric_limits<long double, true>::type':'long double' prefix '-'
| |   | | |     `-CallExpr 0x7ffe44124470 <col:89, col:93> 'std::__1::__libcpp_numeric_limits<long double, true>::type':'long double'
| |   | | |       `-ImplicitCastExpr 0x7ffe44124458 <col:89> 'std::__1::__libcpp_numeric_limits<long double, true>::type (*)(void) noexcept' <FunctionToPointerDecay>
| |   | | |         `-DeclRefExpr 0x7ffe44124408 <col:89> 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept' lvalue CXXMethod 0x7ffe44122840 'max' 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept'
| |   | | |-AlwaysInlineAttr 0x7ffe44122a20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7ffe44122a68 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7ffe44122a88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:407:5, col:54> col:41 is_integer 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7ffe44122ae8 <col:54> '_Bool' false
| |   | |-VarDecl 0x7ffe44122b68 <line:408:5, col:52> col:41 is_exact 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7ffe44122bc8 <col:52> '_Bool' false
| |   | |-VarDecl 0x7ffe44122c50 <line:409:5, <built-in>:332:23> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:409:41 radix 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7ffe44122cb0 <<built-in>:332:23> 'int' 2
| |   | |-CXXMethodDecl 0x7ffe44122d80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:410:106> col:61 constexpr epsilon 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7ffe44124538 <col:81, col:106>
| |   | | | `-ReturnStmt 0x7ffe44124520 <col:82, <built-in>:164:26>
| |   | | |   `-FloatingLiteral 0x7ffe441244f0 <col:26> 'long double' 1.084202e-19
| |   | | |-AlwaysInlineAttr 0x7ffe44122e18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7ffe44122e60 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7ffe44122ec8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:411:97> col:61 constexpr round_error 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7ffe441245a8 <col:85, col:97>
| |   | | | `-ReturnStmt 0x7ffe44124590 <col:86, col:93>
| |   | | |   `-ImplicitCastExpr 0x7ffe44124578 <col:93> 'std::__1::__libcpp_numeric_limits<long double, true>::type':'long double' <FloatingCast>
| |   | | |     `-FloatingLiteral 0x7ffe44124558 <col:93> 'double' 5.000000e-01
| |   | | |-AlwaysInlineAttr 0x7ffe44122f60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7ffe44122fa8 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7ffe44122fd0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:413:5, <built-in>:172:33> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:413:41 min_exponent 'const int' static constexpr cinit
| |   | | `-ParenExpr 0x7ffe44123070 <<built-in>:172:26, col:33> 'int'
| |   | |   `-UnaryOperator 0x7ffe44123050 <col:27, col:28> 'int' prefix '-'
| |   | |     `-IntegerLiteral 0x7ffe44123030 <col:28> 'int' 16381
| |   | |-VarDecl 0x7ffe44123100 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:414:5, <built-in>:171:35> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:414:41 min_exponent10 'const int' static constexpr cinit
| |   | | `-ParenExpr 0x7ffe441231a0 <<built-in>:171:29, col:35> 'int'
| |   | |   `-UnaryOperator 0x7ffe44123180 <col:30, col:31> 'int' prefix '-'
| |   | |     `-IntegerLiteral 0x7ffe44123160 <col:31> 'int' 4931
| |   | |-VarDecl 0x7ffe44123270 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:415:5, <built-in>:169:26> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:415:41 max_exponent 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7ffe441232d0 <<built-in>:169:26> 'int' 16384
| |   | |-VarDecl 0x7ffe44123360 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:416:5, <built-in>:168:29> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:416:41 max_exponent10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7ffe441233c0 <<built-in>:168:29> 'int' 4932
| |   | |-VarDecl 0x7ffe44123448 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:418:5, col:56> col:41 has_infinity 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7ffe441234a8 <col:56> '_Bool' true
| |   | |-VarDecl 0x7ffe44123528 <line:419:5, col:57> col:41 has_quiet_NaN 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7ffe44123588 <col:57> '_Bool' true
| |   | |-VarDecl 0x7ffe44123608 <line:420:5, col:61> col:41 has_signaling_NaN 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7ffe44123668 <col:61> '_Bool' true
| |   | |-VarDecl 0x7ffe441236e8 <line:421:5, col:68> col:55 has_denorm 'const enum std::__1::float_denorm_style' static constexpr cinit
| |   | | `-DeclRefExpr 0x7ffe44123748 <col:68> 'enum std::__1::float_denorm_style' EnumConstant 0x7ffe440ff110 'denorm_present' 'enum std::__1::float_denorm_style'
| |   | |-VarDecl 0x7ffe441237d8 <line:422:5, col:59> col:41 has_denorm_loss 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7ffe44123838 <col:59> '_Bool' false
| |   | |-CXXMethodDecl 0x7ffe44123900 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:423:112> col:61 constexpr infinity 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7ffe44124788 <col:82, col:112>
| |   | | | `-ReturnStmt 0x7ffe44124770 <col:83, col:110>
| |   | | |   `-CallExpr 0x7ffe44124748 <col:90, col:110> 'long double'
| |   | | |     `-ImplicitCastExpr 0x7ffe44124730 <col:90> 'long double (*)(void) noexcept' <BuiltinFnToFnPtr>
| |   | | |       `-DeclRefExpr 0x7ffe44124708 <col:90> '<builtin fn type>' Function 0x7ffe44124618 '__builtin_huge_vall' 'long double (void) noexcept'
| |   | | |-AlwaysInlineAttr 0x7ffe44123998 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7ffe441239e0 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7ffe44123a48 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:424:110> col:61 constexpr quiet_NaN 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7ffe44124a90 <col:83, col:110>
| |   | | | `-ReturnStmt 0x7ffe44124a78 <col:84, col:108>
| |   | | |   `-CallExpr 0x7ffe44124a30 <col:91, col:108> 'long double'
| |   | | |     |-ImplicitCastExpr 0x7ffe44124a18 <col:91> 'long double (*)(const char *) noexcept' <BuiltinFnToFnPtr>
| |   | | |     | `-DeclRefExpr 0x7ffe44124950 <col:91> '<builtin fn type>' Function 0x7ffe441247f8 '__builtin_nanl' 'long double (const char *) noexcept'
| |   | | |     `-ImplicitCastExpr 0x7ffe44124a60 <col:106> 'const char *' <ArrayToPointerDecay>
| |   | | |       `-StringLiteral 0x7ffe44124978 <col:106> 'const char [1]' lvalue ""
| |   | | |-AlwaysInlineAttr 0x7ffe44123ae0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7ffe44123b28 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7ffe44123b90 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:425:115> col:61 constexpr signaling_NaN 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7ffe44124d38 <col:87, col:115>
| |   | | | `-ReturnStmt 0x7ffe44124d20 <col:88, col:113>
| |   | | |   `-CallExpr 0x7ffe44124cd8 <col:95, col:113> 'long double'
| |   | | |     |-ImplicitCastExpr 0x7ffe44124cc0 <col:95> 'long double (*)(const char *) noexcept' <BuiltinFnToFnPtr>
| |   | | |     | `-DeclRefExpr 0x7ffe44124c58 <col:95> '<builtin fn type>' Function 0x7ffe44124b00 '__builtin_nansl' 'long double (const char *) noexcept'
| |   | | |     `-ImplicitCastExpr 0x7ffe44124d08 <col:111> 'const char *' <ArrayToPointerDecay>
| |   | | |       `-StringLiteral 0x7ffe44124c80 <col:111> 'const char [1]' lvalue ""
| |   | | |-AlwaysInlineAttr 0x7ffe44123c28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7ffe44123c70 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7ffe44123cd8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:426:112> col:61 constexpr denorm_min 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7ffe44124da0 <col:84, col:112>
| |   | | | `-ReturnStmt 0x7ffe44124d88 <col:85, <built-in>:160:29>
| |   | | |   `-FloatingLiteral 0x7ffe44124d58 <col:29> 'long double' 0.000000e+00
| |   | | |-AlwaysInlineAttr 0x7ffe44123d70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7ffe44123db8 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7ffe44123dd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:431:5, col:53> col:41 is_iec559 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7ffe44123e38 <col:53> '_Bool' true
| |   | |-VarDecl 0x7ffe44123eb8 <line:433:5, col:54> col:41 is_bounded 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7ffe44123f18 <col:54> '_Bool' true
| |   | |-VarDecl 0x7ffe44123f98 <line:434:5, col:53> col:41 is_modulo 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7ffe44123ff8 <col:53> '_Bool' false
| |   | |-VarDecl 0x7ffe44124078 <line:436:5, col:49> col:41 traps 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7ffe441240d8 <col:49> '_Bool' false
| |   | |-VarDecl 0x7ffe44124158 <line:437:5, col:59> col:41 tinyness_before 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7ffe441241b8 <col:59> '_Bool' false
| |   | `-VarDecl 0x7ffe44124238 <line:438:5, col:68> col:54 round_style 'const enum std::__1::float_round_style' static constexpr cinit
| |   |   `-DeclRefExpr 0x7ffe44124298 <col:68> 'enum std::__1::float_round_style' EnumConstant 0x7ffe440fee30 'round_to_nearest' 'enum std::__1::float_round_style'
| |   |-ClassTemplateDecl 0x7ffe44124f08 <line:441:1, line:485:1> line:442:28 numeric_limits
| |   | |-TemplateTypeParmDecl 0x7ffe44124dc0 <line:441:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7ffe44124e70 <line:442:1, line:485:1> line:442:28 class numeric_limits definition
| |   |   |-private '__libcpp_numeric_limits<typename remove_cv<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7ffe44125180 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7ffe441255a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:442:1, col:28> col:28 implicit class numeric_limits
| |   |   |-TypedefDecl 0x7ffe441258f8 <line:445:5, col:68> col:68 referenced __base '__libcpp_numeric_limits<typename remove_cv<_Tp>::type>'
| |   |   | `-TemplateSpecializationType 0x7ffe44125850 '__libcpp_numeric_limits<typename remove_cv<_Tp>::type>' dependent __libcpp_numeric_limits
| |   |   |   `-TemplateArgument type 'typename remove_cv<_Tp>::type'
| |   |   |-TypedefDecl 0x7ffe44125a60 <line:446:5, col:35> col:35 referenced type 'typename __base::type'
| |   |   | `-DependentNameType 0x7ffe441259f0 'typename __base::type' dependent
| |   |   |-AccessSpecDecl 0x7ffe44125ab8 <line:447:1, col:7> col:1 public
| |   |   |-VarDecl 0x7ffe44125af0 <line:448:5, col:66> col:41 is_specialized 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7ffe44125b88 <col:58, col:66> '<dependent type>' lvalue
| |   |   |-CXXMethodDecl 0x7ffe44125cd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:449:99> col:61 constexpr min 'std::__1::numeric_limits::type (void) noexcept' static
| |   |   | |-CompoundStmt 0x7ffe44127d10 <col:77, col:99>
| |   |   | | `-ReturnStmt 0x7ffe44127cf8 <col:78, col:97>
| |   |   | |   `-CallExpr 0x7ffe44127cd0 <col:85, col:97> '<dependent type>'
| |   |   | |     `-DependentScopeDeclRefExpr 0x7ffe44127c90 <col:85, col:93> '<dependent type>' lvalue
| |   |   | |-AlwaysInlineAttr 0x7ffe44125d70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   | `-VisibilityAttr 0x7ffe44125db8 <col:51, col:74> Hidden
| |   |   |-CXXMethodDecl 0x7ffe44125e20 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:450:99> col:61 constexpr max 'std::__1::numeric_limits::type (void) noexcept' static
| |   |   | |-CompoundStmt 0x7ffe44127de8 <col:77, col:99>
| |   |   | | `-ReturnStmt 0x7ffe44127dd0 <col:78, col:97>
| |   |   | |   `-CallExpr 0x7ffe44127da8 <col:85, col:97> '<dependent type>'
| |   |   | |     `-DependentScopeDeclRefExpr 0x7ffe44127d68 <col:85, col:93> '<dependent type>' lvalue
| |   |   | |-AlwaysInlineAttr 0x7ffe44125eb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   | `-VisibilityAttr 0x7ffe44125f00 <col:51, col:74> Hidden
| |   |   |-CXXMethodDecl 0x7ffe44125f68 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:451:105> col:61 constexpr lowest 'std::__1::numeric_limits::type (void) noexcept' static
| |   |   | |-CompoundStmt 0x7ffe44127ec0 <col:80, col:105>
| |   |   | | `-ReturnStmt 0x7ffe44127ea8 <col:81, col:103>
| |   |   | |   `-CallExpr 0x7ffe44127e80 <col:88, col:103> '<dependent type>'
| |   |   | |     `-DependentScopeDeclRefExpr 0x7ffe44127e40 <col:88, col:96> '<dependent type>' lvalue
| |   |   | |-AlwaysInlineAttr 0x7ffe44126000 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   | `-VisibilityAttr 0x7ffe44126048 <col:51, col:74> Hidden
| |   |   |-VarDecl 0x7ffe44126070 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:453:5, col:58> col:41 digits 'const int' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7ffe44126108 <col:50, col:58> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7ffe44126160 <line:454:5, col:60> col:41 digits10 'const int' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7ffe441261f8 <col:52, col:60> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7ffe44126250 <line:455:5, col:64> col:41 max_digits10 'const int' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7ffe441262e8 <col:56, col:64> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7ffe44126338 <line:456:5, col:61> col:41 is_signed 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7ffe441263d0 <col:53, col:61> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7ffe44126420 <line:457:5, col:62> col:41 is_integer 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7ffe441264b8 <col:54, col:62> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7ffe44126508 <line:458:5, col:60> col:41 is_exact 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7ffe441265a0 <col:52, col:60> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7ffe441265f8 <line:459:5, col:57> col:41 radix 'const int' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7ffe44126690 <col:49, col:57> '<dependent type>' lvalue
| |   |   |-CXXMethodDecl 0x7ffe44126728 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:460:107> col:61 constexpr epsilon 'std::__1::numeric_limits::type (void) noexcept' static
| |   |   | |-CompoundStmt 0x7ffe44127f98 <col:81, col:107>
| |   |   | | `-ReturnStmt 0x7ffe44127f80 <col:82, col:105>
| |   |   | |   `-CallExpr 0x7ffe44127f58 <col:89, col:105> '<dependent type>'
| |   |   | |     `-DependentScopeDeclRefExpr 0x7ffe44127f18 <col:89, col:97> '<dependent type>' lvalue
| |   |   | |-AlwaysInlineAttr 0x7ffe441267c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   | `-VisibilityAttr 0x7ffe44126808 <col:51, col:74> Hidden
| |   |   |-CXXMethodDecl 0x7ffe44126870 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:461:115> col:61 constexpr round_error 'std::__1::numeric_limits::type (void) noexcept' static
| |   |   | |-CompoundStmt 0x7ffe44128070 <col:85, col:115>
| |   |   | | `-ReturnStmt 0x7ffe44128058 <col:86, col:113>
| |   |   | |   `-CallExpr 0x7ffe44128030 <col:93, col:113> '<dependent type>'
| |   |   | |     `-DependentScopeDeclRefExpr 0x7ffe44127ff0 <col:93, col:101> '<dependent type>' lvalue
| |   |   | |-AlwaysInlineAttr 0x7ffe44126908 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   | `-VisibilityAttr 0x7ffe44126950 <col:51, col:74> Hidden
| |   |   |-VarDecl 0x7ffe44126978 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:463:5, col:64> col:41 min_exponent 'const int' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7ffe44126a10 <col:56, col:64> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7ffe44126a68 <line:464:5, col:66> col:41 min_exponent10 'const int' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7ffe44126b00 <col:58, col:66> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7ffe44126b58 <line:465:5, col:64> col:41 max_exponent 'const int' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7ffe44126bf0 <col:56, col:64> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7ffe44126c48 <line:466:5, col:66> col:41 max_exponent10 'const int' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7ffe44126ce0 <col:58, col:66> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7ffe44126d30 <line:468:5, col:64> col:41 has_infinity 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7ffe44126dc8 <col:56, col:64> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7ffe44126e18 <line:469:5, col:65> col:41 has_quiet_NaN 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7ffe44126eb0 <col:57, col:65> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7ffe44126f00 <line:470:5, col:69> col:41 has_signaling_NaN 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7ffe44126f98 <col:61, col:69> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7ffe44126fe8 <line:471:5, col:76> col:55 has_denorm 'const enum std::__1::float_denorm_style' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7ffe44127080 <col:68, col:76> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7ffe441270d0 <line:472:5, col:67> col:41 has_denorm_loss 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7ffe44127168 <col:59, col:67> '<dependent type>' lvalue
| |   |   |-CXXMethodDecl 0x7ffe44127200 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:473:109> col:61 constexpr infinity 'std::__1::numeric_limits::type (void) noexcept' static
| |   |   | |-CompoundStmt 0x7ffe44128148 <col:82, col:109>
| |   |   | | `-ReturnStmt 0x7ffe44128130 <col:83, col:107>
| |   |   | |   `-CallExpr 0x7ffe44128108 <col:90, col:107> '<dependent type>'
| |   |   | |     `-DependentScopeDeclRefExpr 0x7ffe441280c8 <col:90, col:98> '<dependent type>' lvalue
| |   |   | |-AlwaysInlineAttr 0x7ffe44127298 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   | `-VisibilityAttr 0x7ffe441272e0 <col:51, col:74> Hidden
| |   |   |-CXXMethodDecl 0x7ffe44127348 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:474:111> col:61 constexpr quiet_NaN 'std::__1::numeric_limits::type (void) noexcept' static
| |   |   | |-CompoundStmt 0x7ffe44128220 <col:83, col:111>
| |   |   | | `-ReturnStmt 0x7ffe44128208 <col:84, col:109>
| |   |   | |   `-CallExpr 0x7ffe441281e0 <col:91, col:109> '<dependent type>'
| |   |   | |     `-DependentScopeDeclRefExpr 0x7ffe441281a0 <col:91, col:99> '<dependent type>' lvalue
| |   |   | |-AlwaysInlineAttr 0x7ffe441273e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   | `-VisibilityAttr 0x7ffe44127428 <col:51, col:74> Hidden
| |   |   |-CXXMethodDecl 0x7ffe44127490 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:475:119> col:61 constexpr signaling_NaN 'std::__1::numeric_limits::type (void) noexcept' static
| |   |   | |-CompoundStmt 0x7ffe441282f8 <col:87, col:119>
| |   |   | | `-ReturnStmt 0x7ffe441282e0 <col:88, col:117>
| |   |   | |   `-CallExpr 0x7ffe441282b8 <col:95, col:117> '<dependent type>'
| |   |   | |     `-DependentScopeDeclRefExpr 0x7ffe44128278 <col:95, col:103> '<dependent type>' lvalue
| |   |   | |-AlwaysInlineAttr 0x7ffe44127528 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   | `-VisibilityAttr 0x7ffe44127570 <col:51, col:74> Hidden
| |   |   |-CXXMethodDecl 0x7ffe441275d8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:476:113> col:61 constexpr denorm_min 'std::__1::numeric_limits::type (void) noexcept' static
| |   |   | |-CompoundStmt 0x7ffe441283d0 <col:84, col:113>
| |   |   | | `-ReturnStmt 0x7ffe441283b8 <col:85, col:111>
| |   |   | |   `-CallExpr 0x7ffe44128390 <col:92, col:111> '<dependent type>'
| |   |   | |     `-DependentScopeDeclRefExpr 0x7ffe44128350 <col:92, col:100> '<dependent type>' lvalue
| |   |   | |-AlwaysInlineAttr 0x7ffe44127670 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   | `-VisibilityAttr 0x7ffe441276b8 <col:51, col:74> Hidden
| |   |   |-VarDecl 0x7ffe441276d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:478:5, col:61> col:41 is_iec559 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7ffe44127770 <col:53, col:61> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7ffe441277c0 <line:479:5, col:62> col:41 is_bounded 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7ffe44127858 <col:54, col:62> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7ffe441278a8 <line:480:5, col:61> col:41 is_modulo 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7ffe44127940 <col:53, col:61> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7ffe44127990 <line:482:5, col:57> col:41 traps 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7ffe44127a28 <col:49, col:57> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7ffe44127a78 <line:483:5, col:67> col:41 tinyness_before 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7ffe44127b10 <col:59, col:67> '<dependent type>' lvalue
| |   |   `-VarDecl 0x7ffe44127b60 <line:484:5, col:76> col:54 round_style 'const enum std::__1::float_round_style' static constexpr cinit
| |   |     `-DependentScopeDeclRefExpr 0x7ffe44127bf8 <col:68, col:76> '<dependent type>' lvalue
| |   |-VarDecl 0x7ffe441285e0 parent 0x7ffe44124e70 prev 0x7ffe44125af0 <line:487:1, line:488:55> col:55 is_specialized 'const _Bool' constexpr
| |   |-VarDecl 0x7ffe44128878 parent 0x7ffe44124e70 prev 0x7ffe44126070 <line:489:1, line:490:54> col:54 digits 'const int' constexpr
| |   |-VarDecl 0x7ffe44128b18 parent 0x7ffe44124e70 prev 0x7ffe44126160 <line:491:1, line:492:54> col:54 digits10 'const int' constexpr
| |   |-VarDecl 0x7ffe44128db8 parent 0x7ffe44124e70 prev 0x7ffe44126250 <line:493:1, line:494:54> col:54 max_digits10 'const int' constexpr
| |   |-VarDecl 0x7ffe44129050 parent 0x7ffe44124e70 prev 0x7ffe44126338 <line:495:1, line:496:55> col:55 is_signed 'const _Bool' constexpr
| |   |-VarDecl 0x7ffe4405d4f0 parent 0x7ffe44124e70 prev 0x7ffe44126420 <line:497:1, line:498:55> col:55 is_integer 'const _Bool' constexpr
| |   |-VarDecl 0x7ffe4405d780 parent 0x7ffe44124e70 prev 0x7ffe44126508 <line:499:1, line:500:55> col:55 is_exact 'const _Bool' constexpr
| |   |-VarDecl 0x7ffe4405da18 parent 0x7ffe44124e70 prev 0x7ffe441265f8 <line:501:1, line:502:54> col:54 radix 'const int' constexpr
| |   |-VarDecl 0x7ffe4405dcb8 parent 0x7ffe44124e70 prev 0x7ffe44126978 <line:503:1, line:504:54> col:54 min_exponent 'const int' constexpr
| |   |-VarDecl 0x7ffe4405df58 parent 0x7ffe44124e70 prev 0x7ffe44126a68 <line:505:1, line:506:54> col:54 min_exponent10 'const int' constexpr
| |   |-VarDecl 0x7ffe4405e1f8 parent 0x7ffe44124e70 prev 0x7ffe44126b58 <line:507:1, line:508:54> col:54 max_exponent 'const int' constexpr
| |   |-VarDecl 0x7ffe4405e498 parent 0x7ffe44124e70 prev 0x7ffe44126c48 <line:509:1, line:510:54> col:54 max_exponent10 'const int' constexpr
| |   |-VarDecl 0x7ffe4405e730 parent 0x7ffe44124e70 prev 0x7ffe44126d30 <line:511:1, line:512:55> col:55 has_infinity 'const _Bool' constexpr
| |   |-VarDecl 0x7ffe4405e9c0 parent 0x7ffe44124e70 prev 0x7ffe44126e18 <line:513:1, line:514:55> col:55 has_quiet_NaN 'const _Bool' constexpr
| |   |-VarDecl 0x7ffe4405ec50 parent 0x7ffe44124e70 prev 0x7ffe44126f00 <line:515:1, line:516:55> col:55 has_signaling_NaN 'const _Bool' constexpr
| |   |-VarDecl 0x7ffe4405eee0 parent 0x7ffe44124e70 prev 0x7ffe44126fe8 <line:517:1, line:518:69> col:69 has_denorm 'const enum std::__1::float_denorm_style' constexpr
| |   |-VarDecl 0x7ffe4405f170 parent 0x7ffe44124e70 prev 0x7ffe441270d0 <line:519:1, line:520:55> col:55 has_denorm_loss 'const _Bool' constexpr
| |   |-VarDecl 0x7ffe44060400 parent 0x7ffe44124e70 prev 0x7ffe441276d8 <line:521:1, line:522:55> col:55 is_iec559 'const _Bool' constexpr
| |   |-VarDecl 0x7ffe44060690 parent 0x7ffe44124e70 prev 0x7ffe441277c0 <line:523:1, line:524:55> col:55 is_bounded 'const _Bool' constexpr
| |   |-VarDecl 0x7ffe44060920 parent 0x7ffe44124e70 prev 0x7ffe441278a8 <line:525:1, line:526:55> col:55 is_modulo 'const _Bool' constexpr
| |   |-VarDecl 0x7ffe44060bb0 parent 0x7ffe44124e70 prev 0x7ffe44127990 <line:527:1, line:528:55> col:55 traps 'const _Bool' constexpr
| |   |-VarDecl 0x7ffe44060e40 parent 0x7ffe44124e70 prev 0x7ffe44127a78 <line:529:1, line:530:55> col:55 tinyness_before 'const _Bool' constexpr
| |   |-VarDecl 0x7ffe440610d0 parent 0x7ffe44124e70 prev 0x7ffe44127b60 <line:531:1, line:532:68> col:68 round_style 'const enum std::__1::float_round_style' constexpr
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe44061308 <line:534:1, line:578:1> line:535:28 class numeric_limits definition
| |   | |-private 'numeric_limits<_Tp>'
| |   | |-TemplateArgument type 'const type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7ffe44061170 <line:534:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7ffe44061448 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7ffe44061638 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:535:1, col:28> col:28 implicit class numeric_limits
| |   | |-TypedefDecl 0x7ffe44061788 <line:538:5, col:33> col:33 referenced __base 'numeric_limits<_Tp>'
| |   | | `-TemplateSpecializationType 0x7ffe440616e0 'numeric_limits<_Tp>' dependent numeric_limits
| |   | |   `-TemplateArgument type '_Tp'
| |   | |-TypedefDecl 0x7ffe440617f0 <line:539:5, col:17> col:17 referenced type '_Tp'
| |   | | `-TemplateTypeParmType 0x7ffe440611b0 '_Tp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7ffe44061170 '_Tp'
| |   | |-AccessSpecDecl 0x7ffe44061848 <line:540:1, col:7> col:1 public
| |   | |-VarDecl 0x7ffe44061880 <line:541:5, col:66> col:41 is_specialized 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7ffe44061950 <col:58, col:66> '<dependent type>' lvalue
| |   | |-CXXMethodDecl 0x7ffe44061a68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:542:99> col:61 constexpr min 'std::__1::numeric_limits<const type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7ffe44063ab0 <col:77, col:99>
| |   | | | `-ReturnStmt 0x7ffe44063a98 <col:78, col:97>
| |   | | |   `-CallExpr 0x7ffe44063a70 <col:85, col:97> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7ffe44063a30 <col:85, col:93> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7ffe44061b00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7ffe44061b48 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7ffe44061bb0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:543:99> col:61 constexpr max 'std::__1::numeric_limits<const type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7ffe44063b88 <col:77, col:99>
| |   | | | `-ReturnStmt 0x7ffe44063b70 <col:78, col:97>
| |   | | |   `-CallExpr 0x7ffe44063b48 <col:85, col:97> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7ffe44063b08 <col:85, col:93> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7ffe44061c48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7ffe44061c90 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7ffe44061cf8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:544:105> col:61 constexpr lowest 'std::__1::numeric_limits<const type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7ffe44063c60 <col:80, col:105>
| |   | | | `-ReturnStmt 0x7ffe44063c48 <col:81, col:103>
| |   | | |   `-CallExpr 0x7ffe44063c20 <col:88, col:103> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7ffe44063be0 <col:88, col:96> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7ffe44061d90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7ffe44061dd8 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7ffe44061e00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:546:5, col:58> col:41 digits 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7ffe44061e98 <col:50, col:58> '<dependent type>' lvalue
| |   | |-VarDecl 0x7ffe44061ef0 <line:547:5, col:60> col:41 digits10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7ffe44061f88 <col:52, col:60> '<dependent type>' lvalue
| |   | |-VarDecl 0x7ffe44061fe0 <line:548:5, col:64> col:41 max_digits10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7ffe44062078 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7ffe440620c8 <line:549:5, col:61> col:41 is_signed 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7ffe44062160 <col:53, col:61> '<dependent type>' lvalue
| |   | |-VarDecl 0x7ffe440621b0 <line:550:5, col:62> col:41 is_integer 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7ffe44062248 <col:54, col:62> '<dependent type>' lvalue
| |   | |-VarDecl 0x7ffe44062298 <line:551:5, col:60> col:41 is_exact 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7ffe44062330 <col:52, col:60> '<dependent type>' lvalue
| |   | |-VarDecl 0x7ffe44062388 <line:552:5, col:57> col:41 radix 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7ffe44062430 <col:49, col:57> '<dependent type>' lvalue
| |   | |-CXXMethodDecl 0x7ffe440624c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:553:107> col:61 constexpr epsilon 'std::__1::numeric_limits<const type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7ffe44063d38 <col:81, col:107>
| |   | | | `-ReturnStmt 0x7ffe44063d20 <col:82, col:105>
| |   | | |   `-CallExpr 0x7ffe44063cf8 <col:89, col:105> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7ffe44063cb8 <col:89, col:97> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7ffe44062560 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7ffe440625a8 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7ffe44062610 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:554:115> col:61 constexpr round_error 'std::__1::numeric_limits<const type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7ffe44063e10 <col:85, col:115>
| |   | | | `-ReturnStmt 0x7ffe44063df8 <col:86, col:113>
| |   | | |   `-CallExpr 0x7ffe44063dd0 <col:93, col:113> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7ffe44063d90 <col:93, col:101> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7ffe440626a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7ffe440626f0 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7ffe44062718 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:556:5, col:64> col:41 min_exponent 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7ffe440627b0 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7ffe44062808 <line:557:5, col:66> col:41 min_exponent10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7ffe440628a0 <col:58, col:66> '<dependent type>' lvalue
| |   | |-VarDecl 0x7ffe440628f8 <line:558:5, col:64> col:41 max_exponent 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7ffe44062990 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7ffe440629e8 <line:559:5, col:66> col:41 max_exponent10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7ffe44062a80 <col:58, col:66> '<dependent type>' lvalue
| |   | |-VarDecl 0x7ffe44062ad0 <line:561:5, col:64> col:41 has_infinity 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7ffe44062b68 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7ffe44062bb8 <line:562:5, col:65> col:41 has_quiet_NaN 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7ffe44062c50 <col:57, col:65> '<dependent type>' lvalue
| |   | |-VarDecl 0x7ffe44062ca0 <line:563:5, col:69> col:41 has_signaling_NaN 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7ffe44062d38 <col:61, col:69> '<dependent type>' lvalue
| |   | |-VarDecl 0x7ffe44062d88 <line:564:5, col:76> col:55 has_denorm 'const enum std::__1::float_denorm_style' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7ffe44062e20 <col:68, col:76> '<dependent type>' lvalue
| |   | |-VarDecl 0x7ffe44062e70 <line:565:5, col:67> col:41 has_denorm_loss 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7ffe44062f08 <col:59, col:67> '<dependent type>' lvalue
| |   | |-CXXMethodDecl 0x7ffe44062fa0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:566:109> col:61 constexpr infinity 'std::__1::numeric_limits<const type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7ffe44063ee8 <col:82, col:109>
| |   | | | `-ReturnStmt 0x7ffe44063ed0 <col:83, col:107>
| |   | | |   `-CallExpr 0x7ffe44063ea8 <col:90, col:107> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7ffe44063e68 <col:90, col:98> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7ffe44063038 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7ffe44063080 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7ffe440630e8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:567:111> col:61 constexpr quiet_NaN 'std::__1::numeric_limits<const type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7ffe44063fc0 <col:83, col:111>
| |   | | | `-ReturnStmt 0x7ffe44063fa8 <col:84, col:109>
| |   | | |   `-CallExpr 0x7ffe44063f80 <col:91, col:109> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7ffe44063f40 <col:91, col:99> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7ffe44063180 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7ffe440631c8 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7ffe44063230 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:568:119> col:61 constexpr signaling_NaN 'std::__1::numeric_limits<const type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7ffe44064098 <col:87, col:119>
| |   | | | `-ReturnStmt 0x7ffe44064080 <col:88, col:117>
| |   | | |   `-CallExpr 0x7ffe44064058 <col:95, col:117> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7ffe44064018 <col:95, col:103> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7ffe440632c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7ffe44063310 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7ffe44063378 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:569:113> col:61 constexpr denorm_min 'std::__1::numeric_limits<const type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7ffe44064170 <col:84, col:113>
| |   | | | `-ReturnStmt 0x7ffe44064158 <col:85, col:111>
| |   | | |   `-CallExpr 0x7ffe44064130 <col:92, col:111> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7ffe440640f0 <col:92, col:100> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7ffe44063410 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7ffe44063458 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7ffe44063478 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:571:5, col:61> col:41 is_iec559 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7ffe44063510 <col:53, col:61> '<dependent type>' lvalue
| |   | |-VarDecl 0x7ffe44063560 <line:572:5, col:62> col:41 is_bounded 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7ffe440635f8 <col:54, col:62> '<dependent type>' lvalue
| |   | |-VarDecl 0x7ffe44063648 <line:573:5, col:61> col:41 is_modulo 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7ffe440636e0 <col:53, col:61> '<dependent type>' lvalue
| |   | |-VarDecl 0x7ffe44063730 <line:575:5, col:57> col:41 traps 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7ffe440637c8 <col:49, col:57> '<dependent type>' lvalue
| |   | |-VarDecl 0x7ffe44063818 <line:576:5, col:67> col:41 tinyness_before 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7ffe440638b0 <col:59, col:67> '<dependent type>' lvalue
| |   | `-VarDecl 0x7ffe44063900 <line:577:5, col:76> col:54 round_style 'const enum std::__1::float_round_style' static constexpr cinit
| |   |   `-DependentScopeDeclRefExpr 0x7ffe44063998 <col:68, col:76> '<dependent type>' lvalue
| |   |-VarDecl 0x7ffe44064380 parent 0x7ffe44061308 prev 0x7ffe44061880 <line:580:1, line:581:61> col:61 is_specialized 'const _Bool' constexpr
| |   |-VarDecl 0x7ffe44064638 parent 0x7ffe44061308 prev 0x7ffe44061e00 <line:582:1, line:583:60> col:60 digits 'const int' constexpr
| |   |-VarDecl 0x7ffe440648d8 parent 0x7ffe44061308 prev 0x7ffe44061ef0 <line:584:1, line:585:60> col:60 digits10 'const int' constexpr
| |   |-VarDecl 0x7ffe44064b78 parent 0x7ffe44061308 prev 0x7ffe44061fe0 <line:586:1, line:587:60> col:60 max_digits10 'const int' constexpr
| |   |-VarDecl 0x7ffe44064e10 parent 0x7ffe44061308 prev 0x7ffe440620c8 <line:588:1, line:589:61> col:61 is_signed 'const _Bool' constexpr
| |   |-VarDecl 0x7ffe440650a0 parent 0x7ffe44061308 prev 0x7ffe440621b0 <line:590:1, line:591:61> col:61 is_integer 'const _Bool' constexpr
| |   |-VarDecl 0x7ffe44065330 parent 0x7ffe44061308 prev 0x7ffe44062298 <line:592:1, line:593:61> col:61 is_exact 'const _Bool' constexpr
| |   |-VarDecl 0x7ffe440655c8 parent 0x7ffe44061308 prev 0x7ffe44062388 <line:594:1, line:595:60> col:60 radix 'const int' constexpr
| |   |-VarDecl 0x7ffe44065868 parent 0x7ffe44061308 prev 0x7ffe44062718 <line:596:1, line:597:60> col:60 min_exponent 'const int' constexpr
| |   |-VarDecl 0x7ffe44065b08 parent 0x7ffe44061308 prev 0x7ffe44062808 <line:598:1, line:599:60> col:60 min_exponent10 'const int' constexpr
| |   |-VarDecl 0x7ffe44065da8 parent 0x7ffe44061308 prev 0x7ffe440628f8 <line:600:1, line:601:60> col:60 max_exponent 'const int' constexpr
| |   |-VarDecl 0x7ffe44066048 parent 0x7ffe44061308 prev 0x7ffe440629e8 <line:602:1, line:603:60> col:60 max_exponent10 'const int' constexpr
| |   |-VarDecl 0x7ffe440662e0 parent 0x7ffe44061308 prev 0x7ffe44062ad0 <line:604:1, line:605:61> col:61 has_infinity 'const _Bool' constexpr
| |   |-VarDecl 0x7ffe44066570 parent 0x7ffe44061308 prev 0x7ffe44062bb8 <line:606:1, line:607:61> col:61 has_quiet_NaN 'const _Bool' constexpr
| |   |-VarDecl 0x7ffe44066800 parent 0x7ffe44061308 prev 0x7ffe44062ca0 <line:608:1, line:609:61> col:61 has_signaling_NaN 'const _Bool' constexpr
| |   |-VarDecl 0x7ffe44066a90 parent 0x7ffe44061308 prev 0x7ffe44062d88 <line:610:1, line:611:75> col:75 has_denorm 'const enum std::__1::float_denorm_style' constexpr
| |   |-VarDecl 0x7ffe44066d20 parent 0x7ffe44061308 prev 0x7ffe44062e70 <line:612:1, line:613:61> col:61 has_denorm_loss 'const _Bool' constexpr
| |   |-VarDecl 0x7ffe44066fb0 parent 0x7ffe44061308 prev 0x7ffe44063478 <line:614:1, line:615:61> col:61 is_iec559 'const _Bool' constexpr
| |   |-VarDecl 0x7ffe44067240 parent 0x7ffe44061308 prev 0x7ffe44063560 <line:616:1, line:617:61> col:61 is_bounded 'const _Bool' constexpr
| |   |-VarDecl 0x7ffe440674d0 parent 0x7ffe44061308 prev 0x7ffe44063648 <line:618:1, line:619:61> col:61 is_modulo 'const _Bool' constexpr
| |   |-VarDecl 0x7ffe44067760 parent 0x7ffe44061308 prev 0x7ffe44063730 <line:620:1, line:621:61> col:61 traps 'const _Bool' constexpr
| |   |-VarDecl 0x7ffe440679f0 parent 0x7ffe44061308 prev 0x7ffe44063818 <line:622:1, line:623:61> col:61 tinyness_before 'const _Bool' constexpr
| |   |-VarDecl 0x7ffe44067c80 parent 0x7ffe44061308 prev 0x7ffe44063900 <line:624:1, line:625:74> col:74 round_style 'const enum std::__1::float_round_style' constexpr
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe44067eb8 <line:627:1, line:671:1> line:628:28 class numeric_limits definition
| |   | |-private 'numeric_limits<_Tp>'
| |   | |-TemplateArgument type 'volatile type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7ffe44067d20 <line:627:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7ffe44067ff8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7ffe440681e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:628:1, col:28> col:28 implicit class numeric_limits
| |   | |-TypedefDecl 0x7ffe44068338 <line:631:5, col:33> col:33 referenced __base 'numeric_limits<_Tp>'
| |   | | `-TemplateSpecializationType 0x7ffe44068290 'numeric_limits<_Tp>' dependent numeric_limits
| |   | |   `-TemplateArgument type '_Tp'
| |   | |-TypedefDecl 0x7ffe440683a0 <line:632:5, col:17> col:17 referenced type '_Tp'
| |   | | `-TemplateTypeParmType 0x7ffe44067d60 '_Tp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7ffe44067d20 '_Tp'
| |   | |-AccessSpecDecl 0x7ffe44129200 <line:633:1, col:7> col:1 public
| |   | |-VarDecl 0x7ffe44129238 <line:634:5, col:66> col:41 is_specialized 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7ffe44129310 <col:58, col:66> '<dependent type>' lvalue
| |   | |-CXXMethodDecl 0x7ffe44129428 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:635:99> col:61 constexpr min 'std::__1::numeric_limits<volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7ffe4412b498 <col:77, col:99>
| |   | | | `-ReturnStmt 0x7ffe4412b480 <col:78, col:97>
| |   | | |   `-CallExpr 0x7ffe4412b458 <col:85, col:97> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7ffe4412b418 <col:85, col:93> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7ffe441294c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7ffe44129508 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7ffe44129570 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:636:99> col:61 constexpr max 'std::__1::numeric_limits<volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7ffe4412b570 <col:77, col:99>
| |   | | | `-ReturnStmt 0x7ffe4412b558 <col:78, col:97>
| |   | | |   `-CallExpr 0x7ffe4412b530 <col:85, col:97> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7ffe4412b4f0 <col:85, col:93> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7ffe44129608 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7ffe44129650 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7ffe441296b8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:637:105> col:61 constexpr lowest 'std::__1::numeric_limits<volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7ffe4412b648 <col:80, col:105>
| |   | | | `-ReturnStmt 0x7ffe4412b630 <col:81, col:103>
| |   | | |   `-CallExpr 0x7ffe4412b608 <col:88, col:103> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7ffe4412b5c8 <col:88, col:96> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7ffe44129750 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7ffe44129798 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7ffe441297c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:639:5, col:58> col:41 digits 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7ffe44129858 <col:50, col:58> '<dependent type>' lvalue
| |   | |-VarDecl 0x7ffe441298b0 <line:640:5, col:60> col:41 digits10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7ffe44129948 <col:52, col:60> '<dependent type>' lvalue
| |   | |-VarDecl 0x7ffe441299a0 <line:641:5, col:64> col:41 max_digits10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7ffe44129a38 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7ffe44129a88 <line:642:5, col:61> col:41 is_signed 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7ffe44129b20 <col:53, col:61> '<dependent type>' lvalue
| |   | |-VarDecl 0x7ffe44129b70 <line:643:5, col:62> col:41 is_integer 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7ffe44129c08 <col:54, col:62> '<dependent type>' lvalue
| |   | |-VarDecl 0x7ffe44129c58 <line:644:5, col:60> col:41 is_exact 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7ffe44129cf0 <col:52, col:60> '<dependent type>' lvalue
| |   | |-VarDecl 0x7ffe44129d48 <line:645:5, col:57> col:41 radix 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7ffe44129de0 <col:49, col:57> '<dependent type>' lvalue
| |   | |-CXXMethodDecl 0x7ffe44129e78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:646:107> col:61 constexpr epsilon 'std::__1::numeric_limits<volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7ffe4412b720 <col:81, col:107>
| |   | | | `-ReturnStmt 0x7ffe4412b708 <col:82, col:105>
| |   | | |   `-CallExpr 0x7ffe4412b6e0 <col:89, col:105> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7ffe4412b6a0 <col:89, col:97> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7ffe44129f10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7ffe44129f58 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7ffe44129fc0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:647:115> col:61 constexpr round_error 'std::__1::numeric_limits<volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7ffe4412b7f8 <col:85, col:115>
| |   | | | `-ReturnStmt 0x7ffe4412b7e0 <col:86, col:113>
| |   | | |   `-CallExpr 0x7ffe4412b7b8 <col:93, col:113> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7ffe4412b778 <col:93, col:101> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7ffe4412a058 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7ffe4412a0a0 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7ffe4412a0c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:649:5, col:64> col:41 min_exponent 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7ffe4412a160 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7ffe4412a1b8 <line:650:5, col:66> col:41 min_exponent10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7ffe4412a250 <col:58, col:66> '<dependent type>' lvalue
| |   | |-VarDecl 0x7ffe4412a2a8 <line:651:5, col:64> col:41 max_exponent 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7ffe4412a340 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7ffe4412a398 <line:652:5, col:66> col:41 max_exponent10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7ffe4412a430 <col:58, col:66> '<dependent type>' lvalue
| |   | |-VarDecl 0x7ffe4412a480 <line:654:5, col:64> col:41 has_infinity 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7ffe4412a518 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7ffe4412a568 <line:655:5, col:65> col:41 has_quiet_NaN 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7ffe4412a600 <col:57, col:65> '<dependent type>' lvalue
| |   | |-VarDecl 0x7ffe4412a650 <line:656:5, col:69> col:41 has_signaling_NaN 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7ffe4412a6e8 <col:61, col:69> '<dependent type>' lvalue
| |   | |-VarDecl 0x7ffe4412a738 <line:657:5, col:76> col:55 has_denorm 'const enum std::__1::float_denorm_style' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7ffe4412a7d0 <col:68, col:76> '<dependent type>' lvalue
| |   | |-VarDecl 0x7ffe4412a820 <line:658:5, col:67> col:41 has_denorm_loss 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7ffe4412a8b8 <col:59, col:67> '<dependent type>' lvalue
| |   | |-CXXMethodDecl 0x7ffe4412a950 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:659:109> col:61 constexpr infinity 'std::__1::numeric_limits<volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7ffe4412b8d0 <col:82, col:109>
| |   | | | `-ReturnStmt 0x7ffe4412b8b8 <col:83, col:107>
| |   | | |   `-CallExpr 0x7ffe4412b890 <col:90, col:107> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7ffe4412b850 <col:90, col:98> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7ffe4412a9e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7ffe4412aa30 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7ffe4412aa98 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:660:111> col:61 constexpr quiet_NaN 'std::__1::numeric_limits<volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7ffe4412b9a8 <col:83, col:111>
| |   | | | `-ReturnStmt 0x7ffe4412b990 <col:84, col:109>
| |   | | |   `-CallExpr 0x7ffe4412b968 <col:91, col:109> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7ffe4412b928 <col:91, col:99> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7ffe4412ab30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7ffe4412ab78 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7ffe4412abe0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:661:119> col:61 constexpr signaling_NaN 'std::__1::numeric_limits<volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7ffe4412ba80 <col:87, col:119>
| |   | | | `-ReturnStmt 0x7ffe4412ba68 <col:88, col:117>
| |   | | |   `-CallExpr 0x7ffe4412ba40 <col:95, col:117> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7ffe4412ba00 <col:95, col:103> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7ffe4412ac78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7ffe4412acc0 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7ffe4412ad28 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:662:113> col:61 constexpr denorm_min 'std::__1::numeric_limits<volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7ffe4412bb58 <col:84, col:113>
| |   | | | `-ReturnStmt 0x7ffe4412bb40 <col:85, col:111>
| |   | | |   `-CallExpr 0x7ffe4412bb18 <col:92, col:111> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7ffe4412bad8 <col:92, col:100> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7ffe4412adc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7ffe4412ae08 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7ffe4412ae28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:664:5, col:61> col:41 is_iec559 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7ffe4412aec0 <col:53, col:61> '<dependent type>' lvalue
| |   | |-VarDecl 0x7ffe4412af10 <line:665:5, col:62> col:41 is_bounded 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7ffe4412afa8 <col:54, col:62> '<dependent type>' lvalue
| |   | |-VarDecl 0x7ffe4412aff8 <line:666:5, col:61> col:41 is_modulo 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7ffe4412b090 <col:53, col:61> '<dependent type>' lvalue
| |   | |-VarDecl 0x7ffe4412b0e0 <line:668:5, col:57> col:41 traps 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7ffe4412b178 <col:49, col:57> '<dependent type>' lvalue
| |   | |-VarDecl 0x7ffe4412b200 <line:669:5, col:67> col:41 tinyness_before 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7ffe4412b298 <col:59, col:67> '<dependent type>' lvalue
| |   | `-VarDecl 0x7ffe4412b2e8 <line:670:5, col:76> col:54 round_style 'const enum std::__1::float_round_style' static constexpr cinit
| |   |   `-DependentScopeDeclRefExpr 0x7ffe4412b380 <col:68, col:76> '<dependent type>' lvalue
| |   |-VarDecl 0x7ffe4412bd70 parent 0x7ffe44067eb8 prev 0x7ffe44129238 <line:673:1, line:674:64> col:64 is_specialized 'const _Bool' constexpr
| |   |-VarDecl 0x7ffe4412c008 parent 0x7ffe44067eb8 prev 0x7ffe441297c0 <line:675:1, line:676:63> col:63 digits 'const int' constexpr
| |   |-VarDecl 0x7ffe4412c2a8 parent 0x7ffe44067eb8 prev 0x7ffe441298b0 <line:677:1, line:678:63> col:63 digits10 'const int' constexpr
| |   |-VarDecl 0x7ffe4412c548 parent 0x7ffe44067eb8 prev 0x7ffe441299a0 <line:679:1, line:680:63> col:63 max_digits10 'const int' constexpr
| |   |-VarDecl 0x7ffe4412c7e0 parent 0x7ffe44067eb8 prev 0x7ffe44129a88 <line:681:1, line:682:64> col:64 is_signed 'const _Bool' constexpr
| |   |-VarDecl 0x7ffe4412ca70 parent 0x7ffe44067eb8 prev 0x7ffe44129b70 <line:683:1, line:684:64> col:64 is_integer 'const _Bool' constexpr
| |   |-VarDecl 0x7ffe4412cd00 parent 0x7ffe44067eb8 prev 0x7ffe44129c58 <line:685:1, line:686:64> col:64 is_exact 'const _Bool' constexpr
| |   |-VarDecl 0x7ffe4412cf98 parent 0x7ffe44067eb8 prev 0x7ffe44129d48 <line:687:1, line:688:63> col:63 radix 'const int' constexpr
| |   |-VarDecl 0x7ffe4412d240 parent 0x7ffe44067eb8 prev 0x7ffe4412a0c8 <line:689:1, line:690:63> col:63 min_exponent 'const int' constexpr
| |   |-VarDecl 0x7ffe4412d4d8 parent 0x7ffe44067eb8 prev 0x7ffe4412a1b8 <line:691:1, line:692:63> col:63 min_exponent10 'const int' constexpr
| |   |-VarDecl 0x7ffe4412d778 parent 0x7ffe44067eb8 prev 0x7ffe4412a2a8 <line:693:1, line:694:63> col:63 max_exponent 'const int' constexpr
| |   |-VarDecl 0x7ffe4412da18 parent 0x7ffe44067eb8 prev 0x7ffe4412a398 <line:695:1, line:696:63> col:63 max_exponent10 'const int' constexpr
| |   |-VarDecl 0x7ffe4412dcb0 parent 0x7ffe44067eb8 prev 0x7ffe4412a480 <line:697:1, line:698:64> col:64 has_infinity 'const _Bool' constexpr
| |   |-VarDecl 0x7ffe4412df40 parent 0x7ffe44067eb8 prev 0x7ffe4412a568 <line:699:1, line:700:64> col:64 has_quiet_NaN 'const _Bool' constexpr
| |   |-VarDecl 0x7ffe4412e1d0 parent 0x7ffe44067eb8 prev 0x7ffe4412a650 <line:701:1, line:702:64> col:64 has_signaling_NaN 'const _Bool' constexpr
| |   |-VarDecl 0x7ffe4412e460 parent 0x7ffe44067eb8 prev 0x7ffe4412a738 <line:703:1, line:704:78> col:78 has_denorm 'const enum std::__1::float_denorm_style' constexpr
| |   |-VarDecl 0x7ffe4412e6f0 parent 0x7ffe44067eb8 prev 0x7ffe4412a820 <line:705:1, line:706:64> col:64 has_denorm_loss 'const _Bool' constexpr
| |   |-VarDecl 0x7ffe4412e980 parent 0x7ffe44067eb8 prev 0x7ffe4412ae28 <line:707:1, line:708:64> col:64 is_iec559 'const _Bool' constexpr
| |   |-VarDecl 0x7ffe4412ec10 parent 0x7ffe44067eb8 prev 0x7ffe4412af10 <line:709:1, line:710:64> col:64 is_bounded 'const _Bool' constexpr
| |   |-VarDecl 0x7ffe4412eea0 parent 0x7ffe44067eb8 prev 0x7ffe4412aff8 <line:711:1, line:712:64> col:64 is_modulo 'const _Bool' constexpr
| |   |-VarDecl 0x7ffe4412f130 parent 0x7ffe44067eb8 prev 0x7ffe4412b0e0 <line:713:1, line:714:64> col:64 traps 'const _Bool' constexpr
| |   |-VarDecl 0x7ffe4412f3f0 parent 0x7ffe44067eb8 prev 0x7ffe4412b200 <line:715:1, line:716:64> col:64 tinyness_before 'const _Bool' constexpr
| |   |-VarDecl 0x7ffe4412f680 parent 0x7ffe44067eb8 prev 0x7ffe4412b2e8 <line:717:1, line:718:77> col:77 round_style 'const enum std::__1::float_round_style' constexpr
| |   |-ClassTemplatePartialSpecializationDecl 0x7ffe4412f8b8 <line:720:1, line:764:1> line:721:28 class numeric_limits definition
| |   | |-private 'numeric_limits<_Tp>'
| |   | |-TemplateArgument type 'const volatile type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7ffe4412f720 <line:720:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7ffe4412f9f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7ffe4412fbe8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:721:1, col:28> col:28 implicit class numeric_limits
| |   | |-TypedefDecl 0x7ffe4412fd38 <line:724:5, col:33> col:33 referenced __base 'numeric_limits<_Tp>'
| |   | | `-TemplateSpecializationType 0x7ffe4412fc90 'numeric_limits<_Tp>' dependent numeric_limits
| |   | |   `-TemplateArgument type '_Tp'
| |   | |-TypedefDecl 0x7ffe4412fda0 <line:725:5, col:17> col:17 referenced type '_Tp'
| |   | | `-TemplateTypeParmType 0x7ffe4412f760 '_Tp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7ffe4412f720 '_Tp'
| |   | |-AccessSpecDecl 0x7ffe4412fdf8 <line:726:1, col:7> col:1 public
| |   | |-VarDecl 0x7ffe4412fe30 <line:727:5, col:66> col:41 is_specialized 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7ffe4412ff00 <col:58, col:66> '<dependent type>' lvalue
| |   | |-CXXMethodDecl 0x7ffe44130018 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:728:99> col:61 constexpr min 'std::__1::numeric_limits<const volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7ffe44132060 <col:77, col:99>
| |   | | | `-ReturnStmt 0x7ffe44132048 <col:78, col:97>
| |   | | |   `-CallExpr 0x7ffe44132020 <col:85, col:97> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7ffe44131fe0 <col:85, col:93> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7ffe441300b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7ffe441300f8 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7ffe44130160 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:729:99> col:61 constexpr max 'std::__1::numeric_limits<const volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7ffe44132138 <col:77, col:99>
| |   | | | `-ReturnStmt 0x7ffe44132120 <col:78, col:97>
| |   | | |   `-CallExpr 0x7ffe441320f8 <col:85, col:97> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7ffe441320b8 <col:85, col:93> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7ffe441301f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7ffe44130240 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7ffe441302a8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:730:105> col:61 constexpr lowest 'std::__1::numeric_limits<const volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7ffe44132210 <col:80, col:105>
| |   | | | `-ReturnStmt 0x7ffe441321f8 <col:81, col:103>
| |   | | |   `-CallExpr 0x7ffe441321d0 <col:88, col:103> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7ffe44132190 <col:88, col:96> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7ffe44130340 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7ffe44130388 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7ffe441303b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:732:5, col:58> col:41 digits 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7ffe44130448 <col:50, col:58> '<dependent type>' lvalue
| |   | |-VarDecl 0x7ffe441304a0 <line:733:5, col:60> col:41 digits10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7ffe44130538 <col:52, col:60> '<dependent type>' lvalue
| |   | |-VarDecl 0x7ffe44130590 <line:734:5, col:64> col:41 max_digits10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7ffe44130628 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7ffe44130678 <line:735:5, col:61> col:41 is_signed 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7ffe44130710 <col:53, col:61> '<dependent type>' lvalue
| |   | |-VarDecl 0x7ffe44130760 <line:736:5, col:62> col:41 is_integer 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7ffe441307f8 <col:54, col:62> '<dependent type>' lvalue
| |   | |-VarDecl 0x7ffe44130848 <line:737:5, col:60> col:41 is_exact 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7ffe441308e0 <col:52, col:60> '<dependent type>' lvalue
| |   | |-VarDecl 0x7ffe44130938 <line:738:5, col:57> col:41 radix 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7ffe441309d0 <col:49, col:57> '<dependent type>' lvalue
| |   | |-CXXMethodDecl 0x7ffe44130a68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:739:107> col:61 constexpr epsilon 'std::__1::numeric_limits<const volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7ffe441322e8 <col:81, col:107>
| |   | | | `-ReturnStmt 0x7ffe441322d0 <col:82, col:105>
| |   | | |   `-CallExpr 0x7ffe441322a8 <col:89, col:105> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7ffe44132268 <col:89, col:97> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7ffe44130b00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7ffe44130b48 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7ffe44130bb0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:740:115> col:61 constexpr round_error 'std::__1::numeric_limits<const volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7ffe441323c0 <col:85, col:115>
| |   | | | `-ReturnStmt 0x7ffe441323a8 <col:86, col:113>
| |   | | |   `-CallExpr 0x7ffe44132380 <col:93, col:113> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7ffe44132340 <col:93, col:101> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7ffe44130c48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7ffe44130c90 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7ffe44130cb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:742:5, col:64> col:41 min_exponent 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7ffe44130d50 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7ffe44130da8 <line:743:5, col:66> col:41 min_exponent10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7ffe44130e40 <col:58, col:66> '<dependent type>' lvalue
| |   | |-VarDecl 0x7ffe44130e98 <line:744:5, col:64> col:41 max_exponent 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7ffe44130f30 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7ffe44130f88 <line:745:5, col:66> col:41 max_exponent10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7ffe44131020 <col:58, col:66> '<dependent type>' lvalue
| |   | |-VarDecl 0x7ffe44131070 <line:747:5, col:64> col:41 has_infinity 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7ffe44131108 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7ffe44131158 <line:748:5, col:65> col:41 has_quiet_NaN 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7ffe44131200 <col:57, col:65> '<dependent type>' lvalue
| |   | |-VarDecl 0x7ffe44131250 <line:749:5, col:69> col:41 has_signaling_NaN 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7ffe441312e8 <col:61, col:69> '<dependent type>' lvalue
| |   | |-VarDecl 0x7ffe44131338 <line:750:5, col:76> col:55 has_denorm 'const enum std::__1::float_denorm_style' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7ffe441313d0 <col:68, col:76> '<dependent type>' lvalue
| |   | |-VarDecl 0x7ffe44131420 <line:751:5, col:67> col:41 has_denorm_loss 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7ffe441314b8 <col:59, col:67> '<dependent type>' lvalue
| |   | |-CXXMethodDecl 0x7ffe44131550 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:752:109> col:61 constexpr infinity 'std::__1::numeric_limits<const volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7ffe44132498 <col:82, col:109>
| |   | | | `-ReturnStmt 0x7ffe44132480 <col:83, col:107>
| |   | | |   `-CallExpr 0x7ffe44132458 <col:90, col:107> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7ffe44132418 <col:90, col:98> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7ffe441315e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7ffe44131630 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7ffe44131698 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:753:111> col:61 constexpr quiet_NaN 'std::__1::numeric_limits<const volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7ffe44132570 <col:83, col:111>
| |   | | | `-ReturnStmt 0x7ffe44132558 <col:84, col:109>
| |   | | |   `-CallExpr 0x7ffe44132530 <col:91, col:109> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7ffe441324f0 <col:91, col:99> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7ffe44131730 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7ffe44131778 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7ffe441317e0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:754:119> col:61 constexpr signaling_NaN 'std::__1::numeric_limits<const volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7ffe44132648 <col:87, col:119>
| |   | | | `-ReturnStmt 0x7ffe44132630 <col:88, col:117>
| |   | | |   `-CallExpr 0x7ffe44132608 <col:95, col:117> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7ffe441325c8 <col:95, col:103> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7ffe44131878 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7ffe441318c0 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7ffe44131928 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:755:113> col:61 constexpr denorm_min 'std::__1::numeric_limits<const volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7ffe44132720 <col:84, col:113>
| |   | | | `-ReturnStmt 0x7ffe44132708 <col:85, col:111>
| |   | | |   `-CallExpr 0x7ffe441326e0 <col:92, col:111> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7ffe441326a0 <col:92, col:100> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7ffe441319c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7ffe44131a08 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7ffe44131a28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:757:5, col:61> col:41 is_iec559 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7ffe44131ac0 <col:53, col:61> '<dependent type>' lvalue
| |   | |-VarDecl 0x7ffe44131b10 <line:758:5, col:62> col:41 is_bounded 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7ffe44131ba8 <col:54, col:62> '<dependent type>' lvalue
| |   | |-VarDecl 0x7ffe44131bf8 <line:759:5, col:61> col:41 is_modulo 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7ffe44131c90 <col:53, col:61> '<dependent type>' lvalue
| |   | |-VarDecl 0x7ffe44131ce0 <line:761:5, col:57> col:41 traps 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7ffe44131d78 <col:49, col:57> '<dependent type>' lvalue
| |   | |-VarDecl 0x7ffe44131dc8 <line:762:5, col:67> col:41 tinyness_before 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7ffe44131e60 <col:59, col:67> '<dependent type>' lvalue
| |   | `-VarDecl 0x7ffe44131eb0 <line:763:5, col:76> col:54 round_style 'const enum std::__1::float_round_style' static constexpr cinit
| |   |   `-DependentScopeDeclRefExpr 0x7ffe44131f48 <col:68, col:76> '<dependent type>' lvalue
| |   |-VarDecl 0x7ffe44132930 parent 0x7ffe4412f8b8 prev 0x7ffe4412fe30 <line:766:1, line:767:70> col:70 is_specialized 'const _Bool' constexpr
| |   |-VarDecl 0x7ffe44132bc8 parent 0x7ffe4412f8b8 prev 0x7ffe441303b0 <line:768:1, line:769:69> col:69 digits 'const int' constexpr
| |   |-VarDecl 0x7ffe44132e68 parent 0x7ffe4412f8b8 prev 0x7ffe441304a0 <line:770:1, line:771:69> col:69 digits10 'const int' constexpr
| |   |-VarDecl 0x7ffe44133108 parent 0x7ffe4412f8b8 prev 0x7ffe44130590 <line:772:1, line:773:69> col:69 max_digits10 'const int' constexpr
| |   |-VarDecl 0x7ffe441333b0 parent 0x7ffe4412f8b8 prev 0x7ffe44130678 <line:774:1, line:775:70> col:70 is_signed 'const _Bool' constexpr
| |   |-VarDecl 0x7ffe44133640 parent 0x7ffe4412f8b8 prev 0x7ffe44130760 <line:776:1, line:777:70> col:70 is_integer 'const _Bool' constexpr
| |   |-VarDecl 0x7ffe441338d0 parent 0x7ffe4412f8b8 prev 0x7ffe44130848 <line:778:1, line:779:70> col:70 is_exact 'const _Bool' constexpr
| |   |-VarDecl 0x7ffe44133b68 parent 0x7ffe4412f8b8 prev 0x7ffe44130938 <line:780:1, line:781:69> col:69 radix 'const int' constexpr
| |   |-VarDecl 0x7ffe44133e08 parent 0x7ffe4412f8b8 prev 0x7ffe44130cb8 <line:782:1, line:783:69> col:69 min_exponent 'const int' constexpr
| |   |-VarDecl 0x7ffe441340a8 parent 0x7ffe4412f8b8 prev 0x7ffe44130da8 <line:784:1, line:785:69> col:69 min_exponent10 'const int' constexpr
| |   |-VarDecl 0x7ffe44134348 parent 0x7ffe4412f8b8 prev 0x7ffe44130e98 <line:786:1, line:787:69> col:69 max_exponent 'const int' constexpr
| |   |-VarDecl 0x7ffe441345e8 parent 0x7ffe4412f8b8 prev 0x7ffe44130f88 <line:788:1, line:789:69> col:69 max_exponent10 'const int' constexpr
| |   |-VarDecl 0x7ffe44134880 parent 0x7ffe4412f8b8 prev 0x7ffe44131070 <line:790:1, line:791:70> col:70 has_infinity 'const _Bool' constexpr
| |   |-VarDecl 0x7ffe44134b10 parent 0x7ffe4412f8b8 prev 0x7ffe44131158 <line:792:1, line:793:70> col:70 has_quiet_NaN 'const _Bool' constexpr
| |   |-VarDecl 0x7ffe44134da0 parent 0x7ffe4412f8b8 prev 0x7ffe44131250 <line:794:1, line:795:70> col:70 has_signaling_NaN 'const _Bool' constexpr
| |   |-VarDecl 0x7ffe44135030 parent 0x7ffe4412f8b8 prev 0x7ffe44131338 <line:796:1, line:797:84> col:84 has_denorm 'const enum std::__1::float_denorm_style' constexpr
| |   |-VarDecl 0x7ffe441352c0 parent 0x7ffe4412f8b8 prev 0x7ffe44131420 <line:798:1, line:799:70> col:70 has_denorm_loss 'const _Bool' constexpr
| |   |-VarDecl 0x7ffe44135550 parent 0x7ffe4412f8b8 prev 0x7ffe44131a28 <line:800:1, line:801:70> col:70 is_iec559 'const _Bool' constexpr
| |   |-VarDecl 0x7ffe441357e0 parent 0x7ffe4412f8b8 prev 0x7ffe44131b10 <line:802:1, line:803:70> col:70 is_bounded 'const _Bool' constexpr
| |   |-VarDecl 0x7ffe44135a70 parent 0x7ffe4412f8b8 prev 0x7ffe44131bf8 <line:804:1, line:805:70> col:70 is_modulo 'const _Bool' constexpr
| |   |-VarDecl 0x7ffe44135d00 parent 0x7ffe4412f8b8 prev 0x7ffe44131ce0 <line:806:1, line:807:70> col:70 traps 'const _Bool' constexpr
| |   |-VarDecl 0x7ffe44135f90 parent 0x7ffe4412f8b8 prev 0x7ffe44131dc8 <line:808:1, line:809:70> col:70 tinyness_before 'const _Bool' constexpr
| |   `-VarDecl 0x7ffe44136220 parent 0x7ffe4412f8b8 prev 0x7ffe44131eb0 <line:810:1, line:811:83> col:83 round_style 'const enum std::__1::float_round_style' constexpr
| |-FunctionTemplateDecl 0x7ffe44136520 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:316:1, line:322:1> line:319:1 __libcpp_signbit
| | |-TemplateTypeParmDecl 0x7ffe441362c0 <line:316:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7ffe44136488 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:322:1> line:319:1 __libcpp_signbit '_Bool (_A1) noexcept'
| |   |-ParmVarDecl 0x7ffe44136380 <col:18, col:22> col:22 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7ffe44136c90 <line:320:1, line:322:1>
| |   | `-ReturnStmt 0x7ffe44136c78 <line:321:5, /usr/include/math.h:186:72>
| |   |   `-ImplicitCastExpr 0x7ffe44136c60 <line:184:5, line:186:72> '_Bool' <IntegralToBoolean>
| |   |     `-ParenExpr 0x7ffe44136c40 <line:184:5, line:186:72> 'int'
| |   |       `-ConditionalOperator 0x7ffe44136c10 <line:184:7, line:186:71> 'int'
| |   |         |-BinaryOperator 0x7ffe44136670 <line:184:7, col:32> '_Bool' '=='
| |   |         | |-UnaryExprOrTypeTraitExpr 0x7ffe44136618 <col:7, col:15> 'unsigned long' sizeof
| |   |         | | `-ParenExpr 0x7ffe441365f8 <col:13, col:15> '_A1' lvalue
| |   |         | |   `-DeclRefExpr 0x7ffe441365d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:321:20> '_A1' lvalue ParmVar 0x7ffe44136380 '__lcpp_x' '_A1'
| |   |         | `-UnaryExprOrTypeTraitExpr 0x7ffe44136650 </usr/include/math.h:184:20, col:32> 'unsigned long' sizeof 'float'
| |   |         |-CallExpr 0x7ffe441367e8 <col:37, col:65> 'int'
| |   |         | |-ImplicitCastExpr 0x7ffe441367d0 <col:37> 'int (*)(float)' <FunctionToPointerDecay>
| |   |         | | `-DeclRefExpr 0x7ffe441367a8 <col:37> 'int (float)' lvalue Function 0x7ffe43902268 '__inline_signbitf' 'int (float)'
| |   |         | `-CStyleCastExpr 0x7ffe44136780 <col:55, col:64> 'float' <Dependent>
| |   |         |   `-ParenExpr 0x7ffe44136760 <col:62, col:64> '_A1' lvalue
| |   |         |     `-DeclRefExpr 0x7ffe441366f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:321:20> '_A1' lvalue ParmVar 0x7ffe44136380 '__lcpp_x' '_A1'
| |   |         `-ConditionalOperator 0x7ffe44136be0 </usr/include/math.h:185:7, line:186:71> 'int'
| |   |           |-BinaryOperator 0x7ffe441368b8 <line:185:7, col:33> '_Bool' '=='
| |   |           | |-UnaryExprOrTypeTraitExpr 0x7ffe44136860 <col:7, col:15> 'unsigned long' sizeof
| |   |           | | `-ParenExpr 0x7ffe44136840 <col:13, col:15> '_A1' lvalue
| |   |           | |   `-DeclRefExpr 0x7ffe44136818 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:321:20> '_A1' lvalue ParmVar 0x7ffe44136380 '__lcpp_x' '_A1'
| |   |           | `-UnaryExprOrTypeTraitExpr 0x7ffe44136898 </usr/include/math.h:185:20, col:33> 'unsigned long' sizeof 'double'
| |   |           |-CallExpr 0x7ffe44136a30 <col:37, col:66> 'int'
| |   |           | |-ImplicitCastExpr 0x7ffe44136a18 <col:37> 'int (*)(double)' <FunctionToPointerDecay>
| |   |           | | `-DeclRefExpr 0x7ffe441369f0 <col:37> 'int (double)' lvalue Function 0x7ffe43903fb0 '__inline_signbitd' 'int (double)'
| |   |           | `-CStyleCastExpr 0x7ffe441369c8 <col:55, col:65> 'double' <Dependent>
| |   |           |   `-ParenExpr 0x7ffe441369a8 <col:63, col:65> '_A1' lvalue
| |   |           |     `-DeclRefExpr 0x7ffe44136938 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:321:20> '_A1' lvalue ParmVar 0x7ffe44136380 '__lcpp_x' '_A1'
| |   |           `-CallExpr 0x7ffe44136bb0 </usr/include/math.h:186:37, col:71> 'int'
| |   |             |-ImplicitCastExpr 0x7ffe44136b98 <col:37> 'int (*)(long double)' <FunctionToPointerDecay>
| |   |             | `-DeclRefExpr 0x7ffe44136b70 <col:37> 'int (long double)' lvalue Function 0x7ffe43906688 '__inline_signbitl' 'int (long double)'
| |   |             `-CStyleCastExpr 0x7ffe44136b48 <col:55, col:70> 'long double' <Dependent>
| |   |               `-ParenExpr 0x7ffe44136b28 <col:68, col:70> '_A1' lvalue
| |   |                 `-DeclRefExpr 0x7ffe44136ab8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:321:20> '_A1' lvalue ParmVar 0x7ffe44136380 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7ffe44136578 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7ffe441365c0 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7ffe44137298 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:326:1, line:332:1> line:329:1 signbit
| | |-TemplateTypeParmDecl 0x7ffe44136cb0 <line:326:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7ffe44137200 <line:327:1, line:332:1> line:329:1 signbit 'typename std::enable_if<std::is_floating_point<_A1>::value, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7ffe441370c0 <col:9, col:13> col:13 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7ffe44137648 <line:330:1, line:332:1>
| |   | `-ReturnStmt 0x7ffe44137630 <line:331:5, col:73>
| |   |   `-CallExpr 0x7ffe44137600 <col:12, col:73> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7ffe44137348 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_signbit' 0x7ffe44136520
| |   |     `-CStyleCastExpr 0x7ffe441375d8 <col:29, col:65> 'typename std::__promote<_A1>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7ffe44137590 <col:65> '_A1' lvalue ParmVar 0x7ffe441370c0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7ffe441372f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7ffe44137338 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7ffe44137d90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:334:1, line:339:24> line:338:1 signbit
| | |-TemplateTypeParmDecl 0x7ffe44137668 <line:334:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7ffe44137cf8 <line:335:1, line:339:24> line:338:1 signbit 'typename std::enable_if<std::is_integral<_A1>::value && std::is_signed<_A1>::value, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7ffe44137be0 <col:9, col:13> col:13 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7ffe44137ec8 <line:339:1, col:24>
| |   | `-ReturnStmt 0x7ffe44137eb0 <col:3, col:21>
| |   |   `-BinaryOperator 0x7ffe44137e88 <col:10, col:21> '<dependent type>' '<'
| |   |     |-DeclRefExpr 0x7ffe44137e40 <col:10> '_A1' lvalue ParmVar 0x7ffe44137be0 '__lcpp_x' '_A1'
| |   |     `-IntegerLiteral 0x7ffe44137e68 <col:21> 'int' 0
| |   |-AlwaysInlineAttr 0x7ffe44137de8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7ffe44137e30 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7ffe441385e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:341:1, line:346:17> line:345:1 signbit
| | |-TemplateTypeParmDecl 0x7ffe44137ee8 <line:341:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7ffe44138548 <line:342:1, line:346:17> line:345:1 signbit 'typename std::enable_if<std::is_integral<_A1>::value && !std::is_signed<_A1>::value, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7ffe44138430 <col:9> col:12 '_A1'
| |   |-CompoundStmt 0x7ffe441386c0 <line:346:1, col:17>
| |   | `-ReturnStmt 0x7ffe441386a8 <col:3, col:10>
| |   |   `-CXXBoolLiteralExpr 0x7ffe44138690 <col:10> '_Bool' false
| |   |-AlwaysInlineAttr 0x7ffe44138638 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7ffe44138680 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7ffe44138948 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:378:1, line:384:1> line:381:1 __libcpp_fpclassify
| | |-TemplateTypeParmDecl 0x7ffe441386e0 <line:378:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7ffe441388b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:384:1> line:381:1 __libcpp_fpclassify 'int (_A1) noexcept'
| |   |-ParmVarDecl 0x7ffe441387a0 <col:21, col:25> col:25 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7ffe441390a0 <line:382:1, line:384:1>
| |   | `-ReturnStmt 0x7ffe44139088 <line:383:5, /usr/include/math.h:142:68>
| |   |   `-ParenExpr 0x7ffe44139068 <line:140:5, line:142:68> 'int'
| |   |     `-ConditionalOperator 0x7ffe44139038 <line:140:7, line:142:67> 'int'
| |   |       |-BinaryOperator 0x7ffe44138a98 <line:140:7, col:32> '_Bool' '=='
| |   |       | |-UnaryExprOrTypeTraitExpr 0x7ffe44138a40 <col:7, col:15> 'unsigned long' sizeof
| |   |       | | `-ParenExpr 0x7ffe44138a20 <col:13, col:15> '_A1' lvalue
| |   |       | |   `-DeclRefExpr 0x7ffe441389f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:383:23> '_A1' lvalue ParmVar 0x7ffe441387a0 '__lcpp_x' '_A1'
| |   |       | `-UnaryExprOrTypeTraitExpr 0x7ffe44138a78 </usr/include/math.h:140:20, col:32> 'unsigned long' sizeof 'float'
| |   |       |-CallExpr 0x7ffe44138c10 <col:37, col:61> 'int'
| |   |       | |-ImplicitCastExpr 0x7ffe44138bf8 <col:37> 'int (*)(float)' <FunctionToPointerDecay>
| |   |       | | `-DeclRefExpr 0x7ffe44138bd0 <col:37> 'int (float)' lvalue Function 0x7ffe43866198 '__fpclassifyf' 'int (float)'
| |   |       | `-CStyleCastExpr 0x7ffe44138ba8 <col:51, col:60> 'float' <Dependent>
| |   |       |   `-ParenExpr 0x7ffe44138b88 <col:58, col:60> '_A1' lvalue
| |   |       |     `-DeclRefExpr 0x7ffe44138b18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:383:23> '_A1' lvalue ParmVar 0x7ffe441387a0 '__lcpp_x' '_A1'
| |   |       `-ConditionalOperator 0x7ffe44139008 </usr/include/math.h:141:7, line:142:67> 'int'
| |   |         |-BinaryOperator 0x7ffe44138ce0 <line:141:7, col:33> '_Bool' '=='
| |   |         | |-UnaryExprOrTypeTraitExpr 0x7ffe44138c88 <col:7, col:15> 'unsigned long' sizeof
| |   |         | | `-ParenExpr 0x7ffe44138c68 <col:13, col:15> '_A1' lvalue
| |   |         | |   `-DeclRefExpr 0x7ffe44138c40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:383:23> '_A1' lvalue ParmVar 0x7ffe441387a0 '__lcpp_x' '_A1'
| |   |         | `-UnaryExprOrTypeTraitExpr 0x7ffe44138cc0 </usr/include/math.h:141:20, col:33> 'unsigned long' sizeof 'double'
| |   |         |-CallExpr 0x7ffe44138e58 <col:37, col:62> 'int'
| |   |         | |-ImplicitCastExpr 0x7ffe44138e40 <col:37> 'int (*)(double)' <FunctionToPointerDecay>
| |   |         | | `-DeclRefExpr 0x7ffe44138e18 <col:37> 'int (double)' lvalue Function 0x7ffe43866318 '__fpclassifyd' 'int (double)'
| |   |         | `-CStyleCastExpr 0x7ffe44138df0 <col:51, col:61> 'double' <Dependent>
| |   |         |   `-ParenExpr 0x7ffe44138dd0 <col:59, col:61> '_A1' lvalue
| |   |         |     `-DeclRefExpr 0x7ffe44138d60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:383:23> '_A1' lvalue ParmVar 0x7ffe441387a0 '__lcpp_x' '_A1'
| |   |         `-CallExpr 0x7ffe44138fd8 </usr/include/math.h:142:37, col:67> 'int'
| |   |           |-ImplicitCastExpr 0x7ffe44138fc0 <col:37> 'int (*)(long double)' <FunctionToPointerDecay>
| |   |           | `-DeclRefExpr 0x7ffe44138f98 <col:37> 'int (long double)' lvalue Function 0x7ffe43866498 '__fpclassifyl' 'int (long double)'
| |   |           `-CStyleCastExpr 0x7ffe44138f70 <col:51, col:66> 'long double' <Dependent>
| |   |             `-ParenExpr 0x7ffe44138f50 <col:64, col:66> '_A1' lvalue
| |   |               `-DeclRefExpr 0x7ffe44138ee0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:383:23> '_A1' lvalue ParmVar 0x7ffe441387a0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7ffe441389a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7ffe441389e8 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7ffe44139660 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:388:1, line:394:1> line:391:1 fpclassify
| | |-TemplateTypeParmDecl 0x7ffe441390c0 <line:388:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7ffe441395c8 <line:389:1, line:394:1> line:391:1 fpclassify 'typename std::enable_if<std::is_floating_point<_A1>::value, int>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7ffe441394b0 <col:12, col:16> col:16 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7ffe44139928 <line:392:1, line:394:1>
| |   | `-ReturnStmt 0x7ffe44139910 <line:393:5, col:76>
| |   |   `-CallExpr 0x7ffe441398e0 <col:12, col:76> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7ffe44139710 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_fpclassify' 0x7ffe44138948
| |   |     `-CStyleCastExpr 0x7ffe441398b8 <col:32, col:68> 'typename std::__promote<_A1>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7ffe44139870 <col:68> '_A1' lvalue ParmVar 0x7ffe441394b0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7ffe441396b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7ffe44139700 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7ffe44139ee0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:396:1, line:400:47> line:399:1 fpclassify
| | |-TemplateTypeParmDecl 0x7ffe44139948 <line:396:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7ffe44139e48 <line:397:1, line:400:47> line:399:1 fpclassify 'typename std::enable_if<std::is_integral<_A1>::value, int>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7ffe44139d30 <col:12, col:16> col:16 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7ffe4413a088 <line:400:1, col:47>
| |   | `-ReturnStmt 0x7ffe4413a070 <col:3, /usr/include/math.h:77:25>
| |   |   `-ConditionalOperator 0x7ffe4413a040 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:400:10, /usr/include/math.h:77:25> 'int'
| |   |     |-BinaryOperator 0x7ffe44139fd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:400:10, col:22> '<dependent type>' '=='
| |   |     | |-DeclRefExpr 0x7ffe44139f90 <col:10> '_A1' lvalue ParmVar 0x7ffe44139d30 '__lcpp_x' '_A1'
| |   |     | `-IntegerLiteral 0x7ffe44139fb8 <col:22> 'int' 0
| |   |     |-IntegerLiteral 0x7ffe4413a000 </usr/include/math.h:76:25> 'int' 3
| |   |     `-IntegerLiteral 0x7ffe4413a020 <line:77:25> 'int' 4
| |   |-AlwaysInlineAttr 0x7ffe44139f38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7ffe44139f80 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7ffe4413a2d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:424:1, line:430:1> line:427:1 __libcpp_isfinite
| | |-TemplateTypeParmDecl 0x7ffe4413a0a8 <line:424:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7ffe4413a238 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:430:1> line:427:1 __libcpp_isfinite '_Bool (_A1) noexcept'
| |   |-ParmVarDecl 0x7ffe4413a170 <col:19, col:23> col:23 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7ffe4413aa40 <line:428:1, line:430:1>
| |   | `-ReturnStmt 0x7ffe4413aa28 <line:429:5, /usr/include/math.h:171:73>
| |   |   `-ImplicitCastExpr 0x7ffe4413aa10 <line:169:5, line:171:73> '_Bool' <IntegralToBoolean>
| |   |     `-ParenExpr 0x7ffe4413a9f0 <line:169:5, line:171:73> 'int'
| |   |       `-ConditionalOperator 0x7ffe4413a9c0 <line:169:7, line:171:72> 'int'
| |   |         |-BinaryOperator 0x7ffe4413a420 <line:169:7, col:32> '_Bool' '=='
| |   |         | |-UnaryExprOrTypeTraitExpr 0x7ffe4413a3c8 <col:7, col:15> 'unsigned long' sizeof
| |   |         | | `-ParenExpr 0x7ffe4413a3a8 <col:13, col:15> '_A1' lvalue
| |   |         | |   `-DeclRefExpr 0x7ffe4413a380 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:429:21> '_A1' lvalue ParmVar 0x7ffe4413a170 '__lcpp_x' '_A1'
| |   |         | `-UnaryExprOrTypeTraitExpr 0x7ffe4413a400 </usr/include/math.h:169:20, col:32> 'unsigned long' sizeof 'float'
| |   |         |-CallExpr 0x7ffe4413a598 <col:37, col:66> 'int'
| |   |         | |-ImplicitCastExpr 0x7ffe4413a580 <col:37> 'int (*)(float)' <FunctionToPointerDecay>
| |   |         | | `-DeclRefExpr 0x7ffe4413a558 <col:37> 'int (float)' lvalue Function 0x7ffe438fef90 '__inline_isfinitef' 'int (float)'
| |   |         | `-CStyleCastExpr 0x7ffe4413a530 <col:56, col:65> 'float' <Dependent>
| |   |         |   `-ParenExpr 0x7ffe4413a510 <col:63, col:65> '_A1' lvalue
| |   |         |     `-DeclRefExpr 0x7ffe4413a4a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:429:21> '_A1' lvalue ParmVar 0x7ffe4413a170 '__lcpp_x' '_A1'
| |   |         `-ConditionalOperator 0x7ffe4413a990 </usr/include/math.h:170:7, line:171:72> 'int'
| |   |           |-BinaryOperator 0x7ffe4413a668 <line:170:7, col:33> '_Bool' '=='
| |   |           | |-UnaryExprOrTypeTraitExpr 0x7ffe4413a610 <col:7, col:15> 'unsigned long' sizeof
| |   |           | | `-ParenExpr 0x7ffe4413a5f0 <col:13, col:15> '_A1' lvalue
| |   |           | |   `-DeclRefExpr 0x7ffe4413a5c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:429:21> '_A1' lvalue ParmVar 0x7ffe4413a170 '__lcpp_x' '_A1'
| |   |           | `-UnaryExprOrTypeTraitExpr 0x7ffe4413a648 </usr/include/math.h:170:20, col:33> 'unsigned long' sizeof 'double'
| |   |           |-CallExpr 0x7ffe4413a7e0 <col:37, col:67> 'int'
| |   |           | |-ImplicitCastExpr 0x7ffe4413a7c8 <col:37> 'int (*)(double)' <FunctionToPointerDecay>
| |   |           | | `-DeclRefExpr 0x7ffe4413a7a0 <col:37> 'int (double)' lvalue Function 0x7ffe438ff800 '__inline_isfinited' 'int (double)'
| |   |           | `-CStyleCastExpr 0x7ffe4413a778 <col:56, col:66> 'double' <Dependent>
| |   |           |   `-ParenExpr 0x7ffe4413a758 <col:64, col:66> '_A1' lvalue
| |   |           |     `-DeclRefExpr 0x7ffe4413a6e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:429:21> '_A1' lvalue ParmVar 0x7ffe4413a170 '__lcpp_x' '_A1'
| |   |           `-CallExpr 0x7ffe4413a960 </usr/include/math.h:171:37, col:72> 'int'
| |   |             |-ImplicitCastExpr 0x7ffe4413a948 <col:37> 'int (*)(long double)' <FunctionToPointerDecay>
| |   |             | `-DeclRefExpr 0x7ffe4413a920 <col:37> 'int (long double)' lvalue Function 0x7ffe43900500 '__inline_isfinitel' 'int (long double)'
| |   |             `-CStyleCastExpr 0x7ffe4413a8f8 <col:56, col:71> 'long double' <Dependent>
| |   |               `-ParenExpr 0x7ffe4413a8d8 <col:69, col:71> '_A1' lvalue
| |   |                 `-DeclRefExpr 0x7ffe4413a868 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:429:21> '_A1' lvalue ParmVar 0x7ffe4413a170 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7ffe4413a328 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7ffe4413a370 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7ffe4413b180 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:434:1, line:442:1> line:439:1 isfinite
| | |-TemplateTypeParmDecl 0x7ffe4413aa60 <line:434:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7ffe4413b0e8 <line:435:1, line:442:1> line:439:1 isfinite 'typename std::enable_if<std::is_arithmetic<_A1>::value && std::numeric_limits<_A1>::has_infinity, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7ffe4413afd0 <col:10, col:14> col:14 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7ffe4413b458 <line:440:1, line:442:1>
| |   | `-ReturnStmt 0x7ffe4413b440 <line:441:5, col:74>
| |   |   `-CallExpr 0x7ffe4413b410 <col:12, col:74> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7ffe4413b248 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_isfinite' 0x7ffe4413a2d0
| |   |     `-CStyleCastExpr 0x7ffe4413b3e8 <col:30, col:66> 'typename std::__promote<_A1>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7ffe4413b3a0 <col:66> '_A1' lvalue ParmVar 0x7ffe4413afd0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7ffe4413b1d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7ffe4413b238 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7ffe4413bb70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:444:1, line:450:16> line:449:1 isfinite
| | |-TemplateTypeParmDecl 0x7ffe4413b478 <line:444:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7ffe4413bad8 <line:445:1, line:450:16> line:449:1 isfinite 'typename std::enable_if<std::is_arithmetic<_A1>::value && !std::numeric_limits<_A1>::has_infinity, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7ffe4413b9c0 <col:10> col:13 '_A1'
| |   |-CompoundStmt 0x7ffe4413bc50 <line:450:1, col:16>
| |   | `-ReturnStmt 0x7ffe4413bc38 <col:3, col:10>
| |   |   `-CXXBoolLiteralExpr 0x7ffe4413bc20 <col:10> '_Bool' true
| |   |-AlwaysInlineAttr 0x7ffe4413bbc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7ffe4413bc10 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7ffe4413be90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:458:1, line:464:1> line:461:1 __libcpp_isinf
| | |-TemplateTypeParmDecl 0x7ffe4413bc70 <line:458:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7ffe4413bdf8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:464:1> line:461:1 __libcpp_isinf '_Bool (_A1) noexcept'
| |   |-ParmVarDecl 0x7ffe4413bd30 <col:16, col:20> col:20 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7ffe4413c600 <line:462:1, line:464:1>
| |   | `-ReturnStmt 0x7ffe4413c5e8 <line:463:5, /usr/include/math.h:176:70>
| |   |   `-ImplicitCastExpr 0x7ffe4413c5d0 <line:174:5, line:176:70> '_Bool' <IntegralToBoolean>
| |   |     `-ParenExpr 0x7ffe4413c5b0 <line:174:5, line:176:70> 'int'
| |   |       `-ConditionalOperator 0x7ffe4413c580 <line:174:7, line:176:69> 'int'
| |   |         |-BinaryOperator 0x7ffe4413bfe0 <line:174:7, col:32> '_Bool' '=='
| |   |         | |-UnaryExprOrTypeTraitExpr 0x7ffe4413bf88 <col:7, col:15> 'unsigned long' sizeof
| |   |         | | `-ParenExpr 0x7ffe4413bf68 <col:13, col:15> '_A1' lvalue
| |   |         | |   `-DeclRefExpr 0x7ffe4413bf40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:463:18> '_A1' lvalue ParmVar 0x7ffe4413bd30 '__lcpp_x' '_A1'
| |   |         | `-UnaryExprOrTypeTraitExpr 0x7ffe4413bfc0 </usr/include/math.h:174:20, col:32> 'unsigned long' sizeof 'float'
| |   |         |-CallExpr 0x7ffe4413c158 <col:37, col:63> 'int'
| |   |         | |-ImplicitCastExpr 0x7ffe4413c140 <col:37> 'int (*)(float)' <FunctionToPointerDecay>
| |   |         | | `-DeclRefExpr 0x7ffe4413c118 <col:37> 'int (float)' lvalue Function 0x7ffe43900d70 '__inline_isinff' 'int (float)'
| |   |         | `-CStyleCastExpr 0x7ffe4413c0f0 <col:53, col:62> 'float' <Dependent>
| |   |         |   `-ParenExpr 0x7ffe4413c0d0 <col:60, col:62> '_A1' lvalue
| |   |         |     `-DeclRefExpr 0x7ffe4413c060 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:463:18> '_A1' lvalue ParmVar 0x7ffe4413bd30 '__lcpp_x' '_A1'
| |   |         `-ConditionalOperator 0x7ffe4413c550 </usr/include/math.h:175:7, line:176:69> 'int'
| |   |           |-BinaryOperator 0x7ffe4413c228 <line:175:7, col:33> '_Bool' '=='
| |   |           | |-UnaryExprOrTypeTraitExpr 0x7ffe4413c1d0 <col:7, col:15> 'unsigned long' sizeof
| |   |           | | `-ParenExpr 0x7ffe4413c1b0 <col:13, col:15> '_A1' lvalue
| |   |           | |   `-DeclRefExpr 0x7ffe4413c188 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:463:18> '_A1' lvalue ParmVar 0x7ffe4413bd30 '__lcpp_x' '_A1'
| |   |           | `-UnaryExprOrTypeTraitExpr 0x7ffe4413c208 </usr/include/math.h:175:20, col:33> 'unsigned long' sizeof 'double'
| |   |           |-CallExpr 0x7ffe4413c3a0 <col:37, col:64> 'int'
| |   |           | |-ImplicitCastExpr 0x7ffe4413c388 <col:37> 'int (*)(double)' <FunctionToPointerDecay>
| |   |           | | `-DeclRefExpr 0x7ffe4413c360 <col:37> 'int (double)' lvalue Function 0x7ffe43901090 '__inline_isinfd' 'int (double)'
| |   |           | `-CStyleCastExpr 0x7ffe4413c338 <col:53, col:63> 'double' <Dependent>
| |   |           |   `-ParenExpr 0x7ffe4413c318 <col:61, col:63> '_A1' lvalue
| |   |           |     `-DeclRefExpr 0x7ffe4413c2a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:463:18> '_A1' lvalue ParmVar 0x7ffe4413bd30 '__lcpp_x' '_A1'
| |   |           `-CallExpr 0x7ffe4413c520 </usr/include/math.h:176:37, col:69> 'int'
| |   |             |-ImplicitCastExpr 0x7ffe4413c508 <col:37> 'int (*)(long double)' <FunctionToPointerDecay>
| |   |             | `-DeclRefExpr 0x7ffe4413c4e0 <col:37> 'int (long double)' lvalue Function 0x7ffe439017b0 '__inline_isinfl' 'int (long double)'
| |   |             `-CStyleCastExpr 0x7ffe4413c4b8 <col:53, col:68> 'long double' <Dependent>
| |   |               `-ParenExpr 0x7ffe4413c498 <col:66, col:68> '_A1' lvalue
| |   |                 `-DeclRefExpr 0x7ffe4413c428 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:463:18> '_A1' lvalue ParmVar 0x7ffe4413bd30 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7ffe4413bee8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7ffe4413bf30 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7ffe4413cc00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:468:1, line:476:1> line:473:1 isinf
| | |-TemplateTypeParmDecl 0x7ffe4413c620 <line:468:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7ffe4413cb68 <line:469:1, line:476:1> line:473:1 isinf 'typename std::enable_if<std::is_arithmetic<_A1>::value && std::numeric_limits<_A1>::has_infinity, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7ffe4413ca90 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7ffe4413cec8 <line:474:1, line:476:1>
| |   | `-ReturnStmt 0x7ffe4413ceb0 <line:475:5, col:71>
| |   |   `-CallExpr 0x7ffe4413ce80 <col:12, col:71> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7ffe4413ccb0 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_isinf' 0x7ffe4413be90
| |   |     `-CStyleCastExpr 0x7ffe4413ce58 <col:27, col:63> 'typename std::__promote<_A1>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7ffe4413ce10 <col:63> '_A1' lvalue ParmVar 0x7ffe4413ca90 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7ffe4413cc58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7ffe4413cca0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7ffe4413d500 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:478:1, line:484:17> line:483:1 isinf
| | |-TemplateTypeParmDecl 0x7ffe4413cee8 <line:478:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7ffe4413d468 <line:479:1, line:484:17> line:483:1 isinf 'typename std::enable_if<std::is_arithmetic<_A1>::value && !std::numeric_limits<_A1>::has_infinity, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7ffe4413d390 <col:7> col:10 '_A1'
| |   |-CompoundStmt 0x7ffe4413d5e0 <line:484:1, col:17>
| |   | `-ReturnStmt 0x7ffe4413d5c8 <col:3, col:10>
| |   |   `-CXXBoolLiteralExpr 0x7ffe4413d5b0 <col:10> '_Bool' false
| |   |-AlwaysInlineAttr 0x7ffe4413d558 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7ffe4413d5a0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7ffe4413d820 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:492:1, line:498:1> line:495:1 __libcpp_isnan
| | |-TemplateTypeParmDecl 0x7ffe4413d600 <line:492:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7ffe4413d788 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:498:1> line:495:1 __libcpp_isnan '_Bool (_A1) noexcept'
| |   |-ParmVarDecl 0x7ffe4413d6c0 <col:16, col:20> col:20 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7ffe4413df90 <line:496:1, line:498:1>
| |   | `-ReturnStmt 0x7ffe4413df78 <line:497:5, /usr/include/math.h:181:70>
| |   |   `-ImplicitCastExpr 0x7ffe4413df60 <line:179:5, line:181:70> '_Bool' <IntegralToBoolean>
| |   |     `-ParenExpr 0x7ffe4413df40 <line:179:5, line:181:70> 'int'
| |   |       `-ConditionalOperator 0x7ffe4413df10 <line:179:7, line:181:69> 'int'
| |   |         |-BinaryOperator 0x7ffe4413d970 <line:179:7, col:32> '_Bool' '=='
| |   |         | |-UnaryExprOrTypeTraitExpr 0x7ffe4413d918 <col:7, col:15> 'unsigned long' sizeof
| |   |         | | `-ParenExpr 0x7ffe4413d8f8 <col:13, col:15> '_A1' lvalue
| |   |         | |   `-DeclRefExpr 0x7ffe4413d8d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:497:18> '_A1' lvalue ParmVar 0x7ffe4413d6c0 '__lcpp_x' '_A1'
| |   |         | `-UnaryExprOrTypeTraitExpr 0x7ffe4413d950 </usr/include/math.h:179:20, col:32> 'unsigned long' sizeof 'float'
| |   |         |-CallExpr 0x7ffe4413dae8 <col:37, col:63> 'int'
| |   |         | |-ImplicitCastExpr 0x7ffe4413dad0 <col:37> 'int (*)(float)' <FunctionToPointerDecay>
| |   |         | | `-DeclRefExpr 0x7ffe4413daa8 <col:37> 'int (float)' lvalue Function 0x7ffe43901ad0 '__inline_isnanf' 'int (float)'
| |   |         | `-CStyleCastExpr 0x7ffe4413da80 <col:53, col:62> 'float' <Dependent>
| |   |         |   `-ParenExpr 0x7ffe4413da60 <col:60, col:62> '_A1' lvalue
| |   |         |     `-DeclRefExpr 0x7ffe4413d9f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:497:18> '_A1' lvalue ParmVar 0x7ffe4413d6c0 '__lcpp_x' '_A1'
| |   |         `-ConditionalOperator 0x7ffe4413dee0 </usr/include/math.h:180:7, line:181:69> 'int'
| |   |           |-BinaryOperator 0x7ffe4413dbb8 <line:180:7, col:33> '_Bool' '=='
| |   |           | |-UnaryExprOrTypeTraitExpr 0x7ffe4413db60 <col:7, col:15> 'unsigned long' sizeof
| |   |           | | `-ParenExpr 0x7ffe4413db40 <col:13, col:15> '_A1' lvalue
| |   |           | |   `-DeclRefExpr 0x7ffe4413db18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:497:18> '_A1' lvalue ParmVar 0x7ffe4413d6c0 '__lcpp_x' '_A1'
| |   |           | `-UnaryExprOrTypeTraitExpr 0x7ffe4413db98 </usr/include/math.h:180:20, col:33> 'unsigned long' sizeof 'double'
| |   |           |-CallExpr 0x7ffe4413dd30 <col:37, col:64> 'int'
| |   |           | |-ImplicitCastExpr 0x7ffe4413dd18 <col:37> 'int (*)(double)' <FunctionToPointerDecay>
| |   |           | | `-DeclRefExpr 0x7ffe4413dcf0 <col:37> 'int (double)' lvalue Function 0x7ffe43901d58 '__inline_isnand' 'int (double)'
| |   |           | `-CStyleCastExpr 0x7ffe4413dcc8 <col:53, col:63> 'double' <Dependent>
| |   |           |   `-ParenExpr 0x7ffe4413dca8 <col:61, col:63> '_A1' lvalue
| |   |           |     `-DeclRefExpr 0x7ffe4413dc38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:497:18> '_A1' lvalue ParmVar 0x7ffe4413d6c0 '__lcpp_x' '_A1'
| |   |           `-CallExpr 0x7ffe4413deb0 </usr/include/math.h:181:37, col:69> 'int'
| |   |             |-ImplicitCastExpr 0x7ffe4413de98 <col:37> 'int (*)(long double)' <FunctionToPointerDecay>
| |   |             | `-DeclRefExpr 0x7ffe4413de70 <col:37> 'int (long double)' lvalue Function 0x7ffe43901fe0 '__inline_isnanl' 'int (long double)'
| |   |             `-CStyleCastExpr 0x7ffe4413de48 <col:53, col:68> 'long double' <Dependent>
| |   |               `-ParenExpr 0x7ffe4413de28 <col:66, col:68> '_A1' lvalue
| |   |                 `-DeclRefExpr 0x7ffe4413ddb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:497:18> '_A1' lvalue ParmVar 0x7ffe4413d6c0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7ffe4413d878 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7ffe4413d8c0 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7ffe4413e450 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:502:1, line:508:1> line:505:1 isnan
| | |-TemplateTypeParmDecl 0x7ffe4413dfb0 <line:502:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7ffe4413e3b8 <line:503:1, line:508:1> line:505:1 isnan 'typename std::enable_if<std::is_floating_point<_A1>::value, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7ffe4413e2e0 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7ffe4413e718 <line:506:1, line:508:1>
| |   | `-ReturnStmt 0x7ffe4413e700 <line:507:5, col:71>
| |   |   `-CallExpr 0x7ffe4413e6d0 <col:12, col:71> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7ffe4413e500 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_isnan' 0x7ffe4413d820
| |   |     `-CStyleCastExpr 0x7ffe4413e6a8 <col:27, col:63> 'typename std::__promote<_A1>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7ffe4413e660 <col:63> '_A1' lvalue ParmVar 0x7ffe4413e2e0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7ffe4413e4a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7ffe4413e4f0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7ffe4413ecd0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:510:1, line:514:17> line:513:1 isnan
| | |-TemplateTypeParmDecl 0x7ffe4413e738 <line:510:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7ffe4413ec38 <line:511:1, line:514:17> line:513:1 isnan 'typename std::enable_if<std::is_integral<_A1>::value, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7ffe4413eb20 <col:7> col:10 '_A1'
| |   |-CompoundStmt 0x7ffe4413edb0 <line:514:1, col:17>
| |   | `-ReturnStmt 0x7ffe4413ed98 <col:3, col:10>
| |   |   `-CXXBoolLiteralExpr 0x7ffe4413ed80 <col:10> '_Bool' false
| |   |-AlwaysInlineAttr 0x7ffe4413ed28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7ffe4413ed70 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7ffe4413eff0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:522:1, line:528:1> line:525:1 __libcpp_isnormal
| | |-TemplateTypeParmDecl 0x7ffe4413edd0 <line:522:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7ffe4413ef58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:528:1> line:525:1 __libcpp_isnormal '_Bool (_A1) noexcept'
| |   |-ParmVarDecl 0x7ffe4413ee90 <col:19, col:23> col:23 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7ffe4413f778 <line:526:1, line:528:1>
| |   | `-ReturnStmt 0x7ffe4413f760 <line:527:5, /usr/include/math.h:166:73>
| |   |   `-ImplicitCastExpr 0x7ffe4413f748 <line:164:5, line:166:73> '_Bool' <IntegralToBoolean>
| |   |     `-ParenExpr 0x7ffe4413f728 <line:164:5, line:166:73> 'int'
| |   |       `-ConditionalOperator 0x7ffe4413f6f8 <line:164:7, line:166:72> 'int'
| |   |         |-BinaryOperator 0x7ffe4413f140 <line:164:7, col:32> '_Bool' '=='
| |   |         | |-UnaryExprOrTypeTraitExpr 0x7ffe4413f0e8 <col:7, col:15> 'unsigned long' sizeof
| |   |         | | `-ParenExpr 0x7ffe4413f0c8 <col:13, col:15> '_A1' lvalue
| |   |         | |   `-DeclRefExpr 0x7ffe4413f0a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:527:21> '_A1' lvalue ParmVar 0x7ffe4413ee90 '__lcpp_x' '_A1'
| |   |         | `-UnaryExprOrTypeTraitExpr 0x7ffe4413f120 </usr/include/math.h:164:20, col:32> 'unsigned long' sizeof 'float'
| |   |         |-CallExpr 0x7ffe4413f2d0 <col:37, col:66> 'int'
| |   |         | |-ImplicitCastExpr 0x7ffe4413f2b8 <col:37> 'int (*)(float)' <FunctionToPointerDecay>
| |   |         | | `-DeclRefExpr 0x7ffe4413f290 <col:37> 'int (float)' lvalue Function 0x7ffe43908438 '__inline_isnormalf' 'int (float)'
| |   |         | `-CStyleCastExpr 0x7ffe4413f268 <col:56, col:65> 'float' <Dependent>
| |   |         |   `-ParenExpr 0x7ffe4413f248 <col:63, col:65> '_A1' lvalue
| |   |         |     `-DeclRefExpr 0x7ffe4413f1c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:527:21> '_A1' lvalue ParmVar 0x7ffe4413ee90 '__lcpp_x' '_A1'
| |   |         `-ConditionalOperator 0x7ffe4413f6c8 </usr/include/math.h:165:7, line:166:72> 'int'
| |   |           |-BinaryOperator 0x7ffe4413f3a0 <line:165:7, col:33> '_Bool' '=='
| |   |           | |-UnaryExprOrTypeTraitExpr 0x7ffe4413f348 <col:7, col:15> 'unsigned long' sizeof
| |   |           | | `-ParenExpr 0x7ffe4413f328 <col:13, col:15> '_A1' lvalue
| |   |           | |   `-DeclRefExpr 0x7ffe4413f300 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:527:21> '_A1' lvalue ParmVar 0x7ffe4413ee90 '__lcpp_x' '_A1'
| |   |           | `-UnaryExprOrTypeTraitExpr 0x7ffe4413f380 </usr/include/math.h:165:20, col:33> 'unsigned long' sizeof 'double'
| |   |           |-CallExpr 0x7ffe4413f518 <col:37, col:67> 'int'
| |   |           | |-ImplicitCastExpr 0x7ffe4413f500 <col:37> 'int (*)(double)' <FunctionToPointerDecay>
| |   |           | | `-DeclRefExpr 0x7ffe4413f4d8 <col:37> 'int (double)' lvalue Function 0x7ffe43908c90 '__inline_isnormald' 'int (double)'
| |   |           | `-CStyleCastExpr 0x7ffe4413f4b0 <col:56, col:66> 'double' <Dependent>
| |   |           |   `-ParenExpr 0x7ffe4413f490 <col:64, col:66> '_A1' lvalue
| |   |           |     `-DeclRefExpr 0x7ffe4413f420 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:527:21> '_A1' lvalue ParmVar 0x7ffe4413ee90 '__lcpp_x' '_A1'
| |   |           `-CallExpr 0x7ffe4413f698 </usr/include/math.h:166:37, col:72> 'int'
| |   |             |-ImplicitCastExpr 0x7ffe4413f680 <col:37> 'int (*)(long double)' <FunctionToPointerDecay>
| |   |             | `-DeclRefExpr 0x7ffe4413f658 <col:37> 'int (long double)' lvalue Function 0x7ffe439090d8 '__inline_isnormall' 'int (long double)'
| |   |             `-CStyleCastExpr 0x7ffe4413f630 <col:56, col:71> 'long double' <Dependent>
| |   |               `-ParenExpr 0x7ffe4413f610 <col:69, col:71> '_A1' lvalue
| |   |                 `-DeclRefExpr 0x7ffe4413f5a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:527:21> '_A1' lvalue ParmVar 0x7ffe4413ee90 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7ffe4413f048 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7ffe4413f090 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7ffe4413fc40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:532:1, line:538:1> line:535:1 isnormal
| | |-TemplateTypeParmDecl 0x7ffe4413f798 <line:532:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7ffe4413fba8 <line:533:1, line:538:1> line:535:1 isnormal 'typename std::enable_if<std::is_floating_point<_A1>::value, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7ffe4413fad0 <col:10, col:14> col:14 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7ffe4413ff08 <line:536:1, line:538:1>
| |   | `-ReturnStmt 0x7ffe4413fef0 <line:537:5, col:74>
| |   |   `-CallExpr 0x7ffe4413fec0 <col:12, col:74> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7ffe4413fcf0 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_isnormal' 0x7ffe4413eff0
| |   |     `-CStyleCastExpr 0x7ffe4413fe98 <col:30, col:66> 'typename std::__promote<_A1>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7ffe4413fe50 <col:66> '_A1' lvalue ParmVar 0x7ffe4413fad0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7ffe4413fc98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7ffe4413fce0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7ffe441403d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:540:1, line:544:25> line:543:1 isnormal
| | |-TemplateTypeParmDecl 0x7ffe4413ff28 <line:540:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7ffe44140338 <line:541:1, line:544:25> line:543:1 isnormal 'typename std::enable_if<std::is_integral<_A1>::value, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7ffe44140260 <col:10, col:14> col:14 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7ffe44140508 <line:544:1, col:25>
| |   | `-ReturnStmt 0x7ffe441404f0 <col:3, col:22>
| |   |   `-BinaryOperator 0x7ffe441404c8 <col:10, col:22> '<dependent type>' '!='
| |   |     |-DeclRefExpr 0x7ffe44140480 <col:10> '_A1' lvalue ParmVar 0x7ffe44140260 '__lcpp_x' '_A1'
| |   |     `-IntegerLiteral 0x7ffe441404a8 <col:22> 'int' 0
| |   |-AlwaysInlineAttr 0x7ffe44140428 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7ffe44140470 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7ffe44140890 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:552:1, line:558:1> line:555:1 __libcpp_isgreater
| | |-TemplateTypeParmDecl 0x7ffe44140528 <line:552:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7ffe44140598 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7ffe441407f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:558:1> line:555:1 __libcpp_isgreater '_Bool (_A1, _A2) noexcept'
| |   |-ParmVarDecl 0x7ffe44140668 <col:20, col:24> col:24 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7ffe441406d8 <col:34, col:38> col:38 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7ffe44140bf8 <line:556:1, line:558:1>
| |   | `-ReturnStmt 0x7ffe44140be0 <line:557:5, /usr/include/math.h:557:52>
| |   |   `-CallExpr 0x7ffe44140ba8 <col:25, col:52> '<dependent type>'
| |   |     |-DeclRefExpr 0x7ffe44140af0 <col:25> '<builtin fn type>' Function 0x7ffe44140a00 '__builtin_isgreater' 'int (...) noexcept'
| |   |     |-ParenExpr 0x7ffe44140b40 <col:45, col:47> '_A1' lvalue
| |   |     | `-DeclRefExpr 0x7ffe44140b18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:557:22> '_A1' lvalue ParmVar 0x7ffe44140668 '__lcpp_x' '_A1'
| |   |     `-ParenExpr 0x7ffe44140b88 </usr/include/math.h:557:49, col:51> '_A2' lvalue
| |   |       `-DeclRefExpr 0x7ffe44140b60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:557:32> '_A2' lvalue ParmVar 0x7ffe441406d8 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7ffe441408f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7ffe44140938 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7ffe44141460 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:562:1, line:574:1> line:570:1 isgreater
| | |-TemplateTypeParmDecl 0x7ffe44140c18 <line:562:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7ffe44140c88 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7ffe441413c8 <line:563:1, line:574:1> line:570:1 isgreater 'typename std::enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, _Bool>::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7ffe44141230 <col:11, col:15> col:15 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7ffe441412a0 <col:25, col:29> col:29 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7ffe44141950 <line:571:1, line:574:1>
| |   | |-DeclStmt 0x7ffe441417a8 <line:572:5, col:57>
| |   | | `-TypedefDecl 0x7ffe44141750 <col:5, col:53> col:53 referenced type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7ffe441416e0 'typename std::__promote<_A1, _A2>::type' dependent
| |   | `-ReturnStmt 0x7ffe44141938 <line:573:5, col:61>
| |   |   `-CallExpr 0x7ffe44141900 <col:12, col:61> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7ffe441417c0 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_isgreater' 0x7ffe44140890
| |   |     |-CStyleCastExpr 0x7ffe44141878 <col:31, col:37> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7ffe44141840 <col:37> '_A1' lvalue ParmVar 0x7ffe44141230 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7ffe441418d8 <col:47, col:53> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7ffe441418a0 <col:53> '_A2' lvalue ParmVar 0x7ffe441412a0 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7ffe441414c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7ffe44141508 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7ffe44141ca0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:582:1, line:588:1> line:585:1 __libcpp_isgreaterequal
| | |-TemplateTypeParmDecl 0x7ffe44141978 <line:582:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7ffe441419e8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7ffe44141c08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:588:1> line:585:1 __libcpp_isgreaterequal '_Bool (_A1, _A2) noexcept'
| |   |-ParmVarDecl 0x7ffe44141ab8 <col:25, col:29> col:29 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7ffe44141b28 <col:39, col:43> col:43 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7ffe44141fa0 <line:586:1, line:588:1>
| |   | `-ReturnStmt 0x7ffe44141f88 <line:587:5, /usr/include/math.h:558:62>
| |   |   `-CallExpr 0x7ffe44141f50 <col:30, col:62> '<dependent type>'
| |   |     |-DeclRefExpr 0x7ffe44141e98 <col:30> '<builtin fn type>' Function 0x7ffe44141da8 '__builtin_isgreaterequal' 'int (...) noexcept'
| |   |     |-ParenExpr 0x7ffe44141ee8 <col:55, col:57> '_A1' lvalue
| |   |     | `-DeclRefExpr 0x7ffe44141ec0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:587:27> '_A1' lvalue ParmVar 0x7ffe44141ab8 '__lcpp_x' '_A1'
| |   |     `-ParenExpr 0x7ffe44141f30 </usr/include/math.h:558:59, col:61> '_A2' lvalue
| |   |       `-DeclRefExpr 0x7ffe44141f08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:587:37> '_A2' lvalue ParmVar 0x7ffe44141b28 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7ffe44141d00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7ffe44141d48 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7ffe441426a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:592:1, line:604:1> line:600:1 isgreaterequal
| | |-TemplateTypeParmDecl 0x7ffe44141fc0 <line:592:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7ffe44142028 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7ffe44142608 <line:593:1, line:604:1> line:600:1 isgreaterequal 'typename std::enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, _Bool>::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7ffe441424b0 <col:16, col:20> col:20 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7ffe44142520 <col:30, col:34> col:34 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7ffe44142ac0 <line:601:1, line:604:1>
| |   | |-DeclStmt 0x7ffe44142918 <line:602:5, col:57>
| |   | | `-TypedefDecl 0x7ffe441428c0 <col:5, col:53> col:53 referenced type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7ffe44142850 'typename std::__promote<_A1, _A2>::type' dependent
| |   | `-ReturnStmt 0x7ffe44142aa8 <line:603:5, col:66>
| |   |   `-CallExpr 0x7ffe44142a70 <col:12, col:66> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7ffe44142930 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_isgreaterequal' 0x7ffe44141ca0
| |   |     |-CStyleCastExpr 0x7ffe441429e8 <col:36, col:42> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7ffe441429b0 <col:42> '_A1' lvalue ParmVar 0x7ffe441424b0 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7ffe44142a48 <col:52, col:58> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7ffe44142a10 <col:58> '_A2' lvalue ParmVar 0x7ffe44142520 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7ffe44142700 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7ffe44142748 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7ffe44142e10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:612:1, line:618:1> line:615:1 __libcpp_isless
| | |-TemplateTypeParmDecl 0x7ffe44142ae8 <line:612:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7ffe44142b58 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7ffe44142d78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:618:1> line:615:1 __libcpp_isless '_Bool (_A1, _A2) noexcept'
| |   |-ParmVarDecl 0x7ffe44142c28 <col:17, col:21> col:21 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7ffe44142c98 <col:31, col:35> col:35 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7ffe44143110 <line:616:1, line:618:1>
| |   | `-ReturnStmt 0x7ffe441430f8 <line:617:5, /usr/include/math.h:559:46>
| |   |   `-CallExpr 0x7ffe441430c0 <col:22, col:46> '<dependent type>'
| |   |     |-DeclRefExpr 0x7ffe44143008 <col:22> '<builtin fn type>' Function 0x7ffe44142f18 '__builtin_isless' 'int (...) noexcept'
| |   |     |-ParenExpr 0x7ffe44143058 <col:39, col:41> '_A1' lvalue
| |   |     | `-DeclRefExpr 0x7ffe44143030 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:617:19> '_A1' lvalue ParmVar 0x7ffe44142c28 '__lcpp_x' '_A1'
| |   |     `-ParenExpr 0x7ffe441430a0 </usr/include/math.h:559:43, col:45> '_A2' lvalue
| |   |       `-DeclRefExpr 0x7ffe44143078 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:617:29> '_A2' lvalue ParmVar 0x7ffe44142c98 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7ffe44142e70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7ffe44142eb8 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7ffe44143830 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:622:1, line:634:1> line:630:1 isless
| | |-TemplateTypeParmDecl 0x7ffe44143130 <line:622:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7ffe44143198 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7ffe44143798 <line:623:1, line:634:1> line:630:1 isless 'typename std::enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, _Bool>::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7ffe44143640 <col:8, col:12> col:12 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7ffe441436b0 <col:22, col:26> col:26 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7ffe44143c50 <line:631:1, line:634:1>
| |   | |-DeclStmt 0x7ffe44143aa8 <line:632:5, col:57>
| |   | | `-TypedefDecl 0x7ffe44143a50 <col:5, col:53> col:53 referenced type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7ffe441439e0 'typename std::__promote<_A1, _A2>::type' dependent
| |   | `-ReturnStmt 0x7ffe44143c38 <line:633:5, col:58>
| |   |   `-CallExpr 0x7ffe44143c00 <col:12, col:58> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7ffe44143ac0 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_isless' 0x7ffe44142e10
| |   |     |-CStyleCastExpr 0x7ffe44143b78 <col:28, col:34> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7ffe44143b40 <col:34> '_A1' lvalue ParmVar 0x7ffe44143640 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7ffe44143bd8 <col:44, col:50> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7ffe44143ba0 <col:50> '_A2' lvalue ParmVar 0x7ffe441436b0 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7ffe44143890 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7ffe441438d8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7ffe44143fa0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:642:1, line:648:1> line:645:1 __libcpp_islessequal
| | |-TemplateTypeParmDecl 0x7ffe44143c78 <line:642:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7ffe44143ce8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7ffe44143f08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:648:1> line:645:1 __libcpp_islessequal '_Bool (_A1, _A2) noexcept'
| |   |-ParmVarDecl 0x7ffe44143db8 <col:22, col:26> col:26 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7ffe44143e28 <col:36, col:40> col:40 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7ffe441442a0 <line:646:1, line:648:1>
| |   | `-ReturnStmt 0x7ffe44144288 <line:647:5, /usr/include/math.h:560:56>
| |   |   `-CallExpr 0x7ffe44144250 <col:27, col:56> '<dependent type>'
| |   |     |-DeclRefExpr 0x7ffe44144198 <col:27> '<builtin fn type>' Function 0x7ffe441440a8 '__builtin_islessequal' 'int (...) noexcept'
| |   |     |-ParenExpr 0x7ffe441441e8 <col:49, col:51> '_A1' lvalue
| |   |     | `-DeclRefExpr 0x7ffe441441c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:647:24> '_A1' lvalue ParmVar 0x7ffe44143db8 '__lcpp_x' '_A1'
| |   |     `-ParenExpr 0x7ffe44144230 </usr/include/math.h:560:53, col:55> '_A2' lvalue
| |   |       `-DeclRefExpr 0x7ffe44144208 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:647:34> '_A2' lvalue ParmVar 0x7ffe44143e28 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7ffe44144000 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7ffe44144048 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7ffe441449a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:652:1, line:664:1> line:660:1 islessequal
| | |-TemplateTypeParmDecl 0x7ffe441442c0 <line:652:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7ffe44144328 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7ffe44144908 <line:653:1, line:664:1> line:660:1 islessequal 'typename std::enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, _Bool>::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7ffe441447b0 <col:13, col:17> col:17 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7ffe44144820 <col:27, col:31> col:31 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7ffe44144dc0 <line:661:1, line:664:1>
| |   | |-DeclStmt 0x7ffe44144c18 <line:662:5, col:57>
| |   | | `-TypedefDecl 0x7ffe44144bc0 <col:5, col:53> col:53 referenced type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7ffe44144b50 'typename std::__promote<_A1, _A2>::type' dependent
| |   | `-ReturnStmt 0x7ffe44144da8 <line:663:5, col:63>
| |   |   `-CallExpr 0x7ffe44144d70 <col:12, col:63> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7ffe44144c30 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_islessequal' 0x7ffe44143fa0
| |   |     |-CStyleCastExpr 0x7ffe44144ce8 <col:33, col:39> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7ffe44144cb0 <col:39> '_A1' lvalue ParmVar 0x7ffe441447b0 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7ffe44144d48 <col:49, col:55> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7ffe44144d10 <col:55> '_A2' lvalue ParmVar 0x7ffe44144820 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7ffe44144a00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7ffe44144a48 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7ffe44145110 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:672:1, line:678:1> line:675:1 __libcpp_islessgreater
| | |-TemplateTypeParmDecl 0x7ffe44144de8 <line:672:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7ffe44144e58 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7ffe44145078 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:678:1> line:675:1 __libcpp_islessgreater '_Bool (_A1, _A2) noexcept'
| |   |-ParmVarDecl 0x7ffe44144f28 <col:24, col:28> col:28 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7ffe44144f98 <col:38, col:42> col:42 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7ffe44145448 <line:676:1, line:678:1>
| |   | `-ReturnStmt 0x7ffe44145430 <line:677:5, /usr/include/math.h:561:60>
| |   |   `-CallExpr 0x7ffe441453f8 <col:29, col:60> '<dependent type>'
| |   |     |-DeclRefExpr 0x7ffe44145340 <col:29> '<builtin fn type>' Function 0x7ffe44145250 '__builtin_islessgreater' 'int (...) noexcept'
| |   |     |-ParenExpr 0x7ffe44145390 <col:53, col:55> '_A1' lvalue
| |   |     | `-DeclRefExpr 0x7ffe44145368 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:677:26> '_A1' lvalue ParmVar 0x7ffe44144f28 '__lcpp_x' '_A1'
| |   |     `-ParenExpr 0x7ffe441453d8 </usr/include/math.h:561:57, col:59> '_A2' lvalue
| |   |       `-DeclRefExpr 0x7ffe441453b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:677:36> '_A2' lvalue ParmVar 0x7ffe44144f98 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7ffe44145170 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7ffe441451b8 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7ffe44145b50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:682:1, line:694:1> line:690:1 islessgreater
| | |-TemplateTypeParmDecl 0x7ffe44145468 <line:682:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7ffe441454d8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7ffe44145ab8 <line:683:1, line:694:1> line:690:1 islessgreater 'typename std::enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, _Bool>::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7ffe44145960 <col:15, col:19> col:19 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7ffe441459d0 <col:29, col:33> col:33 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7ffe44145f70 <line:691:1, line:694:1>
| |   | |-DeclStmt 0x7ffe44145dc8 <line:692:5, col:57>
| |   | | `-TypedefDecl 0x7ffe44145d70 <col:5, col:53> col:53 referenced type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7ffe44145d00 'typename std::__promote<_A1, _A2>::type' dependent
| |   | `-ReturnStmt 0x7ffe44145f58 <line:693:5, col:65>
| |   |   `-CallExpr 0x7ffe44145f20 <col:12, col:65> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7ffe44145de0 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_islessgreater' 0x7ffe44145110
| |   |     |-CStyleCastExpr 0x7ffe44145e98 <col:35, col:41> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7ffe44145e60 <col:41> '_A1' lvalue ParmVar 0x7ffe44145960 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7ffe44145ef8 <col:51, col:57> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7ffe44145ec0 <col:57> '_A2' lvalue ParmVar 0x7ffe441459d0 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7ffe44145bb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7ffe44145bf8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7ffe441462c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:702:1, line:708:1> line:705:1 __libcpp_isunordered
| | |-TemplateTypeParmDecl 0x7ffe44145f98 <line:702:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7ffe44146008 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7ffe44146228 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:708:1> line:705:1 __libcpp_isunordered '_Bool (_A1, _A2) noexcept'
| |   |-ParmVarDecl 0x7ffe441460d8 <col:22, col:26> col:26 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7ffe44146148 <col:36, col:40> col:40 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7ffe441465c0 <line:706:1, line:708:1>
| |   | `-ReturnStmt 0x7ffe441465a8 <line:707:5, /usr/include/math.h:562:56>
| |   |   `-CallExpr 0x7ffe44146570 <col:27, col:56> '<dependent type>'
| |   |     |-DeclRefExpr 0x7ffe441464b8 <col:27> '<builtin fn type>' Function 0x7ffe441463c8 '__builtin_isunordered' 'int (...) noexcept'
| |   |     |-ParenExpr 0x7ffe44146508 <col:49, col:51> '_A1' lvalue
| |   |     | `-DeclRefExpr 0x7ffe441464e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:707:24> '_A1' lvalue ParmVar 0x7ffe441460d8 '__lcpp_x' '_A1'
| |   |     `-ParenExpr 0x7ffe44146550 </usr/include/math.h:562:53, col:55> '_A2' lvalue
| |   |       `-DeclRefExpr 0x7ffe44146528 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:707:34> '_A2' lvalue ParmVar 0x7ffe44146148 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7ffe44146320 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7ffe44146368 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7ffe44146cc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:712:1, line:724:1> line:720:1 isunordered
| | |-TemplateTypeParmDecl 0x7ffe441465e0 <line:712:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7ffe44146648 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7ffe44146c28 <line:713:1, line:724:1> line:720:1 isunordered 'typename std::enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, _Bool>::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7ffe44146ad0 <col:13, col:17> col:17 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7ffe44146b40 <col:27, col:31> col:31 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7ffe441470e0 <line:721:1, line:724:1>
| |   | |-DeclStmt 0x7ffe44146f38 <line:722:5, col:57>
| |   | | `-TypedefDecl 0x7ffe44146ee0 <col:5, col:53> col:53 referenced type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7ffe44146e70 'typename std::__promote<_A1, _A2>::type' dependent
| |   | `-ReturnStmt 0x7ffe441470c8 <line:723:5, col:63>
| |   |   `-CallExpr 0x7ffe44147090 <col:12, col:63> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7ffe44146f50 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_isunordered' 0x7ffe441462c0
| |   |     |-CStyleCastExpr 0x7ffe44147008 <col:33, col:39> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7ffe44146fd0 <col:39> '_A1' lvalue ParmVar 0x7ffe44146ad0 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7ffe44147068 <col:49, col:55> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7ffe44147030 <col:55> '_A2' lvalue ParmVar 0x7ffe44146b40 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7ffe44146d20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7ffe44146d68 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe44148200 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:731:1, line:733:57> col:1 abs 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7ffe44147150 <col:5, col:11> col:11 used __lcpp_x 'float'
| | |-CompoundStmt 0x7ffe441483f0 <col:31, col:57>
| | | `-ReturnStmt 0x7ffe441483d8 <col:32, col:55>
| | |   `-CallExpr 0x7ffe44148390 <col:39, col:55> 'float'
| | |     |-ImplicitCastExpr 0x7ffe44148378 <col:39, col:41> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe44148318 <col:39, col:41> 'float (float)' lvalue Function 0x7ffe439174f0 'fabsf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7ffe441483c0 <col:47> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe44148350 <col:47> 'float' lvalue ParmVar 0x7ffe44147150 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7ffe441482a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe441482e8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe441484f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:735:1, line:737:57> col:1 abs 'double (double) noexcept' inline
| | |-ParmVarDecl 0x7ffe44148458 <col:5, col:12> col:12 used __lcpp_x 'double'
| | |-CompoundStmt 0x7ffe441486e0 <col:32, col:57>
| | | `-ReturnStmt 0x7ffe441486c8 <col:33, col:55>
| | |   `-CallExpr 0x7ffe44148680 <col:40, col:55> 'double'
| | |     |-ImplicitCastExpr 0x7ffe44148668 <col:40, col:42> 'double (*)(double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe44148608 <col:40, col:42> 'double (double)' lvalue Function 0x7ffe43917690 'fabs' 'double (double)'
| | |     `-ImplicitCastExpr 0x7ffe441486b0 <col:47> 'double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe44148640 <col:47> 'double' lvalue ParmVar 0x7ffe44148458 '__lcpp_x' 'double'
| | |-AlwaysInlineAttr 0x7ffe44148590 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe441485d8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe441487e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:739:1, line:741:63> col:1 abs 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7ffe44148748 <col:5, col:17> col:17 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7ffe441489d0 <col:37, col:63>
| | | `-ReturnStmt 0x7ffe441489b8 <col:38, col:61>
| | |   `-CallExpr 0x7ffe44148970 <col:45, col:61> 'long double'
| | |     |-ImplicitCastExpr 0x7ffe44148958 <col:45, col:47> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe441488f8 <col:45, col:47> 'long double (long double)' lvalue Function 0x7ffe43917830 'fabsl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7ffe441489a0 <col:53> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe44148930 <col:53> 'long double' lvalue ParmVar 0x7ffe44148748 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7ffe44148880 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe441488c8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe44148ad0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:747:1, col:109> col:46 acos 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7ffe44148a38 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7ffe44148cc0 <col:83, col:109>
| | | `-ReturnStmt 0x7ffe44148ca8 <col:84, col:107>
| | |   `-CallExpr 0x7ffe44148c60 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7ffe44148c48 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe44148be8 <col:91, col:93> 'float (float)' lvalue Function 0x7ffe43909538 'acosf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7ffe44148c90 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe44148c20 <col:99> 'float' lvalue ParmVar 0x7ffe44148a38 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7ffe44148b70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe44148bb8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe44148dc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:748:1, col:109> col:46 acos 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7ffe44148d28 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7ffe44148fb0 <col:83, col:109>
| | | `-ReturnStmt 0x7ffe44148f98 <col:84, col:107>
| | |   `-CallExpr 0x7ffe44148f50 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7ffe44148f38 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe44148ed8 <col:91, col:93> 'long double (long double)' lvalue Function 0x7ffe43909878 'acosl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7ffe44148f80 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe44148f10 <col:99> 'long double' lvalue ParmVar 0x7ffe44148d28 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7ffe44148e60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe44148ea8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7ffe44149560 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:751:1, line:754:63> col:1 acos
| | |-TemplateTypeParmDecl 0x7ffe44148fd0 <line:751:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7ffe441494c8 <line:752:1, line:754:63> col:1 acos 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7ffe441493b0 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7ffe4414b060 <col:30, col:63>
| |   | `-ReturnStmt 0x7ffe4414b048 <col:31, col:61>
| |   |   `-CallExpr 0x7ffe4414b018 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7ffe4414b000 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7ffe4414afc8 <col:38, col:40> 'double (double)' lvalue Function 0x7ffe439096d8 'acos' 'double (double)'
| |   |     `-CStyleCastExpr 0x7ffe441496e0 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7ffe441496a0 <col:53> '_A1' lvalue ParmVar 0x7ffe441493b0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7ffe441495b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7ffe44149600 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe4414b160 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:759:1, col:109> col:46 asin 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7ffe4414b0c8 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7ffe4414b350 <col:83, col:109>
| | | `-ReturnStmt 0x7ffe4414b338 <col:84, col:107>
| | |   `-CallExpr 0x7ffe4414b2f0 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7ffe4414b2d8 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe4414b278 <col:91, col:93> 'float (float)' lvalue Function 0x7ffe43909a18 'asinf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7ffe4414b320 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe4414b2b0 <col:99> 'float' lvalue ParmVar 0x7ffe4414b0c8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7ffe4414b200 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe4414b248 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe4414b450 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:760:1, col:109> col:46 asin 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7ffe4414b3b8 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7ffe4414b640 <col:83, col:109>
| | | `-ReturnStmt 0x7ffe4414b628 <col:84, col:107>
| | |   `-CallExpr 0x7ffe4414b5e0 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7ffe4414b5c8 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe4414b568 <col:91, col:93> 'long double (long double)' lvalue Function 0x7ffe43909da0 'asinl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7ffe4414b610 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe4414b5a0 <col:99> 'long double' lvalue ParmVar 0x7ffe4414b3b8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7ffe4414b4f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe4414b538 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7ffe4414bb00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:763:1, line:766:63> col:1 asin
| | |-TemplateTypeParmDecl 0x7ffe4414b660 <line:763:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7ffe4414ba68 <line:764:1, line:766:63> col:1 asin 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7ffe4414b990 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7ffe4414c020 <col:30, col:63>
| |   | `-ReturnStmt 0x7ffe4414c008 <col:31, col:61>
| |   |   `-CallExpr 0x7ffe4414bfd8 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7ffe4414bfc0 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7ffe4414bf88 <col:38, col:40> 'double (double)' lvalue Function 0x7ffe43909c00 'asin' 'double (double)'
| |   |     `-CStyleCastExpr 0x7ffe4414bc80 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7ffe4414bc40 <col:53> '_A1' lvalue ParmVar 0x7ffe4414b990 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7ffe4414bb58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7ffe4414bba0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe4414c120 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:771:1, col:109> col:46 atan 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7ffe4414c088 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7ffe4414c340 <col:83, col:109>
| | | `-ReturnStmt 0x7ffe4414c328 <col:84, col:107>
| | |   `-CallExpr 0x7ffe4414c2e0 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7ffe4414c2c8 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe4414c268 <col:91, col:93> 'float (float)' lvalue Function 0x7ffe43909f40 'atanf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7ffe4414c310 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe4414c2a0 <col:99> 'float' lvalue ParmVar 0x7ffe4414c088 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7ffe4414c1c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe4414c238 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe4414c440 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:772:1, col:109> col:46 atan 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7ffe4414c3a8 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7ffe4414c630 <col:83, col:109>
| | | `-ReturnStmt 0x7ffe4414c618 <col:84, col:107>
| | |   `-CallExpr 0x7ffe4414c5d0 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7ffe4414c5b8 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe4414c558 <col:91, col:93> 'long double (long double)' lvalue Function 0x7ffe4390a280 'atanl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7ffe4414c600 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe4414c590 <col:99> 'long double' lvalue ParmVar 0x7ffe4414c3a8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7ffe4414c4e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe4414c528 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7ffe4414caf0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:775:1, line:778:63> col:1 atan
| | |-TemplateTypeParmDecl 0x7ffe4414c650 <line:775:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7ffe4414ca58 <line:776:1, line:778:63> col:1 atan 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7ffe4414c980 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7ffe4414d010 <col:30, col:63>
| |   | `-ReturnStmt 0x7ffe4414cff8 <col:31, col:61>
| |   |   `-CallExpr 0x7ffe4414cfc8 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7ffe4414cfb0 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7ffe4414cf78 <col:38, col:40> 'double (double)' lvalue Function 0x7ffe4390a0e0 'atan' 'double (double)'
| |   |     `-CStyleCastExpr 0x7ffe4414cc70 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7ffe4414cc30 <col:53> '_A1' lvalue ParmVar 0x7ffe4414c980 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7ffe4414cb48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7ffe4414cb90 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe4414d190 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:783:1, col:143> col:46 atan2 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7ffe4414d078 <col:52, col:58> col:58 used __lcpp_y 'float'
| | |-ParmVarDecl 0x7ffe4414d0f0 <col:68, col:74> col:74 used __lcpp_x 'float'
| | |-CompoundStmt 0x7ffe4414d400 <col:106, col:143>
| | | `-ReturnStmt 0x7ffe4414d3e8 <col:107, col:141>
| | |   `-CallExpr 0x7ffe4414d380 <col:114, col:141> 'float'
| | |     |-ImplicitCastExpr 0x7ffe4414d368 <col:114, col:116> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe4414d2b0 <col:114, col:116> 'float (float, float)' lvalue Function 0x7ffe4390a4e8 'atan2f' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7ffe4414d3b8 <col:123> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7ffe4414d2e8 <col:123> 'float' lvalue ParmVar 0x7ffe4414d078 '__lcpp_y' 'float'
| | |     `-ImplicitCastExpr 0x7ffe4414d3d0 <col:133> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe4414d310 <col:133> 'float' lvalue ParmVar 0x7ffe4414d0f0 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7ffe4414d238 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe4414d280 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe4414d580 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:784:1, col:143> col:46 atan2 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7ffe4414d468 <col:52, col:64> col:64 used __lcpp_y 'long double'
| | |-ParmVarDecl 0x7ffe4414d4e0 <col:74, col:86> col:86 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7ffe4414d7f0 <col:106, col:143>
| | | `-ReturnStmt 0x7ffe4414d7d8 <col:107, col:141>
| | |   `-CallExpr 0x7ffe4414d770 <col:114, col:141> 'long double'
| | |     |-ImplicitCastExpr 0x7ffe4414d758 <col:114, col:116> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe4414d6a0 <col:114, col:116> 'long double (long double, long double)' lvalue Function 0x7ffe4390aa48 'atan2l' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7ffe4414d7a8 <col:123> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7ffe4414d6d8 <col:123> 'long double' lvalue ParmVar 0x7ffe4414d468 '__lcpp_y' 'long double'
| | |     `-ImplicitCastExpr 0x7ffe4414d7c0 <col:133> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe4414d700 <col:133> 'long double' lvalue ParmVar 0x7ffe4414d4e0 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7ffe4414d628 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe4414d670 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7ffe4414e150 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:787:1, line:801:1> line:795:1 atan2
| | |-TemplateTypeParmDecl 0x7ffe4414d810 <line:787:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7ffe4414d878 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7ffe4414e0b8 <line:788:1, line:801:1> line:795:1 atan2 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7ffe4414df20 <col:7, col:11> col:11 referenced __lcpp_y '_A1'
| |   |-ParmVarDecl 0x7ffe4414df90 <col:21, col:25> col:25 referenced __lcpp_x '_A2'
| |   |-CompoundStmt 0x7ffe4414fa58 <line:796:1, line:801:1>
| |   | |-DeclStmt 0x7ffe4414f3c8 <line:797:5, col:66>
| |   | | `-TypedefDecl 0x7ffe4414f370 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7ffe4414f300 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7ffe4414f8a0 <line:798:5, line:799:68>
| |   | | `-StaticAssertDecl 0x7ffe4414f868 <line:798:5, line:799:67> line:798:5
| |   | |   |-ParenExpr 0x7ffe4414f820 <col:19, line:799:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7ffe4414f800 <line:798:20, line:799:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7ffe4414f7e0 <line:798:21, line:799:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7ffe4414f7b8 <line:798:22, line:799:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7ffe4414f5b8 <line:798:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7ffe4414f778 <line:799:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7ffe4414f840 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7ffe4414fa40 <line:800:5, col:68>
| |   |   `-CallExpr 0x7ffe4414fa08 <col:12, col:68> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7ffe4414f8d8 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'atan2' 0x7ffe4390a798 0x7ffe4414d190 0x7ffe4414d580 0x7ffe4414e150
| |   |     |-CStyleCastExpr 0x7ffe4414f980 <col:20, col:35> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7ffe4414f948 <col:35> '_A1' lvalue ParmVar 0x7ffe4414df20 '__lcpp_y' '_A1'
| |   |     `-CStyleCastExpr 0x7ffe4414f9e0 <col:45, col:60> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7ffe4414f9a8 <col:60> '_A2' lvalue ParmVar 0x7ffe4414df90 '__lcpp_x' '_A2'
| |   |-AlwaysInlineAttr 0x7ffe4414e1b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7ffe4414f200 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe4414fb68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:806:1, col:109> col:46 ceil 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7ffe4414fad0 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7ffe4414fd58 <col:83, col:109>
| | | `-ReturnStmt 0x7ffe4414fd40 <col:84, col:107>
| | |   `-CallExpr 0x7ffe4414fcf8 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7ffe4414fce0 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe4414fc80 <col:91, col:93> 'float (float)' lvalue Function 0x7ffe4391a4a8 'ceilf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7ffe4414fd28 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe4414fcb8 <col:99> 'float' lvalue ParmVar 0x7ffe4414fad0 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7ffe4414fc08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe4414fc50 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe4414fe58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:807:1, col:109> col:46 ceil 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7ffe4414fdc0 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7ffe44150048 <col:83, col:109>
| | | `-ReturnStmt 0x7ffe44150030 <col:84, col:107>
| | |   `-CallExpr 0x7ffe4414ffe8 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7ffe4414ffd0 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe4414ff70 <col:91, col:93> 'long double (long double)' lvalue Function 0x7ffe4391a7e8 'ceill' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7ffe44150018 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe4414ffa8 <col:99> 'long double' lvalue ParmVar 0x7ffe4414fdc0 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7ffe4414fef8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe4414ff40 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7ffe44150510 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:810:1, line:813:63> col:1 ceil
| | |-TemplateTypeParmDecl 0x7ffe44150068 <line:810:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7ffe44150478 <line:811:1, line:813:63> col:1 ceil 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7ffe441503a0 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7ffe44150a30 <col:30, col:63>
| |   | `-ReturnStmt 0x7ffe44150a18 <col:31, col:61>
| |   |   `-CallExpr 0x7ffe441509e8 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7ffe441509d0 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7ffe44150998 <col:38, col:40> 'double (double)' lvalue Function 0x7ffe4391a648 'ceil' 'double (double)'
| |   |     `-CStyleCastExpr 0x7ffe44150690 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7ffe44150650 <col:53> '_A1' lvalue ParmVar 0x7ffe441503a0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7ffe44150568 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7ffe441505b0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe44150b30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:818:1, col:107> col:46 cos 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7ffe44150a98 <col:50, col:56> col:56 used __lcpp_x 'float'
| | |-CompoundStmt 0x7ffe44150d20 <col:82, col:107>
| | | `-ReturnStmt 0x7ffe44150d08 <col:83, col:105>
| | |   `-CallExpr 0x7ffe44150cc0 <col:90, col:105> 'float'
| | |     |-ImplicitCastExpr 0x7ffe44150ca8 <col:90, col:92> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe44150c48 <col:90, col:92> 'float (float)' lvalue Function 0x7ffe4390b430 'cosf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7ffe44150cf0 <col:97> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe44150c80 <col:97> 'float' lvalue ParmVar 0x7ffe44150a98 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7ffe44150bd0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe44150c18 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe44150e20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:819:1, col:107> col:46 cos 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7ffe44150d88 <col:50, col:62> col:62 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7ffe44151010 <col:82, col:107>
| | | `-ReturnStmt 0x7ffe44150ff8 <col:83, col:105>
| | |   `-CallExpr 0x7ffe44150fb0 <col:90, col:105> 'long double'
| | |     |-ImplicitCastExpr 0x7ffe44150f98 <col:90, col:92> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe44150f38 <col:90, col:92> 'long double (long double)' lvalue Function 0x7ffe4390b770 'cosl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7ffe44150fe0 <col:97> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe44150f70 <col:97> 'long double' lvalue ParmVar 0x7ffe44150d88 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7ffe44150ec0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe44150f08 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7ffe44151500 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:822:1, line:825:61> col:1 cos
| | |-TemplateTypeParmDecl 0x7ffe44151030 <line:822:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7ffe44151468 <line:823:1, line:825:61> col:1 cos 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7ffe44151390 <col:5, col:9> col:9 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7ffe44151a20 <col:29, col:61>
| |   | `-ReturnStmt 0x7ffe44151a08 <col:30, col:59>
| |   |   `-CallExpr 0x7ffe441519d8 <col:37, col:59> 'double'
| |   |     |-ImplicitCastExpr 0x7ffe441519c0 <col:37, col:39> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7ffe44151988 <col:37, col:39> 'double (double)' lvalue Function 0x7ffe4390b5d0 'cos' 'double (double)'
| |   |     `-CStyleCastExpr 0x7ffe44151680 <col:43, col:51> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7ffe44151640 <col:51> '_A1' lvalue ParmVar 0x7ffe44151390 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7ffe44151558 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7ffe441515a0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe44151b20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:830:1, col:109> col:46 cosh 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7ffe44151a88 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7ffe44151d10 <col:83, col:109>
| | | `-ReturnStmt 0x7ffe44151cf8 <col:84, col:107>
| | |   `-CallExpr 0x7ffe44151cb0 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7ffe44151c98 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe44151c38 <col:91, col:93> 'float (float)' lvalue Function 0x7ffe4390d990 'coshf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7ffe44151ce0 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe44151c70 <col:99> 'float' lvalue ParmVar 0x7ffe44151a88 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7ffe44151bc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe44151c08 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe44151e10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:831:1, col:109> col:46 cosh 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7ffe44151d78 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7ffe44152000 <col:83, col:109>
| | | `-ReturnStmt 0x7ffe44151fe8 <col:84, col:107>
| | |   `-CallExpr 0x7ffe44151fa0 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7ffe44151f88 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe44151f28 <col:91, col:93> 'long double (long double)' lvalue Function 0x7ffe4390e4f0 'coshl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7ffe44151fd0 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe44151f60 <col:99> 'long double' lvalue ParmVar 0x7ffe44151d78 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7ffe44151eb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe44151ef8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7ffe441524c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:834:1, line:837:63> col:1 cosh
| | |-TemplateTypeParmDecl 0x7ffe44152020 <line:834:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7ffe44152428 <line:835:1, line:837:63> col:1 cosh 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7ffe44152350 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7ffe441529e0 <col:30, col:63>
| |   | `-ReturnStmt 0x7ffe441529c8 <col:31, col:61>
| |   |   `-CallExpr 0x7ffe44152998 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7ffe44152980 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7ffe44152948 <col:38, col:40> 'double (double)' lvalue Function 0x7ffe4390db30 'cosh' 'double (double)'
| |   |     `-CStyleCastExpr 0x7ffe44152640 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7ffe44152600 <col:53> '_A1' lvalue ParmVar 0x7ffe44152350 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7ffe44152518 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7ffe44152560 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe44152ae0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:842:1, col:107> col:46 exp 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7ffe44152a48 <col:50, col:56> col:56 used __lcpp_x 'float'
| | |-CompoundStmt 0x7ffe44152cd0 <col:82, col:107>
| | | `-ReturnStmt 0x7ffe44152cb8 <col:83, col:105>
| | |   `-CallExpr 0x7ffe44152c70 <col:90, col:105> 'float'
| | |     |-ImplicitCastExpr 0x7ffe44152c58 <col:90, col:92> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe44152bf8 <col:90, col:92> 'float (float)' lvalue Function 0x7ffe4390f050 'expf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7ffe44152ca0 <col:97> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe44152c30 <col:97> 'float' lvalue ParmVar 0x7ffe44152a48 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7ffe44152b80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe44152bc8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe44152dd0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:843:1, col:107> col:46 exp 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7ffe44152d38 <col:50, col:62> col:62 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7ffe44152fc0 <col:82, col:107>
| | | `-ReturnStmt 0x7ffe44152fa8 <col:83, col:105>
| | |   `-CallExpr 0x7ffe44152f60 <col:90, col:105> 'long double'
| | |     |-ImplicitCastExpr 0x7ffe44152f48 <col:90, col:92> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe44152ee8 <col:90, col:92> 'long double (long double)' lvalue Function 0x7ffe4390f400 'expl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7ffe44152f90 <col:97> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe44152f20 <col:97> 'long double' lvalue ParmVar 0x7ffe44152d38 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7ffe44152e70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe44152eb8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7ffe441534a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:846:1, line:849:61> col:1 exp
| | |-TemplateTypeParmDecl 0x7ffe44152fe0 <line:846:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7ffe44153408 <line:847:1, line:849:61> col:1 exp 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7ffe44153330 <col:5, col:9> col:9 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7ffe441539c0 <col:29, col:61>
| |   | `-ReturnStmt 0x7ffe441539a8 <col:30, col:59>
| |   |   `-CallExpr 0x7ffe44153978 <col:37, col:59> 'double'
| |   |     |-ImplicitCastExpr 0x7ffe44153960 <col:37, col:39> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7ffe44153928 <col:37, col:39> 'double (double)' lvalue Function 0x7ffe4390f1f0 'exp' 'double (double)'
| |   |     `-CStyleCastExpr 0x7ffe44153620 <col:43, col:51> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7ffe441535e0 <col:51> '_A1' lvalue ParmVar 0x7ffe44153330 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7ffe441534f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7ffe44153540 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe44153ac0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:854:1, col:109> col:46 fabs 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7ffe44153a28 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7ffe44153cb0 <col:83, col:109>
| | | `-ReturnStmt 0x7ffe44153c98 <col:84, col:107>
| | |   `-CallExpr 0x7ffe44153c50 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7ffe44153c38 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe44153bd8 <col:91, col:93> 'float (float)' lvalue Function 0x7ffe439174f0 'fabsf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7ffe44153c80 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe44153c10 <col:99> 'float' lvalue ParmVar 0x7ffe44153a28 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7ffe44153b60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe44153ba8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe44153db0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:855:1, col:109> col:46 fabs 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7ffe44153d18 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7ffe44153fa0 <col:83, col:109>
| | | `-ReturnStmt 0x7ffe44153f88 <col:84, col:107>
| | |   `-CallExpr 0x7ffe44153f40 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7ffe44153f28 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe44153ec8 <col:91, col:93> 'long double (long double)' lvalue Function 0x7ffe43917830 'fabsl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7ffe44153f70 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe44153f00 <col:99> 'long double' lvalue ParmVar 0x7ffe44153d18 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7ffe44153e50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe44153e98 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7ffe44154460 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:858:1, line:861:63> col:1 fabs
| | |-TemplateTypeParmDecl 0x7ffe44153fc0 <line:858:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7ffe441543c8 <line:859:1, line:861:63> col:1 fabs 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7ffe441542f0 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7ffe44154980 <col:30, col:63>
| |   | `-ReturnStmt 0x7ffe44154968 <col:31, col:61>
| |   |   `-CallExpr 0x7ffe44154938 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7ffe44154920 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7ffe441548e8 <col:38, col:40> 'double (double)' lvalue Function 0x7ffe43917690 'fabs' 'double (double)'
| |   |     `-CStyleCastExpr 0x7ffe441545e0 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7ffe441545a0 <col:53> '_A1' lvalue ParmVar 0x7ffe441542f0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7ffe441544b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7ffe44154500 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe44154a80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:866:1, col:111> col:46 floor 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7ffe441549e8 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7ffe44154c70 <col:84, col:111>
| | | `-ReturnStmt 0x7ffe44154c58 <col:85, col:109>
| | |   `-CallExpr 0x7ffe44154c10 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7ffe44154bf8 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe44154b98 <col:92, col:94> 'float (float)' lvalue Function 0x7ffe4391a988 'floorf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7ffe44154c40 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe44154bd0 <col:101> 'float' lvalue ParmVar 0x7ffe441549e8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7ffe44154b20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe44154b68 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe44154d70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:867:1, col:111> col:46 floor 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7ffe44154cd8 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7ffe44154f60 <col:84, col:111>
| | | `-ReturnStmt 0x7ffe44154f48 <col:85, col:109>
| | |   `-CallExpr 0x7ffe44154f00 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7ffe44154ee8 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe44154e88 <col:92, col:94> 'long double (long double)' lvalue Function 0x7ffe4391acc8 'floorl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7ffe44154f30 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe44154ec0 <col:101> 'long double' lvalue ParmVar 0x7ffe44154cd8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7ffe44154e10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe44154e58 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7ffe44155440 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:870:1, line:873:65> col:1 floor
| | |-TemplateTypeParmDecl 0x7ffe44154f80 <line:870:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7ffe441553a8 <line:871:1, line:873:65> col:1 floor 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7ffe441552d0 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7ffe44155960 <col:31, col:65>
| |   | `-ReturnStmt 0x7ffe44155948 <col:32, col:63>
| |   |   `-CallExpr 0x7ffe44155918 <col:39, col:63> 'double'
| |   |     |-ImplicitCastExpr 0x7ffe44155900 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7ffe441558c8 <col:39, col:41> 'double (double)' lvalue Function 0x7ffe4391ab28 'floor' 'double (double)'
| |   |     `-CStyleCastExpr 0x7ffe441555c0 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7ffe44155580 <col:55> '_A1' lvalue ParmVar 0x7ffe441552d0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7ffe44155498 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7ffe441554e0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe44155ae0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:878:1, col:141> col:46 fmod 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7ffe441559c8 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7ffe44155a40 <col:67, col:73> col:73 used __lcpp_y 'float'
| | |-CompoundStmt 0x7ffe44155d20 <col:105, col:141>
| | | `-ReturnStmt 0x7ffe44155d08 <col:106, col:139>
| | |   `-CallExpr 0x7ffe44155ca0 <col:113, col:139> 'float'
| | |     |-ImplicitCastExpr 0x7ffe44155c88 <col:113, col:115> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe44155c00 <col:113, col:115> 'float (float, float)' lvalue Function 0x7ffe4391d960 'fmodf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7ffe44155cd8 <col:121> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7ffe44155c38 <col:121> 'float' lvalue ParmVar 0x7ffe441559c8 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7ffe44155cf0 <col:131> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe44155c60 <col:131> 'float' lvalue ParmVar 0x7ffe44155a40 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7ffe44155b88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe44155bd0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe44155ea0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:879:1, col:141> col:46 fmod 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7ffe44155d88 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7ffe44155e00 <col:73, col:85> col:85 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7ffe441560e0 <col:105, col:141>
| | | `-ReturnStmt 0x7ffe441560c8 <col:106, col:139>
| | |   `-CallExpr 0x7ffe44156060 <col:113, col:139> 'long double'
| | |     |-ImplicitCastExpr 0x7ffe44156048 <col:113, col:115> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe44155fc0 <col:113, col:115> 'long double (long double, long double)' lvalue Function 0x7ffe4391ddb0 'fmodl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7ffe44156098 <col:121> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7ffe44155ff8 <col:121> 'long double' lvalue ParmVar 0x7ffe44155d88 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7ffe441560b0 <col:131> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe44156020 <col:131> 'long double' lvalue ParmVar 0x7ffe44155e00 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7ffe44155f48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe44155f90 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7ffe44156940 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:882:1, line:896:1> line:890:1 fmod
| | |-TemplateTypeParmDecl 0x7ffe44156100 <line:882:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7ffe44156168 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7ffe441568a8 <line:883:1, line:896:1> line:890:1 fmod 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7ffe44156750 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7ffe441567c0 <col:20, col:24> col:24 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7ffe44157168 <line:891:1, line:896:1>
| |   | |-DeclStmt 0x7ffe44156bb8 <line:892:5, col:66>
| |   | | `-TypedefDecl 0x7ffe44156b60 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7ffe44156af0 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7ffe44156fb0 <line:893:5, line:894:68>
| |   | | `-StaticAssertDecl 0x7ffe44156f78 <line:893:5, line:894:67> line:893:5
| |   | |   |-ParenExpr 0x7ffe44156f30 <col:19, line:894:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7ffe44156f10 <line:893:20, line:894:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7ffe44156ef0 <line:893:21, line:894:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7ffe44156ec8 <line:893:22, line:894:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7ffe44156d28 <line:893:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7ffe44156e88 <line:894:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7ffe44156f50 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7ffe44157150 <line:895:5, col:67>
| |   |   `-CallExpr 0x7ffe44157118 <col:12, col:67> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7ffe44156fe8 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'fmod' 0x7ffe4391db88 0x7ffe44155ae0 0x7ffe44155ea0 0x7ffe44156940
| |   |     |-CStyleCastExpr 0x7ffe44157090 <col:19, col:34> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7ffe44157058 <col:34> '_A1' lvalue ParmVar 0x7ffe44156750 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7ffe441570f0 <col:44, col:59> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7ffe441570b8 <col:59> '_A2' lvalue ParmVar 0x7ffe441567c0 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7ffe441569a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7ffe441569e8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe44157318 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:901:1, col:136> col:46 frexp 'float (float, int *) noexcept' inline
| | |-ParmVarDecl 0x7ffe44157200 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7ffe44157278 <col:68, col:73> col:73 used __lcpp_e 'int *'
| | |-CompoundStmt 0x7ffe441575b0 <col:99, col:136>
| | | `-ReturnStmt 0x7ffe44157598 <col:100, col:134>
| | |   `-CallExpr 0x7ffe44157530 <col:107, col:134> 'float'
| | |     |-ImplicitCastExpr 0x7ffe44157518 <col:107, col:109> 'float (*)(float, int *)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe44157438 <col:107, col:109> 'float (float, int *)' lvalue Function 0x7ffe43914988 'frexpf' 'float (float, int *)'
| | |     |-ImplicitCastExpr 0x7ffe44157568 <col:116> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7ffe44157470 <col:116> 'float' lvalue ParmVar 0x7ffe44157200 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7ffe44157580 <col:126> 'int *' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe44157498 <col:126> 'int *' lvalue ParmVar 0x7ffe44157278 '__lcpp_e' 'int *'
| | |-AlwaysInlineAttr 0x7ffe441573c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe44157408 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe44157730 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:902:1, col:136> col:46 frexp 'long double (long double, int *) noexcept' inline
| | |-ParmVarDecl 0x7ffe44157618 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7ffe44157690 <col:74, col:79> col:79 used __lcpp_e 'int *'
| | |-CompoundStmt 0x7ffe441579d0 <col:99, col:136>
| | | `-ReturnStmt 0x7ffe441579b8 <col:100, col:134>
| | |   `-CallExpr 0x7ffe44157950 <col:107, col:134> 'long double'
| | |     |-ImplicitCastExpr 0x7ffe44157938 <col:107, col:109> 'long double (*)(long double, int *)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe44157850 <col:107, col:109> 'long double (long double, int *)' lvalue Function 0x7ffe43914ec8 'frexpl' 'long double (long double, int *)'
| | |     |-ImplicitCastExpr 0x7ffe44157988 <col:116> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7ffe44157888 <col:116> 'long double' lvalue ParmVar 0x7ffe44157618 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7ffe441579a0 <col:126> 'int *' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe441578b0 <col:126> 'int *' lvalue ParmVar 0x7ffe44157690 '__lcpp_e' 'int *'
| | |-AlwaysInlineAttr 0x7ffe441577d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe44157820 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7ffe44157f60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:905:1, line:908:90> col:1 frexp
| | |-TemplateTypeParmDecl 0x7ffe441579f0 <line:905:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7ffe44157ec8 <line:906:1, line:908:90> col:1 frexp 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1, int *) noexcept' inline
| |   |-ParmVarDecl 0x7ffe44157d20 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7ffe44157d98 <col:21, col:26> col:26 referenced __lcpp_e 'int *'
| |   |-CompoundStmt 0x7ffe441584f8 <col:46, col:90>
| |   | `-ReturnStmt 0x7ffe441584e0 <col:47, col:88>
| |   |   `-CallExpr 0x7ffe44158490 <col:54, col:88> 'double'
| |   |     |-ImplicitCastExpr 0x7ffe44158478 <col:54, col:56> 'double (*)(double, int *)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7ffe44158418 <col:54, col:56> 'double (double, int *)' lvalue Function 0x7ffe43914c28 'frexp' 'double (double, int *)'
| |   |     |-CStyleCastExpr 0x7ffe441580e8 <col:62, col:70> 'double' <Dependent>
| |   |     | `-DeclRefExpr 0x7ffe441580a8 <col:70> '_A1' lvalue ParmVar 0x7ffe44157d20 '__lcpp_x' '_A1'
| |   |     `-ImplicitCastExpr 0x7ffe441584c8 <col:80> 'int *' <LValueToRValue>
| |   |       `-DeclRefExpr 0x7ffe44158110 <col:80> 'int *' lvalue ParmVar 0x7ffe44157d98 '__lcpp_e' 'int *'
| |   |-AlwaysInlineAttr 0x7ffe44157fc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7ffe44158008 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe44158678 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:913:1, col:135> col:46 ldexp 'float (float, int) noexcept' inline
| | |-ParmVarDecl 0x7ffe44158560 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7ffe441585d8 <col:68, col:72> col:72 used __lcpp_e 'int'
| | |-CompoundStmt 0x7ffe441588e0 <col:98, col:135>
| | | `-ReturnStmt 0x7ffe441588c8 <col:99, col:133>
| | |   `-CallExpr 0x7ffe44158860 <col:106, col:133> 'float'
| | |     |-ImplicitCastExpr 0x7ffe44158848 <col:106, col:108> 'float (*)(float, int)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe44158798 <col:106, col:108> 'float (float, int)' lvalue Function 0x7ffe43913138 'ldexpf' 'float (float, int)'
| | |     |-ImplicitCastExpr 0x7ffe44158898 <col:115> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7ffe441587d0 <col:115> 'float' lvalue ParmVar 0x7ffe44158560 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7ffe441588b0 <col:125> 'int' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe441587f8 <col:125> 'int' lvalue ParmVar 0x7ffe441585d8 '__lcpp_e' 'int'
| | |-AlwaysInlineAttr 0x7ffe44158720 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe44158768 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe44158a60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:914:1, col:135> col:46 ldexp 'long double (long double, int) noexcept' inline
| | |-ParmVarDecl 0x7ffe44158948 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7ffe441589c0 <col:74, col:78> col:78 used __lcpp_e 'int'
| | |-CompoundStmt 0x7ffe44158cd0 <col:98, col:135>
| | | `-ReturnStmt 0x7ffe44158cb8 <col:99, col:133>
| | |   `-CallExpr 0x7ffe44158c50 <col:106, col:133> 'long double'
| | |     |-ImplicitCastExpr 0x7ffe44158c38 <col:106, col:108> 'long double (*)(long double, int)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe44158b80 <col:106, col:108> 'long double (long double, int)' lvalue Function 0x7ffe439146b8 'ldexpl' 'long double (long double, int)'
| | |     |-ImplicitCastExpr 0x7ffe44158c88 <col:115> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7ffe44158bb8 <col:115> 'long double' lvalue ParmVar 0x7ffe44158948 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7ffe44158ca0 <col:125> 'int' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe44158be0 <col:125> 'int' lvalue ParmVar 0x7ffe441589c0 '__lcpp_e' 'int'
| | |-AlwaysInlineAttr 0x7ffe44158b08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe44158b50 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7ffe44159298 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:917:1, line:920:89> col:1 ldexp
| | |-TemplateTypeParmDecl 0x7ffe44158cf0 <line:917:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7ffe44159200 <line:918:1, line:920:89> col:1 ldexp 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1, int) noexcept' inline
| |   |-ParmVarDecl 0x7ffe44159020 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7ffe44159098 <col:21, col:25> col:25 referenced __lcpp_e 'int'
| |   |-CompoundStmt 0x7ffe44159838 <col:45, col:89>
| |   | `-ReturnStmt 0x7ffe44159820 <col:46, col:87>
| |   |   `-CallExpr 0x7ffe441597d0 <col:53, col:87> 'double'
| |   |     |-ImplicitCastExpr 0x7ffe441597b8 <col:53, col:55> 'double (*)(double, int)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7ffe44159758 <col:53, col:55> 'double (double, int)' lvalue Function 0x7ffe43914400 'ldexp' 'double (double, int)'
| |   |     |-CStyleCastExpr 0x7ffe44159420 <col:61, col:69> 'double' <Dependent>
| |   |     | `-DeclRefExpr 0x7ffe441593e0 <col:69> '_A1' lvalue ParmVar 0x7ffe44159020 '__lcpp_x' '_A1'
| |   |     `-ImplicitCastExpr 0x7ffe44159808 <col:79> 'int' <LValueToRValue>
| |   |       `-DeclRefExpr 0x7ffe44159448 <col:79> 'int' lvalue ParmVar 0x7ffe44159098 '__lcpp_e' 'int'
| |   |-AlwaysInlineAttr 0x7ffe441592f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7ffe44159340 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe44159938 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:925:1, col:107> col:46 log 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7ffe441598a0 <col:50, col:56> col:56 used __lcpp_x 'float'
| | |-CompoundStmt 0x7ffe44159b28 <col:82, col:107>
| | | `-ReturnStmt 0x7ffe44159b10 <col:83, col:105>
| | |   `-CallExpr 0x7ffe44159ac8 <col:90, col:105> 'float'
| | |     |-ImplicitCastExpr 0x7ffe44159ab0 <col:90, col:92> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe44159a50 <col:90, col:92> 'float (float)' lvalue Function 0x7ffe4390ff60 'logf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7ffe44159af8 <col:97> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe44159a88 <col:97> 'float' lvalue ParmVar 0x7ffe441598a0 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7ffe441599d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe44159a20 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe44159c28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:926:1, col:107> col:46 log 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7ffe44159b90 <col:50, col:62> col:62 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7ffe44159e18 <col:82, col:107>
| | | `-ReturnStmt 0x7ffe44159e00 <col:83, col:105>
| | |   `-CallExpr 0x7ffe44159db8 <col:90, col:105> 'long double'
| | |     |-ImplicitCastExpr 0x7ffe44159da0 <col:90, col:92> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe44159d40 <col:90, col:92> 'long double (long double)' lvalue Function 0x7ffe439102a0 'logl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7ffe44159de8 <col:97> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe44159d78 <col:97> 'long double' lvalue ParmVar 0x7ffe44159b90 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7ffe44159cc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe44159d10 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7ffe4415a2e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:929:1, line:932:61> col:1 log
| | |-TemplateTypeParmDecl 0x7ffe44159e38 <line:929:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7ffe4415a248 <line:930:1, line:932:61> col:1 log 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7ffe4415a170 <col:5, col:9> col:9 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7ffe4415a800 <col:29, col:61>
| |   | `-ReturnStmt 0x7ffe4415a7e8 <col:30, col:59>
| |   |   `-CallExpr 0x7ffe4415a7b8 <col:37, col:59> 'double'
| |   |     |-ImplicitCastExpr 0x7ffe4415a7a0 <col:37, col:39> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7ffe4415a768 <col:37, col:39> 'double (double)' lvalue Function 0x7ffe43910100 'log' 'double (double)'
| |   |     `-CStyleCastExpr 0x7ffe4415a460 <col:43, col:51> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7ffe4415a420 <col:51> '_A1' lvalue ParmVar 0x7ffe4415a170 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7ffe4415a338 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7ffe4415a380 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe4415a900 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:937:1, col:111> col:46 log10 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7ffe4415a868 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7ffe4415aaf0 <col:84, col:111>
| | | `-ReturnStmt 0x7ffe4415aad8 <col:85, col:109>
| | |   `-CallExpr 0x7ffe4415aa90 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7ffe4415aa78 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe4415aa18 <col:92, col:94> 'float (float)' lvalue Function 0x7ffe43910490 'log10f' 'float (float)'
| | |     `-ImplicitCastExpr 0x7ffe4415aac0 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe4415aa50 <col:101> 'float' lvalue ParmVar 0x7ffe4415a868 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7ffe4415a9a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe4415a9e8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe4415abf0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:938:1, col:111> col:46 log10 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7ffe4415ab58 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7ffe4415ade0 <col:84, col:111>
| | | `-ReturnStmt 0x7ffe4415adc8 <col:85, col:109>
| | |   `-CallExpr 0x7ffe4415ad80 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7ffe4415ad68 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe4415ad08 <col:92, col:94> 'long double (long double)' lvalue Function 0x7ffe439107d0 'log10l' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7ffe4415adb0 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe4415ad40 <col:101> 'long double' lvalue ParmVar 0x7ffe4415ab58 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7ffe4415ac90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe4415acd8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7ffe4415b2d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:941:1, line:944:65> col:1 log10
| | |-TemplateTypeParmDecl 0x7ffe4415ae00 <line:941:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7ffe4415b240 <line:942:1, line:944:65> col:1 log10 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7ffe4415b130 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7ffe4415b800 <col:31, col:65>
| |   | `-ReturnStmt 0x7ffe4415b7e8 <col:32, col:63>
| |   |   `-CallExpr 0x7ffe4415b7b8 <col:39, col:63> 'double'
| |   |     |-ImplicitCastExpr 0x7ffe4415b7a0 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7ffe4415b768 <col:39, col:41> 'double (double)' lvalue Function 0x7ffe43910630 'log10' 'double (double)'
| |   |     `-CStyleCastExpr 0x7ffe4415b458 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7ffe4415b418 <col:55> '_A1' lvalue ParmVar 0x7ffe4415b130 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7ffe4415b330 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7ffe4415b378 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe4415b980 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:949:1, col:142> col:46 modf 'float (float, float *) noexcept' inline
| | |-ParmVarDecl 0x7ffe4415b868 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7ffe4415b8e0 <col:67, col:74> col:74 used __lcpp_y 'float *'
| | |-CompoundStmt 0x7ffe4415bc20 <col:106, col:142>
| | | `-ReturnStmt 0x7ffe4415bc08 <col:107, col:140>
| | |   `-CallExpr 0x7ffe4415bba0 <col:114, col:140> 'float'
| | |     |-ImplicitCastExpr 0x7ffe4415bb88 <col:114, col:116> 'float (*)(float, float *)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe4415baa0 <col:114, col:116> 'float (float, float *)' lvalue Function 0x7ffe43912918 'modff' 'float (float, float *)'
| | |     |-ImplicitCastExpr 0x7ffe4415bbd8 <col:122> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7ffe4415bad8 <col:122> 'float' lvalue ParmVar 0x7ffe4415b868 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7ffe4415bbf0 <col:132> 'float *' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe4415bb00 <col:132> 'float *' lvalue ParmVar 0x7ffe4415b8e0 '__lcpp_y' 'float *'
| | |-AlwaysInlineAttr 0x7ffe4415ba28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe4415ba70 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe4415bda0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:950:1, col:142> col:46 modf 'long double (long double, long double *) noexcept' inline
| | |-ParmVarDecl 0x7ffe4415bc88 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7ffe4415bd00 <col:73, col:86> col:86 used __lcpp_y 'long double *'
| | |-CompoundStmt 0x7ffe4415c040 <col:106, col:142>
| | | `-ReturnStmt 0x7ffe4415c028 <col:107, col:140>
| | |   `-CallExpr 0x7ffe4415bfc0 <col:114, col:140> 'long double'
| | |     |-ImplicitCastExpr 0x7ffe4415bfa8 <col:114, col:116> 'long double (*)(long double, long double *)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe4415bec0 <col:114, col:116> 'long double (long double, long double *)' lvalue Function 0x7ffe43912e98 'modfl' 'long double (long double, long double *)'
| | |     |-ImplicitCastExpr 0x7ffe4415bff8 <col:122> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7ffe4415bef8 <col:122> 'long double' lvalue ParmVar 0x7ffe4415bc88 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7ffe4415c010 <col:132> 'long double *' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe4415bf20 <col:132> 'long double *' lvalue ParmVar 0x7ffe4415bd00 '__lcpp_y' 'long double *'
| | |-AlwaysInlineAttr 0x7ffe4415be48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe4415be90 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe4415c1c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:956:1, col:139> col:46 pow 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7ffe4415c0a8 <col:50, col:56> col:56 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7ffe4415c120 <col:66, col:72> col:72 used __lcpp_y 'float'
| | |-CompoundStmt 0x7ffe4415c400 <col:104, col:139>
| | | `-ReturnStmt 0x7ffe4415c3e8 <col:105, col:137>
| | |   `-CallExpr 0x7ffe4415c380 <col:112, col:137> 'float'
| | |     |-ImplicitCastExpr 0x7ffe4415c368 <col:112, col:114> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe4415c2e0 <col:112, col:114> 'float (float, float)' lvalue Function 0x7ffe43918628 'powf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7ffe4415c3b8 <col:119> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7ffe4415c318 <col:119> 'float' lvalue ParmVar 0x7ffe4415c0a8 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7ffe4415c3d0 <col:129> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe4415c340 <col:129> 'float' lvalue ParmVar 0x7ffe4415c120 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7ffe4415c268 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe4415c2b0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe4415c580 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:957:1, col:139> col:46 pow 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7ffe4415c468 <col:50, col:62> col:62 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7ffe4415c4e0 <col:72, col:84> col:84 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7ffe4415c7c0 <col:104, col:139>
| | | `-ReturnStmt 0x7ffe4415c7a8 <col:105, col:137>
| | |   `-CallExpr 0x7ffe4415c740 <col:112, col:137> 'long double'
| | |     |-ImplicitCastExpr 0x7ffe4415c728 <col:112, col:114> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe4415c6a0 <col:112, col:114> 'long double (long double, long double)' lvalue Function 0x7ffe43918a78 'powl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7ffe4415c778 <col:119> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7ffe4415c6d8 <col:119> 'long double' lvalue ParmVar 0x7ffe4415c468 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7ffe4415c790 <col:129> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe4415c700 <col:129> 'long double' lvalue ParmVar 0x7ffe4415c4e0 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7ffe4415c628 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe4415c670 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7ffe4415d020 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:960:1, line:974:1> line:968:1 pow
| | |-TemplateTypeParmDecl 0x7ffe4415c7e0 <line:960:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7ffe4415c848 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7ffe4415cf88 <line:961:1, line:974:1> line:968:1 pow 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7ffe4415ce30 <col:5, col:9> col:9 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7ffe4415cea0 <col:19, col:23> col:23 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7ffe4415d848 <line:969:1, line:974:1>
| |   | |-DeclStmt 0x7ffe4415d298 <line:970:5, col:66>
| |   | | `-TypedefDecl 0x7ffe4415d240 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7ffe4415d1d0 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7ffe4415d690 <line:971:5, line:972:68>
| |   | | `-StaticAssertDecl 0x7ffe4415d658 <line:971:5, line:972:67> line:971:5
| |   | |   |-ParenExpr 0x7ffe4415d610 <col:19, line:972:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7ffe4415d5f0 <line:971:20, line:972:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7ffe4415d5d0 <line:971:21, line:972:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7ffe4415d5a8 <line:971:22, line:972:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7ffe4415d408 <line:971:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7ffe4415d568 <line:972:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7ffe4415d630 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7ffe4415d830 <line:973:5, col:66>
| |   |   `-CallExpr 0x7ffe4415d7f8 <col:12, col:66> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7ffe4415d6c8 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'pow' 0x7ffe43918850 0x7ffe4415c1c0 0x7ffe4415c580 0x7ffe4415d020
| |   |     |-CStyleCastExpr 0x7ffe4415d770 <col:18, col:33> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7ffe4415d738 <col:33> '_A1' lvalue ParmVar 0x7ffe4415ce30 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7ffe4415d7d0 <col:43, col:58> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7ffe4415d798 <col:58> '_A2' lvalue ParmVar 0x7ffe4415cea0 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7ffe4415d080 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7ffe4415d0c8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe4415d958 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:979:1, col:107> col:46 sin 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7ffe4415d8c0 <col:50, col:56> col:56 used __lcpp_x 'float'
| | |-CompoundStmt 0x7ffe4415db48 <col:82, col:107>
| | | `-ReturnStmt 0x7ffe4415db30 <col:83, col:105>
| | |   `-CallExpr 0x7ffe4415dae8 <col:90, col:105> 'float'
| | |     |-ImplicitCastExpr 0x7ffe4415dad0 <col:90, col:92> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe4415da70 <col:90, col:92> 'float (float)' lvalue Function 0x7ffe4390b910 'sinf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7ffe4415db18 <col:97> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe4415daa8 <col:97> 'float' lvalue ParmVar 0x7ffe4415d8c0 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7ffe4415d9f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe4415da40 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe4415dc48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:980:1, col:107> col:46 sin 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7ffe4415dbb0 <col:50, col:62> col:62 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7ffe4415de38 <col:82, col:107>
| | | `-ReturnStmt 0x7ffe4415de20 <col:83, col:105>
| | |   `-CallExpr 0x7ffe4415ddd8 <col:90, col:105> 'long double'
| | |     |-ImplicitCastExpr 0x7ffe4415ddc0 <col:90, col:92> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe4415dd60 <col:90, col:92> 'long double (long double)' lvalue Function 0x7ffe4390bc50 'sinl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7ffe4415de08 <col:97> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe4415dd98 <col:97> 'long double' lvalue ParmVar 0x7ffe4415dbb0 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7ffe4415dce8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe4415dd30 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7ffe4415e300 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:983:1, line:986:61> col:1 sin
| | |-TemplateTypeParmDecl 0x7ffe4415de58 <line:983:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7ffe4415e268 <line:984:1, line:986:61> col:1 sin 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7ffe4415e190 <col:5, col:9> col:9 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7ffe4415e820 <col:29, col:61>
| |   | `-ReturnStmt 0x7ffe4415e808 <col:30, col:59>
| |   |   `-CallExpr 0x7ffe4415e7d8 <col:37, col:59> 'double'
| |   |     |-ImplicitCastExpr 0x7ffe4415e7c0 <col:37, col:39> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7ffe4415e788 <col:37, col:39> 'double (double)' lvalue Function 0x7ffe4390bab0 'sin' 'double (double)'
| |   |     `-CStyleCastExpr 0x7ffe4415e480 <col:43, col:51> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7ffe4415e440 <col:51> '_A1' lvalue ParmVar 0x7ffe4415e190 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7ffe4415e358 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7ffe4415e3a0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe4415e920 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:991:1, col:109> col:46 sinh 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7ffe4415e888 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7ffe4415eb10 <col:83, col:109>
| | | `-ReturnStmt 0x7ffe4415eaf8 <col:84, col:107>
| | |   `-CallExpr 0x7ffe4415eab0 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7ffe4415ea98 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe4415ea38 <col:91, col:93> 'float (float)' lvalue Function 0x7ffe4390e690 'sinhf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7ffe4415eae0 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe4415ea70 <col:99> 'float' lvalue ParmVar 0x7ffe4415e888 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7ffe4415e9c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe4415ea08 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe4415ec10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:992:1, col:109> col:46 sinh 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7ffe4415eb78 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7ffe4415ee00 <col:83, col:109>
| | | `-ReturnStmt 0x7ffe4415ede8 <col:84, col:107>
| | |   `-CallExpr 0x7ffe4415eda0 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7ffe4415ed88 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe4415ed28 <col:91, col:93> 'long double (long double)' lvalue Function 0x7ffe4390e9d0 'sinhl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7ffe4415edd0 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe4415ed60 <col:99> 'long double' lvalue ParmVar 0x7ffe4415eb78 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7ffe4415ecb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe4415ecf8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7ffe441614d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:995:1, line:998:63> col:1 sinh
| | |-TemplateTypeParmDecl 0x7ffe4415ee20 <line:995:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7ffe44161440 <line:996:1, line:998:63> col:1 sinh 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7ffe4415f150 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7ffe44161a00 <col:30, col:63>
| |   | `-ReturnStmt 0x7ffe441619e8 <col:31, col:61>
| |   |   `-CallExpr 0x7ffe441619b8 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7ffe441619a0 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7ffe44161968 <col:38, col:40> 'double (double)' lvalue Function 0x7ffe4390e830 'sinh' 'double (double)'
| |   |     `-CStyleCastExpr 0x7ffe44161658 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7ffe44161618 <col:53> '_A1' lvalue ParmVar 0x7ffe4415f150 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7ffe44161530 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7ffe44161578 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe44161b00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1003:1, col:109> col:46 sqrt 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7ffe44161a68 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7ffe44161cf0 <col:83, col:109>
| | | `-ReturnStmt 0x7ffe44161cd8 <col:84, col:107>
| | |   `-CallExpr 0x7ffe44161c90 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7ffe44161c78 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe44161c18 <col:91, col:93> 'float (float)' lvalue Function 0x7ffe43918c20 'sqrtf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7ffe44161cc0 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe44161c50 <col:99> 'float' lvalue ParmVar 0x7ffe44161a68 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7ffe44161ba0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe44161be8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe44161df0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1004:1, col:109> col:46 sqrt 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7ffe44161d58 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7ffe44161fe0 <col:83, col:109>
| | | `-ReturnStmt 0x7ffe44161fc8 <col:84, col:107>
| | |   `-CallExpr 0x7ffe44161f80 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7ffe44161f68 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe44161f08 <col:91, col:93> 'long double (long double)' lvalue Function 0x7ffe43918f60 'sqrtl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7ffe44161fb0 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe44161f40 <col:99> 'long double' lvalue ParmVar 0x7ffe44161d58 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7ffe44161e90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe44161ed8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7ffe441624a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1007:1, line:1010:63> col:1 sqrt
| | |-TemplateTypeParmDecl 0x7ffe44162000 <line:1007:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7ffe44162408 <line:1008:1, line:1010:63> col:1 sqrt 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7ffe44162330 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7ffe441629c0 <col:30, col:63>
| |   | `-ReturnStmt 0x7ffe441629a8 <col:31, col:61>
| |   |   `-CallExpr 0x7ffe44162978 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7ffe44162960 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7ffe44162928 <col:38, col:40> 'double (double)' lvalue Function 0x7ffe43918dc0 'sqrt' 'double (double)'
| |   |     `-CStyleCastExpr 0x7ffe44162620 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7ffe441625e0 <col:53> '_A1' lvalue ParmVar 0x7ffe44162330 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7ffe441624f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7ffe44162540 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe44162ac0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1015:1, col:107> col:46 tan 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7ffe44162a28 <col:50, col:56> col:56 used __lcpp_x 'float'
| | |-CompoundStmt 0x7ffe44162cb0 <col:82, col:107>
| | | `-ReturnStmt 0x7ffe44162c98 <col:83, col:105>
| | |   `-CallExpr 0x7ffe44162c50 <col:90, col:105> 'float'
| | |     |-ImplicitCastExpr 0x7ffe44162c38 <col:90, col:92> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe44162bd8 <col:90, col:92> 'float (float)' lvalue Function 0x7ffe4390bdf0 'tanf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7ffe44162c80 <col:97> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe44162c10 <col:97> 'float' lvalue ParmVar 0x7ffe44162a28 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7ffe44162b60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe44162ba8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe44162db0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1016:1, col:107> col:46 tan 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7ffe44162d18 <col:50, col:62> col:62 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7ffe44162fa0 <col:82, col:107>
| | | `-ReturnStmt 0x7ffe44162f88 <col:83, col:105>
| | |   `-CallExpr 0x7ffe44162f40 <col:90, col:105> 'long double'
| | |     |-ImplicitCastExpr 0x7ffe44162f28 <col:90, col:92> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe44162ec8 <col:90, col:92> 'long double (long double)' lvalue Function 0x7ffe4390c130 'tanl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7ffe44162f70 <col:97> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe44162f00 <col:97> 'long double' lvalue ParmVar 0x7ffe44162d18 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7ffe44162e50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe44162e98 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7ffe44163498 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1019:1, line:1022:61> col:1 tan
| | |-TemplateTypeParmDecl 0x7ffe44162fc0 <line:1019:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7ffe44163400 <line:1020:1, line:1022:61> col:1 tan 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7ffe441632f0 <col:5, col:9> col:9 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7ffe441639c0 <col:29, col:61>
| |   | `-ReturnStmt 0x7ffe441639a8 <col:30, col:59>
| |   |   `-CallExpr 0x7ffe44163978 <col:37, col:59> 'double'
| |   |     |-ImplicitCastExpr 0x7ffe44163960 <col:37, col:39> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7ffe44163928 <col:37, col:39> 'double (double)' lvalue Function 0x7ffe4390bf90 'tan' 'double (double)'
| |   |     `-CStyleCastExpr 0x7ffe44163618 <col:43, col:51> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7ffe441635d8 <col:51> '_A1' lvalue ParmVar 0x7ffe441632f0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7ffe441634f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7ffe44163538 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe44163ac0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1027:1, col:109> col:46 tanh 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7ffe44163a28 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7ffe44163cb0 <col:83, col:109>
| | | `-ReturnStmt 0x7ffe44163c98 <col:84, col:107>
| | |   `-CallExpr 0x7ffe44163c50 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7ffe44163c38 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe44163bd8 <col:91, col:93> 'float (float)' lvalue Function 0x7ffe4390eb70 'tanhf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7ffe44163c80 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe44163c10 <col:99> 'float' lvalue ParmVar 0x7ffe44163a28 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7ffe44163b60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe44163ba8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe44163db0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1028:1, col:109> col:46 tanh 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7ffe44163d18 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7ffe44163fa0 <col:83, col:109>
| | | `-ReturnStmt 0x7ffe44163f88 <col:84, col:107>
| | |   `-CallExpr 0x7ffe44163f40 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7ffe44163f28 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe44163ec8 <col:91, col:93> 'long double (long double)' lvalue Function 0x7ffe4390eeb0 'tanhl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7ffe44163f70 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe44163f00 <col:99> 'long double' lvalue ParmVar 0x7ffe44163d18 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7ffe44163e50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe44163e98 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7ffe44164460 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1031:1, line:1034:63> col:1 tanh
| | |-TemplateTypeParmDecl 0x7ffe44163fc0 <line:1031:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7ffe441643c8 <line:1032:1, line:1034:63> col:1 tanh 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7ffe441642f0 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7ffe44164980 <col:30, col:63>
| |   | `-ReturnStmt 0x7ffe44164968 <col:31, col:61>
| |   |   `-CallExpr 0x7ffe44164938 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7ffe44164920 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7ffe441648e8 <col:38, col:40> 'double (double)' lvalue Function 0x7ffe4390ed10 'tanh' 'double (double)'
| |   |     `-CStyleCastExpr 0x7ffe441645e0 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7ffe441645a0 <col:53> '_A1' lvalue ParmVar 0x7ffe441642f0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7ffe441644b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7ffe44164500 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe44164a80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1038:1, col:111> col:46 acosh 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7ffe441649e8 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7ffe44164c70 <col:84, col:111>
| | | `-ReturnStmt 0x7ffe44164c58 <col:85, col:109>
| | |   `-CallExpr 0x7ffe44164c10 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7ffe44164bf8 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe44164b98 <col:92, col:94> 'float (float)' lvalue Function 0x7ffe4390c2d0 'acoshf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7ffe44164c40 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe44164bd0 <col:101> 'float' lvalue ParmVar 0x7ffe441649e8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7ffe44164b20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe44164b68 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe44164d70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1039:1, col:111> col:46 acosh 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7ffe44164cd8 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7ffe44164f60 <col:84, col:111>
| | | `-ReturnStmt 0x7ffe44164f48 <col:85, col:109>
| | |   `-CallExpr 0x7ffe44164f00 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7ffe44164ee8 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe44164e88 <col:92, col:94> 'long double (long double)' lvalue Function 0x7ffe4390ce30 'acoshl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7ffe44164f30 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe44164ec0 <col:101> 'long double' lvalue ParmVar 0x7ffe44164cd8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7ffe44164e10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe44164e58 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7ffe44165498 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1041:1, line:1044:65> col:1 acosh
| | |-TemplateTypeParmDecl 0x7ffe44164f80 <line:1041:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7ffe44165400 <line:1042:1, line:1044:65> col:1 acosh 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7ffe441652b0 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7ffe441659c0 <col:31, col:65>
| |   | `-ReturnStmt 0x7ffe441659a8 <col:32, col:63>
| |   |   `-CallExpr 0x7ffe44165978 <col:39, col:63> 'double'
| |   |     |-ImplicitCastExpr 0x7ffe44165960 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7ffe44165928 <col:39, col:41> 'double (double)' lvalue Function 0x7ffe4390cc90 'acosh' 'double (double)'
| |   |     `-CStyleCastExpr 0x7ffe44165618 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7ffe441655d8 <col:55> '_A1' lvalue ParmVar 0x7ffe441652b0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7ffe441654f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7ffe44165538 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe44165ac0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1048:1, col:111> col:46 asinh 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7ffe44165a28 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7ffe44165cb0 <col:84, col:111>
| | | `-ReturnStmt 0x7ffe44165c98 <col:85, col:109>
| | |   `-CallExpr 0x7ffe44165c50 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7ffe44165c38 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe44165bd8 <col:92, col:94> 'float (float)' lvalue Function 0x7ffe4390cfd0 'asinhf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7ffe44165c80 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe44165c10 <col:101> 'float' lvalue ParmVar 0x7ffe44165a28 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7ffe44165b60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe44165ba8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe44165db0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1049:1, col:111> col:46 asinh 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7ffe44165d18 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7ffe44165fa0 <col:84, col:111>
| | | `-ReturnStmt 0x7ffe44165f88 <col:85, col:109>
| | |   `-CallExpr 0x7ffe44165f40 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7ffe44165f28 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe44165ec8 <col:92, col:94> 'long double (long double)' lvalue Function 0x7ffe4390d310 'asinhl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7ffe44165f70 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe44165f00 <col:101> 'long double' lvalue ParmVar 0x7ffe44165d18 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7ffe44165e50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe44165e98 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7ffe44166460 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1051:1, line:1054:65> col:1 asinh
| | |-TemplateTypeParmDecl 0x7ffe44165fc0 <line:1051:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7ffe441663c8 <line:1052:1, line:1054:65> col:1 asinh 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7ffe441662f0 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7ffe44166980 <col:31, col:65>
| |   | `-ReturnStmt 0x7ffe44166968 <col:32, col:63>
| |   |   `-CallExpr 0x7ffe44166938 <col:39, col:63> 'double'
| |   |     |-ImplicitCastExpr 0x7ffe44166920 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7ffe441668e8 <col:39, col:41> 'double (double)' lvalue Function 0x7ffe4390d170 'asinh' 'double (double)'
| |   |     `-CStyleCastExpr 0x7ffe441665e0 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7ffe441665a0 <col:55> '_A1' lvalue ParmVar 0x7ffe441662f0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7ffe441664b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7ffe44166500 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe44166a80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1058:1, col:111> col:46 atanh 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7ffe441669e8 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7ffe44166c70 <col:84, col:111>
| | | `-ReturnStmt 0x7ffe44166c58 <col:85, col:109>
| | |   `-CallExpr 0x7ffe44166c10 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7ffe44166bf8 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe44166b98 <col:92, col:94> 'float (float)' lvalue Function 0x7ffe4390d4b0 'atanhf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7ffe44166c40 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe44166bd0 <col:101> 'float' lvalue ParmVar 0x7ffe441669e8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7ffe44166b20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe44166b68 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe44166d70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1059:1, col:111> col:46 atanh 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7ffe44166cd8 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7ffe44166f60 <col:84, col:111>
| | | `-ReturnStmt 0x7ffe44166f48 <col:85, col:109>
| | |   `-CallExpr 0x7ffe44166f00 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7ffe44166ee8 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe44166e88 <col:92, col:94> 'long double (long double)' lvalue Function 0x7ffe4390d7f0 'atanhl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7ffe44166f30 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe44166ec0 <col:101> 'long double' lvalue ParmVar 0x7ffe44166cd8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7ffe44166e10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe44166e58 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7ffe44167498 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1061:1, line:1064:65> col:1 atanh
| | |-TemplateTypeParmDecl 0x7ffe44166f80 <line:1061:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7ffe44167400 <line:1062:1, line:1064:65> col:1 atanh 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7ffe441672b0 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7ffe441679c0 <col:31, col:65>
| |   | `-ReturnStmt 0x7ffe441679a8 <col:32, col:63>
| |   |   `-CallExpr 0x7ffe44167978 <col:39, col:63> 'double'
| |   |     |-ImplicitCastExpr 0x7ffe44167960 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7ffe44167928 <col:39, col:41> 'double (double)' lvalue Function 0x7ffe4390d650 'atanh' 'double (double)'
| |   |     `-CStyleCastExpr 0x7ffe44167618 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7ffe441675d8 <col:55> '_A1' lvalue ParmVar 0x7ffe441672b0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7ffe441674f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7ffe44167538 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe44167ac0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1068:1, col:109> col:46 cbrt 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7ffe44167a28 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7ffe44167cb0 <col:83, col:109>
| | | `-ReturnStmt 0x7ffe44167c98 <col:84, col:107>
| | |   `-CallExpr 0x7ffe44167c50 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7ffe44167c38 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe44167bd8 <col:91, col:93> 'float (float)' lvalue Function 0x7ffe439179d0 'cbrtf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7ffe44167c80 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe44167c10 <col:99> 'float' lvalue ParmVar 0x7ffe44167a28 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7ffe44167b60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe44167ba8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe44167db0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1069:1, col:109> col:46 cbrt 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7ffe44167d18 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7ffe44167fa0 <col:83, col:109>
| | | `-ReturnStmt 0x7ffe44167f88 <col:84, col:107>
| | |   `-CallExpr 0x7ffe44167f40 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7ffe44167f28 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe44167ec8 <col:91, col:93> 'long double (long double)' lvalue Function 0x7ffe43917d10 'cbrtl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7ffe44167f70 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe44167f00 <col:99> 'long double' lvalue ParmVar 0x7ffe44167d18 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7ffe44167e50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe44167e98 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7ffe44168460 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1071:1, line:1074:63> col:1 cbrt
| | |-TemplateTypeParmDecl 0x7ffe44167fc0 <line:1071:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7ffe441683c8 <line:1072:1, line:1074:63> col:1 cbrt 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7ffe441682f0 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7ffe44168980 <col:30, col:63>
| |   | `-ReturnStmt 0x7ffe44168968 <col:31, col:61>
| |   |   `-CallExpr 0x7ffe44168938 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7ffe44168920 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7ffe441688e8 <col:38, col:40> 'double (double)' lvalue Function 0x7ffe43917b70 'cbrt' 'double (double)'
| |   |     `-CStyleCastExpr 0x7ffe441685e0 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7ffe441685a0 <col:53> '_A1' lvalue ParmVar 0x7ffe441682f0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7ffe441684b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7ffe44168500 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe44168b00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1078:1, line:1081:1> line:1078:40 copysign 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7ffe441689e8 <col:49, col:55> col:55 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7ffe44168a60 <line:1079:49, col:55> col:55 used __lcpp_y 'float'
| | |-CompoundStmt 0x7ffe44168d40 <col:75, line:1081:1>
| | | `-ReturnStmt 0x7ffe44168d28 <line:1080:3, col:40>
| | |   `-CallExpr 0x7ffe44168cc0 <col:10, col:40> 'float'
| | |     |-ImplicitCastExpr 0x7ffe44168ca8 <col:10, col:12> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe44168c20 <col:10, col:12> 'float (float, float)' lvalue Function 0x7ffe4391ee40 'copysignf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7ffe44168cf8 <col:22> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7ffe44168c58 <col:22> 'float' lvalue ParmVar 0x7ffe441689e8 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7ffe44168d10 <col:32> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe44168c80 <col:32> 'float' lvalue ParmVar 0x7ffe44168a60 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7ffe44168ba8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe44168bf0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe44168ec0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1082:1, line:1085:1> line:1083:1 copysign 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7ffe44168da8 <col:10, col:22> col:22 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7ffe44168e20 <col:32, col:44> col:44 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7ffe44169100 <col:64, line:1085:1>
| | | `-ReturnStmt 0x7ffe441690e8 <line:1084:3, col:40>
| | |   `-CallExpr 0x7ffe44169080 <col:10, col:40> 'long double'
| | |     |-ImplicitCastExpr 0x7ffe44169068 <col:10, col:12> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe44168fe0 <col:10, col:12> 'long double (long double, long double)' lvalue Function 0x7ffe4391f290 'copysignl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7ffe441690b8 <col:22> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7ffe44169018 <col:22> 'long double' lvalue ParmVar 0x7ffe44168da8 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7ffe441690d0 <col:32> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe44169040 <col:32> 'long double' lvalue ParmVar 0x7ffe44168e20 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7ffe44168f68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe44168fb0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7ffe44169980 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1087:1, line:1101:1> line:1095:1 copysign
| | |-TemplateTypeParmDecl 0x7ffe44169120 <line:1087:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7ffe44169188 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7ffe441698e8 <line:1088:1, line:1101:1> line:1095:1 copysign 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7ffe44169790 <col:10, col:14> col:14 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7ffe44169800 <col:24, col:28> col:28 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7ffe4416a1a8 <line:1096:1, line:1101:1>
| |   | |-DeclStmt 0x7ffe44169bf8 <line:1097:5, col:66>
| |   | | `-TypedefDecl 0x7ffe44169ba0 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7ffe44169b30 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7ffe44169ff0 <line:1098:5, line:1099:68>
| |   | | `-StaticAssertDecl 0x7ffe44169fb8 <line:1098:5, line:1099:67> line:1098:5
| |   | |   |-ParenExpr 0x7ffe44169f70 <col:19, line:1099:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7ffe44169f50 <line:1098:20, line:1099:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7ffe44169f30 <line:1098:21, line:1099:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7ffe44169f08 <line:1098:22, line:1099:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7ffe44169d68 <line:1098:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7ffe44169ec8 <line:1099:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7ffe44169f90 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7ffe4416a190 <line:1100:5, col:71>
| |   |   `-CallExpr 0x7ffe4416a158 <col:12, col:71> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7ffe4416a028 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'copysign' 0x7ffe4391f068 0x7ffe44168b00 0x7ffe44168ec0 0x7ffe44169980
| |   |     |-CStyleCastExpr 0x7ffe4416a0d0 <col:23, col:38> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7ffe4416a098 <col:38> '_A1' lvalue ParmVar 0x7ffe44169790 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7ffe4416a130 <col:48, col:63> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7ffe4416a0f8 <col:63> '_A2' lvalue ParmVar 0x7ffe44169800 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7ffe441699e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7ffe44169a28 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe4416a2b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1105:1, col:107> col:46 erf 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7ffe4416a220 <col:50, col:56> col:56 used __lcpp_x 'float'
| | |-CompoundStmt 0x7ffe4416a4a8 <col:82, col:107>
| | | `-ReturnStmt 0x7ffe4416a490 <col:83, col:105>
| | |   `-CallExpr 0x7ffe4416a448 <col:90, col:105> 'float'
| | |     |-ImplicitCastExpr 0x7ffe4416a430 <col:90, col:92> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe4416a3d0 <col:90, col:92> 'float (float)' lvalue Function 0x7ffe43919100 'erff' 'float (float)'
| | |     `-ImplicitCastExpr 0x7ffe4416a478 <col:97> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe4416a408 <col:97> 'float' lvalue ParmVar 0x7ffe4416a220 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7ffe4416a358 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe4416a3a0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe4416a5a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1106:1, col:107> col:46 erf 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7ffe4416a510 <col:50, col:62> col:62 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7ffe4416a798 <col:82, col:107>
| | | `-ReturnStmt 0x7ffe4416a780 <col:83, col:105>
| | |   `-CallExpr 0x7ffe4416a738 <col:90, col:105> 'long double'
| | |     |-ImplicitCastExpr 0x7ffe4416a720 <col:90, col:92> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe4416a6c0 <col:90, col:92> 'long double (long double)' lvalue Function 0x7ffe43919490 'erfl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7ffe4416a768 <col:97> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe4416a6f8 <col:97> 'long double' lvalue ParmVar 0x7ffe4416a510 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7ffe4416a648 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe4416a690 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7ffe4416ac60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1108:1, line:1111:61> col:1 erf
| | |-TemplateTypeParmDecl 0x7ffe4416a7b8 <line:1108:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7ffe4416abc8 <line:1109:1, line:1111:61> col:1 erf 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7ffe4416aaf0 <col:5, col:9> col:9 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7ffe4416b180 <col:29, col:61>
| |   | `-ReturnStmt 0x7ffe4416b168 <col:30, col:59>
| |   |   `-CallExpr 0x7ffe4416b138 <col:37, col:59> 'double'
| |   |     |-ImplicitCastExpr 0x7ffe4416b120 <col:37, col:39> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7ffe4416b0e8 <col:37, col:39> 'double (double)' lvalue Function 0x7ffe439192a0 'erf' 'double (double)'
| |   |     `-CStyleCastExpr 0x7ffe4416ade0 <col:43, col:51> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7ffe4416ada0 <col:51> '_A1' lvalue ParmVar 0x7ffe4416aaf0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7ffe4416acb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7ffe4416ad00 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe4416b280 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1115:1, col:109> col:46 erfc 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7ffe4416b1e8 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7ffe4416c478 <col:83, col:109>
| | | `-ReturnStmt 0x7ffe4416c460 <col:84, col:107>
| | |   `-CallExpr 0x7ffe4416c418 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7ffe4416c400 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe4416b398 <col:91, col:93> 'float (float)' lvalue Function 0x7ffe43919630 'erfcf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7ffe4416c448 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe4416b3d0 <col:99> 'float' lvalue ParmVar 0x7ffe4416b1e8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7ffe4416b320 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe4416b368 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe4416c578 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1116:1, col:109> col:46 erfc 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7ffe4416c4e0 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7ffe4416c768 <col:83, col:109>
| | | `-ReturnStmt 0x7ffe4416c750 <col:84, col:107>
| | |   `-CallExpr 0x7ffe4416c708 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7ffe4416c6f0 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe4416c690 <col:91, col:93> 'long double (long double)' lvalue Function 0x7ffe43919970 'erfcl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7ffe4416c738 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe4416c6c8 <col:99> 'long double' lvalue ParmVar 0x7ffe4416c4e0 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7ffe4416c618 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe4416c660 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7ffe4416cc30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1118:1, line:1121:63> col:1 erfc
| | |-TemplateTypeParmDecl 0x7ffe4416c788 <line:1118:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7ffe4416cb98 <line:1119:1, line:1121:63> col:1 erfc 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7ffe4416cac0 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7ffe4416d150 <col:30, col:63>
| |   | `-ReturnStmt 0x7ffe4416d138 <col:31, col:61>
| |   |   `-CallExpr 0x7ffe4416d108 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7ffe4416d0f0 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7ffe4416d0b8 <col:38, col:40> 'double (double)' lvalue Function 0x7ffe439197d0 'erfc' 'double (double)'
| |   |     `-CStyleCastExpr 0x7ffe4416cdb0 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7ffe4416cd70 <col:53> '_A1' lvalue ParmVar 0x7ffe4416cac0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7ffe4416cc88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7ffe4416ccd0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe4416d250 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1125:1, col:109> col:46 exp2 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7ffe4416d1b8 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7ffe4416d440 <col:83, col:109>
| | | `-ReturnStmt 0x7ffe4416d428 <col:84, col:107>
| | |   `-CallExpr 0x7ffe4416d3e0 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7ffe4416d3c8 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe4416d368 <col:91, col:93> 'float (float)' lvalue Function 0x7ffe4390f5a0 'exp2f' 'float (float)'
| | |     `-ImplicitCastExpr 0x7ffe4416d410 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe4416d3a0 <col:99> 'float' lvalue ParmVar 0x7ffe4416d1b8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7ffe4416d2f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe4416d338 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe4416d540 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1126:1, col:109> col:46 exp2 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7ffe4416d4a8 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7ffe4416d730 <col:83, col:109>
| | | `-ReturnStmt 0x7ffe4416d718 <col:84, col:107>
| | |   `-CallExpr 0x7ffe4416d6d0 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7ffe4416d6b8 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe4416d658 <col:91, col:93> 'long double (long double)' lvalue Function 0x7ffe4390f8e0 'exp2l' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7ffe4416d700 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe4416d690 <col:99> 'long double' lvalue ParmVar 0x7ffe4416d4a8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7ffe4416d5e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe4416d628 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7ffe4416dbf0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1128:1, line:1131:63> col:1 exp2
| | |-TemplateTypeParmDecl 0x7ffe4416d750 <line:1128:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7ffe4416db58 <line:1129:1, line:1131:63> col:1 exp2 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7ffe4416da80 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7ffe4416e110 <col:30, col:63>
| |   | `-ReturnStmt 0x7ffe4416e0f8 <col:31, col:61>
| |   |   `-CallExpr 0x7ffe4416e0c8 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7ffe4416e0b0 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7ffe4416e078 <col:38, col:40> 'double (double)' lvalue Function 0x7ffe4390f740 'exp2' 'double (double)'
| |   |     `-CStyleCastExpr 0x7ffe4416dd70 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7ffe4416dd30 <col:53> '_A1' lvalue ParmVar 0x7ffe4416da80 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7ffe4416dc48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7ffe4416dc90 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe4416e210 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1135:1, col:111> col:46 expm1 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7ffe4416e178 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7ffe4416e400 <col:84, col:111>
| | | `-ReturnStmt 0x7ffe4416e3e8 <col:85, col:109>
| | |   `-CallExpr 0x7ffe4416e3a0 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7ffe4416e388 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe4416e328 <col:92, col:94> 'float (float)' lvalue Function 0x7ffe4390fa80 'expm1f' 'float (float)'
| | |     `-ImplicitCastExpr 0x7ffe4416e3d0 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe4416e360 <col:101> 'float' lvalue ParmVar 0x7ffe4416e178 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7ffe4416e2b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe4416e2f8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe4416e500 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1136:1, col:111> col:46 expm1 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7ffe4416e468 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7ffe4416e6f0 <col:84, col:111>
| | | `-ReturnStmt 0x7ffe4416e6d8 <col:85, col:109>
| | |   `-CallExpr 0x7ffe4416e690 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7ffe4416e678 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe4416e618 <col:92, col:94> 'long double (long double)' lvalue Function 0x7ffe4390fdc0 'expm1l' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7ffe4416e6c0 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe4416e650 <col:101> 'long double' lvalue ParmVar 0x7ffe4416e468 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7ffe4416e5a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe4416e5e8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7ffe4416ebb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1138:1, line:1141:65> col:1 expm1
| | |-TemplateTypeParmDecl 0x7ffe4416e710 <line:1138:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7ffe4416eb18 <line:1139:1, line:1141:65> col:1 expm1 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7ffe4416ea40 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7ffe4416f0d0 <col:31, col:65>
| |   | `-ReturnStmt 0x7ffe4416f0b8 <col:32, col:63>
| |   |   `-CallExpr 0x7ffe4416f088 <col:39, col:63> 'double'
| |   |     |-ImplicitCastExpr 0x7ffe4416f070 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7ffe4416f038 <col:39, col:41> 'double (double)' lvalue Function 0x7ffe4390fc20 'expm1' 'double (double)'
| |   |     `-CStyleCastExpr 0x7ffe4416ed30 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7ffe4416ecf0 <col:55> '_A1' lvalue ParmVar 0x7ffe4416ea40 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7ffe4416ec08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7ffe4416ec50 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe4416f250 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1145:1, col:141> col:46 fdim 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7ffe4416f138 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7ffe4416f1b0 <col:67, col:73> col:73 used __lcpp_y 'float'
| | |-CompoundStmt 0x7ffe4416f490 <col:105, col:141>
| | | `-ReturnStmt 0x7ffe4416f478 <col:106, col:139>
| | |   `-CallExpr 0x7ffe4416f410 <col:113, col:139> 'float'
| | |     |-ImplicitCastExpr 0x7ffe4416f3f8 <col:113, col:115> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe4416f370 <col:113, col:115> 'float (float, float)' lvalue Function 0x7ffe43911968 'fdimf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7ffe4416f448 <col:121> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7ffe4416f3a8 <col:121> 'float' lvalue ParmVar 0x7ffe4416f138 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7ffe4416f460 <col:131> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe4416f3d0 <col:131> 'float' lvalue ParmVar 0x7ffe4416f1b0 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7ffe4416f2f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe4416f340 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe4416f610 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1146:1, col:141> col:46 fdim 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7ffe4416f4f8 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7ffe4416f570 <col:73, col:85> col:85 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7ffe4416f850 <col:105, col:141>
| | | `-ReturnStmt 0x7ffe4416f838 <col:106, col:139>
| | |   `-CallExpr 0x7ffe4416f7d0 <col:113, col:139> 'long double'
| | |     |-ImplicitCastExpr 0x7ffe4416f7b8 <col:113, col:115> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe4416f730 <col:113, col:115> 'long double (long double, long double)' lvalue Function 0x7ffe43911db8 'fdiml' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7ffe4416f808 <col:121> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7ffe4416f768 <col:121> 'long double' lvalue ParmVar 0x7ffe4416f4f8 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7ffe4416f820 <col:131> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe4416f790 <col:131> 'long double' lvalue ParmVar 0x7ffe4416f570 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7ffe4416f6b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe4416f700 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7ffe441700b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1148:1, line:1162:1> line:1156:1 fdim
| | |-TemplateTypeParmDecl 0x7ffe4416f870 <line:1148:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7ffe4416f8d8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7ffe44170018 <line:1149:1, line:1162:1> line:1156:1 fdim 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7ffe4416fec0 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7ffe4416ff30 <col:20, col:24> col:24 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7ffe441728f8 <line:1157:1, line:1162:1>
| |   | |-DeclStmt 0x7ffe44170328 <line:1158:5, col:66>
| |   | | `-TypedefDecl 0x7ffe441702d0 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7ffe44170260 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7ffe44172740 <line:1159:5, line:1160:68>
| |   | | `-StaticAssertDecl 0x7ffe44172708 <line:1159:5, line:1160:67> line:1159:5
| |   | |   |-ParenExpr 0x7ffe441726c0 <col:19, line:1160:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7ffe441726a0 <line:1159:20, line:1160:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7ffe44172680 <line:1159:21, line:1160:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7ffe44172658 <line:1159:22, line:1160:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7ffe441724b8 <line:1159:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7ffe44172618 <line:1160:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7ffe441726e0 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7ffe441728e0 <line:1161:5, col:67>
| |   |   `-CallExpr 0x7ffe441728a8 <col:12, col:67> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7ffe44172778 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'fdim' 0x7ffe43911b90 0x7ffe4416f250 0x7ffe4416f610 0x7ffe441700b0
| |   |     |-CStyleCastExpr 0x7ffe44172820 <col:19, col:34> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7ffe441727e8 <col:34> '_A1' lvalue ParmVar 0x7ffe4416fec0 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7ffe44172880 <col:44, col:59> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7ffe44172848 <col:59> '_A2' lvalue ParmVar 0x7ffe4416ff30 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7ffe44170110 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7ffe44170158 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe44172b08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1166:1, col:171> col:46 fma 'float (float, float, float) noexcept' inline
| | |-ParmVarDecl 0x7ffe44172970 <col:50, col:56> col:56 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7ffe441729e8 <col:66, col:72> col:72 used __lcpp_y 'float'
| | |-ParmVarDecl 0x7ffe44172a60 <col:82, col:88> col:88 used __lcpp_z 'float'
| | |-CompoundStmt 0x7ffe44172dc0 <col:126, col:171>
| | | `-ReturnStmt 0x7ffe44172da8 <col:127, col:169>
| | |   `-CallExpr 0x7ffe44172d20 <col:134, col:169> 'float'
| | |     |-ImplicitCastExpr 0x7ffe44172d08 <col:134, col:136> 'float (*)(float, float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe44172c30 <col:134, col:136> 'float (float, float, float)' lvalue Function 0x7ffe43924da8 'fmaf' 'float (float, float, float)'
| | |     |-ImplicitCastExpr 0x7ffe44172d60 <col:141> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7ffe44172c68 <col:141> 'float' lvalue ParmVar 0x7ffe44172970 '__lcpp_x' 'float'
| | |     |-ImplicitCastExpr 0x7ffe44172d78 <col:151> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7ffe44172c90 <col:151> 'float' lvalue ParmVar 0x7ffe441729e8 '__lcpp_y' 'float'
| | |     `-ImplicitCastExpr 0x7ffe44172d90 <col:161> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe44172cb8 <col:161> 'float' lvalue ParmVar 0x7ffe44172a60 '__lcpp_z' 'float'
| | |-AlwaysInlineAttr 0x7ffe44172bb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe44172c00 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe44172fc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1167:1, col:171> col:46 fma 'long double (long double, long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7ffe44172e28 <col:50, col:62> col:62 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7ffe44172ea0 <col:72, col:84> col:84 used __lcpp_y 'long double'
| | |-ParmVarDecl 0x7ffe44172f18 <col:94, col:106> col:106 used __lcpp_z 'long double'
| | |-CompoundStmt 0x7ffe44173280 <col:126, col:171>
| | | `-ReturnStmt 0x7ffe44173268 <col:127, col:169>
| | |   `-CallExpr 0x7ffe441731e0 <col:134, col:169> 'long double'
| | |     |-ImplicitCastExpr 0x7ffe441731c8 <col:134, col:136> 'long double (*)(long double, long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe441730e8 <col:134, col:136> 'long double (long double, long double, long double)' lvalue Function 0x7ffe43915488 'fmal' 'long double (long double, long double, long double)'
| | |     |-ImplicitCastExpr 0x7ffe44173220 <col:141> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7ffe44173120 <col:141> 'long double' lvalue ParmVar 0x7ffe44172e28 '__lcpp_x' 'long double'
| | |     |-ImplicitCastExpr 0x7ffe44173238 <col:151> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7ffe44173148 <col:151> 'long double' lvalue ParmVar 0x7ffe44172ea0 '__lcpp_y' 'long double'
| | |     `-ImplicitCastExpr 0x7ffe44173250 <col:161> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe44173170 <col:161> 'long double' lvalue ParmVar 0x7ffe44172f18 '__lcpp_z' 'long double'
| | |-AlwaysInlineAttr 0x7ffe44173070 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe441730b8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7ffe44173ed0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1169:1, line:1185:1> line:1178:1 fma
| | |-TemplateTypeParmDecl 0x7ffe441732a0 <line:1169:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7ffe44173308 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | |-TemplateTypeParmDecl 0x7ffe44173378 <col:33, col:39> col:39 referenced class depth 0 index 2 _A3
| | `-FunctionDecl 0x7ffe44173e38 <line:1170:1, line:1185:1> line:1178:1 fma 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value && std::is_arithmetic<_A3>::value, std::__promote<_A1, _A2, _A3> >::type (_A1, _A2, _A3) noexcept' inline
| |   |-ParmVarDecl 0x7ffe44173c10 <col:5, col:9> col:9 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7ffe44173c80 <col:19, col:23> col:23 referenced __lcpp_y '_A2'
| |   |-ParmVarDecl 0x7ffe44173cf0 <col:33, col:37> col:37 referenced __lcpp_z '_A3'
| |   |-CompoundStmt 0x7ffe44174a90 <line:1179:1, line:1185:1>
| |   | |-DeclStmt 0x7ffe441741d8 <line:1180:5, col:71>
| |   | | `-TypedefDecl 0x7ffe44174180 <col:5, col:58> col:58 referenced __result_type 'typename std::__promote<_A1, _A2, _A3>::type'
| |   | |   `-DependentNameType 0x7ffe44174110 'typename std::__promote<_A1, _A2, _A3>::type' dependent
| |   | |-DeclStmt 0x7ffe44174870 <line:1181:5, line:1183:68>
| |   | | `-StaticAssertDecl 0x7ffe44174838 <line:1181:5, line:1183:67> line:1181:5
| |   | |   |-ParenExpr 0x7ffe441747f0 <col:19, line:1183:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7ffe441747d0 <line:1181:20, line:1183:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7ffe441747b0 <line:1181:21, line:1183:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7ffe44174788 <line:1181:22, line:1183:56> '<dependent type>' '&&'
| |   | |   |       |-BinaryOperator 0x7ffe441745a8 <line:1181:22, line:1182:56> '<dependent type>' '&&'
| |   | |   |       | |-DependentScopeDeclRefExpr 0x7ffe441743a8 <line:1181:22, col:56> '<dependent type>' lvalue
| |   | |   |       | `-DependentScopeDeclRefExpr 0x7ffe44174568 <line:1182:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7ffe44174748 <line:1183:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7ffe44174810 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7ffe44174a78 <line:1184:5, col:91>
| |   |   `-CallExpr 0x7ffe44174a38 <col:12, col:91> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7ffe441748a8 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'fma' 0x7ffe439250f8 0x7ffe44172b08 0x7ffe44172fc0 0x7ffe44173ed0
| |   |     |-CStyleCastExpr 0x7ffe44174950 <col:18, col:33> '__result_type':'typename std::__promote<_A1, _A2, _A3>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7ffe44174918 <col:33> '_A1' lvalue ParmVar 0x7ffe44173c10 '__lcpp_x' '_A1'
| |   |     |-CStyleCastExpr 0x7ffe441749b0 <col:43, col:58> '__result_type':'typename std::__promote<_A1, _A2, _A3>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7ffe44174978 <col:58> '_A2' lvalue ParmVar 0x7ffe44173c80 '__lcpp_y' '_A2'
| |   |     `-CStyleCastExpr 0x7ffe44174a10 <col:68, col:83> '__result_type':'typename std::__promote<_A1, _A2, _A3>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7ffe441749d8 <col:83> '_A3' lvalue ParmVar 0x7ffe44173cf0 '__lcpp_z' '_A3'
| |   |-AlwaysInlineAttr 0x7ffe44173f38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7ffe44173f80 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe44174c20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1189:1, col:141> col:46 fmax 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7ffe44174b08 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7ffe44174b80 <col:67, col:73> col:73 used __lcpp_y 'float'
| | |-CompoundStmt 0x7ffe44174e60 <col:105, col:141>
| | | `-ReturnStmt 0x7ffe44174e48 <col:106, col:139>
| | |   `-CallExpr 0x7ffe44174de0 <col:113, col:139> 'float'
| | |     |-ImplicitCastExpr 0x7ffe44174dc8 <col:113, col:115> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe44174d40 <col:113, col:115> 'float (float, float)' lvalue Function 0x7ffe43911fe0 'fmaxf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7ffe44174e18 <col:121> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7ffe44174d78 <col:121> 'float' lvalue ParmVar 0x7ffe44174b08 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7ffe44174e30 <col:131> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe44174da0 <col:131> 'float' lvalue ParmVar 0x7ffe44174b80 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7ffe44174cc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe44174d10 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe44174fe0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1190:1, col:141> col:46 fmax 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7ffe44174ec8 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7ffe44174f40 <col:73, col:85> col:85 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7ffe44175220 <col:105, col:141>
| | | `-ReturnStmt 0x7ffe44175208 <col:106, col:139>
| | |   `-CallExpr 0x7ffe441751a0 <col:113, col:139> 'long double'
| | |     |-ImplicitCastExpr 0x7ffe44175188 <col:113, col:115> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe44175100 <col:113, col:115> 'long double (long double, long double)' lvalue Function 0x7ffe43924438 'fmaxl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7ffe441751d8 <col:121> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7ffe44175138 <col:121> 'long double' lvalue ParmVar 0x7ffe44174ec8 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7ffe441751f0 <col:131> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe44175160 <col:131> 'long double' lvalue ParmVar 0x7ffe44174f40 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7ffe44175088 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe441750d0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7ffe44175a80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1192:1, line:1206:1> line:1200:1 fmax
| | |-TemplateTypeParmDecl 0x7ffe44175240 <line:1192:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7ffe441752a8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7ffe441759e8 <line:1193:1, line:1206:1> line:1200:1 fmax 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7ffe44175890 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7ffe44175900 <col:20, col:24> col:24 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7ffe441762a8 <line:1201:1, line:1206:1>
| |   | |-DeclStmt 0x7ffe44175cf8 <line:1202:5, col:66>
| |   | | `-TypedefDecl 0x7ffe44175ca0 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7ffe44175c30 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7ffe441760f0 <line:1203:5, line:1204:68>
| |   | | `-StaticAssertDecl 0x7ffe441760b8 <line:1203:5, line:1204:67> line:1203:5
| |   | |   |-ParenExpr 0x7ffe44176070 <col:19, line:1204:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7ffe44176050 <line:1203:20, line:1204:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7ffe44176030 <line:1203:21, line:1204:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7ffe44176008 <line:1203:22, line:1204:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7ffe44175e68 <line:1203:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7ffe44175fc8 <line:1204:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7ffe44176090 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7ffe44176290 <line:1205:5, col:67>
| |   |   `-CallExpr 0x7ffe44176258 <col:12, col:67> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7ffe44176128 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'fmax' 0x7ffe43912208 0x7ffe44174c20 0x7ffe44174fe0 0x7ffe44175a80
| |   |     |-CStyleCastExpr 0x7ffe441761d0 <col:19, col:34> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7ffe44176198 <col:34> '_A1' lvalue ParmVar 0x7ffe44175890 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7ffe44176230 <col:44, col:59> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7ffe441761f8 <col:59> '_A2' lvalue ParmVar 0x7ffe44175900 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7ffe44175ae0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7ffe44175b28 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe44176440 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1210:1, col:141> col:46 fmin 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7ffe44176320 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7ffe44176398 <col:67, col:73> col:73 used __lcpp_y 'float'
| | |-CompoundStmt 0x7ffe44176680 <col:105, col:141>
| | | `-ReturnStmt 0x7ffe44176668 <col:106, col:139>
| | |   `-CallExpr 0x7ffe44176600 <col:113, col:139> 'float'
| | |     |-ImplicitCastExpr 0x7ffe441765e8 <col:113, col:115> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe44176560 <col:113, col:115> 'float (float, float)' lvalue Function 0x7ffe43924660 'fminf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7ffe44176638 <col:121> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7ffe44176598 <col:121> 'float' lvalue ParmVar 0x7ffe44176320 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7ffe44176650 <col:131> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe441765c0 <col:131> 'float' lvalue ParmVar 0x7ffe44176398 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7ffe441764e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe44176530 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe44176800 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1211:1, col:141> col:46 fmin 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7ffe441766e8 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7ffe44176760 <col:73, col:85> col:85 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7ffe44176a40 <col:105, col:141>
| | | `-ReturnStmt 0x7ffe44176a28 <col:106, col:139>
| | |   `-CallExpr 0x7ffe441769c0 <col:113, col:139> 'long double'
| | |     |-ImplicitCastExpr 0x7ffe441769a8 <col:113, col:115> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe44176920 <col:113, col:115> 'long double (long double, long double)' lvalue Function 0x7ffe43924ab0 'fminl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7ffe441769f8 <col:121> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7ffe44176958 <col:121> 'long double' lvalue ParmVar 0x7ffe441766e8 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7ffe44176a10 <col:131> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe44176980 <col:131> 'long double' lvalue ParmVar 0x7ffe44176760 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7ffe441768a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe441768f0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7ffe441772a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1213:1, line:1227:1> line:1221:1 fmin
| | |-TemplateTypeParmDecl 0x7ffe44176a60 <line:1213:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7ffe44176ac8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7ffe44177208 <line:1214:1, line:1227:1> line:1221:1 fmin 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7ffe441770b0 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7ffe44177120 <col:20, col:24> col:24 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7ffe44177ac8 <line:1222:1, line:1227:1>
| |   | |-DeclStmt 0x7ffe44177518 <line:1223:5, col:66>
| |   | | `-TypedefDecl 0x7ffe441774c0 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7ffe44177450 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7ffe44177910 <line:1224:5, line:1225:68>
| |   | | `-StaticAssertDecl 0x7ffe441778d8 <line:1224:5, line:1225:67> line:1224:5
| |   | |   |-ParenExpr 0x7ffe44177890 <col:19, line:1225:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7ffe44177870 <line:1224:20, line:1225:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7ffe44177850 <line:1224:21, line:1225:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7ffe44177828 <line:1224:22, line:1225:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7ffe44177688 <line:1224:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7ffe441777e8 <line:1225:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7ffe441778b0 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7ffe44177ab0 <line:1226:5, col:67>
| |   |   `-CallExpr 0x7ffe44177a78 <col:12, col:67> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7ffe44177948 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'fmin' 0x7ffe43924888 0x7ffe44176440 0x7ffe44176800 0x7ffe441772a0
| |   |     |-CStyleCastExpr 0x7ffe441779f0 <col:19, col:34> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7ffe441779b8 <col:34> '_A1' lvalue ParmVar 0x7ffe441770b0 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7ffe44177a50 <col:44, col:59> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7ffe44177a18 <col:59> '_A2' lvalue ParmVar 0x7ffe44177120 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7ffe44177300 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7ffe44177348 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe44177c58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1231:1, col:143> col:46 hypot 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7ffe44177b40 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7ffe44177bb8 <col:68, col:74> col:74 used __lcpp_y 'float'
| | |-CompoundStmt 0x7ffe44177e98 <col:106, col:143>
| | | `-ReturnStmt 0x7ffe44177e80 <col:107, col:141>
| | |   `-CallExpr 0x7ffe44177e18 <col:114, col:141> 'float'
| | |     |-ImplicitCastExpr 0x7ffe44177e00 <col:114, col:116> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe44177d78 <col:114, col:116> 'float (float, float)' lvalue Function 0x7ffe43917f30 'hypotf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7ffe44177e50 <col:123> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7ffe44177db0 <col:123> 'float' lvalue ParmVar 0x7ffe44177b40 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7ffe44177e68 <col:133> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe44177dd8 <col:133> 'float' lvalue ParmVar 0x7ffe44177bb8 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7ffe44177d00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe44177d48 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe44178018 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1232:1, col:143> col:46 hypot 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7ffe44177f00 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7ffe44177f78 <col:74, col:86> col:86 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7ffe44178258 <col:106, col:143>
| | | `-ReturnStmt 0x7ffe44178240 <col:107, col:141>
| | |   `-CallExpr 0x7ffe441781d8 <col:114, col:141> 'long double'
| | |     |-ImplicitCastExpr 0x7ffe441781c0 <col:114, col:116> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe44178138 <col:114, col:116> 'long double (long double, long double)' lvalue Function 0x7ffe43918400 'hypotl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7ffe44178210 <col:123> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7ffe44178170 <col:123> 'long double' lvalue ParmVar 0x7ffe44177f00 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7ffe44178228 <col:133> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe44178198 <col:133> 'long double' lvalue ParmVar 0x7ffe44177f78 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7ffe441780c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe44178108 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7ffe44178b00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1234:1, line:1248:1> line:1242:1 hypot
| | |-TemplateTypeParmDecl 0x7ffe44178278 <line:1234:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7ffe441782e8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7ffe44178a68 <line:1235:1, line:1248:1> line:1242:1 hypot 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7ffe44178910 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7ffe44178980 <col:21, col:25> col:25 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7ffe44179328 <line:1243:1, line:1248:1>
| |   | |-DeclStmt 0x7ffe44178d78 <line:1244:5, col:66>
| |   | | `-TypedefDecl 0x7ffe44178d20 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7ffe44178cb0 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7ffe44179170 <line:1245:5, line:1246:68>
| |   | | `-StaticAssertDecl 0x7ffe44179138 <line:1245:5, line:1246:67> line:1245:5
| |   | |   |-ParenExpr 0x7ffe441790f0 <col:19, line:1246:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7ffe441790d0 <line:1245:20, line:1246:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7ffe441790b0 <line:1245:21, line:1246:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7ffe44179088 <line:1245:22, line:1246:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7ffe44178ee8 <line:1245:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7ffe44179048 <line:1246:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7ffe44179110 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7ffe44179310 <line:1247:5, col:68>
| |   |   `-CallExpr 0x7ffe441792d8 <col:12, col:68> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7ffe441791a8 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'hypot' 0x7ffe43918158 0x7ffe44177c58 0x7ffe44178018 0x7ffe44178b00
| |   |     |-CStyleCastExpr 0x7ffe44179250 <col:20, col:35> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7ffe44179218 <col:35> '_A1' lvalue ParmVar 0x7ffe44178910 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7ffe441792b0 <col:45, col:60> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7ffe44179278 <col:60> '_A2' lvalue ParmVar 0x7ffe44178980 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7ffe44178b60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7ffe44178ba8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe44179438 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1252:1, col:103> col:38 ilogb 'int (float) noexcept' inline
| | |-ParmVarDecl 0x7ffe441793a0 <col:44, col:50> col:50 used __lcpp_x 'float'
| | |-CompoundStmt 0x7ffe44179628 <col:76, col:103>
| | | `-ReturnStmt 0x7ffe44179610 <col:77, col:101>
| | |   `-CallExpr 0x7ffe441795c8 <col:84, col:101> 'int'
| | |     |-ImplicitCastExpr 0x7ffe441795b0 <col:84, col:86> 'int (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe44179550 <col:84, col:86> 'int (float)' lvalue Function 0x7ffe439150a0 'ilogbf' 'int (float)'
| | |     `-ImplicitCastExpr 0x7ffe441795f8 <col:93> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe44179588 <col:93> 'float' lvalue ParmVar 0x7ffe441793a0 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7ffe441794d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe44179520 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe44179728 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1253:1, col:103> col:38 ilogb 'int (long double) noexcept' inline
| | |-ParmVarDecl 0x7ffe44179690 <col:44, col:56> col:56 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7ffe44179918 <col:76, col:103>
| | | `-ReturnStmt 0x7ffe44179900 <col:77, col:101>
| | |   `-CallExpr 0x7ffe441798b8 <col:84, col:101> 'int'
| | |     |-ImplicitCastExpr 0x7ffe441798a0 <col:84, col:86> 'int (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe44179840 <col:84, col:86> 'int (long double)' lvalue Function 0x7ffe43916490 'ilogbl' 'int (long double)'
| | |     `-ImplicitCastExpr 0x7ffe441798e8 <col:93> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe44179878 <col:93> 'long double' lvalue ParmVar 0x7ffe44179690 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7ffe441797c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe44179810 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7ffe44179de0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1255:1, line:1258:65> col:1 ilogb
| | |-TemplateTypeParmDecl 0x7ffe44179938 <line:1255:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7ffe44179d48 <line:1256:1, line:1258:65> col:1 ilogb 'typename std::enable_if<std::is_integral<_A1>::value, int>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7ffe44179c70 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7ffe4417a5b8 <col:31, col:65>
| |   | `-ReturnStmt 0x7ffe4417a5a0 <col:32, col:63>
| |   |   `-CallExpr 0x7ffe4417a570 <col:39, col:63> 'int'
| |   |     |-ImplicitCastExpr 0x7ffe4417a558 <col:39, col:41> 'int (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7ffe4417a520 <col:39, col:41> 'int (double)' lvalue Function 0x7ffe43915278 'ilogb' 'int (double)'
| |   |     `-CStyleCastExpr 0x7ffe44179f60 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7ffe44179f20 <col:55> '_A1' lvalue ParmVar 0x7ffe44179c70 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7ffe44179e38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7ffe44179e80 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe4417a6b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1262:1, col:113> col:46 lgamma 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7ffe4417a620 <col:53, col:59> col:59 used __lcpp_x 'float'
| | |-CompoundStmt 0x7ffe4417a8a8 <col:85, col:113>
| | | `-ReturnStmt 0x7ffe4417a890 <col:86, col:111>
| | |   `-CallExpr 0x7ffe4417a848 <col:93, col:111> 'float'
| | |     |-ImplicitCastExpr 0x7ffe4417a830 <col:93, col:95> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe4417a7d0 <col:93, col:95> 'float (float)' lvalue Function 0x7ffe43919b10 'lgammaf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7ffe4417a878 <col:103> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe4417a808 <col:103> 'float' lvalue ParmVar 0x7ffe4417a620 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7ffe4417a758 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe4417a7a0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe4417a9a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1263:1, col:113> col:46 lgamma 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7ffe4417a910 <col:53, col:65> col:65 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7ffe4417ab98 <col:85, col:113>
| | | `-ReturnStmt 0x7ffe4417ab80 <col:86, col:111>
| | |   `-CallExpr 0x7ffe4417ab38 <col:93, col:111> 'long double'
| | |     |-ImplicitCastExpr 0x7ffe4417ab20 <col:93, col:95> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe4417aac0 <col:93, col:95> 'long double (long double)' lvalue Function 0x7ffe43919e30 'lgammal' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7ffe4417ab68 <col:103> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe4417aaf8 <col:103> 'long double' lvalue ParmVar 0x7ffe4417a910 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7ffe4417aa48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe4417aa90 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7ffe4417b060 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1265:1, line:1268:67> col:1 lgamma
| | |-TemplateTypeParmDecl 0x7ffe4417abb8 <line:1265:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7ffe4417afc8 <line:1266:1, line:1268:67> col:1 lgamma 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7ffe4417aef0 <col:8, col:12> col:12 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7ffe4417b580 <col:32, col:67>
| |   | `-ReturnStmt 0x7ffe4417b568 <col:33, col:65>
| |   |   `-CallExpr 0x7ffe4417b538 <col:40, col:65> 'double'
| |   |     |-ImplicitCastExpr 0x7ffe4417b520 <col:40, col:42> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7ffe4417b4e8 <col:40, col:42> 'double (double)' lvalue Function 0x7ffe43919ca0 'lgamma' 'double (double)'
| |   |     `-CStyleCastExpr 0x7ffe4417b1e0 <col:49, col:57> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7ffe4417b1a0 <col:57> '_A1' lvalue ParmVar 0x7ffe4417aef0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7ffe4417b0b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7ffe4417b100 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe4417b680 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1272:1, col:111> col:44 llrint 'long long (float) noexcept' inline
| | |-ParmVarDecl 0x7ffe4417b5e8 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7ffe4417b8a0 <col:83, col:111>
| | | `-ReturnStmt 0x7ffe4417b888 <col:84, col:109>
| | |   `-CallExpr 0x7ffe4417b840 <col:91, col:109> 'long long'
| | |     |-ImplicitCastExpr 0x7ffe4417b828 <col:91, col:93> 'long long (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe4417b798 <col:91, col:93> 'long long (float)' lvalue Function 0x7ffe4391c888 'llrintf' 'long long (float)'
| | |     `-ImplicitCastExpr 0x7ffe4417b870 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe4417b7d0 <col:101> 'float' lvalue ParmVar 0x7ffe4417b5e8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7ffe4417b720 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe4417b768 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe4417b9a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1273:1, col:111> col:44 llrint 'long long (long double) noexcept' inline
| | |-ParmVarDecl 0x7ffe4417b908 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7ffe4417bbc0 <col:83, col:111>
| | | `-ReturnStmt 0x7ffe4417bba8 <col:84, col:109>
| | |   `-CallExpr 0x7ffe4417bb60 <col:91, col:109> 'long long'
| | |     |-ImplicitCastExpr 0x7ffe4417bb48 <col:91, col:93> 'long long (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe4417bab8 <col:91, col:93> 'long long (long double)' lvalue Function 0x7ffe4391ccc8 'llrintl' 'long long (long double)'
| | |     `-ImplicitCastExpr 0x7ffe4417bb90 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe4417baf0 <col:101> 'long double' lvalue ParmVar 0x7ffe4417b908 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7ffe4417ba40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe4417ba88 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7ffe4417c170 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1275:1, line:1278:67> col:1 llrint
| | |-TemplateTypeParmDecl 0x7ffe4417bbe0 <line:1275:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7ffe4417c0d8 <line:1276:1, line:1278:67> col:1 llrint 'typename std::enable_if<std::is_integral<_A1>::value, long long>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7ffe4417bfc0 <col:8, col:12> col:12 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7ffe4417c948 <col:32, col:67>
| |   | `-ReturnStmt 0x7ffe4417c930 <col:33, col:65>
| |   |   `-CallExpr 0x7ffe4417c900 <col:40, col:65> 'long long'
| |   |     |-ImplicitCastExpr 0x7ffe4417c8e8 <col:40, col:42> 'long long (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7ffe4417c888 <col:40, col:42> 'long long (double)' lvalue Function 0x7ffe4391caa8 'llrint' 'long long (double)'
| |   |     `-CStyleCastExpr 0x7ffe4417c2f0 <col:49, col:57> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7ffe4417c2b0 <col:57> '_A1' lvalue ParmVar 0x7ffe4417bfc0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7ffe4417c1c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7ffe4417c210 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe4417ca48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1282:1, col:113> col:44 llround 'long long (float) noexcept' inline
| | |-ParmVarDecl 0x7ffe4417c9b0 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7ffe4417cc38 <col:84, col:113>
| | | `-ReturnStmt 0x7ffe4417cc20 <col:85, col:111>
| | |   `-CallExpr 0x7ffe4417cbd8 <col:92, col:111> 'long long'
| | |     |-ImplicitCastExpr 0x7ffe4417cbc0 <col:92, col:94> 'long long (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe4417cb60 <col:92, col:94> 'long long (float)' lvalue Function 0x7ffe4391cea8 'llroundf' 'long long (float)'
| | |     `-ImplicitCastExpr 0x7ffe4417cc08 <col:103> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe4417cb98 <col:103> 'float' lvalue ParmVar 0x7ffe4417c9b0 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7ffe4417cae8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe4417cb30 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe4417cd38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1283:1, col:113> col:44 llround 'long long (long double) noexcept' inline
| | |-ParmVarDecl 0x7ffe4417cca0 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7ffe4417cf28 <col:84, col:113>
| | | `-ReturnStmt 0x7ffe4417cf10 <col:85, col:111>
| | |   `-CallExpr 0x7ffe4417cec8 <col:92, col:111> 'long long'
| | |     |-ImplicitCastExpr 0x7ffe4417ceb0 <col:92, col:94> 'long long (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe4417ce50 <col:92, col:94> 'long long (long double)' lvalue Function 0x7ffe4391d1e8 'llroundl' 'long long (long double)'
| | |     `-ImplicitCastExpr 0x7ffe4417cef8 <col:103> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe4417ce88 <col:103> 'long double' lvalue ParmVar 0x7ffe4417cca0 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7ffe4417cdd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe4417ce20 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7ffe4417d3f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1285:1, line:1288:69> col:1 llround
| | |-TemplateTypeParmDecl 0x7ffe4417cf48 <line:1285:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7ffe4417d358 <line:1286:1, line:1288:69> col:1 llround 'typename std::enable_if<std::is_integral<_A1>::value, long long>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7ffe4417d280 <col:9, col:13> col:13 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7ffe4417d910 <col:33, col:69>
| |   | `-ReturnStmt 0x7ffe4417d8f8 <col:34, col:67>
| |   |   `-CallExpr 0x7ffe4417d8c8 <col:41, col:67> 'long long'
| |   |     |-ImplicitCastExpr 0x7ffe4417d8b0 <col:41, col:43> 'long long (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7ffe4417d878 <col:41, col:43> 'long long (double)' lvalue Function 0x7ffe4391d048 'llround' 'long long (double)'
| |   |     `-CStyleCastExpr 0x7ffe4417d570 <col:51, col:59> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7ffe4417d530 <col:59> '_A1' lvalue ParmVar 0x7ffe4417d280 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7ffe4417d448 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7ffe4417d490 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe4417da10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1292:1, col:111> col:46 log1p 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7ffe4417d978 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7ffe4417dc00 <col:84, col:111>
| | | `-ReturnStmt 0x7ffe4417dbe8 <col:85, col:109>
| | |   `-CallExpr 0x7ffe4417dba0 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7ffe4417db88 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe4417db28 <col:92, col:94> 'float (float)' lvalue Function 0x7ffe43910e50 'log1pf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7ffe4417dbd0 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe4417db60 <col:101> 'float' lvalue ParmVar 0x7ffe4417d978 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7ffe4417dab0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe4417daf8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe4417dd00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1293:1, col:111> col:46 log1p 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7ffe4417dc68 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7ffe4417def0 <col:84, col:111>
| | | `-ReturnStmt 0x7ffe4417ded8 <col:85, col:109>
| | |   `-CallExpr 0x7ffe4417de90 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7ffe4417de78 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe4417de18 <col:92, col:94> 'long double (long double)' lvalue Function 0x7ffe43911190 'log1pl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7ffe4417dec0 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe4417de50 <col:101> 'long double' lvalue ParmVar 0x7ffe4417dc68 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7ffe4417dda0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe4417dde8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7ffe4417e3b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1295:1, line:1298:65> col:1 log1p
| | |-TemplateTypeParmDecl 0x7ffe4417df10 <line:1295:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7ffe4417e318 <line:1296:1, line:1298:65> col:1 log1p 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7ffe4417e240 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7ffe4417e8d0 <col:31, col:65>
| |   | `-ReturnStmt 0x7ffe4417e8b8 <col:32, col:63>
| |   |   `-CallExpr 0x7ffe4417e888 <col:39, col:63> 'double'
| |   |     |-ImplicitCastExpr 0x7ffe4417e870 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7ffe4417e838 <col:39, col:41> 'double (double)' lvalue Function 0x7ffe43910ff0 'log1p' 'double (double)'
| |   |     `-CStyleCastExpr 0x7ffe4417e530 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7ffe4417e4f0 <col:55> '_A1' lvalue ParmVar 0x7ffe4417e240 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7ffe4417e408 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7ffe4417e450 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe4417e9d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1302:1, col:109> col:46 log2 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7ffe4417e938 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7ffe4417ebc0 <col:83, col:109>
| | | `-ReturnStmt 0x7ffe4417eba8 <col:84, col:107>
| | |   `-CallExpr 0x7ffe4417eb60 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7ffe4417eb48 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe4417eae8 <col:91, col:93> 'float (float)' lvalue Function 0x7ffe43910970 'log2f' 'float (float)'
| | |     `-ImplicitCastExpr 0x7ffe4417eb90 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe4417eb20 <col:99> 'float' lvalue ParmVar 0x7ffe4417e938 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7ffe4417ea70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe4417eab8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe4417ecc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1303:1, col:109> col:46 log2 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7ffe4417ec28 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7ffe4417eeb0 <col:83, col:109>
| | | `-ReturnStmt 0x7ffe4417ee98 <col:84, col:107>
| | |   `-CallExpr 0x7ffe4417ee50 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7ffe4417ee38 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe4417edd8 <col:91, col:93> 'long double (long double)' lvalue Function 0x7ffe43910cb0 'log2l' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7ffe4417ee80 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe4417ee10 <col:99> 'long double' lvalue ParmVar 0x7ffe4417ec28 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7ffe4417ed60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe4417eda8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7ffe4417f370 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1305:1, line:1308:63> col:1 log2
| | |-TemplateTypeParmDecl 0x7ffe4417eed0 <line:1305:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7ffe4417f2d8 <line:1306:1, line:1308:63> col:1 log2 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7ffe4417f200 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7ffe4417f890 <col:30, col:63>
| |   | `-ReturnStmt 0x7ffe4417f878 <col:31, col:61>
| |   |   `-CallExpr 0x7ffe4417f848 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7ffe4417f830 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7ffe4417f7f8 <col:38, col:40> 'double (double)' lvalue Function 0x7ffe43910b10 'log2' 'double (double)'
| |   |     `-CStyleCastExpr 0x7ffe4417f4f0 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7ffe4417f4b0 <col:53> '_A1' lvalue ParmVar 0x7ffe4417f200 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7ffe4417f3c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7ffe4417f410 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe4417f990 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1312:1, col:109> col:46 logb 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7ffe4417f8f8 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7ffe4417fb80 <col:83, col:109>
| | | `-ReturnStmt 0x7ffe4417fb68 <col:84, col:107>
| | |   `-CallExpr 0x7ffe4417fb20 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7ffe4417fb08 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe4417faa8 <col:91, col:93> 'float (float)' lvalue Function 0x7ffe43911330 'logbf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7ffe4417fb50 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe4417fae0 <col:99> 'float' lvalue ParmVar 0x7ffe4417f8f8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7ffe4417fa30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe4417fa78 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe4417fc80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1313:1, col:109> col:46 logb 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7ffe4417fbe8 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7ffe4417fe70 <col:83, col:109>
| | | `-ReturnStmt 0x7ffe4417fe58 <col:84, col:107>
| | |   `-CallExpr 0x7ffe4417fe10 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7ffe4417fdf8 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe4417fd98 <col:91, col:93> 'long double (long double)' lvalue Function 0x7ffe43912690 'logbl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7ffe4417fe40 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe4417fdd0 <col:99> 'long double' lvalue ParmVar 0x7ffe4417fbe8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7ffe4417fd20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe4417fd68 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7ffe44180330 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1315:1, line:1318:63> col:1 logb
| | |-TemplateTypeParmDecl 0x7ffe4417fe90 <line:1315:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7ffe44180298 <line:1316:1, line:1318:63> col:1 logb 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7ffe441801c0 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7ffe44181850 <col:30, col:63>
| |   | `-ReturnStmt 0x7ffe44181838 <col:31, col:61>
| |   |   `-CallExpr 0x7ffe44181808 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7ffe441817f0 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7ffe441817b8 <col:38, col:40> 'double (double)' lvalue Function 0x7ffe439124f0 'logb' 'double (double)'
| |   |     `-CStyleCastExpr 0x7ffe441814b0 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7ffe44181470 <col:53> '_A1' lvalue ParmVar 0x7ffe441801c0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7ffe44180388 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7ffe441803d0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe44181950 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1322:1, col:104> col:39 lrint 'long (float) noexcept' inline
| | |-ParmVarDecl 0x7ffe441818b8 <col:45, col:51> col:51 used __lcpp_x 'float'
| | |-CompoundStmt 0x7ffe44181b70 <col:77, col:104>
| | | `-ReturnStmt 0x7ffe44181b58 <col:78, col:102>
| | |   `-CallExpr 0x7ffe44181b10 <col:85, col:102> 'long'
| | |     |-ImplicitCastExpr 0x7ffe44181af8 <col:85, col:87> 'long (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe44181a68 <col:85, col:87> 'long (float)' lvalue Function 0x7ffe4391b868 'lrintf' 'long (float)'
| | |     `-ImplicitCastExpr 0x7ffe44181b40 <col:94> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe44181aa0 <col:94> 'float' lvalue ParmVar 0x7ffe441818b8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7ffe441819f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe44181a38 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe44181c70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1323:1, col:104> col:39 lrint 'long (long double) noexcept' inline
| | |-ParmVarDecl 0x7ffe44181bd8 <col:45, col:57> col:57 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7ffe44181e90 <col:77, col:104>
| | | `-ReturnStmt 0x7ffe44181e78 <col:78, col:102>
| | |   `-CallExpr 0x7ffe44181e30 <col:85, col:102> 'long'
| | |     |-ImplicitCastExpr 0x7ffe44181e18 <col:85, col:87> 'long (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe44181d88 <col:85, col:87> 'long (long double)' lvalue Function 0x7ffe4391bca8 'lrintl' 'long (long double)'
| | |     `-ImplicitCastExpr 0x7ffe44181e60 <col:94> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe44181dc0 <col:94> 'long double' lvalue ParmVar 0x7ffe44181bd8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7ffe44181d10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe44181d58 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7ffe44182440 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1325:1, line:1328:65> col:1 lrint
| | |-TemplateTypeParmDecl 0x7ffe44181eb0 <line:1325:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7ffe441823a8 <line:1326:1, line:1328:65> col:1 lrint 'typename std::enable_if<std::is_integral<_A1>::value, long>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7ffe44182290 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7ffe44182bf8 <col:31, col:65>
| |   | `-ReturnStmt 0x7ffe44182be0 <col:32, col:63>
| |   |   `-CallExpr 0x7ffe44182bb0 <col:39, col:63> 'long'
| |   |     |-ImplicitCastExpr 0x7ffe44182b98 <col:39, col:41> 'long (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7ffe44182b38 <col:39, col:41> 'long (double)' lvalue Function 0x7ffe4391ba88 'lrint' 'long (double)'
| |   |     `-CStyleCastExpr 0x7ffe441825c0 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7ffe44182580 <col:55> '_A1' lvalue ParmVar 0x7ffe44182290 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7ffe44182498 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7ffe441824e0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe44182cf8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1332:1, col:106> col:39 lround 'long (float) noexcept' inline
| | |-ParmVarDecl 0x7ffe44182c60 <col:46, col:52> col:52 used __lcpp_x 'float'
| | |-CompoundStmt 0x7ffe44182ee8 <col:78, col:106>
| | | `-ReturnStmt 0x7ffe44182ed0 <col:79, col:104>
| | |   `-CallExpr 0x7ffe44182e88 <col:86, col:104> 'long'
| | |     |-ImplicitCastExpr 0x7ffe44182e70 <col:86, col:88> 'long (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe44182e10 <col:86, col:88> 'long (float)' lvalue Function 0x7ffe4391c368 'lroundf' 'long (float)'
| | |     `-ImplicitCastExpr 0x7ffe44182eb8 <col:96> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe44182e48 <col:96> 'float' lvalue ParmVar 0x7ffe44182c60 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7ffe44182d98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe44182de0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe44182fe8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1333:1, col:106> col:39 lround 'long (long double) noexcept' inline
| | |-ParmVarDecl 0x7ffe44182f50 <col:46, col:58> col:58 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7ffe441831d8 <col:78, col:106>
| | | `-ReturnStmt 0x7ffe441831c0 <col:79, col:104>
| | |   `-CallExpr 0x7ffe44183178 <col:86, col:104> 'long'
| | |     |-ImplicitCastExpr 0x7ffe44183160 <col:86, col:88> 'long (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe44183100 <col:86, col:88> 'long (long double)' lvalue Function 0x7ffe4391c6a8 'lroundl' 'long (long double)'
| | |     `-ImplicitCastExpr 0x7ffe441831a8 <col:96> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe44183138 <col:96> 'long double' lvalue ParmVar 0x7ffe44182f50 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7ffe44183088 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe441830d0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7ffe441836a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1335:1, line:1338:67> col:1 lround
| | |-TemplateTypeParmDecl 0x7ffe441831f8 <line:1335:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7ffe44183608 <line:1336:1, line:1338:67> col:1 lround 'typename std::enable_if<std::is_integral<_A1>::value, long>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7ffe44183530 <col:8, col:12> col:12 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7ffe44183bc0 <col:32, col:67>
| |   | `-ReturnStmt 0x7ffe44183ba8 <col:33, col:65>
| |   |   `-CallExpr 0x7ffe44183b78 <col:40, col:65> 'long'
| |   |     |-ImplicitCastExpr 0x7ffe44183b60 <col:40, col:42> 'long (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7ffe44183b28 <col:40, col:42> 'long (double)' lvalue Function 0x7ffe4391c508 'lround' 'long (double)'
| |   |     `-CStyleCastExpr 0x7ffe44183820 <col:49, col:57> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7ffe441837e0 <col:57> '_A1' lvalue ParmVar 0x7ffe44183530 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7ffe441836f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7ffe44183740 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe44183cc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1344:1, col:119> col:46 nearbyint 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7ffe44183c28 <col:56, col:62> col:62 used __lcpp_x 'float'
| | |-CompoundStmt 0x7ffe44183eb0 <col:88, col:119>
| | | `-ReturnStmt 0x7ffe44183e98 <col:89, col:117>
| | |   `-CallExpr 0x7ffe44183e50 <col:96, col:117> 'float'
| | |     |-ImplicitCastExpr 0x7ffe44183e38 <col:96, col:98> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe44183dd8 <col:96, col:98> 'float (float)' lvalue Function 0x7ffe4391ae68 'nearbyintf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7ffe44183e80 <col:109> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe44183e10 <col:109> 'float' lvalue ParmVar 0x7ffe44183c28 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7ffe44183d60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe44183da8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe44183fb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1345:1, col:119> col:46 nearbyint 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7ffe44183f18 <col:56, col:68> col:68 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7ffe441841a0 <col:88, col:119>
| | | `-ReturnStmt 0x7ffe44184188 <col:89, col:117>
| | |   `-CallExpr 0x7ffe44184140 <col:96, col:117> 'long double'
| | |     |-ImplicitCastExpr 0x7ffe44184128 <col:96, col:98> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe441840c8 <col:96, col:98> 'long double (long double)' lvalue Function 0x7ffe4391b1a8 'nearbyintl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7ffe44184170 <col:109> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe44184100 <col:109> 'long double' lvalue ParmVar 0x7ffe44183f18 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7ffe44184050 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe44184098 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7ffe44184660 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1347:1, line:1350:73> col:1 nearbyint
| | |-TemplateTypeParmDecl 0x7ffe441841c0 <line:1347:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7ffe441845c8 <line:1348:1, line:1350:73> col:1 nearbyint 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7ffe441844f0 <col:11, col:15> col:15 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7ffe44184b80 <col:35, col:73>
| |   | `-ReturnStmt 0x7ffe44184b68 <col:36, col:71>
| |   |   `-CallExpr 0x7ffe44184b38 <col:43, col:71> 'double'
| |   |     |-ImplicitCastExpr 0x7ffe44184b20 <col:43, col:45> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7ffe44184ae8 <col:43, col:45> 'double (double)' lvalue Function 0x7ffe4391b008 'nearbyint' 'double (double)'
| |   |     `-CStyleCastExpr 0x7ffe441847e0 <col:55, col:63> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7ffe441847a0 <col:63> '_A1' lvalue ParmVar 0x7ffe441844f0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7ffe441846b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7ffe44184700 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe44184d00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1354:1, col:151> col:46 nextafter 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7ffe44184be8 <col:56, col:62> col:62 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7ffe44184c60 <col:72, col:78> col:78 used __lcpp_y 'float'
| | |-CompoundStmt 0x7ffe44184f40 <col:110, col:151>
| | | `-ReturnStmt 0x7ffe44184f28 <col:111, col:149>
| | |   `-CallExpr 0x7ffe44184ec0 <col:118, col:149> 'float'
| | |     |-ImplicitCastExpr 0x7ffe44184ea8 <col:118, col:120> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe44184e20 <col:118, col:120> 'float (float, float)' lvalue Function 0x7ffe4391fb68 'nextafterf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7ffe44184ef8 <col:131> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7ffe44184e58 <col:131> 'float' lvalue ParmVar 0x7ffe44184be8 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7ffe44184f10 <col:141> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe44184e80 <col:141> 'float' lvalue ParmVar 0x7ffe44184c60 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7ffe44184da8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe44184df0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe441850c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1355:1, col:151> col:46 nextafter 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7ffe44184fa8 <col:56, col:68> col:68 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7ffe44185020 <col:78, col:90> col:90 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7ffe44185300 <col:110, col:151>
| | | `-ReturnStmt 0x7ffe441852e8 <col:111, col:149>
| | |   `-CallExpr 0x7ffe44185280 <col:118, col:149> 'long double'
| | |     |-ImplicitCastExpr 0x7ffe44185268 <col:118, col:120> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe441851e0 <col:118, col:120> 'long double (long double, long double)' lvalue Function 0x7ffe4391ffb8 'nextafterl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7ffe441852b8 <col:131> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7ffe44185218 <col:131> 'long double' lvalue ParmVar 0x7ffe44184fa8 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7ffe441852d0 <col:141> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe44185240 <col:141> 'long double' lvalue ParmVar 0x7ffe44185020 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7ffe44185168 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe441851b0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7ffe44185b60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1357:1, line:1371:1> line:1365:1 nextafter
| | |-TemplateTypeParmDecl 0x7ffe44185320 <line:1357:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7ffe44185388 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7ffe44185ac8 <line:1358:1, line:1371:1> line:1365:1 nextafter 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7ffe44185970 <col:11, col:15> col:15 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7ffe441859e0 <col:25, col:29> col:29 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7ffe44186388 <line:1366:1, line:1371:1>
| |   | |-DeclStmt 0x7ffe44185dd8 <line:1367:5, col:66>
| |   | | `-TypedefDecl 0x7ffe44185d80 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7ffe44185d10 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7ffe441861d0 <line:1368:5, line:1369:68>
| |   | | `-StaticAssertDecl 0x7ffe44186198 <line:1368:5, line:1369:67> line:1368:5
| |   | |   |-ParenExpr 0x7ffe44186150 <col:19, line:1369:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7ffe44186130 <line:1368:20, line:1369:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7ffe44186110 <line:1368:21, line:1369:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7ffe441860e8 <line:1368:22, line:1369:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7ffe44185f48 <line:1368:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7ffe441860a8 <line:1369:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7ffe44186170 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7ffe44186370 <line:1370:5, col:72>
| |   |   `-CallExpr 0x7ffe44186338 <col:12, col:72> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7ffe44186208 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'nextafter' 0x7ffe4391fd90 0x7ffe44184d00 0x7ffe441850c0 0x7ffe44185b60
| |   |     |-CStyleCastExpr 0x7ffe441862b0 <col:24, col:39> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7ffe44186278 <col:39> '_A1' lvalue ParmVar 0x7ffe44185970 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7ffe44186310 <col:49, col:64> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7ffe441862d8 <col:64> '_A2' lvalue ParmVar 0x7ffe441859e0 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7ffe44185bc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7ffe44185c08 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe44186518 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1375:1, col:153> col:46 nexttoward 'float (float, long double) noexcept' inline
| | |-ParmVarDecl 0x7ffe44186400 <col:57, col:63> col:63 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7ffe44186478 <col:73, col:85> col:85 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7ffe44186780 <col:111, col:153>
| | | `-ReturnStmt 0x7ffe44186768 <col:112, col:151>
| | |   `-CallExpr 0x7ffe44186700 <col:119, col:151> 'float'
| | |     |-ImplicitCastExpr 0x7ffe441866e8 <col:119, col:121> 'float (*)(float, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe44186638 <col:119, col:121> 'float (float, long double)' lvalue Function 0x7ffe439114d8 'nexttowardf' 'float (float, long double)'
| | |     |-ImplicitCastExpr 0x7ffe44186738 <col:133> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7ffe44186670 <col:133> 'float' lvalue ParmVar 0x7ffe44186400 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7ffe44186750 <col:143> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe44186698 <col:143> 'long double' lvalue ParmVar 0x7ffe44186478 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7ffe441865c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe44186608 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe44186900 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1376:1, col:153> col:46 nexttoward 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7ffe441867e8 <col:57, col:69> col:69 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7ffe44186860 <col:79, col:91> col:91 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7ffe44186b40 <col:111, col:153>
| | | `-ReturnStmt 0x7ffe44186b28 <col:112, col:151>
| | |   `-CallExpr 0x7ffe44186ac0 <col:119, col:151> 'long double'
| | |     |-ImplicitCastExpr 0x7ffe44186aa8 <col:119, col:121> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe44186a20 <col:119, col:121> 'long double (long double, long double)' lvalue Function 0x7ffe43911740 'nexttowardl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7ffe44186af8 <col:133> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7ffe44186a58 <col:133> 'long double' lvalue ParmVar 0x7ffe441867e8 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7ffe44186b10 <col:143> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe44186a80 <col:143> 'long double' lvalue ParmVar 0x7ffe44186860 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7ffe441869a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe441869f0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7ffe441870d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1378:1, line:1381:107> col:1 nexttoward
| | |-TemplateTypeParmDecl 0x7ffe44186b60 <line:1378:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7ffe44187038 <line:1379:1, line:1381:107> col:1 nexttoward 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1, long double) noexcept' inline
| |   |-ParmVarDecl 0x7ffe44186e90 <col:12, col:16> col:16 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7ffe44186f08 <col:26, col:38> col:38 referenced __lcpp_y 'long double'
| |   |-CompoundStmt 0x7ffe44187668 <col:58, col:107>
| |   | `-ReturnStmt 0x7ffe44187650 <col:59, col:105>
| |   |   `-CallExpr 0x7ffe44187600 <col:66, col:105> 'double'
| |   |     |-ImplicitCastExpr 0x7ffe441875e8 <col:66, col:68> 'double (*)(double, long double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7ffe44187588 <col:66, col:68> 'double (double, long double)' lvalue Function 0x7ffe43920228 'nexttoward' 'double (double, long double)'
| |   |     |-CStyleCastExpr 0x7ffe44187258 <col:79, col:87> 'double' <Dependent>
| |   |     | `-DeclRefExpr 0x7ffe44187218 <col:87> '_A1' lvalue ParmVar 0x7ffe44186e90 '__lcpp_x' '_A1'
| |   |     `-ImplicitCastExpr 0x7ffe44187638 <col:97> 'long double' <LValueToRValue>
| |   |       `-DeclRefExpr 0x7ffe44187280 <col:97> 'long double' lvalue ParmVar 0x7ffe44186f08 '__lcpp_y' 'long double'
| |   |-AlwaysInlineAttr 0x7ffe44187130 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7ffe44187178 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe441877e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1385:1, col:151> col:46 remainder 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7ffe441876d0 <col:56, col:62> col:62 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7ffe44187748 <col:72, col:78> col:78 used __lcpp_y 'float'
| | |-CompoundStmt 0x7ffe44187a28 <col:110, col:151>
| | | `-ReturnStmt 0x7ffe44187a10 <col:111, col:149>
| | |   `-CallExpr 0x7ffe441879a8 <col:118, col:149> 'float'
| | |     |-ImplicitCastExpr 0x7ffe44187990 <col:118, col:120> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe44187908 <col:118, col:120> 'float (float, float)' lvalue Function 0x7ffe4391dfd8 'remainderf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7ffe441879e0 <col:131> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7ffe44187940 <col:131> 'float' lvalue ParmVar 0x7ffe441876d0 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7ffe441879f8 <col:141> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe44187968 <col:141> 'float' lvalue ParmVar 0x7ffe44187748 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7ffe44187890 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe441878d8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe44187ba8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1386:1, col:151> col:46 remainder 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7ffe44187a90 <col:56, col:68> col:68 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7ffe44187b08 <col:78, col:90> col:90 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7ffe44187de8 <col:110, col:151>
| | | `-ReturnStmt 0x7ffe44187dd0 <col:111, col:149>
| | |   `-CallExpr 0x7ffe44187d68 <col:118, col:149> 'long double'
| | |     |-ImplicitCastExpr 0x7ffe44187d50 <col:118, col:120> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe44187cc8 <col:118, col:120> 'long double (long double, long double)' lvalue Function 0x7ffe4391e438 'remainderl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7ffe44187da0 <col:131> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7ffe44187d00 <col:131> 'long double' lvalue ParmVar 0x7ffe44187a90 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7ffe44187db8 <col:141> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe44187d28 <col:141> 'long double' lvalue ParmVar 0x7ffe44187b08 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7ffe44187c50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe44187c98 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7ffe44188650 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1388:1, line:1402:1> line:1396:1 remainder
| | |-TemplateTypeParmDecl 0x7ffe44187e08 <line:1388:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7ffe44187e78 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7ffe441885b8 <line:1389:1, line:1402:1> line:1396:1 remainder 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7ffe44188460 <col:11, col:15> col:15 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7ffe441884d0 <col:25, col:29> col:29 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7ffe44188e78 <line:1397:1, line:1402:1>
| |   | |-DeclStmt 0x7ffe441888c8 <line:1398:5, col:66>
| |   | | `-TypedefDecl 0x7ffe44188870 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7ffe44188800 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7ffe44188cc0 <line:1399:5, line:1400:68>
| |   | | `-StaticAssertDecl 0x7ffe44188c88 <line:1399:5, line:1400:67> line:1399:5
| |   | |   |-ParenExpr 0x7ffe44188c40 <col:19, line:1400:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7ffe44188c20 <line:1399:20, line:1400:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7ffe44188c00 <line:1399:21, line:1400:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7ffe44188bd8 <line:1399:22, line:1400:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7ffe44188a38 <line:1399:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7ffe44188b98 <line:1400:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7ffe44188c60 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7ffe44188e60 <line:1401:5, col:72>
| |   |   `-CallExpr 0x7ffe44188e28 <col:12, col:72> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7ffe44188cf8 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'remainder' 0x7ffe4391e200 0x7ffe441877e8 0x7ffe44187ba8 0x7ffe44188650
| |   |     |-CStyleCastExpr 0x7ffe44188da0 <col:24, col:39> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7ffe44188d68 <col:39> '_A1' lvalue ParmVar 0x7ffe44188460 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7ffe44188e00 <col:49, col:64> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7ffe44188dc8 <col:64> '_A2' lvalue ParmVar 0x7ffe441884d0 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7ffe441886b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7ffe441886f8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe441890d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1406:1, col:170> col:46 remquo 'float (float, float, int *) noexcept' inline
| | |-ParmVarDecl 0x7ffe44188ef0 <col:53, col:59> col:59 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7ffe44188f68 <col:69, col:75> col:75 used __lcpp_y 'float'
| | |-ParmVarDecl 0x7ffe44188fe0 <col:85, col:90> col:90 used __lcpp_z 'int *'
| | |-CompoundStmt 0x7ffe44189390 <col:122, col:170>
| | | `-ReturnStmt 0x7ffe44189378 <col:123, col:168>
| | |   `-CallExpr 0x7ffe441892f0 <col:130, col:168> 'float'
| | |     |-ImplicitCastExpr 0x7ffe441892d8 <col:130, col:132> 'float (*)(float, float, int *)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe441891f8 <col:130, col:132> 'float (float, float, int *)' lvalue Function 0x7ffe4391e728 'remquof' 'float (float, float, int *)'
| | |     |-ImplicitCastExpr 0x7ffe44189330 <col:140> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7ffe44189230 <col:140> 'float' lvalue ParmVar 0x7ffe44188ef0 '__lcpp_x' 'float'
| | |     |-ImplicitCastExpr 0x7ffe44189348 <col:150> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7ffe44189258 <col:150> 'float' lvalue ParmVar 0x7ffe44188f68 '__lcpp_y' 'float'
| | |     `-ImplicitCastExpr 0x7ffe44189360 <col:160> 'int *' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe44189280 <col:160> 'int *' lvalue ParmVar 0x7ffe44188fe0 '__lcpp_z' 'int *'
| | |-AlwaysInlineAttr 0x7ffe44189180 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe441891c8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe441895e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1407:1, col:170> col:46 remquo 'long double (long double, long double, int *) noexcept' inline
| | |-ParmVarDecl 0x7ffe44189400 <col:53, col:65> col:65 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7ffe44189478 <col:75, col:87> col:87 used __lcpp_y 'long double'
| | |-ParmVarDecl 0x7ffe441894f0 <col:97, col:102> col:102 used __lcpp_z 'int *'
| | |-CompoundStmt 0x7ffe441898a0 <col:122, col:170>
| | | `-ReturnStmt 0x7ffe44189888 <col:123, col:168>
| | |   `-CallExpr 0x7ffe44189800 <col:130, col:168> 'long double'
| | |     |-ImplicitCastExpr 0x7ffe441897e8 <col:130, col:132> 'long double (*)(long double, long double, int *)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe44189708 <col:130, col:132> 'long double (long double, long double, int *)' lvalue Function 0x7ffe4391ec68 'remquol' 'long double (long double, long double, int *)'
| | |     |-ImplicitCastExpr 0x7ffe44189840 <col:140> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7ffe44189740 <col:140> 'long double' lvalue ParmVar 0x7ffe44189400 '__lcpp_x' 'long double'
| | |     |-ImplicitCastExpr 0x7ffe44189858 <col:150> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7ffe44189768 <col:150> 'long double' lvalue ParmVar 0x7ffe44189478 '__lcpp_y' 'long double'
| | |     `-ImplicitCastExpr 0x7ffe44189870 <col:160> 'int *' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe44189790 <col:160> 'int *' lvalue ParmVar 0x7ffe441894f0 '__lcpp_z' 'int *'
| | |-AlwaysInlineAttr 0x7ffe44189690 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe441896d8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7ffe4418a1e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1409:1, line:1423:1> line:1417:1 remquo
| | |-TemplateTypeParmDecl 0x7ffe441898c0 <line:1409:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7ffe44189928 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7ffe4418a148 <line:1410:1, line:1423:1> line:1417:1 remquo 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2, int *) noexcept' inline
| |   |-ParmVarDecl 0x7ffe44189f10 <col:8, col:12> col:12 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7ffe44189f80 <col:22, col:26> col:26 referenced __lcpp_y '_A2'
| |   |-ParmVarDecl 0x7ffe44189ff8 <col:36, col:41> col:41 referenced __lcpp_z 'int *'
| |   |-CompoundStmt 0x7ffe4418aa38 <line:1418:1, line:1423:1>
| |   | |-DeclStmt 0x7ffe4418a458 <line:1419:5, col:66>
| |   | | `-TypedefDecl 0x7ffe4418a400 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7ffe4418a390 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7ffe4418a850 <line:1420:5, line:1421:68>
| |   | | `-StaticAssertDecl 0x7ffe4418a818 <line:1420:5, line:1421:67> line:1420:5
| |   | |   |-ParenExpr 0x7ffe4418a7d0 <col:19, line:1421:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7ffe4418a7b0 <line:1420:20, line:1421:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7ffe4418a790 <line:1420:21, line:1421:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7ffe4418a768 <line:1420:22, line:1421:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7ffe4418a5c8 <line:1420:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7ffe4418a728 <line:1421:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7ffe4418a7f0 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7ffe4418aa20 <line:1422:5, col:79>
| |   |   `-CallExpr 0x7ffe4418a9e0 <col:12, col:79> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7ffe4418a888 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'remquo' 0x7ffe4391e9c8 0x7ffe441890d0 0x7ffe441895e0 0x7ffe4418a1e0
| |   |     |-CStyleCastExpr 0x7ffe4418a930 <col:21, col:36> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7ffe4418a8f8 <col:36> '_A1' lvalue ParmVar 0x7ffe44189f10 '__lcpp_x' '_A1'
| |   |     |-CStyleCastExpr 0x7ffe4418a990 <col:46, col:61> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7ffe4418a958 <col:61> '_A2' lvalue ParmVar 0x7ffe44189f80 '__lcpp_y' '_A2'
| |   |     `-DeclRefExpr 0x7ffe4418a9b8 <col:71> 'int *' lvalue ParmVar 0x7ffe44189ff8 '__lcpp_z' 'int *'
| |   |-AlwaysInlineAttr 0x7ffe4418a248 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7ffe4418a290 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe4418ab48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1427:1, col:109> col:46 rint 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7ffe4418aab0 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7ffe4418ad38 <col:83, col:109>
| | | `-ReturnStmt 0x7ffe4418ad20 <col:84, col:107>
| | |   `-CallExpr 0x7ffe4418acd8 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7ffe4418acc0 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe4418ac60 <col:91, col:93> 'float (float)' lvalue Function 0x7ffe4391b348 'rintf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7ffe4418ad08 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe4418ac98 <col:99> 'float' lvalue ParmVar 0x7ffe4418aab0 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7ffe4418abe8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe4418ac30 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe4418ae38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1428:1, col:109> col:46 rint 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7ffe4418ada0 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7ffe4418b028 <col:83, col:109>
| | | `-ReturnStmt 0x7ffe4418b010 <col:84, col:107>
| | |   `-CallExpr 0x7ffe4418afc8 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7ffe4418afb0 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe4418af50 <col:91, col:93> 'long double (long double)' lvalue Function 0x7ffe4391b690 'rintl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7ffe4418aff8 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe4418af88 <col:99> 'long double' lvalue ParmVar 0x7ffe4418ada0 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7ffe4418aed8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe4418af20 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7ffe4418b4f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1430:1, line:1433:63> col:1 rint
| | |-TemplateTypeParmDecl 0x7ffe4418b048 <line:1430:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7ffe4418b458 <line:1431:1, line:1433:63> col:1 rint 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7ffe4418b380 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7ffe4418ba10 <col:30, col:63>
| |   | `-ReturnStmt 0x7ffe4418b9f8 <col:31, col:61>
| |   |   `-CallExpr 0x7ffe4418b9c8 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7ffe4418b9b0 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7ffe4418b978 <col:38, col:40> 'double (double)' lvalue Function 0x7ffe4391b4f0 'rint' 'double (double)'
| |   |     `-CStyleCastExpr 0x7ffe4418b670 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7ffe4418b630 <col:53> '_A1' lvalue ParmVar 0x7ffe4418b380 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7ffe4418b548 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7ffe4418b590 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe4418bb10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1437:1, col:111> col:46 round 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7ffe4418ba78 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7ffe4418bd00 <col:84, col:111>
| | | `-ReturnStmt 0x7ffe4418bce8 <col:85, col:109>
| | |   `-CallExpr 0x7ffe4418bca0 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7ffe4418bc88 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe4418bc28 <col:92, col:94> 'float (float)' lvalue Function 0x7ffe4391be88 'roundf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7ffe4418bcd0 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe4418bc60 <col:101> 'float' lvalue ParmVar 0x7ffe4418ba78 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7ffe4418bbb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe4418bbf8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe4418be00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1438:1, col:111> col:46 round 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7ffe4418bd68 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7ffe4418bff0 <col:84, col:111>
| | | `-ReturnStmt 0x7ffe4418bfd8 <col:85, col:109>
| | |   `-CallExpr 0x7ffe4418bf90 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7ffe4418bf78 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe4418bf18 <col:92, col:94> 'long double (long double)' lvalue Function 0x7ffe4391c1c8 'roundl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7ffe4418bfc0 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe4418bf50 <col:101> 'long double' lvalue ParmVar 0x7ffe4418bd68 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7ffe4418bea0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe4418bee8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7ffe4418c4b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1440:1, line:1443:65> col:1 round
| | |-TemplateTypeParmDecl 0x7ffe4418c010 <line:1440:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7ffe4418c418 <line:1441:1, line:1443:65> col:1 round 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7ffe4418c340 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7ffe4418c9d0 <col:31, col:65>
| |   | `-ReturnStmt 0x7ffe4418c9b8 <col:32, col:63>
| |   |   `-CallExpr 0x7ffe4418c988 <col:39, col:63> 'double'
| |   |     |-ImplicitCastExpr 0x7ffe4418c970 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7ffe4418c938 <col:39, col:41> 'double (double)' lvalue Function 0x7ffe4391c028 'round' 'double (double)'
| |   |     `-CStyleCastExpr 0x7ffe4418c630 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7ffe4418c5f0 <col:55> '_A1' lvalue ParmVar 0x7ffe4418c340 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7ffe4418c508 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7ffe4418c550 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe4418cb50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1447:1, col:140> col:46 scalbln 'float (float, long) noexcept' inline
| | |-ParmVarDecl 0x7ffe4418ca38 <col:54, col:60> col:60 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7ffe4418cab0 <col:70, col:75> col:75 used __lcpp_y 'long'
| | |-CompoundStmt 0x7ffe4418cdc0 <col:101, col:140>
| | | `-ReturnStmt 0x7ffe4418cda8 <col:102, col:138>
| | |   `-CallExpr 0x7ffe4418cd40 <col:109, col:138> 'float'
| | |     |-ImplicitCastExpr 0x7ffe4418cd28 <col:109, col:111> 'float (*)(float, long)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe4418cc70 <col:109, col:111> 'float (float, long)' lvalue Function 0x7ffe43916da8 'scalblnf' 'float (float, long)'
| | |     |-ImplicitCastExpr 0x7ffe4418cd78 <col:120> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7ffe4418cca8 <col:120> 'float' lvalue ParmVar 0x7ffe4418ca38 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7ffe4418cd90 <col:130> 'long' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe4418ccd0 <col:130> 'long' lvalue ParmVar 0x7ffe4418cab0 '__lcpp_y' 'long'
| | |-AlwaysInlineAttr 0x7ffe4418cbf8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe4418cc40 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe4418cf40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1448:1, col:140> col:46 scalbln 'long double (long double, long) noexcept' inline
| | |-ParmVarDecl 0x7ffe4418ce28 <col:54, col:66> col:66 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7ffe4418cea0 <col:76, col:81> col:81 used __lcpp_y 'long'
| | |-CompoundStmt 0x7ffe4418d1b0 <col:101, col:140>
| | | `-ReturnStmt 0x7ffe4418d198 <col:102, col:138>
| | |   `-CallExpr 0x7ffe4418d130 <col:109, col:138> 'long double'
| | |     |-ImplicitCastExpr 0x7ffe4418d118 <col:109, col:111> 'long double (*)(long double, long)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe4418d060 <col:109, col:111> 'long double (long double, long)' lvalue Function 0x7ffe43917308 'scalblnl' 'long double (long double, long)'
| | |     |-ImplicitCastExpr 0x7ffe4418d168 <col:120> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7ffe4418d098 <col:120> 'long double' lvalue ParmVar 0x7ffe4418ce28 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7ffe4418d180 <col:130> 'long' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe4418d0c0 <col:130> 'long' lvalue ParmVar 0x7ffe4418cea0 '__lcpp_y' 'long'
| | |-AlwaysInlineAttr 0x7ffe4418cfe8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe4418d030 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7ffe4418d770 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1450:1, line:1453:94> col:1 scalbln
| | |-TemplateTypeParmDecl 0x7ffe4418d1d0 <line:1450:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7ffe4418d6d8 <line:1451:1, line:1453:94> col:1 scalbln 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1, long) noexcept' inline
| |   |-ParmVarDecl 0x7ffe4418d530 <col:9, col:13> col:13 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7ffe4418d5a8 <col:23, col:28> col:28 referenced __lcpp_y 'long'
| |   |-CompoundStmt 0x7ffe4418dd08 <col:48, col:94>
| |   | `-ReturnStmt 0x7ffe4418dcf0 <col:49, col:92>
| |   |   `-CallExpr 0x7ffe4418dca0 <col:56, col:92> 'double'
| |   |     |-ImplicitCastExpr 0x7ffe4418dc88 <col:56, col:58> 'double (*)(double, long)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7ffe4418dc28 <col:56, col:58> 'double (double, long)' lvalue Function 0x7ffe43917058 'scalbln' 'double (double, long)'
| |   |     |-CStyleCastExpr 0x7ffe4418d8f8 <col:66, col:74> 'double' <Dependent>
| |   |     | `-DeclRefExpr 0x7ffe4418d8b8 <col:74> '_A1' lvalue ParmVar 0x7ffe4418d530 '__lcpp_x' '_A1'
| |   |     `-ImplicitCastExpr 0x7ffe4418dcd8 <col:84> 'long' <LValueToRValue>
| |   |       `-DeclRefExpr 0x7ffe4418d920 <col:84> 'long' lvalue ParmVar 0x7ffe4418d5a8 '__lcpp_y' 'long'
| |   |-AlwaysInlineAttr 0x7ffe4418d7d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7ffe4418d818 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe4418de88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1457:1, col:137> col:46 scalbn 'float (float, int) noexcept' inline
| | |-ParmVarDecl 0x7ffe4418dd70 <col:53, col:59> col:59 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7ffe4418dde8 <col:69, col:73> col:73 used __lcpp_y 'int'
| | |-CompoundStmt 0x7ffe4418e0c8 <col:99, col:137>
| | | `-ReturnStmt 0x7ffe4418e0b0 <col:100, col:135>
| | |   `-CallExpr 0x7ffe4418e048 <col:107, col:135> 'float'
| | |     |-ImplicitCastExpr 0x7ffe4418e030 <col:107, col:109> 'float (*)(float, int)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe4418dfa8 <col:107, col:109> 'float (float, int)' lvalue Function 0x7ffe439166e8 'scalbnf' 'float (float, int)'
| | |     |-ImplicitCastExpr 0x7ffe4418e080 <col:117> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7ffe4418dfe0 <col:117> 'float' lvalue ParmVar 0x7ffe4418dd70 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7ffe4418e098 <col:127> 'int' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe4418e008 <col:127> 'int' lvalue ParmVar 0x7ffe4418dde8 '__lcpp_y' 'int'
| | |-AlwaysInlineAttr 0x7ffe4418df30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe4418df78 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe4418e248 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1458:1, col:137> col:46 scalbn 'long double (long double, int) noexcept' inline
| | |-ParmVarDecl 0x7ffe4418e130 <col:53, col:65> col:65 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7ffe4418e1a8 <col:75, col:79> col:79 used __lcpp_y 'int'
| | |-CompoundStmt 0x7ffe4418e488 <col:99, col:137>
| | | `-ReturnStmt 0x7ffe4418e470 <col:100, col:135>
| | |   `-CallExpr 0x7ffe4418e408 <col:107, col:135> 'long double'
| | |     |-ImplicitCastExpr 0x7ffe4418e3f0 <col:107, col:109> 'long double (*)(long double, int)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe4418e368 <col:107, col:109> 'long double (long double, int)' lvalue Function 0x7ffe43916b38 'scalbnl' 'long double (long double, int)'
| | |     |-ImplicitCastExpr 0x7ffe4418e440 <col:117> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7ffe4418e3a0 <col:117> 'long double' lvalue ParmVar 0x7ffe4418e130 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7ffe4418e458 <col:127> 'int' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe4418e3c8 <col:127> 'int' lvalue ParmVar 0x7ffe4418e1a8 '__lcpp_y' 'int'
| | |-AlwaysInlineAttr 0x7ffe4418e2f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe4418e338 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7ffe4418e9e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1460:1, line:1463:91> col:1 scalbn
| | |-TemplateTypeParmDecl 0x7ffe4418e4a8 <line:1460:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7ffe4418e948 <line:1461:1, line:1463:91> col:1 scalbn 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1, int) noexcept' inline
| |   |-ParmVarDecl 0x7ffe4418e7e0 <col:8, col:12> col:12 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7ffe4418e858 <col:22, col:26> col:26 referenced __lcpp_y 'int'
| |   |-CompoundStmt 0x7ffe4418ef50 <col:46, col:91>
| |   | `-ReturnStmt 0x7ffe4418ef38 <col:47, col:89>
| |   |   `-CallExpr 0x7ffe4418eee8 <col:54, col:89> 'double'
| |   |     |-ImplicitCastExpr 0x7ffe4418eed0 <col:54, col:56> 'double (*)(double, int)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7ffe4418ee98 <col:54, col:56> 'double (double, int)' lvalue Function 0x7ffe43916910 'scalbn' 'double (double, int)'
| |   |     |-CStyleCastExpr 0x7ffe4418eb68 <col:63, col:71> 'double' <Dependent>
| |   |     | `-DeclRefExpr 0x7ffe4418eb28 <col:71> '_A1' lvalue ParmVar 0x7ffe4418e7e0 '__lcpp_x' '_A1'
| |   |     `-ImplicitCastExpr 0x7ffe4418ef20 <col:81> 'int' <LValueToRValue>
| |   |       `-DeclRefExpr 0x7ffe4418eb90 <col:81> 'int' lvalue ParmVar 0x7ffe4418e858 '__lcpp_y' 'int'
| |   |-AlwaysInlineAttr 0x7ffe4418ea40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7ffe4418ea88 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe4418f050 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1467:1, col:113> col:46 tgamma 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7ffe4418efb8 <col:53, col:59> col:59 used __lcpp_x 'float'
| | |-CompoundStmt 0x7ffe4418f240 <col:85, col:113>
| | | `-ReturnStmt 0x7ffe4418f228 <col:86, col:111>
| | |   `-CallExpr 0x7ffe4418f1e0 <col:93, col:111> 'float'
| | |     |-ImplicitCastExpr 0x7ffe4418f1c8 <col:93, col:95> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe4418f168 <col:93, col:95> 'float (float)' lvalue Function 0x7ffe43919fc0 'tgammaf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7ffe4418f210 <col:103> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe4418f1a0 <col:103> 'float' lvalue ParmVar 0x7ffe4418efb8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7ffe4418f0f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe4418f138 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe4418f340 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1468:1, col:113> col:46 tgamma 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7ffe4418f2a8 <col:53, col:65> col:65 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7ffe4418f530 <col:85, col:113>
| | | `-ReturnStmt 0x7ffe4418f518 <col:86, col:111>
| | |   `-CallExpr 0x7ffe4418f4d0 <col:93, col:111> 'long double'
| | |     |-ImplicitCastExpr 0x7ffe4418f4b8 <col:93, col:95> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe4418f458 <col:93, col:95> 'long double (long double)' lvalue Function 0x7ffe4391a300 'tgammal' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7ffe4418f500 <col:103> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe4418f490 <col:103> 'long double' lvalue ParmVar 0x7ffe4418f2a8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7ffe4418f3e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe4418f428 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7ffe4418f9f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1470:1, line:1473:67> col:1 tgamma
| | |-TemplateTypeParmDecl 0x7ffe4418f550 <line:1470:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7ffe4418f958 <line:1471:1, line:1473:67> col:1 tgamma 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7ffe4418f880 <col:8, col:12> col:12 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7ffe4418ff10 <col:32, col:67>
| |   | `-ReturnStmt 0x7ffe4418fef8 <col:33, col:65>
| |   |   `-CallExpr 0x7ffe4418fec8 <col:40, col:65> 'double'
| |   |     |-ImplicitCastExpr 0x7ffe4418feb0 <col:40, col:42> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7ffe4418fe78 <col:40, col:42> 'double (double)' lvalue Function 0x7ffe4391a160 'tgamma' 'double (double)'
| |   |     `-CStyleCastExpr 0x7ffe4418fb70 <col:49, col:57> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7ffe4418fb30 <col:57> '_A1' lvalue ParmVar 0x7ffe4418f880 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7ffe4418fa48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7ffe4418fa90 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe44190010 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1477:1, col:111> col:46 trunc 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7ffe4418ff78 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7ffe44190200 <col:84, col:111>
| | | `-ReturnStmt 0x7ffe441901e8 <col:85, col:109>
| | |   `-CallExpr 0x7ffe441901a0 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7ffe44190188 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe44190128 <col:92, col:94> 'float (float)' lvalue Function 0x7ffe4391d400 'truncf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7ffe441901d0 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe44190160 <col:101> 'float' lvalue ParmVar 0x7ffe4418ff78 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7ffe441900b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe441900f8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7ffe44190300 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1478:1, col:111> col:46 trunc 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7ffe44190268 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7ffe441904f0 <col:84, col:111>
| | | `-ReturnStmt 0x7ffe441904d8 <col:85, col:109>
| | |   `-CallExpr 0x7ffe44190490 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7ffe44190478 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7ffe44190418 <col:92, col:94> 'long double (long double)' lvalue Function 0x7ffe4391d740 'truncl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7ffe441904c0 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7ffe44190450 <col:101> 'long double' lvalue ParmVar 0x7ffe44190268 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7ffe441903a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7ffe441903e8 <col:51, col:74> Hidden
| `-FunctionTemplateDecl 0x7ffe441909b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1480:1, line:1483:65> col:1 trunc
|   |-TemplateTypeParmDecl 0x7ffe44190510 <line:1480:11, col:17> col:17 referenced class depth 0 index 0 _A1
|   `-FunctionDecl 0x7ffe44190918 <line:1481:1, line:1483:65> col:1 trunc 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
|     |-ParmVarDecl 0x7ffe44190840 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
|     |-CompoundStmt 0x7ffe44190ed0 <col:31, col:65>
|     | `-ReturnStmt 0x7ffe44190eb8 <col:32, col:63>
|     |   `-CallExpr 0x7ffe44190e88 <col:39, col:63> 'double'
|     |     |-ImplicitCastExpr 0x7ffe44190e70 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
|     |     | `-DeclRefExpr 0x7ffe44190e38 <col:39, col:41> 'double (double)' lvalue Function 0x7ffe4391d5a0 'trunc' 'double (double)'
|     |     `-CStyleCastExpr 0x7ffe44190b30 <col:47, col:55> 'double' <Dependent>
|     |       `-DeclRefExpr 0x7ffe44190af0 <col:55> '_A1' lvalue ParmVar 0x7ffe44190840 '__lcpp_x' '_A1'
|     |-AlwaysInlineAttr 0x7ffe44190a08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|     `-VisibilityAttr 0x7ffe44190a50 <col:51, col:74> Hidden
|-LinkageSpecDecl 0x7ffe43943858 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:439:12> col:12 implicit C
| `-FunctionDecl 0x7ffe439438a8 <col:12> col:12 implicit referenced __builtin_addressof 'void *(void &) noexcept' extern
|   |-ParmVarDecl 0x7ffe43943940 <<invalid sloc>> <invalid sloc> 'void &'
|   |-NoThrowAttr 0x7ffe439439a8 <col:12> Implicit
|   `-ConstAttr 0x7ffe439439f0 <col:12> Implicit
|-LinkageSpecDecl 0x7ffe4411e340 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:331:90> col:90 implicit C
| `-FunctionDecl 0x7ffe4411e390 <col:90> col:90 implicit used __builtin_huge_valf 'float (void) noexcept' extern
|   |-NoThrowAttr 0x7ffe4411e428 <col:90> Implicit
|   `-ConstAttr 0x7ffe4411e470 <col:90> Implicit
|-LinkageSpecDecl 0x7ffe4411e520 <line:332:91> col:91 implicit C
| `-FunctionDecl 0x7ffe4411e570 <col:91> col:91 implicit used __builtin_nanf 'float (const char *) noexcept' extern
|   |-ParmVarDecl 0x7ffe4411e608 <<invalid sloc>> <invalid sloc> 'const char *'
|   |-NoThrowAttr 0x7ffe4411e670 <col:91> Implicit
|   `-ConstAttr 0x7ffe4411e6b8 <col:91> Implicit
|-LinkageSpecDecl 0x7ffe4411e820 <line:333:95> col:95 implicit C
| `-FunctionDecl 0x7ffe4411e870 <col:95> col:95 implicit used __builtin_nansf 'float (const char *) noexcept' extern
|   |-ParmVarDecl 0x7ffe4411e908 <<invalid sloc>> <invalid sloc> 'const char *'
|   |-NoThrowAttr 0x7ffe4411e970 <col:95> Implicit
|   `-ConstAttr 0x7ffe4411e9b8 <col:95> Implicit
|-LinkageSpecDecl 0x7ffe44121470 <line:377:90> col:90 implicit C
| `-FunctionDecl 0x7ffe441214c0 <col:90> col:90 implicit used __builtin_huge_val 'double (void) noexcept' extern
|   |-NoThrowAttr 0x7ffe44121558 <col:90> Implicit
|   `-ConstAttr 0x7ffe441215a0 <col:90> Implicit
|-LinkageSpecDecl 0x7ffe44121650 <line:378:91> col:91 implicit C
| `-FunctionDecl 0x7ffe441216a0 <col:91> col:91 implicit used __builtin_nan 'double (const char *) noexcept' extern
|   |-ParmVarDecl 0x7ffe44121738 <<invalid sloc>> <invalid sloc> 'const char *'
|   |-NoThrowAttr 0x7ffe441217a0 <col:91> Implicit
|   `-ConstAttr 0x7ffe441217e8 <col:91> Implicit
|-LinkageSpecDecl 0x7ffe44121950 <line:379:95> col:95 implicit C
| `-FunctionDecl 0x7ffe441219a0 <col:95> col:95 implicit used __builtin_nans 'double (const char *) noexcept' extern
|   |-ParmVarDecl 0x7ffe44121a38 <<invalid sloc>> <invalid sloc> 'const char *'
|   |-NoThrowAttr 0x7ffe44121aa0 <col:95> Implicit
|   `-ConstAttr 0x7ffe44121ae8 <col:95> Implicit
|-LinkageSpecDecl 0x7ffe441245c8 <line:423:90> col:90 implicit C
| `-FunctionDecl 0x7ffe44124618 <col:90> col:90 implicit used __builtin_huge_vall 'long double (void) noexcept' extern
|   |-NoThrowAttr 0x7ffe441246b0 <col:90> Implicit
|   `-ConstAttr 0x7ffe441246f8 <col:90> Implicit
|-LinkageSpecDecl 0x7ffe441247a8 <line:424:91> col:91 implicit C
| `-FunctionDecl 0x7ffe441247f8 <col:91> col:91 implicit used __builtin_nanl 'long double (const char *) noexcept' extern
|   |-ParmVarDecl 0x7ffe44124890 <<invalid sloc>> <invalid sloc> 'const char *'
|   |-NoThrowAttr 0x7ffe441248f8 <col:91> Implicit
|   `-ConstAttr 0x7ffe44124940 <col:91> Implicit
|-LinkageSpecDecl 0x7ffe44124ab0 <line:425:95> col:95 implicit C
| `-FunctionDecl 0x7ffe44124b00 <col:95> col:95 implicit used __builtin_nansl 'long double (const char *) noexcept' extern
|   |-ParmVarDecl 0x7ffe44124b98 <<invalid sloc>> <invalid sloc> 'const char *'
|   |-NoThrowAttr 0x7ffe44124c00 <col:95> Implicit
|   `-ConstAttr 0x7ffe44124c48 <col:95> Implicit
|-LinkageSpecDecl 0x7ffe441409b0 </usr/include/math.h:557:25> col:25 implicit C
| `-FunctionDecl 0x7ffe44140a00 <col:25> col:25 implicit referenced __builtin_isgreater 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7ffe44140a98 <col:25> Implicit
|   `-ConstAttr 0x7ffe44140ae0 <col:25> Implicit
|-LinkageSpecDecl 0x7ffe44141d58 <line:558:30> col:30 implicit C
| `-FunctionDecl 0x7ffe44141da8 <col:30> col:30 implicit referenced __builtin_isgreaterequal 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7ffe44141e40 <col:30> Implicit
|   `-ConstAttr 0x7ffe44141e88 <col:30> Implicit
|-LinkageSpecDecl 0x7ffe44142ec8 <line:559:22> col:22 implicit C
| `-FunctionDecl 0x7ffe44142f18 <col:22> col:22 implicit referenced __builtin_isless 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7ffe44142fb0 <col:22> Implicit
|   `-ConstAttr 0x7ffe44142ff8 <col:22> Implicit
|-LinkageSpecDecl 0x7ffe44144058 <line:560:27> col:27 implicit C
| `-FunctionDecl 0x7ffe441440a8 <col:27> col:27 implicit referenced __builtin_islessequal 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7ffe44144140 <col:27> Implicit
|   `-ConstAttr 0x7ffe44144188 <col:27> Implicit
|-LinkageSpecDecl 0x7ffe44145200 <line:561:29> col:29 implicit C
| `-FunctionDecl 0x7ffe44145250 <col:29> col:29 implicit referenced __builtin_islessgreater 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7ffe441452e8 <col:29> Implicit
|   `-ConstAttr 0x7ffe44145330 <col:29> Implicit
|-LinkageSpecDecl 0x7ffe44146378 <line:562:27> col:27 implicit C
| `-FunctionDecl 0x7ffe441463c8 <col:27> col:27 implicit referenced __builtin_isunordered 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7ffe44146460 <col:27> Implicit
|   `-ConstAttr 0x7ffe441464a8 <col:27> Implicit
|-NamespaceDecl 0x7ffe44190ef0 prev 0x7ffe440feb98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:438:37, line:439:38> line:438:47 std
| |-original Namespace 0x7ffe43865c58 'std'
| `-NamespaceDecl 0x7ffe44190f58 prev 0x7ffe440fec00 <col:52, line:439:36> <scratch space>:440:1 __1 inline
|   |-original Namespace 0x7ffe43865cc0 '__1'
|   |-UsingDecl 0x7ffe44190fc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:313:1, col:9> col:9 ::signbit
|   |-UsingShadowDecl 0x7ffe44191018 <col:9> col:9 implicit FunctionTemplate 0x7ffe44137298 'signbit'
|   |-UsingShadowDecl 0x7ffe44191060 <col:9> col:9 implicit FunctionTemplate 0x7ffe44137d90 'signbit'
|   |-UsingShadowDecl 0x7ffe441910a8 <col:9> col:9 implicit FunctionTemplate 0x7ffe441385e0 'signbit'
|   |-UsingDecl 0x7ffe441910f8 <line:314:1, col:9> col:9 ::fpclassify
|   |-UsingShadowDecl 0x7ffe44191148 <col:9> col:9 implicit FunctionTemplate 0x7ffe44139660 'fpclassify'
|   |-UsingShadowDecl 0x7ffe44191190 <col:9> col:9 implicit FunctionTemplate 0x7ffe44139ee0 'fpclassify'
|   |-UsingDecl 0x7ffe441911e0 <line:315:1, col:9> col:9 ::isfinite
|   |-UsingShadowDecl 0x7ffe44191230 <col:9> col:9 implicit FunctionTemplate 0x7ffe4413b180 'isfinite'
|   |-UsingShadowDecl 0x7ffe44191278 <col:9> col:9 implicit FunctionTemplate 0x7ffe4413bb70 'isfinite'
|   |-UsingDecl 0x7ffe441912c8 <line:316:1, col:9> col:9 ::isinf
|   |-UsingShadowDecl 0x7ffe44191318 <col:9> col:9 implicit FunctionTemplate 0x7ffe4413cc00 'isinf'
|   |-UsingShadowDecl 0x7ffe44191360 <col:9> col:9 implicit FunctionTemplate 0x7ffe4413d500 'isinf'
|   |-UsingDecl 0x7ffe441913b0 <line:317:1, col:9> col:9 ::isnan
|   |-UsingShadowDecl 0x7ffe44192400 <col:9> col:9 implicit FunctionTemplate 0x7ffe4413e450 'isnan'
|   |-UsingShadowDecl 0x7ffe44192448 <col:9> col:9 implicit FunctionTemplate 0x7ffe4413ecd0 'isnan'
|   |-UsingDecl 0x7ffe44192498 <line:318:1, col:9> col:9 ::isnormal
|   |-UsingShadowDecl 0x7ffe441924e8 <col:9> col:9 implicit FunctionTemplate 0x7ffe4413fc40 'isnormal'
|   |-UsingShadowDecl 0x7ffe44192530 <col:9> col:9 implicit FunctionTemplate 0x7ffe441403d0 'isnormal'
|   |-UsingDecl 0x7ffe44192580 <line:319:1, col:9> col:9 ::isgreater
|   |-UsingShadowDecl 0x7ffe441925d0 <col:9> col:9 implicit FunctionTemplate 0x7ffe44141460 'isgreater'
|   |-UsingDecl 0x7ffe44192620 <line:320:1, col:9> col:9 ::isgreaterequal
|   |-UsingShadowDecl 0x7ffe44192670 <col:9> col:9 implicit FunctionTemplate 0x7ffe441426a0 'isgreaterequal'
|   |-UsingDecl 0x7ffe441926c0 <line:321:1, col:9> col:9 ::isless
|   |-UsingShadowDecl 0x7ffe44192710 <col:9> col:9 implicit FunctionTemplate 0x7ffe44143830 'isless'
|   |-UsingDecl 0x7ffe44192760 <line:322:1, col:9> col:9 ::islessequal
|   |-UsingShadowDecl 0x7ffe441927b0 <col:9> col:9 implicit FunctionTemplate 0x7ffe441449a0 'islessequal'
|   |-UsingDecl 0x7ffe44192800 <line:323:1, col:9> col:9 ::islessgreater
|   |-UsingShadowDecl 0x7ffe44192850 <col:9> col:9 implicit FunctionTemplate 0x7ffe44145b50 'islessgreater'
|   |-UsingDecl 0x7ffe441928a0 <line:324:1, col:9> col:9 ::isunordered
|   |-UsingShadowDecl 0x7ffe441928f0 <col:9> col:9 implicit FunctionTemplate 0x7ffe44146cc0 'isunordered'
|   |-UsingDecl 0x7ffe44192940 <line:325:1, col:9> col:9 ::isunordered
|   |-UsingShadowDecl 0x7ffe44192990 prev 0x7ffe441928f0 <col:9> col:9 implicit FunctionTemplate 0x7ffe44146cc0 'isunordered'
|   |-UsingDecl 0x7ffe441929e0 <line:327:1, col:9> col:9 ::float_t
|   |-UsingShadowDecl 0x7ffe44192a30 <col:9> col:9 implicit Typedef 0x7ffe43865e40 'float_t'
|   | `-<<<NULL>>>
|   |-UsingDecl 0x7ffe44192a80 <line:328:1, col:9> col:9 ::double_t
|   |-UsingShadowDecl 0x7ffe44192ad0 <col:9> col:9 implicit Typedef 0x7ffe43865eb0 'double_t'
|   | `-<<<NULL>>>
|   |-UsingDecl 0x7ffe44192b20 <line:331:1, col:9> col:9 ::abs
|   |-UsingShadowDecl 0x7ffe44192b70 <col:9> col:9 implicit Function 0x7ffe44148200 'abs' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7ffe44192bb8 <col:9> col:9 implicit Function 0x7ffe441484f0 'abs' 'double (double) noexcept'
|   |-UsingShadowDecl 0x7ffe44192c00 <col:9> col:9 implicit Function 0x7ffe441487e0 'abs' 'long double (long double) noexcept'
|   |-UsingDecl 0x7ffe44192c50 <line:334:1, col:9> col:9 ::acos
|   |-UsingShadowDecl 0x7ffe44192ca0 <col:9> col:9 implicit Function 0x7ffe439096d8 'acos' 'double (double)'
|   |-UsingShadowDecl 0x7ffe44192ce8 <col:9> col:9 implicit Function 0x7ffe44148ad0 'acos' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7ffe44192d30 <col:9> col:9 implicit Function 0x7ffe44148dc0 'acos' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7ffe44192d78 <col:9> col:9 implicit FunctionTemplate 0x7ffe44149560 'acos'
|   |-UsingDecl 0x7ffe44192dc8 <line:335:1, col:9> col:9 ::acosf
|   |-UsingShadowDecl 0x7ffe44192e18 <col:9> col:9 implicit Function 0x7ffe43909538 'acosf' 'float (float)'
|   |-UsingDecl 0x7ffe44192e68 <line:336:1, col:9> col:9 ::asin
|   |-UsingShadowDecl 0x7ffe44192eb8 <col:9> col:9 implicit Function 0x7ffe43909c00 'asin' 'double (double)'
|   |-UsingShadowDecl 0x7ffe44192f00 <col:9> col:9 implicit Function 0x7ffe4414b160 'asin' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7ffe44192f48 <col:9> col:9 implicit Function 0x7ffe4414b450 'asin' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7ffe44192f90 <col:9> col:9 implicit FunctionTemplate 0x7ffe4414bb00 'asin'
|   |-UsingDecl 0x7ffe44192fe0 <line:337:1, col:9> col:9 ::asinf
|   |-UsingShadowDecl 0x7ffe44193030 <col:9> col:9 implicit Function 0x7ffe43909a18 'asinf' 'float (float)'
|   |-UsingDecl 0x7ffe44193080 <line:338:1, col:9> col:9 ::atan
|   |-UsingShadowDecl 0x7ffe441930d0 <col:9> col:9 implicit Function 0x7ffe4390a0e0 'atan' 'double (double)'
|   |-UsingShadowDecl 0x7ffe44193118 <col:9> col:9 implicit Function 0x7ffe4414c120 'atan' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7ffe44193160 <col:9> col:9 implicit Function 0x7ffe4414c440 'atan' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7ffe441931a8 <col:9> col:9 implicit FunctionTemplate 0x7ffe4414caf0 'atan'
|   |-UsingDecl 0x7ffe441931f8 <line:339:1, col:9> col:9 ::atanf
|   |-UsingShadowDecl 0x7ffe44193248 <col:9> col:9 implicit Function 0x7ffe43909f40 'atanf' 'float (float)'
|   |-UsingDecl 0x7ffe44193298 <line:340:1, col:9> col:9 ::atan2
|   |-UsingShadowDecl 0x7ffe441932e8 <col:9> col:9 implicit Function 0x7ffe4390a798 'atan2' 'double (double, double)'
|   |-UsingShadowDecl 0x7ffe44193330 <col:9> col:9 implicit Function 0x7ffe4414d190 'atan2' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7ffe44193378 <col:9> col:9 implicit Function 0x7ffe4414d580 'atan2' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7ffe441933c0 <col:9> col:9 implicit FunctionTemplate 0x7ffe4414e150 'atan2'
|   |-UsingDecl 0x7ffe44193410 <line:341:1, col:9> col:9 ::atan2f
|   |-UsingShadowDecl 0x7ffe44193460 <col:9> col:9 implicit Function 0x7ffe4390a4e8 'atan2f' 'float (float, float)'
|   |-UsingDecl 0x7ffe441934b0 <line:342:1, col:9> col:9 ::ceil
|   |-UsingShadowDecl 0x7ffe44193500 <col:9> col:9 implicit Function 0x7ffe4391a648 'ceil' 'double (double)'
|   |-UsingShadowDecl 0x7ffe44193548 <col:9> col:9 implicit Function 0x7ffe4414fb68 'ceil' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7ffe44193590 <col:9> col:9 implicit Function 0x7ffe4414fe58 'ceil' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7ffe441935d8 <col:9> col:9 implicit FunctionTemplate 0x7ffe44150510 'ceil'
|   |-UsingDecl 0x7ffe44193628 <line:343:1, col:9> col:9 ::ceilf
|   |-UsingShadowDecl 0x7ffe44193678 <col:9> col:9 implicit Function 0x7ffe4391a4a8 'ceilf' 'float (float)'
|   |-UsingDecl 0x7ffe441936c8 <line:344:1, col:9> col:9 ::cos
|   |-UsingShadowDecl 0x7ffe44193718 <col:9> col:9 implicit Function 0x7ffe4390b5d0 'cos' 'double (double)'
|   |-UsingShadowDecl 0x7ffe44193760 <col:9> col:9 implicit Function 0x7ffe44150b30 'cos' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7ffe441937a8 <col:9> col:9 implicit Function 0x7ffe44150e20 'cos' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7ffe441937f0 <col:9> col:9 implicit FunctionTemplate 0x7ffe44151500 'cos'
|   |-UsingDecl 0x7ffe44193840 <line:345:1, col:9> col:9 ::cosf
|   |-UsingShadowDecl 0x7ffe44193890 <col:9> col:9 implicit Function 0x7ffe4390b430 'cosf' 'float (float)'
|   |-UsingDecl 0x7ffe441938e0 <line:346:1, col:9> col:9 ::cosh
|   |-UsingShadowDecl 0x7ffe44193930 <col:9> col:9 implicit Function 0x7ffe4390db30 'cosh' 'double (double)'
|   |-UsingShadowDecl 0x7ffe44193978 <col:9> col:9 implicit Function 0x7ffe44151b20 'cosh' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7ffe441939c0 <col:9> col:9 implicit Function 0x7ffe44151e10 'cosh' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7ffe44193a08 <col:9> col:9 implicit FunctionTemplate 0x7ffe441524c0 'cosh'
|   |-UsingDecl 0x7ffe44193a58 <line:347:1, col:9> col:9 ::coshf
|   |-UsingShadowDecl 0x7ffe44193aa8 <col:9> col:9 implicit Function 0x7ffe4390d990 'coshf' 'float (float)'
|   |-UsingDecl 0x7ffe44193af8 <line:349:1, col:9> col:9 ::exp
|   |-UsingShadowDecl 0x7ffe44193b48 <col:9> col:9 implicit Function 0x7ffe4390f1f0 'exp' 'double (double)'
|   |-UsingShadowDecl 0x7ffe44193b90 <col:9> col:9 implicit Function 0x7ffe44152ae0 'exp' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7ffe44193bd8 <col:9> col:9 implicit Function 0x7ffe44152dd0 'exp' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7ffe44193c20 <col:9> col:9 implicit FunctionTemplate 0x7ffe441534a0 'exp'
|   |-UsingDecl 0x7ffe44193c70 <line:350:1, col:9> col:9 ::expf
|   |-UsingShadowDecl 0x7ffe44193cc0 <col:9> col:9 implicit Function 0x7ffe4390f050 'expf' 'float (float)'
|   |-UsingDecl 0x7ffe44193d10 <line:352:1, col:9> col:9 ::fabs
|   |-UsingShadowDecl 0x7ffe44193d60 <col:9> col:9 implicit Function 0x7ffe43917690 'fabs' 'double (double)'
|   |-UsingShadowDecl 0x7ffe44193da8 <col:9> col:9 implicit Function 0x7ffe44153ac0 'fabs' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7ffe44193df0 <col:9> col:9 implicit Function 0x7ffe44153db0 'fabs' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7ffe44193e38 <col:9> col:9 implicit FunctionTemplate 0x7ffe44154460 'fabs'
|   |-UsingDecl 0x7ffe44193e88 <line:353:1, col:9> col:9 ::fabsf
|   |-UsingShadowDecl 0x7ffe44193ed8 <col:9> col:9 implicit Function 0x7ffe439174f0 'fabsf' 'float (float)'
|   |-UsingDecl 0x7ffe44193f28 <line:354:1, col:9> col:9 ::floor
|   |-UsingShadowDecl 0x7ffe44193f78 <col:9> col:9 implicit Function 0x7ffe4391ab28 'floor' 'double (double)'
|   |-UsingShadowDecl 0x7ffe44193fc0 <col:9> col:9 implicit Function 0x7ffe44154a80 'floor' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7ffe44194008 <col:9> col:9 implicit Function 0x7ffe44154d70 'floor' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7ffe44194050 <col:9> col:9 implicit FunctionTemplate 0x7ffe44155440 'floor'
|   |-UsingDecl 0x7ffe441940a0 <line:355:1, col:9> col:9 ::floorf
|   |-UsingShadowDecl 0x7ffe441940f0 <col:9> col:9 implicit Function 0x7ffe4391a988 'floorf' 'float (float)'
|   |-UsingDecl 0x7ffe44194140 <line:357:1, col:9> col:9 ::fmod
|   |-UsingShadowDecl 0x7ffe44194190 <col:9> col:9 implicit Function 0x7ffe4391db88 'fmod' 'double (double, double)'
|   |-UsingShadowDecl 0x7ffe441941d8 <col:9> col:9 implicit Function 0x7ffe44155ae0 'fmod' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7ffe44194220 <col:9> col:9 implicit Function 0x7ffe44155ea0 'fmod' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7ffe44194268 <col:9> col:9 implicit FunctionTemplate 0x7ffe44156940 'fmod'
|   |-UsingDecl 0x7ffe441942b8 <line:358:1, col:9> col:9 ::fmodf
|   |-UsingShadowDecl 0x7ffe44194308 <col:9> col:9 implicit Function 0x7ffe4391d960 'fmodf' 'float (float, float)'
|   |-UsingDecl 0x7ffe44194358 <line:360:1, col:9> col:9 ::frexp
|   |-UsingShadowDecl 0x7ffe441943a8 <col:9> col:9 implicit Function 0x7ffe43914c28 'frexp' 'double (double, int *)'
|   |-UsingShadowDecl 0x7ffe441943f0 <col:9> col:9 implicit Function 0x7ffe44157318 'frexp' 'float (float, int *) noexcept'
|   |-UsingShadowDecl 0x7ffe44194438 <col:9> col:9 implicit Function 0x7ffe44157730 'frexp' 'long double (long double, int *) noexcept'
|   |-UsingShadowDecl 0x7ffe44194480 <col:9> col:9 implicit FunctionTemplate 0x7ffe44157f60 'frexp'
|   |-UsingDecl 0x7ffe441944d0 <line:361:1, col:9> col:9 ::frexpf
|   |-UsingShadowDecl 0x7ffe44194520 <col:9> col:9 implicit Function 0x7ffe43914988 'frexpf' 'float (float, int *)'
|   |-UsingDecl 0x7ffe44194570 <line:362:1, col:9> col:9 ::ldexp
|   |-UsingShadowDecl 0x7ffe441945c0 <col:9> col:9 implicit Function 0x7ffe43914400 'ldexp' 'double (double, int)'
|   |-UsingShadowDecl 0x7ffe44194608 <col:9> col:9 implicit Function 0x7ffe44158678 'ldexp' 'float (float, int) noexcept'
|   |-UsingShadowDecl 0x7ffe44194650 <col:9> col:9 implicit Function 0x7ffe44158a60 'ldexp' 'long double (long double, int) noexcept'
|   |-UsingShadowDecl 0x7ffe44194698 <col:9> col:9 implicit FunctionTemplate 0x7ffe44159298 'ldexp'
|   |-UsingDecl 0x7ffe441946e8 <line:363:1, col:9> col:9 ::ldexpf
|   |-UsingShadowDecl 0x7ffe44194738 <col:9> col:9 implicit Function 0x7ffe43913138 'ldexpf' 'float (float, int)'
|   |-UsingDecl 0x7ffe44194788 <line:365:1, col:9> col:9 ::log
|   |-UsingShadowDecl 0x7ffe441947d8 <col:9> col:9 implicit Function 0x7ffe43910100 'log' 'double (double)'
|   |-UsingShadowDecl 0x7ffe44194820 <col:9> col:9 implicit Function 0x7ffe44159938 'log' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7ffe44194868 <col:9> col:9 implicit Function 0x7ffe44159c28 'log' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7ffe441948b0 <col:9> col:9 implicit FunctionTemplate 0x7ffe4415a2e0 'log'
|   |-UsingDecl 0x7ffe44194900 <line:366:1, col:9> col:9 ::logf
|   |-UsingShadowDecl 0x7ffe44194950 <col:9> col:9 implicit Function 0x7ffe4390ff60 'logf' 'float (float)'
|   |-UsingDecl 0x7ffe441949a0 <line:368:1, col:9> col:9 ::log10
|   |-UsingShadowDecl 0x7ffe441949f0 <col:9> col:9 implicit Function 0x7ffe43910630 'log10' 'double (double)'
|   |-UsingShadowDecl 0x7ffe44194a38 <col:9> col:9 implicit Function 0x7ffe4415a900 'log10' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7ffe44194a80 <col:9> col:9 implicit Function 0x7ffe4415abf0 'log10' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7ffe44194ac8 <col:9> col:9 implicit FunctionTemplate 0x7ffe4415b2d8 'log10'
|   |-UsingDecl 0x7ffe44194b18 <line:369:1, col:9> col:9 ::log10f
|   |-UsingShadowDecl 0x7ffe44194b68 <col:9> col:9 implicit Function 0x7ffe43910490 'log10f' 'float (float)'
|   |-UsingDecl 0x7ffe44194bb8 <line:370:1, col:9> col:9 ::modf
|   |-UsingShadowDecl 0x7ffe44194c08 <col:9> col:9 implicit Function 0x7ffe43912bd8 'modf' 'double (double, double *)'
|   |-UsingShadowDecl 0x7ffe44194c50 <col:9> col:9 implicit Function 0x7ffe4415b980 'modf' 'float (float, float *) noexcept'
|   |-UsingShadowDecl 0x7ffe44194c98 <col:9> col:9 implicit Function 0x7ffe4415bda0 'modf' 'long double (long double, long double *) noexcept'
|   |-UsingDecl 0x7ffe44194ce8 <line:371:1, col:9> col:9 ::modff
|   |-UsingShadowDecl 0x7ffe44194d38 <col:9> col:9 implicit Function 0x7ffe43912918 'modff' 'float (float, float *)'
|   |-UsingDecl 0x7ffe44194d88 <line:373:1, col:9> col:9 ::pow
|   |-UsingShadowDecl 0x7ffe44194dd8 <col:9> col:9 implicit Function 0x7ffe43918850 'pow' 'double (double, double)'
|   |-UsingShadowDecl 0x7ffe44194e20 <col:9> col:9 implicit Function 0x7ffe4415c1c0 'pow' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7ffe44194e68 <col:9> col:9 implicit Function 0x7ffe4415c580 'pow' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7ffe44194eb0 <col:9> col:9 implicit FunctionTemplate 0x7ffe4415d020 'pow'
|   |-UsingDecl 0x7ffe44194f00 <line:374:1, col:9> col:9 ::powf
|   |-UsingShadowDecl 0x7ffe44194f50 <col:9> col:9 implicit Function 0x7ffe43918628 'powf' 'float (float, float)'
|   |-UsingDecl 0x7ffe44194fa0 <line:376:1, col:9> col:9 ::sin
|   |-UsingShadowDecl 0x7ffe44194ff0 <col:9> col:9 implicit Function 0x7ffe4390bab0 'sin' 'double (double)'
|   |-UsingShadowDecl 0x7ffe44195038 <col:9> col:9 implicit Function 0x7ffe4415d958 'sin' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7ffe44195080 <col:9> col:9 implicit Function 0x7ffe4415dc48 'sin' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7ffe441950c8 <col:9> col:9 implicit FunctionTemplate 0x7ffe4415e300 'sin'
|   |-UsingDecl 0x7ffe44195118 <line:377:1, col:9> col:9 ::sinf
|   |-UsingShadowDecl 0x7ffe44195168 <col:9> col:9 implicit Function 0x7ffe4390b910 'sinf' 'float (float)'
|   |-UsingDecl 0x7ffe441951b8 <line:378:1, col:9> col:9 ::sinh
|   |-UsingShadowDecl 0x7ffe44195208 <col:9> col:9 implicit Function 0x7ffe4390e830 'sinh' 'double (double)'
|   |-UsingShadowDecl 0x7ffe44195250 <col:9> col:9 implicit Function 0x7ffe4415e920 'sinh' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7ffe44195298 <col:9> col:9 implicit Function 0x7ffe4415ec10 'sinh' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7ffe441952e0 <col:9> col:9 implicit FunctionTemplate 0x7ffe441614d8 'sinh'
|   |-UsingDecl 0x7ffe44195330 <line:379:1, col:9> col:9 ::sinhf
|   |-UsingShadowDecl 0x7ffe44195380 <col:9> col:9 implicit Function 0x7ffe4390e690 'sinhf' 'float (float)'
|   |-UsingDecl 0x7ffe441953d0 <line:381:1, col:9> col:9 ::sqrt
|   |-UsingShadowDecl 0x7ffe44195420 <col:9> col:9 implicit Function 0x7ffe43918dc0 'sqrt' 'double (double)'
|   |-UsingShadowDecl 0x7ffe44195468 <col:9> col:9 implicit Function 0x7ffe44161b00 'sqrt' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7ffe441954b0 <col:9> col:9 implicit Function 0x7ffe44161df0 'sqrt' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7ffe441954f8 <col:9> col:9 implicit FunctionTemplate 0x7ffe441624a0 'sqrt'
|   |-UsingDecl 0x7ffe44195548 <line:382:1, col:9> col:9 ::sqrtf
|   |-UsingShadowDecl 0x7ffe44195598 <col:9> col:9 implicit Function 0x7ffe43918c20 'sqrtf' 'float (float)'
|   |-UsingDecl 0x7ffe441955e8 <line:383:1, col:9> col:9 ::tan
|   |-UsingShadowDecl 0x7ffe44195638 <col:9> col:9 implicit Function 0x7ffe4390bf90 'tan' 'double (double)'
|   |-UsingShadowDecl 0x7ffe44195680 <col:9> col:9 implicit Function 0x7ffe44162ac0 'tan' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7ffe441956c8 <col:9> col:9 implicit Function 0x7ffe44162db0 'tan' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7ffe44195710 <col:9> col:9 implicit FunctionTemplate 0x7ffe44163498 'tan'
|   |-UsingDecl 0x7ffe44195760 <line:384:1, col:9> col:9 ::tanf
|   |-UsingShadowDecl 0x7ffe441957b0 <col:9> col:9 implicit Function 0x7ffe4390bdf0 'tanf' 'float (float)'
|   |-UsingDecl 0x7ffe44195800 <line:386:1, col:9> col:9 ::tanh
|   |-UsingShadowDecl 0x7ffe44195850 <col:9> col:9 implicit Function 0x7ffe4390ed10 'tanh' 'double (double)'
|   |-UsingShadowDecl 0x7ffe44195898 <col:9> col:9 implicit Function 0x7ffe44163ac0 'tanh' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7ffe441958e0 <col:9> col:9 implicit Function 0x7ffe44163db0 'tanh' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7ffe44195928 <col:9> col:9 implicit FunctionTemplate 0x7ffe44164460 'tanh'
|   |-UsingDecl 0x7ffe44195978 <line:387:1, col:9> col:9 ::tanhf
|   |-UsingShadowDecl 0x7ffe441959c8 <col:9> col:9 implicit Function 0x7ffe4390eb70 'tanhf' 'float (float)'
|   |-UsingDecl 0x7ffe44195a18 <line:389:1, col:9> col:9 ::acosh
|   |-UsingShadowDecl 0x7ffe44195a68 <col:9> col:9 implicit Function 0x7ffe4390cc90 'acosh' 'double (double)'
|   |-UsingShadowDecl 0x7ffe44195ab0 <col:9> col:9 implicit Function 0x7ffe44164a80 'acosh' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7ffe44195af8 <col:9> col:9 implicit Function 0x7ffe44164d70 'acosh' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7ffe44195b40 <col:9> col:9 implicit FunctionTemplate 0x7ffe44165498 'acosh'
|   |-UsingDecl 0x7ffe44195b90 <line:390:1, col:9> col:9 ::acoshf
|   |-UsingShadowDecl 0x7ffe44195be0 <col:9> col:9 implicit Function 0x7ffe4390c2d0 'acoshf' 'float (float)'
|   |-UsingDecl 0x7ffe44195c30 <line:391:1, col:9> col:9 ::asinh
|   |-UsingShadowDecl 0x7ffe44195c80 <col:9> col:9 implicit Function 0x7ffe4390d170 'asinh' 'double (double)'
|   |-UsingShadowDecl 0x7ffe44195cc8 <col:9> col:9 implicit Function 0x7ffe44165ac0 'asinh' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7ffe44195d10 <col:9> col:9 implicit Function 0x7ffe44165db0 'asinh' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7ffe44195d58 <col:9> col:9 implicit FunctionTemplate 0x7ffe44166460 'asinh'
|   |-UsingDecl 0x7ffe44195da8 <line:392:1, col:9> col:9 ::asinhf
|   |-UsingShadowDecl 0x7ffe44195df8 <col:9> col:9 implicit Function 0x7ffe4390cfd0 'asinhf' 'float (float)'
|   |-UsingDecl 0x7ffe44195e48 <line:393:1, col:9> col:9 ::atanh
|   |-UsingShadowDecl 0x7ffe44195e98 <col:9> col:9 implicit Function 0x7ffe4390d650 'atanh' 'double (double)'
|   |-UsingShadowDecl 0x7ffe44195ee0 <col:9> col:9 implicit Function 0x7ffe44166a80 'atanh' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7ffe44195f28 <col:9> col:9 implicit Function 0x7ffe44166d70 'atanh' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7ffe44195f70 <col:9> col:9 implicit FunctionTemplate 0x7ffe44167498 'atanh'
|   |-UsingDecl 0x7ffe44195fc0 <line:394:1, col:9> col:9 ::atanhf
|   |-UsingShadowDecl 0x7ffe44196010 <col:9> col:9 implicit Function 0x7ffe4390d4b0 'atanhf' 'float (float)'
|   |-UsingDecl 0x7ffe44196060 <line:395:1, col:9> col:9 ::cbrt
|   |-UsingShadowDecl 0x7ffe441960b0 <col:9> col:9 implicit Function 0x7ffe43917b70 'cbrt' 'double (double)'
|   |-UsingShadowDecl 0x7ffe441960f8 <col:9> col:9 implicit Function 0x7ffe44167ac0 'cbrt' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7ffe44196140 <col:9> col:9 implicit Function 0x7ffe44167db0 'cbrt' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7ffe44196188 <col:9> col:9 implicit FunctionTemplate 0x7ffe44168460 'cbrt'
|   |-UsingDecl 0x7ffe441961d8 <line:396:1, col:9> col:9 ::cbrtf
|   |-UsingShadowDecl 0x7ffe44196228 <col:9> col:9 implicit Function 0x7ffe439179d0 'cbrtf' 'float (float)'
|   |-UsingDecl 0x7ffe44196278 <line:398:1, col:9> col:9 ::copysign
|   |-UsingShadowDecl 0x7ffe441962c8 <col:9> col:9 implicit Function 0x7ffe4391f068 'copysign' 'double (double, double)'
|   |-UsingShadowDecl 0x7ffe44196310 <col:9> col:9 implicit Function 0x7ffe44168b00 'copysign' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7ffe44196358 <col:9> col:9 implicit Function 0x7ffe44168ec0 'copysign' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7ffe441963a0 <col:9> col:9 implicit FunctionTemplate 0x7ffe44169980 'copysign'
|   |-UsingDecl 0x7ffe44196400 <line:399:1, col:9> col:9 ::copysignf
|   |-UsingShadowDecl 0x7ffe44196450 <col:9> col:9 implicit Function 0x7ffe4391ee40 'copysignf' 'float (float, float)'
|   |-UsingDecl 0x7ffe441964a0 <line:401:1, col:9> col:9 ::erf
|   |-UsingShadowDecl 0x7ffe441964f0 <col:9> col:9 implicit Function 0x7ffe439192a0 'erf' 'double (double)'
|   |-UsingShadowDecl 0x7ffe44196538 <col:9> col:9 implicit Function 0x7ffe4416a2b8 'erf' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7ffe44196580 <col:9> col:9 implicit Function 0x7ffe4416a5a8 'erf' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7ffe441965c8 <col:9> col:9 implicit FunctionTemplate 0x7ffe4416ac60 'erf'
|   |-UsingDecl 0x7ffe44196618 <line:402:1, col:9> col:9 ::erff
|   |-UsingShadowDecl 0x7ffe44196668 <col:9> col:9 implicit Function 0x7ffe43919100 'erff' 'float (float)'
|   |-UsingDecl 0x7ffe441966b8 <line:403:1, col:9> col:9 ::erfc
|   |-UsingShadowDecl 0x7ffe44196708 <col:9> col:9 implicit Function 0x7ffe439197d0 'erfc' 'double (double)'
|   |-UsingShadowDecl 0x7ffe44196750 <col:9> col:9 implicit Function 0x7ffe4416b280 'erfc' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7ffe44196798 <col:9> col:9 implicit Function 0x7ffe4416c578 'erfc' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7ffe441967e0 <col:9> col:9 implicit FunctionTemplate 0x7ffe4416cc30 'erfc'
|   |-UsingDecl 0x7ffe44196830 <line:404:1, col:9> col:9 ::erfcf
|   |-UsingShadowDecl 0x7ffe44196880 <col:9> col:9 implicit Function 0x7ffe43919630 'erfcf' 'float (float)'
|   |-UsingDecl 0x7ffe441968d0 <line:405:1, col:9> col:9 ::exp2
|   |-UsingShadowDecl 0x7ffe44196920 <col:9> col:9 implicit Function 0x7ffe4390f740 'exp2' 'double (double)'
|   |-UsingShadowDecl 0x7ffe44196968 <col:9> col:9 implicit Function 0x7ffe4416d250 'exp2' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7ffe441969b0 <col:9> col:9 implicit Function 0x7ffe4416d540 'exp2' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7ffe441969f8 <col:9> col:9 implicit FunctionTemplate 0x7ffe4416dbf0 'exp2'
|   |-UsingDecl 0x7ffe44196a48 <line:406:1, col:9> col:9 ::exp2f
|   |-UsingShadowDecl 0x7ffe44196a98 <col:9> col:9 implicit Function 0x7ffe4390f5a0 'exp2f' 'float (float)'
|   |-UsingDecl 0x7ffe44196ae8 <line:407:1, col:9> col:9 ::expm1
|   |-UsingShadowDecl 0x7ffe44196b38 <col:9> col:9 implicit Function 0x7ffe4390fc20 'expm1' 'double (double)'
|   |-UsingShadowDecl 0x7ffe44196b80 <col:9> col:9 implicit Function 0x7ffe4416e210 'expm1' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7ffe44196bc8 <col:9> col:9 implicit Function 0x7ffe4416e500 'expm1' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7ffe44196c10 <col:9> col:9 implicit FunctionTemplate 0x7ffe4416ebb0 'expm1'
|   |-UsingDecl 0x7ffe44196c60 <line:408:1, col:9> col:9 ::expm1f
|   |-UsingShadowDecl 0x7ffe44196cb0 <col:9> col:9 implicit Function 0x7ffe4390fa80 'expm1f' 'float (float)'
|   |-UsingDecl 0x7ffe44196d00 <line:409:1, col:9> col:9 ::fdim
|   |-UsingShadowDecl 0x7ffe44196d50 <col:9> col:9 implicit Function 0x7ffe43911b90 'fdim' 'double (double, double)'
|   |-UsingShadowDecl 0x7ffe44196d98 <col:9> col:9 implicit Function 0x7ffe4416f250 'fdim' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7ffe44196de0 <col:9> col:9 implicit Function 0x7ffe4416f610 'fdim' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7ffe44196e28 <col:9> col:9 implicit FunctionTemplate 0x7ffe441700b0 'fdim'
|   |-UsingDecl 0x7ffe44196e78 <line:410:1, col:9> col:9 ::fdimf
|   |-UsingShadowDecl 0x7ffe44196ec8 <col:9> col:9 implicit Function 0x7ffe43911968 'fdimf' 'float (float, float)'
|   |-UsingDecl 0x7ffe44196f18 <line:411:1, col:9> col:9 ::fmaf
|   |-UsingShadowDecl 0x7ffe44196f68 <col:9> col:9 implicit Function 0x7ffe43924da8 'fmaf' 'float (float, float, float)'
|   |-UsingDecl 0x7ffe44196fb8 <line:412:1, col:9> col:9 ::fma
|   |-UsingShadowDecl 0x7ffe44197008 <col:9> col:9 implicit Function 0x7ffe439250f8 'fma' 'double (double, double, double)'
|   |-UsingShadowDecl 0x7ffe44197050 <col:9> col:9 implicit Function 0x7ffe44172b08 'fma' 'float (float, float, float) noexcept'
|   |-UsingShadowDecl 0x7ffe44197098 <col:9> col:9 implicit Function 0x7ffe44172fc0 'fma' 'long double (long double, long double, long double) noexcept'
|   |-UsingShadowDecl 0x7ffe441970e0 <col:9> col:9 implicit FunctionTemplate 0x7ffe44173ed0 'fma'
|   |-UsingDecl 0x7ffe44197130 <line:413:1, col:9> col:9 ::fmax
|   |-UsingShadowDecl 0x7ffe44197180 <col:9> col:9 implicit Function 0x7ffe43912208 'fmax' 'double (double, double)'
|   |-UsingShadowDecl 0x7ffe441971c8 <col:9> col:9 implicit Function 0x7ffe44174c20 'fmax' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7ffe44197210 <col:9> col:9 implicit Function 0x7ffe44174fe0 'fmax' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7ffe44197258 <col:9> col:9 implicit FunctionTemplate 0x7ffe44175a80 'fmax'
|   |-UsingDecl 0x7ffe441972a8 <line:414:1, col:9> col:9 ::fmaxf
|   |-UsingShadowDecl 0x7ffe441972f8 <col:9> col:9 implicit Function 0x7ffe43911fe0 'fmaxf' 'float (float, float)'
|   |-UsingDecl 0x7ffe44197348 <line:415:1, col:9> col:9 ::fmin
|   |-UsingShadowDecl 0x7ffe44197398 <col:9> col:9 implicit Function 0x7ffe43924888 'fmin' 'double (double, double)'
|   |-UsingShadowDecl 0x7ffe441973e0 <col:9> col:9 implicit Function 0x7ffe44176440 'fmin' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7ffe44197428 <col:9> col:9 implicit Function 0x7ffe44176800 'fmin' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7ffe44197470 <col:9> col:9 implicit FunctionTemplate 0x7ffe441772a0 'fmin'
|   |-UsingDecl 0x7ffe441974c0 <line:416:1, col:9> col:9 ::fminf
|   |-UsingShadowDecl 0x7ffe44197510 <col:9> col:9 implicit Function 0x7ffe43924660 'fminf' 'float (float, float)'
|   |-UsingDecl 0x7ffe44197560 <line:417:1, col:9> col:9 ::hypot
|   |-UsingShadowDecl 0x7ffe441975b0 <col:9> col:9 implicit Function 0x7ffe43918158 'hypot' 'double (double, double)'
|   |-UsingShadowDecl 0x7ffe441975f8 <col:9> col:9 implicit Function 0x7ffe44177c58 'hypot' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7ffe44197640 <col:9> col:9 implicit Function 0x7ffe44178018 'hypot' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7ffe44197688 <col:9> col:9 implicit FunctionTemplate 0x7ffe44178b00 'hypot'
|   |-UsingDecl 0x7ffe441976d8 <line:418:1, col:9> col:9 ::hypotf
|   |-UsingShadowDecl 0x7ffe44197728 <col:9> col:9 implicit Function 0x7ffe43917f30 'hypotf' 'float (float, float)'
|   |-UsingDecl 0x7ffe44197778 <line:419:1, col:9> col:9 ::ilogb
|   |-UsingShadowDecl 0x7ffe441977c8 <col:9> col:9 implicit Function 0x7ffe43915278 'ilogb' 'int (double)'
|   |-UsingShadowDecl 0x7ffe44197810 <col:9> col:9 implicit Function 0x7ffe44179438 'ilogb' 'int (float) noexcept'
|   |-UsingShadowDecl 0x7ffe44197858 <col:9> col:9 implicit Function 0x7ffe44179728 'ilogb' 'int (long double) noexcept'
|   |-UsingShadowDecl 0x7ffe441978a0 <col:9> col:9 implicit FunctionTemplate 0x7ffe44179de0 'ilogb'
|   |-UsingDecl 0x7ffe441978f0 <line:420:1, col:9> col:9 ::ilogbf
|   |-UsingShadowDecl 0x7ffe44197940 <col:9> col:9 implicit Function 0x7ffe439150a0 'ilogbf' 'int (float)'
|   |-UsingDecl 0x7ffe44197990 <line:421:1, col:9> col:9 ::lgamma
|   |-UsingShadowDecl 0x7ffe441979e0 <col:9> col:9 implicit Function 0x7ffe43919ca0 'lgamma' 'double (double)'
|   |-UsingShadowDecl 0x7ffe44197a28 <col:9> col:9 implicit Function 0x7ffe4417a6b8 'lgamma' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7ffe44197a70 <col:9> col:9 implicit Function 0x7ffe4417a9a8 'lgamma' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7ffe44197ab8 <col:9> col:9 implicit FunctionTemplate 0x7ffe4417b060 'lgamma'
|   |-UsingDecl 0x7ffe44197b08 <line:422:1, col:9> col:9 ::lgammaf
|   |-UsingShadowDecl 0x7ffe44197b58 <col:9> col:9 implicit Function 0x7ffe43919b10 'lgammaf' 'float (float)'
|   |-UsingDecl 0x7ffe44197ba8 <line:423:1, col:9> col:9 ::llrint
|   |-UsingShadowDecl 0x7ffe44197bf8 <col:9> col:9 implicit Function 0x7ffe4391caa8 'llrint' 'long long (double)'
|   |-UsingShadowDecl 0x7ffe44197c40 <col:9> col:9 implicit Function 0x7ffe4417b680 'llrint' 'long long (float) noexcept'
|   |-UsingShadowDecl 0x7ffe44197c88 <col:9> col:9 implicit Function 0x7ffe4417b9a0 'llrint' 'long long (long double) noexcept'
|   |-UsingShadowDecl 0x7ffe44197cd0 <col:9> col:9 implicit FunctionTemplate 0x7ffe4417c170 'llrint'
|   |-UsingDecl 0x7ffe44197d20 <line:424:1, col:9> col:9 ::llrintf
|   |-UsingShadowDecl 0x7ffe44197d70 <col:9> col:9 implicit Function 0x7ffe4391c888 'llrintf' 'long long (float)'
|   |-UsingDecl 0x7ffe44197dc0 <line:425:1, col:9> col:9 ::llround
|   |-UsingShadowDecl 0x7ffe44197e10 <col:9> col:9 implicit Function 0x7ffe4391d048 'llround' 'long long (double)'
|   |-UsingShadowDecl 0x7ffe44197e58 <col:9> col:9 implicit Function 0x7ffe4417ca48 'llround' 'long long (float) noexcept'
|   |-UsingShadowDecl 0x7ffe44197ea0 <col:9> col:9 implicit Function 0x7ffe4417cd38 'llround' 'long long (long double) noexcept'
|   |-UsingShadowDecl 0x7ffe44197ee8 <col:9> col:9 implicit FunctionTemplate 0x7ffe4417d3f0 'llround'
|   |-UsingDecl 0x7ffe44197f38 <line:426:1, col:9> col:9 ::llroundf
|   |-UsingShadowDecl 0x7ffe44197f88 <col:9> col:9 implicit Function 0x7ffe4391cea8 'llroundf' 'long long (float)'
|   |-UsingDecl 0x7ffe44197fd8 <line:427:1, col:9> col:9 ::log1p
|   |-UsingShadowDecl 0x7ffe44198028 <col:9> col:9 implicit Function 0x7ffe43910ff0 'log1p' 'double (double)'
|   |-UsingShadowDecl 0x7ffe44198070 <col:9> col:9 implicit Function 0x7ffe4417da10 'log1p' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7ffe441980b8 <col:9> col:9 implicit Function 0x7ffe4417dd00 'log1p' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7ffe44198100 <col:9> col:9 implicit FunctionTemplate 0x7ffe4417e3b0 'log1p'
|   |-UsingDecl 0x7ffe44198150 <line:428:1, col:9> col:9 ::log1pf
|   |-UsingShadowDecl 0x7ffe441981a0 <col:9> col:9 implicit Function 0x7ffe43910e50 'log1pf' 'float (float)'
|   |-UsingDecl 0x7ffe441981f0 <line:429:1, col:9> col:9 ::log2
|   |-UsingShadowDecl 0x7ffe44198240 <col:9> col:9 implicit Function 0x7ffe43910b10 'log2' 'double (double)'
|   |-UsingShadowDecl 0x7ffe44198288 <col:9> col:9 implicit Function 0x7ffe4417e9d0 'log2' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7ffe441982d0 <col:9> col:9 implicit Function 0x7ffe4417ecc0 'log2' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7ffe44198318 <col:9> col:9 implicit FunctionTemplate 0x7ffe4417f370 'log2'
|   |-UsingDecl 0x7ffe44198368 <line:430:1, col:9> col:9 ::log2f
|   |-UsingShadowDecl 0x7ffe441983b8 <col:9> col:9 implicit Function 0x7ffe43910970 'log2f' 'float (float)'
|   |-UsingDecl 0x7ffe44198408 <line:431:1, col:9> col:9 ::logb
|   |-UsingShadowDecl 0x7ffe44198458 <col:9> col:9 implicit Function 0x7ffe439124f0 'logb' 'double (double)'
|   |-UsingShadowDecl 0x7ffe441984a0 <col:9> col:9 implicit Function 0x7ffe4417f990 'logb' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7ffe441984e8 <col:9> col:9 implicit Function 0x7ffe4417fc80 'logb' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7ffe44198530 <col:9> col:9 implicit FunctionTemplate 0x7ffe44180330 'logb'
|   |-UsingDecl 0x7ffe44198580 <line:432:1, col:9> col:9 ::logbf
|   |-UsingShadowDecl 0x7ffe441985d0 <col:9> col:9 implicit Function 0x7ffe43911330 'logbf' 'float (float)'
|   |-UsingDecl 0x7ffe44198620 <line:433:1, col:9> col:9 ::lrint
|   |-UsingShadowDecl 0x7ffe44198670 <col:9> col:9 implicit Function 0x7ffe4391ba88 'lrint' 'long (double)'
|   |-UsingShadowDecl 0x7ffe441986b8 <col:9> col:9 implicit Function 0x7ffe44181950 'lrint' 'long (float) noexcept'
|   |-UsingShadowDecl 0x7ffe44198700 <col:9> col:9 implicit Function 0x7ffe44181c70 'lrint' 'long (long double) noexcept'
|   |-UsingShadowDecl 0x7ffe44198748 <col:9> col:9 implicit FunctionTemplate 0x7ffe44182440 'lrint'
|   |-UsingDecl 0x7ffe44198798 <line:434:1, col:9> col:9 ::lrintf
|   |-UsingShadowDecl 0x7ffe441987e8 <col:9> col:9 implicit Function 0x7ffe4391b868 'lrintf' 'long (float)'
|   |-UsingDecl 0x7ffe44198838 <line:435:1, col:9> col:9 ::lround
|   |-UsingShadowDecl 0x7ffe44198888 <col:9> col:9 implicit Function 0x7ffe4391c508 'lround' 'long (double)'
|   |-UsingShadowDecl 0x7ffe441988d0 <col:9> col:9 implicit Function 0x7ffe44182cf8 'lround' 'long (float) noexcept'
|   |-UsingShadowDecl 0x7ffe44198918 <col:9> col:9 implicit Function 0x7ffe44182fe8 'lround' 'long (long double) noexcept'
|   |-UsingShadowDecl 0x7ffe44198960 <col:9> col:9 implicit FunctionTemplate 0x7ffe441836a0 'lround'
|   |-UsingDecl 0x7ffe441989b0 <line:436:1, col:9> col:9 ::lroundf
|   |-UsingShadowDecl 0x7ffe44198a00 <col:9> col:9 implicit Function 0x7ffe4391c368 'lroundf' 'long (float)'
|   |-UsingDecl 0x7ffe44198a50 <line:438:1, col:9> col:9 ::nan
|   |-UsingShadowDecl 0x7ffe44198aa0 <col:9> col:9 implicit Function 0x7ffe4391f6e8 'nan' 'double (const char *)'
|   |-UsingDecl 0x7ffe44198af0 <line:439:1, col:9> col:9 ::nanf
|   |-UsingShadowDecl 0x7ffe44198b40 <col:9> col:9 implicit Function 0x7ffe4391f4c8 'nanf' 'float (const char *)'
|   |-UsingDecl 0x7ffe44198b90 <line:441:1, col:9> col:9 ::nearbyint
|   |-UsingShadowDecl 0x7ffe44198be0 <col:9> col:9 implicit Function 0x7ffe4391b008 'nearbyint' 'double (double)'
|   |-UsingShadowDecl 0x7ffe44198c28 <col:9> col:9 implicit Function 0x7ffe44183cc0 'nearbyint' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7ffe44198c70 <col:9> col:9 implicit Function 0x7ffe44183fb0 'nearbyint' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7ffe44198cb8 <col:9> col:9 implicit FunctionTemplate 0x7ffe44184660 'nearbyint'
|   |-UsingDecl 0x7ffe44198d08 <line:442:1, col:9> col:9 ::nearbyintf
|   |-UsingShadowDecl 0x7ffe44198d58 <col:9> col:9 implicit Function 0x7ffe4391ae68 'nearbyintf' 'float (float)'
|   |-UsingDecl 0x7ffe44198da8 <line:443:1, col:9> col:9 ::nextafter
|   |-UsingShadowDecl 0x7ffe44198df8 <col:9> col:9 implicit Function 0x7ffe4391fd90 'nextafter' 'double (double, double)'
|   |-UsingShadowDecl 0x7ffe44198e40 <col:9> col:9 implicit Function 0x7ffe44184d00 'nextafter' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7ffe44198e88 <col:9> col:9 implicit Function 0x7ffe441850c0 'nextafter' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7ffe44198ed0 <col:9> col:9 implicit FunctionTemplate 0x7ffe44185b60 'nextafter'
|   |-UsingDecl 0x7ffe44198f20 <line:444:1, col:9> col:9 ::nextafterf
|   |-UsingShadowDecl 0x7ffe44198f70 <col:9> col:9 implicit Function 0x7ffe4391fb68 'nextafterf' 'float (float, float)'
|   |-UsingDecl 0x7ffe44198fc0 <line:445:1, col:9> col:9 ::nexttoward
|   |-UsingShadowDecl 0x7ffe44199010 <col:9> col:9 implicit Function 0x7ffe43920228 'nexttoward' 'double (double, long double)'
|   |-UsingShadowDecl 0x7ffe44199058 <col:9> col:9 implicit Function 0x7ffe44186518 'nexttoward' 'float (float, long double) noexcept'
|   |-UsingShadowDecl 0x7ffe441990a0 <col:9> col:9 implicit Function 0x7ffe44186900 'nexttoward' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7ffe441990e8 <col:9> col:9 implicit FunctionTemplate 0x7ffe441870d0 'nexttoward'
|   |-UsingDecl 0x7ffe44199138 <line:446:1, col:9> col:9 ::nexttowardf
|   |-UsingShadowDecl 0x7ffe44199188 <col:9> col:9 implicit Function 0x7ffe439114d8 'nexttowardf' 'float (float, long double)'
|   |-UsingDecl 0x7ffe441991d8 <line:447:1, col:9> col:9 ::remainder
|   |-UsingShadowDecl 0x7ffe44199228 <col:9> col:9 implicit Function 0x7ffe4391e200 'remainder' 'double (double, double)'
|   |-UsingShadowDecl 0x7ffe44199270 <col:9> col:9 implicit Function 0x7ffe441877e8 'remainder' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7ffe441992b8 <col:9> col:9 implicit Function 0x7ffe44187ba8 'remainder' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7ffe44199300 <col:9> col:9 implicit FunctionTemplate 0x7ffe44188650 'remainder'
|   |-UsingDecl 0x7ffe44199350 <line:448:1, col:9> col:9 ::remainderf
|   |-UsingShadowDecl 0x7ffe441993a0 <col:9> col:9 implicit Function 0x7ffe4391dfd8 'remainderf' 'float (float, float)'
|   |-UsingDecl 0x7ffe441993f0 <line:449:1, col:9> col:9 ::remquo
|   |-UsingShadowDecl 0x7ffe44199440 <col:9> col:9 implicit Function 0x7ffe4391e9c8 'remquo' 'double (double, double, int *)'
|   |-UsingShadowDecl 0x7ffe44199488 <col:9> col:9 implicit Function 0x7ffe441890d0 'remquo' 'float (float, float, int *) noexcept'
|   |-UsingShadowDecl 0x7ffe441994d0 <col:9> col:9 implicit Function 0x7ffe441895e0 'remquo' 'long double (long double, long double, int *) noexcept'
|   |-UsingShadowDecl 0x7ffe44199518 <col:9> col:9 implicit FunctionTemplate 0x7ffe4418a1e0 'remquo'
|   |-UsingDecl 0x7ffe44199568 <line:450:1, col:9> col:9 ::remquof
|   |-UsingShadowDecl 0x7ffe441995b8 <col:9> col:9 implicit Function 0x7ffe4391e728 'remquof' 'float (float, float, int *)'
|   |-UsingDecl 0x7ffe44199608 <line:451:1, col:9> col:9 ::rint
|   |-UsingShadowDecl 0x7ffe44199658 <col:9> col:9 implicit Function 0x7ffe4391b4f0 'rint' 'double (double)'
|   |-UsingShadowDecl 0x7ffe441996a0 <col:9> col:9 implicit Function 0x7ffe4418ab48 'rint' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7ffe441996e8 <col:9> col:9 implicit Function 0x7ffe4418ae38 'rint' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7ffe44199730 <col:9> col:9 implicit FunctionTemplate 0x7ffe4418b4f0 'rint'
|   |-UsingDecl 0x7ffe44199780 <line:452:1, col:9> col:9 ::rintf
|   |-UsingShadowDecl 0x7ffe441997d0 <col:9> col:9 implicit Function 0x7ffe4391b348 'rintf' 'float (float)'
|   |-UsingDecl 0x7ffe44199820 <line:453:1, col:9> col:9 ::round
|   |-UsingShadowDecl 0x7ffe44199870 <col:9> col:9 implicit Function 0x7ffe4391c028 'round' 'double (double)'
|   |-UsingShadowDecl 0x7ffe441998b8 <col:9> col:9 implicit Function 0x7ffe4418bb10 'round' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7ffe44199900 <col:9> col:9 implicit Function 0x7ffe4418be00 'round' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7ffe44199948 <col:9> col:9 implicit FunctionTemplate 0x7ffe4418c4b0 'round'
|   |-UsingDecl 0x7ffe44199998 <line:454:1, col:9> col:9 ::roundf
|   |-UsingShadowDecl 0x7ffe441999e8 <col:9> col:9 implicit Function 0x7ffe4391be88 'roundf' 'float (float)'
|   |-UsingDecl 0x7ffe44199a38 <line:455:1, col:9> col:9 ::scalbln
|   |-UsingShadowDecl 0x7ffe44199a88 <col:9> col:9 implicit Function 0x7ffe43917058 'scalbln' 'double (double, long)'
|   |-UsingShadowDecl 0x7ffe44199ad0 <col:9> col:9 implicit Function 0x7ffe4418cb50 'scalbln' 'float (float, long) noexcept'
|   |-UsingShadowDecl 0x7ffe44199b18 <col:9> col:9 implicit Function 0x7ffe4418cf40 'scalbln' 'long double (long double, long) noexcept'
|   |-UsingShadowDecl 0x7ffe44199b60 <col:9> col:9 implicit FunctionTemplate 0x7ffe4418d770 'scalbln'
|   |-UsingDecl 0x7ffe44199bb0 <line:456:1, col:9> col:9 ::scalblnf
|   |-UsingShadowDecl 0x7ffe44199c00 <col:9> col:9 implicit Function 0x7ffe43916da8 'scalblnf' 'float (float, long)'
|   |-UsingDecl 0x7ffe44199c50 <line:457:1, col:9> col:9 ::scalbn
|   |-UsingShadowDecl 0x7ffe44199ca0 <col:9> col:9 implicit Function 0x7ffe43916910 'scalbn' 'double (double, int)'
|   |-UsingShadowDecl 0x7ffe44199ce8 <col:9> col:9 implicit Function 0x7ffe4418de88 'scalbn' 'float (float, int) noexcept'
|   |-UsingShadowDecl 0x7ffe44199d30 <col:9> col:9 implicit Function 0x7ffe4418e248 'scalbn' 'long double (long double, int) noexcept'
|   |-UsingShadowDecl 0x7ffe44199d78 <col:9> col:9 implicit FunctionTemplate 0x7ffe4418e9e0 'scalbn'
|   |-UsingDecl 0x7ffe44199dc8 <line:458:1, col:9> col:9 ::scalbnf
|   |-UsingShadowDecl 0x7ffe44199e18 <col:9> col:9 implicit Function 0x7ffe439166e8 'scalbnf' 'float (float, int)'
|   |-UsingDecl 0x7ffe44199e68 <line:459:1, col:9> col:9 ::tgamma
|   |-UsingShadowDecl 0x7ffe44199eb8 <col:9> col:9 implicit Function 0x7ffe4391a160 'tgamma' 'double (double)'
|   |-UsingShadowDecl 0x7ffe44199f00 <col:9> col:9 implicit Function 0x7ffe4418f050 'tgamma' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7ffe44199f48 <col:9> col:9 implicit Function 0x7ffe4418f340 'tgamma' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7ffe44199f90 <col:9> col:9 implicit FunctionTemplate 0x7ffe4418f9f0 'tgamma'
|   |-UsingDecl 0x7ffe44199fe0 <line:460:1, col:9> col:9 ::tgammaf
|   |-UsingShadowDecl 0x7ffe4419a030 <col:9> col:9 implicit Function 0x7ffe43919fc0 'tgammaf' 'float (float)'
|   |-UsingDecl 0x7ffe4419a080 <line:461:1, col:9> col:9 ::trunc
|   |-UsingShadowDecl 0x7ffe4419a0d0 <col:9> col:9 implicit Function 0x7ffe4391d5a0 'trunc' 'double (double)'
|   |-UsingShadowDecl 0x7ffe4419a118 <col:9> col:9 implicit Function 0x7ffe44190010 'trunc' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7ffe4419a160 <col:9> col:9 implicit Function 0x7ffe44190300 'trunc' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7ffe4419a1a8 <col:9> col:9 implicit FunctionTemplate 0x7ffe441909b0 'trunc'
|   |-UsingDecl 0x7ffe4419a1f8 <line:462:1, col:9> col:9 ::truncf
|   |-UsingShadowDecl 0x7ffe4419a248 <col:9> col:9 implicit Function 0x7ffe4391d400 'truncf' 'float (float)'
|   |-UsingDecl 0x7ffe4419a298 <line:464:1, col:9> col:9 ::acosl
|   |-UsingShadowDecl 0x7ffe4419a2e8 <col:9> col:9 implicit Function 0x7ffe43909878 'acosl' 'long double (long double)'
|   |-UsingDecl 0x7ffe4419a338 <line:465:1, col:9> col:9 ::asinl
|   |-UsingShadowDecl 0x7ffe4419a388 <col:9> col:9 implicit Function 0x7ffe43909da0 'asinl' 'long double (long double)'
|   |-UsingDecl 0x7ffe4419c400 <line:466:1, col:9> col:9 ::atanl
|   |-UsingShadowDecl 0x7ffe4419c450 <col:9> col:9 implicit Function 0x7ffe4390a280 'atanl' 'long double (long double)'
|   |-UsingDecl 0x7ffe4419c4a0 <line:467:1, col:9> col:9 ::atan2l
|   |-UsingShadowDecl 0x7ffe4419c4f0 <col:9> col:9 implicit Function 0x7ffe4390aa48 'atan2l' 'long double (long double, long double)'
|   |-UsingDecl 0x7ffe4419c540 <line:468:1, col:9> col:9 ::ceill
|   |-UsingShadowDecl 0x7ffe4419c590 <col:9> col:9 implicit Function 0x7ffe4391a7e8 'ceill' 'long double (long double)'
|   |-UsingDecl 0x7ffe4419c5e0 <line:469:1, col:9> col:9 ::cosl
|   |-UsingShadowDecl 0x7ffe4419c630 <col:9> col:9 implicit Function 0x7ffe4390b770 'cosl' 'long double (long double)'
|   |-UsingDecl 0x7ffe4419c680 <line:470:1, col:9> col:9 ::coshl
|   |-UsingShadowDecl 0x7ffe4419c6d0 <col:9> col:9 implicit Function 0x7ffe4390e4f0 'coshl' 'long double (long double)'
|   |-UsingDecl 0x7ffe4419c720 <line:471:1, col:9> col:9 ::expl
|   |-UsingShadowDecl 0x7ffe4419c770 <col:9> col:9 implicit Function 0x7ffe4390f400 'expl' 'long double (long double)'
|   |-UsingDecl 0x7ffe4419c7c0 <line:472:1, col:9> col:9 ::fabsl
|   |-UsingShadowDecl 0x7ffe4419c810 <col:9> col:9 implicit Function 0x7ffe43917830 'fabsl' 'long double (long double)'
|   |-UsingDecl 0x7ffe4419c860 <line:473:1, col:9> col:9 ::floorl
|   |-UsingShadowDecl 0x7ffe4419c8b0 <col:9> col:9 implicit Function 0x7ffe4391acc8 'floorl' 'long double (long double)'
|   |-UsingDecl 0x7ffe4419c900 <line:474:1, col:9> col:9 ::fmodl
|   |-UsingShadowDecl 0x7ffe4419c950 <col:9> col:9 implicit Function 0x7ffe4391ddb0 'fmodl' 'long double (long double, long double)'
|   |-UsingDecl 0x7ffe4419c9a0 <line:475:1, col:9> col:9 ::frexpl
|   |-UsingShadowDecl 0x7ffe4419c9f0 <col:9> col:9 implicit Function 0x7ffe43914ec8 'frexpl' 'long double (long double, int *)'
|   |-UsingDecl 0x7ffe4419ca40 <line:476:1, col:9> col:9 ::ldexpl
|   |-UsingShadowDecl 0x7ffe4419ca90 <col:9> col:9 implicit Function 0x7ffe439146b8 'ldexpl' 'long double (long double, int)'
|   |-UsingDecl 0x7ffe4419cae0 <line:477:1, col:9> col:9 ::logl
|   |-UsingShadowDecl 0x7ffe4419cb30 <col:9> col:9 implicit Function 0x7ffe439102a0 'logl' 'long double (long double)'
|   |-UsingDecl 0x7ffe4419cb80 <line:478:1, col:9> col:9 ::log10l
|   |-UsingShadowDecl 0x7ffe4419cbd0 <col:9> col:9 implicit Function 0x7ffe439107d0 'log10l' 'long double (long double)'
|   |-UsingDecl 0x7ffe4419cc20 <line:479:1, col:9> col:9 ::modfl
|   |-UsingShadowDecl 0x7ffe4419cc70 <col:9> col:9 implicit Function 0x7ffe43912e98 'modfl' 'long double (long double, long double *)'
|   |-UsingDecl 0x7ffe4419ccc0 <line:480:1, col:9> col:9 ::powl
|   |-UsingShadowDecl 0x7ffe4419cd10 <col:9> col:9 implicit Function 0x7ffe43918a78 'powl' 'long double (long double, long double)'
|   |-UsingDecl 0x7ffe4419cd60 <line:481:1, col:9> col:9 ::sinl
|   |-UsingShadowDecl 0x7ffe4419cdb0 <col:9> col:9 implicit Function 0x7ffe4390bc50 'sinl' 'long double (long double)'
|   |-UsingDecl 0x7ffe4419ce00 <line:482:1, col:9> col:9 ::sinhl
|   |-UsingShadowDecl 0x7ffe4419ce50 <col:9> col:9 implicit Function 0x7ffe4390e9d0 'sinhl' 'long double (long double)'
|   |-UsingDecl 0x7ffe4419cea0 <line:483:1, col:9> col:9 ::sqrtl
|   |-UsingShadowDecl 0x7ffe4419cef0 <col:9> col:9 implicit Function 0x7ffe43918f60 'sqrtl' 'long double (long double)'
|   |-UsingDecl 0x7ffe4419cf40 <line:484:1, col:9> col:9 ::tanl
|   |-UsingShadowDecl 0x7ffe4419cf90 <col:9> col:9 implicit Function 0x7ffe4390c130 'tanl' 'long double (long double)'
|   |-UsingDecl 0x7ffe4419cfe0 <line:486:1, col:9> col:9 ::tanhl
|   |-UsingShadowDecl 0x7ffe4419d030 <col:9> col:9 implicit Function 0x7ffe4390eeb0 'tanhl' 'long double (long double)'
|   |-UsingDecl 0x7ffe4419d080 <line:487:1, col:9> col:9 ::acoshl
|   |-UsingShadowDecl 0x7ffe4419d0d0 <col:9> col:9 implicit Function 0x7ffe4390ce30 'acoshl' 'long double (long double)'
|   |-UsingDecl 0x7ffe4419d120 <line:488:1, col:9> col:9 ::asinhl
|   |-UsingShadowDecl 0x7ffe4419d170 <col:9> col:9 implicit Function 0x7ffe4390d310 'asinhl' 'long double (long double)'
|   |-UsingDecl 0x7ffe4419d1c0 <line:489:1, col:9> col:9 ::atanhl
|   |-UsingShadowDecl 0x7ffe4419d210 <col:9> col:9 implicit Function 0x7ffe4390d7f0 'atanhl' 'long double (long double)'
|   |-UsingDecl 0x7ffe4419d260 <line:490:1, col:9> col:9 ::cbrtl
|   |-UsingShadowDecl 0x7ffe4419d2b0 <col:9> col:9 implicit Function 0x7ffe43917d10 'cbrtl' 'long double (long double)'
|   |-UsingDecl 0x7ffe4419d300 <line:492:1, col:9> col:9 ::copysignl
|   |-UsingShadowDecl 0x7ffe4419d350 <col:9> col:9 implicit Function 0x7ffe4391f290 'copysignl' 'long double (long double, long double)'
|   |-UsingDecl 0x7ffe4419d3a0 <line:494:1, col:9> col:9 ::erfl
|   |-UsingShadowDecl 0x7ffe4419d3f0 <col:9> col:9 implicit Function 0x7ffe43919490 'erfl' 'long double (long double)'
|   |-UsingDecl 0x7ffe4419d440 <line:495:1, col:9> col:9 ::erfcl
|   |-UsingShadowDecl 0x7ffe4419d490 <col:9> col:9 implicit Function 0x7ffe43919970 'erfcl' 'long double (long double)'
|   |-UsingDecl 0x7ffe4419d4e0 <line:496:1, col:9> col:9 ::exp2l
|   |-UsingShadowDecl 0x7ffe4419d530 <col:9> col:9 implicit Function 0x7ffe4390f8e0 'exp2l' 'long double (long double)'
|   |-UsingDecl 0x7ffe4419d580 <line:497:1, col:9> col:9 ::expm1l
|   |-UsingShadowDecl 0x7ffe4419d5d0 <col:9> col:9 implicit Function 0x7ffe4390fdc0 'expm1l' 'long double (long double)'
|   |-UsingDecl 0x7ffe4419d620 <line:498:1, col:9> col:9 ::fdiml
|   |-UsingShadowDecl 0x7ffe4419d670 <col:9> col:9 implicit Function 0x7ffe43911db8 'fdiml' 'long double (long double, long double)'
|   |-UsingDecl 0x7ffe4419d6c0 <line:499:1, col:9> col:9 ::fmal
|   |-UsingShadowDecl 0x7ffe4419d710 <col:9> col:9 implicit Function 0x7ffe43915488 'fmal' 'long double (long double, long double, long double)'
|   |-UsingDecl 0x7ffe4419d760 <line:500:1, col:9> col:9 ::fmaxl
|   |-UsingShadowDecl 0x7ffe4419d7b0 <col:9> col:9 implicit Function 0x7ffe43924438 'fmaxl' 'long double (long double, long double)'
|   |-UsingDecl 0x7ffe4419d800 <line:501:1, col:9> col:9 ::fminl
|   |-UsingShadowDecl 0x7ffe4419d850 <col:9> col:9 implicit Function 0x7ffe43924ab0 'fminl' 'long double (long double, long double)'
|   |-UsingDecl 0x7ffe4419d8a0 <line:502:1, col:9> col:9 ::hypotl
|   |-UsingShadowDecl 0x7ffe4419d8f0 <col:9> col:9 implicit Function 0x7ffe43918400 'hypotl' 'long double (long double, long double)'
|   |-UsingDecl 0x7ffe4419d940 <line:503:1, col:9> col:9 ::ilogbl
|   |-UsingShadowDecl 0x7ffe4419d990 <col:9> col:9 implicit Function 0x7ffe43916490 'ilogbl' 'int (long double)'
|   |-UsingDecl 0x7ffe4419d9e0 <line:504:1, col:9> col:9 ::lgammal
|   |-UsingShadowDecl 0x7ffe4419da30 <col:9> col:9 implicit Function 0x7ffe43919e30 'lgammal' 'long double (long double)'
|   |-UsingDecl 0x7ffe4419da80 <line:505:1, col:9> col:9 ::llrintl
|   |-UsingShadowDecl 0x7ffe4419dad0 <col:9> col:9 implicit Function 0x7ffe4391ccc8 'llrintl' 'long long (long double)'
|   |-UsingDecl 0x7ffe4419db20 <line:506:1, col:9> col:9 ::llroundl
|   |-UsingShadowDecl 0x7ffe4419db70 <col:9> col:9 implicit Function 0x7ffe4391d1e8 'llroundl' 'long long (long double)'
|   |-UsingDecl 0x7ffe4419dbc0 <line:507:1, col:9> col:9 ::log1pl
|   |-UsingShadowDecl 0x7ffe4419dc10 <col:9> col:9 implicit Function 0x7ffe43911190 'log1pl' 'long double (long double)'
|   |-UsingDecl 0x7ffe4419dc60 <line:508:1, col:9> col:9 ::log2l
|   |-UsingShadowDecl 0x7ffe4419dcb0 <col:9> col:9 implicit Function 0x7ffe43910cb0 'log2l' 'long double (long double)'
|   |-UsingDecl 0x7ffe4419dd00 <line:509:1, col:9> col:9 ::logbl
|   |-UsingShadowDecl 0x7ffe4419dd50 <col:9> col:9 implicit Function 0x7ffe43912690 'logbl' 'long double (long double)'
|   |-UsingDecl 0x7ffe4419dda0 <line:510:1, col:9> col:9 ::lrintl
|   |-UsingShadowDecl 0x7ffe4419ddf0 <col:9> col:9 implicit Function 0x7ffe4391bca8 'lrintl' 'long (long double)'
|   |-UsingDecl 0x7ffe4419de40 <line:511:1, col:9> col:9 ::lroundl
|   |-UsingShadowDecl 0x7ffe4419de90 <col:9> col:9 implicit Function 0x7ffe4391c6a8 'lroundl' 'long (long double)'
|   |-UsingDecl 0x7ffe4419dee0 <line:512:1, col:9> col:9 ::nanl
|   |-UsingShadowDecl 0x7ffe4419df30 <col:9> col:9 implicit Function 0x7ffe4391f908 'nanl' 'long double (const char *)'
|   |-UsingDecl 0x7ffe4419df80 <line:513:1, col:9> col:9 ::nearbyintl
|   |-UsingShadowDecl 0x7ffe4419dfd0 <col:9> col:9 implicit Function 0x7ffe4391b1a8 'nearbyintl' 'long double (long double)'
|   |-UsingDecl 0x7ffe4419e020 <line:514:1, col:9> col:9 ::nextafterl
|   |-UsingShadowDecl 0x7ffe4419e070 <col:9> col:9 implicit Function 0x7ffe4391ffb8 'nextafterl' 'long double (long double, long double)'
|   |-UsingDecl 0x7ffe4419e0c0 <line:515:1, col:9> col:9 ::nexttowardl
|   |-UsingShadowDecl 0x7ffe4419e110 <col:9> col:9 implicit Function 0x7ffe43911740 'nexttowardl' 'long double (long double, long double)'
|   |-UsingDecl 0x7ffe4419e160 <line:516:1, col:9> col:9 ::remainderl
|   |-UsingShadowDecl 0x7ffe4419e1b0 <col:9> col:9 implicit Function 0x7ffe4391e438 'remainderl' 'long double (long double, long double)'
|   |-UsingDecl 0x7ffe4419e200 <line:517:1, col:9> col:9 ::remquol
|   |-UsingShadowDecl 0x7ffe4419e250 <col:9> col:9 implicit Function 0x7ffe4391ec68 'remquol' 'long double (long double, long double, int *)'
|   |-UsingDecl 0x7ffe4419e2a0 <line:518:1, col:9> col:9 ::rintl
|   |-UsingShadowDecl 0x7ffe4419e2f0 <col:9> col:9 implicit Function 0x7ffe4391b690 'rintl' 'long double (long double)'
|   |-UsingDecl 0x7ffe4419e340 <line:519:1, col:9> col:9 ::roundl
|   |-UsingShadowDecl 0x7ffe4419e390 <col:9> col:9 implicit Function 0x7ffe4391c1c8 'roundl' 'long double (long double)'
|   |-UsingDecl 0x7ffe4419e3e0 <line:520:1, col:9> col:9 ::scalblnl
|   |-UsingShadowDecl 0x7ffe4419e430 <col:9> col:9 implicit Function 0x7ffe43917308 'scalblnl' 'long double (long double, long)'
|   |-UsingDecl 0x7ffe4419e480 <line:521:1, col:9> col:9 ::scalbnl
|   |-UsingShadowDecl 0x7ffe4419e4d0 <col:9> col:9 implicit Function 0x7ffe43916b38 'scalbnl' 'long double (long double, int)'
|   |-UsingDecl 0x7ffe4419e520 <line:522:1, col:9> col:9 ::tgammal
|   |-UsingShadowDecl 0x7ffe4419e570 <col:9> col:9 implicit Function 0x7ffe4391a300 'tgammal' 'long double (long double)'
|   |-UsingDecl 0x7ffe4419e5c0 <line:523:1, col:9> col:9 ::truncl
|   |-UsingShadowDecl 0x7ffe4419e610 <col:9> col:9 implicit Function 0x7ffe4391d740 'truncl' 'long double (long double)'
|   |-FunctionTemplateDecl 0x7ffe4419eae0 <line:549:1, line:559:1> line:552:1 __libcpp_isnan
|   | |-TemplateTypeParmDecl 0x7ffe4419e658 <line:549:11, col:17> col:17 referenced class depth 0 index 0 _A1
|   | `-FunctionDecl 0x7ffe4419ea48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:559:1> line:552:1 constexpr __libcpp_isnan 'typename enable_if<is_floating_point<_A1>::value, _Bool>::type (_A1) noexcept'
|   |   |-ParmVarDecl 0x7ffe4419e970 <col:16, col:20> col:20 referenced __lcpp_x '_A1'
|   |   |-CompoundStmt 0x7ffe4419ed68 <line:553:1, line:559:1>
|   |   | `-ReturnStmt 0x7ffe4419ed50 <line:555:5, col:36>
|   |   |   `-CallExpr 0x7ffe4419ed20 <col:12, col:36> '<dependent type>'
|   |   |     |-DeclRefExpr 0x7ffe4419ecd0 <col:12> '<builtin fn type>' Function 0x7ffe4419ebe0 '__builtin_isnan' 'int (...) noexcept'
|   |   |     `-DeclRefExpr 0x7ffe4419ecf8 <col:28> '_A1' lvalue ParmVar 0x7ffe4419e970 '__lcpp_x' '_A1'
|   |   |-AlwaysInlineAttr 0x7ffe4419eb38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
|   |   `-VisibilityAttr 0x7ffe4419eb80 <col:48, col:71> Hidden
|   |-FunctionTemplateDecl 0x7ffe4419f300 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:561:1, line:567:1> line:564:1 __libcpp_isnan
|   | |-TemplateTypeParmDecl 0x7ffe4419ed88 <line:561:11, col:17> col:17 referenced class depth 0 index 0 _A1
|   | `-FunctionDecl 0x7ffe4419f268 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:567:1> line:564:1 constexpr __libcpp_isnan 'typename enable_if<!is_floating_point<_A1>::value, _Bool>::type (_A1) noexcept'
|   |   |-ParmVarDecl 0x7ffe4419f150 <col:16, col:20> col:20 referenced __lcpp_x '_A1'
|   |   |-CompoundStmt 0x7ffe4419f480 <line:565:1, line:567:1>
|   |   | `-ReturnStmt 0x7ffe4419f468 <line:566:5, col:26>
|   |   |   `-CallExpr 0x7ffe4419f438 <col:12, col:26> '<dependent type>'
|   |   |     |-UnresolvedLookupExpr 0x7ffe4419f3b0 <col:12> '<overloaded function type>' lvalue (ADL) = 'isnan' 0x7ffe44192448 0x7ffe44192400
|   |   |     `-DeclRefExpr 0x7ffe4419f410 <col:18> '_A1' lvalue ParmVar 0x7ffe4419f150 '__lcpp_x' '_A1'
|   |   |-AlwaysInlineAttr 0x7ffe4419f358 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
|   |   `-VisibilityAttr 0x7ffe4419f3a0 <col:48, col:71> Hidden
|   |-FunctionTemplateDecl 0x7ffe4419f920 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:569:1, line:579:1> line:572:1 __libcpp_isinf
|   | |-TemplateTypeParmDecl 0x7ffe4419f4a0 <line:569:11, col:17> col:17 referenced class depth 0 index 0 _A1
|   | `-FunctionDecl 0x7ffe4419f888 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:579:1> line:572:1 constexpr __libcpp_isinf 'typename enable_if<is_floating_point<_A1>::value, _Bool>::type (_A1) noexcept'
|   |   |-ParmVarDecl 0x7ffe4419f7b0 <col:16, col:20> col:20 referenced __lcpp_x '_A1'
|   |   |-CompoundStmt 0x7ffe4419fba8 <line:573:1, line:579:1>
|   |   | `-ReturnStmt 0x7ffe4419fb90 <line:575:5, col:36>
|   |   |   `-CallExpr 0x7ffe4419fb60 <col:12, col:36> '<dependent type>'
|   |   |     |-DeclRefExpr 0x7ffe4419fb10 <col:12> '<builtin fn type>' Function 0x7ffe4419fa20 '__builtin_isinf' 'int (...) noexcept'
|   |   |     `-DeclRefExpr 0x7ffe4419fb38 <col:28> '_A1' lvalue ParmVar 0x7ffe4419f7b0 '__lcpp_x' '_A1'
|   |   |-AlwaysInlineAttr 0x7ffe4419f978 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
|   |   `-VisibilityAttr 0x7ffe4419f9c0 <col:48, col:71> Hidden
|   |-FunctionTemplateDecl 0x7ffe441a0060 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:581:1, line:587:1> line:584:1 __libcpp_isinf
|   | |-TemplateTypeParmDecl 0x7ffe4419fbc8 <line:581:11, col:17> col:17 referenced class depth 0 index 0 _A1
|   | `-FunctionDecl 0x7ffe4419ffc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:587:1> line:584:1 constexpr __libcpp_isinf 'typename enable_if<!is_floating_point<_A1>::value, _Bool>::type (_A1) noexcept'
|   |   |-ParmVarDecl 0x7ffe4419fef0 <col:16, col:20> col:20 referenced __lcpp_x '_A1'
|   |   |-CompoundStmt 0x7ffe441a01e0 <line:585:1, line:587:1>
|   |   | `-ReturnStmt 0x7ffe441a01c8 <line:586:5, col:26>
|   |   |   `-CallExpr 0x7ffe441a0198 <col:12, col:26> '<dependent type>'
|   |   |     |-UnresolvedLookupExpr 0x7ffe441a0110 <col:12> '<overloaded function type>' lvalue (ADL) = 'isinf' 0x7ffe44191360 0x7ffe44191318
|   |   |     `-DeclRefExpr 0x7ffe441a0170 <col:18> '_A1' lvalue ParmVar 0x7ffe4419fef0 '__lcpp_x' '_A1'
|   |   |-AlwaysInlineAttr 0x7ffe441a00b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
|   |   `-VisibilityAttr 0x7ffe441a0100 <col:48, col:71> Hidden
|   |-FunctionTemplateDecl 0x7ffe441a86a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:589:1, line:599:1> line:592:1 __libcpp_isfinite
|   | |-TemplateTypeParmDecl 0x7ffe441a0200 <line:589:11, col:17> col:17 referenced class depth 0 index 0 _A1
|   | `-FunctionDecl 0x7ffe441a8608 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:599:1> line:592:1 constexpr __libcpp_isfinite 'typename enable_if<is_floating_point<_A1>::value, _Bool>::type (_A1) noexcept'
|   |   |-ParmVarDecl 0x7ffe441a8530 <col:19, col:23> col:23 referenced __lcpp_x '_A1'
|   |   |-CompoundStmt 0x7ffe441a8928 <line:593:1, line:599:1>
|   |   | `-ReturnStmt 0x7ffe441a8910 <line:595:5, col:39>
|   |   |   `-CallExpr 0x7ffe441a88e0 <col:12, col:39> '<dependent type>'
|   |   |     |-DeclRefExpr 0x7ffe441a8890 <col:12> '<builtin fn type>' Function 0x7ffe441a87a0 '__builtin_isfinite' 'int (...) noexcept'
|   |   |     `-DeclRefExpr 0x7ffe441a88b8 <col:31> '_A1' lvalue ParmVar 0x7ffe441a8530 '__lcpp_x' '_A1'
|   |   |-AlwaysInlineAttr 0x7ffe441a86f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
|   |   `-VisibilityAttr 0x7ffe441a8740 <col:48, col:71> Hidden
|   `-FunctionTemplateDecl 0x7ffe441a8de0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:601:1, line:607:1> line:604:1 __libcpp_isfinite
|     |-TemplateTypeParmDecl 0x7ffe441a8948 <line:601:11, col:17> col:17 referenced class depth 0 index 0 _A1
|     `-FunctionDecl 0x7ffe441a8d48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:607:1> line:604:1 constexpr __libcpp_isfinite 'typename enable_if<!is_floating_point<_A1>::value, _Bool>::type (_A1) noexcept'
|       |-ParmVarDecl 0x7ffe441a8c70 <col:19, col:23> col:23 referenced __lcpp_x '_A1'
|       |-CompoundStmt 0x7ffe441a8f60 <line:605:1, line:607:1>
|       | `-ReturnStmt 0x7ffe441a8f48 <line:606:5, col:29>
|       |   `-CallExpr 0x7ffe441a8f18 <col:12, col:29> '<dependent type>'
|       |     |-UnresolvedLookupExpr 0x7ffe441a8e90 <col:12> '<overloaded function type>' lvalue (ADL) = 'isfinite' 0x7ffe44191278 0x7ffe44191230
|       |     `-DeclRefExpr 0x7ffe441a8ef0 <col:21> '_A1' lvalue ParmVar 0x7ffe441a8c70 '__lcpp_x' '_A1'
|       |-AlwaysInlineAttr 0x7ffe441a8e38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
|       `-VisibilityAttr 0x7ffe441a8e80 <col:48, col:71> Hidden
|-LinkageSpecDecl 0x7ffe4419eb90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:555:12> col:12 implicit C
| `-FunctionDecl 0x7ffe4419ebe0 <col:12> col:12 implicit referenced __builtin_isnan 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7ffe4419ec78 <col:12> Implicit
|   `-ConstAttr 0x7ffe4419ecc0 <col:12> Implicit
|-LinkageSpecDecl 0x7ffe4419f9d0 <line:575:12> col:12 implicit C
| `-FunctionDecl 0x7ffe4419fa20 <col:12> col:12 implicit referenced __builtin_isinf 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7ffe4419fab8 <col:12> Implicit
|   `-ConstAttr 0x7ffe4419fb00 <col:12> Implicit
|-LinkageSpecDecl 0x7ffe441a8750 <line:595:12> col:12 implicit C
| `-FunctionDecl 0x7ffe441a87a0 <col:12> col:12 implicit referenced __builtin_isfinite 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7ffe441a8838 <col:12> Implicit
|   `-ConstAttr 0x7ffe441a8880 <col:12> Implicit
|-CXXRecordDecl 0x7ffe441a8f80 </Users/tskull/Documents/Programming/Cpp/object_model_refined/3_data/06_multiple_inheritance.cpp:3:1, line:5:1> line:3:8 referenced struct P1 definition
| |-CXXRecordDecl 0x7ffe441a90a8 <col:1, col:8> col:8 implicit struct P1
| |-FieldDecl 0x7ffe441a9158 <line:4:5, col:12> col:12 referenced x 'double'
| |-CXXConstructorDecl 0x7ffe441aa768 <line:3:8> col:8 implicit P1 'void (void) noexcept' inline default trivial
| |-CXXDestructorDecl 0x7ffe441aa848 <col:8> col:8 implicit ~P1 'void (void)' inline default trivial noexcept-unevaluated 0x7ffe441aa848
| |-CXXConstructorDecl 0x7ffe441aab08 <col:8> col:8 implicit constexpr P1 'void (const struct P1 &)' inline default trivial noexcept-unevaluated 0x7ffe441aab08
| | `-ParmVarDecl 0x7ffe441aac30 <col:8> col:8 'const struct P1 &'
| `-CXXConstructorDecl 0x7ffe441aacc8 <col:8> col:8 implicit constexpr P1 'void (struct P1 &&)' inline default trivial noexcept-unevaluated 0x7ffe441aacc8
|   `-ParmVarDecl 0x7ffe441aadf0 <col:8> col:8 'struct P1 &&'
|-CXXRecordDecl 0x7ffe441a91c0 <line:7:1, line:9:1> line:7:8 referenced struct P2 definition
| |-CXXRecordDecl 0x7ffe441a92e8 <col:1, col:8> col:8 implicit struct P2
| |-FieldDecl 0x7ffe441a9398 <line:8:5, col:12> col:12 referenced y 'double'
| |-CXXConstructorDecl 0x7ffe441aa948 <line:7:8> col:8 implicit P2 'void (void) noexcept' inline default trivial
| |-CXXDestructorDecl 0x7ffe441aaa28 <col:8> col:8 implicit ~P2 'void (void)' inline default trivial noexcept-unevaluated 0x7ffe441aaa28
| |-CXXConstructorDecl 0x7ffe441aae58 <col:8> col:8 implicit constexpr P2 'void (const struct P2 &)' inline default trivial noexcept-unevaluated 0x7ffe441aae58
| | `-ParmVarDecl 0x7ffe441aaf80 <col:8> col:8 'const struct P2 &'
| `-CXXConstructorDecl 0x7ffe441ab018 <col:8> col:8 implicit constexpr P2 'void (struct P2 &&)' inline default trivial noexcept-unevaluated 0x7ffe441ab018
|   `-ParmVarDecl 0x7ffe441ab140 <col:8> col:8 'struct P2 &&'
|-CXXRecordDecl 0x7ffe441a9400 <line:11:1, line:13:1> line:11:8 referenced struct P3 definition
| |-public 'struct P1'
| |-public 'struct P2'
| |-CXXRecordDecl 0x7ffe441a95a8 <col:1, col:8> col:8 implicit struct P3
| |-FieldDecl 0x7ffe441a9658 <line:12:5, col:12> col:12 z 'double'
| |-CXXConstructorDecl 0x7ffe441aa668 <line:11:8> col:8 implicit referenced P3 'void (void) noexcept' inline default trivial
| |-CXXConstructorDecl 0x7ffe441ab1a8 <col:8> col:8 implicit constexpr P3 'void (const struct P3 &)' inline default trivial noexcept-unevaluated 0x7ffe441ab1a8
| | `-ParmVarDecl 0x7ffe441ab2d0 <col:8> col:8 'const struct P3 &'
| `-CXXConstructorDecl 0x7ffe441ab368 <col:8> col:8 implicit constexpr P3 'void (struct P3 &&)' inline default trivial noexcept-unevaluated 0x7ffe441ab368
|   `-ParmVarDecl 0x7ffe441ab490 <col:8> col:8 'struct P3 &&'
|-FunctionDecl 0x7ffe441a97c8 <line:15:1, line:18:1> line:15:8 used func1 'double (const struct P1 &)'
| |-ParmVarDecl 0x7ffe441a96f8 <col:14, col:24> col:24 used p 'const struct P1 &'
| `-CompoundStmt 0x7ffe441a9998 <line:16:1, line:18:1>
|   `-ReturnStmt 0x7ffe441a9980 <line:17:5, col:20>
|     `-BinaryOperator 0x7ffe441a9958 <col:12, col:20> 'double' '*'
|       |-ImplicitCastExpr 0x7ffe441a9928 <col:12, col:14> 'double' <LValueToRValue>
|       | `-MemberExpr 0x7ffe441a9890 <col:12, col:14> 'const double' lvalue .x 0x7ffe441a9158
|       |   `-DeclRefExpr 0x7ffe441a9868 <col:12> 'const struct P1' lvalue ParmVar 0x7ffe441a96f8 'p' 'const struct P1 &'
|       `-ImplicitCastExpr 0x7ffe441a9940 <col:18, col:20> 'double' <LValueToRValue>
|         `-MemberExpr 0x7ffe441a98f0 <col:18, col:20> 'const double' lvalue .x 0x7ffe441a9158
|           `-DeclRefExpr 0x7ffe441a98c8 <col:18> 'const struct P1' lvalue ParmVar 0x7ffe441a96f8 'p' 'const struct P1 &'
|-FunctionDecl 0x7ffe441a9ac8 <line:20:1, line:23:1> line:20:8 used func2 'double (const struct P2 &)'
| |-ParmVarDecl 0x7ffe441a99f8 <col:14, col:24> col:24 used p 'const struct P2 &'
| `-CompoundStmt 0x7ffe441a9c98 <line:21:1, line:23:1>
|   `-ReturnStmt 0x7ffe441a9c80 <line:22:5, col:20>
|     `-BinaryOperator 0x7ffe441a9c58 <col:12, col:20> 'double' '*'
|       |-ImplicitCastExpr 0x7ffe441a9c28 <col:12, col:14> 'double' <LValueToRValue>
|       | `-MemberExpr 0x7ffe441a9b90 <col:12, col:14> 'const double' lvalue .y 0x7ffe441a9398
|       |   `-DeclRefExpr 0x7ffe441a9b68 <col:12> 'const struct P2' lvalue ParmVar 0x7ffe441a99f8 'p' 'const struct P2 &'
|       `-ImplicitCastExpr 0x7ffe441a9c40 <col:18, col:20> 'double' <LValueToRValue>
|         `-MemberExpr 0x7ffe441a9bf0 <col:18, col:20> 'const double' lvalue .y 0x7ffe441a9398
|           `-DeclRefExpr 0x7ffe441a9bc8 <col:18> 'const struct P2' lvalue ParmVar 0x7ffe441a99f8 'p' 'const struct P2 &'
|-FunctionDecl 0x7ffe441a9dc8 <line:25:1, line:28:1> line:25:8 used func3 'double (const struct P3 &)'
| |-ParmVarDecl 0x7ffe441a9cf8 <col:14, col:24> col:24 used p 'const struct P3 &'
| `-CompoundStmt 0x7ffe441aa488 <line:26:1, line:28:1>
|   `-ReturnStmt 0x7ffe441aa470 <line:27:5, col:41>
|     `-CallExpr 0x7ffe441aa440 <col:12, col:41> 'double'
|       |-ImplicitCastExpr 0x7ffe441aa428 <col:12, col:17> 'double (*)(double)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x7ffe441aa3e8 <col:12, col:17> 'double (double)' lvalue Function 0x7ffe43918dc0 'sqrt' 'double (double)' (UsingShadow 0x7ffe44195420 'sqrt')
|       `-BinaryOperator 0x7ffe441aa190 <col:22, col:40> 'double' '+'
|         |-CallExpr 0x7ffe441aa000 <col:22, col:29> 'double'
|         | |-ImplicitCastExpr 0x7ffe441a9fe8 <col:22> 'double (*)(const struct P1 &)' <FunctionToPointerDecay>
|         | | `-DeclRefExpr 0x7ffe441a9f90 <col:22> 'double (const struct P1 &)' lvalue Function 0x7ffe441a97c8 'func1' 'double (const struct P1 &)'
|         | `-ImplicitCastExpr 0x7ffe441aa030 <col:28> 'const struct P1' lvalue <DerivedToBase (P1)>
|         |   `-DeclRefExpr 0x7ffe441a9f68 <col:28> 'const struct P3' lvalue ParmVar 0x7ffe441a9cf8 'p' 'const struct P3 &'
|         `-CallExpr 0x7ffe441aa140 <col:33, col:40> 'double'
|           |-ImplicitCastExpr 0x7ffe441aa128 <col:33> 'double (*)(const struct P2 &)' <FunctionToPointerDecay>
|           | `-DeclRefExpr 0x7ffe441aa0d0 <col:33> 'double (const struct P2 &)' lvalue Function 0x7ffe441a9ac8 'func2' 'double (const struct P2 &)'
|           `-ImplicitCastExpr 0x7ffe441aa170 <col:39> 'const struct P2' lvalue <DerivedToBase (P2)>
|             `-DeclRefExpr 0x7ffe441aa0a8 <col:39> 'const struct P3' lvalue ParmVar 0x7ffe441a9cf8 'p' 'const struct P3 &'
`-FunctionDecl 0x7ffe441aa4d0 <line:30:1, line:37:1> line:30:5 main 'int (void)'
  `-CompoundStmt 0x7ffe441abb50 <line:31:1, line:37:1>
    |-DeclStmt 0x7ffe441ab768 <line:32:5, col:12>
    | `-VarDecl 0x7ffe441aa5a8 <col:5, col:11> col:8 used p3 'struct P3' listinit
    |   `-CXXConstructExpr 0x7ffe441ab4f8 <col:8, col:11> 'struct P3' 'void (void) noexcept' zeroing
    |-DeclStmt 0x7ffe441ab8a8 <line:33:5, col:17>
    | `-VarDecl 0x7ffe441ab7b8 <col:5, col:15> col:9 pv 'struct P2 *' cinit
    |   `-ImplicitCastExpr 0x7ffe441ab888 <col:14, col:15> 'struct P2 *' <DerivedToBase (P2)>
    |     `-UnaryOperator 0x7ffe441ab868 <col:14, col:15> 'struct P3 *' prefix '&'
    |       `-DeclRefExpr 0x7ffe441ab818 <col:15> 'struct P3' lvalue Var 0x7ffe441aa5a8 'p3' 'struct P3'
    |-DeclStmt 0x7ffe441abb00 <line:35:5, col:23>
    | `-VarDecl 0x7ffe441ab8d0 <col:5, col:22> col:10 v 'double':'double' cinit
    |   `-CallExpr 0x7ffe441aba20 <col:14, col:22> 'double'
    |     |-ImplicitCastExpr 0x7ffe441aba08 <col:14> 'double (*)(const struct P3 &)' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x7ffe441ab9b0 <col:14> 'double (const struct P3 &)' lvalue Function 0x7ffe441a9dc8 'func3' 'double (const struct P3 &)'
    |     `-ImplicitCastExpr 0x7ffe441aba50 <col:20> 'const struct P3' lvalue <NoOp>
    |       `-DeclRefExpr 0x7ffe441ab988 <col:20> 'struct P3' lvalue Var 0x7ffe441aa5a8 'p3' 'struct P3'
    `-ReturnStmt 0x7ffe441abb38 <line:36:5, col:12>
      `-IntegerLiteral 0x7ffe441abb18 <col:12> 'int' 0
