TranslationUnitDecl 0x7fa3328326d0 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x7fa332832c60 <<invalid sloc>> <invalid sloc> implicit referenced __int128_t '__int128'
| `-BuiltinType 0x7fa332832940 '__int128'
|-TypedefDecl 0x7fa332832cd0 <<invalid sloc>> <invalid sloc> implicit referenced __uint128_t 'unsigned __int128'
| `-BuiltinType 0x7fa332832960 'unsigned __int128'
|-TypedefDecl 0x7fa332833018 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x7fa332832dc0 'struct __NSConstantString_tag'
|   `-CXXRecord 0x7fa332832d28 '__NSConstantString_tag'
|-TypedefDecl 0x7fa3328330b0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x7fa332833070 'char *'
|   `-BuiltinType 0x7fa332832760 'char'
|-TypedefDecl 0x7fa33302ee00 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x7fa332833390 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x7fa3328331a0 'struct __va_list_tag'
|     `-CXXRecord 0x7fa332833108 '__va_list_tag'
|-NamespaceDecl 0x7fa33302ee58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:442:1, line:445:1> line:442:11 std
| `-NamespaceDecl 0x7fa33302eec0 <line:443:3, line:444:3> <scratch space>:25:1 __1 inline
|-LinkageSpecDecl 0x7fa33302efd8 </usr/include/sys/cdefs.h:71:23, line:72:21> line:71:30 C
| |-TypedefDecl 0x7fa33302f040 </usr/include/math.h:44:5, col:19> col:19 float_t 'float'
| | `-BuiltinType 0x7fa3328328c0 'float'
| |-TypedefDecl 0x7fa33302f0b0 <line:45:5, col:20> col:20 double_t 'double'
| | `-BuiltinType 0x7fa3328328e0 'double'
| |-FunctionDecl 0x7fa33302f1d8 <line:111:1, col:35> col:12 __math_errhandling 'int (void)' extern
| |-FunctionDecl 0x7fa33302f398 <line:144:1, col:31> col:12 referenced __fpclassifyf 'int (float)' extern
| | `-ParmVarDecl 0x7fa33302f2c8 <col:26> col:31 'float'
| |-FunctionDecl 0x7fa33302f518 <line:145:1, col:32> col:12 referenced __fpclassifyd 'int (double)' extern
| | `-ParmVarDecl 0x7fa33302f450 <col:26> col:32 'double'
| |-FunctionDecl 0x7fa33302f698 <line:146:1, col:37> col:12 referenced __fpclassifyl 'int (long double)' extern
| | `-ParmVarDecl 0x7fa33302f5d0 <col:26, col:31> col:37 'long double'
| |-FunctionDecl 0x7fa33302f7e0 </usr/include/sys/cdefs.h:300:36, /usr/include/math.h:188:52> col:28 used __inline_isfinitef 'int (float)' inline
| | |-ParmVarDecl 0x7fa33302f750 <col:47> col:52 'float'
| | `-AlwaysInlineAttr 0x7fa33302f880 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fa33302f970 <line:300:36, /usr/include/math.h:189:53> col:28 used __inline_isfinited 'int (double)' inline
| | |-ParmVarDecl 0x7fa33302f8e0 <col:47> col:53 'double'
| | `-AlwaysInlineAttr 0x7fa33302fa10 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fa33302fb00 <line:300:36, /usr/include/math.h:190:58> col:28 used __inline_isfinitel 'int (long double)' inline
| | |-ParmVarDecl 0x7fa33302fa70 <col:47, col:52> col:58 'long double'
| | `-AlwaysInlineAttr 0x7fa33302fba0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fa33302fc90 <line:300:36, /usr/include/math.h:191:49> col:28 __inline_isinff 'int (float)' inline
| | |-ParmVarDecl 0x7fa33302fc00 <col:44> col:49 'float'
| | `-AlwaysInlineAttr 0x7fa33302fd30 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fa3330d1230 <line:300:36, /usr/include/math.h:192:50> col:28 __inline_isinfd 'int (double)' inline
| | |-ParmVarDecl 0x7fa33302fd90 <col:44> col:50 'double'
| | `-AlwaysInlineAttr 0x7fa3330d12d0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fa3330d13c0 <line:300:36, /usr/include/math.h:193:55> col:28 __inline_isinfl 'int (long double)' inline
| | |-ParmVarDecl 0x7fa3330d1330 <col:44, col:49> col:55 'long double'
| | `-AlwaysInlineAttr 0x7fa3330d1460 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fa3330d1550 <line:300:36, /usr/include/math.h:194:49> col:28 __inline_isnanf 'int (float)' inline
| | |-ParmVarDecl 0x7fa3330d14c0 <col:44> col:49 'float'
| | `-AlwaysInlineAttr 0x7fa3330d15f0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fa3330d16e0 <line:300:36, /usr/include/math.h:195:50> col:28 __inline_isnand 'int (double)' inline
| | |-ParmVarDecl 0x7fa3330d1650 <col:44> col:50 'double'
| | `-AlwaysInlineAttr 0x7fa3330d1780 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fa3330d1870 <line:300:36, /usr/include/math.h:196:55> col:28 __inline_isnanl 'int (long double)' inline
| | |-ParmVarDecl 0x7fa3330d17e0 <col:44, col:49> col:55 'long double'
| | `-AlwaysInlineAttr 0x7fa3330d1910 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fa3330d1a00 <line:300:36, /usr/include/math.h:197:52> col:28 __inline_isnormalf 'int (float)' inline
| | |-ParmVarDecl 0x7fa3330d1970 <col:47> col:52 'float'
| | `-AlwaysInlineAttr 0x7fa3330d1aa0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fa3330d1b90 <line:300:36, /usr/include/math.h:198:53> col:28 __inline_isnormald 'int (double)' inline
| | |-ParmVarDecl 0x7fa3330d1b00 <col:47> col:53 'double'
| | `-AlwaysInlineAttr 0x7fa3330d1c30 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fa3330d1d20 <line:300:36, /usr/include/math.h:199:58> col:28 __inline_isnormall 'int (long double)' inline
| | |-ParmVarDecl 0x7fa3330d1c90 <col:47, col:52> col:58 'long double'
| | `-AlwaysInlineAttr 0x7fa3330d1dc0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fa3330d1eb0 <line:300:36, /usr/include/math.h:200:51> col:28 __inline_signbitf 'int (float)' inline
| | |-ParmVarDecl 0x7fa3330d1e20 <col:46> col:51 'float'
| | `-AlwaysInlineAttr 0x7fa3330d1f50 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fa3330d2040 <line:300:36, /usr/include/math.h:201:52> col:28 __inline_signbitd 'int (double)' inline
| | |-ParmVarDecl 0x7fa3330d1fb0 <col:46> col:52 'double'
| | `-AlwaysInlineAttr 0x7fa3330d20e0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fa3330d2200 <line:300:36, /usr/include/math.h:202:57> col:28 __inline_signbitl 'int (long double)' inline
| | |-ParmVarDecl 0x7fa3330d2140 <col:46, col:51> col:57 'long double'
| | `-AlwaysInlineAttr 0x7fa3330d22a0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fa3330d2390 prev 0x7fa33302f7e0 <line:300:36, /usr/include/math.h:206:1> line:204:28 used __inline_isfinitef 'int (float)' inline
| | |-ParmVarDecl 0x7fa3330d2300 <col:47, col:53> col:53 used __x 'float'
| | |-CompoundStmt 0x7fa3330d2b38 <col:58, line:206:1>
| | | `-ReturnStmt 0x7fa3330d2b20 <line:205:5, col:65>
| | |   `-ImplicitCastExpr 0x7fa3330d2b08 <col:12, col:65> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fa3330d2ae0 <col:12, col:65> '_Bool' '&&'
| | |       |-BinaryOperator 0x7fa3330d24f8 <col:12, col:19> '_Bool' '=='
| | |       | |-ImplicitCastExpr 0x7fa3330d24c8 <col:12> 'float' <LValueToRValue>
| | |       | | `-DeclRefExpr 0x7fa3330d2478 <col:12> 'float' lvalue ParmVar 0x7fa3330d2300 '__x' 'float'
| | |       | `-ImplicitCastExpr 0x7fa3330d24e0 <col:19> 'float' <LValueToRValue>
| | |       |   `-DeclRefExpr 0x7fa3330d24a0 <col:19> 'float' lvalue ParmVar 0x7fa3330d2300 '__x' 'float'
| | |       `-BinaryOperator 0x7fa3330d2ab8 <col:26, col:65> '_Bool' '!='
| | |         |-CallExpr 0x7fa3330d2800 <col:26, col:45> 'float'
| | |         | |-ImplicitCastExpr 0x7fa3330d27e8 <col:26> 'float (*)(float) noexcept' <BuiltinFnToFnPtr>
| | |         | | `-DeclRefExpr 0x7fa3330d2740 <col:26> '<builtin fn type>' Function 0x7fa3330d25e8 '__builtin_fabsf' 'float (float) noexcept'
| | |         | `-ImplicitCastExpr 0x7fa3330d2830 <col:42> 'float' <LValueToRValue>
| | |         |   `-DeclRefExpr 0x7fa3330d2768 <col:42> 'float' lvalue ParmVar 0x7fa3330d2300 '__x' 'float'
| | |         `-CallExpr 0x7fa3330d2a90 <col:50, col:65> 'float'
| | |           `-ImplicitCastExpr 0x7fa3330d2a78 <col:50> 'float (*)(void) noexcept' <BuiltinFnToFnPtr>
| | |             `-DeclRefExpr 0x7fa3330d29f0 <col:50> '<builtin fn type>' Function 0x7fa3330d2900 '__builtin_inff' 'float (void) noexcept'
| | `-AlwaysInlineAttr 0x7fa3330d2430 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fa3330d2c00 prev 0x7fa33302f970 <line:300:36, /usr/include/math.h:209:1> line:207:28 used __inline_isfinited 'int (double)' inline
| | |-ParmVarDecl 0x7fa3330d2b70 <col:47, col:54> col:54 used __x 'double'
| | |-CompoundStmt 0x7fa3330d3838 <col:59, line:209:1>
| | | `-ReturnStmt 0x7fa3330d3820 <line:208:5, col:63>
| | |   `-ImplicitCastExpr 0x7fa3330d3808 <col:12, col:63> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fa3330d37e0 <col:12, col:63> '_Bool' '&&'
| | |       |-BinaryOperator 0x7fa3330d2d68 <col:12, col:19> '_Bool' '=='
| | |       | |-ImplicitCastExpr 0x7fa3330d2d38 <col:12> 'double' <LValueToRValue>
| | |       | | `-DeclRefExpr 0x7fa3330d2ce8 <col:12> 'double' lvalue ParmVar 0x7fa3330d2b70 '__x' 'double'
| | |       | `-ImplicitCastExpr 0x7fa3330d2d50 <col:19> 'double' <LValueToRValue>
| | |       |   `-DeclRefExpr 0x7fa3330d2d10 <col:19> 'double' lvalue ParmVar 0x7fa3330d2b70 '__x' 'double'
| | |       `-BinaryOperator 0x7fa3330d37b8 <col:26, col:63> '_Bool' '!='
| | |         |-CallExpr 0x7fa3330d3070 <col:26, col:44> 'double'
| | |         | |-ImplicitCastExpr 0x7fa3330d3058 <col:26> 'double (*)(double) noexcept' <BuiltinFnToFnPtr>
| | |         | | `-DeclRefExpr 0x7fa3330d2fb0 <col:26> '<builtin fn type>' Function 0x7fa3330d2e58 '__builtin_fabs' 'double (double) noexcept'
| | |         | `-ImplicitCastExpr 0x7fa3330d30a0 <col:41> 'double' <LValueToRValue>
| | |         |   `-DeclRefExpr 0x7fa3330d2fd8 <col:41> 'double' lvalue ParmVar 0x7fa3330d2b70 '__x' 'double'
| | |         `-CallExpr 0x7fa3330d3790 <col:49, col:63> 'double'
| | |           `-ImplicitCastExpr 0x7fa3330d3778 <col:49> 'double (*)(void) noexcept' <BuiltinFnToFnPtr>
| | |             `-DeclRefExpr 0x7fa3330d36f0 <col:49> '<builtin fn type>' Function 0x7fa3330d3600 '__builtin_inf' 'double (void) noexcept'
| | `-AlwaysInlineAttr 0x7fa3330d2ca0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fa3330d3900 prev 0x7fa33302fb00 <line:300:36, /usr/include/math.h:212:1> line:210:28 used __inline_isfinitel 'int (long double)' inline
| | |-ParmVarDecl 0x7fa3330d3870 <col:47, col:59> col:59 used __x 'long double'
| | |-CompoundStmt 0x7fa3330d40a8 <col:64, line:212:1>
| | | `-ReturnStmt 0x7fa3330d4090 <line:211:5, col:65>
| | |   `-ImplicitCastExpr 0x7fa3330d4078 <col:12, col:65> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fa3330d4050 <col:12, col:65> '_Bool' '&&'
| | |       |-BinaryOperator 0x7fa3330d3a68 <col:12, col:19> '_Bool' '=='
| | |       | |-ImplicitCastExpr 0x7fa3330d3a38 <col:12> 'long double' <LValueToRValue>
| | |       | | `-DeclRefExpr 0x7fa3330d39e8 <col:12> 'long double' lvalue ParmVar 0x7fa3330d3870 '__x' 'long double'
| | |       | `-ImplicitCastExpr 0x7fa3330d3a50 <col:19> 'long double' <LValueToRValue>
| | |       |   `-DeclRefExpr 0x7fa3330d3a10 <col:19> 'long double' lvalue ParmVar 0x7fa3330d3870 '__x' 'long double'
| | |       `-BinaryOperator 0x7fa3330d4028 <col:26, col:65> '_Bool' '!='
| | |         |-CallExpr 0x7fa3330d3d70 <col:26, col:45> 'long double'
| | |         | |-ImplicitCastExpr 0x7fa3330d3d58 <col:26> 'long double (*)(long double) noexcept' <BuiltinFnToFnPtr>
| | |         | | `-DeclRefExpr 0x7fa3330d3cb0 <col:26> '<builtin fn type>' Function 0x7fa3330d3b58 '__builtin_fabsl' 'long double (long double) noexcept'
| | |         | `-ImplicitCastExpr 0x7fa3330d3da0 <col:42> 'long double' <LValueToRValue>
| | |         |   `-DeclRefExpr 0x7fa3330d3cd8 <col:42> 'long double' lvalue ParmVar 0x7fa3330d3870 '__x' 'long double'
| | |         `-CallExpr 0x7fa3330d4000 <col:50, col:65> 'long double'
| | |           `-ImplicitCastExpr 0x7fa3330d3fe8 <col:50> 'long double (*)(void) noexcept' <BuiltinFnToFnPtr>
| | |             `-DeclRefExpr 0x7fa3330d3f60 <col:50> '<builtin fn type>' Function 0x7fa3330d3e70 '__builtin_infl' 'long double (void) noexcept'
| | `-AlwaysInlineAttr 0x7fa3330d39a0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fa3330d4170 prev 0x7fa33302fc90 <line:300:36, /usr/include/math.h:215:1> line:213:28 referenced __inline_isinff 'int (float)' inline
| | |-ParmVarDecl 0x7fa3330d40e0 <col:44, col:50> col:50 used __x 'float'
| | |-CompoundStmt 0x7fa3330d43c8 <col:55, line:215:1>
| | | `-ReturnStmt 0x7fa3330d43b0 <line:214:5, col:51>
| | |   `-ImplicitCastExpr 0x7fa3330d4398 <col:12, col:51> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fa3330d4370 <col:12, col:51> '_Bool' '=='
| | |       |-CallExpr 0x7fa3330d42c0 <col:12, col:31> 'float'
| | |       | |-ImplicitCastExpr 0x7fa3330d42a8 <col:12> 'float (*)(float) noexcept' <BuiltinFnToFnPtr>
| | |       | | `-DeclRefExpr 0x7fa3330d4258 <col:12> '<builtin fn type>' Function 0x7fa3330d25e8 '__builtin_fabsf' 'float (float) noexcept'
| | |       | `-ImplicitCastExpr 0x7fa3330d42f0 <col:28> 'float' <LValueToRValue>
| | |       |   `-DeclRefExpr 0x7fa3330d4280 <col:28> 'float' lvalue ParmVar 0x7fa3330d40e0 '__x' 'float'
| | |       `-CallExpr 0x7fa3330d4348 <col:36, col:51> 'float'
| | |         `-ImplicitCastExpr 0x7fa3330d4330 <col:36> 'float (*)(void) noexcept' <BuiltinFnToFnPtr>
| | |           `-DeclRefExpr 0x7fa3330d4308 <col:36> '<builtin fn type>' Function 0x7fa3330d2900 '__builtin_inff' 'float (void) noexcept'
| | `-AlwaysInlineAttr 0x7fa3330d4210 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fa3330d4490 prev 0x7fa3330d1230 <line:300:36, /usr/include/math.h:218:1> line:216:28 referenced __inline_isinfd 'int (double)' inline
| | |-ParmVarDecl 0x7fa3330d4400 <col:44, col:51> col:51 used __x 'double'
| | |-CompoundStmt 0x7fa3330d4ae8 <col:56, line:218:1>
| | | `-ReturnStmt 0x7fa3330d4ad0 <line:217:5, col:49>
| | |   `-ImplicitCastExpr 0x7fa3330d4ab8 <col:12, col:49> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fa3330d4a90 <col:12, col:49> '_Bool' '=='
| | |       |-CallExpr 0x7fa3330d45e0 <col:12, col:30> 'double'
| | |       | |-ImplicitCastExpr 0x7fa3330d45c8 <col:12> 'double (*)(double) noexcept' <BuiltinFnToFnPtr>
| | |       | | `-DeclRefExpr 0x7fa3330d4578 <col:12> '<builtin fn type>' Function 0x7fa3330d2e58 '__builtin_fabs' 'double (double) noexcept'
| | |       | `-ImplicitCastExpr 0x7fa3330d4a10 <col:27> 'double' <LValueToRValue>
| | |       |   `-DeclRefExpr 0x7fa3330d45a0 <col:27> 'double' lvalue ParmVar 0x7fa3330d4400 '__x' 'double'
| | |       `-CallExpr 0x7fa3330d4a68 <col:35, col:49> 'double'
| | |         `-ImplicitCastExpr 0x7fa3330d4a50 <col:35> 'double (*)(void) noexcept' <BuiltinFnToFnPtr>
| | |           `-DeclRefExpr 0x7fa3330d4a28 <col:35> '<builtin fn type>' Function 0x7fa3330d3600 '__builtin_inf' 'double (void) noexcept'
| | `-AlwaysInlineAttr 0x7fa3330d4530 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fa3330d4bb0 prev 0x7fa3330d13c0 <line:300:36, /usr/include/math.h:221:1> line:219:28 referenced __inline_isinfl 'int (long double)' inline
| | |-ParmVarDecl 0x7fa3330d4b20 <col:44, col:56> col:56 used __x 'long double'
| | |-CompoundStmt 0x7fa3330d4e08 <col:61, line:221:1>
| | | `-ReturnStmt 0x7fa3330d4df0 <line:220:5, col:51>
| | |   `-ImplicitCastExpr 0x7fa3330d4dd8 <col:12, col:51> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fa3330d4db0 <col:12, col:51> '_Bool' '=='
| | |       |-CallExpr 0x7fa3330d4d00 <col:12, col:31> 'long double'
| | |       | |-ImplicitCastExpr 0x7fa3330d4ce8 <col:12> 'long double (*)(long double) noexcept' <BuiltinFnToFnPtr>
| | |       | | `-DeclRefExpr 0x7fa3330d4c98 <col:12> '<builtin fn type>' Function 0x7fa3330d3b58 '__builtin_fabsl' 'long double (long double) noexcept'
| | |       | `-ImplicitCastExpr 0x7fa3330d4d30 <col:28> 'long double' <LValueToRValue>
| | |       |   `-DeclRefExpr 0x7fa3330d4cc0 <col:28> 'long double' lvalue ParmVar 0x7fa3330d4b20 '__x' 'long double'
| | |       `-CallExpr 0x7fa3330d4d88 <col:36, col:51> 'long double'
| | |         `-ImplicitCastExpr 0x7fa3330d4d70 <col:36> 'long double (*)(void) noexcept' <BuiltinFnToFnPtr>
| | |           `-DeclRefExpr 0x7fa3330d4d48 <col:36> '<builtin fn type>' Function 0x7fa3330d3e70 '__builtin_infl' 'long double (void) noexcept'
| | `-AlwaysInlineAttr 0x7fa3330d4c50 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fa3330d4ed0 prev 0x7fa3330d1550 <line:300:36, /usr/include/math.h:224:1> line:222:28 referenced __inline_isnanf 'int (float)' inline
| | |-ParmVarDecl 0x7fa3330d4e40 <col:44, col:50> col:50 used __x 'float'
| | |-CompoundStmt 0x7fa3330d5090 <col:55, line:224:1>
| | | `-ReturnStmt 0x7fa3330d5078 <line:223:5, col:19>
| | |   `-ImplicitCastExpr 0x7fa3330d5060 <col:12, col:19> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fa3330d5038 <col:12, col:19> '_Bool' '!='
| | |       |-ImplicitCastExpr 0x7fa3330d5008 <col:12> 'float' <LValueToRValue>
| | |       | `-DeclRefExpr 0x7fa3330d4fb8 <col:12> 'float' lvalue ParmVar 0x7fa3330d4e40 '__x' 'float'
| | |       `-ImplicitCastExpr 0x7fa3330d5020 <col:19> 'float' <LValueToRValue>
| | |         `-DeclRefExpr 0x7fa3330d4fe0 <col:19> 'float' lvalue ParmVar 0x7fa3330d4e40 '__x' 'float'
| | `-AlwaysInlineAttr 0x7fa3330d4f70 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fa3330d5158 prev 0x7fa3330d16e0 <line:300:36, /usr/include/math.h:227:1> line:225:28 referenced __inline_isnand 'int (double)' inline
| | |-ParmVarDecl 0x7fa3330d50c8 <col:44, col:51> col:51 used __x 'double'
| | |-CompoundStmt 0x7fa3330d5318 <col:56, line:227:1>
| | | `-ReturnStmt 0x7fa3330d5300 <line:226:5, col:19>
| | |   `-ImplicitCastExpr 0x7fa3330d52e8 <col:12, col:19> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fa3330d52c0 <col:12, col:19> '_Bool' '!='
| | |       |-ImplicitCastExpr 0x7fa3330d5290 <col:12> 'double' <LValueToRValue>
| | |       | `-DeclRefExpr 0x7fa3330d5240 <col:12> 'double' lvalue ParmVar 0x7fa3330d50c8 '__x' 'double'
| | |       `-ImplicitCastExpr 0x7fa3330d52a8 <col:19> 'double' <LValueToRValue>
| | |         `-DeclRefExpr 0x7fa3330d5268 <col:19> 'double' lvalue ParmVar 0x7fa3330d50c8 '__x' 'double'
| | `-AlwaysInlineAttr 0x7fa3330d51f8 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fa3330d53e0 prev 0x7fa3330d1870 <line:300:36, /usr/include/math.h:230:1> line:228:28 referenced __inline_isnanl 'int (long double)' inline
| | |-ParmVarDecl 0x7fa3330d5350 <col:44, col:56> col:56 used __x 'long double'
| | |-CompoundStmt 0x7fa3330d55a0 <col:61, line:230:1>
| | | `-ReturnStmt 0x7fa3330d5588 <line:229:5, col:19>
| | |   `-ImplicitCastExpr 0x7fa3330d5570 <col:12, col:19> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fa3330d5548 <col:12, col:19> '_Bool' '!='
| | |       |-ImplicitCastExpr 0x7fa3330d5518 <col:12> 'long double' <LValueToRValue>
| | |       | `-DeclRefExpr 0x7fa3330d54c8 <col:12> 'long double' lvalue ParmVar 0x7fa3330d5350 '__x' 'long double'
| | |       `-ImplicitCastExpr 0x7fa3330d5530 <col:19> 'long double' <LValueToRValue>
| | |         `-DeclRefExpr 0x7fa3330d54f0 <col:19> 'long double' lvalue ParmVar 0x7fa3330d5350 '__x' 'long double'
| | `-AlwaysInlineAttr 0x7fa3330d5480 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fa3330d5668 prev 0x7fa3330d1eb0 <line:300:36, /usr/include/math.h:235:1> line:231:28 referenced __inline_signbitf 'int (float)' inline
| | |-ParmVarDecl 0x7fa3330d55d8 <col:46, col:52> col:52 used __x 'float'
| | |-CompoundStmt 0x7fa3330d72d8 <col:57, line:235:1>
| | | |-DeclStmt 0x7fa3330d6fb0 <line:232:5, col:47>
| | | | |-CXXRecordDecl 0x7fa3330d5750 <col:5, col:42> col:5 union definition
| | | | | |-FieldDecl 0x7fa3330d5890 <col:13, col:19> col:19 referenced __f 'float'
| | | | | |-FieldDecl 0x7fa3330d58f0 <col:24, col:37> col:37 referenced __u 'unsigned int'
| | | | | |-CXXConstructorDecl 0x7fa3330d6a80 <col:5> col:5 implicit used  'void (void) noexcept' inline default trivial
| | | | | | `-CompoundStmt 0x7fa3330d6f50 <col:5>
| | | | | |-CXXConstructorDecl 0x7fa3330d6bc8 <col:5> col:5 implicit constexpr  'void (const union (anonymous at /usr/include/math.h:232:5) &)' inline default trivial noexcept-unevaluated 0x7fa3330d6bc8
| | | | | | `-ParmVarDecl 0x7fa3330d6cf0 <col:5> col:5 'const union (anonymous at /usr/include/math.h:232:5) &'
| | | | | `-CXXConstructorDecl 0x7fa3330d6d88 <col:5> col:5 implicit constexpr  'void (union (anonymous at /usr/include/math.h:232:5) &&)' inline default trivial noexcept-unevaluated 0x7fa3330d6d88
| | | | |   `-ParmVarDecl 0x7fa3330d6eb0 <col:5> col:5 'union (anonymous at /usr/include/math.h:232:5) &&'
| | | | `-VarDecl 0x7fa3330d6a00 <col:5, col:44> col:44 used __u 'union (anonymous union at /usr/include/math.h:232:5)':'union (anonymous at /usr/include/math.h:232:5)' callinit
| | | |   `-CXXConstructExpr 0x7fa3330d6f68 <col:44> 'union (anonymous union at /usr/include/math.h:232:5)':'union (anonymous at /usr/include/math.h:232:5)' 'void (void) noexcept'
| | | |-BinaryOperator 0x7fa3330d7068 <line:233:5, col:15> 'float' lvalue '='
| | | | |-MemberExpr 0x7fa3330d6ff0 <col:5, col:9> 'float' lvalue .__f 0x7fa3330d5890
| | | | | `-DeclRefExpr 0x7fa3330d6fc8 <col:5> 'union (anonymous union at /usr/include/math.h:232:5)':'union (anonymous at /usr/include/math.h:232:5)' lvalue Var 0x7fa3330d6a00 '__u' 'union (anonymous union at /usr/include/math.h:232:5)':'union (anonymous at /usr/include/math.h:232:5)'
| | | | `-ImplicitCastExpr 0x7fa3330d7050 <col:15> 'float' <LValueToRValue>
| | | |   `-DeclRefExpr 0x7fa3330d7028 <col:15> 'float' lvalue ParmVar 0x7fa3330d55d8 '__x' 'float'
| | | `-ReturnStmt 0x7fa3330d72c0 <line:234:5, col:31>
| | |   `-CStyleCastExpr 0x7fa3330d7298 <col:12, col:31> 'int' <NoOp>
| | |     `-ImplicitCastExpr 0x7fa3330d7280 <col:17, col:31> 'int' <IntegralCast>
| | |       `-ParenExpr 0x7fa3330d7260 <col:17, col:31> 'unsigned int'
| | |         `-BinaryOperator 0x7fa3330d71f0 <col:18, col:29> 'unsigned int' '>>'
| | |           |-ImplicitCastExpr 0x7fa3330d71d8 <col:18, col:22> 'unsigned int' <LValueToRValue>
| | |           | `-MemberExpr 0x7fa3330d7180 <col:18, col:22> 'unsigned int' lvalue .__u 0x7fa3330d58f0
| | |           |   `-DeclRefExpr 0x7fa3330d7158 <col:18> 'union (anonymous union at /usr/include/math.h:232:5)':'union (anonymous at /usr/include/math.h:232:5)' lvalue Var 0x7fa3330d6a00 '__u' 'union (anonymous union at /usr/include/math.h:232:5)':'union (anonymous at /usr/include/math.h:232:5)'
| | |           `-IntegerLiteral 0x7fa3330d71b8 <col:29> 'int' 31
| | `-AlwaysInlineAttr 0x7fa3330d5708 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fa3330d73b0 prev 0x7fa3330d2040 <line:300:36, /usr/include/math.h:240:1> line:236:28 referenced __inline_signbitd 'int (double)' inline
| | |-ParmVarDecl 0x7fa3330d7320 <col:46, col:53> col:53 used __x 'double'
| | |-CompoundStmt 0x7fa3330d99b0 <col:58, line:240:1>
| | | |-DeclStmt 0x7fa3330d9688 <line:237:5, col:54>
| | | | |-CXXRecordDecl 0x7fa3330d7498 <col:5, col:49> col:5 union definition
| | | | | |-FieldDecl 0x7fa3330d75d0 <col:13, col:20> col:20 referenced __f 'double'
| | | | | |-FieldDecl 0x7fa3330d7630 <col:25, col:44> col:44 referenced __u 'unsigned long long'
| | | | | |-CXXConstructorDecl 0x7fa3330d7770 <col:5> col:5 implicit used  'void (void) noexcept' inline default trivial
| | | | | | `-CompoundStmt 0x7fa3330d9628 <col:5>
| | | | | |-CXXConstructorDecl 0x7fa3330d7888 <col:5> col:5 implicit constexpr  'void (const union (anonymous at /usr/include/math.h:237:5) &)' inline default trivial noexcept-unevaluated 0x7fa3330d7888
| | | | | | `-ParmVarDecl 0x7fa3330d9400 <col:5> col:5 'const union (anonymous at /usr/include/math.h:237:5) &'
| | | | | `-CXXConstructorDecl 0x7fa3330d9498 <col:5> col:5 implicit constexpr  'void (union (anonymous at /usr/include/math.h:237:5) &&)' inline default trivial noexcept-unevaluated 0x7fa3330d9498
| | | | |   `-ParmVarDecl 0x7fa3330d95c0 <col:5> col:5 'union (anonymous at /usr/include/math.h:237:5) &&'
| | | | `-VarDecl 0x7fa3330d76f0 <col:5, col:51> col:51 used __u 'union (anonymous union at /usr/include/math.h:237:5)':'union (anonymous at /usr/include/math.h:237:5)' callinit
| | | |   `-CXXConstructExpr 0x7fa3330d9640 <col:51> 'union (anonymous union at /usr/include/math.h:237:5)':'union (anonymous at /usr/include/math.h:237:5)' 'void (void) noexcept'
| | | |-BinaryOperator 0x7fa3330d9740 <line:238:5, col:15> 'double' lvalue '='
| | | | |-MemberExpr 0x7fa3330d96c8 <col:5, col:9> 'double' lvalue .__f 0x7fa3330d75d0
| | | | | `-DeclRefExpr 0x7fa3330d96a0 <col:5> 'union (anonymous union at /usr/include/math.h:237:5)':'union (anonymous at /usr/include/math.h:237:5)' lvalue Var 0x7fa3330d76f0 '__u' 'union (anonymous union at /usr/include/math.h:237:5)':'union (anonymous at /usr/include/math.h:237:5)'
| | | | `-ImplicitCastExpr 0x7fa3330d9728 <col:15> 'double' <LValueToRValue>
| | | |   `-DeclRefExpr 0x7fa3330d9700 <col:15> 'double' lvalue ParmVar 0x7fa3330d7320 '__x' 'double'
| | | `-ReturnStmt 0x7fa3330d9998 <line:239:5, col:31>
| | |   `-CStyleCastExpr 0x7fa3330d9970 <col:12, col:31> 'int' <NoOp>
| | |     `-ImplicitCastExpr 0x7fa3330d9958 <col:17, col:31> 'int' <IntegralCast>
| | |       `-ParenExpr 0x7fa3330d9938 <col:17, col:31> 'unsigned long long'
| | |         `-BinaryOperator 0x7fa3330d98c8 <col:18, col:29> 'unsigned long long' '>>'
| | |           |-ImplicitCastExpr 0x7fa3330d98b0 <col:18, col:22> 'unsigned long long' <LValueToRValue>
| | |           | `-MemberExpr 0x7fa3330d9858 <col:18, col:22> 'unsigned long long' lvalue .__u 0x7fa3330d7630
| | |           |   `-DeclRefExpr 0x7fa3330d9830 <col:18> 'union (anonymous union at /usr/include/math.h:237:5)':'union (anonymous at /usr/include/math.h:237:5)' lvalue Var 0x7fa3330d76f0 '__u' 'union (anonymous union at /usr/include/math.h:237:5)':'union (anonymous at /usr/include/math.h:237:5)'
| | |           `-IntegerLiteral 0x7fa3330d9890 <col:29> 'int' 63
| | `-AlwaysInlineAttr 0x7fa3330d7450 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fa3330d9a88 prev 0x7fa3330d2200 <line:300:36, /usr/include/math.h:249:1> line:242:28 referenced __inline_signbitl 'int (long double)' inline
| | |-ParmVarDecl 0x7fa3330d99f8 <col:46, col:58> col:58 used __x 'long double'
| | |-CompoundStmt 0x7fa3330db760 <col:63, line:249:1>
| | | |-DeclStmt 0x7fa3330db338 <line:243:5, line:246:10>
| | | | |-CXXRecordDecl 0x7fa3330d9b70 <line:243:5, line:246:5> line:243:5 union definition
| | | | | |-FieldDecl 0x7fa3330d9cb0 <line:244:9, col:21> col:21 referenced __ld 'long double'
| | | | | |-CXXRecordDecl 0x7fa3330d9cf8 <line:245:9, col:64> col:9 struct definition
| | | | | | |-FieldDecl 0x7fa3330d9e30 <col:17, col:36> col:36 __m 'unsigned long long'
| | | | | | |-FieldDecl 0x7fa3330d9e90 <col:41, col:56> col:56 referenced __sexp 'unsigned short'
| | | | | | |-CXXConstructorDecl 0x7fa3330da1a8 <col:9> col:9 implicit  'void (void) noexcept' inline default trivial
| | | | | | |-CXXDestructorDecl 0x7fa3330da288 <col:9> col:9 implicit ~ 'void (void)' inline default trivial noexcept-unevaluated 0x7fa3330da288
| | | | | | |-CXXConstructorDecl 0x7fa3330dadc8 <col:9> col:9 implicit constexpr  'void (const struct (anonymous at /usr/include/math.h:245:9) &)' inline default trivial noexcept-unevaluated 0x7fa3330dadc8
| | | | | | | `-ParmVarDecl 0x7fa3330daef0 <col:9> col:9 'const struct (anonymous at /usr/include/math.h:245:9) &'
| | | | | | `-CXXConstructorDecl 0x7fa3330daf88 <col:9> col:9 implicit constexpr  'void (struct (anonymous at /usr/include/math.h:245:9) &&)' inline default trivial noexcept-unevaluated 0x7fa3330daf88
| | | | | |   `-ParmVarDecl 0x7fa3330db0b0 <col:9> col:9 'struct (anonymous at /usr/include/math.h:245:9) &&'
| | | | | |-FieldDecl 0x7fa3330d9f50 <col:9, col:66> col:66 referenced __p 'struct (anonymous struct at /usr/include/math.h:245:9)':'struct (anonymous at /usr/include/math.h:245:9)'
| | | | | |-CXXConstructorDecl 0x7fa3330da0a0 <line:243:5> col:5 implicit used  'void (void) noexcept' inline default trivial
| | | | | | `-CompoundStmt 0x7fa3330db2d8 <col:5>
| | | | | |-CXXConstructorDecl 0x7fa3330dac00 <col:5> col:5 implicit constexpr  'void (const union (anonymous at /usr/include/math.h:243:5) &)' inline default trivial noexcept-unevaluated 0x7fa3330dac00
| | | | | | `-ParmVarDecl 0x7fa3330dad30 <col:5> col:5 'const union (anonymous at /usr/include/math.h:243:5) &'
| | | | | `-CXXConstructorDecl 0x7fa3330db148 <col:5> col:5 implicit constexpr  'void (union (anonymous at /usr/include/math.h:243:5) &&)' inline default trivial noexcept-unevaluated 0x7fa3330db148
| | | | |   `-ParmVarDecl 0x7fa3330db270 <col:5> col:5 'union (anonymous at /usr/include/math.h:243:5) &&'
| | | | `-VarDecl 0x7fa3330da020 <col:5, line:246:7> col:7 used __u 'union (anonymous union at /usr/include/math.h:243:5)':'union (anonymous at /usr/include/math.h:243:5)' callinit
| | | |   `-CXXConstructExpr 0x7fa3330db2f0 <col:7> 'union (anonymous union at /usr/include/math.h:243:5)':'union (anonymous at /usr/include/math.h:243:5)' 'void (void) noexcept'
| | | |-BinaryOperator 0x7fa3330db3f0 <line:247:5, col:16> 'long double' lvalue '='
| | | | |-MemberExpr 0x7fa3330db378 <col:5, col:9> 'long double' lvalue .__ld 0x7fa3330d9cb0
| | | | | `-DeclRefExpr 0x7fa3330db350 <col:5> 'union (anonymous union at /usr/include/math.h:243:5)':'union (anonymous at /usr/include/math.h:243:5)' lvalue Var 0x7fa3330da020 '__u' 'union (anonymous union at /usr/include/math.h:243:5)':'union (anonymous at /usr/include/math.h:243:5)'
| | | | `-ImplicitCastExpr 0x7fa3330db3d8 <col:16> 'long double' <LValueToRValue>
| | | |   `-DeclRefExpr 0x7fa3330db3b0 <col:16> 'long double' lvalue ParmVar 0x7fa3330d99f8 '__x' 'long double'
| | | `-ReturnStmt 0x7fa3330db748 <line:248:5, col:38>
| | |   `-CStyleCastExpr 0x7fa3330db720 <col:12, col:38> 'int' <NoOp>
| | |     `-ParenExpr 0x7fa3330db700 <col:17, col:38> 'int'
| | |       `-BinaryOperator 0x7fa3330db690 <col:18, col:36> 'int' '>>'
| | |         |-ImplicitCastExpr 0x7fa3330db678 <col:18, col:26> 'int' <IntegralCast>
| | |         | `-ImplicitCastExpr 0x7fa3330db660 <col:18, col:26> 'unsigned short' <LValueToRValue>
| | |         |   `-MemberExpr 0x7fa3330db608 <col:18, col:26> 'unsigned short' lvalue .__sexp 0x7fa3330d9e90
| | |         |     `-MemberExpr 0x7fa3330db5d0 <col:18, col:22> 'struct (anonymous struct at /usr/include/math.h:245:9)':'struct (anonymous at /usr/include/math.h:245:9)' lvalue .__p 0x7fa3330d9f50
| | |         |       `-DeclRefExpr 0x7fa3330db5a8 <col:18> 'union (anonymous union at /usr/include/math.h:243:5)':'union (anonymous at /usr/include/math.h:243:5)' lvalue Var 0x7fa3330da020 '__u' 'union (anonymous union at /usr/include/math.h:243:5)':'union (anonymous at /usr/include/math.h:243:5)'
| | |         `-IntegerLiteral 0x7fa3330db640 <col:36> 'int' 15
| | `-AlwaysInlineAttr 0x7fa3330d9b28 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fa3330db838 prev 0x7fa3330d1a00 <line:300:36, /usr/include/math.h:259:1> line:257:28 referenced __inline_isnormalf 'int (float)' inline
| | |-ParmVarDecl 0x7fa3330db7a8 <col:47, col:53> col:53 used __x 'float'
| | |-CompoundStmt 0x7fa3330dbbc0 <col:58, line:259:1>
| | | `-ReturnStmt 0x7fa3330dbba8 <line:258:5, <built-in>:145:21>
| | |   `-ImplicitCastExpr 0x7fa3330dbb90 </usr/include/math.h:258:12, <built-in>:145:21> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fa3330dbb68 </usr/include/math.h:258:12, <built-in>:145:21> '_Bool' '&&'
| | |       |-ImplicitCastExpr 0x7fa3330dbb50 </usr/include/math.h:258:12, col:34> '_Bool' <IntegralToBoolean>
| | |       | `-CallExpr 0x7fa3330dba10 <col:12, col:34> 'int'
| | |       |   |-ImplicitCastExpr 0x7fa3330db9f8 <col:12> 'int (*)(float)' <FunctionToPointerDecay>
| | |       |   | `-DeclRefExpr 0x7fa3330db9a0 <col:12> 'int (float)' lvalue Function 0x7fa3330d2390 '__inline_isfinitef' 'int (float)'
| | |       |   `-ImplicitCastExpr 0x7fa3330dba40 <col:31> 'float' <LValueToRValue>
| | |       |     `-DeclRefExpr 0x7fa3330db978 <col:31> 'float' lvalue ParmVar 0x7fa3330db7a8 '__x' 'float'
| | |       `-BinaryOperator 0x7fa3330dbb28 <col:39, <built-in>:145:21> '_Bool' '>='
| | |         |-CallExpr 0x7fa3330dbac0 </usr/include/math.h:258:39, col:58> 'float'
| | |         | |-ImplicitCastExpr 0x7fa3330dbaa8 <col:39> 'float (*)(float) noexcept' <BuiltinFnToFnPtr>
| | |         | | `-DeclRefExpr 0x7fa3330dba58 <col:39> '<builtin fn type>' Function 0x7fa3330d25e8 '__builtin_fabsf' 'float (float) noexcept'
| | |         | `-ImplicitCastExpr 0x7fa3330dbaf0 <col:55> 'float' <LValueToRValue>
| | |         |   `-DeclRefExpr 0x7fa3330dba80 <col:55> 'float' lvalue ParmVar 0x7fa3330db7a8 '__x' 'float'
| | |         `-FloatingLiteral 0x7fa3330dbb08 <<built-in>:145:21> 'float' 1.175494e-38
| | `-AlwaysInlineAttr 0x7fa3330db8d8 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fa3330dc090 prev 0x7fa3330d1b90 <line:300:36, /usr/include/math.h:262:1> line:260:28 referenced __inline_isnormald 'int (double)' inline
| | |-ParmVarDecl 0x7fa3330dc000 <col:47, col:54> col:54 used __x 'double'
| | |-CompoundStmt 0x7fa3330dc410 <col:59, line:262:1>
| | | `-ReturnStmt 0x7fa3330dc3f8 <line:261:5, <built-in>:159:21>
| | |   `-ImplicitCastExpr 0x7fa3330dc3e0 </usr/include/math.h:261:12, <built-in>:159:21> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fa3330dc3b8 </usr/include/math.h:261:12, <built-in>:159:21> '_Bool' '&&'
| | |       |-ImplicitCastExpr 0x7fa3330dc3a0 </usr/include/math.h:261:12, col:34> '_Bool' <IntegralToBoolean>
| | |       | `-CallExpr 0x7fa3330dc260 <col:12, col:34> 'int'
| | |       |   |-ImplicitCastExpr 0x7fa3330dc248 <col:12> 'int (*)(double)' <FunctionToPointerDecay>
| | |       |   | `-DeclRefExpr 0x7fa3330dc1f8 <col:12> 'int (double)' lvalue Function 0x7fa3330d2c00 '__inline_isfinited' 'int (double)'
| | |       |   `-ImplicitCastExpr 0x7fa3330dc290 <col:31> 'double' <LValueToRValue>
| | |       |     `-DeclRefExpr 0x7fa3330dc1d0 <col:31> 'double' lvalue ParmVar 0x7fa3330dc000 '__x' 'double'
| | |       `-BinaryOperator 0x7fa3330dc378 <col:39, <built-in>:159:21> '_Bool' '>='
| | |         |-CallExpr 0x7fa3330dc310 </usr/include/math.h:261:39, col:57> 'double'
| | |         | |-ImplicitCastExpr 0x7fa3330dc2f8 <col:39> 'double (*)(double) noexcept' <BuiltinFnToFnPtr>
| | |         | | `-DeclRefExpr 0x7fa3330dc2a8 <col:39> '<builtin fn type>' Function 0x7fa3330d2e58 '__builtin_fabs' 'double (double) noexcept'
| | |         | `-ImplicitCastExpr 0x7fa3330dc340 <col:54> 'double' <LValueToRValue>
| | |         |   `-DeclRefExpr 0x7fa3330dc2d0 <col:54> 'double' lvalue ParmVar 0x7fa3330dc000 '__x' 'double'
| | |         `-FloatingLiteral 0x7fa3330dc358 <<built-in>:159:21> 'double' 2.225074e-308
| | `-AlwaysInlineAttr 0x7fa3330dc130 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fa3330dc4d8 prev 0x7fa3330d1d20 <line:300:36, /usr/include/math.h:265:1> line:263:28 referenced __inline_isnormall 'int (long double)' inline
| | |-ParmVarDecl 0x7fa3330dc448 <col:47, col:59> col:59 used __x 'long double'
| | |-CompoundStmt 0x7fa3330dc870 <col:64, line:265:1>
| | | `-ReturnStmt 0x7fa3330dc858 <line:264:5, <built-in>:173:22>
| | |   `-ImplicitCastExpr 0x7fa3330dc840 </usr/include/math.h:264:12, <built-in>:173:22> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fa3330dc818 </usr/include/math.h:264:12, <built-in>:173:22> '_Bool' '&&'
| | |       |-ImplicitCastExpr 0x7fa3330dc800 </usr/include/math.h:264:12, col:34> '_Bool' <IntegralToBoolean>
| | |       | `-CallExpr 0x7fa3330dc6b0 <col:12, col:34> 'int'
| | |       |   |-ImplicitCastExpr 0x7fa3330dc698 <col:12> 'int (*)(long double)' <FunctionToPointerDecay>
| | |       |   | `-DeclRefExpr 0x7fa3330dc640 <col:12> 'int (long double)' lvalue Function 0x7fa3330d3900 '__inline_isfinitel' 'int (long double)'
| | |       |   `-ImplicitCastExpr 0x7fa3330dc6e0 <col:31> 'long double' <LValueToRValue>
| | |       |     `-DeclRefExpr 0x7fa3330dc618 <col:31> 'long double' lvalue ParmVar 0x7fa3330dc448 '__x' 'long double'
| | |       `-BinaryOperator 0x7fa3330dc7d8 <col:39, <built-in>:173:22> '_Bool' '>='
| | |         |-CallExpr 0x7fa3330dc760 </usr/include/math.h:264:39, col:58> 'long double'
| | |         | |-ImplicitCastExpr 0x7fa3330dc748 <col:39> 'long double (*)(long double) noexcept' <BuiltinFnToFnPtr>
| | |         | | `-DeclRefExpr 0x7fa3330dc6f8 <col:39> '<builtin fn type>' Function 0x7fa3330d3b58 '__builtin_fabsl' 'long double (long double) noexcept'
| | |         | `-ImplicitCastExpr 0x7fa3330dc790 <col:55> 'long double' <LValueToRValue>
| | |         |   `-DeclRefExpr 0x7fa3330dc720 <col:55> 'long double' lvalue ParmVar 0x7fa3330dc448 '__x' 'long double'
| | |         `-FloatingLiteral 0x7fa3330dc7a8 <<built-in>:173:22> 'long double' 0.000000e+00
| | `-AlwaysInlineAttr 0x7fa3330dc578 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fa3330dc938 </usr/include/math.h:322:1, col:25> col:14 used acosf 'float (float)' extern
| | |-ParmVarDecl 0x7fa3330dc8a8 <col:20> col:25 'float'
| | |-ConstAttr 0x7fa3330dc9d8 <col:14> Implicit
| | `-NoThrowAttr 0x7fa3330dca20 <col:14> Implicit
| |-FunctionDecl 0x7fa3330dcad8 <line:323:1, col:26> col:15 referenced acos 'double (double)' extern
| | |-ParmVarDecl 0x7fa3330dca48 <col:20> col:26 'double'
| | |-ConstAttr 0x7fa3330dcb78 <col:15> Implicit
| | `-NoThrowAttr 0x7fa3330dcbc0 <col:15> Implicit
| |-FunctionDecl 0x7fa3330dcc78 <line:324:1, col:37> col:20 used acosl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fa3330dcbe8 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fa3330dcd18 <col:20> Implicit
| | `-NoThrowAttr 0x7fa3330dcd60 <col:20> Implicit
| |-FunctionDecl 0x7fa3330dce18 <line:326:1, col:25> col:14 used asinf 'float (float)' extern
| | |-ParmVarDecl 0x7fa3330dcd88 <col:20> col:25 'float'
| | |-ConstAttr 0x7fa3330dceb8 <col:14> Implicit
| | `-NoThrowAttr 0x7fa3330dcf00 <col:14> Implicit
| |-FunctionDecl 0x7fa3330dd000 <line:327:1, col:26> col:15 referenced asin 'double (double)' extern
| | |-ParmVarDecl 0x7fa3330dcf28 <col:20> col:26 'double'
| | |-ConstAttr 0x7fa3330dd0a0 <col:15> Implicit
| | `-NoThrowAttr 0x7fa3330dd0e8 <col:15> Implicit
| |-FunctionDecl 0x7fa3330dd1a0 <line:328:1, col:37> col:20 used asinl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fa3330dd110 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fa3330dd240 <col:20> Implicit
| | `-NoThrowAttr 0x7fa3330dd288 <col:20> Implicit
| |-FunctionDecl 0x7fa3330dd340 <line:330:1, col:25> col:14 used atanf 'float (float)' extern
| | |-ParmVarDecl 0x7fa3330dd2b0 <col:20> col:25 'float'
| | |-ConstAttr 0x7fa3330dd3e0 <col:14> Implicit
| | `-NoThrowAttr 0x7fa3330dd428 <col:14> Implicit
| |-FunctionDecl 0x7fa3330dd4e0 <line:331:1, col:26> col:15 referenced atan 'double (double)' extern
| | |-ParmVarDecl 0x7fa3330dd450 <col:20> col:26 'double'
| | |-ConstAttr 0x7fa3330dd580 <col:15> Implicit
| | `-NoThrowAttr 0x7fa3330dd5c8 <col:15> Implicit
| |-FunctionDecl 0x7fa3330dd680 <line:332:1, col:37> col:20 used atanl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fa3330dd5f0 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fa3330dd720 <col:20> Implicit
| | `-NoThrowAttr 0x7fa3330dd768 <col:20> Implicit
| |-FunctionDecl 0x7fa3330dd8e8 <line:334:1, col:33> col:14 used atan2f 'float (float, float)' extern
| | |-ParmVarDecl 0x7fa3330dd790 <col:21> col:26 'float'
| | |-ParmVarDecl 0x7fa3330dd808 <col:28> col:33 'float'
| | |-ConstAttr 0x7fa3330dd9d0 <col:14> Implicit
| | `-NoThrowAttr 0x7fa3330dda18 <col:14> Implicit
| |-FunctionDecl 0x7fa3330ddb98 <line:335:1, col:35> col:15 atan2 'double (double, double)' extern
| | |-ParmVarDecl 0x7fa3330dda40 <col:21> col:27 'double'
| | |-ParmVarDecl 0x7fa3330ddab8 <col:29> col:35 'double'
| | |-ConstAttr 0x7fa3330ddc80 <col:15> Implicit
| | `-NoThrowAttr 0x7fa3330ddcc8 <col:15> Implicit
| |-FunctionDecl 0x7fa3330dde48 <line:336:1, col:51> col:20 used atan2l 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fa3330ddcf0 <col:27, col:32> col:38 'long double'
| | |-ParmVarDecl 0x7fa3330ddd68 <col:40, col:45> col:51 'long double'
| | |-ConstAttr 0x7fa3330ddf30 <col:20> Implicit
| | `-NoThrowAttr 0x7fa3330ddf78 <col:20> Implicit
| |-FunctionDecl 0x7fa3330de830 <line:338:1, col:24> col:14 used cosf 'float (float)' extern
| | |-ParmVarDecl 0x7fa3330ddfa0 <col:19> col:24 'float'
| | |-ConstAttr 0x7fa3330de8d0 <col:14> Implicit
| | `-NoThrowAttr 0x7fa3330de918 <col:14> Implicit
| |-FunctionDecl 0x7fa3330de9d0 <line:339:1, col:25> col:15 referenced cos 'double (double)' extern
| | |-ParmVarDecl 0x7fa3330de940 <col:19> col:25 'double'
| | |-ConstAttr 0x7fa3330dea70 <col:15> Implicit
| | `-NoThrowAttr 0x7fa3330deab8 <col:15> Implicit
| |-FunctionDecl 0x7fa3330deb70 <line:340:1, col:36> col:20 used cosl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fa3330deae0 <col:25, col:30> col:36 'long double'
| | |-ConstAttr 0x7fa3330dec10 <col:20> Implicit
| | `-NoThrowAttr 0x7fa3330dec58 <col:20> Implicit
| |-FunctionDecl 0x7fa3330ded10 <line:342:1, col:24> col:14 used sinf 'float (float)' extern
| | |-ParmVarDecl 0x7fa3330dec80 <col:19> col:24 'float'
| | |-ConstAttr 0x7fa3330dedb0 <col:14> Implicit
| | `-NoThrowAttr 0x7fa3330dedf8 <col:14> Implicit
| |-FunctionDecl 0x7fa3330deeb0 <line:343:1, col:25> col:15 referenced sin 'double (double)' extern
| | |-ParmVarDecl 0x7fa3330dee20 <col:19> col:25 'double'
| | |-ConstAttr 0x7fa3330def50 <col:15> Implicit
| | `-NoThrowAttr 0x7fa3330def98 <col:15> Implicit
| |-FunctionDecl 0x7fa3330df050 <line:344:1, col:36> col:20 used sinl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fa3330defc0 <col:25, col:30> col:36 'long double'
| | |-ConstAttr 0x7fa3330df0f0 <col:20> Implicit
| | `-NoThrowAttr 0x7fa3330df138 <col:20> Implicit
| |-FunctionDecl 0x7fa3330df1f0 <line:346:1, col:24> col:14 used tanf 'float (float)' extern
| | |-ParmVarDecl 0x7fa3330df160 <col:19> col:24 'float'
| | |-ConstAttr 0x7fa3330df290 <col:14> Implicit
| | `-NoThrowAttr 0x7fa3330df2d8 <col:14> Implicit
| |-FunctionDecl 0x7fa3330df390 <line:347:1, col:25> col:15 referenced tan 'double (double)' extern
| | |-ParmVarDecl 0x7fa3330df300 <col:19> col:25 'double'
| | |-ConstAttr 0x7fa3330df430 <col:15> Implicit
| | `-NoThrowAttr 0x7fa3330df478 <col:15> Implicit
| |-FunctionDecl 0x7fa3330df530 <line:348:1, col:36> col:20 used tanl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fa3330df4a0 <col:25, col:30> col:36 'long double'
| | |-ConstAttr 0x7fa3330df5d0 <col:20> Implicit
| | `-NoThrowAttr 0x7fa3330df618 <col:20> Implicit
| |-FunctionDecl 0x7fa3330df6d0 <line:350:1, col:26> col:14 used acoshf 'float (float)' extern
| | |-ParmVarDecl 0x7fa3330df640 <col:21> col:26 'float'
| | |-ConstAttr 0x7fa3330df770 <col:14> Implicit
| | `-NoThrowAttr 0x7fa3330df7b8 <col:14> Implicit
| |-FunctionDecl 0x7fa3330e0090 <line:351:1, col:27> col:15 referenced acosh 'double (double)' extern
| | |-ParmVarDecl 0x7fa3330e0000 <col:21> col:27 'double'
| | |-ConstAttr 0x7fa3330e0130 <col:15> Implicit
| | `-NoThrowAttr 0x7fa3330e0178 <col:15> Implicit
| |-FunctionDecl 0x7fa3330e0230 <line:352:1, col:38> col:20 used acoshl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fa3330e01a0 <col:27, col:32> col:38 'long double'
| | |-ConstAttr 0x7fa3330e02d0 <col:20> Implicit
| | `-NoThrowAttr 0x7fa3330e0318 <col:20> Implicit
| |-FunctionDecl 0x7fa3330e03d0 <line:354:1, col:26> col:14 used asinhf 'float (float)' extern
| | |-ParmVarDecl 0x7fa3330e0340 <col:21> col:26 'float'
| | |-ConstAttr 0x7fa3330e0470 <col:14> Implicit
| | `-NoThrowAttr 0x7fa3330e04b8 <col:14> Implicit
| |-FunctionDecl 0x7fa3330e0570 <line:355:1, col:27> col:15 referenced asinh 'double (double)' extern
| | |-ParmVarDecl 0x7fa3330e04e0 <col:21> col:27 'double'
| | |-ConstAttr 0x7fa3330e0610 <col:15> Implicit
| | `-NoThrowAttr 0x7fa3330e0658 <col:15> Implicit
| |-FunctionDecl 0x7fa3330e0710 <line:356:1, col:38> col:20 used asinhl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fa3330e0680 <col:27, col:32> col:38 'long double'
| | |-ConstAttr 0x7fa3330e07b0 <col:20> Implicit
| | `-NoThrowAttr 0x7fa3330e07f8 <col:20> Implicit
| |-FunctionDecl 0x7fa3330e08b0 <line:358:1, col:26> col:14 used atanhf 'float (float)' extern
| | |-ParmVarDecl 0x7fa3330e0820 <col:21> col:26 'float'
| | |-ConstAttr 0x7fa3330e0950 <col:14> Implicit
| | `-NoThrowAttr 0x7fa3330e0998 <col:14> Implicit
| |-FunctionDecl 0x7fa3330e0a50 <line:359:1, col:27> col:15 referenced atanh 'double (double)' extern
| | |-ParmVarDecl 0x7fa3330e09c0 <col:21> col:27 'double'
| | |-ConstAttr 0x7fa3330e0af0 <col:15> Implicit
| | `-NoThrowAttr 0x7fa3330e0b38 <col:15> Implicit
| |-FunctionDecl 0x7fa3330e0bf0 <line:360:1, col:38> col:20 used atanhl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fa3330e0b60 <col:27, col:32> col:38 'long double'
| | |-ConstAttr 0x7fa3330e0c90 <col:20> Implicit
| | `-NoThrowAttr 0x7fa3330e0cd8 <col:20> Implicit
| |-FunctionDecl 0x7fa3330e0d90 <line:362:1, col:25> col:14 used coshf 'float (float)' extern
| | |-ParmVarDecl 0x7fa3330e0d00 <col:20> col:25 'float'
| | |-ConstAttr 0x7fa3330e0e30 <col:14> Implicit
| | `-NoThrowAttr 0x7fa3330e0e78 <col:14> Implicit
| |-FunctionDecl 0x7fa3330e0f30 <line:363:1, col:26> col:15 referenced cosh 'double (double)' extern
| | |-ParmVarDecl 0x7fa3330e0ea0 <col:20> col:26 'double'
| | |-ConstAttr 0x7fa3330e0fd0 <col:15> Implicit
| | `-NoThrowAttr 0x7fa3330e1838 <col:15> Implicit
| |-FunctionDecl 0x7fa3330e18f0 <line:364:1, col:37> col:20 used coshl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fa3330e1860 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fa3330e1990 <col:20> Implicit
| | `-NoThrowAttr 0x7fa3330e19d8 <col:20> Implicit
| |-FunctionDecl 0x7fa3330e1a90 <line:366:1, col:25> col:14 used sinhf 'float (float)' extern
| | |-ParmVarDecl 0x7fa3330e1a00 <col:20> col:25 'float'
| | |-ConstAttr 0x7fa3330e1b30 <col:14> Implicit
| | `-NoThrowAttr 0x7fa3330e1b78 <col:14> Implicit
| |-FunctionDecl 0x7fa3330e1c30 <line:367:1, col:26> col:15 referenced sinh 'double (double)' extern
| | |-ParmVarDecl 0x7fa3330e1ba0 <col:20> col:26 'double'
| | |-ConstAttr 0x7fa3330e1cd0 <col:15> Implicit
| | `-NoThrowAttr 0x7fa3330e1d18 <col:15> Implicit
| |-FunctionDecl 0x7fa3330e1dd0 <line:368:1, col:37> col:20 used sinhl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fa3330e1d40 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fa3330e1e70 <col:20> Implicit
| | `-NoThrowAttr 0x7fa3330e1eb8 <col:20> Implicit
| |-FunctionDecl 0x7fa3330e1f70 <line:370:1, col:25> col:14 used tanhf 'float (float)' extern
| | |-ParmVarDecl 0x7fa3330e1ee0 <col:20> col:25 'float'
| | |-ConstAttr 0x7fa3330e2010 <col:14> Implicit
| | `-NoThrowAttr 0x7fa3330e2058 <col:14> Implicit
| |-FunctionDecl 0x7fa3330e2110 <line:371:1, col:26> col:15 referenced tanh 'double (double)' extern
| | |-ParmVarDecl 0x7fa3330e2080 <col:20> col:26 'double'
| | |-ConstAttr 0x7fa3330e21b0 <col:15> Implicit
| | `-NoThrowAttr 0x7fa3330e21f8 <col:15> Implicit
| |-FunctionDecl 0x7fa3330e22b0 <line:372:1, col:37> col:20 used tanhl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fa3330e2220 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fa3330e2350 <col:20> Implicit
| | `-NoThrowAttr 0x7fa3330e2398 <col:20> Implicit
| |-FunctionDecl 0x7fa3330e2450 <line:374:1, col:24> col:14 used expf 'float (float)' extern
| | |-ParmVarDecl 0x7fa3330e23c0 <col:19> col:24 'float'
| | |-ConstAttr 0x7fa3330e24f0 <col:14> Implicit
| | `-NoThrowAttr 0x7fa3330e2538 <col:14> Implicit
| |-FunctionDecl 0x7fa3330e25f0 <line:375:1, col:25> col:15 referenced exp 'double (double)' extern
| | |-ParmVarDecl 0x7fa3330e2560 <col:19> col:25 'double'
| | |-ConstAttr 0x7fa3330e2690 <col:15> Implicit
| | `-NoThrowAttr 0x7fa3330e26d8 <col:15> Implicit
| |-FunctionDecl 0x7fa3330e2800 <line:376:1, col:36> col:20 used expl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fa3330e2700 <col:25, col:30> col:36 'long double'
| | |-ConstAttr 0x7fa3330e28a0 <col:20> Implicit
| | `-NoThrowAttr 0x7fa3330e28e8 <col:20> Implicit
| |-FunctionDecl 0x7fa3330e29a0 <line:378:1, col:25> col:14 used exp2f 'float (float)' extern
| | |-ParmVarDecl 0x7fa3330e2910 <col:20> col:25 'float'
| | |-ConstAttr 0x7fa3330e2a40 <col:14> Implicit
| | `-NoThrowAttr 0x7fa3330e2a88 <col:14> Implicit
| |-FunctionDecl 0x7fa3330e2b40 <line:379:1, col:26> col:15 referenced exp2 'double (double)' extern
| | |-ParmVarDecl 0x7fa3330e2ab0 <col:20> col:26 'double'
| | |-ConstAttr 0x7fa3330e2be0 <col:15> Implicit
| | `-NoThrowAttr 0x7fa3330e2c28 <col:15> Implicit
| |-FunctionDecl 0x7fa3330e2ce0 <line:380:1, col:37> col:20 used exp2l 'long double (long double)' extern
| | |-ParmVarDecl 0x7fa3330e2c50 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fa3330e2d80 <col:20> Implicit
| | `-NoThrowAttr 0x7fa3330e2dc8 <col:20> Implicit
| |-FunctionDecl 0x7fa3330e2e80 <line:382:1, col:26> col:14 used expm1f 'float (float)' extern
| | |-ParmVarDecl 0x7fa3330e2df0 <col:21> col:26 'float'
| | |-ConstAttr 0x7fa3330e2f20 <col:14> Implicit
| | `-NoThrowAttr 0x7fa3330e2f68 <col:14> Implicit
| |-FunctionDecl 0x7fa3330e3020 <line:383:1, col:27> col:15 referenced expm1 'double (double)' extern
| | |-ParmVarDecl 0x7fa3330e2f90 <col:21> col:27 'double'
| | |-ConstAttr 0x7fa3330e30c0 <col:15> Implicit
| | `-NoThrowAttr 0x7fa3330e3108 <col:15> Implicit
| |-FunctionDecl 0x7fa3330e31c0 <line:384:1, col:38> col:20 used expm1l 'long double (long double)' extern
| | |-ParmVarDecl 0x7fa3330e3130 <col:27, col:32> col:38 'long double'
| | |-ConstAttr 0x7fa3330e3260 <col:20> Implicit
| | `-NoThrowAttr 0x7fa3330e32a8 <col:20> Implicit
| |-FunctionDecl 0x7fa3330e3360 <line:386:1, col:24> col:14 used logf 'float (float)' extern
| | |-ParmVarDecl 0x7fa3330e32d0 <col:19> col:24 'float'
| | |-ConstAttr 0x7fa3330e3400 <col:14> Implicit
| | `-NoThrowAttr 0x7fa3330e3448 <col:14> Implicit
| |-FunctionDecl 0x7fa3330e3500 <line:387:1, col:25> col:15 referenced log 'double (double)' extern
| | |-ParmVarDecl 0x7fa3330e3470 <col:19> col:25 'double'
| | |-ConstAttr 0x7fa3330e35a0 <col:15> Implicit
| | `-NoThrowAttr 0x7fa3330e35e8 <col:15> Implicit
| |-FunctionDecl 0x7fa3330e36a0 <line:388:1, col:36> col:20 used logl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fa3330e3610 <col:25, col:30> col:36 'long double'
| | |-ConstAttr 0x7fa3330e3740 <col:20> Implicit
| | `-NoThrowAttr 0x7fa3330e3788 <col:20> Implicit
| |-FunctionDecl 0x7fa3330e3890 <line:390:1, col:26> col:14 used log10f 'float (float)' extern
| | |-ParmVarDecl 0x7fa3330e3800 <col:21> col:26 'float'
| | |-ConstAttr 0x7fa3330e3930 <col:14> Implicit
| | `-NoThrowAttr 0x7fa3330e3978 <col:14> Implicit
| |-FunctionDecl 0x7fa3330e3a30 <line:391:1, col:27> col:15 referenced log10 'double (double)' extern
| | |-ParmVarDecl 0x7fa3330e39a0 <col:21> col:27 'double'
| | |-ConstAttr 0x7fa3330e3ad0 <col:15> Implicit
| | `-NoThrowAttr 0x7fa3330e3b18 <col:15> Implicit
| |-FunctionDecl 0x7fa3330e3bd0 <line:392:1, col:38> col:20 used log10l 'long double (long double)' extern
| | |-ParmVarDecl 0x7fa3330e3b40 <col:27, col:32> col:38 'long double'
| | |-ConstAttr 0x7fa3330e3c70 <col:20> Implicit
| | `-NoThrowAttr 0x7fa3330e3cb8 <col:20> Implicit
| |-FunctionDecl 0x7fa3330e3d70 <line:394:1, col:25> col:14 used log2f 'float (float)' extern
| | |-ParmVarDecl 0x7fa3330e3ce0 <col:20> col:25 'float'
| | |-ConstAttr 0x7fa3330e3e10 <col:14> Implicit
| | `-NoThrowAttr 0x7fa3330e3e58 <col:14> Implicit
| |-FunctionDecl 0x7fa3330e3f10 <line:395:1, col:26> col:15 referenced log2 'double (double)' extern
| | |-ParmVarDecl 0x7fa3330e3e80 <col:20> col:26 'double'
| | |-ConstAttr 0x7fa3330e3fb0 <col:15> Implicit
| | `-NoThrowAttr 0x7fa3330e3ff8 <col:15> Implicit
| |-FunctionDecl 0x7fa3330e40b0 <line:396:1, col:37> col:20 used log2l 'long double (long double)' extern
| | |-ParmVarDecl 0x7fa3330e4020 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fa3330e4150 <col:20> Implicit
| | `-NoThrowAttr 0x7fa3330e4198 <col:20> Implicit
| |-FunctionDecl 0x7fa3330e4250 <line:398:1, col:26> col:14 used log1pf 'float (float)' extern
| | |-ParmVarDecl 0x7fa3330e41c0 <col:21> col:26 'float'
| | |-ConstAttr 0x7fa3330e42f0 <col:14> Implicit
| | `-NoThrowAttr 0x7fa3330e4338 <col:14> Implicit
| |-FunctionDecl 0x7fa3330e43f0 <line:399:1, col:27> col:15 referenced log1p 'double (double)' extern
| | |-ParmVarDecl 0x7fa3330e4360 <col:21> col:27 'double'
| | |-ConstAttr 0x7fa3330e4490 <col:15> Implicit
| | `-NoThrowAttr 0x7fa3330e44d8 <col:15> Implicit
| |-FunctionDecl 0x7fa3330e4590 <line:400:1, col:38> col:20 used log1pl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fa3330e4500 <col:27, col:32> col:38 'long double'
| | |-ConstAttr 0x7fa3330e4630 <col:20> Implicit
| | `-NoThrowAttr 0x7fa3330e4678 <col:20> Implicit
| |-FunctionDecl 0x7fa3330e4730 <line:402:1, col:25> col:14 used logbf 'float (float)' extern
| | |-ParmVarDecl 0x7fa3330e46a0 <col:20> col:25 'float'
| | |-ConstAttr 0x7fa3330e47d0 <col:14> Implicit
| | `-NoThrowAttr 0x7fa3330e5838 <col:14> Implicit
| |-FunctionDecl 0x7fa3330e58f0 <line:403:1, col:26> col:15 referenced logb 'double (double)' extern
| | |-ParmVarDecl 0x7fa3330e5860 <col:20> col:26 'double'
| | |-ConstAttr 0x7fa3330e5990 <col:15> Implicit
| | `-NoThrowAttr 0x7fa3330e59d8 <col:15> Implicit
| |-FunctionDecl 0x7fa3330e5a90 <line:404:1, col:37> col:20 used logbl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fa3330e5a00 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fa3330e5b30 <col:20> Implicit
| | `-NoThrowAttr 0x7fa3330e5b78 <col:20> Implicit
| |-FunctionDecl 0x7fa3330e5d18 <line:406:1, col:34> col:14 used modff 'float (float, float *)' extern
| | |-ParmVarDecl 0x7fa3330e5ba0 <col:20> col:25 'float'
| | |-ParmVarDecl 0x7fa3330e5c40 <col:27, col:33> col:34 'float *'
| | `-NoThrowAttr 0x7fa3330e5e00 <col:14> Implicit
| |-FunctionDecl 0x7fa3330e5fd8 <line:407:1, col:36> col:15 modf 'double (double, double *)' extern
| | |-ParmVarDecl 0x7fa3330e5e60 <col:20> col:26 'double'
| | |-ParmVarDecl 0x7fa3330e5f00 <col:28, col:35> col:36 'double *'
| | `-NoThrowAttr 0x7fa3330e60c0 <col:15> Implicit
| |-FunctionDecl 0x7fa3330e6298 <line:408:1, col:52> col:20 used modfl 'long double (long double, long double *)' extern
| | |-ParmVarDecl 0x7fa3330e6120 <col:26, col:31> col:37 'long double'
| | |-ParmVarDecl 0x7fa3330e61c0 <col:39, col:51> col:52 'long double *'
| | `-NoThrowAttr 0x7fa3330e6380 <col:20> Implicit
| |-FunctionDecl 0x7fa3330e6538 <line:410:1, col:31> col:14 used ldexpf 'float (float, int)' extern
| | |-ParmVarDecl 0x7fa3330e63e0 <col:21> col:26 'float'
| | |-ParmVarDecl 0x7fa3330e6458 <col:28> col:31 'int'
| | |-ConstAttr 0x7fa3330e6620 <col:14> Implicit
| | `-NoThrowAttr 0x7fa3330e6668 <col:14> Implicit
| |-FunctionDecl 0x7fa3330e7800 <line:411:1, col:32> col:15 referenced ldexp 'double (double, int)' extern
| | |-ParmVarDecl 0x7fa3330e6690 <col:21> col:27 'double'
| | |-ParmVarDecl 0x7fa3330e6708 <col:29> col:32 'int'
| | |-ConstAttr 0x7fa3330e78f0 <col:15> Implicit
| | `-NoThrowAttr 0x7fa3330e7938 <col:15> Implicit
| |-FunctionDecl 0x7fa3330e7ab8 <line:412:1, col:43> col:20 used ldexpl 'long double (long double, int)' extern
| | |-ParmVarDecl 0x7fa3330e7960 <col:27, col:32> col:38 'long double'
| | |-ParmVarDecl 0x7fa3330e79d8 <col:40> col:43 'int'
| | |-ConstAttr 0x7fa3330e7ba0 <col:20> Implicit
| | `-NoThrowAttr 0x7fa3330e7be8 <col:20> Implicit
| |-FunctionDecl 0x7fa3330e7d88 <line:414:1, col:33> col:14 used frexpf 'float (float, int *)' extern
| | |-ParmVarDecl 0x7fa3330e7c10 <col:21> col:26 'float'
| | |-ParmVarDecl 0x7fa3330e7cb0 <col:28, col:32> col:33 'int *'
| | `-NoThrowAttr 0x7fa3330e7e70 <col:14> Implicit
| |-FunctionDecl 0x7fa3330e8028 <line:415:1, col:34> col:15 referenced frexp 'double (double, int *)' extern
| | |-ParmVarDecl 0x7fa3330e7ed0 <col:21> col:27 'double'
| | |-ParmVarDecl 0x7fa3330e7f48 <col:29, col:33> col:34 'int *'
| | `-NoThrowAttr 0x7fa3330e8110 <col:15> Implicit
| |-FunctionDecl 0x7fa3330e82c8 <line:416:1, col:45> col:20 used frexpl 'long double (long double, int *)' extern
| | |-ParmVarDecl 0x7fa3330e8170 <col:27, col:32> col:38 'long double'
| | |-ParmVarDecl 0x7fa3330e81e8 <col:40, col:44> col:45 'int *'
| | `-NoThrowAttr 0x7fa3330e83b0 <col:20> Implicit
| |-FunctionDecl 0x7fa3330e84a0 <line:418:1, col:24> col:12 used ilogbf 'int (float)' extern
| | |-ParmVarDecl 0x7fa3330e8410 <col:19> col:24 'float'
| | |-ConstAttr 0x7fa3330e8578 <col:12> Implicit
| | `-NoThrowAttr 0x7fa3330e85c0 <col:12> Implicit
| |-FunctionDecl 0x7fa3330e8678 <line:419:1, col:24> col:12 referenced ilogb 'int (double)' extern
| | |-ParmVarDecl 0x7fa3330e85e8 <col:18> col:24 'double'
| | |-ConstAttr 0x7fa3330e8758 <col:12> Implicit
| | `-NoThrowAttr 0x7fa3330e87a0 <col:12> Implicit
| |-FunctionDecl 0x7fa3330e9890 <line:420:1, col:30> col:12 used ilogbl 'int (long double)' extern
| | |-ParmVarDecl 0x7fa3330e9800 <col:19, col:24> col:30 'long double'
| | |-ConstAttr 0x7fa3330e9968 <col:12> Implicit
| | `-NoThrowAttr 0x7fa3330e99b0 <col:12> Implicit
| |-FunctionDecl 0x7fa3330e9ae8 <line:422:1, col:32> col:14 used scalbnf 'float (float, int)' extern
| | |-ParmVarDecl 0x7fa3330e99d8 <col:22> col:27 'float'
| | |-ParmVarDecl 0x7fa3330e9a50 <col:29> col:32 'int'
| | |-ConstAttr 0x7fa3330e9b90 <col:14> Implicit
| | `-NoThrowAttr 0x7fa3330e9bd8 <col:14> Implicit
| |-FunctionDecl 0x7fa3330e9d10 <line:423:1, col:33> col:15 referenced scalbn 'double (double, int)' extern
| | |-ParmVarDecl 0x7fa3330e9c00 <col:22> col:28 'double'
| | |-ParmVarDecl 0x7fa3330e9c78 <col:30> col:33 'int'
| | |-ConstAttr 0x7fa3330e9db8 <col:15> Implicit
| | `-NoThrowAttr 0x7fa3330e9e00 <col:15> Implicit
| |-FunctionDecl 0x7fa3330e9f38 <line:424:1, col:44> col:20 used scalbnl 'long double (long double, int)' extern
| | |-ParmVarDecl 0x7fa3330e9e28 <col:28, col:33> col:39 'long double'
| | |-ParmVarDecl 0x7fa3330e9ea0 <col:41> col:44 'int'
| | |-ConstAttr 0x7fa3330e9fe0 <col:20> Implicit
| | `-NoThrowAttr 0x7fa3330ea028 <col:20> Implicit
| |-FunctionDecl 0x7fa3330ea1a8 <line:426:1, col:38> col:14 used scalblnf 'float (float, long)' extern
| | |-ParmVarDecl 0x7fa3330ea050 <col:23> col:28 'float'
| | |-ParmVarDecl 0x7fa3330ea0c8 <col:30, col:35> col:38 'long'
| | |-ConstAttr 0x7fa3330ea290 <col:14> Implicit
| | `-NoThrowAttr 0x7fa3330ea2d8 <col:14> Implicit
| |-FunctionDecl 0x7fa3330ea458 <line:427:1, col:39> col:15 referenced scalbln 'double (double, long)' extern
| | |-ParmVarDecl 0x7fa3330ea300 <col:23> col:29 'double'
| | |-ParmVarDecl 0x7fa3330ea378 <col:31, col:36> col:39 'long'
| | |-ConstAttr 0x7fa3330ea540 <col:15> Implicit
| | `-NoThrowAttr 0x7fa3330ea588 <col:15> Implicit
| |-FunctionDecl 0x7fa3330ea708 <line:428:1, col:50> col:20 used scalblnl 'long double (long double, long)' extern
| | |-ParmVarDecl 0x7fa3330ea5b0 <col:29, col:34> col:40 'long double'
| | |-ParmVarDecl 0x7fa3330ea628 <col:42, col:47> col:50 'long'
| | |-ConstAttr 0x7fa3330ea7f0 <col:20> Implicit
| | `-NoThrowAttr 0x7fa3330ea838 <col:20> Implicit
| |-FunctionDecl 0x7fa3330ea8f0 <line:430:1, col:25> col:14 used fabsf 'float (float)' extern
| | |-ParmVarDecl 0x7fa3330ea860 <col:20> col:25 'float'
| | |-NoThrowAttr 0x7fa3330ea990 <col:14> Implicit
| | `-ConstAttr 0x7fa3330ea9d8 <col:14> Implicit
| |-FunctionDecl 0x7fa3330eaa90 <line:431:1, col:26> col:15 used fabs 'double (double)' extern
| | |-ParmVarDecl 0x7fa3330eaa00 <col:20> col:26 'double'
| | |-NoThrowAttr 0x7fa3330eab30 <col:15> Implicit
| | `-ConstAttr 0x7fa3330eab78 <col:15> Implicit
| |-FunctionDecl 0x7fa3330eac30 <line:432:1, col:37> col:20 used fabsl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fa3330eaba0 <col:26, col:31> col:37 'long double'
| | |-NoThrowAttr 0x7fa3330eacd0 <col:20> Implicit
| | `-ConstAttr 0x7fa3330ead18 <col:20> Implicit
| |-FunctionDecl 0x7fa3330eadd0 <line:434:1, col:25> col:14 used cbrtf 'float (float)' extern
| | |-ParmVarDecl 0x7fa3330ead40 <col:20> col:25 'float'
| | |-ConstAttr 0x7fa3330eae70 <col:14> Implicit
| | `-NoThrowAttr 0x7fa3330eaeb8 <col:14> Implicit
| |-FunctionDecl 0x7fa3330eaf70 <line:435:1, col:26> col:15 referenced cbrt 'double (double)' extern
| | |-ParmVarDecl 0x7fa3330eaee0 <col:20> col:26 'double'
| | |-ConstAttr 0x7fa3330eb010 <col:15> Implicit
| | `-NoThrowAttr 0x7fa3330eb058 <col:15> Implicit
| |-FunctionDecl 0x7fa3330eb110 <line:436:1, col:37> col:20 used cbrtl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fa3330eb080 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fa3330eb1b0 <col:20> Implicit
| | `-NoThrowAttr 0x7fa3330eb1f8 <col:20> Implicit
| |-FunctionDecl 0x7fa3330eb330 <line:438:1, col:33> col:14 used hypotf 'float (float, float)' extern
| | |-ParmVarDecl 0x7fa3330eb220 <col:21> col:26 'float'
| | |-ParmVarDecl 0x7fa3330eb298 <col:28> col:33 'float'
| | |-ConstAttr 0x7fa3330eb3d8 <col:14> Implicit
| | `-NoThrowAttr 0x7fa3330eb420 <col:14> Implicit
| |-FunctionDecl 0x7fa3330eb558 <line:439:1, col:35> col:15 hypot 'double (double, double)' extern
| | |-ParmVarDecl 0x7fa3330eb448 <col:21> col:27 'double'
| | |-ParmVarDecl 0x7fa3330eb4c0 <col:29> col:35 'double'
| | |-ConstAttr 0x7fa3330eb600 <col:15> Implicit
| | `-NoThrowAttr 0x7fa3330eb648 <col:15> Implicit
| |-FunctionDecl 0x7fa3330eb800 <line:440:1, col:51> col:20 used hypotl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fa3330eb670 <col:27, col:32> col:38 'long double'
| | |-ParmVarDecl 0x7fa3330eb6e8 <col:40, col:45> col:51 'long double'
| | |-ConstAttr 0x7fa3330eb8a8 <col:20> Implicit
| | `-NoThrowAttr 0x7fa3330eb8f0 <col:20> Implicit
| |-FunctionDecl 0x7fa3330eba28 <line:442:1, col:31> col:14 used powf 'float (float, float)' extern
| | |-ParmVarDecl 0x7fa3330eb918 <col:19> col:24 'float'
| | |-ParmVarDecl 0x7fa3330eb990 <col:26> col:31 'float'
| | |-ConstAttr 0x7fa3330ebad0 <col:14> Implicit
| | `-NoThrowAttr 0x7fa3330ebb18 <col:14> Implicit
| |-FunctionDecl 0x7fa3330ebc50 <line:443:1, col:33> col:15 pow 'double (double, double)' extern
| | |-ParmVarDecl 0x7fa3330ebb40 <col:19> col:25 'double'
| | |-ParmVarDecl 0x7fa3330ebbb8 <col:27> col:33 'double'
| | |-ConstAttr 0x7fa3330ebcf8 <col:15> Implicit
| | `-NoThrowAttr 0x7fa3330ebd40 <col:15> Implicit
| |-FunctionDecl 0x7fa3330ebe78 <line:444:1, col:49> col:20 used powl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fa3330ebd68 <col:25, col:30> col:36 'long double'
| | |-ParmVarDecl 0x7fa3330ebde0 <col:38, col:43> col:49 'long double'
| | |-ConstAttr 0x7fa3330ebf20 <col:20> Implicit
| | `-NoThrowAttr 0x7fa3330ebf68 <col:20> Implicit
| |-FunctionDecl 0x7fa3330ec020 <line:446:1, col:25> col:14 used sqrtf 'float (float)' extern
| | |-ParmVarDecl 0x7fa3330ebf90 <col:20> col:25 'float'
| | |-ConstAttr 0x7fa3330ec0c0 <col:14> Implicit
| | `-NoThrowAttr 0x7fa3330ec108 <col:14> Implicit
| |-FunctionDecl 0x7fa3330ec1c0 <line:447:1, col:26> col:15 used sqrt 'double (double)' extern
| | |-ParmVarDecl 0x7fa3330ec130 <col:20> col:26 'double'
| | |-ConstAttr 0x7fa3330ec260 <col:15> Implicit
| | `-NoThrowAttr 0x7fa3330ec2a8 <col:15> Implicit
| |-FunctionDecl 0x7fa3330ec360 <line:448:1, col:37> col:20 used sqrtl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fa3330ec2d0 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fa3330ec400 <col:20> Implicit
| | `-NoThrowAttr 0x7fa3330ec448 <col:20> Implicit
| |-FunctionDecl 0x7fa3330ec500 <line:450:1, col:24> col:14 used erff 'float (float)' extern
| | |-ParmVarDecl 0x7fa3330ec470 <col:19> col:24 'float'
| | |-ConstAttr 0x7fa3330ec5a0 <col:14> Implicit
| | `-NoThrowAttr 0x7fa3330ec5e8 <col:14> Implicit
| |-FunctionDecl 0x7fa3330ec6a0 <line:451:1, col:25> col:15 referenced erf 'double (double)' extern
| | |-ParmVarDecl 0x7fa3330ec610 <col:19> col:25 'double'
| | |-ConstAttr 0x7fa3330ec740 <col:15> Implicit
| | `-NoThrowAttr 0x7fa3330ec788 <col:15> Implicit
| |-FunctionDecl 0x7fa3330ec890 <line:452:1, col:36> col:20 used erfl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fa3330ec800 <col:25, col:30> col:36 'long double'
| | |-ConstAttr 0x7fa3330ec930 <col:20> Implicit
| | `-NoThrowAttr 0x7fa3330ec978 <col:20> Implicit
| |-FunctionDecl 0x7fa3330eca30 <line:454:1, col:25> col:14 used erfcf 'float (float)' extern
| | |-ParmVarDecl 0x7fa3330ec9a0 <col:20> col:25 'float'
| | |-ConstAttr 0x7fa3330ecad0 <col:14> Implicit
| | `-NoThrowAttr 0x7fa3330ecb18 <col:14> Implicit
| |-FunctionDecl 0x7fa3330ecbd0 <line:455:1, col:26> col:15 referenced erfc 'double (double)' extern
| | |-ParmVarDecl 0x7fa3330ecb40 <col:20> col:26 'double'
| | |-ConstAttr 0x7fa3330ecc70 <col:15> Implicit
| | `-NoThrowAttr 0x7fa3330eccb8 <col:15> Implicit
| |-FunctionDecl 0x7fa3330ecd70 <line:456:1, col:37> col:20 used erfcl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fa3330ecce0 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fa3330ece10 <col:20> Implicit
| | `-NoThrowAttr 0x7fa3330ece58 <col:20> Implicit
| |-FunctionDecl 0x7fa3330ecf10 <line:461:1, col:27> col:14 used lgammaf 'float (float)' extern
| | |-ParmVarDecl 0x7fa3330ece80 <col:22> col:27 'float'
| | `-NoThrowAttr 0x7fa3330ecfb0 <col:14> Implicit
| |-FunctionDecl 0x7fa3330ed0a0 <line:462:1, col:28> col:15 referenced lgamma 'double (double)' extern
| | |-ParmVarDecl 0x7fa3330ed010 <col:22> col:28 'double'
| | `-NoThrowAttr 0x7fa3330ed140 <col:15> Implicit
| |-FunctionDecl 0x7fa3330ed230 <line:463:1, col:39> col:20 used lgammal 'long double (long double)' extern
| | |-ParmVarDecl 0x7fa3330ed1a0 <col:28, col:33> col:39 'long double'
| | `-NoThrowAttr 0x7fa3330ed2d0 <col:20> Implicit
| |-FunctionDecl 0x7fa3330ed3c0 <line:465:1, col:27> col:14 used tgammaf 'float (float)' extern
| | |-ParmVarDecl 0x7fa3330ed330 <col:22> col:27 'float'
| | |-ConstAttr 0x7fa3330ed460 <col:14> Implicit
| | `-NoThrowAttr 0x7fa3330ed4a8 <col:14> Implicit
| |-FunctionDecl 0x7fa3330ed560 <line:466:1, col:28> col:15 referenced tgamma 'double (double)' extern
| | |-ParmVarDecl 0x7fa3330ed4d0 <col:22> col:28 'double'
| | |-ConstAttr 0x7fa3330ed600 <col:15> Implicit
| | `-NoThrowAttr 0x7fa3330ed648 <col:15> Implicit
| |-FunctionDecl 0x7fa3330ed700 <line:467:1, col:39> col:20 used tgammal 'long double (long double)' extern
| | |-ParmVarDecl 0x7fa3330ed670 <col:28, col:33> col:39 'long double'
| | |-ConstAttr 0x7fa3330ed7a0 <col:20> Implicit
| | `-NoThrowAttr 0x7fa3330ed7e8 <col:20> Implicit
| |-FunctionDecl 0x7fa3330ed8a8 <line:469:1, col:25> col:14 used ceilf 'float (float)' extern
| | |-ParmVarDecl 0x7fa3330ed818 <col:20> col:25 'float'
| | |-NoThrowAttr 0x7fa3330ed948 <col:14> Implicit
| | `-ConstAttr 0x7fa3330ed990 <col:14> Implicit
| |-FunctionDecl 0x7fa3330eda48 <line:470:1, col:26> col:15 referenced ceil 'double (double)' extern
| | |-ParmVarDecl 0x7fa3330ed9b8 <col:20> col:26 'double'
| | |-NoThrowAttr 0x7fa3330edae8 <col:15> Implicit
| | `-ConstAttr 0x7fa3330edb30 <col:15> Implicit
| |-FunctionDecl 0x7fa3330edbe8 <line:471:1, col:37> col:20 used ceill 'long double (long double)' extern
| | |-ParmVarDecl 0x7fa3330edb58 <col:26, col:31> col:37 'long double'
| | |-NoThrowAttr 0x7fa3330edc88 <col:20> Implicit
| | `-ConstAttr 0x7fa3330edcd0 <col:20> Implicit
| |-FunctionDecl 0x7fa3330edd88 <line:473:1, col:26> col:14 used floorf 'float (float)' extern
| | |-ParmVarDecl 0x7fa3330edcf8 <col:21> col:26 'float'
| | |-NoThrowAttr 0x7fa3330ede28 <col:14> Implicit
| | `-ConstAttr 0x7fa3330ede70 <col:14> Implicit
| |-FunctionDecl 0x7fa3330edf28 <line:474:1, col:27> col:15 referenced floor 'double (double)' extern
| | |-ParmVarDecl 0x7fa3330ede98 <col:21> col:27 'double'
| | |-NoThrowAttr 0x7fa3330edfc8 <col:15> Implicit
| | `-ConstAttr 0x7fa3330ee010 <col:15> Implicit
| |-FunctionDecl 0x7fa3330ee0c8 <line:475:1, col:38> col:20 used floorl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fa3330ee038 <col:27, col:32> col:38 'long double'
| | |-NoThrowAttr 0x7fa3330ee168 <col:20> Implicit
| | `-ConstAttr 0x7fa3330ee1b0 <col:20> Implicit
| |-FunctionDecl 0x7fa3330ee268 <line:477:1, col:30> col:14 used nearbyintf 'float (float)' extern
| | |-ParmVarDecl 0x7fa3330ee1d8 <col:25> col:30 'float'
| | |-NoThrowAttr 0x7fa3330ee308 <col:14> Implicit
| | `-ConstAttr 0x7fa3330ee350 <col:14> Implicit
| |-FunctionDecl 0x7fa3330ee408 <line:478:1, col:31> col:15 referenced nearbyint 'double (double)' extern
| | |-ParmVarDecl 0x7fa3330ee378 <col:25> col:31 'double'
| | |-NoThrowAttr 0x7fa3330ee4a8 <col:15> Implicit
| | `-ConstAttr 0x7fa3330ee4f0 <col:15> Implicit
| |-FunctionDecl 0x7fa3330ee5a8 <line:479:1, col:42> col:20 used nearbyintl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fa3330ee518 <col:31, col:36> col:42 'long double'
| | |-NoThrowAttr 0x7fa3330ee648 <col:20> Implicit
| | `-ConstAttr 0x7fa3330ee690 <col:20> Implicit
| |-FunctionDecl 0x7fa3330ee748 <line:481:1, col:25> col:14 used rintf 'float (float)' extern
| | |-ParmVarDecl 0x7fa3330ee6b8 <col:20> col:25 'float'
| | |-NoThrowAttr 0x7fa3330ee7e8 <col:14> Implicit
| | `-ConstAttr 0x7fa3330ee838 <col:14> Implicit
| |-FunctionDecl 0x7fa3330ee8f0 <line:482:1, col:26> col:15 referenced rint 'double (double)' extern
| | |-ParmVarDecl 0x7fa3330ee860 <col:20> col:26 'double'
| | |-NoThrowAttr 0x7fa3330ee990 <col:15> Implicit
| | `-ConstAttr 0x7fa3330ee9d8 <col:15> Implicit
| |-FunctionDecl 0x7fa3330eea90 <line:483:1, col:37> col:20 used rintl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fa3330eea00 <col:26, col:31> col:37 'long double'
| | |-NoThrowAttr 0x7fa3330eeb30 <col:20> Implicit
| | `-ConstAttr 0x7fa3330eeb78 <col:20> Implicit
| |-FunctionDecl 0x7fa3330eec68 <line:485:1, col:29> col:17 used lrintf 'long (float)' extern
| | |-ParmVarDecl 0x7fa3330eeba0 <col:24> col:29 'float'
| | |-ConstAttr 0x7fa3330eed48 <col:17> Implicit
| | `-NoThrowAttr 0x7fa3330eed90 <col:17> Implicit
| |-FunctionDecl 0x7fa3330eee88 <line:486:1, col:29> col:17 referenced lrint 'long (double)' extern
| | |-ParmVarDecl 0x7fa3330eedb8 <col:23> col:29 'double'
| | |-ConstAttr 0x7fa3330eef68 <col:17> Implicit
| | `-NoThrowAttr 0x7fa3330eefb0 <col:17> Implicit
| |-FunctionDecl 0x7fa3330ef0a8 <line:487:1, col:35> col:17 used lrintl 'long (long double)' extern
| | |-ParmVarDecl 0x7fa3330eefd8 <col:24, col:29> col:35 'long double'
| | |-ConstAttr 0x7fa3330ef188 <col:17> Implicit
| | `-NoThrowAttr 0x7fa3330ef1d0 <col:17> Implicit
| |-FunctionDecl 0x7fa3330ef288 <line:489:1, col:26> col:14 used roundf 'float (float)' extern
| | |-ParmVarDecl 0x7fa3330ef1f8 <col:21> col:26 'float'
| | |-NoThrowAttr 0x7fa3330ef328 <col:14> Implicit
| | `-ConstAttr 0x7fa3330ef370 <col:14> Implicit
| |-FunctionDecl 0x7fa3330ef428 <line:490:1, col:27> col:15 referenced round 'double (double)' extern
| | |-ParmVarDecl 0x7fa3330ef398 <col:21> col:27 'double'
| | |-NoThrowAttr 0x7fa3330ef4c8 <col:15> Implicit
| | `-ConstAttr 0x7fa3330ef510 <col:15> Implicit
| |-FunctionDecl 0x7fa3330ef5c8 <line:491:1, col:38> col:20 used roundl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fa3330ef538 <col:27, col:32> col:38 'long double'
| | |-NoThrowAttr 0x7fa3330ef668 <col:20> Implicit
| | `-ConstAttr 0x7fa3330ef6b0 <col:20> Implicit
| |-FunctionDecl 0x7fa3330ef768 <line:493:1, col:30> col:17 used lroundf 'long (float)' extern
| | |-ParmVarDecl 0x7fa3330ef6d8 <col:25> col:30 'float'
| | |-ConstAttr 0x7fa3330ef808 <col:17> Implicit
| | `-NoThrowAttr 0x7fa3330ef850 <col:17> Implicit
| |-FunctionDecl 0x7fa3330ef908 <line:494:1, col:30> col:17 referenced lround 'long (double)' extern
| | |-ParmVarDecl 0x7fa3330ef878 <col:24> col:30 'double'
| | |-ConstAttr 0x7fa3330ef9a8 <col:17> Implicit
| | `-NoThrowAttr 0x7fa3330ef9f0 <col:17> Implicit
| |-FunctionDecl 0x7fa3330efaa8 <line:495:1, col:36> col:17 used lroundl 'long (long double)' extern
| | |-ParmVarDecl 0x7fa3330efa18 <col:25, col:30> col:36 'long double'
| | |-ConstAttr 0x7fa3330efb48 <col:17> Implicit
| | `-NoThrowAttr 0x7fa3330efb90 <col:17> Implicit
| |-FunctionDecl 0x7fa3330efc88 <line:500:1, col:35> col:22 used llrintf 'long long (float)' extern
| | |-ParmVarDecl 0x7fa3330efbb8 <col:30> col:35 'float'
| | |-ConstAttr 0x7fa3330efd68 <col:22> Implicit
| | `-NoThrowAttr 0x7fa3330efdb0 <col:22> Implicit
| |-FunctionDecl 0x7fa3330efea8 <line:501:1, col:35> col:22 referenced llrint 'long long (double)' extern
| | |-ParmVarDecl 0x7fa3330efdd8 <col:29> col:35 'double'
| | |-ConstAttr 0x7fa3330eff88 <col:22> Implicit
| | `-NoThrowAttr 0x7fa3330effd0 <col:22> Implicit
| |-FunctionDecl 0x7fa3330f00c8 <line:502:1, col:41> col:22 used llrintl 'long long (long double)' extern
| | |-ParmVarDecl 0x7fa3330efff8 <col:30, col:35> col:41 'long double'
| | |-ConstAttr 0x7fa3330f01a8 <col:22> Implicit
| | `-NoThrowAttr 0x7fa3330f01f0 <col:22> Implicit
| |-FunctionDecl 0x7fa3330f02a8 <line:504:1, col:36> col:22 used llroundf 'long long (float)' extern
| | |-ParmVarDecl 0x7fa3330f0218 <col:31> col:36 'float'
| | |-ConstAttr 0x7fa3330f0348 <col:22> Implicit
| | `-NoThrowAttr 0x7fa3330f0390 <col:22> Implicit
| |-FunctionDecl 0x7fa3330f0448 <line:505:1, col:36> col:22 referenced llround 'long long (double)' extern
| | |-ParmVarDecl 0x7fa3330f03b8 <col:30> col:36 'double'
| | |-ConstAttr 0x7fa3330f04e8 <col:22> Implicit
| | `-NoThrowAttr 0x7fa3330f0530 <col:22> Implicit
| |-FunctionDecl 0x7fa3330f05e8 <line:506:1, col:42> col:22 used llroundl 'long long (long double)' extern
| | |-ParmVarDecl 0x7fa3330f0558 <col:31, col:36> col:42 'long double'
| | |-ConstAttr 0x7fa3330f0688 <col:22> Implicit
| | `-NoThrowAttr 0x7fa3330f06d0 <col:22> Implicit
| |-FunctionDecl 0x7fa3330f0800 <line:509:1, col:26> col:14 used truncf 'float (float)' extern
| | |-ParmVarDecl 0x7fa3330f06f8 <col:21> col:26 'float'
| | |-NoThrowAttr 0x7fa3330f08a0 <col:14> Implicit
| | `-ConstAttr 0x7fa3330f08e8 <col:14> Implicit
| |-FunctionDecl 0x7fa3330f09a0 <line:510:1, col:27> col:15 referenced trunc 'double (double)' extern
| | |-ParmVarDecl 0x7fa3330f0910 <col:21> col:27 'double'
| | |-NoThrowAttr 0x7fa3330f0a40 <col:15> Implicit
| | `-ConstAttr 0x7fa3330f0a88 <col:15> Implicit
| |-FunctionDecl 0x7fa3330f0b40 <line:511:1, col:38> col:20 used truncl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fa3330f0ab0 <col:27, col:32> col:38 'long double'
| | |-NoThrowAttr 0x7fa3330f0be0 <col:20> Implicit
| | `-ConstAttr 0x7fa3330f0c28 <col:20> Implicit
| |-FunctionDecl 0x7fa3330f0d60 <line:513:1, col:32> col:14 used fmodf 'float (float, float)' extern
| | |-ParmVarDecl 0x7fa3330f0c50 <col:20> col:25 'float'
| | |-ParmVarDecl 0x7fa3330f0cc8 <col:27> col:32 'float'
| | |-ConstAttr 0x7fa3330f0e08 <col:14> Implicit
| | `-NoThrowAttr 0x7fa3330f0e50 <col:14> Implicit
| |-FunctionDecl 0x7fa3330f0f88 <line:514:1, col:34> col:15 fmod 'double (double, double)' extern
| | |-ParmVarDecl 0x7fa3330f0e78 <col:20> col:26 'double'
| | |-ParmVarDecl 0x7fa3330f0ef0 <col:28> col:34 'double'
| | |-ConstAttr 0x7fa3330f1030 <col:15> Implicit
| | `-NoThrowAttr 0x7fa3330f1078 <col:15> Implicit
| |-FunctionDecl 0x7fa3330f11b0 <line:515:1, col:50> col:20 used fmodl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fa3330f10a0 <col:26, col:31> col:37 'long double'
| | |-ParmVarDecl 0x7fa3330f1118 <col:39, col:44> col:50 'long double'
| | |-ConstAttr 0x7fa3330f1258 <col:20> Implicit
| | `-NoThrowAttr 0x7fa3330f12a0 <col:20> Implicit
| |-FunctionDecl 0x7fa3330f13d8 <line:517:1, col:37> col:14 used remainderf 'float (float, float)' extern
| | |-ParmVarDecl 0x7fa3330f12c8 <col:25> col:30 'float'
| | |-ParmVarDecl 0x7fa3330f1340 <col:32> col:37 'float'
| | |-ConstAttr 0x7fa3330f1480 <col:14> Implicit
| | `-NoThrowAttr 0x7fa3330f14c8 <col:14> Implicit
| |-FunctionDecl 0x7fa3330f1600 <line:518:1, col:39> col:15 remainder 'double (double, double)' extern
| | |-ParmVarDecl 0x7fa3330f14f0 <col:25> col:31 'double'
| | |-ParmVarDecl 0x7fa3330f1568 <col:33> col:39 'double'
| | |-ConstAttr 0x7fa3330f16a8 <col:15> Implicit
| | `-NoThrowAttr 0x7fa3330f16f0 <col:15> Implicit
| |-FunctionDecl 0x7fa3330f1838 <line:519:1, col:55> col:20 used remainderl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fa3330f1718 <col:31, col:36> col:42 'long double'
| | |-ParmVarDecl 0x7fa3330f1790 <col:44, col:49> col:55 'long double'
| | |-ConstAttr 0x7fa3330f18e0 <col:20> Implicit
| | `-NoThrowAttr 0x7fa3330f1928 <col:20> Implicit
| |-FunctionDecl 0x7fa3330f1b28 <line:521:1, col:41> col:14 used remquof 'float (float, float, int *)' extern
| | |-ParmVarDecl 0x7fa3330f1950 <col:22> col:27 'float'
| | |-ParmVarDecl 0x7fa3330f19c8 <col:29> col:34 'float'
| | `-ParmVarDecl 0x7fa3330f1a40 <col:36, col:40> col:41 'int *'
| |-FunctionDecl 0x7fa3330f1dc8 <line:522:1, col:43> col:15 remquo 'double (double, double, int *)' extern
| | |-ParmVarDecl 0x7fa3330f1bf0 <col:22> col:28 'double'
| | |-ParmVarDecl 0x7fa3330f1c68 <col:30> col:36 'double'
| | `-ParmVarDecl 0x7fa3330f1ce0 <col:38, col:42> col:43 'int *'
| |-FunctionDecl 0x7fa3330f2068 <line:523:1, col:59> col:20 used remquol 'long double (long double, long double, int *)' extern
| | |-ParmVarDecl 0x7fa3330f1e90 <col:28, col:33> col:39 'long double'
| | |-ParmVarDecl 0x7fa3330f1f08 <col:41, col:46> col:52 'long double'
| | `-ParmVarDecl 0x7fa3330f1f80 <col:54, col:58> col:59 'int *'
| |-FunctionDecl 0x7fa3330f2240 <line:525:1, col:36> col:14 used copysignf 'float (float, float)' extern
| | |-ParmVarDecl 0x7fa3330f2130 <col:24> col:29 'float'
| | |-ParmVarDecl 0x7fa3330f21a8 <col:31> col:36 'float'
| | |-NoThrowAttr 0x7fa3330f22e8 <col:14> Implicit
| | `-ConstAttr 0x7fa3330f2330 <col:14> Implicit
| |-FunctionDecl 0x7fa3330f2468 <line:526:1, col:38> col:15 copysign 'double (double, double)' extern
| | |-ParmVarDecl 0x7fa3330f2358 <col:24> col:30 'double'
| | |-ParmVarDecl 0x7fa3330f23d0 <col:32> col:38 'double'
| | |-NoThrowAttr 0x7fa3330f2510 <col:15> Implicit
| | `-ConstAttr 0x7fa3330f2558 <col:15> Implicit
| |-FunctionDecl 0x7fa3330f2690 <line:527:1, col:54> col:20 used copysignl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fa3330f2580 <col:30, col:35> col:41 'long double'
| | |-ParmVarDecl 0x7fa3330f25f8 <col:43, col:48> col:54 'long double'
| | |-NoThrowAttr 0x7fa3330f2738 <col:20> Implicit
| | `-ConstAttr 0x7fa3330f2780 <col:20> Implicit
| |-FunctionDecl 0x7fa3330f28c8 <line:529:1, col:31> col:14 nanf 'float (const char *)' extern
| | |-ParmVarDecl 0x7fa3330f2800 <col:19, col:30> col:31 'const char *'
| | |-NoThrowAttr 0x7fa3330f29a8 <col:14> Implicit
| | `-ConstAttr 0x7fa3330f29f0 <col:14> Implicit
| |-FunctionDecl 0x7fa3330f2ae8 <line:530:1, col:31> col:15 nan 'double (const char *)' extern
| | |-ParmVarDecl 0x7fa3330f2a18 <col:19, col:30> col:31 'const char *'
| | |-NoThrowAttr 0x7fa3330f2bc8 <col:15> Implicit
| | `-ConstAttr 0x7fa3330f2c10 <col:15> Implicit
| |-FunctionDecl 0x7fa3330f2d08 <line:531:1, col:37> col:20 nanl 'long double (const char *)' extern
| | |-ParmVarDecl 0x7fa3330f2c38 <col:25, col:36> col:37 'const char *'
| | |-NoThrowAttr 0x7fa3330f2de8 <col:20> Implicit
| | `-ConstAttr 0x7fa3330f2e30 <col:20> Implicit
| |-FunctionDecl 0x7fa3330f2f68 <line:533:1, col:37> col:14 used nextafterf 'float (float, float)' extern
| | |-ParmVarDecl 0x7fa3330f2e58 <col:25> col:30 'float'
| | |-ParmVarDecl 0x7fa3330f2ed0 <col:32> col:37 'float'
| | |-ConstAttr 0x7fa3330f3010 <col:14> Implicit
| | `-NoThrowAttr 0x7fa3330f3058 <col:14> Implicit
| |-FunctionDecl 0x7fa3330f3190 <line:534:1, col:39> col:15 nextafter 'double (double, double)' extern
| | |-ParmVarDecl 0x7fa3330f3080 <col:25> col:31 'double'
| | |-ParmVarDecl 0x7fa3330f30f8 <col:33> col:39 'double'
| | |-ConstAttr 0x7fa3330f3238 <col:15> Implicit
| | `-NoThrowAttr 0x7fa3330f3280 <col:15> Implicit
| |-FunctionDecl 0x7fa3330f33b8 <line:535:1, col:55> col:20 used nextafterl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fa3330f32a8 <col:31, col:36> col:42 'long double'
| | |-ParmVarDecl 0x7fa3330f3320 <col:44, col:49> col:55 'long double'
| | |-ConstAttr 0x7fa3330f3460 <col:20> Implicit
| | `-NoThrowAttr 0x7fa3330f34a8 <col:20> Implicit
| |-FunctionDecl 0x7fa3330f3628 <line:537:1, col:45> col:15 referenced nexttoward 'double (double, long double)' extern
| | |-ParmVarDecl 0x7fa3330f34d0 <col:26> col:32 'double'
| | |-ParmVarDecl 0x7fa3330f3548 <col:34, col:39> col:45 'long double'
| | |-ConstAttr 0x7fa3330f3710 <col:15> Implicit
| | `-NoThrowAttr 0x7fa3330f3758 <col:15> Implicit
| |-FunctionDecl 0x7fa3330e48d8 <line:538:1, col:44> col:14 used nexttowardf 'float (float, long double)' extern
| | |-ParmVarDecl 0x7fa3330f3780 <col:26> col:31 'float'
| | |-ParmVarDecl 0x7fa3330e4800 <col:33, col:38> col:44 'long double'
| | |-ConstAttr 0x7fa3330e49c0 <col:14> Implicit
| | `-NoThrowAttr 0x7fa3330e4a08 <col:14> Implicit
| |-FunctionDecl 0x7fa3330e4b40 <line:539:1, col:56> col:20 used nexttowardl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fa3330e4a30 <col:32, col:37> col:43 'long double'
| | |-ParmVarDecl 0x7fa3330e4aa8 <col:45, col:50> col:56 'long double'
| | |-ConstAttr 0x7fa3330e4be8 <col:20> Implicit
| | `-NoThrowAttr 0x7fa3330e4c30 <col:20> Implicit
| |-FunctionDecl 0x7fa3330e4d68 <line:541:1, col:32> col:14 used fdimf 'float (float, float)' extern
| | |-ParmVarDecl 0x7fa3330e4c58 <col:20> col:25 'float'
| | |-ParmVarDecl 0x7fa3330e4cd0 <col:27> col:32 'float'
| | |-ConstAttr 0x7fa3330e4e10 <col:14> Implicit
| | `-NoThrowAttr 0x7fa3330e4e58 <col:14> Implicit
| |-FunctionDecl 0x7fa3330e4f90 <line:542:1, col:34> col:15 fdim 'double (double, double)' extern
| | |-ParmVarDecl 0x7fa3330e4e80 <col:20> col:26 'double'
| | |-ParmVarDecl 0x7fa3330e4ef8 <col:28> col:34 'double'
| | |-ConstAttr 0x7fa3330e5038 <col:15> Implicit
| | `-NoThrowAttr 0x7fa3330e5080 <col:15> Implicit
| |-FunctionDecl 0x7fa3330e51b8 <line:543:1, col:50> col:20 used fdiml 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fa3330e50a8 <col:26, col:31> col:37 'long double'
| | |-ParmVarDecl 0x7fa3330e5120 <col:39, col:44> col:50 'long double'
| | |-ConstAttr 0x7fa3330e5260 <col:20> Implicit
| | `-NoThrowAttr 0x7fa3330e52a8 <col:20> Implicit
| |-FunctionDecl 0x7fa3330e53e0 <line:545:1, col:32> col:14 used fmaxf 'float (float, float)' extern
| | |-ParmVarDecl 0x7fa3330e52d0 <col:20> col:25 'float'
| | |-ParmVarDecl 0x7fa3330e5348 <col:27> col:32 'float'
| | |-NoThrowAttr 0x7fa3330e5488 <col:14> Implicit
| | `-ConstAttr 0x7fa3330e54d0 <col:14> Implicit
| |-FunctionDecl 0x7fa3330e5608 <line:546:1, col:34> col:15 fmax 'double (double, double)' extern
| | |-ParmVarDecl 0x7fa3330e54f8 <col:20> col:26 'double'
| | |-ParmVarDecl 0x7fa3330e5570 <col:28> col:34 'double'
| | |-NoThrowAttr 0x7fa3330e56b0 <col:15> Implicit
| | `-ConstAttr 0x7fa3330e56f8 <col:15> Implicit
| |-FunctionDecl 0x7fa3330f7838 <line:547:1, col:50> col:20 used fmaxl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fa3330e5720 <col:26, col:31> col:37 'long double'
| | |-ParmVarDecl 0x7fa3330e5798 <col:39, col:44> col:50 'long double'
| | |-NoThrowAttr 0x7fa3330f78e0 <col:20> Implicit
| | `-ConstAttr 0x7fa3330f7928 <col:20> Implicit
| |-FunctionDecl 0x7fa3330f7a60 <line:549:1, col:32> col:14 used fminf 'float (float, float)' extern
| | |-ParmVarDecl 0x7fa3330f7950 <col:20> col:25 'float'
| | |-ParmVarDecl 0x7fa3330f79c8 <col:27> col:32 'float'
| | |-NoThrowAttr 0x7fa3330f7b08 <col:14> Implicit
| | `-ConstAttr 0x7fa3330f7b50 <col:14> Implicit
| |-FunctionDecl 0x7fa3330f7c88 <line:550:1, col:34> col:15 fmin 'double (double, double)' extern
| | |-ParmVarDecl 0x7fa3330f7b78 <col:20> col:26 'double'
| | |-ParmVarDecl 0x7fa3330f7bf0 <col:28> col:34 'double'
| | |-NoThrowAttr 0x7fa3330f7d30 <col:15> Implicit
| | `-ConstAttr 0x7fa3330f7d78 <col:15> Implicit
| |-FunctionDecl 0x7fa3330f7eb0 <line:551:1, col:50> col:20 used fminl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fa3330f7da0 <col:26, col:31> col:37 'long double'
| | |-ParmVarDecl 0x7fa3330f7e18 <col:39, col:44> col:50 'long double'
| | |-NoThrowAttr 0x7fa3330f7f58 <col:20> Implicit
| | `-ConstAttr 0x7fa3330f7fa0 <col:20> Implicit
| |-FunctionDecl 0x7fa3330f81a8 <line:553:1, col:38> col:14 used fmaf 'float (float, float, float)' extern
| | |-ParmVarDecl 0x7fa3330f7fc8 <col:19> col:24 'float'
| | |-ParmVarDecl 0x7fa3330f8040 <col:26> col:31 'float'
| | |-ParmVarDecl 0x7fa3330f80b8 <col:33> col:38 'float'
| | |-ConstAttr 0x7fa3330f82a8 <col:14> Implicit
| | `-NoThrowAttr 0x7fa3330f82f0 <col:14> Implicit
| |-FunctionDecl 0x7fa3330f84f8 <line:554:1, col:41> col:15 fma 'double (double, double, double)' extern
| | |-ParmVarDecl 0x7fa3330f8318 <col:19> col:25 'double'
| | |-ParmVarDecl 0x7fa3330f8390 <col:27> col:33 'double'
| | |-ParmVarDecl 0x7fa3330f8408 <col:35> col:41 'double'
| | |-ConstAttr 0x7fa3330f85f8 <col:15> Implicit
| | `-NoThrowAttr 0x7fa3330f8640 <col:15> Implicit
| |-FunctionDecl 0x7fa3330e8888 <line:555:1, col:62> col:20 used fmal 'long double (long double, long double, long double)' extern
| | |-ParmVarDecl 0x7fa3330f8668 <col:25, col:30> col:36 'long double'
| | |-ParmVarDecl 0x7fa3330f86e0 <col:38, col:43> col:49 'long double'
| | |-ParmVarDecl 0x7fa3330f8758 <col:51, col:56> col:62 'long double'
| | |-ConstAttr 0x7fa3330e8988 <col:20> Implicit
| | `-NoThrowAttr 0x7fa3330e89d0 <col:20> Implicit
| |-FunctionDecl 0x7fa3330e8a88 <line:565:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:565:14 __inff 'float (void)' extern
| | `-AvailabilityAttr 0x7fa3330e8b20 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
| |-FunctionDecl 0x7fa3330e8c68 </usr/include/math.h:566:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:566:15 __inf 'double (void)' extern
| | `-AvailabilityAttr 0x7fa3330e8d00 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
| |-FunctionDecl 0x7fa3330e8e48 </usr/include/math.h:567:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:567:20 __infl 'long double (void)' extern
| | `-AvailabilityAttr 0x7fa3330e8ee0 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
| |-FunctionDecl 0x7fa3330e9028 </usr/include/math.h:569:1, /usr/include/AvailabilityInternal.h:20677:124> /usr/include/math.h:569:14 __nan 'float (void)' extern
| | `-AvailabilityAttr 0x7fa3330e90c0 </usr/include/AvailabilityInternal.h:20677:87, col:122> macos 10.0 0 0 "" ""
| |-FunctionDecl 0x7fa3330e9218 </usr/include/math.h:597:1, /usr/include/AvailabilityInternal.h:21622:124> /usr/include/math.h:597:14 __exp10f 'float (float)' extern
| | |-ParmVarDecl 0x7fa3330e9178 <col:23> col:28 'float'
| | |-AvailabilityAttr 0x7fa3330e92b8 </usr/include/AvailabilityInternal.h:21622:87, col:122> macos 10.9 0 0 "" ""
| | |-ConstAttr 0x7fa3330e9358 </usr/include/math.h:597:14> Implicit
| | `-NoThrowAttr 0x7fa3330e9368 <col:14> Implicit
| |-FunctionDecl 0x7fa3330e9430 <line:598:1, /usr/include/AvailabilityInternal.h:21622:124> /usr/include/math.h:598:15 __exp10 'double (double)' extern
| | |-ParmVarDecl 0x7fa3330e9390 <col:23> col:29 'double'
| | |-AvailabilityAttr 0x7fa3330e94d0 </usr/include/AvailabilityInternal.h:21622:87, col:122> macos 10.9 0 0 "" ""
| | |-ConstAttr 0x7fa3330e9570 </usr/include/math.h:598:15> Implicit
| | `-NoThrowAttr 0x7fa3330e9580 <col:15> Implicit
| |-FunctionDecl 0x7fa3330fa800 </usr/include/sys/cdefs.h:300:36, /usr/include/math.h:604:78> col:29 __sincosf 'void (float, float *, float *)' inline
| | |-ParmVarDecl 0x7fa3330e95a8 <col:39, col:45> col:45 __x 'float'
| | |-ParmVarDecl 0x7fa3330e9620 <col:50, col:57> col:57 __sinp 'float *'
| | |-ParmVarDecl 0x7fa3330e9698 <col:65, col:72> col:72 __cosp 'float *'
| | `-AlwaysInlineAttr 0x7fa3330fa8b0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fa3330faae0 <line:300:36, /usr/include/math.h:605:80> col:29 __sincos 'void (double, double *, double *)' inline
| | |-ParmVarDecl 0x7fa3330fa910 <col:38, col:45> col:45 __x 'double'
| | |-ParmVarDecl 0x7fa3330fa988 <col:50, col:58> col:58 __sinp 'double *'
| | |-ParmVarDecl 0x7fa3330faa00 <col:66, col:74> col:74 __cosp 'double *'
| | `-AlwaysInlineAttr 0x7fa3330fab90 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fa3330fac90 </usr/include/math.h:614:1, /usr/include/AvailabilityInternal.h:21622:124> /usr/include/math.h:614:14 __cospif 'float (float)' extern
| | |-ParmVarDecl 0x7fa3330fabf0 <col:23> col:28 'float'
| | |-AvailabilityAttr 0x7fa3330fad30 </usr/include/AvailabilityInternal.h:21622:87, col:122> macos 10.9 0 0 "" ""
| | |-ConstAttr 0x7fa3330fadd0 </usr/include/math.h:614:14> Implicit
| | `-NoThrowAttr 0x7fa3330fade0 <col:14> Implicit
| |-FunctionDecl 0x7fa3330faea8 <line:615:1, /usr/include/AvailabilityInternal.h:21622:124> /usr/include/math.h:615:15 __cospi 'double (double)' extern
| | |-ParmVarDecl 0x7fa3330fae08 <col:23> col:29 'double'
| | |-AvailabilityAttr 0x7fa3330faf48 </usr/include/AvailabilityInternal.h:21622:87, col:122> macos 10.9 0 0 "" ""
| | |-ConstAttr 0x7fa3330fafe8 </usr/include/math.h:615:15> Implicit
| | `-NoThrowAttr 0x7fa3330faff8 <col:15> Implicit
| |-FunctionDecl 0x7fa3330fb0c0 <line:616:1, /usr/include/AvailabilityInternal.h:21622:124> /usr/include/math.h:616:14 __sinpif 'float (float)' extern
| | |-ParmVarDecl 0x7fa3330fb020 <col:23> col:28 'float'
| | |-AvailabilityAttr 0x7fa3330fb160 </usr/include/AvailabilityInternal.h:21622:87, col:122> macos 10.9 0 0 "" ""
| | |-ConstAttr 0x7fa3330fb200 </usr/include/math.h:616:14> Implicit
| | `-NoThrowAttr 0x7fa3330fb210 <col:14> Implicit
| |-FunctionDecl 0x7fa3330fb2d8 <line:617:1, /usr/include/AvailabilityInternal.h:21622:124> /usr/include/math.h:617:15 __sinpi 'double (double)' extern
| | |-ParmVarDecl 0x7fa3330fb238 <col:23> col:29 'double'
| | |-AvailabilityAttr 0x7fa3330fb378 </usr/include/AvailabilityInternal.h:21622:87, col:122> macos 10.9 0 0 "" ""
| | |-ConstAttr 0x7fa3330fb418 </usr/include/math.h:617:15> Implicit
| | `-NoThrowAttr 0x7fa3330fb428 <col:15> Implicit
| |-FunctionDecl 0x7fa3330fb4f0 <line:618:1, /usr/include/AvailabilityInternal.h:21622:124> /usr/include/math.h:618:14 __tanpif 'float (float)' extern
| | |-ParmVarDecl 0x7fa3330fb450 <col:23> col:28 'float'
| | |-AvailabilityAttr 0x7fa3330fb590 </usr/include/AvailabilityInternal.h:21622:87, col:122> macos 10.9 0 0 "" ""
| | |-ConstAttr 0x7fa3330fb630 </usr/include/math.h:618:14> Implicit
| | `-NoThrowAttr 0x7fa3330fb640 <col:14> Implicit
| |-FunctionDecl 0x7fa3330fb708 <line:619:1, /usr/include/AvailabilityInternal.h:21622:124> /usr/include/math.h:619:15 __tanpi 'double (double)' extern
| | |-ParmVarDecl 0x7fa3330fb668 <col:23> col:29 'double'
| | |-AvailabilityAttr 0x7fa333101800 </usr/include/AvailabilityInternal.h:21622:87, col:122> macos 10.9 0 0 "" ""
| | |-ConstAttr 0x7fa3331018a0 </usr/include/math.h:619:15> Implicit
| | `-NoThrowAttr 0x7fa3331018b0 <col:15> Implicit
| |-FunctionDecl 0x7fa333101a60 </usr/include/sys/cdefs.h:300:36, /usr/include/math.h:645:80> col:29 __sincospif 'void (float, float *, float *)' inline
| | |-ParmVarDecl 0x7fa3331018d8 <col:41, col:47> col:47 __x 'float'
| | |-ParmVarDecl 0x7fa333101950 <col:52, col:59> col:59 __sinp 'float *'
| | |-ParmVarDecl 0x7fa3331019c8 <col:67, col:74> col:74 __cosp 'float *'
| | `-AlwaysInlineAttr 0x7fa333101b10 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fa333101cf8 <line:300:36, /usr/include/math.h:646:82> col:29 __sincospi 'void (double, double *, double *)' inline
| | |-ParmVarDecl 0x7fa333101b70 <col:40, col:47> col:47 __x 'double'
| | |-ParmVarDecl 0x7fa333101be8 <col:52, col:60> col:60 __sinp 'double *'
| | |-ParmVarDecl 0x7fa333101c60 <col:68, col:76> col:76 __cosp 'double *'
| | `-AlwaysInlineAttr 0x7fa333101da8 </usr/include/sys/cdefs.h:313:68> always_inline
| |-CXXRecordDecl 0x7fa333101df0 </usr/include/math.h:653:1, col:51> col:8 struct __float2 definition
| | |-CXXRecordDecl 0x7fa333101f18 <col:1, col:8> col:8 implicit struct __float2
| | |-FieldDecl 0x7fa333101fc8 <col:19, col:25> col:25 referenced __sinval 'float'
| | |-FieldDecl 0x7fa333102028 <col:35, col:41> col:41 referenced __cosval 'float'
| | |-CXXDestructorDecl 0x7fa333109068 <col:8> col:8 implicit referenced ~__float2 'void (void) noexcept' inline default trivial
| | |-CXXConstructorDecl 0x7fa333109168 <col:8> col:8 implicit __float2 'void (void)' inline default trivial noexcept-unevaluated 0x7fa333109168
| | |-CXXConstructorDecl 0x7fa333109278 <col:8> col:8 implicit constexpr __float2 'void (const struct __float2 &)' inline default trivial noexcept-unevaluated 0x7fa333109278
| | | `-ParmVarDecl 0x7fa3331093a0 <col:8> col:8 'const struct __float2 &'
| | `-CXXConstructorDecl 0x7fa333109438 <col:8> col:8 implicit used constexpr __float2 'void (struct __float2 &&) noexcept' inline default trivial
| |   |-ParmVarDecl 0x7fa333109560 <col:8> col:8 used 'struct __float2 &&'
| |   |-CXXCtorInitializer Field 0x7fa333101fc8 '__sinval' 'float'
| |   | `-ImplicitCastExpr 0x7fa3331096b8 <col:8> 'float' <LValueToRValue>
| |   |   `-MemberExpr 0x7fa333109680 <col:8> 'float' xvalue .__sinval 0x7fa333101fc8
| |   |     `-CXXStaticCastExpr 0x7fa333109650 <col:8> 'struct __float2' xvalue static_cast<struct __float2 &&> <NoOp>
| |   |       `-DeclRefExpr 0x7fa333109618 <col:8> 'struct __float2' lvalue ParmVar 0x7fa333109560 '' 'struct __float2 &&'
| |   |-CXXCtorInitializer Field 0x7fa333102028 '__cosval' 'float'
| |   | `-ImplicitCastExpr 0x7fa333109798 <col:8> 'float' <LValueToRValue>
| |   |   `-MemberExpr 0x7fa333109760 <col:8> 'float' xvalue .__cosval 0x7fa333102028
| |   |     `-CXXStaticCastExpr 0x7fa333109730 <col:8> 'struct __float2' xvalue static_cast<struct __float2 &&> <NoOp>
| |   |       `-DeclRefExpr 0x7fa3331096f8 <col:8> 'struct __float2' lvalue ParmVar 0x7fa333109560 '' 'struct __float2 &&'
| |   `-CompoundStmt 0x7fa3331097e8 <col:8>
| |-CXXRecordDecl 0x7fa333102090 <line:654:1, col:54> col:8 struct __double2 definition
| | |-CXXRecordDecl 0x7fa3331021b8 <col:1, col:8> col:8 implicit struct __double2
| | |-FieldDecl 0x7fa333102268 <col:20, col:27> col:27 referenced __sinval 'double'
| | |-FieldDecl 0x7fa3331022c8 <col:37, col:44> col:44 referenced __cosval 'double'
| | |-CXXDestructorDecl 0x7fa3330a6088 <col:8> col:8 implicit referenced ~__double2 'void (void) noexcept' inline default trivial
| | |-CXXConstructorDecl 0x7fa3330a6188 <col:8> col:8 implicit __double2 'void (void)' inline default trivial noexcept-unevaluated 0x7fa3330a6188
| | |-CXXConstructorDecl 0x7fa3330a6298 <col:8> col:8 implicit constexpr __double2 'void (const struct __double2 &)' inline default trivial noexcept-unevaluated 0x7fa3330a6298
| | | `-ParmVarDecl 0x7fa3330a63c0 <col:8> col:8 'const struct __double2 &'
| | `-CXXConstructorDecl 0x7fa3330a6458 <col:8> col:8 implicit used constexpr __double2 'void (struct __double2 &&) noexcept' inline default trivial
| |   |-ParmVarDecl 0x7fa3330a6580 <col:8> col:8 used 'struct __double2 &&'
| |   |-CXXCtorInitializer Field 0x7fa333102268 '__sinval' 'double'
| |   | `-ImplicitCastExpr 0x7fa3330a66d8 <col:8> 'double' <LValueToRValue>
| |   |   `-MemberExpr 0x7fa3330a66a0 <col:8> 'double' xvalue .__sinval 0x7fa333102268
| |   |     `-CXXStaticCastExpr 0x7fa3330a6670 <col:8> 'struct __double2' xvalue static_cast<struct __double2 &&> <NoOp>
| |   |       `-DeclRefExpr 0x7fa3330a6638 <col:8> 'struct __double2' lvalue ParmVar 0x7fa3330a6580 '' 'struct __double2 &&'
| |   |-CXXCtorInitializer Field 0x7fa3331022c8 '__cosval' 'double'
| |   | `-ImplicitCastExpr 0x7fa3330a67b8 <col:8> 'double' <LValueToRValue>
| |   |   `-MemberExpr 0x7fa3330a6780 <col:8> 'double' xvalue .__cosval 0x7fa3331022c8
| |   |     `-CXXStaticCastExpr 0x7fa3330a6750 <col:8> 'struct __double2' xvalue static_cast<struct __double2 &&> <NoOp>
| |   |       `-DeclRefExpr 0x7fa3330a6718 <col:8> 'struct __double2' lvalue ParmVar 0x7fa3330a6580 '' 'struct __double2 &&'
| |   `-CompoundStmt 0x7fa3330a6808 <col:8>
| |-FunctionDecl 0x7fa333102490 <line:656:1, col:45> col:24 used __sincosf_stret 'struct __float2 (float)' extern
| | `-ParmVarDecl 0x7fa333102348 <col:40> col:45 'float'
| |-FunctionDecl 0x7fa333102690 <line:657:1, col:46> col:25 used __sincos_stret 'struct __double2 (double)' extern
| | `-ParmVarDecl 0x7fa333102548 <col:40> col:46 'double'
| |-FunctionDecl 0x7fa333108a00 <line:658:1, col:47> col:24 used __sincospif_stret 'struct __float2 (float)' extern
| | `-ParmVarDecl 0x7fa333102748 <col:42> col:47 'float'
| |-FunctionDecl 0x7fa333108b50 <line:659:1, col:48> col:25 used __sincospi_stret 'struct __double2 (double)' extern
| | `-ParmVarDecl 0x7fa333108ab8 <col:42> col:48 'double'
| |-FunctionDecl 0x7fa333108d90 prev 0x7fa3330fa800 </usr/include/sys/cdefs.h:300:36, /usr/include/math.h:664:1> line:661:29 __sincosf 'void (float, float *, float *)' inline
| | |-ParmVarDecl 0x7fa333108c08 <col:39, col:45> col:45 used __x 'float'
| | |-ParmVarDecl 0x7fa333108c80 <col:50, col:57> col:57 used __sinp 'float *'
| | |-ParmVarDecl 0x7fa333108cf8 <col:65, col:72> col:72 used __cosp 'float *'
| | |-CompoundStmt 0x7fa3330a5be0 <col:80, line:664:1>
| | | |-DeclStmt 0x7fa333109850 <line:662:5, col:57>
| | | | `-VarDecl 0x7fa333108ea8 <col:5, col:56> col:27 used __stret 'const struct __float2':'const struct __float2' cinit
| | | |   `-ExprWithCleanups 0x7fa333109838 <col:37, col:56> 'const struct __float2':'const struct __float2'
| | | |     `-CXXConstructExpr 0x7fa333109800 <col:37, col:56> 'const struct __float2':'const struct __float2' 'void (struct __float2 &&) noexcept' elidable
| | | |       `-MaterializeTemporaryExpr 0x7fa3331095c8 <col:37, col:56> 'struct __float2':'struct __float2' xvalue
| | | |         `-CallExpr 0x7fa333109020 <col:37, col:56> 'struct __float2':'struct __float2'
| | | |           |-ImplicitCastExpr 0x7fa333109008 <col:37> 'struct __float2 (*)(float)' <FunctionToPointerDecay>
| | | |           | `-DeclRefExpr 0x7fa333108f88 <col:37> 'struct __float2 (float)' lvalue Function 0x7fa333102490 '__sincosf_stret' 'struct __float2 (float)'
| | | |           `-ImplicitCastExpr 0x7fa333109050 <col:53> 'float' <LValueToRValue>
| | | |             `-DeclRefExpr 0x7fa333108f60 <col:53> 'float' lvalue ParmVar 0x7fa333108c08 '__x' 'float'
| | | |-BinaryOperator 0x7fa333109940 <line:663:5, col:23> 'float' lvalue '='
| | | | |-UnaryOperator 0x7fa3331098a8 <col:5, col:6> 'float' lvalue prefix '*'
| | | | | `-ImplicitCastExpr 0x7fa333109890 <col:6> 'float *' <LValueToRValue>
| | | | |   `-DeclRefExpr 0x7fa333109868 <col:6> 'float *' lvalue ParmVar 0x7fa333108c80 '__sinp' 'float *'
| | | | `-ImplicitCastExpr 0x7fa333109928 <col:15, col:23> 'float' <LValueToRValue>
| | | |   `-MemberExpr 0x7fa3331098f0 <col:15, col:23> 'const float' lvalue .__sinval 0x7fa333101fc8
| | | |     `-DeclRefExpr 0x7fa3331098c8 <col:15> 'const struct __float2':'const struct __float2' lvalue Var 0x7fa333108ea8 '__stret' 'const struct __float2':'const struct __float2'
| | | `-BinaryOperator 0x7fa3330a5bb8 <col:33, col:51> 'float' lvalue '='
| | |   |-UnaryOperator 0x7fa3330a5b20 <col:33, col:34> 'float' lvalue prefix '*'
| | |   | `-ImplicitCastExpr 0x7fa3330a5b08 <col:34> 'float *' <LValueToRValue>
| | |   |   `-DeclRefExpr 0x7fa3330a5ae0 <col:34> 'float *' lvalue ParmVar 0x7fa333108cf8 '__cosp' 'float *'
| | |   `-ImplicitCastExpr 0x7fa3330a5ba0 <col:43, col:51> 'float' <LValueToRValue>
| | |     `-MemberExpr 0x7fa3330a5b68 <col:43, col:51> 'const float' lvalue .__cosval 0x7fa333102028
| | |       `-DeclRefExpr 0x7fa3330a5b40 <col:43> 'const struct __float2':'const struct __float2' lvalue Var 0x7fa333108ea8 '__stret' 'const struct __float2':'const struct __float2'
| | `-AlwaysInlineAttr 0x7fa333108e40 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fa3330a5db0 prev 0x7fa3330faae0 <line:300:36, /usr/include/math.h:669:1> line:666:29 __sincos 'void (double, double *, double *)' inline
| | |-ParmVarDecl 0x7fa3330a5c28 <col:38, col:45> col:45 used __x 'double'
| | |-ParmVarDecl 0x7fa3330a5ca0 <col:50, col:58> col:58 used __sinp 'double *'
| | |-ParmVarDecl 0x7fa3330a5d18 <col:66, col:74> col:74 used __cosp 'double *'
| | |-CompoundStmt 0x7fa3330a6be0 <col:82, line:669:1>
| | | |-DeclStmt 0x7fa3330a6870 <line:667:5, col:57>
| | | | `-VarDecl 0x7fa3330a5ec8 <col:5, col:56> col:28 used __stret 'const struct __double2':'const struct __double2' cinit
| | | |   `-ExprWithCleanups 0x7fa3330a6858 <col:38, col:56> 'const struct __double2':'const struct __double2'
| | | |     `-CXXConstructExpr 0x7fa3330a6820 <col:38, col:56> 'const struct __double2':'const struct __double2' 'void (struct __double2 &&) noexcept' elidable
| | | |       `-MaterializeTemporaryExpr 0x7fa3330a65e8 <col:38, col:56> 'struct __double2':'struct __double2' xvalue
| | | |         `-CallExpr 0x7fa3330a6040 <col:38, col:56> 'struct __double2':'struct __double2'
| | | |           |-ImplicitCastExpr 0x7fa3330a6028 <col:38> 'struct __double2 (*)(double)' <FunctionToPointerDecay>
| | | |           | `-DeclRefExpr 0x7fa3330a5fa8 <col:38> 'struct __double2 (double)' lvalue Function 0x7fa333102690 '__sincos_stret' 'struct __double2 (double)'
| | | |           `-ImplicitCastExpr 0x7fa3330a6070 <col:53> 'double' <LValueToRValue>
| | | |             `-DeclRefExpr 0x7fa3330a5f80 <col:53> 'double' lvalue ParmVar 0x7fa3330a5c28 '__x' 'double'
| | | |-BinaryOperator 0x7fa3330a6960 <line:668:5, col:23> 'double' lvalue '='
| | | | |-UnaryOperator 0x7fa3330a68c8 <col:5, col:6> 'double' lvalue prefix '*'
| | | | | `-ImplicitCastExpr 0x7fa3330a68b0 <col:6> 'double *' <LValueToRValue>
| | | | |   `-DeclRefExpr 0x7fa3330a6888 <col:6> 'double *' lvalue ParmVar 0x7fa3330a5ca0 '__sinp' 'double *'
| | | | `-ImplicitCastExpr 0x7fa3330a6948 <col:15, col:23> 'double' <LValueToRValue>
| | | |   `-MemberExpr 0x7fa3330a6910 <col:15, col:23> 'const double' lvalue .__sinval 0x7fa333102268
| | | |     `-DeclRefExpr 0x7fa3330a68e8 <col:15> 'const struct __double2':'const struct __double2' lvalue Var 0x7fa3330a5ec8 '__stret' 'const struct __double2':'const struct __double2'
| | | `-BinaryOperator 0x7fa3330a6bb8 <col:33, col:51> 'double' lvalue '='
| | |   |-UnaryOperator 0x7fa3330a6b20 <col:33, col:34> 'double' lvalue prefix '*'
| | |   | `-ImplicitCastExpr 0x7fa3330a6b08 <col:34> 'double *' <LValueToRValue>
| | |   |   `-DeclRefExpr 0x7fa3330a6ae0 <col:34> 'double *' lvalue ParmVar 0x7fa3330a5d18 '__cosp' 'double *'
| | |   `-ImplicitCastExpr 0x7fa3330a6ba0 <col:43, col:51> 'double' <LValueToRValue>
| | |     `-MemberExpr 0x7fa3330a6b68 <col:43, col:51> 'const double' lvalue .__cosval 0x7fa3331022c8
| | |       `-DeclRefExpr 0x7fa3330a6b40 <col:43> 'const struct __double2':'const struct __double2' lvalue Var 0x7fa3330a5ec8 '__stret' 'const struct __double2':'const struct __double2'
| | `-AlwaysInlineAttr 0x7fa3330a5e60 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fa3330a6db0 prev 0x7fa333101a60 <line:300:36, /usr/include/math.h:674:1> line:671:29 __sincospif 'void (float, float *, float *)' inline
| | |-ParmVarDecl 0x7fa3330a6c28 <col:41, col:47> col:47 used __x 'float'
| | |-ParmVarDecl 0x7fa3330a6ca0 <col:52, col:59> col:59 used __sinp 'float *'
| | |-ParmVarDecl 0x7fa3330a6d18 <col:67, col:74> col:74 used __cosp 'float *'
| | |-CompoundStmt 0x7fa3330a7308 <col:82, line:674:1>
| | | |-DeclStmt 0x7fa3330a7098 <line:672:5, col:59>
| | | | `-VarDecl 0x7fa3330a6ec8 <col:5, col:58> col:27 used __stret 'const struct __float2':'const struct __float2' cinit
| | | |   `-ExprWithCleanups 0x7fa3330a7080 <col:37, col:58> 'const struct __float2':'const struct __float2'
| | | |     `-CXXConstructExpr 0x7fa3330a7048 <col:37, col:58> 'const struct __float2':'const struct __float2' 'void (struct __float2 &&) noexcept' elidable
| | | |       `-MaterializeTemporaryExpr 0x7fa3330a7030 <col:37, col:58> 'struct __float2':'struct __float2' xvalue
| | | |         `-CallExpr 0x7fa3330a6fe8 <col:37, col:58> 'struct __float2':'struct __float2'
| | | |           |-ImplicitCastExpr 0x7fa3330a6fd0 <col:37> 'struct __float2 (*)(float)' <FunctionToPointerDecay>
| | | |           | `-DeclRefExpr 0x7fa3330a6fa8 <col:37> 'struct __float2 (float)' lvalue Function 0x7fa333108a00 '__sincospif_stret' 'struct __float2 (float)'
| | | |           `-ImplicitCastExpr 0x7fa3330a7018 <col:55> 'float' <LValueToRValue>
| | | |             `-DeclRefExpr 0x7fa3330a6f80 <col:55> 'float' lvalue ParmVar 0x7fa3330a6c28 '__x' 'float'
| | | |-BinaryOperator 0x7fa3330a7188 <line:673:5, col:23> 'float' lvalue '='
| | | | |-UnaryOperator 0x7fa3330a70f0 <col:5, col:6> 'float' lvalue prefix '*'
| | | | | `-ImplicitCastExpr 0x7fa3330a70d8 <col:6> 'float *' <LValueToRValue>
| | | | |   `-DeclRefExpr 0x7fa3330a70b0 <col:6> 'float *' lvalue ParmVar 0x7fa3330a6ca0 '__sinp' 'float *'
| | | | `-ImplicitCastExpr 0x7fa3330a7170 <col:15, col:23> 'float' <LValueToRValue>
| | | |   `-MemberExpr 0x7fa3330a7138 <col:15, col:23> 'const float' lvalue .__sinval 0x7fa333101fc8
| | | |     `-DeclRefExpr 0x7fa3330a7110 <col:15> 'const struct __float2':'const struct __float2' lvalue Var 0x7fa3330a6ec8 '__stret' 'const struct __float2':'const struct __float2'
| | | `-BinaryOperator 0x7fa3330a72e0 <col:33, col:51> 'float' lvalue '='
| | |   |-UnaryOperator 0x7fa3330a7248 <col:33, col:34> 'float' lvalue prefix '*'
| | |   | `-ImplicitCastExpr 0x7fa3330a7230 <col:34> 'float *' <LValueToRValue>
| | |   |   `-DeclRefExpr 0x7fa3330a7208 <col:34> 'float *' lvalue ParmVar 0x7fa3330a6d18 '__cosp' 'float *'
| | |   `-ImplicitCastExpr 0x7fa3330a72c8 <col:43, col:51> 'float' <LValueToRValue>
| | |     `-MemberExpr 0x7fa3330a7290 <col:43, col:51> 'const float' lvalue .__cosval 0x7fa333102028
| | |       `-DeclRefExpr 0x7fa3330a7268 <col:43> 'const struct __float2':'const struct __float2' lvalue Var 0x7fa3330a6ec8 '__stret' 'const struct __float2':'const struct __float2'
| | `-AlwaysInlineAttr 0x7fa3330a6e60 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fa3330a74d8 prev 0x7fa333101cf8 <line:300:36, /usr/include/math.h:679:1> line:676:29 __sincospi 'void (double, double *, double *)' inline
| | |-ParmVarDecl 0x7fa3330a7350 <col:40, col:47> col:47 used __x 'double'
| | |-ParmVarDecl 0x7fa3330a73c8 <col:52, col:60> col:60 used __sinp 'double *'
| | |-ParmVarDecl 0x7fa3330a7440 <col:68, col:76> col:76 used __cosp 'double *'
| | |-CompoundStmt 0x7fa3330a7a40 <col:84, line:679:1>
| | | |-DeclStmt 0x7fa3330a77c0 <line:677:5, col:59>
| | | | `-VarDecl 0x7fa3330a75f0 <col:5, col:58> col:28 used __stret 'const struct __double2':'const struct __double2' cinit
| | | |   `-ExprWithCleanups 0x7fa3330a77a8 <col:38, col:58> 'const struct __double2':'const struct __double2'
| | | |     `-CXXConstructExpr 0x7fa3330a7770 <col:38, col:58> 'const struct __double2':'const struct __double2' 'void (struct __double2 &&) noexcept' elidable
| | | |       `-MaterializeTemporaryExpr 0x7fa3330a7758 <col:38, col:58> 'struct __double2':'struct __double2' xvalue
| | | |         `-CallExpr 0x7fa3330a7710 <col:38, col:58> 'struct __double2':'struct __double2'
| | | |           |-ImplicitCastExpr 0x7fa3330a76f8 <col:38> 'struct __double2 (*)(double)' <FunctionToPointerDecay>
| | | |           | `-DeclRefExpr 0x7fa3330a76d0 <col:38> 'struct __double2 (double)' lvalue Function 0x7fa333108b50 '__sincospi_stret' 'struct __double2 (double)'
| | | |           `-ImplicitCastExpr 0x7fa3330a7740 <col:55> 'double' <LValueToRValue>
| | | |             `-DeclRefExpr 0x7fa3330a76a8 <col:55> 'double' lvalue ParmVar 0x7fa3330a7350 '__x' 'double'
| | | |-BinaryOperator 0x7fa3330a78b0 <line:678:5, col:23> 'double' lvalue '='
| | | | |-UnaryOperator 0x7fa3330a7818 <col:5, col:6> 'double' lvalue prefix '*'
| | | | | `-ImplicitCastExpr 0x7fa3330a7800 <col:6> 'double *' <LValueToRValue>
| | | | |   `-DeclRefExpr 0x7fa3330a77d8 <col:6> 'double *' lvalue ParmVar 0x7fa3330a73c8 '__sinp' 'double *'
| | | | `-ImplicitCastExpr 0x7fa3330a7898 <col:15, col:23> 'double' <LValueToRValue>
| | | |   `-MemberExpr 0x7fa3330a7860 <col:15, col:23> 'const double' lvalue .__sinval 0x7fa333102268
| | | |     `-DeclRefExpr 0x7fa3330a7838 <col:15> 'const struct __double2':'const struct __double2' lvalue Var 0x7fa3330a75f0 '__stret' 'const struct __double2':'const struct __double2'
| | | `-BinaryOperator 0x7fa3330a7a18 <col:33, col:51> 'double' lvalue '='
| | |   |-UnaryOperator 0x7fa3330a7970 <col:33, col:34> 'double' lvalue prefix '*'
| | |   | `-ImplicitCastExpr 0x7fa3330a7958 <col:34> 'double *' <LValueToRValue>
| | |   |   `-DeclRefExpr 0x7fa3330a7930 <col:34> 'double *' lvalue ParmVar 0x7fa3330a7440 '__cosp' 'double *'
| | |   `-ImplicitCastExpr 0x7fa3330a7a00 <col:43, col:51> 'double' <LValueToRValue>
| | |     `-MemberExpr 0x7fa3330a79b8 <col:43, col:51> 'const double' lvalue .__cosval 0x7fa3331022c8
| | |       `-DeclRefExpr 0x7fa3330a7990 <col:43> 'const struct __double2':'const struct __double2' lvalue Var 0x7fa3330a75f0 '__stret' 'const struct __double2':'const struct __double2'
| | `-AlwaysInlineAttr 0x7fa3330a7588 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fa3330a7b28 </usr/include/math.h:687:1, /usr/include/AvailabilityInternal.h:20677:124> /usr/include/math.h:687:15 j0 'double (double)' extern
| | |-ParmVarDecl 0x7fa3330a7a88 <col:18> col:24 'double'
| | `-AvailabilityAttr 0x7fa3330a7bc8 </usr/include/AvailabilityInternal.h:20677:87, col:122> macos 10.0 0 0 "" ""
| |-FunctionDecl 0x7fa3330a7d20 </usr/include/math.h:688:1, /usr/include/AvailabilityInternal.h:20677:124> /usr/include/math.h:688:15 j1 'double (double)' extern
| | |-ParmVarDecl 0x7fa3330a7c80 <col:18> col:24 'double'
| | `-AvailabilityAttr 0x7fa3330a7dc0 </usr/include/AvailabilityInternal.h:20677:87, col:122> macos 10.0 0 0 "" ""
| |-FunctionDecl 0x7fa3330a7fd8 </usr/include/math.h:689:1, /usr/include/AvailabilityInternal.h:20677:124> /usr/include/math.h:689:15 jn 'double (int, double)' extern
| | |-ParmVarDecl 0x7fa3330a7e78 <col:18> col:21 'int'
| | |-ParmVarDecl 0x7fa3330a7ef0 <col:23> col:29 'double'
| | `-AvailabilityAttr 0x7fa3330a8080 </usr/include/AvailabilityInternal.h:20677:87, col:122> macos 10.0 0 0 "" ""
| |-FunctionDecl 0x7fa3330a81d8 </usr/include/math.h:690:1, /usr/include/AvailabilityInternal.h:20677:124> /usr/include/math.h:690:15 y0 'double (double)' extern
| | |-ParmVarDecl 0x7fa3330a8138 <col:18> col:24 'double'
| | `-AvailabilityAttr 0x7fa3330a8278 </usr/include/AvailabilityInternal.h:20677:87, col:122> macos 10.0 0 0 "" ""
| |-FunctionDecl 0x7fa3330a83d0 </usr/include/math.h:691:1, /usr/include/AvailabilityInternal.h:20677:124> /usr/include/math.h:691:15 y1 'double (double)' extern
| | |-ParmVarDecl 0x7fa3330a8330 <col:18> col:24 'double'
| | `-AvailabilityAttr 0x7fa3330a8470 </usr/include/AvailabilityInternal.h:20677:87, col:122> macos 10.0 0 0 "" ""
| |-FunctionDecl 0x7fa3330a8648 </usr/include/math.h:692:1, /usr/include/AvailabilityInternal.h:20677:124> /usr/include/math.h:692:15 yn 'double (int, double)' extern
| | |-ParmVarDecl 0x7fa3330a8528 <col:18> col:21 'int'
| | |-ParmVarDecl 0x7fa3330a85a0 <col:23> col:29 'double'
| | `-AvailabilityAttr 0x7fa3330a86f0 </usr/include/AvailabilityInternal.h:20677:87, col:122> macos 10.0 0 0 "" ""
| |-FunctionDecl 0x7fa3330a88b8 </usr/include/math.h:693:1, col:35> col:15 scalb 'double (double, double)' extern
| | |-ParmVarDecl 0x7fa3330a87a8 <col:21> col:27 'double'
| | `-ParmVarDecl 0x7fa3330a8820 <col:29> col:35 'double'
| |-VarDecl 0x7fa3330a8978 <line:694:1, col:12> col:12 signgam 'int' extern
| |-FunctionDecl 0x7fa33310baa0 <line:751:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:751:17 rinttol 'long (double)' extern
| | |-ParmVarDecl 0x7fa33310ba00 <col:25> col:31 'double'
| | `-AvailabilityAttr 0x7fa33310bb40 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
| |-FunctionDecl 0x7fa33310bc98 </usr/include/math.h:753:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:753:17 roundtol 'long (double)' extern
| | |-ParmVarDecl 0x7fa33310bbf8 <col:26> col:32 'double'
| | `-AvailabilityAttr 0x7fa33310bd38 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
| |-FunctionDecl 0x7fa33310bf10 </usr/include/math.h:755:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:755:15 drem 'double (double, double)' extern
| | |-ParmVarDecl 0x7fa33310bdf0 <col:20> col:26 'double'
| | |-ParmVarDecl 0x7fa33310be68 <col:28> col:34 'double'
| | `-AvailabilityAttr 0x7fa33310bfb8 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
| |-FunctionDecl 0x7fa33310c110 </usr/include/math.h:757:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:757:12 finite 'int (double)' extern
| | |-ParmVarDecl 0x7fa33310c070 <col:19> col:25 'double'
| | `-AvailabilityAttr 0x7fa33310c1b0 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
| |-FunctionDecl 0x7fa33310c308 </usr/include/math.h:759:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:759:15 gamma 'double (double)' extern
| | |-ParmVarDecl 0x7fa33310c268 <col:21> col:27 'double'
| | `-AvailabilityAttr 0x7fa33310c3a8 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
| `-FunctionDecl 0x7fa33310c500 </usr/include/math.h:761:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:761:15 significand 'double (double)' extern
|   |-ParmVarDecl 0x7fa33310c460 <col:27> col:33 'double'
|   `-AvailabilityAttr 0x7fa33310c5a0 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
|-LinkageSpecDecl 0x7fa3330d2598 </usr/include/math.h:205:26> col:26 implicit C
| `-FunctionDecl 0x7fa3330d25e8 <col:26> col:26 implicit used __builtin_fabsf 'float (float) noexcept' extern
|   |-ParmVarDecl 0x7fa3330d2680 <<invalid sloc>> <invalid sloc> 'float'
|   |-NoThrowAttr 0x7fa3330d26e8 <col:26> Implicit
|   `-ConstAttr 0x7fa3330d2730 <col:26> Implicit
|-LinkageSpecDecl 0x7fa3330d28b0 <col:50> col:50 implicit C
| `-FunctionDecl 0x7fa3330d2900 <col:50> col:50 implicit used __builtin_inff 'float (void) noexcept' extern
|   |-NoThrowAttr 0x7fa3330d2998 <col:50> Implicit
|   `-ConstAttr 0x7fa3330d29e0 <col:50> Implicit
|-LinkageSpecDecl 0x7fa3330d2e08 <line:208:26> col:26 implicit C
| `-FunctionDecl 0x7fa3330d2e58 <col:26> col:26 implicit used __builtin_fabs 'double (double) noexcept' extern
|   |-ParmVarDecl 0x7fa3330d2ef0 <<invalid sloc>> <invalid sloc> 'double'
|   |-NoThrowAttr 0x7fa3330d2f58 <col:26> Implicit
|   `-ConstAttr 0x7fa3330d2fa0 <col:26> Implicit
|-LinkageSpecDecl 0x7fa3330d3120 <col:49> col:49 implicit C
| `-FunctionDecl 0x7fa3330d3600 <col:49> col:49 implicit used __builtin_inf 'double (void) noexcept' extern
|   |-NoThrowAttr 0x7fa3330d3698 <col:49> Implicit
|   `-ConstAttr 0x7fa3330d36e0 <col:49> Implicit
|-LinkageSpecDecl 0x7fa3330d3b08 <line:211:26> col:26 implicit C
| `-FunctionDecl 0x7fa3330d3b58 <col:26> col:26 implicit used __builtin_fabsl 'long double (long double) noexcept' extern
|   |-ParmVarDecl 0x7fa3330d3bf0 <<invalid sloc>> <invalid sloc> 'long double'
|   |-NoThrowAttr 0x7fa3330d3c58 <col:26> Implicit
|   `-ConstAttr 0x7fa3330d3ca0 <col:26> Implicit
|-LinkageSpecDecl 0x7fa3330d3e20 <col:50> col:50 implicit C
| `-FunctionDecl 0x7fa3330d3e70 <col:50> col:50 implicit used __builtin_infl 'long double (void) noexcept' extern
|   |-NoThrowAttr 0x7fa3330d3f08 <col:50> Implicit
|   `-ConstAttr 0x7fa3330d3f50 <col:50> Implicit
|-LinkageSpecDecl 0x7fa33310c6e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:307:1, line:1485:1> line:307:8 C++
| |-TypedefDecl 0x7fa33310c750 </usr/local/Cellar/llvm/5.0.0/bin/../lib/clang/5.0.0/include/stddef.h:51:1, col:26> col:26 ptrdiff_t 'long'
| | `-BuiltinType 0x7fa3328327e0 'long'
| |-TypedefDecl 0x7fa33310c7c0 <line:62:1, col:23> col:23 referenced size_t 'unsigned long'
| | `-BuiltinType 0x7fa332832880 'unsigned long'
| |-TypedefDecl 0x7fa33310c830 </usr/local/Cellar/llvm/5.0.0/bin/../lib/clang/5.0.0/include/__stddef_max_align_t.h:32:1, col:21> col:21 max_align_t 'long double'
| | `-BuiltinType 0x7fa332832900 'long double'
| |-NamespaceDecl 0x7fa33310c888 prev 0x7fa33302ee58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__nullptr:55:1, line:58:1> line:55:11 std
| | |-original Namespace 0x7fa33302ee58 'std'
| | `-TypedefDecl 0x7fa33310c948 <line:57:5, col:31> col:31 referenced nullptr_t 'decltype(nullptr)':'nullptr_t'
| |   `-DecltypeType 0x7fa33310c910 'decltype(nullptr)' sugar
| |     |-CXXNullPtrLiteralExpr 0x7fa33310c8f0 <col:22> 'nullptr_t'
| |     `-BuiltinType 0x7fa332832c10 'nullptr_t'
| |-NamespaceDecl 0x7fa33310f600 prev 0x7fa33310c888 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:438:37, line:439:38> line:438:47 std
| | |-original Namespace 0x7fa33302ee58 'std'
| | `-NamespaceDecl 0x7fa33310f668 prev 0x7fa33302eec0 <col:52, line:439:36> <scratch space>:343:1 __1 inline
| |   |-original Namespace 0x7fa33302eec0 '__1'
| |   |-UsingDecl 0x7fa33310f6f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cstddef:49:1, col:9> col:9 ::ptrdiff_t
| |   |-UsingShadowDecl 0x7fa33310f740 <col:9> col:9 implicit Typedef 0x7fa33310c750 'ptrdiff_t'
| |   | `-<<<NULL>>>
| |   |-UsingDecl 0x7fa33310f790 <line:50:1, col:9> col:9 ::size_t
| |   |-UsingShadowDecl 0x7fa33310f7e0 <col:9> col:9 implicit Typedef 0x7fa33310c7c0 'size_t'
| |   | `-TypedefType 0x7fa333138280 'size_t' sugar
| |   |   |-Typedef 0x7fa33310c7c0 'size_t'
| |   |   `-BuiltinType 0x7fa332832880 'unsigned long'
| |   |-UsingDecl 0x7fa33310f830 <line:55:1, col:9> col:9 ::max_align_t
| |   `-UsingShadowDecl 0x7fa33310f880 <col:9> col:9 implicit Typedef 0x7fa33310c830 'max_align_t'
| |     `-<<<NULL>>>
| |-NamespaceDecl 0x7fa33310f8c8 prev 0x7fa33310f600 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:438:37, line:439:38> line:438:47 std
| | |-original Namespace 0x7fa33302ee58 'std'
| | `-NamespaceDecl 0x7fa33310f930 prev 0x7fa33310f668 <col:52, line:439:36> <scratch space>:344:1 __1 inline
| |   |-original Namespace 0x7fa33302eec0 '__1'
| |   |-ClassTemplateDecl 0x7fa33310fc40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:398:1, col:61> col:61 pair
| |   | |-TemplateTypeParmDecl 0x7fa33310f998 <col:11, col:17> col:17 class depth 0 index 0 _T1
| |   | |-TemplateTypeParmDecl 0x7fa33310fa38 <col:22, col:28> col:28 class depth 0 index 1 _T2
| |   | `-CXXRecordDecl 0x7fa33310fba8 <col:33, col:61> col:61 struct pair
| |   |   `-TypeVisibilityAttr 0x7fa33310fe78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |-ClassTemplateDecl 0x7fa333110008 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:399:1, col:49> col:49 reference_wrapper
| |   | |-TemplateTypeParmDecl 0x7fa33310fec0 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa33310ff70 <col:22, col:49> col:49 class reference_wrapper
| |   |   `-TypeVisibilityAttr 0x7fa333110218 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |-ClassTemplateDecl 0x7fa3331103a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:400:1, col:50> col:50 hash
| |   | |-TemplateTypeParmDecl 0x7fa333110260 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa333110310 <col:22, col:50> col:50 struct hash
| |   |   `-TypeVisibilityAttr 0x7fa3331105b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |-ClassTemplateDecl 0x7fa333111b18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:402:1, line:403:38> col:8 __void_t
| |   | |-TemplateTypeParmDecl 0x7fa333111a00 <line:402:11> col:11 class depth 0 index 0
| |   | `-CXXRecordDecl 0x7fa333111a80 <line:403:1, col:38> col:8 struct __void_t definition
| |   |   |-CXXRecordDecl 0x7fa333111d90 <col:1, col:8> col:8 implicit struct __void_t
| |   |   `-TypedefDecl 0x7fa333111e38 <col:19, col:32> col:32 type 'void'
| |   |     `-BuiltinType 0x7fa332832720 'void'
| |   |-ClassTemplateDecl 0x7fa333111fc8 <line:405:1, line:406:39> col:8 __identity
| |   | |-TemplateTypeParmDecl 0x7fa333111eb0 <line:405:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa333111f30 <line:406:1, col:39> col:8 struct __identity definition
| |   |   |-CXXRecordDecl 0x7fa333112240 <col:1, col:8> col:8 implicit struct __identity
| |   |   `-TypedefDecl 0x7fa3331122e8 <col:21, col:33> col:33 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7fa333111ef0 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fa333111eb0 '_Tp'
| |   |-ClassTemplateDecl 0x7fa333112518 <line:408:1, line:409:60> col:29 __dependent_type
| |   | |-TemplateTypeParmDecl 0x7fa333112360 <line:408:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fa3331123d8 <col:22> col:26 '_Bool' depth 0 index 1
| |   | `-CXXRecordDecl 0x7fa333112480 <line:409:1, col:60> col:29 struct __dependent_type definition
| |   |   |-public '_Tp'
| |   |   |-TypeVisibilityAttr 0x7fa3331127e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fa333112868 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:409:1, col:29> col:29 implicit struct __dependent_type
| |   |-ClassTemplateDecl 0x7fa333112b88 <line:411:1, line:412:63> col:33 conditional
| |   | |-NonTypeTemplateParmDecl 0x7fa333112930 <line:411:11, col:16> col:16 '_Bool' depth 0 index 0 _Bp
| |   | |-TemplateTypeParmDecl 0x7fa333112988 <col:21, col:27> col:27 referenced class depth 0 index 1 _If
| |   | |-TemplateTypeParmDecl 0x7fa333112a00 <col:32, col:38> col:38 class depth 0 index 2 _Then
| |   | `-CXXRecordDecl 0x7fa333112af0 <line:412:5, col:63> col:33 struct conditional definition
| |   |   |-TypeVisibilityAttr 0x7fa333112e90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fa333112ed8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:412:5, col:33> col:33 implicit struct conditional
| |   |   `-TypedefDecl 0x7fa333112f80 <col:46, col:58> col:58 type '_If'
| |   |     `-TemplateTypeParmType 0x7fa3331129d0 '_If' dependent depth 0 index 1
| |   |       `-TemplateTypeParm 0x7fa333112988 '_If'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa3331132f8 <line:413:1, line:414:84> col:33 struct conditional definition
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateTypeParmDecl 0x7fa333112ff8 <line:413:11, col:17> col:17 referenced class depth 0 index 0 _If
| |   | |-TemplateTypeParmDecl 0x7fa333113068 <col:22, col:28> col:28 referenced class depth 0 index 1 _Then
| |   | |-TypeVisibilityAttr 0x7fa333113490 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fa333113630 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:414:5, col:33> col:33 implicit struct conditional
| |   | `-TypedefDecl 0x7fa3331136d8 <col:65, col:79> col:79 type '_Then'
| |   |   `-TemplateTypeParmType 0x7fa3331130b0 '_Then' dependent depth 0 index 1
| |   |     `-TemplateTypeParm 0x7fa333113068 '_Then'
| |   |-TypeAliasTemplateDecl 0x7fa333114b30 <line:417:1, col:106> col:45 conditional_t
| |   | |-NonTypeTemplateParmDecl 0x7fa333113760 <col:11, col:16> col:16 referenced '_Bool' depth 0 index 0 _Bp
| |   | |-TemplateTypeParmDecl 0x7fa3331137b8 <col:21, col:27> col:27 referenced class depth 0 index 1 _If
| |   | |-TemplateTypeParmDecl 0x7fa333113828 <col:32, col:38> col:38 referenced class depth 0 index 2 _Then
| |   | `-TypeAliasDecl 0x7fa333114ad0 <col:45, col:106> col:51 conditional_t 'typename conditional<_Bp, _If, _Then>::type'
| |   |   `-DependentNameType 0x7fa333114a60 'typename conditional<_Bp, _If, _Then>::type' dependent
| |   |-ClassTemplateDecl 0x7fa333114d40 <line:420:1, col:74> col:56 __lazy_enable_if
| |   | |-NonTypeTemplateParmDecl 0x7fa333114b90 <col:11> col:15 '_Bool' depth 0 index 0
| |   | |-TemplateTypeParmDecl 0x7fa333114be8 <col:17, col:23> col:23 class depth 0 index 1 _Tp
| |   | `-CXXRecordDecl 0x7fa333114ca8 <col:28, col:74> col:56 struct __lazy_enable_if definition
| |   |   |-TypeVisibilityAttr 0x7fa333115000 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fa333115048 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:420:28, col:56> col:56 implicit struct __lazy_enable_if
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa333115310 <line:421:1, col:111> col:50 struct __lazy_enable_if definition
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fa333115100 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fa333115480 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fa3331155f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:421:22, col:50> col:50 implicit struct __lazy_enable_if
| |   | `-TypedefDecl 0x7fa333115770 <col:79, col:106> col:106 type 'typename _Tp::type'
| |   |   `-DependentNameType 0x7fa333115700 'typename _Tp::type' dependent
| |   |-ClassTemplateDecl 0x7fa3331159b0 <line:423:1, col:74> col:63 enable_if
| |   | |-NonTypeTemplateParmDecl 0x7fa3331157f8 <col:11> col:15 '_Bool' depth 0 index 0
| |   | |-TemplateTypeParmDecl 0x7fa333115860 <col:17, col:29> col:23 class depth 0 index 1 _Tp
| |   | | `-TemplateArgument type 'void'
| |   | |-CXXRecordDecl 0x7fa333115918 <col:35, col:74> col:63 struct enable_if definition
| |   | | |-TypeVisibilityAttr 0x7fa333115c70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | | `-CXXRecordDecl 0x7fa333115cb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:423:35, col:63> col:63 implicit struct enable_if
| |   | |-ClassTemplateSpecializationDecl 0x7fa333821480 <col:1, col:74> col:63 struct enable_if definition
| |   | | |-TemplateArgument integral 0
| |   | | |-TemplateArgument type 'double'
| |   | | `-CXXRecordDecl 0x7fa333821710 prev 0x7fa333821480 <col:35, col:63> col:63 implicit struct enable_if
| |   | |-ClassTemplateSpecializationDecl 0x7fa333902788 <col:1, col:74> col:63 struct enable_if definition
| |   | | |-TemplateArgument integral 0
| |   | | |-TemplateArgument type 'int'
| |   | | `-CXXRecordDecl 0x7fa333902a68 prev 0x7fa333902788 <col:35, col:63> col:63 implicit struct enable_if
| |   | |-ClassTemplateSpecializationDecl 0x7fa333904b38 <col:1, col:74> col:63 struct enable_if definition
| |   | | |-TemplateArgument integral 0
| |   | | |-TemplateArgument type 'long long'
| |   | | `-CXXRecordDecl 0x7fa333904dd0 prev 0x7fa333904b38 <col:35, col:63> col:63 implicit struct enable_if
| |   | `-ClassTemplateSpecializationDecl 0x7fa33390ade8 <col:1, col:74> col:63 struct enable_if definition
| |   |   |-TemplateArgument integral 0
| |   |   |-TemplateArgument type 'long'
| |   |   `-CXXRecordDecl 0x7fa33390b080 prev 0x7fa33390ade8 <col:35, col:63> col:63 implicit struct enable_if
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa333115f80 <line:424:1, col:89> col:50 struct enable_if definition
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fa333115d70 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fa3331160f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fa333116260 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:424:22, col:50> col:50 implicit struct enable_if
| |   | `-TypedefDecl 0x7fa333116308 <col:72, col:84> col:84 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fa333115db0 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fa333115d70 '_Tp'
| |   |-TypeAliasTemplateDecl 0x7fa3331166a0 <line:427:1, col:89> col:39 enable_if_t
| |   | |-NonTypeTemplateParmDecl 0x7fa333116390 <col:11, col:16> col:16 referenced '_Bool' depth 0 index 0 _Bp
| |   | |-TemplateTypeParmDecl 0x7fa3331163f8 <col:21, col:33> col:27 referenced class depth 0 index 1 _Tp
| |   | | `-TemplateArgument type 'void'
| |   | `-TypeAliasDecl 0x7fa333116640 <col:39, col:89> col:45 enable_if_t 'typename enable_if<_Bp, _Tp>::type'
| |   |   `-DependentNameType 0x7fa3331165d0 'typename enable_if<_Bp, _Tp>::type' dependent
| |   |-FunctionTemplateDecl 0x7fa333116ac8 <line:433:1, line:440:1> line:437:1 addressof
| |   | |-TemplateTypeParmDecl 0x7fa3331166f0 <line:433:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fa333116a30 <line:434:1, line:440:1> line:437:1 addressof '_Tp *(_Tp &) noexcept' inline
| |   |   |-ParmVarDecl 0x7fa3331168b8 <col:11, col:16> col:16 referenced __x '_Tp &'
| |   |   |-CompoundStmt 0x7fa333116e98 <line:438:1, line:440:1>
| |   |   | `-ReturnStmt 0x7fa333116e80 <line:439:5, col:35>
| |   |   |   `-CallExpr 0x7fa333116e50 <col:12, col:35> '<dependent type>'
| |   |   |     |-DeclRefExpr 0x7fa333116e00 <col:12> '<builtin fn type>' Function 0x7fa333116ca8 '__builtin_addressof' 'void *(void &) noexcept'
| |   |   |     `-DeclRefExpr 0x7fa333116e28 <col:32> '_Tp' lvalue ParmVar 0x7fa3331168b8 '__x' '_Tp &'
| |   |   |-AlwaysInlineAttr 0x7fa333116b20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   |-VisibilityAttr 0x7fa333116b68 <col:51, col:74> Hidden
| |   |   `-NoSanitizeAttr 0x7fa333116b78 <line:296:39, col:60> cfi
| |   |-FunctionTemplateDecl 0x7fa333117180 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:496:1, col:50> col:27 addressof
| |   | |-TemplateTypeParmDecl 0x7fa333116eb8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fa3331170e8 <col:22, col:50> col:27 addressof '_Tp *(const _Tp &&) noexcept' delete
| |   |   `-ParmVarDecl 0x7fa333116fa8 <col:37, col:46> col:48 'const _Tp &&'
| |   |-CXXRecordDecl 0x7fa3331171d8 <line:499:1, col:28> col:8 referenced struct __two definition
| |   | |-CXXRecordDecl 0x7fa3331172f8 <col:1, col:8> col:8 implicit struct __two
| |   | `-FieldDecl 0x7fa3331173d0 <col:15, col:26> col:20 __lx 'char [2]'
| |   |-ClassTemplateDecl 0x7fa3331175f8 <line:503:1, line:515:1> line:504:29 integral_constant
| |   | |-TemplateTypeParmDecl 0x7fa333117438 <line:503:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fa3331174b8 <col:22, col:26> col:26 referenced '_Tp' depth 0 index 1 __v
| |   | |-CXXRecordDecl 0x7fa333117560 <line:504:1, line:515:1> line:504:29 struct integral_constant definition
| |   | | |-TypeVisibilityAttr 0x7fa3331178c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | | |-CXXRecordDecl 0x7fa333117908 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:504:1, col:29> col:29 implicit referenced struct integral_constant
| |   | | |-VarDecl 0x7fa333118000 <line:506:5, col:53> col:45 referenced value 'const _Tp' static constexpr cinit
| |   | | | `-DeclRefExpr 0x7fa333118060 <col:53> '_Tp' NonTypeTemplateParm 0x7fa3331174b8 '__v' '_Tp'
| |   | | |-TypedefDecl 0x7fa333118098 <line:507:5, col:31> col:31 referenced value_type '_Tp'
| |   | | | `-TemplateTypeParmType 0x7fa333117480 '_Tp' dependent depth 0 index 0
| |   | | |   `-TemplateTypeParm 0x7fa333117438 '_Tp'
| |   | | |-TypedefDecl 0x7fa333118100 <line:508:5, col:31> col:31 type 'integral_constant<_Tp, __v>'
| |   | | | `-InjectedClassNameType 0x7fa333117830 'integral_constant<_Tp, __v>' dependent
| |   | | |   `-CXXRecord 0x7fa333117560 'integral_constant'
| |   | | |-CXXConversionDecl 0x7fa333118298 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:510:79> col:27 constexpr operator type-parameter-0-0 'std::__1::integral_constant::value_type (void) const noexcept'
| |   | | | |-CompoundStmt 0x7fa333118568 <col:65, col:79>
| |   | | | | `-ReturnStmt 0x7fa333118550 <col:66, col:73>
| |   | | | |   `-DeclRefExpr 0x7fa333118528 <col:73> 'const _Tp' lvalue Var 0x7fa333118000 'value' 'const _Tp'
| |   | | | |-AlwaysInlineAttr 0x7fa333118330 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | | `-VisibilityAttr 0x7fa333118378 <col:51, col:74> Hidden
| |   | | `-CXXMethodDecl 0x7fa3331183e8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:513:75> col:31 constexpr operator() 'std::__1::integral_constant::value_type (void) const noexcept'
| |   | |   |-CompoundStmt 0x7fa3331185c8 <col:61, col:75>
| |   | |   | `-ReturnStmt 0x7fa3331185b0 <col:62, col:69>
| |   | |   |   `-DeclRefExpr 0x7fa333118588 <col:69> 'const _Tp' lvalue Var 0x7fa333118000 'value' 'const _Tp'
| |   | |   |-AlwaysInlineAttr 0x7fa333118480 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | |   `-VisibilityAttr 0x7fa3331184c8 <col:51, col:74> Hidden
| |   | |-ClassTemplateSpecializationDecl 0x7fa333118aa8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:503:1, line:515:1> line:504:29 struct integral_constant definition
| |   | | |-TemplateArgument type '_Bool'
| |   | | |-TemplateArgument integral 1
| |   | | |-CXXRecordDecl 0x7fa33311b058 prev 0x7fa333118aa8 <col:1, col:29> col:29 implicit struct integral_constant
| |   | | |-VarDecl 0x7fa33311b100 <line:506:5, col:53> col:45 value 'const _Bool':'const _Bool' static constexpr cinit
| |   | | | `-SubstNonTypeTemplateParmExpr 0x7fa33311b188 <col:53> '_Bool'
| |   | | |   `-CXXBoolLiteralExpr 0x7fa33311b170 <col:53> '_Bool' true
| |   | | |-TypedefDecl 0x7fa33311b218 <line:507:5, col:31> col:31 value_type '_Bool':'_Bool'
| |   | | | `-SubstTemplateTypeParmType 0x7fa333118a70 '_Bool' sugar
| |   | | |   |-TemplateTypeParmType 0x7fa333117480 '_Tp' dependent depth 0 index 0
| |   | | |   | `-TemplateTypeParm 0x7fa333117438 '_Tp'
| |   | | |   `-BuiltinType 0x7fa332832740 '_Bool'
| |   | | |-TypedefDecl 0x7fa33311b280 <line:508:5, col:31> col:31 type 'struct std::__1::integral_constant<_Bool, true>'
| |   | | | `-RecordType 0x7fa333118bb0 'struct std::__1::integral_constant<_Bool, true>'
| |   | | |   `-ClassTemplateSpecialization 0x7fa333118aa8 'integral_constant'
| |   | | |-CXXConversionDecl 0x7fa33311b368 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:510:79> col:27 constexpr operator bool 'std::__1::integral_constant<_Bool, true>::value_type (void) const noexcept'
| |   | | | `-AlwaysInlineAttr 0x7fa33311b438 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-CXXMethodDecl 0x7fa33311b4b0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:513:75> col:31 constexpr operator() 'std::__1::integral_constant<_Bool, true>::value_type (void) const noexcept'
| |   | |   `-AlwaysInlineAttr 0x7fa33311b558 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | |-ClassTemplateSpecializationDecl 0x7fa333118d80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:503:1, line:515:1> line:504:29 struct integral_constant definition
| |   | | |-TemplateArgument type '_Bool'
| |   | | |-TemplateArgument integral 0
| |   | | |-CXXRecordDecl 0x7fa333119ea8 prev 0x7fa333118d80 <col:1, col:29> col:29 implicit struct integral_constant
| |   | | |-VarDecl 0x7fa333119f50 <line:506:5, col:53> col:45 referenced value 'const _Bool':'const _Bool' static constexpr cinit
| |   | | | `-SubstNonTypeTemplateParmExpr 0x7fa333119fd8 <col:53> '_Bool'
| |   | | |   `-CXXBoolLiteralExpr 0x7fa333119fc0 <col:53> '_Bool' false
| |   | | |-TypedefDecl 0x7fa33311a068 <line:507:5, col:31> col:31 value_type '_Bool':'_Bool'
| |   | | | `-SubstTemplateTypeParmType 0x7fa333118a70 '_Bool' sugar
| |   | | |   |-TemplateTypeParmType 0x7fa333117480 '_Tp' dependent depth 0 index 0
| |   | | |   | `-TemplateTypeParm 0x7fa333117438 '_Tp'
| |   | | |   `-BuiltinType 0x7fa332832740 '_Bool'
| |   | | |-TypedefDecl 0x7fa33311a0d0 <line:508:5, col:31> col:31 type 'struct std::__1::integral_constant<_Bool, false>'
| |   | | | `-RecordType 0x7fa333118e80 'struct std::__1::integral_constant<_Bool, false>'
| |   | | |   `-ClassTemplateSpecialization 0x7fa333118d80 'integral_constant'
| |   | | |-CXXConversionDecl 0x7fa33311a208 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:510:79> col:27 constexpr operator bool 'std::__1::integral_constant<_Bool, false>::value_type (void) const noexcept'
| |   | | | `-AlwaysInlineAttr 0x7fa33311a2d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-CXXMethodDecl 0x7fa33311a350 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:513:75> col:31 constexpr operator() 'std::__1::integral_constant<_Bool, false>::value_type (void) const noexcept'
| |   | |   `-AlwaysInlineAttr 0x7fa33311ac00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | `-ClassTemplateSpecializationDecl 0x7fa333165100 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:503:1, line:515:1> line:504:29 struct integral_constant definition
| |   |   |-TemplateArgument type 'unsigned long'
| |   |   |-TemplateArgument integral 0
| |   |   |-CXXRecordDecl 0x7fa333165330 prev 0x7fa333165100 <col:1, col:29> col:29 implicit struct integral_constant
| |   |   |-VarDecl 0x7fa333165400 <line:506:5, col:53> col:45 value 'const unsigned long':'const unsigned long' static constexpr cinit
| |   |   | `-SubstNonTypeTemplateParmExpr 0x7fa333165490 <col:53> 'unsigned long'
| |   |   |   `-IntegerLiteral 0x7fa333165470 <col:53> 'unsigned long' 0
| |   |   |-TypedefDecl 0x7fa333165520 <line:507:5, col:31> col:31 value_type 'unsigned long':'unsigned long'
| |   |   | `-SubstTemplateTypeParmType 0x7fa3331650b0 'unsigned long' sugar
| |   |   |   |-TemplateTypeParmType 0x7fa333117480 '_Tp' dependent depth 0 index 0
| |   |   |   | `-TemplateTypeParm 0x7fa333117438 '_Tp'
| |   |   |   `-BuiltinType 0x7fa332832880 'unsigned long'
| |   |   |-TypedefDecl 0x7fa333165588 <line:508:5, col:31> col:31 type 'struct std::__1::integral_constant<unsigned long, 0>'
| |   |   | `-RecordType 0x7fa333165200 'struct std::__1::integral_constant<unsigned long, 0>'
| |   |   |   `-ClassTemplateSpecialization 0x7fa333165100 'integral_constant'
| |   |   |-CXXConversionDecl 0x7fa3331656b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:510:79> col:27 constexpr operator unsigned long 'std::__1::integral_constant<unsigned long, 0>::value_type (void) const noexcept'
| |   |   | `-AlwaysInlineAttr 0x7fa333165788 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-CXXMethodDecl 0x7fa333165800 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:513:75> col:31 constexpr operator() 'std::__1::integral_constant<unsigned long, 0>::value_type (void) const noexcept'
| |   |     `-AlwaysInlineAttr 0x7fa3331658a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |-VarDecl 0x7fa333118970 parent 0x7fa333117560 prev 0x7fa333118000 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:517:1, line:518:58> col:58 value 'const _Tp' constexpr
| |   |-TypedefDecl 0x7fa333118cc0 <line:528:1, col:38> col:38 referenced true_type 'integral_constant<_Bool, (true)>':'struct std::__1::integral_constant<_Bool, true>'
| |   | `-TemplateSpecializationType 0x7fa333118bd0 'integral_constant<_Bool, (true)>' sugar integral_constant
| |   |   |-TemplateArgument type '_Bool'
| |   |   |-TemplateArgument expr
| |   |   | `-ParenExpr 0x7fa333118a38 <line:525:59, col:63> '_Bool'
| |   |   |   `-CXXBoolLiteralExpr 0x7fa333118a20 <line:528:31> '_Bool' true
| |   |   `-RecordType 0x7fa333118bb0 'struct std::__1::integral_constant<_Bool, true>'
| |   |     `-ClassTemplateSpecialization 0x7fa333118aa8 'integral_constant'
| |   |-TypedefDecl 0x7fa333118f90 <line:529:1, col:38> col:38 referenced false_type 'integral_constant<_Bool, (false)>':'struct std::__1::integral_constant<_Bool, false>'
| |   | `-TemplateSpecializationType 0x7fa333118ea0 'integral_constant<_Bool, (false)>' sugar integral_constant
| |   |   |-TemplateArgument type '_Bool'
| |   |   |-TemplateArgument expr
| |   |   | `-ParenExpr 0x7fa333118d40 <line:525:59, col:63> '_Bool'
| |   |   |   `-CXXBoolLiteralExpr 0x7fa333118d28 <line:529:31> '_Bool' false
| |   |   `-RecordType 0x7fa333118e80 'struct std::__1::integral_constant<_Bool, false>'
| |   |     `-ClassTemplateSpecialization 0x7fa333118d80 'integral_constant'
| |   |-ClassTemplateDecl 0x7fa3331195b0 <line:535:1, line:536:8> col:8 __lazy_and_impl
| |   | |-NonTypeTemplateParmDecl 0x7fa333119400 <line:535:11, col:16> col:16 '_Bool' depth 0 index 0 _Last
| |   | |-TemplateTypeParmDecl 0x7fa333119458 <col:23, col:32> col:32 class depth 0 index 1 ... _Preds
| |   | |-CXXRecordDecl 0x7fa333119518 <line:536:1, col:8> col:8 struct __lazy_and_impl
| |   | `-ClassTemplateSpecialization 0x7fa33311ad78 '__lazy_and_impl'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa333119b50 <line:538:1, line:539:56> col:8 struct __lazy_and_impl definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0...'
| |   | |-TemplateTypeParmDecl 0x7fa333119898 <line:538:11, col:20> col:20 referenced class depth 0 index 0 ... _Preds
| |   | `-CXXRecordDecl 0x7fa33311ac98 <line:539:1, col:8> col:8 implicit struct __lazy_and_impl
| |   |-ClassTemplateSpecializationDecl 0x7fa33311ad78 <line:541:1, line:542:43> col:8 struct __lazy_and_impl definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument pack
| |   | `-CXXRecordDecl 0x7fa33311b5f0 <col:1, col:8> col:8 implicit struct __lazy_and_impl
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa33311b8c0 <line:544:1, line:545:84> col:8 struct __lazy_and_impl definition
| |   | |-public 'integral_constant<_Bool, _Pred::type::value>'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fa33311b6a8 <line:544:11, col:17> col:17 referenced class depth 0 index 0 _Pred
| |   | `-CXXRecordDecl 0x7fa33311c1f8 <line:545:1, col:8> col:8 implicit struct __lazy_and_impl
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa33311c5e0 <line:547:1, line:548:88> col:8 struct __lazy_and_impl definition
| |   | |-public '__lazy_and_impl<_Hp::type::value, _Tp...>'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | `-TemplateArgument type 'type-parameter-0-1...'
| |   | |-TemplateTypeParmDecl 0x7fa33311c2b0 <line:547:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-TemplateTypeParmDecl 0x7fa33311c318 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Tp
| |   | `-CXXRecordDecl 0x7fa33311cb78 <line:548:1, col:8> col:8 implicit struct __lazy_and_impl
| |   |-ClassTemplateDecl 0x7fa33311cdc0 <line:550:1, line:551:64> col:8 __lazy_and
| |   | |-TemplateTypeParmDecl 0x7fa33311cc30 <line:550:11, col:17> col:17 class depth 0 index 0 _P1
| |   | |-TemplateTypeParmDecl 0x7fa33311cc98 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Pr
| |   | `-CXXRecordDecl 0x7fa33311cd28 <line:551:1, col:64> col:8 struct __lazy_and definition
| |   |   |-public '__lazy_and_impl<_P1::type::value, _Pr...>'
| |   |   `-CXXRecordDecl 0x7fa33311d2f8 <col:1, col:8> col:8 implicit struct __lazy_and
| |   |-ClassTemplateDecl 0x7fa33311d540 <line:555:1, line:556:8> col:8 __lazy_or_impl
| |   | |-NonTypeTemplateParmDecl 0x7fa33311d3c0 <line:555:11, col:16> col:16 '_Bool' depth 0 index 0 _List
| |   | |-TemplateTypeParmDecl 0x7fa33311d418 <col:23, col:32> col:32 class depth 0 index 1 ... _Preds
| |   | |-CXXRecordDecl 0x7fa33311d4a8 <line:556:1, col:8> col:8 struct __lazy_or_impl
| |   | `-ClassTemplateSpecialization 0x7fa33311de30 '__lazy_or_impl'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa33311da50 <line:558:1, line:559:53> col:8 struct __lazy_or_impl definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0...'
| |   | |-TemplateTypeParmDecl 0x7fa33311d7f8 <line:558:11, col:20> col:20 referenced class depth 0 index 0 ... _Preds
| |   | `-CXXRecordDecl 0x7fa33311dd50 <line:559:1, col:8> col:8 implicit struct __lazy_or_impl
| |   |-ClassTemplateSpecializationDecl 0x7fa33311de30 <line:561:1, line:562:44> col:8 struct __lazy_or_impl definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument pack
| |   | `-CXXRecordDecl 0x7fa33311e0b8 <col:1, col:8> col:8 implicit struct __lazy_or_impl
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa33311e4a0 <line:564:1, line:566:53> line:565:8 struct __lazy_or_impl definition
| |   | |-public '__lazy_or_impl<_Hp::type::value, _Tp...>'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | `-TemplateArgument type 'type-parameter-0-1...'
| |   | |-TemplateTypeParmDecl 0x7fa33311e170 <line:564:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-TemplateTypeParmDecl 0x7fa33311e1d8 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Tp
| |   | `-CXXRecordDecl 0x7fa33311ea38 <line:565:1, col:8> col:8 implicit struct __lazy_or_impl
| |   |-ClassTemplateDecl 0x7fa33311ec80 <line:568:1, line:569:62> col:8 __lazy_or
| |   | |-TemplateTypeParmDecl 0x7fa33311eaf0 <line:568:11, col:17> col:17 class depth 0 index 0 _P1
| |   | |-TemplateTypeParmDecl 0x7fa33311eb58 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Pr
| |   | `-CXXRecordDecl 0x7fa33311ebe8 <line:569:1, col:62> col:8 struct __lazy_or definition
| |   |   |-public '__lazy_or_impl<_P1::type::value, _Pr...>'
| |   |   `-CXXRecordDecl 0x7fa33311f188 <col:1, col:8> col:8 implicit struct __lazy_or
| |   |-ClassTemplateDecl 0x7fa33311f358 <line:573:1, line:574:67> col:8 __lazy_not
| |   | |-TemplateTypeParmDecl 0x7fa33311f240 <line:573:11, col:17> col:17 class depth 0 index 0 _Pred
| |   | `-CXXRecordDecl 0x7fa33311f2c0 <line:574:1, col:67> col:8 struct __lazy_not definition
| |   |   |-public 'integral_constant<_Bool, !_Pred::type::value>'
| |   |   `-CXXRecordDecl 0x7fa33311f818 <col:1, col:8> col:8 implicit struct __lazy_not
| |   |-ClassTemplateDecl 0x7fa33311f9e8 <line:577:1, col:27> col:27 __and_
| |   | |-TemplateTypeParmDecl 0x7fa33311f8d0 <col:10> col:10 class depth 0 index 0 ...
| |   | |-CXXRecordDecl 0x7fa33311f950 <col:20, col:27> col:27 struct __and_
| |   | `-ClassTemplateSpecialization 0x7fa33311fc68 '__and_'
| |   |-ClassTemplateSpecializationDecl 0x7fa33311fc68 <line:578:1, col:41> col:19 struct __and_ definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument pack
| |   | `-CXXRecordDecl 0x7fa33311fea0 <col:12, col:19> col:19 implicit struct __and_
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa333125908 <line:580:1, col:47> col:28 struct __and_ definition
| |   | |-public '_B0'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fa33311ff58 <col:10, col:16> col:16 referenced class depth 0 index 0 _B0
| |   | `-CXXRecordDecl 0x7fa333125bb0 <col:21, col:28> col:28 implicit struct __and_
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa333125ef8 <line:582:1, line:583:68> col:8 struct __and_ definition
| |   | |-public 'conditional<_B0::value, _B1, _B0>::type'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | `-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateTypeParmDecl 0x7fa333125c68 <line:582:10, col:16> col:16 referenced class depth 0 index 0 _B0
| |   | |-TemplateTypeParmDecl 0x7fa333125cd8 <col:21, col:27> col:27 referenced class depth 0 index 1 _B1
| |   | `-CXXRecordDecl 0x7fa333126500 <line:583:1, col:8> col:8 implicit struct __and_
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa333126ab8 <line:585:1, line:587:73> line:586:8 struct __and_ definition
| |   | |-public 'conditional<_B0::value, __and_<_B1, _B2, _Bn...>, _B0>::type'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | |-TemplateArgument type 'type-parameter-0-1'
| |   | | |-TemplateArgument type 'type-parameter-0-2'
| |   | | `-TemplateArgument type 'type-parameter-0-3...'
| |   | |-TemplateTypeParmDecl 0x7fa3331265b8 <line:585:10, col:16> col:16 referenced class depth 0 index 0 _B0
| |   | |-TemplateTypeParmDecl 0x7fa333126628 <col:21, col:27> col:27 referenced class depth 0 index 1 _B1
| |   | |-TemplateTypeParmDecl 0x7fa333126698 <col:32, col:38> col:38 referenced class depth 0 index 2 _B2
| |   | |-TemplateTypeParmDecl 0x7fa333126708 <col:43, col:52> col:52 referenced class depth 0 index 3 ... _Bn
| |   | `-CXXRecordDecl 0x7fa3331273f0 <line:586:1, col:8> col:8 implicit struct __and_
| |   |-ClassTemplateDecl 0x7fa3331275c8 <line:590:1, col:27> col:27 __or_
| |   | |-TemplateTypeParmDecl 0x7fa3331274a8 <col:10> col:10 class depth 0 index 0 ...
| |   | |-CXXRecordDecl 0x7fa333127530 <col:20, col:27> col:27 struct __or_
| |   | `-ClassTemplateSpecialization 0x7fa333127888 '__or_'
| |   |-ClassTemplateSpecializationDecl 0x7fa333127888 <line:591:1, col:41> col:19 struct __or_ definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument pack
| |   | `-CXXRecordDecl 0x7fa333127ac0 <col:12, col:19> col:19 implicit struct __or_
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa333127d18 <line:593:1, col:46> col:28 struct __or_ definition
| |   | |-public '_B0'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fa333127b78 <col:10, col:16> col:16 referenced class depth 0 index 0 _B0
| |   | `-CXXRecordDecl 0x7fa333127fc0 <col:21, col:28> col:28 implicit struct __or_
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa333128308 <line:595:1, line:596:67> col:8 struct __or_ definition
| |   | |-public 'conditional<_B0::value, _B0, _B1>::type'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | `-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateTypeParmDecl 0x7fa333128078 <line:595:10, col:16> col:16 referenced class depth 0 index 0 _B0
| |   | |-TemplateTypeParmDecl 0x7fa3331280e8 <col:21, col:27> col:27 referenced class depth 0 index 1 _B1
| |   | `-CXXRecordDecl 0x7fa333128910 <line:596:1, col:8> col:8 implicit struct __or_
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa333128e68 <line:598:1, line:600:73> line:599:8 struct __or_ definition
| |   | |-public 'conditional<_B0::value, _B0, __or_<_B1, _B2, _Bn...> >::type'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | |-TemplateArgument type 'type-parameter-0-1'
| |   | | |-TemplateArgument type 'type-parameter-0-2'
| |   | | `-TemplateArgument type 'type-parameter-0-3...'
| |   | |-TemplateTypeParmDecl 0x7fa3331289c8 <line:598:10, col:16> col:16 referenced class depth 0 index 0 _B0
| |   | |-TemplateTypeParmDecl 0x7fa333128a38 <col:21, col:27> col:27 referenced class depth 0 index 1 _B1
| |   | |-TemplateTypeParmDecl 0x7fa333128aa8 <col:32, col:38> col:38 referenced class depth 0 index 2 _B2
| |   | |-TemplateTypeParmDecl 0x7fa333128b18 <col:43, col:52> col:52 referenced class depth 0 index 3 ... _Bn
| |   | `-CXXRecordDecl 0x7fa33312a800 <line:599:1, col:8> col:8 implicit struct __or_
| |   |-ClassTemplateDecl 0x7fa33312a9d8 <line:603:1, line:604:71> col:8 __not_
| |   | |-TemplateTypeParmDecl 0x7fa33312a8b8 <line:603:10, col:16> col:16 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa33312a940 <line:604:1, col:71> col:8 struct __not_ definition
| |   |   |-public 'conditional<_Tp::value, false_type, true_type>::type'
| |   |   `-CXXRecordDecl 0x7fa33312af80 <col:1, col:8> col:8 implicit struct __not_
| |   |-ClassTemplateDecl 0x7fa33312b188 <line:610:1, col:91> col:50 is_const
| |   | |-TemplateTypeParmDecl 0x7fa33312b038 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa33312b0f0 <col:22, col:91> col:50 struct is_const definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TypeVisibilityAttr 0x7fa33312b400 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fa33312b488 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:610:22, col:50> col:50 implicit struct is_const
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa33312b6d8 <line:611:1, col:90> col:50 struct is_const definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'const type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fa33312b540 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fa33312b838 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fa33312b9b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:611:22, col:50> col:50 implicit struct is_const
| |   |-ClassTemplateDecl 0x7fa33312bbb8 <line:620:1, col:97> col:50 is_volatile
| |   | |-TemplateTypeParmDecl 0x7fa33312ba68 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa33312bb20 <col:22, col:97> col:50 struct is_volatile definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TypeVisibilityAttr 0x7fa33312be30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fa33312beb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:620:22, col:50> col:50 implicit struct is_volatile
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa33312c108 <line:621:1, col:96> col:50 struct is_volatile definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'volatile type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fa33312bf70 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fa33312c248 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fa33312c3c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:621:22, col:50> col:50 implicit struct is_volatile
| |   |-ClassTemplateDecl 0x7fa33312c5c8 <line:630:1, col:92> col:50 remove_const
| |   | |-TemplateTypeParmDecl 0x7fa33312c478 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fa33312c530 <col:22, col:92> col:50 struct remove_const definition
| |   | | |-TypeVisibilityAttr 0x7fa333113a68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | | |-CXXRecordDecl 0x7fa333113ab0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:630:22, col:50> col:50 implicit struct remove_const
| |   | | `-TypedefDecl 0x7fa333113b58 <col:75, col:87> col:87 type '_Tp'
| |   | |   `-TemplateTypeParmType 0x7fa33312c4c0 '_Tp' dependent depth 0 index 0
| |   | |     `-TemplateTypeParm 0x7fa33312c478 '_Tp'
| |   | `-ClassTemplateSpecializationDecl 0x7fa333820538 <col:1, col:92> col:50 struct remove_const definition
| |   |   |-TemplateArgument type 'double'
| |   |   |-CXXRecordDecl 0x7fa333820780 prev 0x7fa333820538 <col:22, col:50> col:50 implicit struct remove_const
| |   |   `-TypedefDecl 0x7fa333820858 <col:75, col:87> col:87 referenced type 'double':'double'
| |   |     `-SubstTemplateTypeParmType 0x7fa333820820 'double' sugar
| |   |       |-TemplateTypeParmType 0x7fa33312c4c0 '_Tp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fa33312c478 '_Tp'
| |   |       `-BuiltinType 0x7fa3328328e0 'double'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa333113d68 <line:631:1, col:92> col:50 struct remove_const definition
| |   | |-TemplateArgument type 'const type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fa333113bd0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fa333113ea8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fa333113fe0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:631:22, col:50> col:50 implicit struct remove_const
| |   | `-TypedefDecl 0x7fa333114088 <col:75, col:87> col:87 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fa333113c10 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fa333113bd0 '_Tp'
| |   |-TypeAliasTemplateDecl 0x7fa333114340 <line:633:1, col:73> col:22 remove_const_t
| |   | |-TemplateTypeParmDecl 0x7fa333114100 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fa3331142e0 <col:22, col:73> col:28 remove_const_t 'typename remove_const<_Tp>::type'
| |   |   `-DependentNameType 0x7fa333114270 'typename remove_const<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fa3331144d8 <line:638:1, col:98> col:50 remove_volatile
| |   | |-TemplateTypeParmDecl 0x7fa333114390 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fa333114440 <col:22, col:98> col:50 struct remove_volatile definition
| |   | | |-TypeVisibilityAttr 0x7fa333114750 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | | |-CXXRecordDecl 0x7fa333114798 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:638:22, col:50> col:50 implicit struct remove_volatile
| |   | | `-TypedefDecl 0x7fa333114840 <col:81, col:93> col:93 type '_Tp'
| |   | |   `-TemplateTypeParmType 0x7fa3331143d0 '_Tp' dependent depth 0 index 0
| |   | |     `-TemplateTypeParm 0x7fa333114390 '_Tp'
| |   | `-ClassTemplateSpecializationDecl 0x7fa333820940 <col:1, col:98> col:50 struct remove_volatile definition
| |   |   |-TemplateArgument type 'double'
| |   |   |-CXXRecordDecl 0x7fa333820b90 prev 0x7fa333820940 <col:22, col:50> col:50 implicit struct remove_volatile
| |   |   `-TypedefDecl 0x7fa333820c68 <col:81, col:93> col:93 referenced type 'double':'double'
| |   |     `-SubstTemplateTypeParmType 0x7fa333820c30 'double' sugar
| |   |       |-TemplateTypeParmType 0x7fa3331143d0 '_Tp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fa333114390 '_Tp'
| |   |       `-BuiltinType 0x7fa3328328e0 'double'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa33312e888 <line:639:1, col:98> col:50 struct remove_volatile definition
| |   | |-TemplateArgument type 'volatile type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fa3331148b8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fa33312e9c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fa33312eb00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:639:22, col:50> col:50 implicit struct remove_volatile
| |   | `-TypedefDecl 0x7fa33312eba8 <col:81, col:93> col:93 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fa333114900 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fa3331148b8 '_Tp'
| |   |-TypeAliasTemplateDecl 0x7fa33312ee60 <line:641:1, col:79> col:22 remove_volatile_t
| |   | |-TemplateTypeParmDecl 0x7fa33312ec20 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fa33312ee00 <col:22, col:79> col:28 remove_volatile_t 'typename remove_volatile<_Tp>::type'
| |   |   `-DependentNameType 0x7fa33312ed90 'typename remove_volatile<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fa33312eff8 <line:646:1, line:647:80> line:646:50 remove_cv
| |   | |-TemplateTypeParmDecl 0x7fa33312eeb0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fa33312ef60 <col:22, line:647:80> line:646:50 struct remove_cv definition
| |   | | |-TypeVisibilityAttr 0x7fa33312f270 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | | |-CXXRecordDecl 0x7fa33312f2b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:646:22, col:50> col:50 implicit struct remove_cv
| |   | | `-TypedefDecl 0x7fa33312f610 <line:647:2, col:75> col:75 type 'typename remove_volatile<typename remove_const<_Tp>::type>::type'
| |   | |   `-DependentNameType 0x7fa33312f5a0 'typename remove_volatile<typename remove_const<_Tp>::type>::type' dependent
| |   | `-ClassTemplateSpecializationDecl 0x7fa333820258 <line:646:1, line:647:80> line:646:50 struct remove_cv definition
| |   |   |-TemplateArgument type 'double'
| |   |   |-CXXRecordDecl 0x7fa333820468 prev 0x7fa333820258 <col:22, col:50> col:50 implicit struct remove_cv
| |   |   `-TypedefDecl 0x7fa333820d50 <line:647:2, col:75> col:75 referenced type 'typename remove_volatile<typename remove_const<double>::type>::type':'double'
| |   |     `-ElaboratedType 0x7fa333820d00 'typename remove_volatile<typename remove_const<double>::type>::type' sugar
| |   |       `-TypedefType 0x7fa333820ce0 'std::__1::remove_volatile<double>::type' sugar
| |   |         |-Typedef 0x7fa333820c68 'type'
| |   |         `-SubstTemplateTypeParmType 0x7fa333820c30 'double' sugar
| |   |           |-TemplateTypeParmType 0x7fa3331143d0 '_Tp' dependent depth 0 index 0
| |   |           | `-TemplateTypeParm 0x7fa333114390 '_Tp'
| |   |           `-BuiltinType 0x7fa3328328e0 'double'
| |   |-TypeAliasTemplateDecl 0x7fa33312f8d0 <line:649:1, col:67> col:22 remove_cv_t
| |   | |-TemplateTypeParmDecl 0x7fa33312f688 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fa33312f870 <col:22, col:67> col:28 remove_cv_t 'typename remove_cv<_Tp>::type'
| |   |   `-DependentNameType 0x7fa33312f800 'typename remove_cv<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fa33312fa38 <line:654:1, col:73> col:29 __libcpp_is_void
| |   | |-TemplateTypeParmDecl 0x7fa33312f920 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fa33312f9a0 <col:22, col:73> col:29 struct __libcpp_is_void definition
| |   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | | `-CXXRecordDecl 0x7fa33312fcf0 <col:22, col:29> col:29 implicit struct __libcpp_is_void
| |   | `-ClassTemplateSpecialization 0x7fa33312fdc8 '__libcpp_is_void'
| |   |-ClassTemplateSpecializationDecl 0x7fa33312fdc8 <line:655:1, col:72> col:29 struct __libcpp_is_void definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'void'
| |   | `-CXXRecordDecl 0x7fa333130030 <col:22, col:29> col:29 implicit struct __libcpp_is_void
| |   |-ClassTemplateDecl 0x7fa333130238 <line:657:1, line:658:63> line:657:50 is_void
| |   | |-TemplateTypeParmDecl 0x7fa3331300e8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa3331301a0 <col:22, line:658:63> line:657:50 struct is_void definition
| |   |   |-public '__libcpp_is_void<typename remove_cv<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fa3331304b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fa333130718 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:657:22, col:50> col:50 implicit struct is_void
| |   |-ClassTemplateDecl 0x7fa333130918 <line:667:1, col:76> col:29 __is_nullptr_t_impl
| |   | |-TemplateTypeParmDecl 0x7fa333130800 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fa333130880 <col:22, col:76> col:29 struct __is_nullptr_t_impl definition
| |   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | | `-CXXRecordDecl 0x7fa333130bd0 <col:22, col:29> col:29 implicit struct __is_nullptr_t_impl
| |   | `-ClassTemplateSpecialization 0x7fa333130cd0 '__is_nullptr_t_impl'
| |   |-ClassTemplateSpecializationDecl 0x7fa333130cd0 <line:668:1, col:80> col:29 struct __is_nullptr_t_impl definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'nullptr_t'
| |   | `-CXXRecordDecl 0x7fa333130f40 <col:22, col:29> col:29 implicit struct __is_nullptr_t_impl
| |   |-ClassTemplateDecl 0x7fa333131148 <line:670:1, line:671:66> line:670:50 __is_nullptr_t
| |   | |-TemplateTypeParmDecl 0x7fa333130ff8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa3331310b0 <col:22, line:671:66> line:670:50 struct __is_nullptr_t definition
| |   |   |-public '__is_nullptr_t_impl<typename remove_cv<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fa3331313c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fa333131628 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:670:22, col:50> col:50 implicit struct __is_nullptr_t
| |   |-ClassTemplateDecl 0x7fa333131898 <line:674:1, line:675:66> line:674:50 is_null_pointer
| |   | |-TemplateTypeParmDecl 0x7fa3331316e0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa333131800 <col:22, line:675:66> line:674:50 struct is_null_pointer definition
| |   |   |-public '__is_nullptr_t_impl<typename remove_cv<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fa333131b10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fa333131d28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:674:22, col:50> col:50 implicit struct is_null_pointer
| |   |-ClassTemplateDecl 0x7fa333131ef8 <line:685:1, col:91> col:29 __libcpp_is_integral
| |   | |-TemplateTypeParmDecl 0x7fa333131de0 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fa333131e60 <col:22, col:91> col:29 struct __libcpp_is_integral definition
| |   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | | `-CXXRecordDecl 0x7fa3331321b0 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   | |-ClassTemplateSpecialization 0x7fa333132288 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fa3331325c8 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fa333132910 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fa333132c60 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fa333132fa8 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fa3331332e8 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fa333133628 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fa333133988 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fa333133cd0 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fa333134020 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fa333134370 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fa3331346c0 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fa333134a10 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fa333134d60 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fa3331350b0 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fa333135420 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fa333135800 '__libcpp_is_integral'
| |   | `-ClassTemplateSpecializationDecl 0x7fa333820e40 <col:1, col:91> col:29 struct __libcpp_is_integral definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TemplateArgument type 'double'
| |   |   `-CXXRecordDecl 0x7fa333821060 prev 0x7fa333820e40 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fa333132288 <line:686:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type '_Bool'
| |   | `-CXXRecordDecl 0x7fa3331324f0 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fa3331325c8 <line:687:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'char'
| |   | `-CXXRecordDecl 0x7fa333132830 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fa333132910 <line:688:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'signed char'
| |   | `-CXXRecordDecl 0x7fa333132b80 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fa333132c60 <line:689:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'unsigned char'
| |   | `-CXXRecordDecl 0x7fa333132ed0 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fa333132fa8 <line:690:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'wchar_t'
| |   | `-CXXRecordDecl 0x7fa333133210 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fa3331332e8 <line:692:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'char16_t'
| |   | `-CXXRecordDecl 0x7fa333133550 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fa333133628 <line:693:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'char32_t'
| |   | `-CXXRecordDecl 0x7fa3331338a8 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fa333133988 <line:695:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'short'
| |   | `-CXXRecordDecl 0x7fa333133bf0 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fa333133cd0 <line:696:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'unsigned short'
| |   | `-CXXRecordDecl 0x7fa333133f40 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fa333134020 <line:697:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'int'
| |   | `-CXXRecordDecl 0x7fa333134290 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fa333134370 <line:698:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'unsigned int'
| |   | `-CXXRecordDecl 0x7fa3331345e0 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fa3331346c0 <line:699:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'long'
| |   | `-CXXRecordDecl 0x7fa333134930 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fa333134a10 <line:700:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'unsigned long'
| |   | `-CXXRecordDecl 0x7fa333134c80 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fa333134d60 <line:701:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'long long'
| |   | `-CXXRecordDecl 0x7fa333134fd0 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fa3331350b0 <line:702:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'unsigned long long'
| |   | `-CXXRecordDecl 0x7fa333135320 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fa333135420 <line:704:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type '__int128'
| |   | `-CXXRecordDecl 0x7fa333135690 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fa333135800 <line:705:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'unsigned __int128'
| |   | `-CXXRecordDecl 0x7fa333135a70 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateDecl 0x7fa333135c78 <line:708:1, line:709:67> line:708:50 is_integral
| |   | |-TemplateTypeParmDecl 0x7fa333135b28 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fa333135be0 <col:22, line:709:67> line:708:50 struct is_integral definition
| |   | | |-public '__libcpp_is_integral<typename remove_cv<_Tp>::type>'
| |   | | |-TypeVisibilityAttr 0x7fa333135ef0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | | `-CXXRecordDecl 0x7fa333136158 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:708:22, col:50> col:50 implicit struct is_integral
| |   | `-ClassTemplateSpecializationDecl 0x7fa333820008 <col:1, line:709:67> line:708:50 struct is_integral definition
| |   |   |-public '__libcpp_is_integral<typename remove_cv<double>::type>':'struct std::__1::__libcpp_is_integral<double>'
| |   |   |-TemplateArgument type 'double'
| |   |   `-CXXRecordDecl 0x7fa333821148 prev 0x7fa333820008 <col:22, col:50> col:50 implicit struct is_integral
| |   |-ClassTemplateDecl 0x7fa333136328 <line:718:1, col:90> col:29 __libcpp_is_floating_point
| |   | |-TemplateTypeParmDecl 0x7fa333136210 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fa333136290 <col:22, col:90> col:29 struct __libcpp_is_floating_point definition
| |   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | | `-CXXRecordDecl 0x7fa3331365e0 <col:22, col:29> col:29 implicit struct __libcpp_is_floating_point
| |   | |-ClassTemplateSpecialization 0x7fa3331366c0 '__libcpp_is_floating_point'
| |   | |-ClassTemplateSpecialization 0x7fa333136a10 '__libcpp_is_floating_point'
| |   | `-ClassTemplateSpecialization 0x7fa333136d60 '__libcpp_is_floating_point'
| |   |-ClassTemplateSpecializationDecl 0x7fa3331366c0 <line:719:1, col:89> col:29 struct __libcpp_is_floating_point definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'float'
| |   | `-CXXRecordDecl 0x7fa333136930 <col:22, col:29> col:29 implicit struct __libcpp_is_floating_point
| |   |-ClassTemplateSpecializationDecl 0x7fa333136a10 <line:720:1, col:89> col:29 struct __libcpp_is_floating_point definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'double'
| |   | `-CXXRecordDecl 0x7fa333136c80 <col:22, col:29> col:29 implicit struct __libcpp_is_floating_point
| |   |-ClassTemplateSpecializationDecl 0x7fa333136d60 <line:721:1, col:89> col:29 struct __libcpp_is_floating_point definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'long double'
| |   | `-CXXRecordDecl 0x7fa333136fd0 <col:22, col:29> col:29 implicit struct __libcpp_is_floating_point
| |   |-ClassTemplateDecl 0x7fa3331371d8 <line:723:1, line:724:73> line:723:50 is_floating_point
| |   | |-TemplateTypeParmDecl 0x7fa333137088 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa333137140 <col:22, line:724:73> line:723:50 struct is_floating_point definition
| |   |   |-public '__libcpp_is_floating_point<typename remove_cv<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fa333137450 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fa3331376b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:723:22, col:50> col:50 implicit struct is_floating_point
| |   |-ClassTemplateDecl 0x7fa3331378c8 <line:733:1, line:734:26> line:733:50 is_array
| |   | |-TemplateTypeParmDecl 0x7fa333137770 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa333137830 <col:22, line:734:26> line:733:50 struct is_array definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TypeVisibilityAttr 0x7fa333137b40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fa333137bc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:733:22, col:50> col:50 implicit struct is_array
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa333137e88 <line:735:1, line:736:25> line:735:50 struct is_array definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 []'
| |   | |-TemplateTypeParmDecl 0x7fa333137c80 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fa333137fd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fa333138150 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:735:22, col:50> col:50 implicit struct is_array
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa3331384f8 <line:737:1, line:738:25> line:737:62 struct is_array definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
| |   | |-TemplateTypeParmDecl 0x7fa333138208 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fa3331382b0 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Np
| |   | |-TypeVisibilityAttr 0x7fa333138648 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fa333138800 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:737:34, col:62> col:62 implicit struct is_array
| |   |-ClassTemplateDecl 0x7fa3331389d8 <line:747:1, col:76> col:29 __libcpp_is_pointer
| |   | |-TemplateTypeParmDecl 0x7fa3331388b8 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa333138940 <col:22, col:76> col:29 struct __libcpp_is_pointer definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   `-CXXRecordDecl 0x7fa333138c90 <col:22, col:29> col:29 implicit struct __libcpp_is_pointer
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa333138ee8 <line:748:1, col:75> col:29 struct __libcpp_is_pointer definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 *'
| |   | |-TemplateTypeParmDecl 0x7fa333138d48 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa333139160 <col:22, col:29> col:29 implicit struct __libcpp_is_pointer
| |   |-ClassTemplateDecl 0x7fa333139368 <line:750:1, line:751:66> line:750:50 is_pointer
| |   | |-TemplateTypeParmDecl 0x7fa333139218 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa3331392d0 <col:22, line:751:66> line:750:50 struct is_pointer definition
| |   |   |-public '__libcpp_is_pointer<typename remove_cv<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fa3331395e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fa33313a060 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:750:22, col:50> col:50 implicit struct is_pointer
| |   |-ClassTemplateDecl 0x7fa33313a268 <line:760:1, col:97> col:50 is_lvalue_reference
| |   | |-TemplateTypeParmDecl 0x7fa33313a118 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa33313a1d0 <col:22, col:97> col:50 struct is_lvalue_reference definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TypeVisibilityAttr 0x7fa33313a4e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fa33313a568 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:760:22, col:50> col:50 implicit struct is_lvalue_reference
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa33313a7e8 <line:761:1, col:96> col:50 struct is_lvalue_reference definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateTypeParmDecl 0x7fa33313a620 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fa33313a928 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fa33313aaa0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:761:22, col:50> col:50 implicit struct is_lvalue_reference
| |   |-ClassTemplateDecl 0x7fa33313aca8 <line:763:1, col:98> col:50 is_rvalue_reference
| |   | |-TemplateTypeParmDecl 0x7fa33313ab58 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa33313ac10 <col:22, col:98> col:50 struct is_rvalue_reference definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TypeVisibilityAttr 0x7fa33313af20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fa33313b800 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:763:22, col:50> col:50 implicit struct is_rvalue_reference
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa33313bab8 <line:765:1, col:97> col:50 struct is_rvalue_reference definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 &&'
| |   | |-TemplateTypeParmDecl 0x7fa33313b8b8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fa33313bbf8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fa33313bd70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:765:22, col:50> col:50 implicit struct is_rvalue_reference
| |   |-ClassTemplateDecl 0x7fa33313bf78 <line:768:1, col:91> col:50 is_reference
| |   | |-TemplateTypeParmDecl 0x7fa33313be28 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa33313bee0 <col:22, col:91> col:50 struct is_reference definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TypeVisibilityAttr 0x7fa33313c1f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fa33313c278 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:768:22, col:50> col:50 implicit struct is_reference
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa33313c4f8 <line:769:1, col:90> col:50 struct is_reference definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateTypeParmDecl 0x7fa33313c330 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fa33313c638 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fa33313d800 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:769:22, col:50> col:50 implicit struct is_reference
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa33313da88 <line:771:1, col:90> col:50 struct is_reference definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 &&'
| |   | |-TemplateTypeParmDecl 0x7fa33313d8b8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fa33313dbc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fa33313dd40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:771:22, col:50> col:50 implicit struct is_reference
| |   |-ClassTemplateDecl 0x7fa33313df48 <line:788:1, line:789:56> line:788:50 is_union
| |   | |-TemplateTypeParmDecl 0x7fa33313ddf8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa33313deb0 <col:22, line:789:56> line:788:50 struct is_union definition
| |   |   |-public 'integral_constant<_Bool, __is_union(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fa33313e1c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fa33313e3a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:788:22, col:50> col:50 implicit struct is_union
| |   |-ClassTemplateDecl 0x7fa33313e5a8 <line:808:1, line:809:56> line:808:50 is_class
| |   | |-TemplateTypeParmDecl 0x7fa33313e460 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa33313e510 <col:22, line:809:56> line:808:50 struct is_class definition
| |   |   |-public 'integral_constant<_Bool, __is_class(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fa33313e868 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fa33313ea48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:808:22, col:50> col:50 implicit struct is_class
| |   |-ClassTemplateDecl 0x7fa33313ecc0 <line:831:1, col:100> col:61 is_same
| |   | |-TemplateTypeParmDecl 0x7fa33313eb00 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fa33313eb68 <col:22, col:28> col:28 class depth 0 index 1 _Up
| |   | `-CXXRecordDecl 0x7fa33313ec28 <col:33, col:100> col:61 struct is_same definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TypeVisibilityAttr 0x7fa33313ef60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fa33313efe8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:831:33, col:61> col:61 implicit struct is_same
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa33313f2a0 <line:832:1, col:99> col:61 struct is_same definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fa33313f0a0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fa33313f408 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fa33313f5b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:832:33, col:61> col:61 implicit struct is_same
| |   |-NamespaceDecl 0x7fa33313f668 <line:841:1, line:849:1> line:841:11 __libcpp_is_function_imp
| |   | |-CXXRecordDecl 0x7fa33313f6d0 <line:843:1, col:22> col:8 referenced struct __dummy_type definition
| |   | | `-CXXRecordDecl 0x7fa333140800 <col:1, col:8> col:8 implicit struct __dummy_type
| |   | |-FunctionTemplateDecl 0x7fa333140b18 <line:844:1, col:39> col:28 __test
| |   | | |-TemplateTypeParmDecl 0x7fa3331408b8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | | `-FunctionDecl 0x7fa333140a80 <col:22, col:39> col:28 __test 'char (_Tp *)'
| |   | |   `-ParmVarDecl 0x7fa333140978 <col:35, col:38> col:39 '_Tp *'
| |   | |-FunctionTemplateDecl 0x7fa333140d58 <line:845:1, col:46> col:27 __test
| |   | | |-TemplateTypeParmDecl 0x7fa333140b70 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | | `-FunctionDecl 0x7fa333140cc0 <col:22, col:46> col:27 __test 'char (struct std::__1::__libcpp_is_function_imp::__dummy_type)'
| |   | |   `-ParmVarDecl 0x7fa333140c00 <col:34> col:46 'struct std::__1::__libcpp_is_function_imp::__dummy_type'
| |   | |-FunctionTemplateDecl 0x7fa333140f18 <line:846:1, col:38> col:28 __test
| |   | | |-TemplateTypeParmDecl 0x7fa333140db0 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | | `-FunctionDecl 0x7fa333140e80 <col:22, col:38> col:28 __test 'struct std::__1::__two (...)'
| |   | |-FunctionTemplateDecl 0x7fa3331411d8 <line:847:1, col:40> col:28 __source
| |   | | |-TemplateTypeParmDecl 0x7fa333140f68 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | | `-FunctionDecl 0x7fa333141140 <col:22, col:40> col:28 __source '_Tp &(int)'
| |   | |   `-ParmVarDecl 0x7fa333141008 <col:37> col:40 'int'
| |   | `-FunctionTemplateDecl 0x7fa333141398 <line:848:1, col:47> col:35 __source
| |   |   |-TemplateTypeParmDecl 0x7fa333141230 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   |   `-FunctionDecl 0x7fa333141300 <col:22, col:47> col:35 __source 'struct std::__1::__libcpp_is_function_imp::__dummy_type (...)'
| |   |-ClassTemplateDecl 0x7fa333141b70 <line:851:1, line:858:6> line:856:8 __libcpp_is_function
| |   | |-TemplateTypeParmDecl 0x7fa3331413e8 <line:851:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fa333141a60 <col:22, line:855:50> line:851:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7fa333141a28 <col:29, line:855:50> '<dependent type>' '||'
| |   | |     |-BinaryOperator 0x7fa3331418f8 <line:851:29, line:854:48> '<dependent type>' '||'
| |   | |     | |-BinaryOperator 0x7fa3331417a8 <line:851:29, line:853:43> '<dependent type>' '||'
| |   | |     | | |-BinaryOperator 0x7fa333141678 <line:851:29, line:852:44> '<dependent type>' '||'
| |   | |     | | | |-DependentScopeDeclRefExpr 0x7fa333141528 <line:851:29, col:44> '<dependent type>' lvalue
| |   | |     | | | `-DependentScopeDeclRefExpr 0x7fa333141638 <line:852:29, col:44> '<dependent type>' lvalue
| |   | |     | | `-DependentScopeDeclRefExpr 0x7fa333141768 <line:853:29, col:43> '<dependent type>' lvalue
| |   | |     | `-DependentScopeDeclRefExpr 0x7fa3331418b8 <line:854:29, col:48> '<dependent type>' lvalue
| |   | |     `-DependentScopeDeclRefExpr 0x7fa3331419e8 <line:855:29, col:50> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fa333141ad8 <line:856:1, line:858:6> line:856:8 struct __libcpp_is_function definition
| |   |   |-public 'integral_constant<_Bool, sizeof (__libcpp_is_function_imp::__test<_Tp>(__libcpp_is_function_imp::__source<_Tp>(0))) == 1>'
| |   |   `-CXXRecordDecl 0x7fa3331422c8 <col:1, col:8> col:8 implicit struct __libcpp_is_function
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa333142560 <line:859:1, col:82> col:29 struct __libcpp_is_function definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fa333142380 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa333142830 <col:22, col:29> col:29 implicit struct __libcpp_is_function
| |   |-ClassTemplateDecl 0x7fa333142a38 <line:861:1, line:862:41> line:861:50 is_function
| |   | |-TemplateTypeParmDecl 0x7fa3331428e8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa3331429a0 <col:22, line:862:41> line:861:50 struct is_function definition
| |   |   |-public '__libcpp_is_function<_Tp>'
| |   |   |-TypeVisibilityAttr 0x7fa333142cb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fa333143428 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:861:22, col:50> col:50 implicit struct is_function
| |   |-ClassTemplateDecl 0x7fa3331436d8 <line:875:1, line:878:1> line:876:8 __member_pointer_traits_imp
| |   | |-TemplateTypeParmDecl 0x7fa3331434e0 <line:875:11, col:17> col:17 class depth 0 index 0 _MP
| |   | |-NonTypeTemplateParmDecl 0x7fa333143558 <col:22, col:27> col:27 '_Bool' depth 0 index 1 _IsMemberFunctionPtr
| |   | |-NonTypeTemplateParmDecl 0x7fa3331435c0 <col:49, col:54> col:54 '_Bool' depth 0 index 2 _IsMemberObjectPtr
| |   | `-CXXRecordDecl 0x7fa333143640 <line:876:1, line:878:1> line:876:8 struct __member_pointer_traits_imp definition
| |   |   `-CXXRecordDecl 0x7fa333143ae0 <col:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   |-ClassTemplateDecl 0x7fa333143cb8 <line:881:1, line:882:26> line:881:29 __libcpp_is_member_function_pointer
| |   | |-TemplateTypeParmDecl 0x7fa333143b98 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa333143c20 <col:22, line:882:26> line:881:29 struct __libcpp_is_member_function_pointer definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   `-CXXRecordDecl 0x7fa333143f70 <col:22, col:29> col:29 implicit struct __libcpp_is_member_function_pointer
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa3331442c8 <line:884:1, line:886:33> line:885:8 struct __libcpp_is_member_function_pointer definition
| |   | |-public 'is_function<_Ret>'
| |   | |-TemplateArgument type 'type-parameter-0-0 type-parameter-0-1::*'
| |   | |-TemplateTypeParmDecl 0x7fa333144028 <line:884:11, col:17> col:17 referenced class depth 0 index 0 _Ret
| |   | |-TemplateTypeParmDecl 0x7fa333144098 <col:23, col:29> col:29 class depth 0 index 1 _Class
| |   | `-CXXRecordDecl 0x7fa3331445c8 <line:885:1, col:8> col:8 implicit struct __libcpp_is_member_function_pointer
| |   |-ClassTemplateDecl 0x7fa333144800 <line:888:1, line:889:88> line:888:50 is_member_function_pointer
| |   | |-TemplateTypeParmDecl 0x7fa333144680 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa333144730 <col:22, line:889:88> line:888:50 struct is_member_function_pointer definition
| |   |   |-public '__libcpp_is_member_function_pointer<typename remove_cv<_Tp>::type>::type'
| |   |   |-TypeVisibilityAttr 0x7fa333144a80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fa333144dc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:888:22, col:50> col:50 implicit struct is_member_function_pointer
| |   |-ClassTemplateDecl 0x7fa333144f98 <line:898:1, col:100> col:40 __libcpp_is_member_pointer
| |   | |-TemplateTypeParmDecl 0x7fa333144e78 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa333144f00 <col:33, col:100> col:40 struct __libcpp_is_member_pointer definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   `-CXXRecordDecl 0x7fa333145250 <col:33, col:40> col:40 implicit struct __libcpp_is_member_pointer
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa333145578 <line:899:1, col:99> col:40 struct __libcpp_is_member_pointer definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 type-parameter-0-1::*'
| |   | |-TemplateTypeParmDecl 0x7fa333145308 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fa333145378 <col:22, col:28> col:28 class depth 0 index 1 _Up
| |   | `-CXXRecordDecl 0x7fa333145800 <col:33, col:40> col:40 implicit struct __libcpp_is_member_pointer
| |   |-ClassTemplateDecl 0x7fa333145a08 <line:901:1, line:902:73> line:901:50 is_member_pointer
| |   | |-TemplateTypeParmDecl 0x7fa3331458b8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa333145970 <col:22, line:902:73> line:901:50 struct is_member_pointer definition
| |   |   |-public '__libcpp_is_member_pointer<typename remove_cv<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fa333145c80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fa333145ee8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:901:22, col:50> col:50 implicit struct is_member_pointer
| |   |-ClassTemplateDecl 0x7fa3331460e8 <line:911:1, line:913:79> line:911:50 is_member_object_pointer
| |   | |-TemplateTypeParmDecl 0x7fa333145fa0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa333146050 <col:22, line:913:79> line:911:50 struct is_member_object_pointer definition
| |   |   |-public 'integral_constant<_Bool, is_member_pointer<_Tp>::value && !is_member_function_pointer<_Tp>::value>'
| |   |   |-TypeVisibilityAttr 0x7fa333146360 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fa333146800 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:911:22, col:50> col:50 implicit struct is_member_object_pointer
| |   |-ClassTemplateDecl 0x7fa333146a08 <line:924:1, line:925:55> line:924:50 is_enum
| |   | |-TemplateTypeParmDecl 0x7fa3331468b8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa333146970 <col:22, line:925:55> line:924:50 struct is_enum definition
| |   |   |-public 'integral_constant<_Bool, __is_enum(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fa333146c80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fa333146e68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:924:22, col:50> col:50 implicit struct is_enum
| |   |-ClassTemplateDecl 0x7fa333147068 <line:950:1, line:952:70> line:950:50 is_arithmetic
| |   | |-TemplateTypeParmDecl 0x7fa333146f20 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa333146fd0 <col:22, line:952:70> line:950:50 struct is_arithmetic definition
| |   |   |-public 'integral_constant<_Bool, is_integral<_Tp>::value || is_floating_point<_Tp>::value>'
| |   |   |-TypeVisibilityAttr 0x7fa3331472e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fa333147718 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:950:22, col:50> col:50 implicit struct is_arithmetic
| |   |-ClassTemplateDecl 0x7fa333147948 <line:961:1, line:964:66> line:961:50 is_fundamental
| |   | |-TemplateTypeParmDecl 0x7fa333147800 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa3331478b0 <col:22, line:964:66> line:961:50 struct is_fundamental definition
| |   |   |-public 'integral_constant<_Bool, is_void<_Tp>::value || __is_nullptr_t<_Tp>::value || is_arithmetic<_Tp>::value>'
| |   |   |-TypeVisibilityAttr 0x7fa333147bc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fa333148118 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:961:22, col:50> col:50 implicit struct is_fundamental
| |   |-ClassTemplateDecl 0x7fa333148318 <line:973:1, line:978:71> line:973:50 is_scalar
| |   | |-TemplateTypeParmDecl 0x7fa3331481d0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fa333148280 <col:22, line:978:71> line:973:50 struct is_scalar definition
| |   | | |-public 'integral_constant<_Bool, is_arithmetic<_Tp>::value || is_member_pointer<_Tp>::value || is_pointer<_Tp>::value || __is_nullptr_t<_Tp>::value || is_enum<_Tp>::value>'
| |   | | |-TypeVisibilityAttr 0x7fa333148590 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | | `-CXXRecordDecl 0x7fa333148d88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:973:22, col:50> col:50 implicit struct is_scalar
| |   | `-ClassTemplateSpecialization 0x7fa333148e90 'is_scalar'
| |   |-ClassTemplateSpecializationDecl 0x7fa333148e90 <line:980:1, col:82> col:41 struct is_scalar definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'nullptr_t'
| |   | |-TypeVisibilityAttr 0x7fa333148fc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fa333149140 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:980:13, col:41> col:41 implicit struct is_scalar
| |   |-ClassTemplateDecl 0x7fa333149348 <line:989:1, line:993:63> line:989:50 is_object
| |   | |-TemplateTypeParmDecl 0x7fa3331491f8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa3331492b0 <col:22, line:993:63> line:989:50 struct is_object definition
| |   |   |-public 'integral_constant<_Bool, is_scalar<_Tp>::value || is_array<_Tp>::value || is_union<_Tp>::value || is_class<_Tp>::value>'
| |   |   |-TypeVisibilityAttr 0x7fa3331495c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fa333149c68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:989:22, col:50> col:50 implicit struct is_object
| |   |-ClassTemplateDecl 0x7fa333149e68 <line:1002:1, line:1003:68> line:1002:50 is_compound
| |   | |-TemplateTypeParmDecl 0x7fa333149d20 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa333149dd0 <col:22, line:1003:68> line:1002:50 struct is_compound definition
| |   |   |-public 'integral_constant<_Bool, !is_fundamental<_Tp>::value>'
| |   |   |-TypeVisibilityAttr 0x7fa33314a0e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fa33314a3d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1002:22, col:50> col:50 implicit struct is_compound
| |   |-CXXRecordDecl 0x7fa33314a490 <line:1013:1, line:1016:1> line:1013:8 struct __is_referenceable_impl definition
| |   | |-CXXRecordDecl 0x7fa33314a5b8 <col:1, col:8> col:8 implicit struct __is_referenceable_impl
| |   | |-FunctionTemplateDecl 0x7fa33314a8c0 <line:1014:5, col:48> col:38 __test
| |   | | |-TemplateTypeParmDecl 0x7fa33314a650 <col:15, col:21> col:21 referenced class depth 0 index 0 _Tp
| |   | | `-CXXMethodDecl 0x7fa33314a828 <col:26, col:48> col:38 __test '_Tp &(int)' static
| |   | |   `-ParmVarDecl 0x7fa33314a6e8 <col:45> col:48 'int'
| |   | `-FunctionTemplateDecl 0x7fa33314aa58 <line:1015:5, col:49> col:39 __test
| |   |   |-TemplateTypeParmDecl 0x7fa33314a918 <col:15, col:21> col:21 class depth 0 index 0 _Tp
| |   |   `-CXXMethodDecl 0x7fa33314a9c0 <col:26, col:49> col:39 __test 'struct std::__1::__two (...)' static
| |   |-ClassTemplateDecl 0x7fa33314abe8 <line:1018:1, line:1020:81> line:1019:8 __is_referenceable
| |   | |-TemplateTypeParmDecl 0x7fa33314aac8 <line:1018:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa33314ab50 <line:1019:1, line:1020:81> line:1019:8 struct __is_referenceable definition
| |   |   |-public 'integral_constant<_Bool, !is_same<decltype(struct __is_referenceable_impl::__test<_Tp>(0)), struct __two>::value>'
| |   |   `-CXXRecordDecl 0x7fa33314b388 <col:1, col:8> col:8 implicit struct __is_referenceable
| |   |-ClassTemplateDecl 0x7fa33314b948 <line:1025:1, line:1028:50> col:8 __add_const
| |   | |-TemplateTypeParmDecl 0x7fa33314b440 <line:1025:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fa33314b838 <col:22, line:1027:44> line:1025:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7fa33314b800 <col:29, line:1027:44> '<dependent type>' '||'
| |   | |     |-BinaryOperator 0x7fa33314b6c8 <line:1025:29, line:1026:47> '<dependent type>' '||'
| |   | |     | |-DependentScopeDeclRefExpr 0x7fa33314b578 <line:1025:29, col:48> '<dependent type>' lvalue
| |   | |     | `-DependentScopeDeclRefExpr 0x7fa33314b688 <line:1026:29, col:47> '<dependent type>' lvalue
| |   | |     `-DependentScopeDeclRefExpr 0x7fa33314b7b8 <line:1027:29, col:44> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fa33314b8b0 <line:1028:1, col:50> col:8 struct __add_const definition
| |   |   |-CXXRecordDecl 0x7fa33314bc10 <col:1, col:8> col:8 implicit struct __add_const
| |   |   `-TypedefDecl 0x7fa33314bcb8 <col:33, col:45> col:45 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7fa33314b480 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fa33314b440 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa33314bf10 <line:1030:1, line:1031:56> col:8 struct __add_const definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fa33314bd30 <line:1030:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fa33314c1a0 <line:1031:1, col:8> col:8 implicit struct __add_const
| |   | `-TypedefDecl 0x7fa33314c248 <col:33, col:51> col:51 type 'const _Tp'
| |   |   `-QualType 0x7fa33314bd71 'const _Tp' const
| |   |     `-TemplateTypeParmType 0x7fa33314bd70 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fa33314bd30 '_Tp'
| |   |-ClassTemplateDecl 0x7fa33314c408 <line:1033:1, line:1034:51> line:1033:50 add_const
| |   | |-TemplateTypeParmDecl 0x7fa33314c2c0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa33314c370 <col:22, line:1034:51> line:1033:50 struct add_const definition
| |   |   |-TypeVisibilityAttr 0x7fa33314c680 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fa33314c6c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1033:22, col:50> col:50 implicit struct add_const
| |   |   `-TypedefDecl 0x7fa33314ccc0 <line:1034:6, col:46> col:46 type 'typename __add_const<_Tp>::type'
| |   |     `-DependentNameType 0x7fa33314cc50 'typename __add_const<_Tp>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fa33314cf80 <line:1037:1, col:67> col:22 add_const_t
| |   | |-TemplateTypeParmDecl 0x7fa33314cd38 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fa33314cf20 <col:22, col:67> col:28 add_const_t 'typename add_const<_Tp>::type'
| |   |   `-DependentNameType 0x7fa33314ceb0 'typename add_const<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fa33314d4d0 <line:1042:1, line:1045:53> col:8 __add_volatile
| |   | |-TemplateTypeParmDecl 0x7fa33314cfd0 <line:1042:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fa33314d3c0 <col:22, line:1044:47> line:1042:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7fa33314d388 <col:29, line:1044:47> '<dependent type>' '||'
| |   | |     |-BinaryOperator 0x7fa33314d258 <line:1042:29, line:1043:47> '<dependent type>' '||'
| |   | |     | |-DependentScopeDeclRefExpr 0x7fa33314d108 <line:1042:29, col:48> '<dependent type>' lvalue
| |   | |     | `-DependentScopeDeclRefExpr 0x7fa33314d218 <line:1043:29, col:47> '<dependent type>' lvalue
| |   | |     `-DependentScopeDeclRefExpr 0x7fa33314d348 <line:1044:29, col:47> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fa33314d438 <line:1045:1, col:53> col:8 struct __add_volatile definition
| |   |   |-CXXRecordDecl 0x7fa33314d800 <col:1, col:8> col:8 implicit struct __add_volatile
| |   |   `-TypedefDecl 0x7fa33314d8a8 <col:36, col:48> col:48 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7fa33314d010 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fa33314cfd0 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa33314db00 <line:1047:1, line:1048:62> col:8 struct __add_volatile definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fa33314d920 <line:1047:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fa33314dd90 <line:1048:1, col:8> col:8 implicit struct __add_volatile
| |   | `-TypedefDecl 0x7fa33314de38 <col:36, col:57> col:57 type 'volatile _Tp'
| |   |   `-QualType 0x7fa33314d964 'volatile _Tp' volatile
| |   |     `-TemplateTypeParmType 0x7fa33314d960 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fa33314d920 '_Tp'
| |   |-ClassTemplateDecl 0x7fa33314dff8 <line:1050:1, line:1051:54> line:1050:50 add_volatile
| |   | |-TemplateTypeParmDecl 0x7fa33314deb0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa33314df60 <col:22, line:1051:54> line:1050:50 struct add_volatile definition
| |   |   |-TypeVisibilityAttr 0x7fa33314e270 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fa33314e2b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1050:22, col:50> col:50 implicit struct add_volatile
| |   |   `-TypedefDecl 0x7fa33314eea0 <line:1051:6, col:49> col:49 type 'typename __add_volatile<_Tp>::type'
| |   |     `-DependentNameType 0x7fa33314ee30 'typename __add_volatile<_Tp>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fa33314f160 <line:1054:1, col:73> col:22 add_volatile_t
| |   | |-TemplateTypeParmDecl 0x7fa33314ef18 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fa33314f100 <col:22, col:73> col:28 add_volatile_t 'typename add_volatile<_Tp>::type'
| |   |   `-DependentNameType 0x7fa33314f090 'typename add_volatile<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fa33314f2f8 <line:1059:1, line:1060:78> line:1059:50 add_cv
| |   | |-TemplateTypeParmDecl 0x7fa33314f1b0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa33314f260 <col:22, line:1060:78> line:1059:50 struct add_cv definition
| |   |   |-TypeVisibilityAttr 0x7fa33314f570 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fa33314f5b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1059:22, col:50> col:50 implicit struct add_cv
| |   |   `-TypedefDecl 0x7fa33314f910 <line:1060:6, col:73> col:73 type 'typename add_const<typename add_volatile<_Tp>::type>::type'
| |   |     `-DependentNameType 0x7fa33314f8a0 'typename add_const<typename add_volatile<_Tp>::type>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fa33314fbd0 <line:1063:1, col:61> col:22 add_cv_t
| |   | |-TemplateTypeParmDecl 0x7fa33314f988 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fa33314fb70 <col:22, col:61> col:28 add_cv_t 'typename add_cv<_Tp>::type'
| |   |   `-DependentNameType 0x7fa33314fb00 'typename add_cv<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fa33314fd68 <line:1068:1, col:92> col:50 remove_reference
| |   | |-TemplateTypeParmDecl 0x7fa33314fc20 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa33314fcd0 <col:22, col:92> col:50 struct remove_reference definition
| |   |   |-TypeVisibilityAttr 0x7fa333150630 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fa333150678 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1068:22, col:50> col:50 implicit struct remove_reference
| |   |   `-TypedefDecl 0x7fa333150720 <col:75, col:87> col:87 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7fa33314fc60 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fa33314fc20 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa333150968 <line:1069:1, col:92> col:50 struct remove_reference definition
| |   | |-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateTypeParmDecl 0x7fa333150798 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fa333150aa8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fa333150be0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1069:22, col:50> col:50 implicit struct remove_reference
| |   | `-TypedefDecl 0x7fa333150c88 <col:75, col:87> col:87 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fa3331507e0 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fa333150798 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa333150ec8 <line:1071:1, col:92> col:50 struct remove_reference definition
| |   | |-TemplateArgument type 'type-parameter-0-0 &&'
| |   | |-TemplateTypeParmDecl 0x7fa333150d00 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fa333151008 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fa333151140 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1071:22, col:50> col:50 implicit struct remove_reference
| |   | `-TypedefDecl 0x7fa3331511e8 <col:75, col:87> col:87 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fa333150d40 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fa333150d00 '_Tp'
| |   |-TypeAliasTemplateDecl 0x7fa333151aa0 <line:1075:1, col:81> col:22 remove_reference_t
| |   | |-TemplateTypeParmDecl 0x7fa333151260 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fa333151a40 <col:22, col:81> col:28 remove_reference_t 'typename remove_reference<_Tp>::type'
| |   |   `-DependentNameType 0x7fa3331513d0 'typename remove_reference<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fa333151d88 <line:1080:1, col:128> col:68 __add_lvalue_reference_impl
| |   | |-TemplateTypeParmDecl 0x7fa333151af0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fa333151c78 <col:22, col:54> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fa333151c28 <col:29, col:54> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fa333151cf0 <col:61, col:128> col:68 struct __add_lvalue_reference_impl definition
| |   |   |-CXXRecordDecl 0x7fa333152050 <col:61, col:68> col:68 implicit struct __add_lvalue_reference_impl
| |   |   `-TypedefDecl 0x7fa3331520f8 <col:109, col:122> col:122 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7fa333151b30 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fa333151af0 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa333152350 <line:1081:1, col:128> col:68 struct __add_lvalue_reference_impl definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fa333152170 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fa3331525e0 <col:61, col:68> col:68 implicit struct __add_lvalue_reference_impl
| |   | `-TypedefDecl 0x7fa3331526b8 <col:109, col:122> col:122 type '_Tp &'
| |   |   `-LValueReferenceType 0x7fa333152680 '_Tp &' dependent
| |   |     `-TemplateTypeParmType 0x7fa3331521b0 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fa333152170 '_Tp'
| |   |-ClassTemplateDecl 0x7fa333152878 <line:1083:1, line:1084:63> line:1083:50 add_lvalue_reference
| |   | |-TemplateTypeParmDecl 0x7fa333152730 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa3331527e0 <col:22, line:1084:63> line:1083:50 struct add_lvalue_reference definition
| |   |   |-TypeVisibilityAttr 0x7fa333152b30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fa333152b78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1083:22, col:50> col:50 implicit struct add_lvalue_reference
| |   |   `-TypedefDecl 0x7fa333152f10 <line:1084:2, col:58> col:58 type 'typename __add_lvalue_reference_impl<_Tp>::type'
| |   |     `-DependentNameType 0x7fa333152ea0 'typename __add_lvalue_reference_impl<_Tp>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fa3331531d0 <line:1087:1, col:89> col:22 add_lvalue_reference_t
| |   | |-TemplateTypeParmDecl 0x7fa333152f88 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fa333153170 <col:22, col:89> col:28 add_lvalue_reference_t 'typename add_lvalue_reference<_Tp>::type'
| |   |   `-DependentNameType 0x7fa333153100 'typename add_lvalue_reference<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fa3331534b8 <line:1092:1, col:129> col:68 __add_rvalue_reference_impl
| |   | |-TemplateTypeParmDecl 0x7fa333153220 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fa3331533a8 <col:22, col:54> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fa333153358 <col:29, col:54> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fa333153420 <col:61, col:129> col:68 struct __add_rvalue_reference_impl definition
| |   |   |-CXXRecordDecl 0x7fa333153780 <col:61, col:68> col:68 implicit struct __add_rvalue_reference_impl
| |   |   `-TypedefDecl 0x7fa333153828 <col:109, col:123> col:123 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7fa333153260 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fa333153220 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa333157ad0 <line:1093:1, col:129> col:68 struct __add_rvalue_reference_impl definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fa3331538a0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fa333157d60 <col:61, col:68> col:68 implicit struct __add_rvalue_reference_impl
| |   | `-TypedefDecl 0x7fa333157e38 <col:109, col:123> col:123 type '_Tp &&'
| |   |   `-RValueReferenceType 0x7fa333157e00 '_Tp &&' dependent
| |   |     `-TemplateTypeParmType 0x7fa3331538e0 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fa3331538a0 '_Tp'
| |   |-ClassTemplateDecl 0x7fa333157ff8 <line:1095:1, line:1096:63> line:1095:50 add_rvalue_reference
| |   | |-TemplateTypeParmDecl 0x7fa333157eb0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa333157f60 <col:22, line:1096:63> line:1095:50 struct add_rvalue_reference definition
| |   |   |-TypeVisibilityAttr 0x7fa333158270 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fa3331582b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1095:22, col:50> col:50 implicit struct add_rvalue_reference
| |   |   `-TypedefDecl 0x7fa333158630 <line:1096:2, col:58> col:58 type 'typename __add_rvalue_reference_impl<_Tp>::type'
| |   |     `-DependentNameType 0x7fa3331585c0 'typename __add_rvalue_reference_impl<_Tp>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fa3331588f0 <line:1099:1, col:89> col:22 add_rvalue_reference_t
| |   | |-TemplateTypeParmDecl 0x7fa3331586a8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fa333158890 <col:22, col:89> col:28 add_rvalue_reference_t 'typename add_rvalue_reference<_Tp>::type'
| |   |   `-DependentNameType 0x7fa333158820 'typename add_rvalue_reference<_Tp>::type' dependent
| |   |-FunctionTemplateDecl 0x7fa333158bc8 <line:1106:1, col:41> col:28 __declval
| |   | |-TemplateTypeParmDecl 0x7fa333158940 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fa333158b30 <col:22, col:41> col:28 __declval '_Tp &&(int)'
| |   |   `-ParmVarDecl 0x7fa333158a00 <col:38> col:41 'int'
| |   |-FunctionTemplateDecl 0x7fa333158e58 <line:1107:1, col:42> col:28 __declval
| |   | |-TemplateTypeParmDecl 0x7fa333158c20 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fa333158dc0 <col:22, col:42> col:28 __declval '_Tp (long)'
| |   |   `-ParmVarDecl 0x7fa333158cb8 <col:38> col:42 'long'
| |   |-FunctionTemplateDecl 0x7fa333159250 <line:1109:1, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:758:21> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1111:1 declval
| |   | |-TemplateTypeParmDecl 0x7fa333158eb0 <line:1109:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fa3331591b8 <line:1110:1, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:758:21> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1111:1 declval 'decltype(std::__1::__declval<_Tp>(0)) (void) noexcept'
| |   |-ClassTemplateDecl 0x7fa3331593b8 <line:1123:1, line:1126:1> line:1124:8 __uncvref
| |   | |-TemplateTypeParmDecl 0x7fa3331592a0 <line:1123:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa333159320 <line:1124:1, line:1126:1> line:1124:8 struct __uncvref definition
| |   |   |-CXXRecordDecl 0x7fa333159630 <col:1, col:8> col:8 implicit struct __uncvref
| |   |   `-TypedefDecl 0x7fa333159990 <line:1125:5, col:76> col:76 type 'typename remove_cv<typename remove_reference<_Tp>::type>::type'
| |   |     `-DependentNameType 0x7fa333159920 'typename remove_cv<typename remove_reference<_Tp>::type>::type' dependent
| |   |-ClassTemplateDecl 0x7fa333159b38 <line:1128:1, line:1131:1> line:1129:8 __unconstref
| |   | |-TemplateTypeParmDecl 0x7fa333159a20 <line:1128:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa333159aa0 <line:1129:1, line:1131:1> line:1129:8 struct __unconstref definition
| |   |   |-CXXRecordDecl 0x7fa333159db0 <col:1, col:8> col:8 implicit struct __unconstref
| |   |   `-TypedefDecl 0x7fa33315a110 <line:1130:5, col:79> col:79 type 'typename remove_const<typename remove_reference<_Tp>::type>::type'
| |   |     `-DependentNameType 0x7fa33315a0a0 'typename remove_const<typename remove_reference<_Tp>::type>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fa33315a3d0 <line:1134:1, line:1135:46> col:1 __uncvref_t
| |   | |-TemplateTypeParmDecl 0x7fa33315a188 <line:1134:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fa33315a370 <line:1135:1, col:46> col:7 __uncvref_t 'typename __uncvref<_Tp>::type'
| |   |   `-DependentNameType 0x7fa33315a300 'typename __uncvref<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fa33315a5b0 <line:1140:1, line:1142:68> line:1141:8 __is_same_uncvref
| |   | |-TemplateTypeParmDecl 0x7fa33315a420 <line:1140:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fa33315a488 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | `-CXXRecordDecl 0x7fa33315a518 <line:1141:1, line:1142:68> line:1141:8 struct __is_same_uncvref definition
| |   |   |-public 'is_same<typename __uncvref<_Tp>::type, typename __uncvref<_Up>::type>'
| |   |   `-CXXRecordDecl 0x7fa33312da88 <col:1, col:8> col:8 implicit struct __is_same_uncvref
| |   |-CXXRecordDecl 0x7fa33312db40 <line:1144:1, line:1147:1> line:1144:8 referenced struct __any definition
| |   | |-CXXRecordDecl 0x7fa33312dc68 <col:1, col:8> col:8 implicit referenced struct __any
| |   | `-CXXConstructorDecl 0x7fa33312dda0 <line:1146:5, col:14> col:5 __any 'void (...)'
| |   |-ClassTemplateDecl 0x7fa33312dfb8 <line:1151:1, col:104> col:50 remove_pointer
| |   | |-TemplateTypeParmDecl 0x7fa33312de68 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa33312df20 <col:22, col:104> col:50 struct remove_pointer definition
| |   |   |-TypeVisibilityAttr 0x7fa33312e230 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fa33312e278 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1151:22, col:50> col:50 implicit struct remove_pointer
| |   |   `-TypedefDecl 0x7fa33312e320 <col:87, col:99> col:99 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7fa33312deb0 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fa33312de68 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa33312e568 <line:1152:1, col:104> col:50 struct remove_pointer definition
| |   | |-TemplateArgument type 'type-parameter-0-0 *'
| |   | |-TemplateTypeParmDecl 0x7fa33312e398 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fa33312e6a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fa33315c400 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1152:22, col:50> col:50 implicit struct remove_pointer
| |   | `-TypedefDecl 0x7fa33315c4a8 <col:87, col:99> col:99 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fa33312e3e0 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fa33312e398 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa33315c6e8 <line:1153:1, col:104> col:50 struct remove_pointer definition
| |   | |-TemplateArgument type 'type-parameter-0-0 *const'
| |   | |-TemplateTypeParmDecl 0x7fa33315c520 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fa33315c828 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fa33315c960 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1153:22, col:50> col:50 implicit struct remove_pointer
| |   | `-TypedefDecl 0x7fa33315ca08 <col:87, col:99> col:99 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fa33315c560 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fa33315c520 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa33315cc48 <line:1154:1, col:104> col:50 struct remove_pointer definition
| |   | |-TemplateArgument type 'type-parameter-0-0 *volatile'
| |   | |-TemplateTypeParmDecl 0x7fa33315ca80 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fa33315cd88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fa33315cec0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1154:22, col:50> col:50 implicit struct remove_pointer
| |   | `-TypedefDecl 0x7fa33315cf68 <col:87, col:99> col:99 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fa33315cac0 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fa33315ca80 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa33315d1a8 <line:1155:1, col:104> col:50 struct remove_pointer definition
| |   | |-TemplateArgument type 'type-parameter-0-0 *const volatile'
| |   | |-TemplateTypeParmDecl 0x7fa33315cfe0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fa33315d2e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fa33315d468 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1155:22, col:50> col:50 implicit struct remove_pointer
| |   | `-TypedefDecl 0x7fa33315d510 <col:87, col:99> col:99 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fa33315d020 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fa33315cfe0 '_Tp'
| |   |-TypeAliasTemplateDecl 0x7fa33315d7d0 <line:1158:1, col:77> col:22 remove_pointer_t
| |   | |-TemplateTypeParmDecl 0x7fa33315d588 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fa33315d770 <col:22, col:77> col:28 remove_pointer_t 'typename remove_pointer<_Tp>::type'
| |   |   `-DependentNameType 0x7fa33315d700 'typename remove_pointer<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fa33315dda0 <line:1163:1, line:1167:57> line:1166:8 __add_pointer_impl
| |   | |-TemplateTypeParmDecl 0x7fa33315d820 <line:1163:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fa33315dc90 <line:1164:9, line:1165:63> line:1164:14 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7fa33315dc58 <col:16, line:1165:63> '<dependent type>' '||'
| |   | |     |-DependentScopeDeclRefExpr 0x7fa33315d958 <line:1164:16, col:41> '<dependent type>' lvalue
| |   | |     `-DependentScopeDeclRefExpr 0x7fa33315dc18 <line:1165:17, col:63> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fa33315dd08 <line:1166:1, line:1167:57> line:1166:8 struct __add_pointer_impl definition
| |   |   |-CXXRecordDecl 0x7fa33315e060 <col:1, col:8> col:8 implicit struct __add_pointer_impl
| |   |   `-TypedefDecl 0x7fa33315e280 <line:1167:6, col:52> col:52 type 'typename remove_reference<_Tp>::type *'
| |   |     `-PointerType 0x7fa33315e230 'typename remove_reference<_Tp>::type *' dependent
| |   |       `-DependentNameType 0x7fa33315e1b0 'typename remove_reference<_Tp>::type' dependent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa33315f530 <line:1168:1, line:1169:23> line:1168:29 struct __add_pointer_impl definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fa33315e2f8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fa33315f7c0 <col:22, col:29> col:29 implicit struct __add_pointer_impl
| |   | `-TypedefDecl 0x7fa33315f868 <line:1169:6, col:18> col:18 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fa33315e340 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fa33315e2f8 '_Tp'
| |   |-ClassTemplateDecl 0x7fa33315fa28 <line:1171:1, line:1172:58> line:1171:50 add_pointer
| |   | |-TemplateTypeParmDecl 0x7fa33315f8e0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa33315f990 <col:22, line:1172:58> line:1171:50 struct add_pointer definition
| |   |   |-TypeVisibilityAttr 0x7fa33315fca0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fa33315fce8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1171:22, col:50> col:50 implicit struct add_pointer
| |   |   `-TypedefDecl 0x7fa3331602b0 <line:1172:6, col:53> col:53 type 'typename __add_pointer_impl<_Tp>::type'
| |   |     `-DependentNameType 0x7fa333160240 'typename __add_pointer_impl<_Tp>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fa3331605b0 <line:1175:1, col:71> col:22 add_pointer_t
| |   | |-TemplateTypeParmDecl 0x7fa333160328 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fa333160550 <col:22, col:71> col:28 add_pointer_t 'typename add_pointer<_Tp>::type'
| |   |   `-DependentNameType 0x7fa3331604e0 'typename add_pointer<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fa333160898 <line:1180:1, line:1181:82> col:8 __libcpp_is_signed_impl
| |   | |-TemplateTypeParmDecl 0x7fa333160600 <line:1180:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fa333160788 <col:22, col:47> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fa333160738 <col:29, col:47> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fa333160800 <line:1181:1, col:82> col:8 struct __libcpp_is_signed_impl definition
| |   |   |-public 'integral_constant<_Bool, (_Tp(-1) < _Tp(0))>'
| |   |   `-CXXRecordDecl 0x7fa333160df8 <col:1, col:8> col:8 implicit struct __libcpp_is_signed_impl
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa333161090 <line:1183:1, line:1184:64> col:8 struct __libcpp_is_signed_impl definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fa333160eb0 <line:1183:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa333161360 <line:1184:1, col:8> col:8 implicit struct __libcpp_is_signed_impl
| |   |-ClassTemplateDecl 0x7fa3331616b8 <line:1186:1, line:1187:66> col:8 __libcpp_is_signed
| |   | |-TemplateTypeParmDecl 0x7fa333161420 <line:1186:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fa3331615a8 <col:22, col:49> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fa333161558 <col:29, col:49> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fa333161620 <line:1187:1, col:66> col:8 struct __libcpp_is_signed definition
| |   |   |-public '__libcpp_is_signed_impl<_Tp>'
| |   |   `-CXXRecordDecl 0x7fa333161bb8 <col:1, col:8> col:8 implicit struct __libcpp_is_signed
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa333161e50 <line:1189:1, col:81> col:29 struct __libcpp_is_signed definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fa333161c70 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa333162120 <col:22, col:29> col:29 implicit struct __libcpp_is_signed
| |   |-ClassTemplateDecl 0x7fa333162328 <line:1191:1, col:94> col:50 is_signed
| |   | |-TemplateTypeParmDecl 0x7fa3331621d8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa333162290 <col:22, col:94> col:50 struct is_signed definition
| |   |   |-public '__libcpp_is_signed<_Tp>'
| |   |   |-TypeVisibilityAttr 0x7fa333162630 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fa3331628b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1191:22, col:50> col:50 implicit struct is_signed
| |   |-ClassTemplateDecl 0x7fa333162c08 <line:1200:1, line:1201:84> col:8 __libcpp_is_unsigned_impl
| |   | |-TemplateTypeParmDecl 0x7fa333162970 <line:1200:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fa333162af8 <col:22, col:47> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fa333162aa8 <col:29, col:47> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fa333162b70 <line:1201:1, col:84> col:8 struct __libcpp_is_unsigned_impl definition
| |   |   |-public 'integral_constant<_Bool, (_Tp(0) < _Tp(-1))>'
| |   |   `-CXXRecordDecl 0x7fa333163168 <col:1, col:8> col:8 implicit struct __libcpp_is_unsigned_impl
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa333163400 <line:1203:1, line:1204:67> col:8 struct __libcpp_is_unsigned_impl definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fa333163220 <line:1203:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa3331636d0 <line:1204:1, col:8> col:8 implicit struct __libcpp_is_unsigned_impl
| |   |-ClassTemplateDecl 0x7fa333163a28 <line:1206:1, line:1207:70> col:8 __libcpp_is_unsigned
| |   | |-TemplateTypeParmDecl 0x7fa333163788 <line:1206:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fa333163918 <col:22, col:49> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fa3331638c8 <col:29, col:49> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fa333163990 <line:1207:1, col:70> col:8 struct __libcpp_is_unsigned definition
| |   |   |-public '__libcpp_is_unsigned_impl<_Tp>'
| |   |   `-CXXRecordDecl 0x7fa333163f28 <col:1, col:8> col:8 implicit struct __libcpp_is_unsigned
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa3331641c0 <line:1209:1, col:83> col:29 struct __libcpp_is_unsigned definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fa333163fe0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa3331644a8 <col:22, col:29> col:29 implicit struct __libcpp_is_unsigned
| |   |-ClassTemplateDecl 0x7fa3331646a8 <line:1211:1, col:98> col:50 is_unsigned
| |   | |-TemplateTypeParmDecl 0x7fa333164560 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa333164610 <col:22, col:98> col:50 struct is_unsigned definition
| |   |   |-public '__libcpp_is_unsigned<_Tp>'
| |   |   |-TypeVisibilityAttr 0x7fa333164920 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fa333164ba8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1211:22, col:50> col:50 implicit struct is_unsigned
| |   |-ClassTemplateDecl 0x7fa333164da8 <line:1220:1, line:1221:44> line:1220:50 rank
| |   | |-TemplateTypeParmDecl 0x7fa333164c60 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa333164d10 <col:22, line:1221:44> line:1220:50 struct rank definition
| |   |   |-public 'integral_constant<size_t, 0>':'struct std::__1::integral_constant<unsigned long, 0>'
| |   |   |-TypeVisibilityAttr 0x7fa333165020 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fa333165940 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1220:22, col:50> col:50 implicit struct rank
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa333165bd8 <line:1222:1, line:1223:63> line:1222:50 struct rank definition
| |   | |-public 'integral_constant<size_t, rank<_Tp>::value + 1>'
| |   | |-TemplateArgument type 'type-parameter-0-0 []'
| |   | |-TemplateTypeParmDecl 0x7fa3331659f8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fa333165d28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fa333166148 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1222:22, col:50> col:50 implicit struct rank
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa333166488 <line:1224:1, line:1225:63> line:1224:62 struct rank definition
| |   | |-public 'integral_constant<size_t, rank<_Tp>::value + 1>'
| |   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
| |   | |-TemplateTypeParmDecl 0x7fa333166200 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fa333166278 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Np
| |   | |-TypeVisibilityAttr 0x7fa3331665d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fa333166988 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1224:34, col:62> col:62 implicit struct rank
| |   |-ClassTemplateDecl 0x7fa333166c38 <line:1234:1, line:1235:44> line:1234:68 extent
| |   | |-TemplateTypeParmDecl 0x7fa333166a40 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fa333166ae0 <col:22, col:37> col:31 'unsigned int' depth 0 index 1 _Ip
| |   | | `-TemplateArgument expr
| |   | |   `-ImplicitCastExpr 0x7fa333166b38 <col:37> 'unsigned int' <IntegralCast>
| |   | |     `-IntegerLiteral 0x7fa333166aa8 <col:37> 'int' 0
| |   | `-CXXRecordDecl 0x7fa333166ba0 <col:40, line:1235:44> line:1234:68 struct extent definition
| |   |   |-public 'integral_constant<size_t, 0>':'struct std::__1::integral_constant<unsigned long, 0>'
| |   |   |-TypeVisibilityAttr 0x7fa333166f00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fa333167088 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1234:40, col:68> col:68 implicit struct extent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa333167400 <line:1236:1, line:1237:44> line:1236:50 struct extent definition
| |   | |-public 'integral_constant<size_t, 0>':'struct std::__1::integral_constant<unsigned long, 0>'
| |   | |-TemplateArgument type 'type-parameter-0-0 []'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fa333167140 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fa333167588 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fa333167838 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1236:22, col:50> col:50 implicit struct extent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa333167bc0 <line:1238:1, line:1239:68> line:1238:64 struct extent definition
| |   | |-public 'integral_constant<size_t, extent<_Tp, _Ip - 1>::value>'
| |   | |-TemplateArgument type 'type-parameter-0-0 []'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fa333167a68 <col:78> 'unsigned int' NonTypeTemplateParm 0x7fa333167970 '_Ip' 'unsigned int'
| |   | |-TemplateTypeParmDecl 0x7fa3331678f0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fa333167970 <col:22, col:31> col:31 referenced 'unsigned int' depth 0 index 1 _Ip
| |   | |-TypeVisibilityAttr 0x7fa333167d28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fa333168258 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1238:36, col:64> col:64 implicit struct extent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa333168630 <line:1240:1, line:1241:46> line:1240:62 struct extent definition
| |   | |-public 'integral_constant<size_t, _Np>'
| |   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fa333168310 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fa333168388 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Np
| |   | |-TypeVisibilityAttr 0x7fa3331687b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fa333168ab8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1240:34, col:62> col:62 implicit struct extent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa333168ef0 <line:1242:1, line:1243:68> line:1242:76 struct extent definition
| |   | |-public 'integral_constant<size_t, extent<_Tp, _Ip - 1>::value>'
| |   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fa333168d90 <col:93> 'unsigned int' NonTypeTemplateParm 0x7fa333168c58 '_Ip' 'unsigned int'
| |   | |-TemplateTypeParmDecl 0x7fa333168b70 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fa333168be8 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Np
| |   | |-NonTypeTemplateParmDecl 0x7fa333168c58 <col:34, col:43> col:43 referenced 'unsigned int' depth 0 index 2 _Ip
| |   | |-TypeVisibilityAttr 0x7fa333169058 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fa3328269b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1242:48, col:76> col:76 implicit struct extent
| |   |-ClassTemplateDecl 0x7fa332826bb8 <line:1252:1, line:1253:23> line:1252:50 remove_extent
| |   | |-TemplateTypeParmDecl 0x7fa332826a70 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa332826b20 <col:22, line:1253:23> line:1252:50 struct remove_extent definition
| |   |   |-TypeVisibilityAttr 0x7fa332826e30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fa332826e78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1252:22, col:50> col:50 implicit struct remove_extent
| |   |   `-TypedefDecl 0x7fa332826f20 <line:1253:6, col:18> col:18 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7fa332826ab0 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fa332826a70 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa332827178 <line:1254:1, line:1255:23> line:1254:50 struct remove_extent definition
| |   | |-TemplateArgument type 'type-parameter-0-0 []'
| |   | |-TemplateTypeParmDecl 0x7fa332826f98 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fa3328272c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fa332827400 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1254:22, col:50> col:50 implicit struct remove_extent
| |   | `-TypedefDecl 0x7fa3328274a8 <line:1255:6, col:18> col:18 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fa332826fe0 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fa332826f98 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa332827800 <line:1256:1, line:1257:23> line:1256:62 struct remove_extent definition
| |   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
| |   | |-TemplateTypeParmDecl 0x7fa332827520 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fa332827598 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Np
| |   | |-TypeVisibilityAttr 0x7fa332827948 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fa332827a80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1256:34, col:62> col:62 implicit struct remove_extent
| |   | `-TypedefDecl 0x7fa332827b28 <line:1257:6, col:18> col:18 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fa332827560 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fa332827520 '_Tp'
| |   |-TypeAliasTemplateDecl 0x7fa332827de0 <line:1260:1, col:75> col:22 remove_extent_t
| |   | |-TemplateTypeParmDecl 0x7fa332827ba0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fa332827d80 <col:22, col:75> col:28 remove_extent_t 'typename remove_extent<_Tp>::type'
| |   |   `-DependentNameType 0x7fa332827d10 'typename remove_extent<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fa332827f78 <line:1265:1, line:1266:23> line:1265:50 remove_all_extents
| |   | |-TemplateTypeParmDecl 0x7fa332827e30 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa332827ee0 <col:22, line:1266:23> line:1265:50 struct remove_all_extents definition
| |   |   |-TypeVisibilityAttr 0x7fa3328281f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fa332828238 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1265:22, col:50> col:50 implicit struct remove_all_extents
| |   |   `-TypedefDecl 0x7fa3328282e0 <line:1266:6, col:18> col:18 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7fa332827e70 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fa332827e30 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa332828538 <line:1267:1, line:1268:58> line:1267:50 struct remove_all_extents definition
| |   | |-TemplateArgument type 'type-parameter-0-0 []'
| |   | |-TemplateTypeParmDecl 0x7fa332828358 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fa332828688 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fa332828800 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1267:22, col:50> col:50 implicit struct remove_all_extents
| |   | `-TypedefDecl 0x7fa332828a00 <line:1268:6, col:53> col:53 type 'typename remove_all_extents<_Tp>::type'
| |   |   `-DependentNameType 0x7fa332828990 'typename remove_all_extents<_Tp>::type' dependent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa332828d08 <line:1269:1, line:1270:58> line:1269:62 struct remove_all_extents definition
| |   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
| |   | |-TemplateTypeParmDecl 0x7fa332828a78 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fa332828af8 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Np
| |   | |-TypeVisibilityAttr 0x7fa332828e58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fa332828f90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1269:34, col:62> col:62 implicit struct remove_all_extents
| |   | `-TypedefDecl 0x7fa332829150 <line:1270:6, col:53> col:53 type 'typename remove_all_extents<_Tp>::type'
| |   |   `-DependentNameType 0x7fa3328290e0 'typename remove_all_extents<_Tp>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fa3328293d0 <line:1273:1, col:85> col:22 remove_all_extents_t
| |   | |-TemplateTypeParmDecl 0x7fa3328291c8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fa332829370 <col:22, col:85> col:28 remove_all_extents_t 'typename remove_all_extents<_Tp>::type'
| |   |   `-DependentNameType 0x7fa332829300 'typename remove_all_extents<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fa3328295a8 <line:1278:1, line:1281:1> line:1279:8 __decay
| |   | |-TemplateTypeParmDecl 0x7fa332829420 <line:1278:11, col:17> col:17 referenced class depth 0 index 0 _Up
| |   | |-NonTypeTemplateParmDecl 0x7fa332829498 <col:22> col:26 '_Bool' depth 0 index 1
| |   | `-CXXRecordDecl 0x7fa332829510 <line:1279:1, line:1281:1> line:1279:8 struct __decay definition
| |   |   |-CXXRecordDecl 0x7fa332837490 <col:1, col:8> col:8 implicit struct __decay
| |   |   `-TypedefDecl 0x7fa332837650 <line:1280:5, col:43> col:43 type 'typename remove_cv<_Up>::type'
| |   |     `-DependentNameType 0x7fa3328375e0 'typename remove_cv<_Up>::type' dependent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa3328378b0 <line:1283:1, line:1297:1> line:1284:8 struct __decay definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fa3328376c8 <line:1283:11, col:17> col:17 referenced class depth 0 index 0 _Up
| |   | |-CXXRecordDecl 0x7fa332837b40 <line:1284:1, col:8> col:8 implicit struct __decay
| |   | |-AccessSpecDecl 0x7fa332837bd8 <line:1285:1, col:7> col:1 public
| |   | `-TypedefDecl 0x7fa332838670 <line:1286:5, line:1296:30> col:30 type 'typename conditional<is_array<_Up>::value, typename remove_extent<_Up>::type *, typename conditional<is_function<_Up>::value, typename add_pointer<_Up>::type, typename remove_cv<_Up>::type>::type>::type'
| |   |   `-DependentNameType 0x7fa332838600 'typename conditional<is_array<_Up>::value, typename remove_extent<_Up>::type *, typename conditional<is_function<_Up>::value, typename add_pointer<_Up>::type, typename remove_cv<_Up>::type>::type>::type' dependent
| |   |-ClassTemplateDecl 0x7fa332838838 <line:1299:1, line:1306:1> line:1300:29 decay
| |   | |-TemplateTypeParmDecl 0x7fa3328386e8 <line:1299:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa3328387a0 <line:1300:1, line:1306:1> line:1300:29 struct decay definition
| |   |   |-TypeVisibilityAttr 0x7fa332838ab0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fa332838af8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1300:1, col:29> col:29 implicit struct decay
| |   |   |-AccessSpecDecl 0x7fa332838b90 <line:1302:1, col:8> col:1 private
| |   |   |-TypedefDecl 0x7fa332838ce0 <line:1303:5, col:50> col:50 referenced _Up 'typename remove_reference<_Tp>::type'
| |   |   | `-DependentNameType 0x7fa332838c70 'typename remove_reference<_Tp>::type' dependent
| |   |   |-AccessSpecDecl 0x7fa332838d38 <line:1304:1, col:7> col:1 public
| |   |   `-TypedefDecl 0x7fa332839100 <line:1305:5, col:73> col:73 type 'typename __decay<_Up, __is_referenceable<_Up>::value>::type'
| |   |     `-DependentNameType 0x7fa332839090 'typename __decay<_Up, __is_referenceable<_Up>::value>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fa332839400 <line:1309:1, col:59> col:22 decay_t
| |   | |-TemplateTypeParmDecl 0x7fa332839178 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fa332839360 <col:22, col:59> col:28 decay_t 'typename decay<_Tp>::type'
| |   |   `-DependentNameType 0x7fa3328392f0 'typename decay<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fa332839598 <line:1314:1, line:1315:59> line:1314:50 is_abstract
| |   | |-TemplateTypeParmDecl 0x7fa332839450 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa332839500 <col:22, line:1315:59> line:1314:50 struct is_abstract definition
| |   |   |-public 'integral_constant<_Bool, __is_abstract(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fa332839810 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fa3328399f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1314:22, col:50> col:50 implicit struct is_abstract
| |   |-ClassTemplateDecl 0x7fa332839bf8 <line:1325:1, line:1326:70> col:1 __libcpp_is_final
| |   | |-TemplateTypeParmDecl 0x7fa332839ab0 <line:1325:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa332839b60 <col:22, line:1326:70> col:1 struct __libcpp_is_final definition
| |   |   |-public 'integral_constant<_Bool, __is_final(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fa332839e70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fa33283a058 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1325:22, line:1326:1> col:1 implicit struct __libcpp_is_final
| |   |-ClassTemplateDecl 0x7fa33283a258 <line:1333:1, line:1334:61> col:1 is_final
| |   | |-TemplateTypeParmDecl 0x7fa33283a110 <line:1333:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa33283a1c0 <col:22, line:1334:61> col:1 struct is_final definition
| |   |   |-public 'integral_constant<_Bool, __is_final(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fa33283a4e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fa33283a668 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1333:22, line:1334:1> col:1 implicit struct is_final
| |   |-ClassTemplateDecl 0x7fa33283a8e0 <line:1359:1, line:1361:63> line:1360:29 is_base_of
| |   | |-TemplateTypeParmDecl 0x7fa33283a720 <line:1359:11, col:17> col:17 referenced class depth 0 index 0 _Bp
| |   | |-TemplateTypeParmDecl 0x7fa33283a788 <col:22, col:28> col:28 referenced class depth 0 index 1 _Dp
| |   | `-CXXRecordDecl 0x7fa33283a848 <line:1360:1, line:1361:63> line:1360:29 struct is_base_of definition
| |   |   |-public 'integral_constant<_Bool, __is_base_of(_Bp, _Dp)>'
| |   |   |-TypeVisibilityAttr 0x7fa33283ab80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fa33283ad78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1360:1, col:29> col:29 implicit struct is_base_of
| |   |-ClassTemplateDecl 0x7fa33283aff0 <line:1399:1, line:1401:65> line:1399:61 is_convertible
| |   | |-TemplateTypeParmDecl 0x7fa33283ae30 <col:11, col:17> col:17 referenced class depth 0 index 0 _T1
| |   | |-TemplateTypeParmDecl 0x7fa33283ae98 <col:22, col:28> col:28 referenced class depth 0 index 1 _T2
| |   | `-CXXRecordDecl 0x7fa33283af58 <col:33, line:1401:65> line:1399:61 struct is_convertible definition
| |   |   |-public 'integral_constant<_Bool, __is_convertible_to(_T1, _T2) && !is_abstract<_T2>::value>'
| |   |   |-TypeVisibilityAttr 0x7fa33283b290 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fa33283c648 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1399:33, col:61> col:61 implicit struct is_convertible
| |   |-ClassTemplateDecl 0x7fa33283c848 <line:1489:1, line:1491:56> line:1490:29 is_empty
| |   | |-TemplateTypeParmDecl 0x7fa33283c700 <line:1489:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa33283c7b0 <line:1490:1, line:1491:56> line:1490:29 struct is_empty definition
| |   |   |-public 'integral_constant<_Bool, __is_empty(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fa33283cac0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fa33283cca8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1490:1, col:29> col:29 implicit struct is_empty
| |   |-ClassTemplateDecl 0x7fa33283cea8 <line:1525:1, line:1527:62> line:1526:29 is_polymorphic
| |   | |-TemplateTypeParmDecl 0x7fa33283cd60 <line:1525:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa33283ce10 <line:1526:1, line:1527:62> line:1526:29 struct is_polymorphic definition
| |   |   |-public 'integral_constant<_Bool, __is_polymorphic(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fa33283d120 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fa33283d308 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1526:1, col:29> col:29 implicit struct is_polymorphic
| |   |-ClassTemplateDecl 0x7fa33283d508 <line:1550:1, line:1551:70> line:1550:50 has_virtual_destructor
| |   | |-TemplateTypeParmDecl 0x7fa33283d3c0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa33283d470 <col:22, line:1551:70> line:1550:50 struct has_virtual_destructor definition
| |   |   |-public 'integral_constant<_Bool, __has_virtual_destructor(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fa33283d780 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fa33283d968 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1550:22, col:50> col:50 implicit struct has_virtual_destructor
| |   |-ClassTemplateDecl 0x7fa33283db68 <line:1567:1, line:1568:59> line:1567:50 alignment_of
| |   | |-TemplateTypeParmDecl 0x7fa33283da20 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa33283dad0 <col:22, line:1568:59> line:1567:50 struct alignment_of definition
| |   |   |-public 'integral_constant<size_t, __alignof(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fa33283dde0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fa33283dfc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1567:22, col:50> col:50 implicit struct alignment_of
| |   |-ClassTemplateDecl 0x7fa33283e210 <line:1577:1, line:1582:1> line:1578:8 __type_list
| |   | |-TemplateTypeParmDecl 0x7fa33283e080 <line:1577:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-TemplateTypeParmDecl 0x7fa33283e0e8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Tp
| |   | |-CXXRecordDecl 0x7fa33283e178 <line:1578:1, line:1582:1> line:1578:8 struct __type_list definition
| |   | | |-CXXRecordDecl 0x7fa33283e4f0 <col:1, col:8> col:8 implicit struct __type_list
| |   | | |-TypedefDecl 0x7fa33283e598 <line:1580:5, col:17> col:17 _Head '_Hp'
| |   | | | `-TemplateTypeParmType 0x7fa33283e0c0 '_Hp' dependent depth 0 index 0
| |   | | |   `-TemplateTypeParm 0x7fa33283e080 '_Hp'
| |   | | `-TypedefDecl 0x7fa33283e600 <line:1581:5, col:17> col:17 _Tail '_Tp'
| |   | |   `-TemplateTypeParmType 0x7fa33283e130 '_Tp' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fa33283e0e8 '_Tp'
| |   | |-ClassTemplateSpecializationDecl 0x7fa332842318 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<int *>'
| |   | | `-TemplateArgument type 'struct std::__1::__nat'
| |   | |-ClassTemplateSpecializationDecl 0x7fa332842530 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<struct std::__1::__struct_double4>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat>'
| |   | |-ClassTemplateSpecializationDecl 0x7fa332842740 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<struct std::__1::__struct_double>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> >'
| |   | |-ClassTemplateSpecializationDecl 0x7fa332842950 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<long double>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > >'
| |   | |-ClassTemplateSpecializationDecl 0x7fa332842c00 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<double>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > >'
| |   | |-ClassTemplateSpecializationDecl 0x7fa332842e10 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<unsigned long long>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > >'
| |   | |-ClassTemplateSpecializationDecl 0x7fa332843020 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<unsigned long>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > >'
| |   | |-ClassTemplateSpecializationDecl 0x7fa332843230 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<unsigned int>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<unsigned long>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > > >'
| |   | |-ClassTemplateSpecializationDecl 0x7fa332843440 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<unsigned short>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<unsigned int>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > > > >'
| |   | |-ClassTemplateSpecializationDecl 0x7fa332843650 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<unsigned char>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<unsigned short>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned int>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > > > > >'
| |   | |-ClassTemplateSpecializationDecl 0x7fa332861ae8 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type '__int128'
| |   | | `-TemplateArgument type 'struct std::__1::__nat'
| |   | |-ClassTemplateSpecializationDecl 0x7fa332861d00 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'long long'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<__int128, struct std::__1::__nat>'
| |   | |-ClassTemplateSpecializationDecl 0x7fa332861f10 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'long'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> >'
| |   | |-ClassTemplateSpecializationDecl 0x7fa332862120 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'int'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > >'
| |   | |-ClassTemplateSpecializationDecl 0x7fa332862330 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'short'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > >'
| |   | |-ClassTemplateSpecializationDecl 0x7fa332862540 <line:1577:1, line:1582:1> line:1578:8 struct __type_list definition
| |   | | |-TemplateArgument type 'signed char'
| |   | | |-TemplateArgument type 'struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > >'
| |   | | |-CXXRecordDecl 0x7fa33286a888 prev 0x7fa332862540 <col:1, col:8> col:8 implicit struct __type_list
| |   | | |-TypedefDecl 0x7fa33286a958 <line:1580:5, col:17> col:17 referenced _Head 'signed char':'signed char'
| |   | | | `-SubstTemplateTypeParmType 0x7fa33286a920 'signed char' sugar
| |   | | |   |-TemplateTypeParmType 0x7fa33283e0c0 '_Hp' dependent depth 0 index 0
| |   | | |   | `-TemplateTypeParm 0x7fa33283e080 '_Hp'
| |   | | |   `-BuiltinType 0x7fa332832780 'signed char'
| |   | | `-TypedefDecl 0x7fa33286a9e8 <line:1581:5, col:17> col:17 _Tail 'struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > >':'struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > >'
| |   | |   `-SubstTemplateTypeParmType 0x7fa33286a9b0 'struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > >' sugar
| |   | |     |-TemplateTypeParmType 0x7fa33283e130 '_Tp' dependent depth 0 index 1
| |   | |     | `-TemplateTypeParm 0x7fa33283e0e8 '_Tp'
| |   | |     `-RecordType 0x7fa332862430 'struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > >'
| |   | |       `-ClassTemplateSpecialization 0x7fa332862330 '__type_list'
| |   | |-ClassTemplateSpecializationDecl 0x7fa332862840 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'unsigned __int128'
| |   | | `-TemplateArgument type 'struct std::__1::__nat'
| |   | |-ClassTemplateSpecializationDecl 0x7fa332862a50 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'unsigned long long'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat>'
| |   | |-ClassTemplateSpecializationDecl 0x7fa332862c60 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'unsigned long'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> >'
| |   | |-ClassTemplateSpecializationDecl 0x7fa332862e70 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'unsigned int'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > >'
| |   | |-ClassTemplateSpecializationDecl 0x7fa332863090 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'unsigned short'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > >'
| |   | `-ClassTemplateSpecializationDecl 0x7fa3328632a0 <line:1577:1, line:1582:1> line:1578:8 struct __type_list definition
| |   |   |-TemplateArgument type 'unsigned char'
| |   |   |-TemplateArgument type 'struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > >'
| |   |   |-CXXRecordDecl 0x7fa333803368 prev 0x7fa3328632a0 <col:1, col:8> col:8 implicit struct __type_list
| |   |   |-TypedefDecl 0x7fa333803438 <line:1580:5, col:17> col:17 referenced _Head 'unsigned char':'unsigned char'
| |   |   | `-SubstTemplateTypeParmType 0x7fa333803400 'unsigned char' sugar
| |   |   |   |-TemplateTypeParmType 0x7fa33283e0c0 '_Hp' dependent depth 0 index 0
| |   |   |   | `-TemplateTypeParm 0x7fa33283e080 '_Hp'
| |   |   |   `-BuiltinType 0x7fa332832820 'unsigned char'
| |   |   `-TypedefDecl 0x7fa3338034c8 <line:1581:5, col:17> col:17 _Tail 'struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > >':'struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > >'
| |   |     `-SubstTemplateTypeParmType 0x7fa333803490 'struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > >' sugar
| |   |       |-TemplateTypeParmType 0x7fa33283e130 '_Tp' dependent depth 0 index 1
| |   |       | `-TemplateTypeParm 0x7fa33283e0e8 '_Tp'
| |   |       `-RecordType 0x7fa332863190 'struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > >'
| |   |         `-ClassTemplateSpecialization 0x7fa332863090 '__type_list'
| |   |-CXXRecordDecl 0x7fa33283e678 <line:1584:1, line:1592:1> line:1584:8 referenced struct __nat definition
| |   | |-CXXRecordDecl 0x7fa33283e798 <col:1, col:8> col:8 implicit referenced struct __nat
| |   | |-CXXConstructorDecl 0x7fa33283e898 <line:1587:5, col:20> col:5 __nat 'void (void)' delete trivial
| |   | |-CXXConstructorDecl 0x7fa33283ea40 <line:1588:5, col:32> col:5 __nat 'void (const struct std::__1::__nat &)' delete trivial
| |   | | `-ParmVarDecl 0x7fa33283e978 <col:11, col:22> col:23 'const struct std::__1::__nat &'
| |   | |-CXXMethodDecl 0x7fa33283ebf0 <line:1589:5, col:43> col:12 operator= 'struct std::__1::__nat &(const struct std::__1::__nat &)' delete trivial
| |   | | `-ParmVarDecl 0x7fa33283eb00 <col:22, col:33> col:34 'const struct std::__1::__nat &'
| |   | `-CXXDestructorDecl 0x7fa33283ece0 <line:1590:5, col:21> col:5 ~__nat 'void (void)' delete trivial noexcept-unevaluated 0x7fa33283ece0
| |   |-ClassTemplateDecl 0x7fa33283eed8 <line:1594:1, line:1599:1> line:1595:8 __align_type
| |   | |-TemplateTypeParmDecl 0x7fa33283edb8 <line:1594:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fa33283ee40 <line:1595:1, line:1599:1> line:1595:8 struct __align_type definition
| |   | | |-CXXRecordDecl 0x7fa33283f150 <col:1, col:8> col:8 implicit struct __align_type
| |   | | |-VarDecl 0x7fa33283f1f8 <line:1597:5, col:52> col:25 value 'const size_t':'const unsigned long' static cinit
| |   | | | `-DependentScopeDeclRefExpr 0x7fa33283f328 <col:33, col:52> '<dependent type>' lvalue
| |   | | `-TypedefDecl 0x7fa33283f378 <line:1598:5, col:17> col:17 type '_Tp'
| |   | |   `-TemplateTypeParmType 0x7fa33283ee00 '_Tp' dependent depth 0 index 0
| |   | |     `-TemplateTypeParm 0x7fa33283edb8 '_Tp'
| |   | |-ClassTemplateSpecializationDecl 0x7fa33283fd00 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
| |   | | `-TemplateArgument type 'unsigned char'
| |   | |-ClassTemplateSpecializationDecl 0x7fa33283fed0 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
| |   | | `-TemplateArgument type 'unsigned short'
| |   | |-ClassTemplateSpecializationDecl 0x7fa3328400a0 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
| |   | | `-TemplateArgument type 'unsigned int'
| |   | |-ClassTemplateSpecializationDecl 0x7fa332840270 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
| |   | | `-TemplateArgument type 'unsigned long'
| |   | |-ClassTemplateSpecializationDecl 0x7fa332840440 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
| |   | | `-TemplateArgument type 'unsigned long long'
| |   | |-ClassTemplateSpecializationDecl 0x7fa332840610 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
| |   | | `-TemplateArgument type 'double'
| |   | |-ClassTemplateSpecializationDecl 0x7fa332841c00 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
| |   | | `-TemplateArgument type 'long double'
| |   | |-ClassTemplateSpecializationDecl 0x7fa332841dc8 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
| |   | | `-TemplateArgument type 'struct std::__1::__struct_double'
| |   | |-ClassTemplateSpecializationDecl 0x7fa332841f88 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
| |   | | `-TemplateArgument type 'struct std::__1::__struct_double4'
| |   | `-ClassTemplateSpecializationDecl 0x7fa332842150 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
| |   |   `-TemplateArgument type 'int *'
| |   |-CXXRecordDecl 0x7fa33283f800 <line:1601:1, col:42> col:8 referenced struct __struct_double definition
| |   | |-CXXRecordDecl 0x7fa33283f928 <col:1, col:8> col:8 implicit struct __struct_double
| |   | `-FieldDecl 0x7fa33283f9d8 <col:25, col:37> col:37 __lx 'long double'
| |   |-CXXRecordDecl 0x7fa33283fa40 <line:1602:1, col:41> col:8 referenced struct __struct_double4 definition
| |   | |-CXXRecordDecl 0x7fa33283fb68 <col:1, col:8> col:8 implicit struct __struct_double4
| |   | `-FieldDecl 0x7fa33283fc80 <col:26, col:39> col:33 __lx 'double [4]'
| |   |-TypedefDecl 0x7fa332843860 <line:1604:1, line:1616:25> col:25 referenced __all_types '__type_list<__align_type<unsigned char>, __type_list<__align_type<unsigned short>, __type_list<__align_type<unsigned int>, __type_list<__align_type<unsigned long>, __type_list<__align_type<unsigned long long>, __type_list<__align_type<double>, __type_list<__align_type<long double>, __type_list<__align_type<struct std::__1::__struct_double>, __type_list<__align_type<struct std::__1::__struct_double4>, __type_list<__align_type<int *>, struct std::__1::__nat> > > > > > > > > >':'struct std::__1::__type_list<struct std::__1::__align_type<unsigned char>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned short>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned int>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > > > > > >'
| |   | `-TemplateSpecializationType 0x7fa332843770 '__type_list<__align_type<unsigned char>, __type_list<__align_type<unsigned short>, __type_list<__align_type<unsigned int>, __type_list<__align_type<unsigned long>, __type_list<__align_type<unsigned long long>, __type_list<__align_type<double>, __type_list<__align_type<long double>, __type_list<__align_type<struct std::__1::__struct_double>, __type_list<__align_type<struct std::__1::__struct_double4>, __type_list<__align_type<int *>, struct std::__1::__nat> > > > > > > > > >' sugar __type_list
| |   |   |-TemplateArgument type '__align_type<unsigned char>':'struct std::__1::__align_type<unsigned char>'
| |   |   |-TemplateArgument type '__type_list<__align_type<unsigned short>, __type_list<__align_type<unsigned int>, __type_list<__align_type<unsigned long>, __type_list<__align_type<unsigned long long>, __type_list<__align_type<double>, __type_list<__align_type<long double>, __type_list<__align_type<struct std::__1::__struct_double>, __type_list<__align_type<struct std::__1::__struct_double4>, __type_list<__align_type<int *>, struct std::__1::__nat> > > > > > > > >':'struct std::__1::__type_list<struct std::__1::__align_type<unsigned short>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned int>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > > > > >'
| |   |   `-RecordType 0x7fa332843750 'struct std::__1::__type_list<struct std::__1::__align_type<unsigned char>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned short>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned int>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > > > > > >'
| |   |     `-ClassTemplateSpecialization 0x7fa332843650 '__type_list'
| |   |-ClassTemplateDecl 0x7fa332843a48 <line:1618:1, col:44> col:44 __find_pod
| |   | |-TemplateTypeParmDecl 0x7fa3328438b8 <col:11, col:17> col:17 class depth 0 index 0 _TL
| |   | |-NonTypeTemplateParmDecl 0x7fa332843938 <col:22, col:29> col:29 'size_t':'unsigned long' depth 0 index 1 _Align
| |   | `-CXXRecordDecl 0x7fa3328439b0 <col:37, col:44> col:44 struct __find_pod
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa3328440b0 <line:1620:1, line:1628:1> line:1621:8 struct __find_pod definition
| |   | |-TemplateArgument type '__type_list<type-parameter-0-0, struct std::__1::__nat>'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fa332843f50 <col:44> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa332843d68 '_Align' 'size_t':'unsigned long'
| |   | |-TemplateTypeParmDecl 0x7fa332843ce8 <line:1620:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-NonTypeTemplateParmDecl 0x7fa332843d68 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Align
| |   | |-CXXRecordDecl 0x7fa332844380 <line:1621:1, col:8> col:8 implicit struct __find_pod
| |   | `-TypedefDecl 0x7fa3328447c0 <line:1623:5, line:1627:34> col:34 type 'typename conditional<_Align == _Hp::value, typename _Hp::type, void>::type'
| |   |   `-DependentNameType 0x7fa332844750 'typename conditional<_Align == _Hp::value, typename _Hp::type, void>::type' dependent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa332844c70 <line:1630:1, line:1638:1> line:1631:8 struct __find_pod definition
| |   | |-TemplateArgument type '__type_list<type-parameter-0-0, type-parameter-0-1>'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fa332844ac0 <col:42> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa332844928 '_Align' 'size_t':'unsigned long'
| |   | |-TemplateTypeParmDecl 0x7fa332844838 <line:1630:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-TemplateTypeParmDecl 0x7fa3328448a8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fa332844928 <col:33, col:40> col:40 referenced 'size_t':'unsigned long' depth 0 index 2 _Align
| |   | |-CXXRecordDecl 0x7fa332844f40 <line:1631:1, col:8> col:8 implicit struct __find_pod
| |   | `-TypedefDecl 0x7fa332845590 <line:1633:5, line:1637:34> col:34 type 'typename conditional<_Align == _Hp::value, typename _Hp::type, typename __find_pod<_Tp, _Align>::type>::type'
| |   |   `-DependentNameType 0x7fa332845520 'typename conditional<_Align == _Hp::value, typename _Hp::type, typename __find_pod<_Tp, _Align>::type>::type' dependent
| |   |-ClassTemplateDecl 0x7fa332845798 <line:1640:1, col:42> col:42 __find_max_align
| |   | |-TemplateTypeParmDecl 0x7fa332845608 <col:11, col:17> col:17 class depth 0 index 0 _TL
| |   | |-NonTypeTemplateParmDecl 0x7fa332845688 <col:22, col:29> col:29 'size_t':'unsigned long' depth 0 index 1 _Len
| |   | `-CXXRecordDecl 0x7fa332845700 <col:35, col:42> col:42 struct __find_max_align
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa332845d60 <line:1642:1, line:1643:104> col:8 struct __find_max_align definition
| |   | |-public 'integral_constant<size_t, _Hp::value>'
| |   | |-TemplateArgument type '__type_list<type-parameter-0-0, struct std::__1::__nat>'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fa332845c00 <col:50> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa332845a78 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateTypeParmDecl 0x7fa3328459f8 <line:1642:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-NonTypeTemplateParmDecl 0x7fa332845a78 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Len
| |   | `-CXXRecordDecl 0x7fa332846248 <line:1643:1, col:8> col:8 implicit struct __find_max_align
| |   |-ClassTemplateDecl 0x7fa3328464f8 <line:1645:1, line:1653:1> line:1646:8 __select_align
| |   | |-NonTypeTemplateParmDecl 0x7fa332846310 <line:1645:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-NonTypeTemplateParmDecl 0x7fa332846378 <col:24, col:31> col:31 referenced 'size_t':'unsigned long' depth 0 index 1 _A1
| |   | |-NonTypeTemplateParmDecl 0x7fa3328463e0 <col:36, col:43> col:43 referenced 'size_t':'unsigned long' depth 0 index 2 _A2
| |   | `-CXXRecordDecl 0x7fa332846460 <line:1646:1, line:1653:1> line:1646:8 struct __select_align definition
| |   |   |-CXXRecordDecl 0x7fa332846850 <col:1, col:8> col:8 implicit struct __select_align
| |   |   |-AccessSpecDecl 0x7fa3328468e8 <line:1648:1, col:8> col:1 private
| |   |   |-VarDecl 0x7fa332846920 <line:1649:5, col:51> col:25 referenced __min 'const size_t':'const unsigned long' static cinit
| |   |   | `-ConditionalOperator 0x7fa332846a48 <col:33, col:51> 'size_t':'unsigned long'
| |   |   |   |-BinaryOperator 0x7fa3328469d0 <col:33, col:39> '_Bool' '<'
| |   |   |   | |-DeclRefExpr 0x7fa332846980 <col:33> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa3328463e0 '_A2' 'size_t':'unsigned long'
| |   |   |   | `-DeclRefExpr 0x7fa3328469a8 <col:39> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa332846378 '_A1' 'size_t':'unsigned long'
| |   |   |   |-DeclRefExpr 0x7fa3328469f8 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa3328463e0 '_A2' 'size_t':'unsigned long'
| |   |   |   `-DeclRefExpr 0x7fa332846a20 <col:51> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa332846378 '_A1' 'size_t':'unsigned long'
| |   |   |-VarDecl 0x7fa332846a88 <line:1650:5, col:51> col:25 referenced __max 'const size_t':'const unsigned long' static cinit
| |   |   | `-ConditionalOperator 0x7fa332846bb0 <col:33, col:51> 'size_t':'unsigned long'
| |   |   |   |-BinaryOperator 0x7fa332846b38 <col:33, col:39> '_Bool' '<'
| |   |   |   | |-DeclRefExpr 0x7fa332846ae8 <col:33> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa332846378 '_A1' 'size_t':'unsigned long'
| |   |   |   | `-DeclRefExpr 0x7fa332846b10 <col:39> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa3328463e0 '_A2' 'size_t':'unsigned long'
| |   |   |   |-DeclRefExpr 0x7fa332846b60 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa3328463e0 '_A2' 'size_t':'unsigned long'
| |   |   |   `-DeclRefExpr 0x7fa332846b88 <col:51> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa332846378 '_A1' 'size_t':'unsigned long'
| |   |   |-AccessSpecDecl 0x7fa332847000 <line:1651:1, col:7> col:1 public
| |   |   `-VarDecl 0x7fa332847038 <line:1652:5, col:56> col:25 value 'const size_t':'const unsigned long' static cinit
| |   |     `-ImplicitCastExpr 0x7fa3328471a8 <col:33, col:56> 'size_t':'unsigned long' <LValueToRValue>
| |   |       `-ConditionalOperator 0x7fa332847178 <col:33, col:56> 'const size_t':'const unsigned long' lvalue
| |   |         |-BinaryOperator 0x7fa332847100 <col:33, col:40> '_Bool' '<'
| |   |         | |-DeclRefExpr 0x7fa332847098 <col:33> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa332846310 '_Len' 'size_t':'unsigned long'
| |   |         | `-ImplicitCastExpr 0x7fa3328470e8 <col:40> 'size_t':'unsigned long' <LValueToRValue>
| |   |         |   `-DeclRefExpr 0x7fa3328470c0 <col:40> 'const size_t':'const unsigned long' lvalue Var 0x7fa332846a88 '__max' 'const size_t':'const unsigned long'
| |   |         |-DeclRefExpr 0x7fa332847128 <col:48> 'const size_t':'const unsigned long' lvalue Var 0x7fa332846920 '__min' 'const size_t':'const unsigned long'
| |   |         `-DeclRefExpr 0x7fa332847150 <col:56> 'const size_t':'const unsigned long' lvalue Var 0x7fa332846a88 '__max' 'const size_t':'const unsigned long'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa3328475c0 <line:1655:1, line:1657:118> line:1656:8 struct __find_max_align definition
| |   | |-public 'integral_constant<size_t, __select_align<_Len, _Hp::value, __find_max_align<_Tp, _Len>::value>::value>'
| |   | |-TemplateArgument type '__type_list<type-parameter-0-0, type-parameter-0-1>'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fa332847460 <col:48> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa3328472c8 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateTypeParmDecl 0x7fa3328471e0 <line:1655:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-TemplateTypeParmDecl 0x7fa332847248 <col:22, col:28> col:28 referenced class depth 0 index 1 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fa3328472c8 <col:33, col:40> col:40 referenced 'size_t':'unsigned long' depth 0 index 2 _Len
| |   | `-CXXRecordDecl 0x7fa332847ed8 <line:1656:1, col:8> col:8 implicit struct __find_max_align
| |   |-ClassTemplateDecl 0x7fa332848338 <line:1659:1, line:1669:1> line:1660:29 aligned_storage
| |   | |-NonTypeTemplateParmDecl 0x7fa332847fa0 <line:1659:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-NonTypeTemplateParmDecl 0x7fa3328481f8 <col:24, col:77> col:31 referenced 'size_t':'unsigned long' depth 0 index 1 _Align
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fa3328481a8 <col:40, col:77> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fa3328482a0 <line:1660:1, line:1669:1> line:1660:29 struct aligned_storage definition
| |   |   |-TypeVisibilityAttr 0x7fa332848620 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fa332848668 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1660:1, col:29> col:29 implicit struct aligned_storage
| |   |   |-TypedefDecl 0x7fa332848920 <line:1662:5, col:60> col:60 referenced _Aligner 'typename __find_pod<__all_types, _Align>::type'
| |   |   | `-DependentNameType 0x7fa3328488b0 'typename __find_pod<__all_types, _Align>::type' dependent
| |   |   |-StaticAssertDecl 0x7fa332848bc0 <line:1663:5, col:48> col:5
| |   |   | |-UnaryOperator 0x7fa332848af8 <col:19, col:39> '<dependent type>' prefix '!'
| |   |   | | `-DependentScopeDeclRefExpr 0x7fa332848ab8 <col:20, col:39> '<dependent type>' lvalue
| |   |   | `-StringLiteral 0x7fa332848b98 <col:46> 'const char [1]' lvalue ""
| |   |   `-CXXRecordDecl 0x7fa332848bf8 <line:1664:5, line:1668:5> line:1664:11 union type definition
| |   |     |-CXXRecordDecl 0x7fa332848d18 <col:5, col:11> col:11 implicit union type
| |   |     |-FieldDecl 0x7fa332848dc0 <line:1666:9, col:18> col:18 __align 'std::__1::aligned_storage::_Aligner':'typename __find_pod<__all_types, _Align>::type'
| |   |     `-FieldDecl 0x7fa332849428 <line:1667:9, col:65> col:23 __data 'unsigned char [(_Len + _Align - 1) / _Align * _Align]'
| |   |-TypeAliasTemplateDecl 0x7fa332849930 <line:1672:1, line:1673:71> col:5 aligned_storage_t
| |   | |-NonTypeTemplateParmDecl 0x7fa3328494c0 <line:1672:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-NonTypeTemplateParmDecl 0x7fa332849688 <col:24, col:77> col:31 referenced 'size_t':'unsigned long' depth 0 index 1 _Align
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fa332849638 <col:40, col:77> '<dependent type>' lvalue
| |   | `-TypeAliasDecl 0x7fa3328498d0 <line:1673:5, col:71> col:11 aligned_storage_t 'typename aligned_storage<_Len, _Align>::type'
| |   |   `-DependentNameType 0x7fa332849860 'typename aligned_storage<_Len, _Align>::type' dependent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa332849bc0 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fa332849a30 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa332849990 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 1
| |   | |-NonTypeTemplateParmDecl 0x7fa332849990 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fa332849d28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fa332849e90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fa332849f48 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fa33284a068 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fa332849f28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1686:40> 'int' 1
| |   |   |-CXXRecordDecl 0x7fa33284a0b8 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fa33284a388 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 1 - 1) / 1 * 1]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa33284ba60 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fa33284b8d0 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa33284b830 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 2
| |   | |-NonTypeTemplateParmDecl 0x7fa33284b830 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fa33284bbc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fa33284bd30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fa33284bde8 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fa33284bf08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fa33284bdc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1687:40> 'int' 2
| |   |   |-CXXRecordDecl 0x7fa33284bf58 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fa33284c228 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 2 - 1) / 2 * 2]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa33284c4f0 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fa33284c360 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa33284c2c0 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 4
| |   | |-NonTypeTemplateParmDecl 0x7fa33284c2c0 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fa33284c658 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fa33284c800 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fa33284c8b8 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fa33284c9d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fa33284c898 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1688:40> 'int' 4
| |   |   |-CXXRecordDecl 0x7fa33284ca28 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fa33284ccf8 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 4 - 1) / 4 * 4]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa33284cfc0 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fa33284ce30 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa33284cd90 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 8
| |   | |-NonTypeTemplateParmDecl 0x7fa33284cd90 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fa33284d128 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fa33284d290 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fa33284d348 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fa33284d468 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fa33284d328 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1689:40> 'int' 8
| |   |   |-CXXRecordDecl 0x7fa33284d4b8 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fa33284d788 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 8 - 1) / 8 * 8]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa33284da60 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fa33284d8d0 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa33284d830 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 16
| |   | |-NonTypeTemplateParmDecl 0x7fa33284d830 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fa33284dbc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fa33284dd30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fa33284dde8 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fa33284df08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fa33284ddc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1690:40> 'int' 16
| |   |   |-CXXRecordDecl 0x7fa33284df58 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fa33284e228 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 16 - 1) / 16 * 16]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa33284e4f0 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fa33284e360 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa33284e2c0 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 32
| |   | |-NonTypeTemplateParmDecl 0x7fa33284e2c0 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fa33284e658 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fa33284e7c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fa33284e878 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fa33284e998 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fa33284e858 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1691:40> 'int' 32
| |   |   |-CXXRecordDecl 0x7fa33284e9e8 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fa33284ecb8 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 32 - 1) / 32 * 32]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa33284ef80 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fa33284edf0 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa33284ed50 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 64
| |   | |-NonTypeTemplateParmDecl 0x7fa33284ed50 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fa33284f0e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fa33284f250 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fa33284f308 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fa33284f428 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fa33284f2e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1692:40> 'int' 64
| |   |   |-CXXRecordDecl 0x7fa33284f478 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fa33284f748 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 64 - 1) / 64 * 64]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa33284fa30 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fa33284f8a0 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa33284f800 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 128
| |   | |-NonTypeTemplateParmDecl 0x7fa33284f800 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fa33284fb98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fa33284fd00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fa33284fdb8 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fa33284fed8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fa33284fd98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1693:40> 'int' 128
| |   |   |-CXXRecordDecl 0x7fa33284ff28 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fa3328501f8 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 128 - 1) / 128 * 128]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa3328504c0 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fa332850330 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa332850290 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 256
| |   | |-NonTypeTemplateParmDecl 0x7fa332850290 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fa332850628 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fa332850790 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fa332850848 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fa332850968 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fa332850828 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1694:40> 'int' 256
| |   |   |-CXXRecordDecl 0x7fa3328509b8 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fa332850c88 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 256 - 1) / 256 * 256]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa332850f50 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fa332850dc0 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa332850d20 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 512
| |   | |-NonTypeTemplateParmDecl 0x7fa332850d20 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fa3328510b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fa332851220 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fa3328512d8 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fa3328513f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fa3328512b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1695:40> 'int' 512
| |   |   |-CXXRecordDecl 0x7fa332851448 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fa332851718 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 512 - 1) / 512 * 512]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa332851a30 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fa3328518a0 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa332851800 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 1024
| |   | |-NonTypeTemplateParmDecl 0x7fa332851800 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fa332851b98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fa332851d00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fa332851db8 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fa332851ed8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fa332851d98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1696:40> 'int' 1024
| |   |   |-CXXRecordDecl 0x7fa332851f28 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fa3328521f8 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 1024 - 1) / 1024 * 1024]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa3328524c0 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fa332852330 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa332852290 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 2048
| |   | |-NonTypeTemplateParmDecl 0x7fa332852290 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fa332852628 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fa332852790 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fa332852848 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fa332852968 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fa332852828 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1697:40> 'int' 2048
| |   |   |-CXXRecordDecl 0x7fa3328529b8 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fa332852c88 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 2048 - 1) / 2048 * 2048]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa332852f50 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fa332852dc0 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa332852d20 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 4096
| |   | |-NonTypeTemplateParmDecl 0x7fa332852d20 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fa3328530b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fa332853220 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fa3328532d8 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fa3328533f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fa3328532b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1698:40> 'int' 4096
| |   |   |-CXXRecordDecl 0x7fa332853448 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fa332853718 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 4096 - 1) / 4096 * 4096]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa332853a30 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fa3328538a0 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa332853800 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 8192
| |   | |-NonTypeTemplateParmDecl 0x7fa332853800 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fa332853b98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fa332853d00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fa332853db8 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fa332853ed8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fa332853d98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1699:40> 'int' 8192
| |   |   |-CXXRecordDecl 0x7fa332853f28 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fa3328541f8 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 8192 - 1) / 8192 * 8192]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa3328544c0 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fa332854330 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa332854290 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 16384
| |   | |-NonTypeTemplateParmDecl 0x7fa332854290 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fa332854628 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fa332854790 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fa332854848 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fa332854968 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fa332854828 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1702:40> 'int' 16384
| |   |   |-CXXRecordDecl 0x7fa3328549b8 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fa332854c88 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 16384 - 1) / 16384 * 16384]'
| |   |-ClassTemplateDecl 0x7fa332854e98 <line:1711:1, line:1712:8> col:8 __static_max
| |   | |-NonTypeTemplateParmDecl 0x7fa332854d20 <line:1711:11, col:18> col:18 'size_t':'unsigned long' depth 0 index 0 _I0
| |   | |-NonTypeTemplateParmDecl 0x7fa332854d88 <col:23, col:33> col:33 'size_t':'unsigned long' depth 0 index 1 ... _In
| |   | `-CXXRecordDecl 0x7fa332854e00 <line:1712:1, col:8> col:8 struct __static_max
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa332855310 <line:1714:1, line:1718:1> line:1715:8 struct __static_max definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fa3328551e8 <col:21> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa332855178 '_I0' 'size_t':'unsigned long'
| |   | |-TemplateArgument pack
| |   | |-NonTypeTemplateParmDecl 0x7fa332855178 <line:1714:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _I0
| |   | |-CXXRecordDecl 0x7fa3328555a0 <line:1715:1, col:8> col:8 implicit struct __static_max
| |   | `-VarDecl 0x7fa332855648 <line:1717:5, col:33> col:25 value 'const size_t':'const unsigned long' static cinit
| |   |   `-DeclRefExpr 0x7fa3328556a8 <col:33> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa332855178 '_I0' 'size_t':'unsigned long'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa332855ae0 <line:1720:1, line:1725:1> line:1721:8 struct __static_max definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fa332855880 <col:21> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa332855700 '_I0' 'size_t':'unsigned long'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument expr
| |   | | | `-DeclRefExpr 0x7fa3328558a8 <col:26> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa332855768 '_I1' 'size_t':'unsigned long'
| |   | | `-TemplateArgument expr
| |   | |   `-PackExpansionExpr 0x7fa3328558f8 <col:31, col:34> '<dependent type>'
| |   | |     `-DeclRefExpr 0x7fa3328558d0 <col:31> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa332855800 '_In' 'size_t':'unsigned long'
| |   | |-NonTypeTemplateParmDecl 0x7fa332855700 <line:1720:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _I0
| |   | |-NonTypeTemplateParmDecl 0x7fa332855768 <col:23, col:30> col:30 referenced 'size_t':'unsigned long' depth 0 index 1 _I1
| |   | |-NonTypeTemplateParmDecl 0x7fa332855800 <col:35, col:45> col:45 referenced 'size_t':'unsigned long' depth 0 index 2 ... _In
| |   | |-CXXRecordDecl 0x7fa332855de0 <line:1721:1, col:8> col:8 implicit struct __static_max
| |   | `-VarDecl 0x7fa332855e88 <line:1723:5, line:1724:73> line:1723:25 value 'const size_t':'const unsigned long' static cinit
| |   |   `-ConditionalOperator 0x7fa3328563b8 <col:33, line:1724:73> '<dependent type>'
| |   |     |-BinaryOperator 0x7fa332855f38 <line:1723:33, col:40> '_Bool' '>='
| |   |     | |-DeclRefExpr 0x7fa332855ee8 <col:33> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa332855700 '_I0' 'size_t':'unsigned long'
| |   |     | `-DeclRefExpr 0x7fa332855f10 <col:40> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa332855768 '_I1' 'size_t':'unsigned long'
| |   |     |-DependentScopeDeclRefExpr 0x7fa332856148 <col:46, col:73> '<dependent type>' lvalue
| |   |     `-DependentScopeDeclRefExpr 0x7fa332856378 <line:1724:46, col:73> '<dependent type>' lvalue
| |   |-ClassTemplateDecl 0x7fa332856638 <line:1727:1, line:1735:1> line:1728:8 aligned_union
| |   | |-NonTypeTemplateParmDecl 0x7fa332856418 <line:1727:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TemplateTypeParmDecl 0x7fa332856470 <col:24, col:30> col:30 referenced class depth 0 index 1 _Type0
| |   | |-TemplateTypeParmDecl 0x7fa3328564d8 <col:38, col:47> col:47 referenced class depth 0 index 2 ... _Types
| |   | `-CXXRecordDecl 0x7fa3328565a0 <line:1728:1, line:1735:1> line:1728:8 struct aligned_union definition
| |   |   |-CXXRecordDecl 0x7fa3328569d0 <col:1, col:8> col:8 implicit struct aligned_union
| |   |   |-VarDecl 0x7fa332856a78 <line:1730:5, line:1731:81> line:1730:25 referenced alignment_value 'const size_t':'const unsigned long' static cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fa332856cd8 <col:43, line:1731:81> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fa332856d28 <line:1732:5, line:1733:66> line:1732:25 referenced __len 'const size_t':'const unsigned long' static cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fa332857008 <col:33, line:1733:66> '<dependent type>' lvalue
| |   |   `-TypedefDecl 0x7fa3328572b0 <line:1734:5, col:68> col:68 type 'typename aligned_storage<__len, alignment_value>::type'
| |   |     `-DependentNameType 0x7fa332857240 'typename aligned_storage<__len, alignment_value>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fa3328576d0 <line:1738:1, col:106> col:41 aligned_union_t
| |   | |-NonTypeTemplateParmDecl 0x7fa332857338 <col:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TemplateTypeParmDecl 0x7fa332857390 <col:24, col:33> col:33 referenced class depth 0 index 1 ... _Types
| |   | `-TypeAliasDecl 0x7fa332857670 <col:41, col:106> col:47 aligned_union_t 'typename aligned_union<_Len, _Types...>::type'
| |   |   `-DependentNameType 0x7fa332857600 'typename aligned_union<_Len, _Types...>::type' dependent
| |   |-ClassTemplateDecl 0x7fa332858698 <line:1743:1, line:1760:1> line:1744:8 __numeric_type
| |   | |-TemplateTypeParmDecl 0x7fa332857720 <line:1743:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fa332858600 <line:1744:1, line:1760:1> line:1744:8 struct __numeric_type definition
| |   | | |-CXXRecordDecl 0x7fa332858910 <col:1, col:8> col:8 implicit struct __numeric_type
| |   | | |-CXXMethodDecl 0x7fa3328589f8 <line:1746:4, col:26> col:16 __test 'void (...)' static
| |   | | |-CXXMethodDecl 0x7fa332858b38 <line:1747:4, col:29> col:17 __test 'float (float)' static
| |   | | | `-ParmVarDecl 0x7fa332858aa8 <col:24> col:29 'float'
| |   | | |-CXXMethodDecl 0x7fa332858cb8 <line:1748:4, col:29> col:18 __test 'double (char)' static
| |   | | | `-ParmVarDecl 0x7fa332858be8 <col:25> col:29 'char'
| |   | | |-CXXMethodDecl 0x7fa332858e38 <line:1749:4, col:28> col:18 __test 'double (int)' static
| |   | | | `-ParmVarDecl 0x7fa332858d70 <col:25> col:28 'int'
| |   | | |-CXXMethodDecl 0x7fa332858fb8 <line:1750:4, col:33> col:18 __test 'double (unsigned int)' static
| |   | | | `-ParmVarDecl 0x7fa332858ef0 <col:25> col:33 'unsigned int'
| |   | | |-CXXMethodDecl 0x7fa332859138 <line:1751:4, col:29> col:18 __test 'double (long)' static
| |   | | | `-ParmVarDecl 0x7fa332859070 <col:25> col:29 'long'
| |   | | |-CXXMethodDecl 0x7fa3328592b8 <line:1752:4, col:38> col:18 __test 'double (unsigned long)' static
| |   | | | `-ParmVarDecl 0x7fa3328591f0 <col:25, col:34> col:38 'unsigned long'
| |   | | |-CXXMethodDecl 0x7fa332859438 <line:1753:4, col:34> col:18 __test 'double (long long)' static
| |   | | | `-ParmVarDecl 0x7fa332859370 <col:25, col:30> col:34 'long long'
| |   | | |-CXXMethodDecl 0x7fa3328595b8 <line:1754:4, col:43> col:18 __test 'double (unsigned long long)' static
| |   | | | `-ParmVarDecl 0x7fa3328594f0 <col:25, col:39> col:43 'unsigned long long'
| |   | | |-CXXMethodDecl 0x7fa332859700 <line:1755:4, col:31> col:18 __test 'double (double)' static
| |   | | | `-ParmVarDecl 0x7fa332859670 <col:25> col:31 'double'
| |   | | |-CXXMethodDecl 0x7fa332859848 <line:1756:4, col:41> col:23 __test 'long double (long double)' static
| |   | | | `-ParmVarDecl 0x7fa3328597b8 <col:30, col:35> col:41 'long double'
| |   | | |-TypedefDecl 0x7fa332859b08 <line:1758:4, col:45> col:45 referenced type 'decltype(__test(declval<_Tp>()))'
| |   | | | `-DecltypeType 0x7fa332859ad0 'decltype(__test(declval<_Tp>()))' dependent
| |   | | |   `-CallExpr 0x7fa332859a60 <col:21, col:42> '<dependent type>'
| |   | | |     |-UnresolvedLookupExpr 0x7fa3328598e8 <col:21> '<dependent type>' lvalue (no ADL) = '__test' 0x7fa332859848 0x7fa332859700 0x7fa3328595b8 0x7fa332859438 0x7fa3328592b8 0x7fa332859138 0x7fa332858fb8 0x7fa332858e38 0x7fa332858cb8 0x7fa332858b38 0x7fa3328589f8
| |   | | |     `-CallExpr 0x7fa332859a38 <col:28, col:41> '<dependent type>'
| |   | | |       `-UnresolvedLookupExpr 0x7fa3328599a0 <col:28, col:39> '<dependent type>' lvalue (ADL) = 'declval' 0x7fa333159250
| |   | | `-VarDecl 0x7fa332859b70 <line:1759:4, col:52> col:22 value 'const _Bool' static cinit
| |   | |   `-UnaryOperator 0x7fa332859d98 <col:30, col:52> '<dependent type>' prefix '!'
| |   | |     `-DependentScopeDeclRefExpr 0x7fa332859d58 <col:31, col:52> '<dependent type>' lvalue
| |   | `-ClassTemplateSpecialization 0x7fa332859df8 '__numeric_type'
| |   |-ClassTemplateSpecializationDecl 0x7fa332859df8 <line:1762:1, line:1766:1> line:1763:8 struct __numeric_type definition
| |   | |-TemplateArgument type 'void'
| |   | |-CXXRecordDecl 0x7fa33285a020 <col:1, col:8> col:8 implicit struct __numeric_type
| |   | `-VarDecl 0x7fa33285a0c8 <line:1765:4, col:30> col:22 referenced value 'const _Bool' static cinit
| |   |   `-CXXBoolLiteralExpr 0x7fa33285a128 <col:30> '_Bool' true
| |   |-ClassTemplateDecl 0x7fa33285bca0 <line:1770:1, line:1778:1> line:1774:7 __promote_imp
| |   | |-TemplateTypeParmDecl 0x7fa33285a1b8 <line:1770:11, col:17> col:17 referenced class depth 0 index 0 _A1
| |   | |-TemplateTypeParmDecl 0x7fa33285a238 <col:22, col:34> col:28 referenced class depth 0 index 1 _A2
| |   | | `-TemplateArgument type 'void'
| |   | |-TemplateTypeParmDecl 0x7fa33285a2b8 <col:40, col:52> col:46 referenced class depth 0 index 2 _A3
| |   | | `-TemplateArgument type 'void'
| |   | |-NonTypeTemplateParmDecl 0x7fa33285bb80 <line:1771:11, line:1773:39> line:1771:16 '_Bool' depth 0 index 3
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7fa33285bb48 <col:18, line:1773:39> '<dependent type>' '&&'
| |   | |     |-BinaryOperator 0x7fa33285a598 <line:1771:18, line:1772:39> '<dependent type>' '&&'
| |   | |     | |-DependentScopeDeclRefExpr 0x7fa33285a3f8 <line:1771:18, col:39> '<dependent type>' lvalue
| |   | |     | `-DependentScopeDeclRefExpr 0x7fa33285a558 <line:1772:18, col:39> '<dependent type>' lvalue
| |   | |     `-DependentScopeDeclRefExpr 0x7fa33285bb08 <line:1773:18, col:39> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fa33285bc08 <line:1774:1, line:1778:1> line:1774:7 class __promote_imp definition
| |   |   |-CXXRecordDecl 0x7fa33285bfc0 <col:1, col:7> col:7 implicit class __promote_imp
| |   |   |-AccessSpecDecl 0x7fa33285c058 <line:1776:1, col:7> col:1 public
| |   |   `-VarDecl 0x7fa33285c090 <line:1777:5, col:31> col:23 value 'const _Bool' static cinit
| |   |     `-CXXBoolLiteralExpr 0x7fa33285c0f0 <col:31> '_Bool' false
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa33285c4e0 <line:1780:1, line:1790:1> line:1781:7 class __promote_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument type 'type-parameter-0-2'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fa33285c128 <line:1780:11, col:17> col:17 referenced class depth 0 index 0 _A1
| |   | |-TemplateTypeParmDecl 0x7fa33285c198 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| |   | |-TemplateTypeParmDecl 0x7fa33285c208 <col:33, col:39> col:39 referenced class depth 0 index 2 _A3
| |   | |-CXXRecordDecl 0x7fa33285c820 <line:1781:1, col:7> col:7 implicit class __promote_imp
| |   | |-AccessSpecDecl 0x7fa33285c8b8 <line:1783:1, col:8> col:1 private
| |   | |-TypedefDecl 0x7fa33285ce90 <line:1784:5, col:47> col:47 referenced __type1 'typename __promote_imp<_A1>::type'
| |   | | `-DependentNameType 0x7fa33285ce20 'typename __promote_imp<_A1>::type' dependent
| |   | |-TypedefDecl 0x7fa33285d440 <line:1785:5, col:47> col:47 referenced __type2 'typename __promote_imp<_A2>::type'
| |   | | `-DependentNameType 0x7fa33285d3d0 'typename __promote_imp<_A2>::type' dependent
| |   | |-TypedefDecl 0x7fa33285e800 <line:1786:5, col:47> col:47 referenced __type3 'typename __promote_imp<_A3>::type'
| |   | | `-DependentNameType 0x7fa33285d980 'typename __promote_imp<_A3>::type' dependent
| |   | |-AccessSpecDecl 0x7fa33285e858 <line:1787:1, col:7> col:1 public
| |   | |-TypedefDecl 0x7fa33285ea58 <line:1788:5, col:57> col:57 type 'decltype(std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type1() + std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type2() + std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type3())'
| |   | | `-DecltypeType 0x7fa33285ea20 'decltype(std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type1() + std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type2() + std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type3())' dependent
| |   | |   `-BinaryOperator 0x7fa33285e9b8 <col:22, col:54> '<dependent type>' '+'
| |   | |     |-BinaryOperator 0x7fa33285e938 <col:22, col:42> '<dependent type>' '+'
| |   | |     | |-CXXUnresolvedConstructExpr 0x7fa33285e8b0 <col:22, col:30> 'std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type1':'typename __promote_imp<_A1>::type'
| |   | |     | `-CXXUnresolvedConstructExpr 0x7fa33285e910 <col:34, col:42> 'std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type2':'typename __promote_imp<_A2>::type'
| |   | |     `-CXXUnresolvedConstructExpr 0x7fa33285e990 <col:46, col:54> 'std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type3':'typename __promote_imp<_A3>::type'
| |   | `-VarDecl 0x7fa33285eac0 <line:1789:5, col:31> col:23 value 'const _Bool' static cinit
| |   |   `-CXXBoolLiteralExpr 0x7fa33285eb20 <col:31> '_Bool' true
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa33285ee90 <line:1792:1, line:1801:1> line:1793:7 class __promote_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument type 'void'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fa33285eb58 <line:1792:11, col:17> col:17 referenced class depth 0 index 0 _A1
| |   | |-TemplateTypeParmDecl 0x7fa33285ebc8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| |   | |-CXXRecordDecl 0x7fa33285f1d0 <line:1793:1, col:7> col:7 implicit class __promote_imp
| |   | |-AccessSpecDecl 0x7fa33285f268 <line:1795:1, col:8> col:1 private
| |   | |-TypedefDecl 0x7fa33285f6c0 <line:1796:5, col:47> col:47 referenced __type1 'typename __promote_imp<_A1>::type'
| |   | | `-DependentNameType 0x7fa33285f650 'typename __promote_imp<_A1>::type' dependent
| |   | |-TypedefDecl 0x7fa33285fb50 <line:1797:5, col:47> col:47 referenced __type2 'typename __promote_imp<_A2>::type'
| |   | | `-DependentNameType 0x7fa33285fae0 'typename __promote_imp<_A2>::type' dependent
| |   | |-AccessSpecDecl 0x7fa33285fba8 <line:1798:1, col:7> col:1 public
| |   | |-TypedefDecl 0x7fa33285fd28 <line:1799:5, col:45> col:45 type 'decltype(std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, void, true>::__type1() + std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, void, true>::__type2())'
| |   | | `-DecltypeType 0x7fa33285fcf0 'decltype(std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, void, true>::__type1() + std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, void, true>::__type2())' dependent
| |   | |   `-BinaryOperator 0x7fa33285fc88 <col:22, col:42> '<dependent type>' '+'
| |   | |     |-CXXUnresolvedConstructExpr 0x7fa33285fc00 <col:22, col:30> 'std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, void, true>::__type1':'typename __promote_imp<_A1>::type'
| |   | |     `-CXXUnresolvedConstructExpr 0x7fa33285fc60 <col:34, col:42> 'std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, void, true>::__type2':'typename __promote_imp<_A2>::type'
| |   | `-VarDecl 0x7fa33285fd90 <line:1800:5, col:31> col:23 value 'const _Bool' static cinit
| |   |   `-CXXBoolLiteralExpr 0x7fa33285fdf0 <col:31> '_Bool' true
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa3328600f0 <line:1803:1, line:1809:1> line:1804:7 class __promote_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'void'
| |   | |-TemplateArgument type 'void'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fa33285fe28 <line:1803:11, col:17> col:17 referenced class depth 0 index 0 _A1
| |   | |-CXXRecordDecl 0x7fa332860430 <line:1804:1, col:7> col:7 implicit class __promote_imp
| |   | |-AccessSpecDecl 0x7fa3328604c8 <line:1806:1, col:7> col:1 public
| |   | |-TypedefDecl 0x7fa332860640 <line:1807:5, col:48> col:48 type 'typename __numeric_type<_A1>::type'
| |   | | `-DependentNameType 0x7fa3328605d0 'typename __numeric_type<_A1>::type' dependent
| |   | `-VarDecl 0x7fa3328606a8 <line:1808:5, col:31> col:23 value 'const _Bool' static cinit
| |   |   `-CXXBoolLiteralExpr 0x7fa332860708 <col:31> '_Bool' true
| |   |-ClassTemplateDecl 0x7fa332861168 <line:1811:1, line:1812:56> col:7 __promote
| |   | |-TemplateTypeParmDecl 0x7fa332860740 <line:1811:11, col:17> col:17 referenced class depth 0 index 0 _A1
| |   | |-TemplateTypeParmDecl 0x7fa3328607b8 <col:22, col:34> col:28 referenced class depth 0 index 1 _A2
| |   | | `-TemplateArgument type 'void'
| |   | |-TemplateTypeParmDecl 0x7fa332861038 <col:40, col:52> col:46 referenced class depth 0 index 2 _A3
| |   | | `-TemplateArgument type 'void'
| |   | `-CXXRecordDecl 0x7fa3328610d0 <line:1812:1, col:56> col:7 class __promote definition
| |   |   |-public '__promote_imp<_A1, _A2, _A3>'
| |   |   `-CXXRecordDecl 0x7fa332861998 <col:1, col:7> col:7 implicit class __promote
| |   |-TypedefDecl 0x7fa332862750 <line:1816:1, line:1829:15> col:15 referenced __signed_types '__type_list<signed char, __type_list<short, __type_list<int, __type_list<long, __type_list<long long, __type_list<__int128_t, struct std::__1::__nat> > > > > >':'struct std::__1::__type_list<signed char, struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > > >'
| |   | `-TemplateSpecializationType 0x7fa332862660 '__type_list<signed char, __type_list<short, __type_list<int, __type_list<long, __type_list<long long, __type_list<__int128_t, struct std::__1::__nat> > > > > >' sugar __type_list
| |   |   |-TemplateArgument type 'signed char'
| |   |   |-TemplateArgument type '__type_list<short, __type_list<int, __type_list<long, __type_list<long long, __type_list<__int128_t, struct std::__1::__nat> > > > >':'struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > >'
| |   |   `-RecordType 0x7fa332862640 'struct std::__1::__type_list<signed char, struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > > >'
| |   |     `-ClassTemplateSpecialization 0x7fa332862540 '__type_list'
| |   |-TypedefDecl 0x7fa3328634b0 <line:1831:1, line:1844:15> col:15 referenced __unsigned_types '__type_list<unsigned char, __type_list<unsigned short, __type_list<unsigned int, __type_list<unsigned long, __type_list<unsigned long long, __type_list<__uint128_t, struct std::__1::__nat> > > > > >':'struct std::__1::__type_list<unsigned char, struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > > >'
| |   | `-TemplateSpecializationType 0x7fa3328633c0 '__type_list<unsigned char, __type_list<unsigned short, __type_list<unsigned int, __type_list<unsigned long, __type_list<unsigned long long, __type_list<__uint128_t, struct std::__1::__nat> > > > > >' sugar __type_list
| |   |   |-TemplateArgument type 'unsigned char'
| |   |   |-TemplateArgument type '__type_list<unsigned short, __type_list<unsigned int, __type_list<unsigned long, __type_list<unsigned long long, __type_list<__uint128_t, struct std::__1::__nat> > > > >':'struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > >'
| |   |   `-RecordType 0x7fa3328633a0 'struct std::__1::__type_list<unsigned char, struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > > >'
| |   |     `-ClassTemplateSpecialization 0x7fa3328632a0 '__type_list'
| |   |-ClassTemplateDecl 0x7fa332863850 <line:1846:1, col:100> col:100 __find_first
| |   | |-TemplateTypeParmDecl 0x7fa332863508 <col:11, col:17> col:17 class depth 0 index 0 _TypeList
| |   | |-NonTypeTemplateParmDecl 0x7fa332863588 <col:28, col:35> col:35 referenced 'size_t':'unsigned long' depth 0 index 1 _Size
| |   | |-NonTypeTemplateParmDecl 0x7fa332863738 <col:42, col:90> col:47 '_Bool' depth 0 index 2
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7fa332863700 <col:49, col:90> '_Bool' '<='
| |   | |     |-DeclRefExpr 0x7fa3328635e0 <col:49> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa332863588 '_Size' 'size_t':'unsigned long'
| |   | |     `-UnaryExprOrTypeTraitExpr 0x7fa3328636e0 <col:58, col:90> 'unsigned long' sizeof 'typename _TypeList::_Head'
| |   | `-CXXRecordDecl 0x7fa3328637b8 <col:93, col:100> col:100 struct __find_first
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa332863f78 <line:1848:1, line:1852:1> line:1849:8 struct __find_first definition
| |   | |-TemplateArgument type '__type_list<type-parameter-0-0, type-parameter-0-1>'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fa332863da0 <col:44> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa332863c08 '_Size' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fa332863b18 <line:1848:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-TemplateTypeParmDecl 0x7fa332863b88 <col:22, col:28> col:28 referenced class depth 0 index 1 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fa332863c08 <col:33, col:40> col:40 referenced 'size_t':'unsigned long' depth 0 index 2 _Size
| |   | |-CXXRecordDecl 0x7fa3328642b0 <line:1849:1, col:8> col:8 implicit struct __find_first
| |   | `-TypedefDecl 0x7fa332864358 <line:1851:5, col:17> col:17 type '_Hp'
| |   |   `-TemplateTypeParmType 0x7fa332863b60 '_Hp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fa332863b18 '_Hp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa332864828 <line:1854:1, line:1858:1> line:1855:8 struct __find_first definition
| |   | |-TemplateArgument type '__type_list<type-parameter-0-0, type-parameter-0-1>'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fa332864650 <col:44> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fa3328644b8 '_Size' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fa3328643d0 <line:1854:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-TemplateTypeParmDecl 0x7fa332864438 <col:22, col:28> col:28 referenced class depth 0 index 1 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fa3328644b8 <col:33, col:40> col:40 referenced 'size_t':'unsigned long' depth 0 index 2 _Size
| |   | |-CXXRecordDecl 0x7fa332864b60 <line:1855:1, col:8> col:8 implicit struct __find_first
| |   | `-TypedefDecl 0x7fa332865600 <line:1857:5, col:53> col:53 type 'typename __find_first<_Tp, _Size>::type'
| |   |   `-DependentNameType 0x7fa332864f40 'typename __find_first<_Tp, _Size>::type' dependent
| |   |-ClassTemplateDecl 0x7fa332865dc8 <line:1860:1, line:1865:1> line:1862:8 __apply_cv
| |   | |-TemplateTypeParmDecl 0x7fa332865678 <line:1860:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fa3328656e8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-NonTypeTemplateParmDecl 0x7fa3328659d8 <col:33, col:88> col:38 '_Bool' depth 0 index 2
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fa332865988 <col:40, col:88> '<dependent type>' lvalue
| |   | |-NonTypeTemplateParmDecl 0x7fa332865ca8 <line:1861:30, col:88> col:35 '_Bool' depth 0 index 3
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fa332865c58 <col:37, col:88> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fa332865d30 <line:1862:1, line:1865:1> line:1862:8 struct __apply_cv definition
| |   |   |-CXXRecordDecl 0x7fa332866110 <col:1, col:8> col:8 implicit struct __apply_cv
| |   |   `-TypedefDecl 0x7fa3328661b8 <line:1864:5, col:17> col:17 type '_Up'
| |   |     `-TemplateTypeParmType 0x7fa332865730 '_Up' dependent depth 0 index 1
| |   |       `-TemplateTypeParm 0x7fa3328656e8 '_Up'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa332866570 <line:1867:1, line:1871:1> line:1868:8 struct __apply_cv definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fa332866230 <line:1867:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fa332866298 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7fa3328668c0 <line:1868:1, col:8> col:8 implicit struct __apply_cv
| |   | `-TypedefDecl 0x7fa332866968 <line:1870:5, col:23> col:23 type 'const _Up'
| |   |   `-QualType 0x7fa3328662e1 'const _Up' const
| |   |     `-TemplateTypeParmType 0x7fa3328662e0 '_Up' dependent depth 0 index 1
| |   |       `-TemplateTypeParm 0x7fa332866298 '_Up'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa332866d20 <line:1873:1, line:1877:1> line:1874:8 struct __apply_cv definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fa3328669e0 <line:1873:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fa332866a48 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7fa332867070 <line:1874:1, col:8> col:8 implicit struct __apply_cv
| |   | `-TypedefDecl 0x7fa332867118 <line:1876:5, col:26> col:26 type 'volatile _Up'
| |   |   `-QualType 0x7fa332866a94 'volatile _Up' volatile
| |   |     `-TemplateTypeParmType 0x7fa332866a90 '_Up' dependent depth 0 index 1
| |   |       `-TemplateTypeParm 0x7fa332866a48 '_Up'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa3328674d0 <line:1879:1, line:1883:1> line:1880:8 struct __apply_cv definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fa332867190 <line:1879:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fa3328671f8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7fa332867870 <line:1880:1, col:8> col:8 implicit struct __apply_cv
| |   | `-TypedefDecl 0x7fa332867918 <line:1882:5, col:32> col:32 type 'const volatile _Up'
| |   |   `-QualType 0x7fa332867245 'const volatile _Up' const volatile
| |   |     `-TemplateTypeParmType 0x7fa332867240 '_Up' dependent depth 0 index 1
| |   |       `-TemplateTypeParm 0x7fa3328671f8 '_Up'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa332867d00 <line:1885:1, line:1889:1> line:1886:8 struct __apply_cv definition
| |   | |-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fa332867990 <line:1885:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fa3328679f8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7fa332868050 <line:1886:1, col:8> col:8 implicit struct __apply_cv
| |   | `-TypedefDecl 0x7fa332868158 <line:1888:5, col:18> col:18 type '_Up &'
| |   |   `-LValueReferenceType 0x7fa332868120 '_Up &' dependent
| |   |     `-TemplateTypeParmType 0x7fa332867a40 '_Up' dependent depth 0 index 1
| |   |       `-TemplateTypeParm 0x7fa3328679f8 '_Up'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa332868540 <line:1891:1, line:1895:1> line:1892:8 struct __apply_cv definition
| |   | |-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fa3328681d0 <line:1891:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fa332868238 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7fa332868890 <line:1892:1, col:8> col:8 implicit struct __apply_cv
| |   | `-TypedefDecl 0x7fa332868998 <line:1894:5, col:24> col:24 type 'const _Up &'
| |   |   `-LValueReferenceType 0x7fa332868960 'const _Up &' dependent
| |   |     `-QualType 0x7fa332868281 'const _Up' const
| |   |       `-TemplateTypeParmType 0x7fa332868280 '_Up' dependent depth 0 index 1
| |   |         `-TemplateTypeParm 0x7fa332868238 '_Up'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa332868d80 <line:1897:1, line:1901:1> line:1898:8 struct __apply_cv definition
| |   | |-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fa332868a10 <line:1897:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fa332868a78 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7fa3328690d0 <line:1898:1, col:8> col:8 implicit struct __apply_cv
| |   | `-TypedefDecl 0x7fa3328691d8 <line:1900:5, col:27> col:27 type 'volatile _Up &'
| |   |   `-LValueReferenceType 0x7fa3328691a0 'volatile _Up &' dependent
| |   |     `-QualType 0x7fa332868ac4 'volatile _Up' volatile
| |   |       `-TemplateTypeParmType 0x7fa332868ac0 '_Up' dependent depth 0 index 1
| |   |         `-TemplateTypeParm 0x7fa332868a78 '_Up'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa332869600 <line:1903:1, line:1907:1> line:1904:8 struct __apply_cv definition
| |   | |-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fa332869250 <line:1903:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fa3328692b8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7fa332869950 <line:1904:1, col:8> col:8 implicit struct __apply_cv
| |   | `-TypedefDecl 0x7fa332869a58 <line:1906:5, col:33> col:33 type 'const volatile _Up &'
| |   |   `-LValueReferenceType 0x7fa332869a20 'const volatile _Up &' dependent
| |   |     `-QualType 0x7fa332869305 'const volatile _Up' const volatile
| |   |       `-TemplateTypeParmType 0x7fa332869300 '_Up' dependent depth 0 index 1
| |   |         `-TemplateTypeParm 0x7fa3328692b8 '_Up'
| |   |-ClassTemplateDecl 0x7fa332869ea0 <line:1909:1, line:1910:23> col:8 __make_signed
| |   | |-TemplateTypeParmDecl 0x7fa332869ad0 <line:1909:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fa332869d90 <col:22, col:70> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7fa332869d58 <col:29, col:70> '<dependent type>' '||'
| |   | |     |-DependentScopeDeclRefExpr 0x7fa332869c08 <col:29, col:47> '<dependent type>' lvalue
| |   | |     `-DependentScopeDeclRefExpr 0x7fa332869d18 <col:56, col:70> '<dependent type>' lvalue
| |   | |-CXXRecordDecl 0x7fa332869e08 <line:1910:1, col:23> col:8 struct __make_signed definition
| |   | | `-CXXRecordDecl 0x7fa33286a160 <col:1, col:8> col:8 implicit struct __make_signed
| |   | |-ClassTemplateSpecialization 0x7fa33286add0 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7fa33286b138 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7fa33286b518 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7fa33286d118 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7fa33286d4f8 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7fa33286d8d8 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7fa33286dcb8 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7fa33286e098 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7fa33286e478 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7fa33286e850 '__make_signed'
| |   | `-ClassTemplateSpecialization 0x7fa33286ec18 '__make_signed'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa33286a400 <line:1912:1, line:1916:1> line:1913:8 struct __make_signed definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fa33286a218 <line:1912:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fa33286a690 <line:1913:1, col:8> col:8 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fa33286ad20 <line:1915:5, col:70> col:70 type 'typename __find_first<__signed_types, sizeof(_Tp)>::type'
| |   |   `-DependentNameType 0x7fa33286acb0 'typename __find_first<__signed_types, sizeof(_Tp)>::type' dependent
| |   |-ClassTemplateSpecializationDecl 0x7fa33286add0 <line:1918:1, col:61> col:20 struct __make_signed definition
| |   | |-TemplateArgument type '_Bool'
| |   | |-TemplateArgument integral 1
| |   | `-CXXRecordDecl 0x7fa33286b040 <col:13, col:20> col:20 implicit struct __make_signed
| |   |-ClassTemplateSpecializationDecl 0x7fa33286b138 <line:1919:1, col:84> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'short'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fa33286b3b0 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fa33286b460 <col:61, col:79> col:79 type 'short'
| |   |   `-BuiltinType 0x7fa3328327a0 'short'
| |   |-ClassTemplateSpecializationDecl 0x7fa33286b518 <line:1920:1, col:84> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'unsigned short'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fa33286cfb0 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fa33286d060 <col:61, col:79> col:79 type 'short'
| |   |   `-BuiltinType 0x7fa3328327a0 'short'
| |   |-ClassTemplateSpecializationDecl 0x7fa33286d118 <line:1921:1, col:84> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'int'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fa33286d390 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fa33286d440 <col:61, col:79> col:79 type 'int'
| |   |   `-BuiltinType 0x7fa3328327c0 'int'
| |   |-ClassTemplateSpecializationDecl 0x7fa33286d4f8 <line:1922:1, col:84> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'unsigned int'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fa33286d770 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fa33286d820 <col:61, col:79> col:79 type 'int'
| |   |   `-BuiltinType 0x7fa3328327c0 'int'
| |   |-ClassTemplateSpecializationDecl 0x7fa33286d8d8 <line:1923:1, col:84> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'long'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fa33286db50 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fa33286dc00 <col:61, col:79> col:79 type 'long'
| |   |   `-BuiltinType 0x7fa3328327e0 'long'
| |   |-ClassTemplateSpecializationDecl 0x7fa33286dcb8 <line:1924:1, col:84> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'unsigned long'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fa33286df30 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fa33286dfe0 <col:61, col:79> col:79 type 'long'
| |   |   `-BuiltinType 0x7fa3328327e0 'long'
| |   |-ClassTemplateSpecializationDecl 0x7fa33286e098 <line:1925:1, col:84> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'long long'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fa33286e310 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fa33286e3c0 <col:61, col:79> col:79 type 'long long'
| |   |   `-BuiltinType 0x7fa332832800 'long long'
| |   |-ClassTemplateSpecializationDecl 0x7fa33286e478 <line:1926:1, col:84> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'unsigned long long'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fa33286e6f0 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fa33286e7a0 <col:61, col:79> col:79 type 'long long'
| |   |   `-BuiltinType 0x7fa332832800 'long long'
| |   |-ClassTemplateSpecializationDecl 0x7fa33286e850 <line:1928:1, col:85> col:20 struct __make_signed definition
| |   | |-TemplateArgument type '__int128'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fa33286eac0 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fa33286eb68 <col:61, col:80> col:80 type '__int128_t':'__int128'
| |   |   `-TypedefType 0x7fa3331353f0 '__int128_t' sugar
| |   |     |-Typedef 0x7fa332832c60 '__int128_t'
| |   |     `-BuiltinType 0x7fa332832940 '__int128'
| |   |-ClassTemplateSpecializationDecl 0x7fa33286ec18 <line:1929:1, col:85> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'unsigned __int128'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fa3338000c0 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fa333800168 <col:61, col:80> col:80 type '__int128_t':'__int128'
| |   |   `-TypedefType 0x7fa3331353f0 '__int128_t' sugar
| |   |     |-Typedef 0x7fa332832c60 '__int128_t'
| |   |     `-BuiltinType 0x7fa332832940 '__int128'
| |   |-ClassTemplateDecl 0x7fa333800328 <line:1932:1, line:1936:1> line:1933:29 make_signed
| |   | |-TemplateTypeParmDecl 0x7fa3338001e0 <line:1932:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa333800290 <line:1933:1, line:1936:1> line:1933:29 struct make_signed definition
| |   |   |-TypeVisibilityAttr 0x7fa3338005a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fa3338005e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1933:1, col:29> col:29 implicit struct make_signed
| |   |   `-TypedefDecl 0x7fa3338012a0 <line:1935:5, col:105> col:105 type 'typename __apply_cv<_Tp, typename __make_signed<typename remove_cv<_Tp>::type>::type>::type'
| |   |     `-DependentNameType 0x7fa333801230 'typename __apply_cv<_Tp, typename __make_signed<typename remove_cv<_Tp>::type>::type>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fa333801560 <line:1939:1, col:71> col:22 make_signed_t
| |   | |-TemplateTypeParmDecl 0x7fa333801318 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fa333801500 <col:22, col:71> col:28 make_signed_t 'typename make_signed<_Tp>::type'
| |   |   `-DependentNameType 0x7fa333801490 'typename make_signed<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fa333801980 <line:1942:1, line:1943:25> col:8 __make_unsigned
| |   | |-TemplateTypeParmDecl 0x7fa3338015b0 <line:1942:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fa333801870 <col:22, col:70> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7fa333801838 <col:29, col:70> '<dependent type>' '||'
| |   | |     |-DependentScopeDeclRefExpr 0x7fa3338016e8 <col:29, col:47> '<dependent type>' lvalue
| |   | |     `-DependentScopeDeclRefExpr 0x7fa3338017f8 <col:56, col:70> '<dependent type>' lvalue
| |   | |-CXXRecordDecl 0x7fa3338018e8 <line:1943:1, col:25> col:8 struct __make_unsigned definition
| |   | | `-CXXRecordDecl 0x7fa333801c40 <col:1, col:8> col:8 implicit struct __make_unsigned
| |   | |-ClassTemplateSpecialization 0x7fa3338038b0 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7fa333803c18 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7fa333803ff8 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7fa3338043d8 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7fa3338047b8 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7fa333804b98 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7fa33380d400 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7fa33380d7d8 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7fa33380dbb8 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7fa33380df90 '__make_unsigned'
| |   | `-ClassTemplateSpecialization 0x7fa33380e358 '__make_unsigned'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa333801ee0 <line:1945:1, line:1949:1> line:1946:8 struct __make_unsigned definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fa333801cf8 <line:1945:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fa333803170 <line:1946:1, col:8> col:8 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fa333803800 <line:1948:5, col:72> col:72 type 'typename __find_first<__unsigned_types, sizeof(_Tp)>::type'
| |   |   `-DependentNameType 0x7fa333803790 'typename __find_first<__unsigned_types, sizeof(_Tp)>::type' dependent
| |   |-ClassTemplateSpecializationDecl 0x7fa3338038b0 <line:1951:1, col:63> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type '_Bool'
| |   | |-TemplateArgument integral 1
| |   | `-CXXRecordDecl 0x7fa333803b20 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   |-ClassTemplateSpecializationDecl 0x7fa333803c18 <line:1952:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'short'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fa333803e90 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fa333803f40 <col:63, col:90> col:90 type 'unsigned short'
| |   |   `-BuiltinType 0x7fa332832840 'unsigned short'
| |   |-ClassTemplateSpecializationDecl 0x7fa333803ff8 <line:1953:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'unsigned short'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fa333804270 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fa333804320 <col:63, col:90> col:90 type 'unsigned short'
| |   |   `-BuiltinType 0x7fa332832840 'unsigned short'
| |   |-ClassTemplateSpecializationDecl 0x7fa3338043d8 <line:1954:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'int'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fa333804650 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fa333804700 <col:63, col:90> col:90 type 'unsigned int'
| |   |   `-BuiltinType 0x7fa332832860 'unsigned int'
| |   |-ClassTemplateSpecializationDecl 0x7fa3338047b8 <line:1955:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'unsigned int'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fa333804a30 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fa333804ae0 <col:63, col:90> col:90 type 'unsigned int'
| |   |   `-BuiltinType 0x7fa332832860 'unsigned int'
| |   |-ClassTemplateSpecializationDecl 0x7fa333804b98 <line:1956:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'long'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fa333804e10 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fa333804ec0 <col:63, col:90> col:90 type 'unsigned long'
| |   |   `-BuiltinType 0x7fa332832880 'unsigned long'
| |   |-ClassTemplateSpecializationDecl 0x7fa33380d400 <line:1957:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'unsigned long'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fa33380d670 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fa33380d720 <col:63, col:90> col:90 type 'unsigned long'
| |   |   `-BuiltinType 0x7fa332832880 'unsigned long'
| |   |-ClassTemplateSpecializationDecl 0x7fa33380d7d8 <line:1958:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'long long'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fa33380da50 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fa33380db00 <col:63, col:90> col:90 type 'unsigned long long'
| |   |   `-BuiltinType 0x7fa3328328a0 'unsigned long long'
| |   |-ClassTemplateSpecializationDecl 0x7fa33380dbb8 <line:1959:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'unsigned long long'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fa33380de30 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fa33380dee0 <col:63, col:90> col:90 type 'unsigned long long'
| |   |   `-BuiltinType 0x7fa3328328a0 'unsigned long long'
| |   |-ClassTemplateSpecializationDecl 0x7fa33380df90 <line:1961:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type '__int128'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fa33380e200 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fa33380e2a8 <col:63, col:90> col:90 type '__uint128_t':'unsigned __int128'
| |   |   `-TypedefType 0x7fa333135760 '__uint128_t' sugar
| |   |     |-Typedef 0x7fa332832cd0 '__uint128_t'
| |   |     `-BuiltinType 0x7fa332832960 'unsigned __int128'
| |   |-ClassTemplateSpecializationDecl 0x7fa33380e358 <line:1962:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'unsigned __int128'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fa33380e5d0 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fa33380e678 <col:63, col:90> col:90 type '__uint128_t':'unsigned __int128'
| |   |   `-TypedefType 0x7fa333135760 '__uint128_t' sugar
| |   |     |-Typedef 0x7fa332832cd0 '__uint128_t'
| |   |     `-BuiltinType 0x7fa332832960 'unsigned __int128'
| |   |-ClassTemplateDecl 0x7fa33380e838 <line:1965:1, line:1969:1> line:1966:29 make_unsigned
| |   | |-TemplateTypeParmDecl 0x7fa33380e6f0 <line:1965:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa33380e7a0 <line:1966:1, line:1969:1> line:1966:29 struct make_unsigned definition
| |   |   |-TypeVisibilityAttr 0x7fa33380eab0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fa33380eaf8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1966:1, col:29> col:29 implicit struct make_unsigned
| |   |   `-TypedefDecl 0x7fa33380f6b0 <line:1968:5, col:107> col:107 type 'typename __apply_cv<_Tp, typename __make_unsigned<typename remove_cv<_Tp>::type>::type>::type'
| |   |     `-DependentNameType 0x7fa33380f640 'typename __apply_cv<_Tp, typename __make_unsigned<typename remove_cv<_Tp>::type>::type>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fa33380f970 <line:1972:1, col:75> col:22 make_unsigned_t
| |   | |-TemplateTypeParmDecl 0x7fa33380f728 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fa33380f910 <col:22, col:75> col:28 make_unsigned_t 'typename make_unsigned<_Tp>::type'
| |   |   `-DependentNameType 0x7fa33380f8a0 'typename make_unsigned<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fa33380fb08 <line:2010:1, line:2011:42> col:29 common_type
| |   | |-TemplateTypeParmDecl 0x7fa33380f9c0 <line:2010:11, col:20> col:20 class depth 0 index 0 ... _Tp
| |   | `-CXXRecordDecl 0x7fa33380fa70 <line:2011:1, col:42> col:29 struct common_type definition
| |   |   |-TypeVisibilityAttr 0x7fa33380fde0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fa33380fe28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2011:1, col:29> col:29 implicit struct common_type
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa3338100a8 <line:2015:1, line:2017:37> line:2016:29 struct common_type definition
| |   | |-public 'common_type<_Tp, _Tp>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fa33380fee0 <line:2015:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fa333810218 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fa3338104f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2016:1, col:29> col:29 implicit struct common_type
| |   |-ClassTemplateDecl 0x7fa3338107c8 <line:2021:1, line:2022:28> col:8 __common_type2_imp
| |   | |-TemplateTypeParmDecl 0x7fa3338105b0 <line:2021:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fa333810618 <col:22, col:28> col:28 class depth 0 index 1 _Up
| |   | |-TemplateTypeParmDecl 0x7fa333810698 <col:33, col:41> col:33 class depth 0 index 2
| |   | | `-TemplateArgument type 'void'
| |   | `-CXXRecordDecl 0x7fa333810730 <line:2022:1, col:28> col:8 struct __common_type2_imp definition
| |   |   `-CXXRecordDecl 0x7fa333810aa0 <col:1, col:8> col:8 implicit struct __common_type2_imp
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa333811298 <line:2024:1, line:2033:1> line:2025:8 struct __common_type2_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument type 'typename __void_t<decltype(true ? std::__1::declval<_Tp>() : std::__1::declval<_Up>())>::type'
| |   | |-TemplateTypeParmDecl 0x7fa333810b58 <line:2024:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fa333810bc8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7fa3338119c0 <line:2025:1, col:8> col:8 implicit struct __common_type2_imp
| |   | `-TypedefDecl 0x7fa333811e80 <line:2030:5, line:2032:14> col:14 type 'typename decay<decltype(true ? std::__1::declval<_Tp>() : std::__1::declval<_Up>())>::type'
| |   |   `-DependentNameType 0x7fa333811e10 'typename decay<decltype(true ? std::__1::declval<_Tp>() : std::__1::declval<_Up>())>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fa333812d90 <line:2035:1, line:2043:6> line:2038:1 __common_type2
| |   | |-TemplateTypeParmDecl 0x7fa333811ef8 <line:2035:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fa333811f68 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-TemplateTypeParmDecl 0x7fa333812100 <line:2036:11, col:45> col:17 referenced class depth 0 index 2 _DTp
| |   | | `-TemplateArgument type 'typename decay<_Tp>::type'
| |   | |-TemplateTypeParmDecl 0x7fa333812320 <line:2037:11, col:45> col:17 referenced class depth 0 index 3 _DUp
| |   | | `-TemplateArgument type 'typename decay<_Up>::type'
| |   | `-TypeAliasDecl 0x7fa333812d30 <line:2038:1, line:2043:6> line:2038:7 __common_type2 'typename conditional<is_same<_Tp, _DTp>::value && is_same<_Up, _DUp>::value, __common_type2_imp<_Tp, _Up>, common_type<_DTp, _DUp> >::type'
| |   |   `-DependentNameType 0x7fa333812cc0 'typename conditional<is_same<_Tp, _DTp>::value && is_same<_Up, _DUp>::value, __common_type2_imp<_Tp, _Up>, common_type<_DTp, _DUp> >::type' dependent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa333813098 <line:2045:1, line:2047:33> line:2046:29 struct common_type definition
| |   | |-public '__common_type2<_Tp, _Up>':'typename conditional<is_same<type-parameter-0-0, typename decay<type-parameter-0-0>::type>::value && is_same<type-parameter-0-1, typename decay<type-parameter-0-1>::type>::value, __common_type2_imp<type-parameter-0-0, type-parameter-0-1, void>, common_type<typename decay<type-parameter-0-0>::type, typename decay<type-parameter-0-1>::type> >::type'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | `-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateTypeParmDecl 0x7fa333812de0 <line:2045:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fa333812e48 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-TypeVisibilityAttr 0x7fa333813248 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fa3338156c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2046:1, col:29> col:29 implicit struct common_type
| |   |-ClassTemplateDecl 0x7fa333815898 <line:2051:1, col:31> col:31 __common_types
| |   | |-TemplateTypeParmDecl 0x7fa333815778 <col:11, col:20> col:20 class depth 0 index 0 ... Tp
| |   | `-CXXRecordDecl 0x7fa333815800 <col:24, col:31> col:31 struct __common_types
| |   |-ClassTemplateDecl 0x7fa333815cb0 <line:2053:1, line:2054:28> col:8 __common_type_impl
| |   | |-TemplateTypeParmDecl 0x7fa333815b08 <line:2053:11> col:11 class depth 0 index 0
| |   | |-TemplateTypeParmDecl 0x7fa333815b88 <col:18, col:26> col:18 class depth 0 index 1
| |   | | `-TemplateArgument type 'void'
| |   | `-CXXRecordDecl 0x7fa333815c18 <line:2054:1, col:28> col:8 struct __common_type_impl definition
| |   |   `-CXXRecordDecl 0x7fa333815f50 <col:1, col:8> col:8 implicit struct __common_type_impl
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa3338167a0 <line:2056:1, line:2062:1> line:2057:8 struct __common_type_impl definition
| |   | |-TemplateArgument type '__common_types<type-parameter-0-0, type-parameter-0-1>'
| |   | |-TemplateArgument type 'typename __void_t<typename common_type<type-parameter-0-0, type-parameter-0-1>::type>::type'
| |   | |-TemplateTypeParmDecl 0x7fa333816008 <line:2056:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fa333816078 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7fa333816b20 <line:2057:1, col:8> col:8 implicit struct __common_type_impl
| |   | `-TypedefDecl 0x7fa333816d80 <line:2061:3, col:48> col:48 type 'typename common_type<_Tp, _Up>::type'
| |   |   `-DependentNameType 0x7fa333816d10 'typename common_type<_Tp, _Up>::type' dependent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa333817600 <line:2064:1, line:2071:1> line:2065:8 struct __common_type_impl definition
| |   | |-public '__common_type_impl<__common_types<typename common_type<_Tp, _Up>::type, _Vp...> >'
| |   | |-TemplateArgument type '__common_types<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2...>'
| |   | |-TemplateArgument type 'typename __void_t<typename common_type<type-parameter-0-0, type-parameter-0-1>::type>::type'
| |   | |-TemplateTypeParmDecl 0x7fa333816df8 <line:2064:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fa333816e68 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-TemplateTypeParmDecl 0x7fa333816ed8 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Vp
| |   | `-CXXRecordDecl 0x7fa333817de8 <line:2065:1, col:8> col:8 implicit struct __common_type_impl
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa333818278 <line:2073:1, line:2075:62> line:2074:29 struct common_type definition
| |   | |-public '__common_type_impl<__common_types<_Tp, _Up, _Vp...> >'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | |-TemplateArgument type 'type-parameter-0-1'
| |   | | `-TemplateArgument type 'type-parameter-0-2...'
| |   | |-TemplateTypeParmDecl 0x7fa333817ea0 <line:2073:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fa333817f08 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-TemplateTypeParmDecl 0x7fa333817f78 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Vp
| |   | |-TypeVisibilityAttr 0x7fa333818468 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fa333818918 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2074:1, col:29> col:29 implicit struct common_type
| |   |-TypeAliasTemplateDecl 0x7fa333818cb0 <line:2078:1, col:77> col:25 common_type_t
| |   | |-TemplateTypeParmDecl 0x7fa333818a00 <col:11, col:20> col:20 referenced class depth 0 index 0 ... _Tp
| |   | `-TypeAliasDecl 0x7fa333818c50 <col:25, col:77> col:31 common_type_t 'typename common_type<_Tp...>::type'
| |   |   `-DependentNameType 0x7fa333818be0 'typename common_type<_Tp...>::type' dependent
| |   |-ClassTemplateDecl 0x7fa333818e90 <line:2085:1, col:74> col:41 __select_2nd
| |   | |-TemplateTypeParmDecl 0x7fa333818d00 <col:10> col:10 typename depth 0 index 0
| |   | |-TemplateTypeParmDecl 0x7fa333818d68 <col:20, col:29> col:29 referenced typename depth 0 index 1 _Tp
| |   | `-CXXRecordDecl 0x7fa333818df8 <col:34, col:74> col:41 struct __select_2nd definition
| |   |   |-CXXRecordDecl 0x7fa333819130 <col:34, col:41> col:41 implicit struct __select_2nd
| |   |   `-TypedefDecl 0x7fa3338191d8 <col:56, col:68> col:68 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7fa333818db0 '_Tp' dependent depth 0 index 1
| |   |       `-TemplateTypeParm 0x7fa333818d68 '_Tp'
| |   |-FunctionTemplateDecl 0x7fa3338199c8 <line:2087:1, line:2089:25> col:1 __is_assignable_test
| |   | |-TemplateTypeParmDecl 0x7fa333819250 <line:2087:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fa3338192b8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | `-FunctionDecl 0x7fa333819930 <line:2088:1, line:2089:25> col:1 __is_assignable_test 'typename __select_2nd<decltype((std::__1::declval<_Tp>() = std::__1::declval<_Arg>())), true_type>::type (int)'
| |   |   `-ParmVarDecl 0x7fa333819818 <col:22> col:25 'int'
| |   |-FunctionTemplateDecl 0x7fa333819c38 <line:2091:1, line:2092:36> col:12 __is_assignable_test
| |   | |-TemplateTypeParmDecl 0x7fa333819a20 <line:2091:11> col:11 class depth 0 index 0
| |   | |-TemplateTypeParmDecl 0x7fa333819a88 <col:18> col:18 class depth 0 index 1
| |   | `-FunctionDecl 0x7fa333819ba0 <line:2092:1, col:36> col:12 __is_assignable_test 'std::__1::false_type (...)'
| |   |-ClassTemplateDecl 0x7fa33381a128 <line:2095:1, line:2097:69> line:2096:8 __is_assignable_imp
| |   | |-TemplateTypeParmDecl 0x7fa333819c88 <line:2095:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fa333819cf8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | |-NonTypeTemplateParmDecl 0x7fa33381a010 <col:34, col:79> col:39 '_Bool' depth 0 index 2
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7fa333819fd8 <col:41, col:79> '<dependent type>' '||'
| |   | |     |-DependentScopeDeclRefExpr 0x7fa333819e38 <col:41, col:55> '<dependent type>' lvalue
| |   | |     `-DependentScopeDeclRefExpr 0x7fa333819f98 <col:64, col:79> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fa33381a090 <line:2096:1, line:2097:69> line:2096:8 struct __is_assignable_imp definition
| |   |   |-public 'decltype((std::__1::__is_assignable_test<_Tp, _Arg>(0)))'
| |   |   `-CXXRecordDecl 0x7fa33381a698 <col:1, col:8> col:8 implicit struct __is_assignable_imp
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa333827aa0 <line:2099:1, line:2103:1> line:2100:8 struct __is_assignable_imp definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fa33381a750 <line:2099:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fa33381a7b8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | `-CXXRecordDecl 0x7fa333827dc0 <line:2100:1, col:8> col:8 implicit struct __is_assignable_imp
| |   |-ClassTemplateDecl 0x7fa333828010 <line:2105:1, line:2107:46> line:2106:8 is_assignable
| |   | |-TemplateTypeParmDecl 0x7fa333827e78 <line:2105:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fa333827ee8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | `-CXXRecordDecl 0x7fa333827f78 <line:2106:1, line:2107:46> line:2106:8 struct is_assignable definition
| |   |   |-public '__is_assignable_imp<_Tp, _Arg>'
| |   |   `-CXXRecordDecl 0x7fa3338286a8 <col:1, col:8> col:8 implicit struct is_assignable
| |   |-ClassTemplateDecl 0x7fa3338288a8 <line:2116:1, line:2118:88> line:2116:50 is_copy_assignable
| |   | |-TemplateTypeParmDecl 0x7fa333828760 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa333828810 <col:22, line:2118:88> line:2116:50 struct is_copy_assignable definition
| |   |   |-public 'is_assignable<typename add_lvalue_reference<_Tp>::type, typename add_lvalue_reference<typename add_const<_Tp>::type>::type>'
| |   |   |-TypeVisibilityAttr 0x7fa333828b20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fa333829088 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2116:22, col:50> col:50 implicit struct is_copy_assignable
| |   |-ClassTemplateDecl 0x7fa333829288 <line:2127:1, line:2130:71> line:2127:50 is_move_assignable
| |   | |-TemplateTypeParmDecl 0x7fa333829140 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa3338291f0 <col:22, line:2130:71> line:2127:50 struct is_move_assignable definition
| |   |   |-public 'is_assignable<typename add_lvalue_reference<_Tp>::type, typename add_rvalue_reference<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fa333829500 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fa3338298c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2127:22, col:50> col:50 implicit struct is_move_assignable
| |   |-ClassTemplateDecl 0x7fa333829a98 <line:2149:1, line:2150:52> col:8 __is_destructible_apply
| |   | |-TemplateTypeParmDecl 0x7fa333829980 <line:2149:11> col:11 class depth 0 index 0
| |   | `-CXXRecordDecl 0x7fa333829a00 <line:2150:1, col:52> col:8 struct __is_destructible_apply definition
| |   |   |-CXXRecordDecl 0x7fa333829d10 <col:1, col:8> col:8 implicit struct __is_destructible_apply
| |   |   `-TypedefDecl 0x7fa333829dc0 <col:34, col:46> col:46 type 'int'
| |   |     `-BuiltinType 0x7fa3328327c0 'int'
| |   |-ClassTemplateDecl 0x7fa333829f58 <line:2152:1, line:2163:1> line:2153:8 __is_destructor_wellformed
| |   | |-TemplateTypeParmDecl 0x7fa333829e38 <line:2152:11, col:20> col:20 referenced typename depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa333829ec0 <line:2153:1, line:2163:1> line:2153:8 struct __is_destructor_wellformed definition
| |   |   |-CXXRecordDecl 0x7fa33382a1d0 <col:1, col:8> col:8 implicit struct __is_destructor_wellformed
| |   |   |-FunctionTemplateDecl 0x7fa33382a8e8 <line:2154:5, line:2157:5> line:2155:18 __test
| |   |   | |-TemplateTypeParmDecl 0x7fa33382a268 <line:2154:15, col:24> col:24 referenced typename depth 1 index 0 _Tp1
| |   |   | `-CXXMethodDecl 0x7fa33382a850 <line:2155:5, line:2157:5> line:2155:18 __test 'char (typename __is_destructible_apply<decltype(std::__1::declval<_Tp1 &>().~_Tp1())>::type)' static
| |   |   |   `-ParmVarDecl 0x7fa33382a720 <line:2156:9, col:86> line:2157:5 'typename __is_destructible_apply<decltype(std::__1::declval<_Tp1 &>().~_Tp1())>::type'
| |   |   |-FunctionTemplateDecl 0x7fa33382aa78 <line:2159:5, line:2160:29> col:18 __test
| |   |   | |-TemplateTypeParmDecl 0x7fa33382a940 <line:2159:15, col:24> col:24 typename depth 1 index 0 _Tp1
| |   |   | `-CXXMethodDecl 0x7fa33382a9e0 <line:2160:5, col:29> col:18 __test 'struct std::__1::__two (...)' static
| |   |   `-VarDecl 0x7fa33382aad8 <line:2162:5, col:69> col:23 value 'const _Bool' static cinit
| |   |     `-BinaryOperator 0x7fa33382acc0 <col:31, col:69> '_Bool' '=='
| |   |       |-UnaryExprOrTypeTraitExpr 0x7fa33382ac70 <col:31, col:53> 'unsigned long' sizeof
| |   |       | `-ParenExpr 0x7fa33382ac50 <col:37, col:53> '<dependent type>'
| |   |       |   `-CallExpr 0x7fa33382ac20 <col:38, col:52> '<dependent type>'
| |   |       |     |-UnresolvedLookupExpr 0x7fa33382ab60 <col:38, col:48> '<dependent type>' lvalue (no ADL) = '__test' 0x7fa33382aa78 0x7fa33382a8e8
| |   |       |     `-IntegerLiteral 0x7fa33382ac00 <col:50> 'int' 12
| |   |       `-UnaryExprOrTypeTraitExpr 0x7fa33382aca0 <col:58, col:69> 'unsigned long' sizeof 'char'
| |   |-ClassTemplateDecl 0x7fa33382ae98 <line:2165:1, line:2166:8> col:8 __destructible_imp
| |   | |-TemplateTypeParmDecl 0x7fa33382ad08 <line:2165:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fa33382ad88 <col:22> col:26 '_Bool' depth 0 index 1
| |   | `-CXXRecordDecl 0x7fa33382ae00 <line:2166:1, col:8> col:8 struct __destructible_imp
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa33382b2e0 <line:2168:1, line:2171:92> line:2169:8 struct __destructible_imp definition
| |   | |-public 'std::__1::integral_constant<_Bool, __is_destructor_wellformed<typename std::__1::remove_all_extents<_Tp>::type>::value>':'integral_constant<_Bool, __is_destructor_wellformed<typename std::__1::remove_all_extents<_Tp>::type>::value>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fa33382b0f8 <line:2168:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa33382be18 <line:2169:1, col:8> col:8 implicit struct __destructible_imp
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa33382c0b0 <line:2173:1, line:2175:32> line:2174:8 struct __destructible_imp definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fa33382bed0 <line:2173:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa33382c3f0 <line:2174:1, col:8> col:8 implicit struct __destructible_imp
| |   |-ClassTemplateDecl 0x7fa33382c638 <line:2177:1, line:2178:8> col:8 __destructible_false
| |   | |-TemplateTypeParmDecl 0x7fa33382c4a8 <line:2177:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fa33382c528 <col:22> col:26 '_Bool' depth 0 index 1
| |   | `-CXXRecordDecl 0x7fa33382c5a0 <line:2178:1, col:8> col:8 struct __destructible_false
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa33382ca80 <line:2180:1, line:2181:108> col:8 struct __destructible_false definition
| |   | |-public '__destructible_imp<_Tp, std::__1::is_reference<_Tp>::value>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fa33382c898 <line:2180:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa33382cfc8 <line:2181:1, col:8> col:8 implicit struct __destructible_false
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa33382d260 <line:2183:1, line:2184:68> col:8 struct __destructible_false definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fa33382d080 <line:2183:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa33382d5a0 <line:2184:1, col:8> col:8 implicit struct __destructible_false
| |   |-ClassTemplateDecl 0x7fa33382d778 <line:2186:1, line:2188:73> line:2187:8 is_destructible
| |   | |-TemplateTypeParmDecl 0x7fa33382d658 <line:2186:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fa33382d6e0 <line:2187:1, line:2188:73> line:2187:8 struct is_destructible definition
| |   | | |-public '__destructible_false<_Tp, std::__1::is_function<_Tp>::value>'
| |   | | `-CXXRecordDecl 0x7fa33382dca8 <col:1, col:8> col:8 implicit struct is_destructible
| |   | `-ClassTemplateSpecialization 0x7fa33382e2c8 'is_destructible'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa33382df28 <line:2190:1, line:2192:33> line:2191:8 struct is_destructible definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'type-parameter-0-0 []'
| |   | |-TemplateTypeParmDecl 0x7fa33382dd60 <line:2190:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa33382e1f0 <line:2191:1, col:8> col:8 implicit struct is_destructible
| |   |-ClassTemplateSpecializationDecl 0x7fa33382e2c8 <line:2194:1, line:2196:33> line:2195:8 struct is_destructible definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'void'
| |   | `-CXXRecordDecl 0x7fa33382e570 <col:1, col:8> col:8 implicit struct is_destructible
| |   |-FunctionTemplateDecl 0x7fa33382ea38 <line:2207:1, line:2214:1> line:2210:1 move
| |   | |-TemplateTypeParmDecl 0x7fa33382e628 <line:2207:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fa33382e9a0 <line:2208:1, line:2214:1> line:2210:1 constexpr move 'typename remove_reference<_Tp>::type &&(_Tp &&) noexcept' inline
| |   |   |-ParmVarDecl 0x7fa33382e818 <col:6, col:12> col:12 referenced __t '_Tp &&'
| |   |   |-CompoundStmt 0x7fa33382ed50 <line:2211:1, line:2214:1>
| |   |   | |-DeclStmt 0x7fa33382ec68 <line:2212:5, col:53>
| |   |   | | `-TypedefDecl 0x7fa33382ec10 <col:5, col:50> col:50 referenced _Up 'typename remove_reference<_Tp>::type'
| |   |   | |   `-DependentNameType 0x7fa33382eba0 'typename remove_reference<_Tp>::type' dependent
| |   |   | `-ReturnStmt 0x7fa33382ed38 <line:2213:5, col:34>
| |   |   |   `-CXXStaticCastExpr 0x7fa33382ed08 <col:12, col:34> '_Up':'typename remove_reference<_Tp>::type' xvalue static_cast<_Up &&> <Dependent>
| |   |   |     `-DeclRefExpr 0x7fa33382eca0 <col:31> '_Tp' lvalue ParmVar 0x7fa33382e818 '__t' '_Tp &&'
| |   |   |-AlwaysInlineAttr 0x7fa33382ea90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fa33382ead8 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fa33382f180 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2216:1, line:2222:1> line:2219:1 forward
| |   | |-TemplateTypeParmDecl 0x7fa33382ed78 <line:2216:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fa33382f0e8 <line:2217:1, line:2222:1> line:2219:1 constexpr forward '_Tp &&(typename remove_reference<_Tp>::type &) noexcept' inline
| |   |   |-ParmVarDecl 0x7fa33382efb0 <col:9, col:47> col:47 referenced __t 'typename remove_reference<_Tp>::type &'
| |   |   |-CompoundStmt 0x7fa33382f2b0 <line:2220:1, line:2222:1>
| |   |   | `-ReturnStmt 0x7fa33382f298 <line:2221:5, col:34>
| |   |   |   `-CXXStaticCastExpr 0x7fa33382f268 <col:12, col:34> '_Tp' xvalue static_cast<_Tp &&> <Dependent>
| |   |   |     `-DeclRefExpr 0x7fa33382f230 <col:31> 'typename remove_reference<_Tp>::type' lvalue ParmVar 0x7fa33382efb0 '__t' 'typename remove_reference<_Tp>::type &'
| |   |   |-AlwaysInlineAttr 0x7fa33382f1d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fa33382f220 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fa33382f6a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2224:1, line:2232:1> line:2227:1 forward
| |   | |-TemplateTypeParmDecl 0x7fa33382f2d0 <line:2224:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fa33382f608 <line:2225:1, line:2232:1> line:2227:1 constexpr forward '_Tp &&(typename remove_reference<_Tp>::type &&) noexcept' inline
| |   |   |-ParmVarDecl 0x7fa33382f4d0 <col:9, col:48> col:48 referenced __t 'typename remove_reference<_Tp>::type &&'
| |   |   |-CompoundStmt 0x7fa33382fa18 <line:2228:1, line:2232:1>
| |   |   | |-DeclStmt 0x7fa33382f980 <line:2229:5, line:2230:60>
| |   |   | | `-StaticAssertDecl 0x7fa33382f948 <line:2229:5, line:2230:59> line:2229:5
| |   |   | |   |-UnaryOperator 0x7fa33382f858 <col:19, col:46> '<dependent type>' prefix '!'
| |   |   | |   | `-DependentScopeDeclRefExpr 0x7fa33382f818 <col:20, col:46> '<dependent type>' lvalue
| |   |   | |   `-StringLiteral 0x7fa33382f8f8 <line:2230:19> 'const char [39]' lvalue "can not forward an rvalue as an lvalue"
| |   |   | `-ReturnStmt 0x7fa33382fa00 <line:2231:5, col:34>
| |   |   |   `-CXXStaticCastExpr 0x7fa33382f9d0 <col:12, col:34> '_Tp' xvalue static_cast<_Tp &&> <Dependent>
| |   |   |     `-DeclRefExpr 0x7fa33382f998 <col:31> 'typename remove_reference<_Tp>::type' lvalue ParmVar 0x7fa33382f4d0 '__t' 'typename remove_reference<_Tp>::type &&'
| |   |   |-AlwaysInlineAttr 0x7fa33382f6f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fa33382f740 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fa33382fe00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2277:1, line:2283:1> line:2280:1 __decay_copy
| |   | |-TemplateTypeParmDecl 0x7fa33382fa40 <line:2277:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fa33382fd40 <line:2278:1, line:2283:1> line:2280:1 __decay_copy 'typename decay<_Tp>::type (_Tp &&)' inline
| |   |   |-ParmVarDecl 0x7fa33382fc28 <col:14, col:20> col:20 referenced __t '_Tp &&'
| |   |   |-CompoundStmt 0x7fa333830018 <line:2281:1, line:2283:1>
| |   |   | `-ReturnStmt 0x7fa333830000 <line:2282:5, col:35>
| |   |   |   `-CallExpr 0x7fa33382ffd0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2282:35> '<dependent type>'
| |   |   |     |-UnresolvedLookupExpr 0x7fa33382ff08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2282:30> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fa33382f180 0x7fa33382f6a0
| |   |   |     `-DeclRefExpr 0x7fa33382ffa8 <col:32> '_Tp' lvalue ParmVar 0x7fa33382fc28 '__t' '_Tp &&'
| |   |   |-AlwaysInlineAttr 0x7fa33382fe58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fa33382fea0 <col:51, col:74> Hidden
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa3338305b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2299:1, line:2305:1> line:2300:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...)'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fa333830038 <line:2299:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fa3338300a8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fa333830118 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fa3338308d0 <line:2300:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fa333830978 <line:2302:5, col:20> col:20 _ClassType '_Class'
| |   | | `-TemplateTypeParmType 0x7fa3338300f0 '_Class' dependent depth 0 index 1
| |   | |   `-TemplateTypeParm 0x7fa3338300a8 '_Class'
| |   | |-TypedefDecl 0x7fa3338309e0 <line:2303:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fa333830080 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fa333830038 '_Rp'
| |   | `-TypedefDecl 0x7fa333830ad8 <line:2304:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fa333830310 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fa3338302d0 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fa333830080 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fa333830038 '_Rp'
| |   |       `-PackExpansionType 0x7fa3338301f0 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fa333830160 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fa333830118 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa3338310c8 <line:2307:1, line:2313:1> line:2308:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...)'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fa333830b50 <line:2307:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fa333830bb8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fa333830c28 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fa3338313e0 <line:2308:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fa333831488 <line:2310:5, col:20> col:20 _ClassType '_Class'
| |   | | `-TemplateTypeParmType 0x7fa333830c00 '_Class' dependent depth 0 index 1
| |   | |   `-TemplateTypeParm 0x7fa333830bb8 '_Class'
| |   | |-TypedefDecl 0x7fa3338314f0 <line:2311:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fa333830b90 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fa333830b50 '_Rp'
| |   | `-TypedefDecl 0x7fa3338315e8 <line:2312:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fa333830e20 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fa333830de0 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fa333830b90 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fa333830b50 '_Rp'
| |   |       |-PackExpansionType 0x7fa333830d00 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fa333830c70 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fa333830c28 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa333831bd8 <line:2315:1, line:2321:1> line:2316:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fa333831660 <line:2315:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fa3338316c8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fa333831738 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fa333832750 <line:2316:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fa3338327f8 <line:2318:5, col:26> col:26 _ClassType 'const _Class'
| |   | | `-QualType 0x7fa333831711 'const _Class' const
| |   | |   `-TemplateTypeParmType 0x7fa333831710 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fa3338316c8 '_Class'
| |   | |-TypedefDecl 0x7fa333832860 <line:2319:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fa3338316a0 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fa333831660 '_Rp'
| |   | `-TypedefDecl 0x7fa3338329c8 <line:2320:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fa333832970 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fa333832930 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fa3338316a0 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fa333831660 '_Rp'
| |   |       `-PackExpansionType 0x7fa333831810 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fa333831780 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fa333831738 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa333832fb8 <line:2323:1, line:2329:1> line:2324:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) const'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fa333832a40 <line:2323:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fa333832aa8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fa333832b18 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fa3338332d0 <line:2324:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fa333833378 <line:2326:5, col:26> col:26 _ClassType 'const _Class'
| |   | | `-QualType 0x7fa333832af1 'const _Class' const
| |   | |   `-TemplateTypeParmType 0x7fa333832af0 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fa333832aa8 '_Class'
| |   | |-TypedefDecl 0x7fa3338333e0 <line:2327:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fa333832a80 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fa333832a40 '_Rp'
| |   | `-TypedefDecl 0x7fa333833548 <line:2328:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fa3338334f0 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fa3338334b0 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fa333832a80 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fa333832a40 '_Rp'
| |   |       |-PackExpansionType 0x7fa333832bf0 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fa333832b60 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fa333832b18 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa333833b38 <line:2331:1, line:2337:1> line:2332:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) volatile'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fa3338335c0 <line:2331:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fa333833628 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fa333833698 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fa333833e50 <line:2332:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fa333833ef8 <line:2334:5, col:29> col:29 _ClassType 'volatile _Class'
| |   | | `-QualType 0x7fa333833674 'volatile _Class' volatile
| |   | |   `-TemplateTypeParmType 0x7fa333833670 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fa333833628 '_Class'
| |   | |-TypedefDecl 0x7fa333833f60 <line:2335:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fa333833600 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fa3338335c0 '_Rp'
| |   | `-TypedefDecl 0x7fa3338340c8 <line:2336:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fa333834070 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fa333834030 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fa333833600 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fa3338335c0 '_Rp'
| |   |       `-PackExpansionType 0x7fa333833770 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fa3338336e0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fa333833698 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa333835318 <line:2339:1, line:2345:1> line:2340:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) volatile'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fa333834140 <line:2339:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fa3338341a8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fa333834218 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fa333835630 <line:2340:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fa3338356d8 <line:2342:5, col:29> col:29 _ClassType 'volatile _Class'
| |   | | `-QualType 0x7fa3338341f4 'volatile _Class' volatile
| |   | |   `-TemplateTypeParmType 0x7fa3338341f0 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fa3338341a8 '_Class'
| |   | |-TypedefDecl 0x7fa333835740 <line:2343:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fa333834180 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fa333834140 '_Rp'
| |   | `-TypedefDecl 0x7fa3338358a8 <line:2344:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fa333835850 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fa333835810 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fa333834180 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fa333834140 '_Rp'
| |   |       |-PackExpansionType 0x7fa3338342f0 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fa333834260 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fa333834218 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa333835e98 <line:2347:1, line:2353:1> line:2348:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const volatile'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fa333835920 <line:2347:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fa333835988 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fa3338359f8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fa3338361b0 <line:2348:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fa333836258 <line:2350:5, col:35> col:35 _ClassType 'const volatile _Class'
| |   | | `-QualType 0x7fa3338359d5 'const volatile _Class' const volatile
| |   | |   `-TemplateTypeParmType 0x7fa3338359d0 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fa333835988 '_Class'
| |   | |-TypedefDecl 0x7fa3338362c0 <line:2351:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fa333835960 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fa333835920 '_Rp'
| |   | `-TypedefDecl 0x7fa333836428 <line:2352:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fa3338363d0 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fa333836390 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fa333835960 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fa333835920 '_Rp'
| |   |       `-PackExpansionType 0x7fa333835ad0 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fa333835a40 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fa3338359f8 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa333836a18 <line:2355:1, line:2361:1> line:2356:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) const volatile'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fa3338364a0 <line:2355:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fa333836508 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fa333836578 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fa333836d30 <line:2356:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fa333836dd8 <line:2358:5, col:35> col:35 _ClassType 'const volatile _Class'
| |   | | `-QualType 0x7fa333836555 'const volatile _Class' const volatile
| |   | |   `-TemplateTypeParmType 0x7fa333836550 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fa333836508 '_Class'
| |   | |-TypedefDecl 0x7fa333836e40 <line:2359:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fa3338364e0 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fa3338364a0 '_Rp'
| |   | `-TypedefDecl 0x7fa333836fa8 <line:2360:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fa333836f50 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fa333836f10 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fa3338364e0 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fa3338364a0 '_Rp'
| |   |       |-PackExpansionType 0x7fa333836650 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fa3338365c0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fa333836578 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa333838198 <line:2366:1, line:2372:1> line:2367:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) &'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fa333837020 <line:2366:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fa333837088 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fa3338370f8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fa3338384b0 <line:2367:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fa333838588 <line:2369:5, col:21> col:21 _ClassType '_Class &'
| |   | | `-LValueReferenceType 0x7fa333838550 '_Class &' dependent
| |   | |   `-TemplateTypeParmType 0x7fa3338370d0 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fa333837088 '_Class'
| |   | |-TypedefDecl 0x7fa3338385f0 <line:2370:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fa333837060 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fa333837020 '_Rp'
| |   | `-TypedefDecl 0x7fa333838758 <line:2371:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fa333838700 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fa3338386c0 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fa333837060 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fa333837020 '_Rp'
| |   |       `-PackExpansionType 0x7fa3338371d0 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fa333837140 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fa3338370f8 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa333838d48 <line:2374:1, line:2380:1> line:2375:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) &'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fa3338387d0 <line:2374:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fa333838838 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fa3338388a8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fa333839060 <line:2375:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fa333839138 <line:2377:5, col:21> col:21 _ClassType '_Class &'
| |   | | `-LValueReferenceType 0x7fa333839100 '_Class &' dependent
| |   | |   `-TemplateTypeParmType 0x7fa333838880 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fa333838838 '_Class'
| |   | |-TypedefDecl 0x7fa3338391a0 <line:2378:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fa333838810 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fa3338387d0 '_Rp'
| |   | `-TypedefDecl 0x7fa333839308 <line:2379:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fa3338392b0 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fa333839270 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fa333838810 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fa3338387d0 '_Rp'
| |   |       |-PackExpansionType 0x7fa333838980 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fa3338388f0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fa3338388a8 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa3338398f8 <line:2382:1, line:2388:1> line:2383:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const &'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fa333839380 <line:2382:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fa3338393e8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fa333839458 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fa333839c10 <line:2383:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fa333839ce8 <line:2385:5, col:27> col:27 _ClassType 'const _Class &'
| |   | | `-LValueReferenceType 0x7fa333839cb0 'const _Class &' dependent
| |   | |   `-QualType 0x7fa333839431 'const _Class' const
| |   | |     `-TemplateTypeParmType 0x7fa333839430 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fa3338393e8 '_Class'
| |   | |-TypedefDecl 0x7fa333839d50 <line:2386:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fa3338393c0 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fa333839380 '_Rp'
| |   | `-TypedefDecl 0x7fa33383aaf8 <line:2387:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fa33383aaa0 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fa33383aa60 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fa3338393c0 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fa333839380 '_Rp'
| |   |       `-PackExpansionType 0x7fa333839530 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fa3338394a0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fa333839458 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa33383b0e8 <line:2390:1, line:2396:1> line:2391:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) const &'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fa33383ab70 <line:2390:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fa33383abd8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fa33383ac48 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fa33383b400 <line:2391:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fa33383b4d8 <line:2393:5, col:27> col:27 _ClassType 'const _Class &'
| |   | | `-LValueReferenceType 0x7fa33383b4a0 'const _Class &' dependent
| |   | |   `-QualType 0x7fa33383ac21 'const _Class' const
| |   | |     `-TemplateTypeParmType 0x7fa33383ac20 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fa33383abd8 '_Class'
| |   | |-TypedefDecl 0x7fa33383b540 <line:2394:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fa33383abb0 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fa33383ab70 '_Rp'
| |   | `-TypedefDecl 0x7fa33383b6a8 <line:2395:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fa33383b650 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fa33383b610 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fa33383abb0 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fa33383ab70 '_Rp'
| |   |       |-PackExpansionType 0x7fa33383ad20 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fa33383ac90 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fa33383ac48 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa33383bc98 <line:2398:1, line:2404:1> line:2399:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) volatile &'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fa33383b720 <line:2398:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fa33383b788 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fa33383b7f8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fa33383bfb0 <line:2399:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fa33383c088 <line:2401:5, col:30> col:30 _ClassType 'volatile _Class &'
| |   | | `-LValueReferenceType 0x7fa33383c050 'volatile _Class &' dependent
| |   | |   `-QualType 0x7fa33383b7d4 'volatile _Class' volatile
| |   | |     `-TemplateTypeParmType 0x7fa33383b7d0 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fa33383b788 '_Class'
| |   | |-TypedefDecl 0x7fa33383c0f0 <line:2402:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fa33383b760 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fa33383b720 '_Rp'
| |   | `-TypedefDecl 0x7fa33383c258 <line:2403:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fa33383c200 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fa33383c1c0 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fa33383b760 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fa33383b720 '_Rp'
| |   |       `-PackExpansionType 0x7fa33383b8d0 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fa33383b840 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fa33383b7f8 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa33383c848 <line:2406:1, line:2412:1> line:2407:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) volatile &'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fa33383c2d0 <line:2406:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fa33383c338 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fa33383c3a8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fa33383d370 <line:2407:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fa33383d448 <line:2409:5, col:30> col:30 _ClassType 'volatile _Class &'
| |   | | `-LValueReferenceType 0x7fa33383d410 'volatile _Class &' dependent
| |   | |   `-QualType 0x7fa33383c384 'volatile _Class' volatile
| |   | |     `-TemplateTypeParmType 0x7fa33383c380 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fa33383c338 '_Class'
| |   | |-TypedefDecl 0x7fa33383d4b0 <line:2410:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fa33383c310 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fa33383c2d0 '_Rp'
| |   | `-TypedefDecl 0x7fa33383d618 <line:2411:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fa33383d5c0 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fa33383d580 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fa33383c310 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fa33383c2d0 '_Rp'
| |   |       |-PackExpansionType 0x7fa33383c480 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fa33383c3f0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fa33383c3a8 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa33383dc08 <line:2414:1, line:2420:1> line:2415:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const volatile &'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fa33383d690 <line:2414:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fa33383d6f8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fa33383d768 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fa33383df20 <line:2415:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fa33383dff8 <line:2417:5, col:36> col:36 _ClassType 'const volatile _Class &'
| |   | | `-LValueReferenceType 0x7fa33383dfc0 'const volatile _Class &' dependent
| |   | |   `-QualType 0x7fa33383d745 'const volatile _Class' const volatile
| |   | |     `-TemplateTypeParmType 0x7fa33383d740 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fa33383d6f8 '_Class'
| |   | |-TypedefDecl 0x7fa33383e060 <line:2418:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fa33383d6d0 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fa33383d690 '_Rp'
| |   | `-TypedefDecl 0x7fa33383e1c8 <line:2419:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fa33383e170 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fa33383e130 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fa33383d6d0 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fa33383d690 '_Rp'
| |   |       `-PackExpansionType 0x7fa33383d840 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fa33383d7b0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fa33383d768 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa33383e7b8 <line:2422:1, line:2428:1> line:2423:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) const volatile &'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fa33383e240 <line:2422:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fa33383e2a8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fa33383e318 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fa33383ead0 <line:2423:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fa33383eba8 <line:2425:5, col:36> col:36 _ClassType 'const volatile _Class &'
| |   | | `-LValueReferenceType 0x7fa33383eb70 'const volatile _Class &' dependent
| |   | |   `-QualType 0x7fa33383e2f5 'const volatile _Class' const volatile
| |   | |     `-TemplateTypeParmType 0x7fa33383e2f0 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fa33383e2a8 '_Class'
| |   | |-TypedefDecl 0x7fa33383ec10 <line:2426:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fa33383e280 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fa33383e240 '_Rp'
| |   | `-TypedefDecl 0x7fa33383ed78 <line:2427:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fa33383ed20 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fa33383ece0 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fa33383e280 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fa33383e240 '_Rp'
| |   |       |-PackExpansionType 0x7fa33383e3f0 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fa33383e360 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fa33383e318 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa333840998 <line:2430:1, line:2436:1> line:2431:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) &&'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fa33383edf0 <line:2430:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fa33383ee58 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fa33383eec8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fa333840cb0 <line:2431:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fa333840db8 <line:2433:5, col:22> col:22 _ClassType '_Class &&'
| |   | | `-RValueReferenceType 0x7fa333840d80 '_Class &&' dependent
| |   | |   `-TemplateTypeParmType 0x7fa33383eea0 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fa33383ee58 '_Class'
| |   | |-TypedefDecl 0x7fa333840e20 <line:2434:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fa33383ee30 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fa33383edf0 '_Rp'
| |   | `-TypedefDecl 0x7fa333840f88 <line:2435:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fa333840f30 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fa333840ef0 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fa33383ee30 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fa33383edf0 '_Rp'
| |   |       `-PackExpansionType 0x7fa33383efa0 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fa33383ef10 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fa33383eec8 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa333841578 <line:2438:1, line:2444:1> line:2439:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) &&'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fa333841000 <line:2438:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fa333841068 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fa3338410d8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fa333841890 <line:2439:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fa333841968 <line:2441:5, col:22> col:22 _ClassType '_Class &&'
| |   | | `-RValueReferenceType 0x7fa333841930 '_Class &&' dependent
| |   | |   `-TemplateTypeParmType 0x7fa3338410b0 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fa333841068 '_Class'
| |   | |-TypedefDecl 0x7fa3338419d0 <line:2442:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fa333841040 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fa333841000 '_Rp'
| |   | `-TypedefDecl 0x7fa333841b38 <line:2443:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fa333841ae0 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fa333841aa0 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fa333841040 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fa333841000 '_Rp'
| |   |       |-PackExpansionType 0x7fa3338411b0 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fa333841120 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fa3338410d8 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa333842128 <line:2446:1, line:2452:1> line:2447:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const &&'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fa333841bb0 <line:2446:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fa333841c18 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fa333841c88 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fa333842440 <line:2447:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fa333842548 <line:2449:5, col:28> col:28 _ClassType 'const _Class &&'
| |   | | `-RValueReferenceType 0x7fa333842510 'const _Class &&' dependent
| |   | |   `-QualType 0x7fa333841c61 'const _Class' const
| |   | |     `-TemplateTypeParmType 0x7fa333841c60 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fa333841c18 '_Class'
| |   | |-TypedefDecl 0x7fa3338425b0 <line:2450:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fa333841bf0 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fa333841bb0 '_Rp'
| |   | `-TypedefDecl 0x7fa333842718 <line:2451:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fa3338426c0 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fa333842680 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fa333841bf0 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fa333841bb0 '_Rp'
| |   |       `-PackExpansionType 0x7fa333841d60 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fa333841cd0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fa333841c88 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa333843908 <line:2454:1, line:2460:1> line:2455:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) const &&'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fa333842790 <line:2454:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fa333843400 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fa333843468 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fa333843c20 <line:2455:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fa333843cf8 <line:2457:5, col:28> col:28 _ClassType 'const _Class &&'
| |   | | `-RValueReferenceType 0x7fa333843cc0 'const _Class &&' dependent
| |   | |   `-QualType 0x7fa333843441 'const _Class' const
| |   | |     `-TemplateTypeParmType 0x7fa333843440 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fa333843400 '_Class'
| |   | |-TypedefDecl 0x7fa333843d60 <line:2458:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fa3338427d0 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fa333842790 '_Rp'
| |   | `-TypedefDecl 0x7fa333843ec8 <line:2459:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fa333843e70 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fa333843e30 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fa3338427d0 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fa333842790 '_Rp'
| |   |       |-PackExpansionType 0x7fa333843540 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fa3338434b0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fa333843468 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa3338444b8 <line:2462:1, line:2468:1> line:2463:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) volatile &&'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fa333843f40 <line:2462:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fa333843fa8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fa333844018 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fa3338447d0 <line:2463:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fa3338448d8 <line:2465:5, col:31> col:31 _ClassType 'volatile _Class &&'
| |   | | `-RValueReferenceType 0x7fa3338448a0 'volatile _Class &&' dependent
| |   | |   `-QualType 0x7fa333843ff4 'volatile _Class' volatile
| |   | |     `-TemplateTypeParmType 0x7fa333843ff0 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fa333843fa8 '_Class'
| |   | |-TypedefDecl 0x7fa333844940 <line:2466:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fa333843f80 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fa333843f40 '_Rp'
| |   | `-TypedefDecl 0x7fa333844aa8 <line:2467:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fa333844a50 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fa333844a10 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fa333843f80 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fa333843f40 '_Rp'
| |   |       `-PackExpansionType 0x7fa3338440f0 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fa333844060 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fa333844018 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa333845098 <line:2470:1, line:2476:1> line:2471:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) volatile &&'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fa333844b20 <line:2470:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fa333844b88 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fa333844bf8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fa333845c00 <line:2471:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fa333845cd8 <line:2473:5, col:31> col:31 _ClassType 'volatile _Class &&'
| |   | | `-RValueReferenceType 0x7fa333845ca0 'volatile _Class &&' dependent
| |   | |   `-QualType 0x7fa333844bd4 'volatile _Class' volatile
| |   | |     `-TemplateTypeParmType 0x7fa333844bd0 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fa333844b88 '_Class'
| |   | |-TypedefDecl 0x7fa333845d40 <line:2474:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fa333844b60 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fa333844b20 '_Rp'
| |   | `-TypedefDecl 0x7fa333845ea8 <line:2475:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fa333845e50 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fa333845e10 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fa333844b60 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fa333844b20 '_Rp'
| |   |       |-PackExpansionType 0x7fa333844cd0 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fa333844c40 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fa333844bf8 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa333846498 <line:2478:1, line:2484:1> line:2479:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const volatile &&'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fa333845f20 <line:2478:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fa333845f88 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fa333845ff8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fa3338467b0 <line:2479:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fa3338468b8 <line:2481:5, col:37> col:37 _ClassType 'const volatile _Class &&'
| |   | | `-RValueReferenceType 0x7fa333846880 'const volatile _Class &&' dependent
| |   | |   `-QualType 0x7fa333845fd5 'const volatile _Class' const volatile
| |   | |     `-TemplateTypeParmType 0x7fa333845fd0 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fa333845f88 '_Class'
| |   | |-TypedefDecl 0x7fa333846920 <line:2482:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fa333845f60 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fa333845f20 '_Rp'
| |   | `-TypedefDecl 0x7fa333846a88 <line:2483:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fa333846a30 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fa3338469f0 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fa333845f60 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fa333845f20 '_Rp'
| |   |       `-PackExpansionType 0x7fa3338460d0 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fa333846040 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fa333845ff8 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa333847078 <line:2486:1, line:2492:1> line:2487:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) const volatile &&'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fa333846b00 <line:2486:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fa333846b68 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fa333846bd8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fa333847390 <line:2487:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fa333847468 <line:2489:5, col:37> col:37 _ClassType 'const volatile _Class &&'
| |   | | `-RValueReferenceType 0x7fa333847430 'const volatile _Class &&' dependent
| |   | |   `-QualType 0x7fa333846bb5 'const volatile _Class' const volatile
| |   | |     `-TemplateTypeParmType 0x7fa333846bb0 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fa333846b68 '_Class'
| |   | |-TypedefDecl 0x7fa3338474d0 <line:2490:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fa333846b40 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fa333846b00 '_Rp'
| |   | `-TypedefDecl 0x7fa333847638 <line:2491:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fa3338475e0 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fa3338475a0 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fa333846b40 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fa333846b00 '_Rp'
| |   |       |-PackExpansionType 0x7fa333846cb0 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fa333846c20 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fa333846bd8 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa333847a08 <line:2756:1, line:2761:1> line:2757:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 type-parameter-0-1::*'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fa3338476b0 <line:2756:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fa333847718 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-CXXRecordDecl 0x7fa333848950 <line:2757:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fa3338489f8 <line:2759:5, col:20> col:20 _ClassType '_Class'
| |   | | `-TemplateTypeParmType 0x7fa333847760 '_Class' dependent depth 0 index 1
| |   | |   `-TemplateTypeParm 0x7fa333847718 '_Class'
| |   | `-TypedefDecl 0x7fa333848a60 <line:2760:5, col:17> col:17 _ReturnType '_Rp'
| |   |   `-TemplateTypeParmType 0x7fa3338476f0 '_Rp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fa3338476b0 '_Rp'
| |   |-ClassTemplateDecl 0x7fa333848bf8 <line:2763:1, line:2772:1> line:2764:8 __member_pointer_traits
| |   | |-TemplateTypeParmDecl 0x7fa333848ad8 <line:2763:11, col:17> col:17 referenced class depth 0 index 0 _MP
| |   | `-CXXRecordDecl 0x7fa333848b60 <line:2764:1, line:2772:1> line:2764:8 struct __member_pointer_traits definition
| |   |   |-public '__member_pointer_traits_imp<typename remove_cv<_MP>::type, is_member_function_pointer<_MP>::value, is_member_object_pointer<_MP>::value>'
| |   |   `-CXXRecordDecl 0x7fa333849378 <col:1, col:8> col:8 implicit struct __member_pointer_traits
| |   |-ClassTemplateDecl 0x7fa333849548 <line:2775:1, line:2776:37> col:8 __member_pointer_class_type
| |   | |-TemplateTypeParmDecl 0x7fa333849430 <line:2775:11, col:17> col:17 class depth 0 index 0 _DecayedFp
| |   | `-CXXRecordDecl 0x7fa3338494b0 <line:2776:1, col:37> col:8 struct __member_pointer_class_type definition
| |   |   `-CXXRecordDecl 0x7fa3338497c0 <col:1, col:8> col:8 implicit struct __member_pointer_class_type
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa333849ae8 <line:2778:1, line:2781:1> line:2779:8 struct __member_pointer_class_type definition
| |   | |-TemplateArgument type 'type-parameter-0-0 type-parameter-0-1::*'
| |   | |-TemplateTypeParmDecl 0x7fa333849878 <line:2778:11, col:17> col:17 referenced class depth 0 index 0 _Ret
| |   | |-TemplateTypeParmDecl 0x7fa3338498e8 <col:23, col:29> col:29 referenced class depth 0 index 1 _ClassType
| |   | |-CXXRecordDecl 0x7fa333849d30 <line:2779:1, col:8> col:8 implicit struct __member_pointer_class_type
| |   | `-TypedefDecl 0x7fa333849dd8 <line:2780:3, col:22> col:22 type '_ClassType'
| |   |   `-TemplateTypeParmType 0x7fa333849930 '_ClassType' dependent depth 0 index 1
| |   |     `-TemplateTypeParm 0x7fa3338498e8 '_ClassType'
| |   |-ClassTemplateDecl 0x7fa333849f68 <line:2785:1, col:34> col:34 result_of
| |   | |-TemplateTypeParmDecl 0x7fa333849e50 <col:11, col:17> col:17 class depth 0 index 0 _Callable
| |   | `-CXXRecordDecl 0x7fa333849ed0 <col:28, col:34> col:34 class result_of
| |   |-NamespaceDecl 0x7fa33384a178 <line:2937:1, line:2940:1> line:2937:11 __is_construct
| |   | `-CXXRecordDecl 0x7fa33384a1e0 <line:2939:1, col:15> col:8 struct __nat definition
| |   |   `-CXXRecordDecl 0x7fa33384a308 <col:1, col:8> col:8 implicit struct __nat
| |   |-ClassTemplateDecl 0x7fa33384a580 <line:3059:1, line:3062:6> line:3060:29 is_constructible
| |   | |-TemplateTypeParmDecl 0x7fa33384a3c0 <line:3059:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fa33384a428 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | `-CXXRecordDecl 0x7fa33384a4e8 <line:3060:1, line:3062:6> line:3060:29 struct is_constructible definition
| |   |   |-public 'integral_constant<_Bool, __is_constructible(_Tp, _Args...)>'
| |   |   |-TypeVisibilityAttr 0x7fa33384ac90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fa33384ae98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3060:1, col:29> col:29 implicit struct is_constructible
| |   |-ClassTemplateDecl 0x7fa33384b098 <line:3250:1, line:3253:6> line:3251:29 is_default_constructible
| |   | |-TemplateTypeParmDecl 0x7fa33384af50 <line:3250:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa33384b000 <line:3251:1, line:3253:6> line:3251:29 struct is_default_constructible definition
| |   |   |-public 'is_constructible<_Tp>'
| |   |   |-TypeVisibilityAttr 0x7fa33384b310 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fa33384b478 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3251:1, col:29> col:29 implicit struct is_default_constructible
| |   |-ClassTemplateDecl 0x7fa33384b678 <line:3262:1, line:3265:88> line:3263:29 is_copy_constructible
| |   | |-TemplateTypeParmDecl 0x7fa33384b530 <line:3262:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa33384b5e0 <line:3263:1, line:3265:88> line:3263:29 struct is_copy_constructible definition
| |   |   |-public 'is_constructible<_Tp, typename add_lvalue_reference<typename add_const<_Tp>::type>::type>'
| |   |   |-TypeVisibilityAttr 0x7fa33384b8f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fa33384bce8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3263:1, col:29> col:29 implicit struct is_copy_constructible
| |   |-ClassTemplateDecl 0x7fa33384bee8 <line:3274:1, line:3281:6> line:3275:29 is_move_constructible
| |   | |-TemplateTypeParmDecl 0x7fa33384bda0 <line:3274:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa33384be50 <line:3275:1, line:3281:6> line:3275:29 struct is_move_constructible definition
| |   |   |-public 'is_constructible<_Tp, typename add_rvalue_reference<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fa33384c160 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fa33384c448 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3275:1, col:29> col:29 implicit struct is_move_constructible
| |   |-ClassTemplateDecl 0x7fa33384c6c0 <line:3294:1, line:3298:1> line:3295:29 is_trivially_constructible
| |   | |-TemplateTypeParmDecl 0x7fa33384c500 <line:3294:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fa33384c568 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | `-CXXRecordDecl 0x7fa33384c628 <line:3295:1, line:3298:1> line:3295:29 struct is_trivially_constructible definition
| |   |   |-public 'integral_constant<_Bool, __is_trivially_constructible(_Tp, _Args...)>'
| |   |   |-TypeVisibilityAttr 0x7fa33384c9c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fa333850c00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3295:1, col:29> col:29 implicit struct is_trivially_constructible
| |   |-ClassTemplateDecl 0x7fa333850e08 <line:3422:1, line:3424:6> line:3422:50 is_trivially_default_constructible
| |   | |-TemplateTypeParmDecl 0x7fa333850cb8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa333850d70 <col:22, line:3424:6> line:3422:50 struct is_trivially_default_constructible definition
| |   |   |-public 'is_trivially_constructible<_Tp>'
| |   |   |-TypeVisibilityAttr 0x7fa333851080 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fa3338511e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3422:22, col:50> col:50 implicit struct is_trivially_default_constructible
| |   |-ClassTemplateDecl 0x7fa3338513e8 <line:3433:1, line:3435:6> line:3433:50 is_trivially_copy_constructible
| |   | |-TemplateTypeParmDecl 0x7fa3338512a0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa333851350 <col:22, line:3435:6> line:3433:50 struct is_trivially_copy_constructible definition
| |   |   |-public 'is_trivially_constructible<_Tp, typename add_lvalue_reference<const _Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fa333851660 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fa3338519d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3433:22, col:50> col:50 implicit struct is_trivially_copy_constructible
| |   |-ClassTemplateDecl 0x7fa333851bd8 <line:3444:1, line:3450:6> line:3444:50 is_trivially_move_constructible
| |   | |-TemplateTypeParmDecl 0x7fa333851a90 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa333851b40 <col:22, line:3450:6> line:3444:50 struct is_trivially_move_constructible definition
| |   |   |-public 'is_trivially_constructible<_Tp, typename add_rvalue_reference<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fa333851e50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fa333852138 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3444:22, col:50> col:50 implicit struct is_trivially_move_constructible
| |   |-ClassTemplateDecl 0x7fa333852380 <line:3461:1, line:3465:1> line:3462:8 is_trivially_assignable
| |   | |-TemplateTypeParmDecl 0x7fa3338521f0 <line:3461:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fa333852258 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | `-CXXRecordDecl 0x7fa3338522e8 <line:3462:1, line:3465:1> line:3462:8 struct is_trivially_assignable definition
| |   |   |-public 'integral_constant<_Bool, __is_trivially_assignable(_Tp, _Arg)>'
| |   |   `-CXXRecordDecl 0x7fa3338527d8 <col:1, col:8> col:8 implicit struct is_trivially_assignable
| |   |-ClassTemplateDecl 0x7fa3338529d8 <line:3502:1, line:3504:88> line:3502:50 is_trivially_copy_assignable
| |   | |-TemplateTypeParmDecl 0x7fa333852890 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa333852940 <col:22, line:3504:88> line:3502:50 struct is_trivially_copy_assignable definition
| |   |   |-public 'is_trivially_assignable<typename add_lvalue_reference<_Tp>::type, typename add_lvalue_reference<typename add_const<_Tp>::type>::type>'
| |   |   |-TypeVisibilityAttr 0x7fa333854e68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fa333855338 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3502:22, col:50> col:50 implicit struct is_trivially_copy_assignable
| |   |-ClassTemplateDecl 0x7fa333855538 <line:3513:1, line:3520:6> line:3513:50 is_trivially_move_assignable
| |   | |-TemplateTypeParmDecl 0x7fa3338553f0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa3338554a0 <col:22, line:3520:6> line:3513:50 struct is_trivially_move_assignable definition
| |   |   |-public 'is_trivially_assignable<typename add_lvalue_reference<_Tp>::type, typename add_rvalue_reference<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fa3338557b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fa333855b78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3513:22, col:50> col:50 implicit struct is_trivially_move_assignable
| |   |-ClassTemplateDecl 0x7fa333855d78 <line:3531:1, line:3532:101> line:3531:50 is_trivially_destructible
| |   | |-TemplateTypeParmDecl 0x7fa333855c30 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa333855ce0 <col:22, line:3532:101> line:3531:50 struct is_trivially_destructible definition
| |   |   |-public 'integral_constant<_Bool, is_destructible<_Tp>::value && __has_trivial_destructor(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fa333855ff0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fa333856338 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3531:22, col:50> col:50 implicit struct is_trivially_destructible
| |   |-ClassTemplateDecl 0x7fa333856660 <line:3568:1, col:57> col:57 __libcpp_is_nothrow_constructible
| |   | |-NonTypeTemplateParmDecl 0x7fa333856400 <col:11> col:15 '_Bool' depth 0 index 0
| |   | |-NonTypeTemplateParmDecl 0x7fa333856468 <col:17> col:21 '_Bool' depth 0 index 1
| |   | |-TemplateTypeParmDecl 0x7fa3338564c0 <col:23, col:29> col:29 class depth 0 index 2 _Tp
| |   | |-TemplateTypeParmDecl 0x7fa333856528 <col:34, col:43> col:43 class depth 0 index 3 ... _Args
| |   | `-CXXRecordDecl 0x7fa3338565c8 <col:50, col:57> col:57 struct __libcpp_is_nothrow_constructible
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa333856e00 <line:3570:1, line:3574:1> line:3571:8 struct __libcpp_is_nothrow_constructible definition
| |   | |-public 'integral_constant<_Bool, noexcept(_Tp(declval<_Args>()...))>'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-1...'
| |   | |-TemplateTypeParmDecl 0x7fa3338569a8 <line:3570:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fa333856a18 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | `-CXXRecordDecl 0x7fa333857448 <line:3571:1, col:8> col:8 implicit struct __libcpp_is_nothrow_constructible
| |   |-FunctionTemplateDecl 0x7fa333857730 <line:3576:1, line:3577:47> col:6 __implicit_conversion_to
| |   | |-TemplateTypeParmDecl 0x7fa333857500 <line:3576:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fa333857698 <line:3577:1, col:47> col:6 __implicit_conversion_to 'void (_Tp) noexcept'
| |   |   |-ParmVarDecl 0x7fa333857590 <col:31> col:34 '_Tp'
| |   |   `-CompoundStmt 0x7fa333857788 <col:45, col:47>
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa333857b10 <line:3579:1, line:3583:1> line:3580:8 struct __libcpp_is_nothrow_constructible definition
| |   | |-public 'integral_constant<_Bool, noexcept(__implicit_conversion_to<_Tp>(declval<_Arg>()))>'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateTypeParmDecl 0x7fa3338577a0 <line:3579:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fa333857808 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | `-CXXRecordDecl 0x7fa3338581c8 <line:3580:1, col:8> col:8 implicit struct __libcpp_is_nothrow_constructible
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa3338586a0 <line:3585:1, line:3589:1> line:3586:8 struct __libcpp_is_nothrow_constructible definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fa3338583f8 <col:69> '_Bool' NonTypeTemplateParm 0x7fa3338582f8 '_IsReference' '_Bool'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-2...'
| |   | |-TemplateTypeParmDecl 0x7fa333858280 <line:3585:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fa3338582f8 <col:22, col:27> col:27 referenced '_Bool' depth 0 index 1 _IsReference
| |   | |-TemplateTypeParmDecl 0x7fa333858350 <col:41, col:50> col:50 referenced class depth 0 index 2 ... _Args
| |   | `-CXXRecordDecl 0x7fa333858a40 <line:3586:1, col:8> col:8 implicit struct __libcpp_is_nothrow_constructible
| |   |-ClassTemplateDecl 0x7fa333858cc0 <line:3591:1, line:3595:1> line:3592:29 is_nothrow_constructible
| |   | |-TemplateTypeParmDecl 0x7fa333858af8 <line:3591:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fa333858b68 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | `-CXXRecordDecl 0x7fa333858c28 <line:3592:1, line:3595:1> line:3592:29 struct is_nothrow_constructible definition
| |   |   |-public '__libcpp_is_nothrow_constructible<is_constructible<_Tp, _Args...>::value, is_reference<_Tp>::value, _Tp, _Args...>'
| |   |   |-TypeVisibilityAttr 0x7fa3338590b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fa333859608 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3592:1, col:29> col:29 implicit struct is_nothrow_constructible
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa333859970 <line:3597:1, line:3601:1> line:3598:29 struct is_nothrow_constructible definition
| |   | |-public '__libcpp_is_nothrow_constructible<is_constructible<_Tp>::value, is_reference<_Tp>::value, _Tp>'
| |   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
| |   | |-TemplateArgument pack
| |   | |-TemplateTypeParmDecl 0x7fa3338596c0 <line:3597:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fa333859738 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Ns
| |   | |-TypeVisibilityAttr 0x7fa333859ad8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fa33385a018 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3598:1, col:29> col:29 implicit struct is_nothrow_constructible
| |   |-ClassTemplateDecl 0x7fa33385a218 <line:3720:1, line:3722:6> line:3720:50 is_nothrow_default_constructible
| |   | |-TemplateTypeParmDecl 0x7fa33385a0d0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa33385a180 <col:22, line:3722:6> line:3720:50 struct is_nothrow_default_constructible definition
| |   |   |-public 'is_nothrow_constructible<_Tp>'
| |   |   |-TypeVisibilityAttr 0x7fa33385a490 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fa33385a5f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3720:22, col:50> col:50 implicit struct is_nothrow_default_constructible
| |   |-ClassTemplateDecl 0x7fa33385a7f8 <line:3731:1, line:3733:88> line:3731:50 is_nothrow_copy_constructible
| |   | |-TemplateTypeParmDecl 0x7fa33385a6b0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa33385a760 <col:22, line:3733:88> line:3731:50 struct is_nothrow_copy_constructible definition
| |   |   |-public 'is_nothrow_constructible<_Tp, typename add_lvalue_reference<typename add_const<_Tp>::type>::type>'
| |   |   |-TypeVisibilityAttr 0x7fa33385aa70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fa33385ce78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3731:22, col:50> col:50 implicit struct is_nothrow_copy_constructible
| |   |-ClassTemplateDecl 0x7fa33385d078 <line:3742:1, line:3748:6> line:3742:50 is_nothrow_move_constructible
| |   | |-TemplateTypeParmDecl 0x7fa33385cf30 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa33385cfe0 <col:22, line:3748:6> line:3742:50 struct is_nothrow_move_constructible definition
| |   |   |-public 'is_nothrow_constructible<_Tp, typename add_rvalue_reference<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fa33385d2f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fa33385d5d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3742:22, col:50> col:50 implicit struct is_nothrow_move_constructible
| |   |-ClassTemplateDecl 0x7fa33385d898 <line:3759:1, col:47> col:47 __libcpp_is_nothrow_assignable
| |   | |-NonTypeTemplateParmDecl 0x7fa33385d6a0 <col:11> col:15 '_Bool' depth 0 index 0
| |   | |-TemplateTypeParmDecl 0x7fa33385d6f8 <col:17, col:23> col:23 class depth 0 index 1 _Tp
| |   | |-TemplateTypeParmDecl 0x7fa33385d768 <col:28, col:34> col:34 class depth 0 index 2 _Arg
| |   | `-CXXRecordDecl 0x7fa33385d800 <col:40, col:47> col:47 struct __libcpp_is_nothrow_assignable
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa33385de08 <line:3761:1, line:3765:1> line:3762:8 struct __libcpp_is_nothrow_assignable definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateTypeParmDecl 0x7fa33385db38 <line:3761:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fa33385dba8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | `-CXXRecordDecl 0x7fa33385e130 <line:3762:1, col:8> col:8 implicit struct __libcpp_is_nothrow_assignable
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa33385e4b8 <line:3767:1, line:3771:1> line:3768:8 struct __libcpp_is_nothrow_assignable definition
| |   | |-public 'integral_constant<_Bool, noexcept(std::__1::declval<_Tp>() = std::__1::declval<_Arg>())>'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateTypeParmDecl 0x7fa33385e1e8 <line:3767:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fa33385e258 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | `-CXXRecordDecl 0x7fa33385eb58 <line:3768:1, col:8> col:8 implicit struct __libcpp_is_nothrow_assignable
| |   |-ClassTemplateDecl 0x7fa333862200 <line:3773:1, line:3777:1> line:3774:29 is_nothrow_assignable
| |   | |-TemplateTypeParmDecl 0x7fa33385ec10 <line:3773:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fa33385ec78 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | `-CXXRecordDecl 0x7fa33385ed38 <line:3774:1, line:3777:1> line:3774:29 struct is_nothrow_assignable definition
| |   |   |-public '__libcpp_is_nothrow_assignable<is_assignable<_Tp, _Arg>::value, _Tp, _Arg>'
| |   |   |-TypeVisibilityAttr 0x7fa3338624a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fa333862818 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3774:1, col:29> col:29 implicit struct is_nothrow_assignable
| |   |-ClassTemplateDecl 0x7fa333862a18 <line:3830:1, line:3832:88> line:3830:50 is_nothrow_copy_assignable
| |   | |-TemplateTypeParmDecl 0x7fa3338628d0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa333862980 <col:22, line:3832:88> line:3830:50 struct is_nothrow_copy_assignable definition
| |   |   |-public 'is_nothrow_assignable<typename add_lvalue_reference<_Tp>::type, typename add_lvalue_reference<typename add_const<_Tp>::type>::type>'
| |   |   |-TypeVisibilityAttr 0x7fa333862c90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fa333863168 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3830:22, col:50> col:50 implicit struct is_nothrow_copy_assignable
| |   |-ClassTemplateDecl 0x7fa333863368 <line:3841:1, line:3848:6> line:3841:50 is_nothrow_move_assignable
| |   | |-TemplateTypeParmDecl 0x7fa333863220 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa3338632d0 <col:22, line:3848:6> line:3841:50 struct is_nothrow_move_assignable definition
| |   |   |-public 'is_nothrow_assignable<typename add_lvalue_reference<_Tp>::type, typename add_rvalue_reference<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fa3338635e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fa3338639a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3841:22, col:50> col:50 implicit struct is_nothrow_move_assignable
| |   |-ClassTemplateDecl 0x7fa333863bf0 <line:3859:1, col:35> col:35 __libcpp_is_nothrow_destructible
| |   | |-NonTypeTemplateParmDecl 0x7fa333863a70 <col:11> col:15 '_Bool' depth 0 index 0
| |   | |-TemplateTypeParmDecl 0x7fa333863ac8 <col:17, col:23> col:23 class depth 0 index 1 _Tp
| |   | `-CXXRecordDecl 0x7fa333863b58 <col:28, col:35> col:35 struct __libcpp_is_nothrow_destructible
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa333864030 <line:3861:1, line:3865:1> line:3862:8 struct __libcpp_is_nothrow_destructible definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fa333863e48 <line:3861:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa333864300 <line:3862:1, col:8> col:8 implicit struct __libcpp_is_nothrow_destructible
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa3338645a0 <line:3867:1, line:3871:1> line:3868:8 struct __libcpp_is_nothrow_destructible definition
| |   | |-public 'integral_constant<_Bool, noexcept(std::__1::declval<_Tp>().~_Tp())>'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fa3338643b8 <line:3867:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa333864b48 <line:3868:1, col:8> col:8 implicit struct __libcpp_is_nothrow_destructible
| |   |-ClassTemplateDecl 0x7fa333864d48 <line:3873:1, line:3877:1> line:3874:29 is_nothrow_destructible
| |   | |-TemplateTypeParmDecl 0x7fa333864c00 <line:3873:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa333864cb0 <line:3874:1, line:3877:1> line:3874:29 struct is_nothrow_destructible definition
| |   |   |-public '__libcpp_is_nothrow_destructible<is_destructible<_Tp>::value, _Tp>'
| |   |   |-TypeVisibilityAttr 0x7fa333864fc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fa333865278 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3874:1, col:29> col:29 implicit struct is_nothrow_destructible
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa3338655b8 <line:3879:1, line:3883:1> line:3880:29 struct is_nothrow_destructible definition
| |   | |-public 'is_nothrow_destructible<_Tp>'
| |   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
| |   | |-TemplateTypeParmDecl 0x7fa333865330 <line:3879:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fa3338653a8 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Ns
| |   | |-TypeVisibilityAttr 0x7fa333865708 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fa3338658f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3880:1, col:29> col:29 implicit struct is_nothrow_destructible
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa333865b78 <line:3885:1, line:3889:1> line:3886:29 struct is_nothrow_destructible definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateTypeParmDecl 0x7fa3338659b0 <line:3885:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fa333865cb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fa333865e30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3886:1, col:29> col:29 implicit struct is_nothrow_destructible
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa3338660b8 <line:3893:1, line:3897:1> line:3894:29 struct is_nothrow_destructible definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 &&'
| |   | |-TemplateTypeParmDecl 0x7fa333865ee8 <line:3893:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fa333866200 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fa333866380 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3894:1, col:29> col:29 implicit struct is_nothrow_destructible
| |   |-ClassTemplateDecl 0x7fa333866588 <line:3925:1, line:3926:54> line:3925:50 is_pod
| |   | |-TemplateTypeParmDecl 0x7fa333866438 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa3338664f0 <col:22, line:3926:54> line:3925:50 struct is_pod definition
| |   |   |-public 'integral_constant<_Bool, __is_pod(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fa333866800 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fa3338669e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3925:22, col:50> col:50 implicit struct is_pod
| |   |-ClassTemplateDecl 0x7fa333866be8 <line:3945:1, line:3952:6> line:3945:50 is_literal_type
| |   | |-TemplateTypeParmDecl 0x7fa333866aa0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa333866b50 <col:22, line:3952:6> line:3945:50 struct is_literal_type definition
| |   |   |-public 'integral_constant<_Bool, __is_literal(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fa333866e60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fa333867048 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3945:22, col:50> col:50 implicit struct is_literal_type
| |   |-ClassTemplateDecl 0x7fa333867248 <line:3961:1, line:3967:6> line:3961:50 is_standard_layout
| |   | |-TemplateTypeParmDecl 0x7fa333867100 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa3338671b0 <col:22, line:3967:6> line:3961:50 struct is_standard_layout definition
| |   |   |-public 'integral_constant<_Bool, __is_standard_layout(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fa3338674c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fa3338676a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3961:22, col:50> col:50 implicit struct is_standard_layout
| |   |-ClassTemplateDecl 0x7fa3338678a8 <line:3976:1, line:3984:6> line:3976:50 is_trivially_copyable
| |   | |-TemplateTypeParmDecl 0x7fa333867760 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa333867810 <col:22, line:3984:6> line:3976:50 struct is_trivially_copyable definition
| |   |   |-public 'integral_constant<_Bool, __is_trivially_copyable(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fa333867b20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fa333867d08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3976:22, col:50> col:50 implicit struct is_trivially_copyable
| |   |-ClassTemplateDecl 0x7fa333867f08 <line:3993:1, line:4000:6> line:3993:50 is_trivial
| |   | |-TemplateTypeParmDecl 0x7fa333867dc0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa333867e70 <col:22, line:4000:6> line:3993:50 struct is_trivial definition
| |   |   |-public 'integral_constant<_Bool, __is_trivial(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fa333868180 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fa33386a378 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3993:22, col:50> col:50 implicit struct is_trivial
| |   |-ClassTemplateDecl 0x7fa33386a548 <line:4007:1, col:78> col:29 __is_reference_wrapper_impl
| |   | |-TemplateTypeParmDecl 0x7fa33386a430 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa33386a4b0 <col:22, col:78> col:29 struct __is_reference_wrapper_impl definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   `-CXXRecordDecl 0x7fa33386a800 <col:22, col:29> col:29 implicit struct __is_reference_wrapper_impl
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa33386aad8 <line:4008:1, col:102> col:29 struct __is_reference_wrapper_impl definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'reference_wrapper<type-parameter-0-0>'
| |   | |-TemplateTypeParmDecl 0x7fa33386a8b8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa33386ad80 <col:22, col:29> col:29 implicit struct __is_reference_wrapper_impl
| |   |-ClassTemplateDecl 0x7fa33386af58 <line:4009:1, line:4010:74> line:4009:29 __is_reference_wrapper
| |   | |-TemplateTypeParmDecl 0x7fa33386ae38 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa33386aec0 <col:22, line:4010:74> line:4009:29 struct __is_reference_wrapper definition
| |   |   |-public '__is_reference_wrapper_impl<typename remove_cv<_Tp>::type>'
| |   |   `-CXXRecordDecl 0x7fa33386b3e8 <col:22, col:29> col:29 implicit struct __is_reference_wrapper
| |   |-ClassTemplateDecl 0x7fa33386b5b8 <line:4016:1, col:32> col:32 __check_complete
| |   | |-TemplateTypeParmDecl 0x7fa33386b4a0 <col:11, col:20> col:20 class depth 0 index 0 ... _Tp
| |   | |-CXXRecordDecl 0x7fa33386b520 <col:25, col:32> col:32 struct __check_complete
| |   | `-ClassTemplateSpecialization 0x7fa33386b838 '__check_complete'
| |   |-ClassTemplateSpecializationDecl 0x7fa33386b838 <line:4018:1, line:4021:1> line:4019:8 struct __check_complete definition
| |   | |-TemplateArgument pack
| |   | `-CXXRecordDecl 0x7fa33386ba30 <col:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa33386be98 <line:4023:1, line:4028:1> line:4024:8 struct __check_complete definition
| |   | |-private '__check_complete<_Hp>'
| |   | |-private '__check_complete<_T0, _Tp...>'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | |-TemplateArgument type 'type-parameter-0-1'
| |   | | `-TemplateArgument type 'type-parameter-0-2...'
| |   | |-TemplateTypeParmDecl 0x7fa33386bae8 <line:4023:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-TemplateTypeParmDecl 0x7fa33386bb58 <col:22, col:28> col:28 referenced class depth 0 index 1 _T0
| |   | |-TemplateTypeParmDecl 0x7fa33386bbc8 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Tp
| |   | `-CXXRecordDecl 0x7fa33386c4e0 <line:4024:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa33386c7a8 <line:4030:1, line:4034:1> line:4031:8 struct __check_complete definition
| |   | |-private '__check_complete<_Hp>'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | `-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fa33386c598 <line:4030:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | `-CXXRecordDecl 0x7fa33386cb68 <line:4031:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa33386cd68 <line:4036:1, line:4040:1> line:4037:8 struct __check_complete definition
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fa33386cc20 <line:4036:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fa33386cfd0 <line:4037:1, col:8> col:8 implicit struct __check_complete
| |   | `-StaticAssertDecl 0x7fa33386d1b8 <line:4039:5, col:60> col:5
| |   |   |-BinaryOperator 0x7fa33386d0d0 <col:19, col:33> '_Bool' '>'
| |   |   | |-UnaryExprOrTypeTraitExpr 0x7fa33386d078 <col:19, col:29> 'unsigned long' sizeof '_Tp'
| |   |   | `-ImplicitCastExpr 0x7fa33386d0b8 <col:33> 'unsigned long' <IntegralCast>
| |   |   |   `-IntegerLiteral 0x7fa33386d098 <col:33> 'int' 0
| |   |   `-StringLiteral 0x7fa33386d178 <col:36> 'const char [23]' lvalue "Type must be complete."
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa33386d3d8 <line:4042:1, line:4046:1> line:4043:8 struct __check_complete definition
| |   | |-private '__check_complete<_Tp>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateTypeParmDecl 0x7fa33386d210 <line:4042:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa33386d728 <line:4043:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa33386d9a8 <line:4048:1, line:4052:1> line:4049:8 struct __check_complete definition
| |   | |-private '__check_complete<_Tp>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 &&'
| |   | |-TemplateTypeParmDecl 0x7fa33386d7e0 <line:4048:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa33386dcf8 <line:4049:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa33386e200 <line:4054:1, line:4058:1> line:4055:8 struct __check_complete definition
| |   | |-private '__check_complete<_Rp>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (*)(type-parameter-0-1...)'
| |   | |-TemplateTypeParmDecl 0x7fa33386ddb0 <line:4054:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fa33386de18 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Param
| |   | `-CXXRecordDecl 0x7fa33386e568 <line:4055:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa33386e988 <line:4060:1, line:4063:1> line:4061:8 struct __check_complete definition
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'void (*)(type-parameter-0-0...)'
| |   | |-TemplateTypeParmDecl 0x7fa33386e620 <line:4060:11, col:20> col:20 referenced class depth 0 index 0 ... _Param
| |   | `-CXXRecordDecl 0x7fa33386ec10 <line:4061:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa33386efd8 <line:4065:1, line:4069:1> line:4066:8 struct __check_complete definition
| |   | |-private '__check_complete<_Rp>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1...)'
| |   | |-TemplateTypeParmDecl 0x7fa33386ecc8 <line:4065:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fa33386ed38 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Param
| |   | `-CXXRecordDecl 0x7fa33386f338 <line:4066:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa33386f678 <line:4071:1, line:4074:1> line:4072:8 struct __check_complete definition
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'void (type-parameter-0-0...)'
| |   | |-TemplateTypeParmDecl 0x7fa33386f3f0 <line:4071:11, col:20> col:20 referenced class depth 0 index 0 ... _Param
| |   | `-CXXRecordDecl 0x7fa33386f8f0 <line:4072:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa33386fdf8 <line:4076:1, line:4080:1> line:4077:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...)'
| |   | |-TemplateTypeParmDecl 0x7fa33386f9a8 <line:4076:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fa33386fa18 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fa33386fa88 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fa333870200 <line:4077:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa333870708 <line:4082:1, line:4086:1> line:4083:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const'
| |   | |-TemplateTypeParmDecl 0x7fa3338702b8 <line:4082:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fa333870328 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fa333870398 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fa333870a78 <line:4083:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa333870f78 <line:4088:1, line:4092:1> line:4089:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) volatile'
| |   | |-TemplateTypeParmDecl 0x7fa333870b30 <line:4088:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fa333870b98 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fa333870c08 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fa3338712e8 <line:4089:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa3338717e8 <line:4094:1, line:4098:1> line:4095:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const volatile'
| |   | |-TemplateTypeParmDecl 0x7fa3338713a0 <line:4094:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fa333871408 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fa333871478 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fa333871b58 <line:4095:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa333872058 <line:4100:1, line:4104:1> line:4101:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) &'
| |   | |-TemplateTypeParmDecl 0x7fa333871c10 <line:4100:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fa333871c78 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fa333871ce8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fa333872dd8 <line:4101:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa3338732d8 <line:4106:1, line:4110:1> line:4107:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const &'
| |   | |-TemplateTypeParmDecl 0x7fa333872e90 <line:4106:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fa333872ef8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fa333872f68 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fa333873648 <line:4107:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa333873b48 <line:4112:1, line:4116:1> line:4113:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) volatile &'
| |   | |-TemplateTypeParmDecl 0x7fa333873700 <line:4112:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fa333873768 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fa3338737d8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fa333873eb8 <line:4113:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa3338743b8 <line:4118:1, line:4122:1> line:4119:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const volatile &'
| |   | |-TemplateTypeParmDecl 0x7fa333873f70 <line:4118:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fa333873fd8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fa333874048 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fa333874728 <line:4119:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa333874c40 <line:4124:1, line:4128:1> line:4125:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) &&'
| |   | |-TemplateTypeParmDecl 0x7fa3338747e0 <line:4124:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fa333874848 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fa3338748b8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fa333874fa8 <line:4125:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa3338754a8 <line:4130:1, line:4134:1> line:4131:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const &&'
| |   | |-TemplateTypeParmDecl 0x7fa333875060 <line:4130:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fa3338750c8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fa333875138 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fa333875818 <line:4131:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa333875d18 <line:4136:1, line:4140:1> line:4137:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) volatile &&'
| |   | |-TemplateTypeParmDecl 0x7fa3338758d0 <line:4136:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fa333875938 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fa3338759a8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fa333876088 <line:4137:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa333876588 <line:4142:1, line:4146:1> line:4143:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const volatile &&'
| |   | |-TemplateTypeParmDecl 0x7fa333876140 <line:4142:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fa3338761a8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fa333876218 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fa3338768f8 <line:4143:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa333876c88 <line:4148:1, line:4152:1> line:4149:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 type-parameter-0-1::*'
| |   | |-TemplateTypeParmDecl 0x7fa3338769b0 <line:4148:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fa333876a18 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | `-CXXRecordDecl 0x7fa333876fe8 <line:4149:1, col:8> col:8 implicit struct __check_complete
| |   |-TypeAliasTemplateDecl 0x7fa333877ca0 <line:4155:1, line:4163:8> line:4159:1 __enable_if_bullet1
| |   | |-TemplateTypeParmDecl 0x7fa3338770a0 <line:4155:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fa333877108 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fa3338772a0 <line:4156:10, col:48> col:16 referenced class depth 0 index 2 _DecayFp
| |   | | `-TemplateArgument type 'typename decay<_Fp>::type'
| |   | |-TemplateTypeParmDecl 0x7fa333877430 <line:4157:10, col:48> col:16 referenced class depth 0 index 3 _DecayA0
| |   | | `-TemplateArgument type 'typename decay<_A0>::type'
| |   | |-TemplateTypeParmDecl 0x7fa333877650 <line:4158:10, col:74> col:16 referenced class depth 0 index 4 _ClassT
| |   | | `-TemplateArgument type 'typename __member_pointer_class_type<_DecayFp>::type'
| |   | `-TypeAliasDecl 0x7fa333877c40 <line:4159:1, line:4163:8> line:4159:7 __enable_if_bullet1 'typename enable_if<is_member_function_pointer<_DecayFp>::value && is_base_of<_ClassT, _DecayA0>::value>::type'
| |   |   `-DependentNameType 0x7fa333877bd0 'typename enable_if<is_member_function_pointer<_DecayFp>::value && is_base_of<_ClassT, _DecayA0>::value>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fa3338785f0 <line:4165:1, line:4172:8> line:4168:1 __enable_if_bullet2
| |   | |-TemplateTypeParmDecl 0x7fa333877cf0 <line:4165:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fa333877d58 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fa333877ef0 <line:4166:10, col:48> col:16 referenced class depth 0 index 2 _DecayFp
| |   | | `-TemplateArgument type 'typename decay<_Fp>::type'
| |   | |-TemplateTypeParmDecl 0x7fa333878080 <line:4167:10, col:48> col:16 referenced class depth 0 index 3 _DecayA0
| |   | | `-TemplateArgument type 'typename decay<_A0>::type'
| |   | `-TypeAliasDecl 0x7fa333878590 <line:4168:1, line:4172:8> line:4168:7 __enable_if_bullet2 'typename enable_if<is_member_function_pointer<_DecayFp>::value && __is_reference_wrapper<_DecayA0>::value>::type'
| |   |   `-DependentNameType 0x7fa333878520 'typename enable_if<is_member_function_pointer<_DecayFp>::value && __is_reference_wrapper<_DecayA0>::value>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fa33387a410 <line:4174:1, line:4183:8> line:4178:1 __enable_if_bullet3
| |   | |-TemplateTypeParmDecl 0x7fa333878640 <line:4174:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fa3338786a8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fa333878840 <line:4175:10, col:48> col:16 referenced class depth 0 index 2 _DecayFp
| |   | | `-TemplateArgument type 'typename decay<_Fp>::type'
| |   | |-TemplateTypeParmDecl 0x7fa3338789d0 <line:4176:10, col:48> col:16 referenced class depth 0 index 3 _DecayA0
| |   | | `-TemplateArgument type 'typename decay<_A0>::type'
| |   | |-TemplateTypeParmDecl 0x7fa333878b60 <line:4177:10, col:74> col:16 referenced class depth 0 index 4 _ClassT
| |   | | `-TemplateArgument type 'typename __member_pointer_class_type<_DecayFp>::type'
| |   | `-TypeAliasDecl 0x7fa33387a3b0 <line:4178:1, line:4183:8> line:4178:7 __enable_if_bullet3 'typename enable_if<is_member_function_pointer<_DecayFp>::value && !is_base_of<_ClassT, _DecayA0>::value && !__is_reference_wrapper<_DecayA0>::value>::type'
| |   |   `-DependentNameType 0x7fa33387a340 'typename enable_if<is_member_function_pointer<_DecayFp>::value && !is_base_of<_ClassT, _DecayA0>::value && !__is_reference_wrapper<_DecayA0>::value>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fa33387af30 <line:4185:1, line:4193:8> line:4189:1 __enable_if_bullet4
| |   | |-TemplateTypeParmDecl 0x7fa33387a460 <line:4185:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fa33387a4c8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fa33387a660 <line:4186:10, col:48> col:16 referenced class depth 0 index 2 _DecayFp
| |   | | `-TemplateArgument type 'typename decay<_Fp>::type'
| |   | |-TemplateTypeParmDecl 0x7fa33387a7f0 <line:4187:10, col:48> col:16 referenced class depth 0 index 3 _DecayA0
| |   | | `-TemplateArgument type 'typename decay<_A0>::type'
| |   | |-TemplateTypeParmDecl 0x7fa33387a980 <line:4188:10, col:74> col:16 referenced class depth 0 index 4 _ClassT
| |   | | `-TemplateArgument type 'typename __member_pointer_class_type<_DecayFp>::type'
| |   | `-TypeAliasDecl 0x7fa33387aed0 <line:4189:1, line:4193:8> line:4189:7 __enable_if_bullet4 'typename enable_if<is_member_object_pointer<_DecayFp>::value && is_base_of<_ClassT, _DecayA0>::value>::type'
| |   |   `-DependentNameType 0x7fa33387ae60 'typename enable_if<is_member_object_pointer<_DecayFp>::value && is_base_of<_ClassT, _DecayA0>::value>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fa33387b810 <line:4195:1, line:4202:8> line:4198:1 __enable_if_bullet5
| |   | |-TemplateTypeParmDecl 0x7fa33387af80 <line:4195:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fa33387afe8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fa33387b180 <line:4196:10, col:48> col:16 referenced class depth 0 index 2 _DecayFp
| |   | | `-TemplateArgument type 'typename decay<_Fp>::type'
| |   | |-TemplateTypeParmDecl 0x7fa33387b310 <line:4197:10, col:48> col:16 referenced class depth 0 index 3 _DecayA0
| |   | | `-TemplateArgument type 'typename decay<_A0>::type'
| |   | `-TypeAliasDecl 0x7fa33387b7b0 <line:4198:1, line:4202:8> line:4198:7 __enable_if_bullet5 'typename enable_if<is_member_object_pointer<_DecayFp>::value && __is_reference_wrapper<_DecayA0>::value>::type'
| |   |   `-DependentNameType 0x7fa33387b740 'typename enable_if<is_member_object_pointer<_DecayFp>::value && __is_reference_wrapper<_DecayA0>::value>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fa33387d450 <line:4204:1, line:4213:8> line:4208:1 __enable_if_bullet6
| |   | |-TemplateTypeParmDecl 0x7fa33387b860 <line:4204:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fa33387b8c8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fa33387ba60 <line:4205:10, col:48> col:16 referenced class depth 0 index 2 _DecayFp
| |   | | `-TemplateArgument type 'typename decay<_Fp>::type'
| |   | |-TemplateTypeParmDecl 0x7fa33387bbf0 <line:4206:10, col:48> col:16 referenced class depth 0 index 3 _DecayA0
| |   | | `-TemplateArgument type 'typename decay<_A0>::type'
| |   | |-TemplateTypeParmDecl 0x7fa33387bd80 <line:4207:10, col:74> col:16 referenced class depth 0 index 4 _ClassT
| |   | | `-TemplateArgument type 'typename __member_pointer_class_type<_DecayFp>::type'
| |   | `-TypeAliasDecl 0x7fa33387d3f0 <line:4208:1, line:4213:8> line:4208:7 __enable_if_bullet6 'typename enable_if<is_member_object_pointer<_DecayFp>::value && !is_base_of<_ClassT, _DecayA0>::value && !__is_reference_wrapper<_DecayA0>::value>::type'
| |   |   `-DependentNameType 0x7fa33387d380 'typename enable_if<is_member_object_pointer<_DecayFp>::value && !is_base_of<_ClassT, _DecayA0>::value && !__is_reference_wrapper<_DecayA0>::value>::type' dependent
| |   |-FunctionTemplateDecl 0x7fa33387d848 <line:4223:1, line:4224:44> col:6 __invoke
| |   | |-TemplateTypeParmDecl 0x7fa33387d4a0 <line:4223:11, col:20> col:20 referenced class depth 0 index 0 ... _Args
| |   | `-FunctionDecl 0x7fa33387d7b0 <line:4224:1, col:44> col:6 __invoke 'auto (struct std::__1::__any, _Args &&...) -> struct std::__1::__nat'
| |   |   |-ParmVarDecl 0x7fa33387d530 <col:15> col:20 'struct std::__1::__any'
| |   |   `-ParmVarDecl 0x7fa33387d668 <col:22, col:33> col:33 __args '_Args &&...'
| |   |-FunctionTemplateDecl 0x7fa33387db98 <line:4226:1, line:4227:54> col:6 __invoke_constexpr
| |   | |-TemplateTypeParmDecl 0x7fa33387d8a8 <line:4226:11, col:20> col:20 referenced class depth 0 index 0 ... _Args
| |   | `-FunctionDecl 0x7fa33387db00 <line:4227:1, col:54> col:6 __invoke_constexpr 'auto (struct std::__1::__any, _Args &&...) -> struct std::__1::__nat'
| |   |   |-ParmVarDecl 0x7fa33387d940 <col:25> col:30 'struct std::__1::__any'
| |   |   `-ParmVarDecl 0x7fa33387da18 <col:32, col:43> col:43 __args '_Args &&...'
| |   |-FunctionTemplateDecl 0x7fa3338814e8 <line:4231:1, line:4221:27> line:4235:1 __invoke
| |   | |-TemplateTypeParmDecl 0x7fa33387dbf8 <line:4231:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fa33387dc68 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fa33387dcd8 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Args
| |   | |-TemplateTypeParmDecl 0x7fa33387e828 <line:4232:11, col:47> col:11 class depth 0 index 3
| |   | | `-TemplateArgument type '__enable_if_bullet1<_Fp, _A0>':'typename enable_if<is_member_function_pointer<typename decay<type-parameter-0-0>::type>::value && is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fa333881450 <line:4233:1, line:4221:27> line:4235:1 __invoke 'auto (_Fp &&, _A0 &&, _Args &&...) noexcept(noexcept((std::__1::forward<_A0>(__a0) .* __f)(std::__1::forward<_Args>(__args)...))) -> decltype((std::__1::forward<_A0>(__a0) .* __f)(std::__1::forward<_Args>(__args)...))' inline
| |   |   |-ParmVarDecl 0x7fa33387e938 <col:10, col:16> col:16 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fa33387e9d8 <col:21, col:27> col:27 referenced __a0 '_A0 &&'
| |   |   |-ParmVarDecl 0x7fa33387eb18 <col:33, col:44> col:44 referenced __args '_Args &&...'
| |   |   |-CompoundStmt 0x7fa333881938 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fa333881920 <col:7, line:4236:88>
| |   |   |   `-CallExpr 0x7fa3338818f0 <col:23, col:88> '<dependent type>'
| |   |   |     |-ParenExpr 0x7fa333881760 <col:23, col:54> '<dependent type>'
| |   |   |     | `-BinaryOperator 0x7fa333881738 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4236:51> '<dependent type>' '.*'
| |   |   |     |   |-CallExpr 0x7fa3338816e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4236:48> '<dependent type>'
| |   |   |     |   | |-UnresolvedLookupExpr 0x7fa333881618 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4236:42> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fa33382f180 0x7fa33382f6a0
| |   |   |     |   | `-DeclRefExpr 0x7fa3338816b8 <col:44> '_A0' lvalue ParmVar 0x7fa33387e9d8 '__a0' '_A0 &&'
| |   |   |     |   `-DeclRefExpr 0x7fa333881710 <col:51> '_Fp' lvalue ParmVar 0x7fa33387e938 '__f' '_Fp &&'
| |   |   |     `-PackExpansionExpr 0x7fa3338818d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4236:85> '<dependent type>'
| |   |   |       `-CallExpr 0x7fa3338818a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4236:84> '<dependent type>'
| |   |   |         |-UnresolvedLookupExpr 0x7fa3338817d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4236:76> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fa33382f180 0x7fa33382f6a0
| |   |   |         `-DeclRefExpr 0x7fa333881878 <col:78> '_Args &&...' lvalue ParmVar 0x7fa33387eb18 '__args' '_Args &&...'
| |   |   |-AlwaysInlineAttr 0x7fa333881550 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fa333881598 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fa333882e00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4238:1, line:4221:27> line:4242:1 __invoke_constexpr
| |   | |-TemplateTypeParmDecl 0x7fa333881958 <line:4238:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fa3338819c8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fa333881a38 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Args
| |   | |-TemplateTypeParmDecl 0x7fa333882268 <line:4239:11, col:47> col:11 class depth 0 index 3
| |   | | `-TemplateArgument type '__enable_if_bullet1<_Fp, _A0>':'typename enable_if<is_member_function_pointer<typename decay<type-parameter-0-0>::type>::value && is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fa333882d40 <line:4240:1, line:4221:27> line:4242:1 constexpr __invoke_constexpr 'auto (_Fp &&, _A0 &&, _Args &&...) noexcept(noexcept((std::__1::forward<_A0>(__a0) .* __f)(std::__1::forward<_Args>(__args)...))) -> decltype((std::__1::forward<_A0>(__a0) .* __f)(std::__1::forward<_Args>(__args)...))' inline
| |   |   |-ParmVarDecl 0x7fa333882378 <col:20, col:26> col:26 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fa333882418 <col:31, col:37> col:37 referenced __a0 '_A0 &&'
| |   |   |-ParmVarDecl 0x7fa3338824f8 <col:43, col:54> col:54 referenced __args '_Args &&...'
| |   |   |-CompoundStmt 0x7fa333883250 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fa333883238 <col:7, line:4243:88>
| |   |   |   `-CallExpr 0x7fa333883208 <col:23, col:88> '<dependent type>'
| |   |   |     |-ParenExpr 0x7fa333883078 <col:23, col:54> '<dependent type>'
| |   |   |     | `-BinaryOperator 0x7fa333883050 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4243:51> '<dependent type>' '.*'
| |   |   |     |   |-CallExpr 0x7fa333882ff8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4243:48> '<dependent type>'
| |   |   |     |   | |-UnresolvedLookupExpr 0x7fa333882f30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4243:42> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fa33382f180 0x7fa33382f6a0
| |   |   |     |   | `-DeclRefExpr 0x7fa333882fd0 <col:44> '_A0' lvalue ParmVar 0x7fa333882418 '__a0' '_A0 &&'
| |   |   |     |   `-DeclRefExpr 0x7fa333883028 <col:51> '_Fp' lvalue ParmVar 0x7fa333882378 '__f' '_Fp &&'
| |   |   |     `-PackExpansionExpr 0x7fa3338831e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4243:85> '<dependent type>'
| |   |   |       `-CallExpr 0x7fa3338831b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4243:84> '<dependent type>'
| |   |   |         |-UnresolvedLookupExpr 0x7fa3338830f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4243:76> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fa33382f180 0x7fa33382f6a0
| |   |   |         `-DeclRefExpr 0x7fa333883190 <col:78> '_Args &&...' lvalue ParmVar 0x7fa3338824f8 '__args' '_Args &&...'
| |   |   |-AlwaysInlineAttr 0x7fa333882e68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fa333882eb0 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fa333884688 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4245:1, line:4221:27> line:4249:1 __invoke
| |   | |-TemplateTypeParmDecl 0x7fa333883270 <line:4245:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fa3338832d8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fa333883348 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Args
| |   | |-TemplateTypeParmDecl 0x7fa333883c08 <line:4246:11, col:47> col:11 class depth 0 index 3
| |   | | `-TemplateArgument type '__enable_if_bullet2<_Fp, _A0>':'typename enable_if<is_member_function_pointer<typename decay<type-parameter-0-0>::type>::value && __is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fa3338845f0 <line:4247:1, line:4221:27> line:4249:1 __invoke 'auto (_Fp &&, _A0 &&, _Args &&...) noexcept(noexcept((__a0.get() .* __f)(std::__1::forward<_Args>(__args)...))) -> decltype((__a0.get() .* __f)(std::__1::forward<_Args>(__args)...))' inline
| |   |   |-ParmVarDecl 0x7fa333883d18 <col:10, col:16> col:16 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fa333883db8 <col:21, col:27> col:27 referenced __a0 '_A0 &&'
| |   |   |-ParmVarDecl 0x7fa333883e98 <col:33, col:44> col:44 referenced __args '_Args &&...'
| |   |   |-CompoundStmt 0x7fa333884a18 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fa333884a00 <col:7, line:4250:73>
| |   |   |   `-CallExpr 0x7fa3338849d0 <col:23, col:73> '<dependent type>'
| |   |   |     |-ParenExpr 0x7fa333884840 <col:23, col:39> '<dependent type>'
| |   |   |     | `-BinaryOperator 0x7fa333884818 <col:24, col:36> '<dependent type>' '.*'
| |   |   |     |   |-CallExpr 0x7fa3338847c8 <col:24, col:33> '<dependent type>'
| |   |   |     |   | `-CXXDependentScopeMemberExpr 0x7fa333884770 <col:24, col:29> '<dependent type>' lvalue .get
| |   |   |     |   |   `-DeclRefExpr 0x7fa333884748 <col:24> '_A0' lvalue ParmVar 0x7fa333883db8 '__a0' '_A0 &&'
| |   |   |     |   `-DeclRefExpr 0x7fa3338847f0 <col:36> '_Fp' lvalue ParmVar 0x7fa333883d18 '__f' '_Fp &&'
| |   |   |     `-PackExpansionExpr 0x7fa3338849b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4250:70> '<dependent type>'
| |   |   |       `-CallExpr 0x7fa333884980 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4250:69> '<dependent type>'
| |   |   |         |-UnresolvedLookupExpr 0x7fa3338848b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4250:61> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fa33382f180 0x7fa33382f6a0
| |   |   |         `-DeclRefExpr 0x7fa333884958 <col:63> '_Args &&...' lvalue ParmVar 0x7fa333883e98 '__args' '_Args &&...'
| |   |   |-AlwaysInlineAttr 0x7fa3338846f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fa333884738 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fa3338865f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4252:1, line:4221:27> line:4256:1 __invoke_constexpr
| |   | |-TemplateTypeParmDecl 0x7fa333884a38 <line:4252:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fa333884aa8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fa333884b18 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Args
| |   | |-TemplateTypeParmDecl 0x7fa333885c08 <line:4253:11, col:47> col:11 class depth 0 index 3
| |   | | `-TemplateArgument type '__enable_if_bullet2<_Fp, _A0>':'typename enable_if<is_member_function_pointer<typename decay<type-parameter-0-0>::type>::value && __is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fa333886560 <line:4254:1, line:4221:27> line:4256:1 constexpr __invoke_constexpr 'auto (_Fp &&, _A0 &&, _Args &&...) noexcept(noexcept((__a0.get() .* __f)(std::__1::forward<_Args>(__args)...))) -> decltype((__a0.get() .* __f)(std::__1::forward<_Args>(__args)...))' inline
| |   |   |-ParmVarDecl 0x7fa333885d18 <col:20, col:26> col:26 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fa333885db8 <col:31, col:37> col:37 referenced __a0 '_A0 &&'
| |   |   |-ParmVarDecl 0x7fa333885e98 <col:43, col:54> col:54 referenced __args '_Args &&...'
| |   |   |-CompoundStmt 0x7fa333886988 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fa333886970 <col:7, line:4257:73>
| |   |   |   `-CallExpr 0x7fa333886940 <col:23, col:73> '<dependent type>'
| |   |   |     |-ParenExpr 0x7fa3338867b0 <col:23, col:39> '<dependent type>'
| |   |   |     | `-BinaryOperator 0x7fa333886788 <col:24, col:36> '<dependent type>' '.*'
| |   |   |     |   |-CallExpr 0x7fa333886738 <col:24, col:33> '<dependent type>'
| |   |   |     |   | `-CXXDependentScopeMemberExpr 0x7fa3338866e0 <col:24, col:29> '<dependent type>' lvalue .get
| |   |   |     |   |   `-DeclRefExpr 0x7fa3338866b8 <col:24> '_A0' lvalue ParmVar 0x7fa333885db8 '__a0' '_A0 &&'
| |   |   |     |   `-DeclRefExpr 0x7fa333886760 <col:36> '_Fp' lvalue ParmVar 0x7fa333885d18 '__f' '_Fp &&'
| |   |   |     `-PackExpansionExpr 0x7fa333886920 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4257:70> '<dependent type>'
| |   |   |       `-CallExpr 0x7fa3338868f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4257:69> '<dependent type>'
| |   |   |         |-UnresolvedLookupExpr 0x7fa333886828 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4257:61> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fa33382f180 0x7fa33382f6a0
| |   |   |         `-DeclRefExpr 0x7fa3338868c8 <col:63> '_Args &&...' lvalue ParmVar 0x7fa333885e98 '__args' '_Args &&...'
| |   |   |-AlwaysInlineAttr 0x7fa333886660 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fa3338866a8 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fa333888208 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4259:1, line:4221:27> line:4263:1 __invoke
| |   | |-TemplateTypeParmDecl 0x7fa3338869a8 <line:4259:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fa333886a18 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fa333886a88 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Args
| |   | |-TemplateTypeParmDecl 0x7fa3338875b8 <line:4260:11, col:47> col:11 class depth 0 index 3
| |   | | `-TemplateArgument type '__enable_if_bullet3<_Fp, _A0>':'typename enable_if<is_member_function_pointer<typename decay<type-parameter-0-0>::type>::value && !is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value && !__is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fa333888170 <line:4261:1, line:4221:27> line:4263:1 __invoke 'auto (_Fp &&, _A0 &&, _Args &&...) noexcept(noexcept(((*std::__1::forward<_A0>(__a0)) .* __f)(std::__1::forward<_Args>(__args)...))) -> decltype(((*std::__1::forward<_A0>(__a0)) .* __f)(std::__1::forward<_Args>(__args)...))' inline
| |   |   |-ParmVarDecl 0x7fa3338876c8 <col:10, col:16> col:16 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fa333887768 <col:21, col:27> col:27 referenced __a0 '_A0 &&'
| |   |   |-ParmVarDecl 0x7fa333887848 <col:33, col:44> col:44 referenced __args '_Args &&...'
| |   |   |-CompoundStmt 0x7fa333888680 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fa333888668 <col:7, line:4264:91>
| |   |   |   `-CallExpr 0x7fa333888638 <col:23, col:91> '<dependent type>'
| |   |   |     |-ParenExpr 0x7fa3338884a8 <col:23, col:57> '<dependent type>'
| |   |   |     | `-BinaryOperator 0x7fa333888480 <col:24, col:54> '<dependent type>' '.*'
| |   |   |     |   |-ParenExpr 0x7fa333888438 <col:24, col:51> '<dependent type>'
| |   |   |     |   | `-UnaryOperator 0x7fa333888418 <col:25, col:50> '<dependent type>' prefix '*'
| |   |   |     |   |   `-CallExpr 0x7fa3338883e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4264:50> '<dependent type>'
| |   |   |     |   |     |-UnresolvedLookupExpr 0x7fa333888320 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4264:44> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fa33382f180 0x7fa33382f6a0
| |   |   |     |   |     `-DeclRefExpr 0x7fa3338883c0 <col:46> '_A0' lvalue ParmVar 0x7fa333887768 '__a0' '_A0 &&'
| |   |   |     |   `-DeclRefExpr 0x7fa333888458 <col:54> '_Fp' lvalue ParmVar 0x7fa3338876c8 '__f' '_Fp &&'
| |   |   |     `-PackExpansionExpr 0x7fa333888618 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4264:88> '<dependent type>'
| |   |   |       `-CallExpr 0x7fa3338885e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4264:87> '<dependent type>'
| |   |   |         |-UnresolvedLookupExpr 0x7fa333888520 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4264:79> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fa33382f180 0x7fa33382f6a0
| |   |   |         `-DeclRefExpr 0x7fa3338885c0 <col:81> '_Args &&...' lvalue ParmVar 0x7fa333887848 '__args' '_Args &&...'
| |   |   |-AlwaysInlineAttr 0x7fa333888270 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fa3338882b8 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fa33388a2c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4266:1, line:4221:27> line:4270:1 __invoke_constexpr
| |   | |-TemplateTypeParmDecl 0x7fa3338886a0 <line:4266:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fa333888708 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fa333888778 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Args
| |   | |-TemplateTypeParmDecl 0x7fa333889108 <line:4267:11, col:47> col:11 class depth 0 index 3
| |   | | `-TemplateArgument type '__enable_if_bullet3<_Fp, _A0>':'typename enable_if<is_member_function_pointer<typename decay<type-parameter-0-0>::type>::value && !is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value && !__is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fa33388a230 <line:4268:1, line:4221:27> line:4270:1 constexpr __invoke_constexpr 'auto (_Fp &&, _A0 &&, _Args &&...) noexcept(noexcept(((*std::__1::forward<_A0>(__a0)) .* __f)(std::__1::forward<_Args>(__args)...))) -> decltype(((*std::__1::forward<_A0>(__a0)) .* __f)(std::__1::forward<_Args>(__args)...))' inline
| |   |   |-ParmVarDecl 0x7fa333889218 <col:20, col:26> col:26 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fa3338892b8 <col:31, col:37> col:37 referenced __a0 '_A0 &&'
| |   |   |-ParmVarDecl 0x7fa333889398 <col:43, col:54> col:54 referenced __args '_Args &&...'
| |   |   |-CompoundStmt 0x7fa33388a740 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fa33388a728 <col:7, line:4271:91>
| |   |   |   `-CallExpr 0x7fa33388a6f8 <col:23, col:91> '<dependent type>'
| |   |   |     |-ParenExpr 0x7fa33388a568 <col:23, col:57> '<dependent type>'
| |   |   |     | `-BinaryOperator 0x7fa33388a540 <col:24, col:54> '<dependent type>' '.*'
| |   |   |     |   |-ParenExpr 0x7fa33388a4f8 <col:24, col:51> '<dependent type>'
| |   |   |     |   | `-UnaryOperator 0x7fa33388a4d8 <col:25, col:50> '<dependent type>' prefix '*'
| |   |   |     |   |   `-CallExpr 0x7fa33388a4a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4271:50> '<dependent type>'
| |   |   |     |   |     |-UnresolvedLookupExpr 0x7fa33388a3e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4271:44> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fa33382f180 0x7fa33382f6a0
| |   |   |     |   |     `-DeclRefExpr 0x7fa33388a480 <col:46> '_A0' lvalue ParmVar 0x7fa3338892b8 '__a0' '_A0 &&'
| |   |   |     |   `-DeclRefExpr 0x7fa33388a518 <col:54> '_Fp' lvalue ParmVar 0x7fa333889218 '__f' '_Fp &&'
| |   |   |     `-PackExpansionExpr 0x7fa33388a6d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4271:88> '<dependent type>'
| |   |   |       `-CallExpr 0x7fa33388a6a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4271:87> '<dependent type>'
| |   |   |         |-UnresolvedLookupExpr 0x7fa33388a5e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4271:79> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fa33382f180 0x7fa33382f6a0
| |   |   |         `-DeclRefExpr 0x7fa33388a680 <col:81> '_Args &&...' lvalue ParmVar 0x7fa333889398 '__args' '_Args &&...'
| |   |   |-AlwaysInlineAttr 0x7fa33388a330 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fa33388a378 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fa33388b938 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4275:1, line:4221:27> line:4279:1 __invoke
| |   | |-TemplateTypeParmDecl 0x7fa33388a760 <line:4275:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fa33388a7c8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fa33388b1f8 <line:4276:11, col:47> col:11 class depth 0 index 2
| |   | | `-TemplateArgument type '__enable_if_bullet4<_Fp, _A0>':'typename enable_if<is_member_object_pointer<typename decay<type-parameter-0-0>::type>::value && is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fa33388b8a0 <line:4277:1, line:4221:27> line:4279:1 __invoke 'auto (_Fp &&, _A0 &&) noexcept(noexcept(std::__1::forward<_A0>(__a0) .* __f)) -> decltype(std::__1::forward<_A0>(__a0) .* __f)' inline
| |   |   |-ParmVarDecl 0x7fa33388b2f8 <col:10, col:16> col:16 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fa33388b398 <col:21, col:27> col:27 referenced __a0 '_A0 &&'
| |   |   |-CompoundStmt 0x7fa33388bba8 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fa33388bb90 <col:7, line:4280:50>
| |   |   |   `-BinaryOperator 0x7fa33388bb68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4280:50> '<dependent type>' '.*'
| |   |   |     |-CallExpr 0x7fa33388bb10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4280:47> '<dependent type>'
| |   |   |     | |-UnresolvedLookupExpr 0x7fa33388ba48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4280:41> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fa33382f180 0x7fa33382f6a0
| |   |   |     | `-DeclRefExpr 0x7fa33388bae8 <col:43> '_A0' lvalue ParmVar 0x7fa33388b398 '__a0' '_A0 &&'
| |   |   |     `-DeclRefExpr 0x7fa33388bb40 <col:50> '_Fp' lvalue ParmVar 0x7fa33388b2f8 '__f' '_Fp &&'
| |   |   |-AlwaysInlineAttr 0x7fa33388b998 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fa33388b9e0 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fa33388cb48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4282:1, line:4221:27> line:4286:1 __invoke_constexpr
| |   | |-TemplateTypeParmDecl 0x7fa33388bbc8 <line:4282:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fa33388bc38 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fa33388c488 <line:4283:11, col:47> col:11 class depth 0 index 2
| |   | | `-TemplateArgument type '__enable_if_bullet4<_Fp, _A0>':'typename enable_if<is_member_object_pointer<typename decay<type-parameter-0-0>::type>::value && is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fa33388cab0 <line:4284:1, line:4221:27> line:4286:1 constexpr __invoke_constexpr 'auto (_Fp &&, _A0 &&) noexcept(noexcept(std::__1::forward<_A0>(__a0) .* __f)) -> decltype(std::__1::forward<_A0>(__a0) .* __f)' inline
| |   |   |-ParmVarDecl 0x7fa33388c588 <col:20, col:26> col:26 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fa33388c628 <col:31, col:37> col:37 referenced __a0 '_A0 &&'
| |   |   |-CompoundStmt 0x7fa33388cdb8 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fa33388cda0 <col:7, line:4287:50>
| |   |   |   `-BinaryOperator 0x7fa33388cd78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4287:50> '<dependent type>' '.*'
| |   |   |     |-CallExpr 0x7fa33388cd20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4287:47> '<dependent type>'
| |   |   |     | |-UnresolvedLookupExpr 0x7fa33388cc58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4287:41> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fa33382f180 0x7fa33382f6a0
| |   |   |     | `-DeclRefExpr 0x7fa33388ccf8 <col:43> '_A0' lvalue ParmVar 0x7fa33388c628 '__a0' '_A0 &&'
| |   |   |     `-DeclRefExpr 0x7fa33388cd50 <col:50> '_Fp' lvalue ParmVar 0x7fa33388c588 '__f' '_Fp &&'
| |   |   |-AlwaysInlineAttr 0x7fa33388cba8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fa33388cbf0 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fa33388dc98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4289:1, line:4221:27> line:4293:1 __invoke
| |   | |-TemplateTypeParmDecl 0x7fa33388cdd8 <line:4289:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fa33388ce48 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fa33388d6a8 <line:4290:11, col:47> col:11 class depth 0 index 2
| |   | | `-TemplateArgument type '__enable_if_bullet5<_Fp, _A0>':'typename enable_if<is_member_object_pointer<typename decay<type-parameter-0-0>::type>::value && __is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fa33388dc00 <line:4291:1, line:4221:27> line:4293:1 __invoke 'auto (_Fp &&, _A0 &&) noexcept(noexcept(__a0.get() .* __f)) -> decltype(__a0.get() .* __f)' inline
| |   |   |-ParmVarDecl 0x7fa33388d7a8 <col:10, col:16> col:16 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fa33388d848 <col:21, col:27> col:27 referenced __a0 '_A0 &&'
| |   |   |-CompoundStmt 0x7fa33388de68 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fa33388de50 <col:7, line:4294:35>
| |   |   |   `-BinaryOperator 0x7fa33388de28 <col:23, col:35> '<dependent type>' '.*'
| |   |   |     |-CallExpr 0x7fa33388ddd0 <col:23, col:32> '<dependent type>'
| |   |   |     | `-CXXDependentScopeMemberExpr 0x7fa33388dd78 <col:23, col:28> '<dependent type>' lvalue .get
| |   |   |     |   `-DeclRefExpr 0x7fa33388dd50 <col:23> '_A0' lvalue ParmVar 0x7fa33388d848 '__a0' '_A0 &&'
| |   |   |     `-DeclRefExpr 0x7fa33388de00 <col:35> '_Fp' lvalue ParmVar 0x7fa33388d7a8 '__f' '_Fp &&'
| |   |   |-AlwaysInlineAttr 0x7fa33388dcf8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fa33388dd40 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fa33388eb58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4296:1, line:4221:27> line:4300:1 __invoke_constexpr
| |   | |-TemplateTypeParmDecl 0x7fa33388de88 <line:4296:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fa33388def8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fa33388e5e8 <line:4297:11, col:47> col:11 class depth 0 index 2
| |   | | `-TemplateArgument type '__enable_if_bullet5<_Fp, _A0>':'typename enable_if<is_member_object_pointer<typename decay<type-parameter-0-0>::type>::value && __is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fa33388eac0 <line:4298:1, line:4221:27> line:4300:1 constexpr __invoke_constexpr 'auto (_Fp &&, _A0 &&) noexcept(noexcept(__a0.get() .* __f)) -> decltype(__a0.get() .* __f)' inline
| |   |   |-ParmVarDecl 0x7fa33388e6e8 <col:20, col:26> col:26 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fa33388e788 <col:31, col:37> col:37 referenced __a0 '_A0 &&'
| |   |   |-CompoundStmt 0x7fa33388ed20 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fa33388ed08 <col:7, line:4301:35>
| |   |   |   `-BinaryOperator 0x7fa33388ece0 <col:23, col:35> '<dependent type>' '.*'
| |   |   |     |-CallExpr 0x7fa33388ec90 <col:23, col:32> '<dependent type>'
| |   |   |     | `-CXXDependentScopeMemberExpr 0x7fa33388ec38 <col:23, col:28> '<dependent type>' lvalue .get
| |   |   |     |   `-DeclRefExpr 0x7fa33388ec10 <col:23> '_A0' lvalue ParmVar 0x7fa33388e788 '__a0' '_A0 &&'
| |   |   |     `-DeclRefExpr 0x7fa33388ecb8 <col:35> '_Fp' lvalue ParmVar 0x7fa33388e6e8 '__f' '_Fp &&'
| |   |   |-AlwaysInlineAttr 0x7fa33388ebb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fa33388ec00 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fa333890098 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4303:1, line:4221:27> line:4307:1 __invoke
| |   | |-TemplateTypeParmDecl 0x7fa33388ed40 <line:4303:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fa33388eda8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fa33388f8d8 <line:4304:11, col:47> col:11 class depth 0 index 2
| |   | | `-TemplateArgument type '__enable_if_bullet6<_Fp, _A0>':'typename enable_if<is_member_object_pointer<typename decay<type-parameter-0-0>::type>::value && !is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value && !__is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fa333890000 <line:4305:1, line:4221:27> line:4307:1 __invoke 'auto (_Fp &&, _A0 &&) noexcept(noexcept((*std::__1::forward<_A0>(__a0)) .* __f)) -> decltype((*std::__1::forward<_A0>(__a0)) .* __f)' inline
| |   |   |-ParmVarDecl 0x7fa33388f9d8 <col:10, col:16> col:16 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fa33388fa78 <col:21, col:27> col:27 referenced __a0 '_A0 &&'
| |   |   |-CompoundStmt 0x7fa333890348 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fa333890330 <col:7, line:4308:53>
| |   |   |   `-BinaryOperator 0x7fa333890308 <col:23, col:53> '<dependent type>' '.*'
| |   |   |     |-ParenExpr 0x7fa3338902c0 <col:23, col:50> '<dependent type>'
| |   |   |     | `-UnaryOperator 0x7fa3338902a0 <col:24, col:49> '<dependent type>' prefix '*'
| |   |   |     |   `-CallExpr 0x7fa333890270 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4308:49> '<dependent type>'
| |   |   |     |     |-UnresolvedLookupExpr 0x7fa3338901a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4308:43> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fa33382f180 0x7fa33382f6a0
| |   |   |     |     `-DeclRefExpr 0x7fa333890248 <col:45> '_A0' lvalue ParmVar 0x7fa33388fa78 '__a0' '_A0 &&'
| |   |   |     `-DeclRefExpr 0x7fa3338902e0 <col:53> '_Fp' lvalue ParmVar 0x7fa33388f9d8 '__f' '_Fp &&'
| |   |   |-AlwaysInlineAttr 0x7fa3338900f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fa333890140 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fa3338914a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4310:1, line:4221:27> line:4314:1 __invoke_constexpr
| |   | |-TemplateTypeParmDecl 0x7fa333890368 <line:4310:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fa3338903d8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fa333890d68 <line:4311:11, col:47> col:11 class depth 0 index 2
| |   | | `-TemplateArgument type '__enable_if_bullet6<_Fp, _A0>':'typename enable_if<is_member_object_pointer<typename decay<type-parameter-0-0>::type>::value && !is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value && !__is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fa333891410 <line:4312:1, line:4221:27> line:4314:1 constexpr __invoke_constexpr 'auto (_Fp &&, _A0 &&) noexcept(noexcept((*std::__1::forward<_A0>(__a0)) .* __f)) -> decltype((*std::__1::forward<_A0>(__a0)) .* __f)' inline
| |   |   |-ParmVarDecl 0x7fa333890e68 <col:20, col:26> col:26 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fa333890f08 <col:31, col:37> col:37 referenced __a0 '_A0 &&'
| |   |   |-CompoundStmt 0x7fa333891758 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fa333891740 <col:7, line:4315:53>
| |   |   |   `-BinaryOperator 0x7fa333891718 <col:23, col:53> '<dependent type>' '.*'
| |   |   |     |-ParenExpr 0x7fa3338916d0 <col:23, col:50> '<dependent type>'
| |   |   |     | `-UnaryOperator 0x7fa3338916b0 <col:24, col:49> '<dependent type>' prefix '*'
| |   |   |     |   `-CallExpr 0x7fa333891680 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4315:49> '<dependent type>'
| |   |   |     |     |-UnresolvedLookupExpr 0x7fa3338915b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4315:43> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fa33382f180 0x7fa33382f6a0
| |   |   |     |     `-DeclRefExpr 0x7fa333891658 <col:45> '_A0' lvalue ParmVar 0x7fa333890f08 '__a0' '_A0 &&'
| |   |   |     `-DeclRefExpr 0x7fa3338916f0 <col:53> '_Fp' lvalue ParmVar 0x7fa333890e68 '__f' '_Fp &&'
| |   |   |-AlwaysInlineAttr 0x7fa333891508 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fa333891550 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fa333893278 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4319:1, line:4221:27> line:4322:1 __invoke
| |   | |-TemplateTypeParmDecl 0x7fa333891778 <line:4319:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fa3338917e8 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | `-FunctionDecl 0x7fa3338931e0 <line:4320:1, line:4221:27> line:4322:1 __invoke 'auto (_Fp &&, _Args &&...) noexcept(noexcept(std::__1::forward<_Fp>(__f)(std::__1::forward<_Args>(__args)...))) -> decltype(std::__1::forward<_Fp>(__f)(std::__1::forward<_Args>(__args)...))' inline
| |   |   |-ParmVarDecl 0x7fa3338918e8 <col:10, col:16> col:16 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fa333891a28 <col:21, col:32> col:32 referenced __args '_Args &&...'
| |   |   |-CompoundStmt 0x7fa333893638 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fa333893620 <col:7, line:4323:80>
| |   |   |   `-CallExpr 0x7fa3338935f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4323:80> '<dependent type>'
| |   |   |     |-CallExpr 0x7fa333893450 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4323:46> '<dependent type>'
| |   |   |     | |-UnresolvedLookupExpr 0x7fa333893388 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4323:41> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fa33382f180 0x7fa33382f6a0
| |   |   |     | `-DeclRefExpr 0x7fa333893428 <col:43> '_Fp' lvalue ParmVar 0x7fa3338918e8 '__f' '_Fp &&'
| |   |   |     `-PackExpansionExpr 0x7fa3338935d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4323:77> '<dependent type>'
| |   |   |       `-CallExpr 0x7fa3338935a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4323:76> '<dependent type>'
| |   |   |         |-UnresolvedLookupExpr 0x7fa3338934d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4323:68> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fa33382f180 0x7fa33382f6a0
| |   |   |         `-DeclRefExpr 0x7fa333893578 <col:70> '_Args &&...' lvalue ParmVar 0x7fa333891a28 '__args' '_Args &&...'
| |   |   |-AlwaysInlineAttr 0x7fa3338932d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fa333893320 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fa333894068 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4325:1, line:4221:27> line:4328:1 __invoke_constexpr
| |   | |-TemplateTypeParmDecl 0x7fa333893658 <line:4325:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fa3338936c8 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | `-FunctionDecl 0x7fa333893fd0 <line:4326:1, line:4221:27> line:4328:1 constexpr __invoke_constexpr 'auto (_Fp &&, _Args &&...) noexcept(noexcept(std::__1::forward<_Fp>(__f)(std::__1::forward<_Args>(__args)...))) -> decltype(std::__1::forward<_Fp>(__f)(std::__1::forward<_Args>(__args)...))' inline
| |   |   |-ParmVarDecl 0x7fa3338937c8 <col:20, col:26> col:26 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fa3338938a8 <col:31, col:42> col:42 referenced __args '_Args &&...'
| |   |   |-CompoundStmt 0x7fa333894428 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fa333894410 <col:7, line:4329:80>
| |   |   |   `-CallExpr 0x7fa3338943e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4329:80> '<dependent type>'
| |   |   |     |-CallExpr 0x7fa333894240 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4329:46> '<dependent type>'
| |   |   |     | |-UnresolvedLookupExpr 0x7fa333894178 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4329:41> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fa33382f180 0x7fa33382f6a0
| |   |   |     | `-DeclRefExpr 0x7fa333894218 <col:43> '_Fp' lvalue ParmVar 0x7fa3338937c8 '__f' '_Fp &&'
| |   |   |     `-PackExpansionExpr 0x7fa3338943c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4329:77> '<dependent type>'
| |   |   |       `-CallExpr 0x7fa333894390 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4329:76> '<dependent type>'
| |   |   |         |-UnresolvedLookupExpr 0x7fa3338942c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4329:68> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fa33382f180 0x7fa33382f6a0
| |   |   |         `-DeclRefExpr 0x7fa333894368 <col:70> '_Args &&...' lvalue ParmVar 0x7fa3338938a8 '__args' '_Args &&...'
| |   |   |-AlwaysInlineAttr 0x7fa3338940c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fa333894110 <col:51, col:74> Hidden
| |   |-ClassTemplateDecl 0x7fa333894658 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4335:1, line:4352:1> line:4336:8 __invokable_r
| |   | |-TemplateTypeParmDecl 0x7fa333894448 <line:4335:11, col:17> col:17 referenced class depth 0 index 0 _Ret
| |   | |-TemplateTypeParmDecl 0x7fa3338944b8 <col:23, col:29> col:29 referenced class depth 0 index 1 _Fp
| |   | |-TemplateTypeParmDecl 0x7fa333894528 <col:34, col:43> col:43 referenced class depth 0 index 2 ... _Args
| |   | `-CXXRecordDecl 0x7fa3338945c0 <line:4336:1, line:4352:1> line:4336:8 struct __invokable_r definition
| |   |   |-private '__check_complete<_Fp>'
| |   |   |-CXXRecordDecl 0x7fa333894a78 <col:1, col:8> col:8 implicit struct __invokable_r
| |   |   |-TypeAliasDecl 0x7fa333894eb8 <line:4339:5, col:21> col:11 referenced _Result 'decltype(std::__1::__invoke(std::__1::declval<_Fp>(), std::__1::declval<_Args>()...))'
| |   |   | `-DecltypeType 0x7fa333894e80 'decltype(std::__1::__invoke(std::__1::declval<_Fp>(), std::__1::declval<_Args>()...))' dependent
| |   |   |   `-CallExpr 0x7fa333894e00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4340:74> '<dependent type>'
| |   |   |     |-UnresolvedLookupExpr 0x7fa333894b40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4340:16> '<overloaded function type>' lvalue (no ADL) = '__invoke' 0x7fa33387d848 0x7fa3338814e8 0x7fa333884688 0x7fa333888208 0x7fa33388b938 0x7fa33388dc98 0x7fa333890098 0x7fa333893278
| |   |   |     |-CallExpr 0x7fa333894ca8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4340:45> '<dependent type>'
| |   |   |     | `-UnresolvedLookupExpr 0x7fa333894c10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4340:43> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fa333159250
| |   |   |     `-PackExpansionExpr 0x7fa333894dd0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4340:71> '<dependent type>'
| |   |   |       `-CallExpr 0x7fa333894da8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4340:70> '<dependent type>'
| |   |   |         `-UnresolvedLookupExpr 0x7fa333894d10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4340:68> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fa333159250
| |   |   `-VarDecl 0x7fa333894f28 <line:4342:5, line:4351:18> line:4342:23 value 'const _Bool' static cinit
| |   |     `-DependentScopeDeclRefExpr 0x7fa333895840 <line:4343:9, line:4351:18> '<dependent type>' lvalue
| |   |-TypeAliasTemplateDecl 0x7fa333895c58 <line:4354:1, line:4355:54> col:1 __invokable
| |   | |-TemplateTypeParmDecl 0x7fa3338958a0 <line:4354:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fa333895908 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | `-TypeAliasDecl 0x7fa333895bf8 <line:4355:1, col:54> col:7 __invokable '__invokable_r<void, _Fp, _Args...>'
| |   |   `-TemplateSpecializationType 0x7fa333895ac0 '__invokable_r<void, _Fp, _Args...>' dependent __invokable_r
| |   |     |-TemplateArgument type 'void'
| |   |     |-TemplateArgument type '_Fp'
| |   |     `-TemplateArgument type '_Args...'
| |   |-ClassTemplateDecl 0x7fa333895fc8 <line:4357:1, line:4360:1> line:4358:8 __nothrow_invokable_r_imp
| |   | |-NonTypeTemplateParmDecl 0x7fa333895cb8 <line:4357:11, col:16> col:16 '_Bool' depth 0 index 0 _IsInvokable
| |   | |-NonTypeTemplateParmDecl 0x7fa333895d20 <col:30, col:35> col:35 '_Bool' depth 0 index 1 _IsCVVoid
| |   | |-TemplateTypeParmDecl 0x7fa333895d78 <col:46, col:52> col:52 class depth 0 index 2 _Ret
| |   | |-TemplateTypeParmDecl 0x7fa333895de8 <col:58, col:64> col:64 class depth 0 index 3 _Fp
| |   | |-TemplateTypeParmDecl 0x7fa333895e58 <col:69, col:78> col:78 class depth 0 index 4 ... _Args
| |   | `-CXXRecordDecl 0x7fa333895f30 <line:4358:1, line:4360:1> line:4358:8 struct __nothrow_invokable_r_imp definition
| |   |   |-CXXRecordDecl 0x7fa3338963e0 <col:1, col:8> col:8 implicit struct __nothrow_invokable_r_imp
| |   |   `-VarDecl 0x7fa333896488 <line:4359:3, col:29> col:21 value 'const _Bool' static cinit
| |   |     `-CXXBoolLiteralExpr 0x7fa3338964e8 <col:29> '_Bool' false
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa3338969b8 <line:4362:1, line:4372:1> line:4363:8 struct __nothrow_invokable_r_imp definition
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-2...'
| |   | |-TemplateTypeParmDecl 0x7fa333896520 <line:4362:11, col:17> col:17 referenced class depth 0 index 0 _Ret
| |   | |-TemplateTypeParmDecl 0x7fa333896588 <col:23, col:29> col:29 referenced class depth 0 index 1 _Fp
| |   | |-TemplateTypeParmDecl 0x7fa3338965f8 <col:34, col:43> col:43 referenced class depth 0 index 2 ... _Args
| |   | |-CXXRecordDecl 0x7fa333898400 <line:4363:1, col:8> col:8 implicit referenced struct __nothrow_invokable_r_imp
| |   | |-TypedefDecl 0x7fa3338984a8 <line:4365:5, col:39> col:39 referenced _ThisT '__nothrow_invokable_r_imp<true, false, type-parameter-0-0, type-parameter-0-1, type-parameter-0-2...>'
| |   | | `-InjectedClassNameType 0x7fa333896b20 '__nothrow_invokable_r_imp<true, false, type-parameter-0-0, type-parameter-0-1, type-parameter-0-2...>' dependent
| |   | |   `-ClassTemplatePartialSpecialization 0x7fa3338969b8 '__nothrow_invokable_r_imp'
| |   | |-FunctionTemplateDecl 0x7fa333898760 <line:4367:5, line:4368:38> col:17 __test_noexcept
| |   | | |-TemplateTypeParmDecl 0x7fa333898500 <line:4367:15, col:21> col:21 referenced class depth 1 index 0 _Tp
| |   | | `-CXXMethodDecl 0x7fa3338986c8 <line:4368:5, col:38> col:17 __test_noexcept 'void (_Tp) noexcept' static
| |   | |   `-ParmVarDecl 0x7fa333898590 <col:33> col:36 '_Tp'
| |   | `-VarDecl 0x7fa3338987c8 <line:4370:5, line:4371:76> line:4370:23 value 'const _Bool' static cinit
| |   |   `-CXXNoexceptExpr 0x7fa333898ca8 <col:31, line:4371:76> '_Bool'
| |   |     `-CallExpr 0x7fa333898c78 <line:4370:40, line:4371:75> '<dependent type>'
| |   |       |-UnresolvedLookupExpr 0x7fa3338988c8 <line:4370:40, col:68> '<dependent type>' lvalue (no ADL) = '__test_noexcept' 0x7fa333898760
| |   |       `-CallExpr 0x7fa333898c40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4371:74> '<dependent type>'
| |   |         |-UnresolvedLookupExpr 0x7fa333898990 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4371:16> '<overloaded function type>' lvalue (no ADL) = '__invoke' 0x7fa33387d848 0x7fa3338814e8 0x7fa333884688 0x7fa333888208 0x7fa33388b938 0x7fa33388dc98 0x7fa333890098 0x7fa333893278
| |   |         |-CallExpr 0x7fa333898af8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4371:45> '<dependent type>'
| |   |         | `-UnresolvedLookupExpr 0x7fa333898a60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4371:43> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fa333159250
| |   |         `-PackExpansionExpr 0x7fa333898c20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4371:71> '<dependent type>'
| |   |           `-CallExpr 0x7fa333898bf8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4371:70> '<dependent type>'
| |   |             `-UnresolvedLookupExpr 0x7fa333898b60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4371:68> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fa333159250
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa333899188 <line:4374:1, line:4379:1> line:4375:8 struct __nothrow_invokable_r_imp definition
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-2...'
| |   | |-TemplateTypeParmDecl 0x7fa333898cf0 <line:4374:11, col:17> col:17 referenced class depth 0 index 0 _Ret
| |   | |-TemplateTypeParmDecl 0x7fa333898d58 <col:23, col:29> col:29 referenced class depth 0 index 1 _Fp
| |   | |-TemplateTypeParmDecl 0x7fa333898dc8 <col:34, col:43> col:43 referenced class depth 0 index 2 ... _Args
| |   | |-CXXRecordDecl 0x7fa333899560 <line:4375:1, col:8> col:8 implicit struct __nothrow_invokable_r_imp
| |   | `-VarDecl 0x7fa333899608 <line:4377:5, line:4378:75> line:4377:23 value 'const _Bool' static cinit
| |   |   `-CXXNoexceptExpr 0x7fa333899980 <col:31, line:4378:75> '_Bool'
| |   |     `-CallExpr 0x7fa333899948 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4378:74> '<dependent type>'
| |   |       |-UnresolvedLookupExpr 0x7fa333899698 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4378:16> '<overloaded function type>' lvalue (no ADL) = '__invoke' 0x7fa33387d848 0x7fa3338814e8 0x7fa333884688 0x7fa333888208 0x7fa33388b938 0x7fa33388dc98 0x7fa333890098 0x7fa333893278
| |   |       |-CallExpr 0x7fa333899800 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4378:45> '<dependent type>'
| |   |       | `-UnresolvedLookupExpr 0x7fa333899768 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4378:43> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fa333159250
| |   |       `-PackExpansionExpr 0x7fa333899928 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4378:71> '<dependent type>'
| |   |         `-CallExpr 0x7fa333899900 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4378:70> '<dependent type>'
| |   |           `-UnresolvedLookupExpr 0x7fa333899868 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4378:68> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fa333159250
| |   |-TypeAliasTemplateDecl 0x7fa33389a1d8 <line:4381:1, line:4387:5> line:4382:1 __nothrow_invokable_r
| |   | |-TemplateTypeParmDecl 0x7fa3338999c8 <line:4381:11, col:17> col:17 referenced class depth 0 index 0 _Ret
| |   | |-TemplateTypeParmDecl 0x7fa333899a38 <col:23, col:29> col:29 referenced class depth 0 index 1 _Fp
| |   | |-TemplateTypeParmDecl 0x7fa333899aa8 <col:34, col:43> col:43 referenced class depth 0 index 2 ... _Args
| |   | `-TypeAliasDecl 0x7fa33389a178 <line:4382:1, line:4387:5> line:4382:7 __nothrow_invokable_r '__nothrow_invokable_r_imp<__invokable_r<_Ret, _Fp, _Args...>::value, is_void<_Ret>::value, _Ret, _Fp, _Args...>'
| |   |   `-TemplateSpecializationType 0x7fa333899fb0 '__nothrow_invokable_r_imp<__invokable_r<_Ret, _Fp, _Args...>::value, is_void<_Ret>::value, _Ret, _Fp, _Args...>' dependent __nothrow_invokable_r_imp
| |   |     |-TemplateArgument expr
| |   |     | `-DependentScopeDeclRefExpr 0x7fa333899d10 <line:4384:13, col:49> '<dependent type>' lvalue
| |   |     |-TemplateArgument expr
| |   |     | `-DependentScopeDeclRefExpr 0x7fa333899e30 <line:4385:13, col:28> '<dependent type>' lvalue
| |   |     |-TemplateArgument type '_Ret'
| |   |     |-TemplateArgument type '_Fp'
| |   |     `-TemplateArgument type '_Args...'
| |   |-ClassTemplateDecl 0x7fa33389a800 <line:4389:1, line:4395:1> line:4390:8 __invoke_of
| |   | |-TemplateTypeParmDecl 0x7fa33389a228 <line:4389:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fa33389a298 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | `-CXXRecordDecl 0x7fa33389a328 <line:4390:1, line:4395:1> line:4390:8 struct __invoke_of definition
| |   |   |-public 'enable_if<__invokable<_Fp, _Args...>::value, typename __invokable_r<void, _Fp, _Args...>::_Result>'
| |   |   `-CXXRecordDecl 0x7fa33389b268 <col:1, col:8> col:8 implicit struct __invoke_of
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa33389b628 <line:4399:1, line:4403:1> line:4400:28 class result_of definition
| |   | |-public '__invoke_of<_Fp, _Args...>'
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1...)'
| |   | |-TemplateTypeParmDecl 0x7fa33389b320 <line:4399:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fa33389b388 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | |-TypeVisibilityAttr 0x7fa33389b780 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fa33389b9f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4400:1, col:28> col:28 implicit class result_of
| |   |-TypeAliasTemplateDecl 0x7fa33389bcf0 <line:4406:1, col:67> col:22 result_of_t
| |   | |-TemplateTypeParmDecl 0x7fa33389bab0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fa33389bc90 <col:22, col:67> col:28 result_of_t 'typename result_of<_Tp>::type'
| |   |   `-DependentNameType 0x7fa33389bc20 'typename result_of<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fa33389be58 <line:4440:1, col:29> col:29 __is_swappable
| |   | |-TemplateTypeParmDecl 0x7fa33389bd40 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa33389bdc0 <col:22, col:29> col:29 struct __is_swappable
| |   |-ClassTemplateDecl 0x7fa33389c188 <line:4441:1, col:29> col:29 __is_nothrow_swappable
| |   | |-TemplateTypeParmDecl 0x7fa33389c068 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa33389c0f0 <col:22, col:29> col:29 struct __is_nothrow_swappable
| |   |-FunctionTemplateDecl 0x7fa33389cd68 <line:4443:1, line:4460:1> line:4454:1 swap
| |   | |-TemplateTypeParmDecl 0x7fa33389c398 <line:4443:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fa33389ccd0 <line:4444:1, line:4460:1> line:4454:1 swap 'typename enable_if<is_move_constructible<_Tp>::value && is_move_assignable<_Tp>::value>::type (_Tp &, _Tp &) noexcept(is_nothrow_move_constructible<_Tp>::value && is_nothrow_move_assignable<_Tp>::value)' inline
| |   |   |-ParmVarDecl 0x7fa33389c8b8 <col:6, col:11> col:11 referenced __x '_Tp &'
| |   |   |-ParmVarDecl 0x7fa33389c928 <col:16, col:21> col:21 referenced __y '_Tp &'
| |   |   |-CompoundStmt 0x7fa33389d248 <line:4456:1, line:4460:1>
| |   |   | |-DeclStmt 0x7fa33389cfd0 <line:4457:5, col:30>
| |   |   | | `-VarDecl 0x7fa33389ceb8 <col:5, col:29> col:9 referenced __t '_Tp' callinit
| |   |   | |   `-ParenListExpr 0x7fa33389cfa0 <col:12, col:29> 'NULL TYPE'
| |   |   | |     `-CallExpr 0x7fa33389cf40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4457:28> '<dependent type>'
| |   |   | |       |-UnresolvedLookupExpr 0x7fa33389ce50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4457:20> '<overloaded function type>' lvalue (no ADL) = 'move' 0x7fa33382ea38
| |   |   | |       `-DeclRefExpr 0x7fa33389cf18 <col:25> '_Tp' lvalue ParmVar 0x7fa33389c8b8 '__x' '_Tp &'
| |   |   | |-BinaryOperator 0x7fa33389d0f0 <line:4458:5, col:26> '<dependent type>' '='
| |   |   | | |-DeclRefExpr 0x7fa33389cfe8 <col:5> '_Tp' lvalue ParmVar 0x7fa33389c8b8 '__x' '_Tp &'
| |   |   | | `-CallExpr 0x7fa33389d0c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4458:26> '<dependent type>'
| |   |   | |   |-UnresolvedLookupExpr 0x7fa33389d040 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4458:18> '<overloaded function type>' lvalue (no ADL) = 'move' 0x7fa33382ea38
| |   |   | |   `-DeclRefExpr 0x7fa33389d098 <col:23> '_Tp' lvalue ParmVar 0x7fa33389c928 '__y' '_Tp &'
| |   |   | `-BinaryOperator 0x7fa33389d220 <line:4459:5, col:26> '<dependent type>' '='
| |   |   |   |-DeclRefExpr 0x7fa33389d118 <col:5> '_Tp' lvalue ParmVar 0x7fa33389c928 '__y' '_Tp &'
| |   |   |   `-CallExpr 0x7fa33389d1f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4459:26> '<dependent type>'
| |   |   |     |-UnresolvedLookupExpr 0x7fa33389d170 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4459:18> '<overloaded function type>' lvalue (no ADL) = 'move' 0x7fa33382ea38
| |   |   |     `-DeclRefExpr 0x7fa33389d1c8 <col:23> '_Tp' lvalue Var 0x7fa33389ceb8 '__t' '_Tp'
| |   |   |-AlwaysInlineAttr 0x7fa33389cdc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fa33389ce10 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fa33389dbd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4462:1, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:759:35> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4467:1 swap
| |   | |-TemplateTypeParmDecl 0x7fa33389d278 <line:4462:10, col:16> col:16 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fa33389d2f8 <col:21, col:28> col:28 referenced 'size_t':'unsigned long' depth 0 index 1 _Np
| |   | `-FunctionDecl 0x7fa33389db40 <line:4463:1, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:759:35> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4467:1 swap 'typename enable_if<__is_swappable<_Tp>::value>::type (_Tp (&)[_Np], _Tp (&)[_Np]) noexcept(__is_nothrow_swappable<_Tp>::value)' inline
| |   |   |-ParmVarDecl 0x7fa33389d798 <col:6, col:20> col:12 __a '_Tp (&)[_Np]'
| |   |   |-ParmVarDecl 0x7fa33389d8e8 <col:23, col:37> col:29 __b '_Tp (&)[_Np]'
| |   |   |-AlwaysInlineAttr 0x7fa33389dc38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fa33389dc80 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fa33389e2f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4469:1, line:4478:1> line:4472:1 iter_swap
| |   | |-TemplateTypeParmDecl 0x7fa33389dc90 <line:4469:11, col:17> col:17 referenced class depth 0 index 0 _ForwardIterator1
| |   | |-TemplateTypeParmDecl 0x7fa33389dcf8 <col:36, col:42> col:42 referenced class depth 0 index 1 _ForwardIterator2
| |   | `-FunctionDecl 0x7fa33389e260 <line:4470:1, line:4478:1> line:4472:1 iter_swap 'void (_ForwardIterator1, _ForwardIterator2) noexcept(noexcept(swap(*std::__1::declval<_ForwardIterator1>(), *std::__1::declval<_ForwardIterator2>())))' inline
| |   |   |-ParmVarDecl 0x7fa33389ddc8 <col:11, col:29> col:29 referenced __a '_ForwardIterator1'
| |   |   |-ParmVarDecl 0x7fa33389de38 <col:34, col:52> col:52 referenced __b '_ForwardIterator2'
| |   |   |-CompoundStmt 0x7fa33389e4d8 <line:4476:1, line:4478:1>
| |   |   | `-CallExpr 0x7fa33389e4a0 <line:4477:5, col:20> '<dependent type>'
| |   |   |   |-UnresolvedLookupExpr 0x7fa33389e3b0 <col:5> '<overloaded function type>' lvalue (ADL) = 'swap' 0x7fa33389dbd8 0x7fa33389cd68
| |   |   |   |-UnaryOperator 0x7fa33389e438 <col:10, col:11> '<dependent type>' prefix '*'
| |   |   |   | `-DeclRefExpr 0x7fa33389e410 <col:11> '_ForwardIterator1' lvalue ParmVar 0x7fa33389ddc8 '__a' '_ForwardIterator1'
| |   |   |   `-UnaryOperator 0x7fa33389e480 <col:16, col:17> '<dependent type>' prefix '*'
| |   |   |     `-DeclRefExpr 0x7fa33389e458 <col:17> '_ForwardIterator2' lvalue ParmVar 0x7fa33389de38 '__b' '_ForwardIterator2'
| |   |   |-AlwaysInlineAttr 0x7fa33389e358 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fa33389e3a0 <col:51, col:74> Hidden
| |   |-NamespaceDecl 0x7fa33389e4f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4482:1, line:4521:1> line:4482:11 __detail
| |   | |-ClassTemplateDecl 0x7fa33389e9f8 <line:4486:1, line:4502:1> line:4488:8 __swappable_with
| |   | | |-TemplateTypeParmDecl 0x7fa33389e560 <line:4486:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | | |-TemplateTypeParmDecl 0x7fa33389e5d8 <col:22, col:34> col:28 referenced class depth 0 index 1 _Up
| |   | | | `-TemplateArgument type '_Tp'
| |   | | |-NonTypeTemplateParmDecl 0x7fa33389e8e0 <line:4487:11, col:66> col:16 '_Bool' depth 0 index 2 _NotVoid
| |   | | | `-TemplateArgument expr
| |   | | |   `-BinaryOperator 0x7fa33389e8a8 <col:27, col:66> '<dependent type>' '&&'
| |   | | |     |-UnaryOperator 0x7fa33389e758 <col:27, col:42> '<dependent type>' prefix '!'
| |   | | |     | `-DependentScopeDeclRefExpr 0x7fa33389e718 <col:28, col:42> '<dependent type>' lvalue
| |   | | |     `-UnaryOperator 0x7fa33389e888 <col:51, col:66> '<dependent type>' prefix '!'
| |   | | |       `-DependentScopeDeclRefExpr 0x7fa33389e848 <col:52, col:66> '<dependent type>' lvalue
| |   | | `-CXXRecordDecl 0x7fa33389e960 <line:4488:1, line:4502:1> line:4488:8 struct __swappable_with definition
| |   | |   |-CXXRecordDecl 0x7fa33389ed00 <col:1, col:8> col:8 implicit struct __swappable_with
| |   | |   |-FunctionTemplateDecl 0x7fa33389f3b8 <line:4490:5, line:4492:20> col:5 __test_swap
| |   | |   | |-TemplateTypeParmDecl 0x7fa33389ed98 <line:4490:15, col:21> col:21 referenced class depth 1 index 0 _LHS
| |   | |   | |-TemplateTypeParmDecl 0x7fa33389ee08 <col:27, col:33> col:33 referenced class depth 1 index 1 _RHS
| |   | |   | `-CXXMethodDecl 0x7fa33389f320 <line:4491:5, line:4492:20> col:5 __test_swap 'decltype(swap(std::__1::declval<_LHS>(), std::__1::declval<_RHS>())) (int)' static
| |   | |   |   `-ParmVarDecl 0x7fa33389f178 <col:17> col:20 'int'
| |   | |   |-FunctionTemplateDecl 0x7fa33389f678 <line:4493:5, line:4494:34> col:18 __test_swap
| |   | |   | |-TemplateTypeParmDecl 0x7fa33389f410 <line:4493:15> col:15 class depth 1 index 0
| |   | |   | |-TemplateTypeParmDecl 0x7fa33389f478 <col:22> col:22 class depth 1 index 1
| |   | |   | `-CXXMethodDecl 0x7fa33389f5e0 <line:4494:5, col:34> col:18 __test_swap 'struct std::__1::__nat (long)' static
| |   | |   |   `-ParmVarDecl 0x7fa33389f520 <col:30> col:34 'long'
| |   | |   |-TypedefDecl 0x7fa33389f8c8 <line:4497:5, col:50> col:50 referenced __swap1 'decltype((__test_swap<_Tp, _Up>(0)))'
| |   | |   | `-DecltypeType 0x7fa33389f890 'decltype((__test_swap<_Tp, _Up>(0)))' dependent
| |   | |   |   `-ParenExpr 0x7fa33389f828 <col:22, col:47> '<dependent type>'
| |   | |   |     `-CallExpr 0x7fa33389f7f8 <col:23, col:46> '<dependent type>'
| |   | |   |       |-UnresolvedLookupExpr 0x7fa33389f708 <col:23, col:43> '<dependent type>' lvalue (no ADL) = '__test_swap' 0x7fa33389f678 0x7fa33389f3b8
| |   | |   |       `-IntegerLiteral 0x7fa33389f7d8 <col:45> 'int' 0
| |   | |   |-TypedefDecl 0x7fa33389fb18 <line:4498:5, col:50> col:50 referenced __swap2 'decltype((__test_swap<_Up, _Tp>(0)))'
| |   | |   | `-DecltypeType 0x7fa33389fae0 'decltype((__test_swap<_Up, _Tp>(0)))' dependent
| |   | |   |   `-ParenExpr 0x7fa33389fa78 <col:22, col:47> '<dependent type>'
| |   | |   |     `-CallExpr 0x7fa33389fa48 <col:23, col:46> '<dependent type>'
| |   | |   |       |-UnresolvedLookupExpr 0x7fa33389f958 <col:23, col:43> '<dependent type>' lvalue (no ADL) = '__test_swap' 0x7fa33389f678 0x7fa33389f3b8
| |   | |   |       `-IntegerLiteral 0x7fa33389fa28 <col:45> 'int' 0
| |   | |   `-VarDecl 0x7fa33389fb80 <line:4500:5, line:4501:57> line:4500:23 value 'const _Bool' static cinit
| |   | |     `-BinaryOperator 0x7fa33389ffb8 <col:31, line:4501:57> '<dependent type>' '&&'
| |   | |       |-UnaryOperator 0x7fa33389fda8 <line:4500:31, col:57> '<dependent type>' prefix '!'
| |   | |       | `-DependentScopeDeclRefExpr 0x7fa33389fd68 <col:32, col:57> '<dependent type>' lvalue
| |   | |       `-UnaryOperator 0x7fa33389ff98 <line:4501:31, col:57> '<dependent type>' prefix '!'
| |   | |         `-DependentScopeDeclRefExpr 0x7fa33389ff58 <col:32, col:57> '<dependent type>' lvalue
| |   | |-ClassTemplatePartialSpecializationDecl 0x7fa3338a02c8 <line:4504:1, line:4505:57> col:8 struct __swappable_with definition
| |   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | |-TemplateArgument type 'type-parameter-0-1'
| |   | | |-TemplateArgument integral 0
| |   | | |-TemplateTypeParmDecl 0x7fa3338a0000 <line:4504:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | | |-TemplateTypeParmDecl 0x7fa3338a0068 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | | `-CXXRecordDecl 0x7fa3338a05f0 <line:4505:1, col:8> col:8 implicit struct __swappable_with
| |   | |-ClassTemplateDecl 0x7fa3338a1140 <line:4507:1, line:4516:1> line:4508:8 __nothrow_swappable_with
| |   | | |-TemplateTypeParmDecl 0x7fa3338a06a8 <line:4507:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | | |-TemplateTypeParmDecl 0x7fa3338a0728 <col:22, col:34> col:28 referenced class depth 0 index 1 _Up
| |   | | | `-TemplateArgument type '_Tp'
| |   | | |-NonTypeTemplateParmDecl 0x7fa3338a1028 <col:39, col:85> col:44 '_Bool' depth 0 index 2 _Swappable
| |   | | | `-TemplateArgument expr
| |   | | |   `-DependentScopeDeclRefExpr 0x7fa3338a0fd8 <col:57, col:85> '<dependent type>' lvalue
| |   | | `-CXXRecordDecl 0x7fa3338a10a8 <line:4508:1, line:4516:1> line:4508:8 struct __nothrow_swappable_with definition
| |   | |   |-CXXRecordDecl 0x7fa3338a1440 <col:1, col:8> col:8 implicit struct __nothrow_swappable_with
| |   | |   `-VarDecl 0x7fa3338a14e8 <line:4509:3, line:4512:66> line:4509:21 value 'const _Bool' static cinit
| |   | |     `-BinaryOperator 0x7fa3338a1ac8 <line:4511:7, line:4512:66> '_Bool' '&&'
| |   | |       |-CXXNoexceptExpr 0x7fa3338a17e0 <line:4511:7, col:66> '_Bool'
| |   | |       | `-CallExpr 0x7fa3338a17a8 <col:16, col:65> '<dependent type>'
| |   | |       |   |-UnresolvedLookupExpr 0x7fa3338a1548 <col:16> '<overloaded function type>' lvalue (ADL) = 'swap' 0x7fa33389dbd8 0x7fa33389cd68
| |   | |       |   |-CallExpr 0x7fa3338a1680 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4511:41> '<dependent type>'
| |   | |       |   | `-UnresolvedLookupExpr 0x7fa3338a15e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4511:39> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fa333159250
| |   | |       |   `-CallExpr 0x7fa3338a1780 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4511:64> '<dependent type>'
| |   | |       |     `-UnresolvedLookupExpr 0x7fa3338a16e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4511:62> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fa333159250
| |   | |       `-CXXNoexceptExpr 0x7fa3338a1aa0 <line:4512:7, col:66> '_Bool'
| |   | |         `-CallExpr 0x7fa3338a1a68 <col:16, col:65> '<dependent type>'
| |   | |           |-UnresolvedLookupExpr 0x7fa3338a1808 <col:16> '<overloaded function type>' lvalue (ADL) = 'swap' 0x7fa33389dbd8 0x7fa33389cd68
| |   | |           |-CallExpr 0x7fa3338a1940 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4512:41> '<dependent type>'
| |   | |           | `-UnresolvedLookupExpr 0x7fa3338a18a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4512:39> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fa333159250
| |   | |           `-CallExpr 0x7fa3338a1a40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4512:64> '<dependent type>'
| |   | |             `-UnresolvedLookupExpr 0x7fa3338a19a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4512:62> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fa333159250
| |   | `-ClassTemplatePartialSpecializationDecl 0x7fa3338a1dd8 <line:4518:1, line:4519:64> col:8 struct __nothrow_swappable_with definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TemplateArgument type 'type-parameter-0-0'
| |   |   |-TemplateArgument type 'type-parameter-0-1'
| |   |   |-TemplateArgument integral 0
| |   |   |-TemplateTypeParmDecl 0x7fa3338a1b10 <line:4518:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   |   |-TemplateTypeParmDecl 0x7fa3338a1b78 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   |   `-CXXRecordDecl 0x7fa3338a2100 <line:4519:1, col:8> col:8 implicit struct __nothrow_swappable_with
| |   |-ClassTemplateDecl 0x7fa3338a22d8 prev 0x7fa33389be58 <line:4523:1, line:4527:1> line:4524:8 __is_swappable
| |   | |-TemplateTypeParmDecl 0x7fa3338a21b8 <line:4523:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa3338a2240 prev 0x7fa33389bdc0 <line:4524:1, line:4527:1> line:4524:8 struct __is_swappable definition
| |   |   |-public 'integral_constant<_Bool, __detail::__swappable_with<_Tp &>::value>'
| |   |   `-CXXRecordDecl 0x7fa3338a2a48 <col:1, col:8> col:8 implicit struct __is_swappable
| |   |-ClassTemplateDecl 0x7fa3338a2c98 prev 0x7fa33389c188 <line:4529:1, line:4533:1> line:4530:8 __is_nothrow_swappable
| |   | |-TemplateTypeParmDecl 0x7fa3338a2b00 <line:4529:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa3338a2c00 prev 0x7fa33389c0f0 <line:4530:1, line:4533:1> line:4530:8 struct __is_nothrow_swappable definition
| |   |   |-public 'integral_constant<_Bool, __detail::__nothrow_swappable_with<_Tp &>::value>'
| |   |   `-CXXRecordDecl 0x7fa3338a34c8 <col:1, col:8> col:8 implicit struct __is_nothrow_swappable
| |   |-ClassTemplateDecl 0x7fa3338a3698 <line:4589:1, line:4593:1> line:4590:8 underlying_type
| |   | |-TemplateTypeParmDecl 0x7fa3338a3580 <line:4589:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa3338a3600 <line:4590:1, line:4593:1> line:4590:8 struct underlying_type definition
| |   |   |-CXXRecordDecl 0x7fa3338a3910 <col:1, col:8> col:8 implicit struct underlying_type
| |   |   `-TypedefDecl 0x7fa3338a3a50 <line:4592:5, col:42> col:42 type '__underlying_type(_Tp)'
| |   |     `-UnaryTransformType 0x7fa3338a3a00 '__underlying_type(_Tp)' dependent underlying_type
| |   |       `-TemplateTypeParmType 0x7fa3338a35c0 '_Tp' dependent depth 0 index 0
| |   |         `-TemplateTypeParm 0x7fa3338a3580 '_Tp'
| |   |-TypeAliasTemplateDecl 0x7fa3338a3d10 <line:4596:1, col:79> col:22 underlying_type_t
| |   | |-TemplateTypeParmDecl 0x7fa3338a3ac8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fa3338a3cb0 <col:22, col:79> col:28 underlying_type_t 'typename underlying_type<_Tp>::type'
| |   |   `-DependentNameType 0x7fa3338a3c40 'typename underlying_type<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fa3338a3ff8 <line:4612:1, line:4617:1> line:4613:8 __sfinae_underlying_type
| |   | |-TemplateTypeParmDecl 0x7fa3338a3d60 <line:4612:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fa3338a3ee8 <col:22, col:43> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fa3338a3e98 <col:29, col:43> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fa3338a3f60 <line:4613:1, line:4617:1> line:4613:8 struct __sfinae_underlying_type definition
| |   |   |-CXXRecordDecl 0x7fa3338a42c0 <col:1, col:8> col:8 implicit struct __sfinae_underlying_type
| |   |   |-TypedefDecl 0x7fa3338a4480 <line:4615:5, col:49> col:49 referenced type 'typename underlying_type<_Tp>::type'
| |   |   | `-DependentNameType 0x7fa3338a4410 'typename underlying_type<_Tp>::type' dependent
| |   |   `-TypedefDecl 0x7fa3338a4638 <line:4616:5, col:37> col:37 __promoted_type 'decltype(((std::__1::__sfinae_underlying_type::type)1) + 0)'
| |   |     `-DecltypeType 0x7fa3338a4600 'decltype(((std::__1::__sfinae_underlying_type::type)1) + 0)' dependent
| |   |       `-BinaryOperator 0x7fa3338a4598 <col:22, col:34> '<dependent type>' '+'
| |   |         |-ParenExpr 0x7fa3338a4558 <col:22, col:30> 'std::__1::__sfinae_underlying_type::type':'typename underlying_type<_Tp>::type'
| |   |         | `-CStyleCastExpr 0x7fa3338a4530 <col:23, col:29> 'std::__1::__sfinae_underlying_type::type':'typename underlying_type<_Tp>::type' <Dependent>
| |   |         |   `-IntegerLiteral 0x7fa3338a4500 <col:29> 'int' 1
| |   |         `-IntegerLiteral 0x7fa3338a4578 <col:34> 'int' 0
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa3338a4890 <line:4619:1, line:4620:46> col:8 struct __sfinae_underlying_type definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fa3338a46b0 <line:4619:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa3338a4b20 <line:4620:1, col:8> col:8 implicit struct __sfinae_underlying_type
| |   |-FunctionDecl 0x7fa3338a60e8 <line:4622:1, line:4623:54> col:5 __convert_to_integral 'int (int)' inline
| |   | |-ParmVarDecl 0x7fa3338a6020 <col:27, col:31> col:31 used __val 'int'
| |   | |-CompoundStmt 0x7fa3338a6238 <col:38, col:54>
| |   | | `-ReturnStmt 0x7fa3338a6220 <col:40, col:47>
| |   | |   `-ImplicitCastExpr 0x7fa3338a6208 <col:47> 'int' <LValueToRValue>
| |   | |     `-DeclRefExpr 0x7fa3338a61e0 <col:47> 'int' lvalue ParmVar 0x7fa3338a6020 '__val' 'int'
| |   | |-AlwaysInlineAttr 0x7fa3338a6188 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | `-VisibilityAttr 0x7fa3338a61d0 <col:51, col:74> Hidden
| |   |-FunctionDecl 0x7fa3338a6368 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4625:1, line:4626:64> col:10 __convert_to_integral 'unsigned int (unsigned int)' inline
| |   | |-ParmVarDecl 0x7fa3338a62a0 <col:32, col:41> col:41 used __val 'unsigned int'
| |   | |-CompoundStmt 0x7fa3338a64b8 <col:48, col:64>
| |   | | `-ReturnStmt 0x7fa3338a64a0 <col:50, col:57>
| |   | |   `-ImplicitCastExpr 0x7fa3338a6488 <col:57> 'unsigned int' <LValueToRValue>
| |   | |     `-DeclRefExpr 0x7fa3338a6460 <col:57> 'unsigned int' lvalue ParmVar 0x7fa3338a62a0 '__val' 'unsigned int'
| |   | |-AlwaysInlineAttr 0x7fa3338a6408 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | `-VisibilityAttr 0x7fa3338a6450 <col:51, col:74> Hidden
| |   |-FunctionDecl 0x7fa3338a65e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4628:1, line:4629:56> col:6 __convert_to_integral 'long (long)' inline
| |   | |-ParmVarDecl 0x7fa3338a6520 <col:28, col:33> col:33 used __val 'long'
| |   | |-CompoundStmt 0x7fa3338a6738 <col:40, col:56>
| |   | | `-ReturnStmt 0x7fa3338a6720 <col:42, col:49>
| |   | |   `-ImplicitCastExpr 0x7fa3338a6708 <col:49> 'long' <LValueToRValue>
| |   | |     `-DeclRefExpr 0x7fa3338a66e0 <col:49> 'long' lvalue ParmVar 0x7fa3338a6520 '__val' 'long'
| |   | |-AlwaysInlineAttr 0x7fa3338a6688 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | `-VisibilityAttr 0x7fa3338a66d0 <col:51, col:74> Hidden
| |   |-FunctionDecl 0x7fa3338a6868 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4631:1, line:4632:74> col:15 __convert_to_integral 'unsigned long (unsigned long)' inline
| |   | |-ParmVarDecl 0x7fa3338a67a0 <col:37, col:51> col:51 used __val 'unsigned long'
| |   | |-CompoundStmt 0x7fa3338a69b8 <col:58, col:74>
| |   | | `-ReturnStmt 0x7fa3338a69a0 <col:60, col:67>
| |   | |   `-ImplicitCastExpr 0x7fa3338a6988 <col:67> 'unsigned long' <LValueToRValue>
| |   | |     `-DeclRefExpr 0x7fa3338a6960 <col:67> 'unsigned long' lvalue ParmVar 0x7fa3338a67a0 '__val' 'unsigned long'
| |   | |-AlwaysInlineAttr 0x7fa3338a6908 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | `-VisibilityAttr 0x7fa3338a6950 <col:51, col:74> Hidden
| |   |-FunctionDecl 0x7fa3338a6ae8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4634:1, line:4635:66> col:11 __convert_to_integral 'long long (long long)' inline
| |   | |-ParmVarDecl 0x7fa3338a6a20 <col:33, col:43> col:43 used __val 'long long'
| |   | |-CompoundStmt 0x7fa3338a6c38 <col:50, col:66>
| |   | | `-ReturnStmt 0x7fa3338a6c20 <col:52, col:59>
| |   | |   `-ImplicitCastExpr 0x7fa3338a6c08 <col:59> 'long long' <LValueToRValue>
| |   | |     `-DeclRefExpr 0x7fa3338a6be0 <col:59> 'long long' lvalue ParmVar 0x7fa3338a6a20 '__val' 'long long'
| |   | |-AlwaysInlineAttr 0x7fa3338a6b88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | `-VisibilityAttr 0x7fa3338a6bd0 <col:51, col:74> Hidden
| |   |-FunctionDecl 0x7fa3338a6d68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4637:1, line:4638:83> col:20 __convert_to_integral 'unsigned long long (unsigned long long)' inline
| |   | |-ParmVarDecl 0x7fa3338a6ca0 <col:42, col:61> col:61 used __val 'unsigned long long'
| |   | |-CompoundStmt 0x7fa3338a6eb8 <col:68, col:83>
| |   | | `-ReturnStmt 0x7fa3338a6ea0 <col:69, col:76>
| |   | |   `-ImplicitCastExpr 0x7fa3338a6e88 <col:76> 'unsigned long long' <LValueToRValue>
| |   | |     `-DeclRefExpr 0x7fa3338a6e60 <col:76> 'unsigned long long' lvalue ParmVar 0x7fa3338a6ca0 '__val' 'unsigned long long'
| |   | |-AlwaysInlineAttr 0x7fa3338a6e08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | `-VisibilityAttr 0x7fa3338a6e50 <col:51, col:74> Hidden
| |   |-FunctionDecl 0x7fa3338a7020 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4641:1, line:4642:68> col:12 __convert_to_integral '__int128_t (__int128_t)' inline
| |   | |-ParmVarDecl 0x7fa3338a6f18 <col:34, col:45> col:45 used __val '__int128_t':'__int128'
| |   | |-CompoundStmt 0x7fa3338a7170 <col:52, col:68>
| |   | | `-ReturnStmt 0x7fa3338a7158 <col:54, col:61>
| |   | |   `-ImplicitCastExpr 0x7fa3338a7140 <col:61> '__int128_t':'__int128' <LValueToRValue>
| |   | |     `-DeclRefExpr 0x7fa3338a7118 <col:61> '__int128_t':'__int128' lvalue ParmVar 0x7fa3338a6f18 '__val' '__int128_t':'__int128'
| |   | |-AlwaysInlineAttr 0x7fa3338a70c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | `-VisibilityAttr 0x7fa3338a7108 <col:51, col:74> Hidden
| |   |-FunctionDecl 0x7fa3338a72d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4644:1, line:4645:70> col:13 __convert_to_integral '__uint128_t (__uint128_t)' inline
| |   | |-ParmVarDecl 0x7fa3338a71d0 <col:35, col:47> col:47 used __val '__uint128_t':'unsigned __int128'
| |   | |-CompoundStmt 0x7fa3338a7420 <col:54, col:70>
| |   | | `-ReturnStmt 0x7fa3338a7408 <col:56, col:63>
| |   | |   `-ImplicitCastExpr 0x7fa3338a73f0 <col:63> '__uint128_t':'unsigned __int128' <LValueToRValue>
| |   | |     `-DeclRefExpr 0x7fa3338a73c8 <col:63> '__uint128_t':'unsigned __int128' lvalue ParmVar 0x7fa3338a71d0 '__val' '__uint128_t':'unsigned __int128'
| |   | |-AlwaysInlineAttr 0x7fa3338a7370 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | `-VisibilityAttr 0x7fa3338a73b8 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fa3338a7968 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4648:1, line:4651:50> col:1 __convert_to_integral
| |   | |-TemplateTypeParmDecl 0x7fa3338a7440 <line:4648:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fa3338a78d0 <line:4649:1, line:4651:50> col:1 __convert_to_integral 'typename __sfinae_underlying_type<_Tp>::__promoted_type (_Tp)' inline
| |   |   |-ParmVarDecl 0x7fa3338a77c0 <col:23, col:27> col:27 referenced __val '_Tp'
| |   |   |-CompoundStmt 0x7fa3338a7a58 <col:34, col:50>
| |   |   | `-ReturnStmt 0x7fa3338a7a40 <col:36, col:43>
| |   |   |   `-DeclRefExpr 0x7fa3338a7a18 <col:43> '_Tp' lvalue ParmVar 0x7fa3338a77c0 '__val' '_Tp'
| |   |   |-AlwaysInlineAttr 0x7fa3338a79c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fa3338a7a08 <col:51, col:74> Hidden
| |   |-ClassTemplateDecl 0x7fa3338a7b98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4655:1, line:4665:1> line:4656:8 __has_operator_addressof_member_imp
| |   | |-TemplateTypeParmDecl 0x7fa3338a7a78 <line:4655:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa3338a7b00 <line:4656:1, line:4665:1> line:4656:8 struct __has_operator_addressof_member_imp definition
| |   |   |-CXXRecordDecl 0x7fa3338a7e10 <col:1, col:8> col:8 implicit struct __has_operator_addressof_member_imp
| |   |   |-FunctionTemplateDecl 0x7fa3338a8518 <line:4658:5, line:4660:95> line:4659:21 __test
| |   |   | |-TemplateTypeParmDecl 0x7fa3338a7ea8 <line:4658:15, col:21> col:21 referenced class depth 1 index 0 _Up
| |   |   | `-CXXMethodDecl 0x7fa3338a8480 <line:4659:9, line:4660:95> line:4659:21 __test 'auto (int) -> typename __select_2nd<decltype(std::__1::declval<_Up>().operator&()), true_type>::type' static
| |   |   |   `-ParmVarDecl 0x7fa3338a7f48 <col:28> col:31 'int'
| |   |   |-FunctionTemplateDecl 0x7fa3338a87b8 <line:4661:5, line:4662:37> col:21 __test
| |   |   | |-TemplateTypeParmDecl 0x7fa3338a8570 <line:4661:15> col:15 class depth 1 index 0
| |   |   | `-CXXMethodDecl 0x7fa3338a8720 <line:4662:9, col:37> col:21 __test 'auto (long) -> std::__1::false_type' static
| |   |   |   `-ParmVarDecl 0x7fa3338a8608 <col:28> col:32 'long'
| |   |   `-VarDecl 0x7fa3338a8820 <line:4664:5, col:57> col:23 value 'const _Bool' static cinit
| |   |     `-DependentScopeDeclRefExpr 0x7fa3338a8a58 <col:31, col:57> '<dependent type>' lvalue
| |   |-ClassTemplateDecl 0x7fa3338a8bd8 <line:4667:1, line:4677:1> line:4668:8 __has_operator_addressof_free_imp
| |   | |-TemplateTypeParmDecl 0x7fa3338a8ab8 <line:4667:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa3338a8b40 <line:4668:1, line:4677:1> line:4668:8 struct __has_operator_addressof_free_imp definition
| |   |   |-CXXRecordDecl 0x7fa3338a8e50 <col:1, col:8> col:8 implicit struct __has_operator_addressof_free_imp
| |   |   |-FunctionTemplateDecl 0x7fa3338a9558 <line:4670:5, line:4672:94> line:4671:21 __test
| |   |   | |-TemplateTypeParmDecl 0x7fa3338a8ee8 <line:4670:15, col:21> col:21 referenced class depth 1 index 0 _Up
| |   |   | `-CXXMethodDecl 0x7fa3338a94c0 <line:4671:9, line:4672:94> line:4671:21 __test 'auto (int) -> typename __select_2nd<decltype(operator&(std::__1::declval<_Up>())), true_type>::type' static
| |   |   |   `-ParmVarDecl 0x7fa3338a8f88 <col:28> col:31 'int'
| |   |   |-FunctionTemplateDecl 0x7fa3338a9778 <line:4673:5, line:4674:37> col:21 __test
| |   |   | |-TemplateTypeParmDecl 0x7fa3338a95b0 <line:4673:15> col:15 class depth 1 index 0
| |   |   | `-CXXMethodDecl 0x7fa3338a96e0 <line:4674:9, col:37> col:21 __test 'auto (long) -> std::__1::false_type' static
| |   |   |   `-ParmVarDecl 0x7fa3338a9648 <col:28> col:32 'long'
| |   |   `-VarDecl 0x7fa3338a97e0 <line:4676:5, col:57> col:23 value 'const _Bool' static cinit
| |   |     `-DependentScopeDeclRefExpr 0x7fa3338a99d8 <col:31, col:57> '<dependent type>' lvalue
| |   |-ClassTemplateDecl 0x7fa3338a9b58 <line:4679:1, line:4683:2> line:4680:8 __has_operator_addressof
| |   | |-TemplateTypeParmDecl 0x7fa3338a9a38 <line:4679:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa3338a9ac0 <line:4680:1, line:4683:2> line:4680:8 struct __has_operator_addressof definition
| |   |   |-public 'integral_constant<_Bool, __has_operator_addressof_member_imp<_Tp>::value || __has_operator_addressof_free_imp<_Tp>::value>'
| |   |   `-CXXRecordDecl 0x7fa3338aa9f8 <col:1, col:8> col:8 implicit struct __has_operator_addressof
| |   |-CXXRecordDecl 0x7fa3338aaab0 <line:4709:1, col:32> col:8 referenced struct __extract_key_fail_tag definition
| |   | `-CXXRecordDecl 0x7fa3338aabd8 <col:1, col:8> col:8 implicit struct __extract_key_fail_tag
| |   |-CXXRecordDecl 0x7fa3338aac90 <line:4710:1, col:32> col:8 referenced struct __extract_key_self_tag definition
| |   | `-CXXRecordDecl 0x7fa3338aadb8 <col:1, col:8> col:8 implicit struct __extract_key_self_tag
| |   |-CXXRecordDecl 0x7fa3338aae70 <line:4711:1, col:33> col:8 referenced struct __extract_key_first_tag definition
| |   | `-CXXRecordDecl 0x7fa3338aaf98 <col:1, col:8> col:8 implicit struct __extract_key_first_tag
| |   |-ClassTemplateDecl 0x7fa3338ab3b8 <line:4713:1, line:4717:50> line:4715:8 __can_extract_key
| |   | |-TemplateTypeParmDecl 0x7fa3338ab050 <line:4713:11, col:17> col:17 referenced class depth 0 index 0 _ValTy
| |   | |-TemplateTypeParmDecl 0x7fa3338ab0b8 <col:25, col:31> col:31 referenced class depth 0 index 1 _Key
| |   | |-TemplateTypeParmDecl 0x7fa3338ab290 <line:4714:11, col:60> col:17 referenced class depth 0 index 2 _RawValTy
| |   | | `-TemplateArgument type 'typename __unconstref<_ValTy>::type'
| |   | `-CXXRecordDecl 0x7fa3338ab320 <line:4715:1, line:4717:50> line:4715:8 struct __can_extract_key definition
| |   |   |-public 'conditional<is_same<_RawValTy, _Key>::value, struct __extract_key_self_tag, struct __extract_key_fail_tag>::type'
| |   |   `-CXXRecordDecl 0x7fa3338abaf0 <col:1, col:8> col:8 implicit struct __can_extract_key
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa3338ac0c8 <line:4719:1, line:4722:75> line:4720:8 struct __can_extract_key definition
| |   | |-public 'conditional<is_same<typename remove_const<_First>::type, _Key>::value, struct __extract_key_first_tag, struct __extract_key_fail_tag>::type'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument type 'pair<type-parameter-0-2, type-parameter-0-3>'
| |   | |-TemplateTypeParmDecl 0x7fa3338abba8 <line:4719:11, col:17> col:17 referenced class depth 0 index 0 _Pair
| |   | |-TemplateTypeParmDecl 0x7fa3338abc18 <col:24, col:30> col:30 referenced class depth 0 index 1 _Key
| |   | |-TemplateTypeParmDecl 0x7fa3338abc88 <col:36, col:42> col:42 referenced class depth 0 index 2 _First
| |   | |-TemplateTypeParmDecl 0x7fa3338abcf8 <col:50, col:56> col:56 referenced class depth 0 index 3 _Second
| |   | `-CXXRecordDecl 0x7fa3338bda60 <line:4720:1, col:8> col:8 implicit struct __can_extract_key
| |   |-ClassTemplateDecl 0x7fa3338bdec0 <line:4727:1, line:4730:65> line:4729:8 __can_extract_map_key
| |   | |-TemplateTypeParmDecl 0x7fa3338bdb18 <line:4727:11, col:17> col:17 referenced class depth 0 index 0 _ValTy
| |   | |-TemplateTypeParmDecl 0x7fa3338bdb88 <col:25, col:31> col:31 referenced class depth 0 index 1 _Key
| |   | |-TemplateTypeParmDecl 0x7fa3338bdbf8 <col:37, col:43> col:43 class depth 0 index 2 _ContainerValueTy
| |   | |-TemplateTypeParmDecl 0x7fa3338bdd90 <line:4728:11, col:60> col:17 referenced class depth 0 index 3 _RawValTy
| |   | | `-TemplateArgument type 'typename __unconstref<_ValTy>::type'
| |   | `-CXXRecordDecl 0x7fa3338bde28 <line:4729:1, line:4730:65> line:4729:8 struct __can_extract_map_key definition
| |   |   |-public 'integral_constant<_Bool, is_same<_RawValTy, _Key>::value>'
| |   |   `-CXXRecordDecl 0x7fa3338be508 <col:1, col:8> col:8 implicit struct __can_extract_map_key
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa3338be960 <line:4734:1, line:4736:19> line:4735:8 struct __can_extract_map_key definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument type 'type-parameter-0-2'
| |   | |-TemplateTypeParmDecl 0x7fa3338be5c0 <line:4734:11, col:17> col:17 referenced class depth 0 index 0 _ValTy
| |   | |-TemplateTypeParmDecl 0x7fa3338be628 <col:25, col:31> col:31 referenced class depth 0 index 1 _Key
| |   | |-TemplateTypeParmDecl 0x7fa3338be698 <col:37, col:43> col:43 referenced class depth 0 index 2 _RawValTy
| |   | `-CXXRecordDecl 0x7fa3338bece0 <line:4735:1, col:8> col:8 implicit struct __can_extract_map_key
| |   `-VarDecl 0x7fa333821278 parent 0x7fa333118d80 prev 0x7fa333119f50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:812:27, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:518:58> col:58 referenced value 'const _Bool':'const _Bool' constexpr
| |-NamespaceDecl 0x7fa3338bed98 prev 0x7fa33310f8c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:438:37, line:439:38> line:438:47 std
| | |-original Namespace 0x7fa33302ee58 'std'
| | `-NamespaceDecl 0x7fa3338bee00 prev 0x7fa33310f930 <col:52, line:439:36> <scratch space>:432:1 __1 inline
| |   |-original Namespace 0x7fa33302eec0 '__1'
| |   |-EnumDecl 0x7fa3338bee68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:125:1, line:132:1> line:125:6 referenced float_round_style
| |   | |-EnumConstantDecl 0x7fa3338bef60 <line:127:5, col:34> col:5 round_indeterminate 'enum std::__1::float_round_style'
| |   | | `-UnaryOperator 0x7fa3338bef40 <col:33, col:34> 'int' prefix '-'
| |   | |   `-IntegerLiteral 0x7fa3338bef20 <col:34> 'int' 1
| |   | |-EnumConstantDecl 0x7fa3338befc8 <line:128:5, col:34> col:5 referenced round_toward_zero 'enum std::__1::float_round_style'
| |   | | `-IntegerLiteral 0x7fa3338befa8 <col:34> 'int' 0
| |   | |-EnumConstantDecl 0x7fa3338bf030 <line:129:5, col:34> col:5 referenced round_to_nearest 'enum std::__1::float_round_style'
| |   | | `-IntegerLiteral 0x7fa3338bf010 <col:34> 'int' 1
| |   | |-EnumConstantDecl 0x7fa3338bf098 <line:130:5, col:34> col:5 round_toward_infinity 'enum std::__1::float_round_style'
| |   | | `-IntegerLiteral 0x7fa3338bf078 <col:34> 'int' 2
| |   | `-EnumConstantDecl 0x7fa3338bf100 <line:131:5, col:34> col:5 round_toward_neg_infinity 'enum std::__1::float_round_style'
| |   |   `-IntegerLiteral 0x7fa3338bf0e0 <col:34> 'int' 3
| |   |-EnumDecl 0x7fa3338bf148 <line:134:1, line:139:1> line:134:6 referenced float_denorm_style
| |   | |-EnumConstantDecl 0x7fa3338bf240 <line:136:5, col:29> col:5 denorm_indeterminate 'enum std::__1::float_denorm_style'
| |   | | `-UnaryOperator 0x7fa3338bf220 <col:28, col:29> 'int' prefix '-'
| |   | |   `-IntegerLiteral 0x7fa3338bf200 <col:29> 'int' 1
| |   | |-EnumConstantDecl 0x7fa3338bf2a8 <line:137:5, col:21> col:5 referenced denorm_absent 'enum std::__1::float_denorm_style'
| |   | | `-IntegerLiteral 0x7fa3338bf288 <col:21> 'int' 0
| |   | `-EnumConstantDecl 0x7fa3338bf310 <line:138:5, col:22> col:5 referenced denorm_present 'enum std::__1::float_denorm_style'
| |   |   `-IntegerLiteral 0x7fa3338bf2f0 <col:22> 'int' 1
| |   |-ClassTemplateDecl 0x7fa3338bf5f8 <line:141:1, line:184:1> line:142:7 __libcpp_numeric_limits
| |   | |-TemplateTypeParmDecl 0x7fa3338bf358 <line:141:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fa3338bf4e8 <col:22, col:49> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fa3338bf498 <col:29, col:49> '<dependent type>' lvalue
| |   | |-CXXRecordDecl 0x7fa3338bf560 <line:142:1, line:184:1> line:142:7 class __libcpp_numeric_limits definition
| |   | | |-CXXRecordDecl 0x7fa333806af0 <col:1, col:7> col:7 implicit class __libcpp_numeric_limits
| |   | | |-AccessSpecDecl 0x7fa333806b88 <line:144:1, col:10> col:1 protected
| |   | | |-TypedefDecl 0x7fa333806bc0 <line:145:5, col:17> col:17 referenced type '_Tp'
| |   | | | `-TemplateTypeParmType 0x7fa3338bf3a0 '_Tp' dependent depth 0 index 0
| |   | | |   `-TemplateTypeParm 0x7fa3338bf358 '_Tp'
| |   | | |-VarDecl 0x7fa333806c28 <line:147:5, col:59> col:42 is_specialized 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fa333806c88 <col:59> '_Bool' false
| |   | | |-CXXMethodDecl 0x7fa333806da8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:148:92> col:61 constexpr min 'std::__1::__libcpp_numeric_limits::type (void) noexcept' static
| |   | | | |-CompoundStmt 0x7fa333808598 <col:77, col:92>
| |   | | | | `-ReturnStmt 0x7fa333808580 <col:78, col:90>
| |   | | | |   `-CXXUnresolvedConstructExpr 0x7fa333808558 <col:85, col:90> 'std::__1::__libcpp_numeric_limits::type':'_Tp'
| |   | | | |-AlwaysInlineAttr 0x7fa333806e40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | | `-VisibilityAttr 0x7fa333806e88 <col:51, col:74> Hidden
| |   | | |-CXXMethodDecl 0x7fa333806ef0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:149:92> col:61 constexpr max 'std::__1::__libcpp_numeric_limits::type (void) noexcept' static
| |   | | | |-CompoundStmt 0x7fa333808608 <col:77, col:92>
| |   | | | | `-ReturnStmt 0x7fa3338085f0 <col:78, col:90>
| |   | | | |   `-CXXUnresolvedConstructExpr 0x7fa3338085c8 <col:85, col:90> 'std::__1::__libcpp_numeric_limits::type':'_Tp'
| |   | | | |-AlwaysInlineAttr 0x7fa333806f88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | | `-VisibilityAttr 0x7fa333806fd0 <col:51, col:74> Hidden
| |   | | |-CXXMethodDecl 0x7fa333807038 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:150:95> col:61 constexpr lowest 'std::__1::__libcpp_numeric_limits::type (void) noexcept' static
| |   | | | |-CompoundStmt 0x7fa333808678 <col:80, col:95>
| |   | | | | `-ReturnStmt 0x7fa333808660 <col:81, col:93>
| |   | | | |   `-CXXUnresolvedConstructExpr 0x7fa333808638 <col:88, col:93> 'std::__1::__libcpp_numeric_limits::type':'_Tp'
| |   | | | |-AlwaysInlineAttr 0x7fa3338070d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | | `-VisibilityAttr 0x7fa333807118 <col:51, col:74> Hidden
| |   | | |-VarDecl 0x7fa333807140 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:152:5, col:50> col:41 digits 'const int' static constexpr cinit
| |   | | | `-IntegerLiteral 0x7fa3338071a0 <col:50> 'int' 0
| |   | | |-VarDecl 0x7fa3338071d8 <line:153:5, col:52> col:41 digits10 'const int' static constexpr cinit
| |   | | | `-IntegerLiteral 0x7fa333807238 <col:52> 'int' 0
| |   | | |-VarDecl 0x7fa333807270 <line:154:5, col:56> col:41 max_digits10 'const int' static constexpr cinit
| |   | | | `-IntegerLiteral 0x7fa3338072d0 <col:56> 'int' 0
| |   | | |-VarDecl 0x7fa333807300 <line:155:5, col:53> col:41 is_signed 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fa333807360 <col:53> '_Bool' false
| |   | | |-VarDecl 0x7fa333807388 <line:156:5, col:54> col:41 is_integer 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fa3338073e8 <col:54> '_Bool' false
| |   | | |-VarDecl 0x7fa333807410 <line:157:5, col:52> col:41 is_exact 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fa333807470 <col:52> '_Bool' false
| |   | | |-VarDecl 0x7fa3338074a0 <line:158:5, col:49> col:41 radix 'const int' static constexpr cinit
| |   | | | `-IntegerLiteral 0x7fa333807500 <col:49> 'int' 0
| |   | | |-CXXMethodDecl 0x7fa333807578 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:159:96> col:61 constexpr epsilon 'std::__1::__libcpp_numeric_limits::type (void) noexcept' static
| |   | | | |-CompoundStmt 0x7fa3338086e8 <col:81, col:96>
| |   | | | | `-ReturnStmt 0x7fa3338086d0 <col:82, col:94>
| |   | | | |   `-CXXUnresolvedConstructExpr 0x7fa3338086a8 <col:89, col:94> 'std::__1::__libcpp_numeric_limits::type':'_Tp'
| |   | | | |-AlwaysInlineAttr 0x7fa333807610 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | | `-VisibilityAttr 0x7fa333807658 <col:51, col:74> Hidden
| |   | | |-CXXMethodDecl 0x7fa3338076c0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:160:100> col:61 constexpr round_error 'std::__1::__libcpp_numeric_limits::type (void) noexcept' static
| |   | | | |-CompoundStmt 0x7fa333808758 <col:85, col:100>
| |   | | | | `-ReturnStmt 0x7fa333808740 <col:86, col:98>
| |   | | | |   `-CXXUnresolvedConstructExpr 0x7fa333808718 <col:93, col:98> 'std::__1::__libcpp_numeric_limits::type':'_Tp'
| |   | | | |-AlwaysInlineAttr 0x7fa333807758 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | | `-VisibilityAttr 0x7fa3338077a0 <col:51, col:74> Hidden
| |   | | |-VarDecl 0x7fa3338077c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:162:5, col:56> col:41 min_exponent 'const int' static constexpr cinit
| |   | | | `-IntegerLiteral 0x7fa333807828 <col:56> 'int' 0
| |   | | |-VarDecl 0x7fa333807860 <line:163:5, col:58> col:41 min_exponent10 'const int' static constexpr cinit
| |   | | | `-IntegerLiteral 0x7fa3338078c0 <col:58> 'int' 0
| |   | | |-VarDecl 0x7fa3338078f8 <line:164:5, col:56> col:41 max_exponent 'const int' static constexpr cinit
| |   | | | `-IntegerLiteral 0x7fa333807958 <col:56> 'int' 0
| |   | | |-VarDecl 0x7fa333807990 <line:165:5, col:58> col:41 max_exponent10 'const int' static constexpr cinit
| |   | | | `-IntegerLiteral 0x7fa3338079f0 <col:58> 'int' 0
| |   | | |-VarDecl 0x7fa333807a20 <line:167:5, col:56> col:41 has_infinity 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fa333807a80 <col:56> '_Bool' false
| |   | | |-VarDecl 0x7fa333807aa8 <line:168:5, col:57> col:41 has_quiet_NaN 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fa333807b08 <col:57> '_Bool' false
| |   | | |-VarDecl 0x7fa333807b30 <line:169:5, col:61> col:41 has_signaling_NaN 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fa333807b90 <col:61> '_Bool' false
| |   | | |-VarDecl 0x7fa333807bb8 <line:170:5, col:68> col:55 has_denorm 'const enum std::__1::float_denorm_style' static constexpr cinit
| |   | | | `-DeclRefExpr 0x7fa333807c18 <col:68> 'enum std::__1::float_denorm_style' EnumConstant 0x7fa3338bf2a8 'denorm_absent' 'enum std::__1::float_denorm_style'
| |   | | |-VarDecl 0x7fa333807c50 <line:171:5, col:59> col:41 has_denorm_loss 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fa333807cb0 <col:59> '_Bool' false
| |   | | |-CXXMethodDecl 0x7fa333807d20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:172:97> col:61 constexpr infinity 'std::__1::__libcpp_numeric_limits::type (void) noexcept' static
| |   | | | |-CompoundStmt 0x7fa3338087c8 <col:82, col:97>
| |   | | | | `-ReturnStmt 0x7fa3338087b0 <col:83, col:95>
| |   | | | |   `-CXXUnresolvedConstructExpr 0x7fa333808788 <col:90, col:95> 'std::__1::__libcpp_numeric_limits::type':'_Tp'
| |   | | | |-AlwaysInlineAttr 0x7fa333807db8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | | `-VisibilityAttr 0x7fa333807e00 <col:51, col:74> Hidden
| |   | | |-CXXMethodDecl 0x7fa333807e68 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:173:98> col:61 constexpr quiet_NaN 'std::__1::__libcpp_numeric_limits::type (void) noexcept' static
| |   | | | |-CompoundStmt 0x7fa333808838 <col:83, col:98>
| |   | | | | `-ReturnStmt 0x7fa333808820 <col:84, col:96>
| |   | | | |   `-CXXUnresolvedConstructExpr 0x7fa3338087f8 <col:91, col:96> 'std::__1::__libcpp_numeric_limits::type':'_Tp'
| |   | | | |-AlwaysInlineAttr 0x7fa333807f00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | | `-VisibilityAttr 0x7fa333807f48 <col:51, col:74> Hidden
| |   | | |-CXXMethodDecl 0x7fa333807fb0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:174:102> col:61 constexpr signaling_NaN 'std::__1::__libcpp_numeric_limits::type (void) noexcept' static
| |   | | | |-CompoundStmt 0x7fa3338088a8 <col:87, col:102>
| |   | | | | `-ReturnStmt 0x7fa333808890 <col:88, col:100>
| |   | | | |   `-CXXUnresolvedConstructExpr 0x7fa333808868 <col:95, col:100> 'std::__1::__libcpp_numeric_limits::type':'_Tp'
| |   | | | |-AlwaysInlineAttr 0x7fa333808048 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | | `-VisibilityAttr 0x7fa333808090 <col:51, col:74> Hidden
| |   | | |-CXXMethodDecl 0x7fa3338080f8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:175:99> col:61 constexpr denorm_min 'std::__1::__libcpp_numeric_limits::type (void) noexcept' static
| |   | | | |-CompoundStmt 0x7fa333808918 <col:84, col:99>
| |   | | | | `-ReturnStmt 0x7fa333808900 <col:85, col:97>
| |   | | | |   `-CXXUnresolvedConstructExpr 0x7fa3338088d8 <col:92, col:97> 'std::__1::__libcpp_numeric_limits::type':'_Tp'
| |   | | | |-AlwaysInlineAttr 0x7fa333808190 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | | `-VisibilityAttr 0x7fa3338081d8 <col:51, col:74> Hidden
| |   | | |-VarDecl 0x7fa3338081f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:177:5, col:53> col:41 is_iec559 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fa333808258 <col:53> '_Bool' false
| |   | | |-VarDecl 0x7fa333808280 <line:178:5, col:54> col:41 is_bounded 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fa3338082e0 <col:54> '_Bool' false
| |   | | |-VarDecl 0x7fa333808308 <line:179:5, col:53> col:41 is_modulo 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fa333808368 <col:53> '_Bool' false
| |   | | |-VarDecl 0x7fa333808390 <line:181:5, col:49> col:41 traps 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fa3338083f0 <col:49> '_Bool' false
| |   | | |-VarDecl 0x7fa333808418 <line:182:5, col:59> col:41 tinyness_before 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fa333808478 <col:59> '_Bool' false
| |   | | `-VarDecl 0x7fa3338084a0 <line:183:5, col:68> col:54 round_style 'const enum std::__1::float_round_style' static constexpr cinit
| |   | |   `-DeclRefExpr 0x7fa333808500 <col:68> 'enum std::__1::float_round_style' EnumConstant 0x7fa3338befc8 'round_toward_zero' 'enum std::__1::float_round_style'
| |   | |-ClassTemplateSpecialization 0x7fa33380cde0 '__libcpp_numeric_limits'
| |   | |-ClassTemplateSpecialization 0x7fa332871680 '__libcpp_numeric_limits'
| |   | |-ClassTemplateSpecialization 0x7fa332874760 '__libcpp_numeric_limits'
| |   | `-ClassTemplateSpecialization 0x7fa332877890 '__libcpp_numeric_limits'
| |   |-ClassTemplateDecl 0x7fa333809380 <line:186:1, line:190:1> line:187:8 __libcpp_compute_min
| |   | |-TemplateTypeParmDecl 0x7fa333808938 <line:186:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fa333809200 <col:22, col:26> col:26 referenced 'int' depth 0 index 1 __digits
| |   | |-NonTypeTemplateParmDecl 0x7fa333809268 <col:36, col:41> col:41 '_Bool' depth 0 index 2 _IsSigned
| |   | `-CXXRecordDecl 0x7fa3338092e8 <line:187:1, line:190:1> line:187:8 struct __libcpp_compute_min definition
| |   |   |-CXXRecordDecl 0x7fa3338096b0 <col:1, col:8> col:8 implicit struct __libcpp_compute_min
| |   |   `-VarDecl 0x7fa333809758 <line:189:5, col:70> col:40 value 'const _Tp' static constexpr cinit
| |   |     `-CXXUnresolvedConstructExpr 0x7fa333809878 <col:48, col:70> '_Tp'
| |   |       `-BinaryOperator 0x7fa333809850 <col:52, col:62> '<dependent type>' '<<'
| |   |         |-CXXUnresolvedConstructExpr 0x7fa3338097f8 <col:52, col:57> '_Tp'
| |   |         | `-IntegerLiteral 0x7fa3338097d8 <col:56> 'int' 1
| |   |         `-DeclRefExpr 0x7fa333809828 <col:62> 'int' NonTypeTemplateParm 0x7fa333809200 '__digits' 'int'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa333809bb8 <line:192:1, line:196:1> line:193:8 struct __libcpp_compute_min definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fa3338099d8 <col:34> 'int' NonTypeTemplateParm 0x7fa333809950 '__digits' 'int'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fa3338098c8 <line:192:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fa333809950 <col:22, col:26> col:26 referenced 'int' depth 0 index 1 __digits
| |   | |-CXXRecordDecl 0x7fa333809e90 <line:193:1, col:8> col:8 implicit struct __libcpp_compute_min
| |   | `-VarDecl 0x7fa333809f38 <line:195:5, col:53> col:40 value 'const _Tp' static constexpr cinit
| |   |   `-CXXUnresolvedConstructExpr 0x7fa333809fc8 <col:48, col:53> '_Tp'
| |   |     `-IntegerLiteral 0x7fa333809fa8 <col:52> 'int' 0
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa33380a200 <line:198:1, line:249:1> line:199:7 class __libcpp_numeric_limits definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fa33380a018 <line:198:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fa33380a490 <line:199:1, col:7> col:7 implicit class __libcpp_numeric_limits
| |   | |-AccessSpecDecl 0x7fa33380a528 <line:201:1, col:10> col:1 protected
| |   | |-TypedefDecl 0x7fa33380a560 <line:202:5, col:17> col:17 referenced type '_Tp'
| |   | | `-TemplateTypeParmType 0x7fa33380a060 '_Tp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fa33380a018 '_Tp'
| |   | |-VarDecl 0x7fa33380a5c8 <line:204:5, col:58> col:41 is_specialized 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fa33380a628 <col:58> '_Bool' true
| |   | |-VarDecl 0x7fa33380a650 <line:206:5, col:70> col:41 referenced is_signed 'const _Bool' static constexpr cinit
| |   | | `-BinaryOperator 0x7fa33380a7b0 <col:53, col:70> '<dependent type>' '<'
| |   | |   |-CXXUnresolvedConstructExpr 0x7fa33380a720 <col:53, col:60> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | |   | `-UnaryOperator 0x7fa33380a700 <col:58, col:59> 'int' prefix '-'
| |   | |   |   `-IntegerLiteral 0x7fa33380a6e0 <col:59> 'int' 1
| |   | |   `-CXXUnresolvedConstructExpr 0x7fa33380a780 <col:64, col:70> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | |     `-IntegerLiteral 0x7fa33380a760 <col:69> 'int' 0
| |   | |-VarDecl 0x7fa33380a7f0 <line:207:5, col:106> col:41 referenced digits 'const int' static constexpr cinit
| |   | | `-CXXStaticCastExpr 0x7fa33380a990 <col:50, col:106> 'int' static_cast<int> <NoOp>
| |   | |   `-ImplicitCastExpr 0x7fa33380a978 <col:67, col:97> 'int' <IntegralCast>
| |   | |     `-BinaryOperator 0x7fa33380a938 <col:67, col:97> 'unsigned long' '-'
| |   | |       |-BinaryOperator 0x7fa33380a8b8 <col:67, <built-in>:66:22> 'unsigned long' '*'
| |   | |       | |-UnaryExprOrTypeTraitExpr 0x7fa33380a860 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:207:67, col:78> 'unsigned long' sizeof 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | |       | `-ImplicitCastExpr 0x7fa33380a8a0 <<built-in>:66:22> 'unsigned long' <IntegralCast>
| |   | |       |   `-IntegerLiteral 0x7fa33380a880 <col:22> 'int' 8
| |   | |       `-ImplicitCastExpr 0x7fa33380a920 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:207:97> 'unsigned long' <IntegralCast>
| |   | |         `-ImplicitCastExpr 0x7fa33380a908 <col:97> '_Bool' <LValueToRValue>
| |   | |           `-DeclRefExpr 0x7fa33380a8e0 <col:97> 'const _Bool' lvalue Var 0x7fa33380a650 'is_signed' 'const _Bool'
| |   | |-VarDecl 0x7fa33380a9d8 <line:208:5, col:65> col:41 digits10 'const int' static constexpr cinit
| |   | | `-BinaryOperator 0x7fa33380aae0 <col:52, col:65> 'int' '/'
| |   | |   |-BinaryOperator 0x7fa33380aa98 <col:52, col:61> 'int' '*'
| |   | |   | |-ImplicitCastExpr 0x7fa33380aa80 <col:52> 'int' <LValueToRValue>
| |   | |   | | `-DeclRefExpr 0x7fa33380aa38 <col:52> 'const int' lvalue Var 0x7fa33380a7f0 'digits' 'const int'
| |   | |   | `-IntegerLiteral 0x7fa33380aa60 <col:61> 'int' 3
| |   | |   `-IntegerLiteral 0x7fa33380aac0 <col:65> 'int' 10
| |   | |-VarDecl 0x7fa33380ab20 <line:209:5, col:56> col:41 max_digits10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fa33380ab80 <col:56> 'int' 0
| |   | |-VarDecl 0x7fa33380abb0 <line:210:5, col:96> col:41 referenced __min 'const std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'const _Tp' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fa33380ae38 <col:49, col:96> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fa33380ae88 <line:211:5, col:93> col:41 referenced __max 'const std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'const _Tp' static constexpr cinit
| |   | | `-ConditionalOperator 0x7fa33380b0b8 <col:49, col:93> '<dependent type>'
| |   | |   |-ImplicitCastExpr 0x7fa33380b0a0 <col:49> '_Bool' <LValueToRValue>
| |   | |   | `-DeclRefExpr 0x7fa33380aee8 <col:49> 'const _Bool' lvalue Var 0x7fa33380a650 'is_signed' 'const _Bool'
| |   | |   |-CXXUnresolvedConstructExpr 0x7fa33380aff0 <col:61, col:82> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | |   | `-BinaryOperator 0x7fa33380afc8 <col:66, col:77> '<dependent type>' '^'
| |   | |   |   |-CXXUnresolvedConstructExpr 0x7fa33380af70 <col:66, col:73> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | |   |   | `-UnaryOperator 0x7fa33380af50 <col:71, col:72> 'int' prefix '~'
| |   | |   |   |   `-IntegerLiteral 0x7fa33380af30 <col:72> 'int' 0
| |   | |   |   `-DeclRefExpr 0x7fa33380afa0 <col:77> 'const std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'const _Tp' lvalue Var 0x7fa33380abb0 '__min' 'const std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'const _Tp'
| |   | |   `-CXXUnresolvedConstructExpr 0x7fa33380b070 <col:86, col:93> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | |     `-UnaryOperator 0x7fa33380b050 <col:91, col:92> 'int' prefix '~'
| |   | |       `-IntegerLiteral 0x7fa33380b030 <col:92> 'int' 0
| |   | |-CXXMethodDecl 0x7fa33380b200 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:212:91> col:61 referenced constexpr min 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fa33380c910 <col:77, col:91>
| |   | | | `-ReturnStmt 0x7fa33380c8f8 <col:78, col:85>
| |   | | |   `-DeclRefExpr 0x7fa33380c8d0 <col:85> 'const std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'const _Tp' lvalue Var 0x7fa33380abb0 '__min' 'const std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'const _Tp'
| |   | | |-AlwaysInlineAttr 0x7fa33380b298 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fa33380b2e0 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fa33380b348 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:213:91> col:61 constexpr max 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fa33380c970 <col:77, col:91>
| |   | | | `-ReturnStmt 0x7fa33380c958 <col:78, col:85>
| |   | | |   `-DeclRefExpr 0x7fa33380c930 <col:85> 'const std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'const _Tp' lvalue Var 0x7fa33380ae88 '__max' 'const std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'const _Tp'
| |   | | |-AlwaysInlineAttr 0x7fa33380b3e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fa33380b428 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fa33380b490 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:214:94> col:61 constexpr lowest 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fa33380c9f8 <col:80, col:94>
| |   | | | `-ReturnStmt 0x7fa33380c9e0 <col:81, col:92>
| |   | | |   `-CallExpr 0x7fa33380c9b8 <col:88, col:92> '<dependent type>'
| |   | | |     `-DeclRefExpr 0x7fa33380c990 <col:88> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept' lvalue CXXMethod 0x7fa33380b200 'min' 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept'
| |   | | |-AlwaysInlineAttr 0x7fa33380b528 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fa33380b570 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fa33380b590 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:216:5, col:54> col:41 is_integer 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fa33380b5f0 <col:54> '_Bool' true
| |   | |-VarDecl 0x7fa33380b618 <line:217:5, col:52> col:41 is_exact 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fa33380b678 <col:52> '_Bool' true
| |   | |-VarDecl 0x7fa33380b6a8 <line:218:5, col:49> col:41 radix 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fa33380b708 <col:49> 'int' 2
| |   | |-CXXMethodDecl 0x7fa33380b780 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:219:97> col:61 constexpr epsilon 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fa33380ca90 <col:81, col:97>
| |   | | | `-ReturnStmt 0x7fa33380ca78 <col:82, col:95>
| |   | | |   `-CXXUnresolvedConstructExpr 0x7fa33380ca48 <col:89, col:95> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | | |     `-IntegerLiteral 0x7fa33380ca28 <col:94> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7fa33380b818 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fa33380b860 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fa33380b8c8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:220:101> col:61 constexpr round_error 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fa33380cb28 <col:85, col:101>
| |   | | | `-ReturnStmt 0x7fa33380cb10 <col:86, col:99>
| |   | | |   `-CXXUnresolvedConstructExpr 0x7fa33380cae0 <col:93, col:99> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | | |     `-IntegerLiteral 0x7fa33380cac0 <col:98> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7fa33380b960 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fa33380b9a8 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fa33380b9d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:222:5, col:56> col:41 min_exponent 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fa33380ba30 <col:56> 'int' 0
| |   | |-VarDecl 0x7fa33380ba68 <line:223:5, col:58> col:41 min_exponent10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fa33380bac8 <col:58> 'int' 0
| |   | |-VarDecl 0x7fa33380bb00 <line:224:5, col:56> col:41 max_exponent 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fa33380bb60 <col:56> 'int' 0
| |   | |-VarDecl 0x7fa33380bb98 <line:225:5, col:58> col:41 max_exponent10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fa33380bbf8 <col:58> 'int' 0
| |   | |-VarDecl 0x7fa33380bc28 <line:227:5, col:56> col:41 has_infinity 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fa33380bc88 <col:56> '_Bool' false
| |   | |-VarDecl 0x7fa33380bcb0 <line:228:5, col:57> col:41 has_quiet_NaN 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fa33380bd10 <col:57> '_Bool' false
| |   | |-VarDecl 0x7fa33380bd38 <line:229:5, col:61> col:41 has_signaling_NaN 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fa33380bd98 <col:61> '_Bool' false
| |   | |-VarDecl 0x7fa33380bdc0 <line:230:5, col:68> col:55 has_denorm 'const enum std::__1::float_denorm_style' static constexpr cinit
| |   | | `-DeclRefExpr 0x7fa33380be20 <col:68> 'enum std::__1::float_denorm_style' EnumConstant 0x7fa3338bf2a8 'denorm_absent' 'enum std::__1::float_denorm_style'
| |   | |-VarDecl 0x7fa33380be58 <line:231:5, col:59> col:41 has_denorm_loss 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fa33380beb8 <col:59> '_Bool' false
| |   | |-CXXMethodDecl 0x7fa33380bf28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:232:98> col:61 constexpr infinity 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fa33380cbc0 <col:82, col:98>
| |   | | | `-ReturnStmt 0x7fa33380cba8 <col:83, col:96>
| |   | | |   `-CXXUnresolvedConstructExpr 0x7fa33380cb78 <col:90, col:96> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | | |     `-IntegerLiteral 0x7fa33380cb58 <col:95> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7fa33380bfc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fa33380c008 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fa33380c070 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:233:99> col:61 constexpr quiet_NaN 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fa33380cc58 <col:83, col:99>
| |   | | | `-ReturnStmt 0x7fa33380cc40 <col:84, col:97>
| |   | | |   `-CXXUnresolvedConstructExpr 0x7fa33380cc10 <col:91, col:97> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | | |     `-IntegerLiteral 0x7fa33380cbf0 <col:96> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7fa33380c108 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fa33380c150 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fa33380c1b8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:234:103> col:61 constexpr signaling_NaN 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fa33380ccf0 <col:87, col:103>
| |   | | | `-ReturnStmt 0x7fa33380ccd8 <col:88, col:101>
| |   | | |   `-CXXUnresolvedConstructExpr 0x7fa33380cca8 <col:95, col:101> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | | |     `-IntegerLiteral 0x7fa33380cc88 <col:100> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7fa33380c250 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fa33380c298 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fa33380c300 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:235:100> col:61 constexpr denorm_min 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fa33380cd88 <col:84, col:100>
| |   | | | `-ReturnStmt 0x7fa33380cd70 <col:85, col:98>
| |   | | |   `-CXXUnresolvedConstructExpr 0x7fa33380cd40 <col:92, col:98> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | | |     `-IntegerLiteral 0x7fa33380cd20 <col:97> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7fa33380c398 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fa33380c3e0 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fa33380c400 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:237:5, col:53> col:41 is_iec559 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fa33380c460 <col:53> '_Bool' false
| |   | |-VarDecl 0x7fa33380c488 <line:238:5, col:54> col:41 is_bounded 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fa33380c4e8 <col:54> '_Bool' true
| |   | |-VarDecl 0x7fa33380c510 <line:239:5, col:77> col:41 is_modulo 'const _Bool' static constexpr cinit
| |   | | `-UnaryOperator 0x7fa33380c6e8 <col:53, col:77> '<dependent type>' prefix '!'
| |   | |   `-DependentScopeDeclRefExpr 0x7fa33380c6a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:239:77> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fa33380c718 <line:243:5, col:49> col:41 traps 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fa33380c778 <col:49> '_Bool' true
| |   | |-VarDecl 0x7fa33380c7a0 <line:247:5, col:59> col:41 tinyness_before 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fa33380c800 <col:59> '_Bool' false
| |   | `-VarDecl 0x7fa33380c828 <line:248:5, col:68> col:54 round_style 'const enum std::__1::float_round_style' static constexpr cinit
| |   |   `-DeclRefExpr 0x7fa33380c888 <col:68> 'enum std::__1::float_round_style' EnumConstant 0x7fa3338befc8 'round_toward_zero' 'enum std::__1::float_round_style'
| |   |-ClassTemplateSpecializationDecl 0x7fa33380cde0 <line:251:1, line:297:1> line:252:7 class __libcpp_numeric_limits definition
| |   | |-TemplateArgument type '_Bool'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fa33380d050 <col:1, col:7> col:7 implicit class __libcpp_numeric_limits
| |   | |-AccessSpecDecl 0x7fa33380d0e8 <line:254:1, col:10> col:1 protected
| |   | |-TypedefDecl 0x7fa33380d120 <line:255:5, col:18> col:18 referenced type '_Bool'
| |   | | `-BuiltinType 0x7fa332832740 '_Bool'
| |   | |-VarDecl 0x7fa33380d188 <line:257:5, col:58> col:41 is_specialized 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fa33380d1e8 <col:58> '_Bool' true
| |   | |-VarDecl 0x7fa33286ee68 <line:259:5, col:53> col:41 is_signed 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fa33286eec8 <col:53> '_Bool' false
| |   | |-VarDecl 0x7fa33286ef50 <line:260:5, col:50> col:41 digits 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fa33286efb0 <col:50> 'int' 1
| |   | |-VarDecl 0x7fa33286f040 <line:261:5, col:52> col:41 digits10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fa33286f0a0 <col:52> 'int' 0
| |   | |-VarDecl 0x7fa33286f130 <line:262:5, col:56> col:41 max_digits10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fa33286f190 <col:56> 'int' 0
| |   | |-VarDecl 0x7fa33286f240 <line:263:5, col:49> col:41 referenced __min 'const std::__1::__libcpp_numeric_limits<_Bool, true>::type':'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fa33286f2a0 <col:49> '_Bool' false
| |   | |-VarDecl 0x7fa33286f320 <line:264:5, col:49> col:41 referenced __max 'const std::__1::__libcpp_numeric_limits<_Bool, true>::type':'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fa33286f380 <col:49> '_Bool' true
| |   | |-CXXMethodDecl 0x7fa33286f4d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:265:91> col:61 used constexpr min 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fa3328710b8 <col:77, col:91>
| |   | | | `-ReturnStmt 0x7fa3328710a0 <col:78, col:85>
| |   | | |   `-ImplicitCastExpr 0x7fa332871088 <col:85> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type':'_Bool' <LValueToRValue>
| |   | | |     `-DeclRefExpr 0x7fa332871060 <col:85> 'const std::__1::__libcpp_numeric_limits<_Bool, true>::type':'const _Bool' lvalue Var 0x7fa33286f240 '__min' 'const std::__1::__libcpp_numeric_limits<_Bool, true>::type':'const _Bool'
| |   | | |-AlwaysInlineAttr 0x7fa33286f570 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fa33286f5b8 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fa33286f620 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:266:91> col:61 constexpr max 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fa332871130 <col:77, col:91>
| |   | | | `-ReturnStmt 0x7fa332871118 <col:78, col:85>
| |   | | |   `-ImplicitCastExpr 0x7fa332871100 <col:85> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type':'_Bool' <LValueToRValue>
| |   | | |     `-DeclRefExpr 0x7fa3328710d8 <col:85> 'const std::__1::__libcpp_numeric_limits<_Bool, true>::type':'const _Bool' lvalue Var 0x7fa33286f320 '__max' 'const std::__1::__libcpp_numeric_limits<_Bool, true>::type':'const _Bool'
| |   | | |-AlwaysInlineAttr 0x7fa33286f6b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fa33286f700 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fa33286f768 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:267:94> col:61 constexpr lowest 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fa332871230 <col:80, col:94>
| |   | | | `-ReturnStmt 0x7fa332871218 <col:81, col:92>
| |   | | |   `-CallExpr 0x7fa3328711f0 <col:88, col:92> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type':'_Bool'
| |   | | |     `-ImplicitCastExpr 0x7fa3328711d8 <col:88> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (*)(void) noexcept' <FunctionToPointerDecay>
| |   | | |       `-DeclRefExpr 0x7fa332871150 <col:88> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept' lvalue CXXMethod 0x7fa33286f4d8 'min' 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept'
| |   | | |-AlwaysInlineAttr 0x7fa33286f800 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fa33286f848 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fa33286f868 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:269:5, col:54> col:41 is_integer 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fa33286f8c8 <col:54> '_Bool' true
| |   | |-VarDecl 0x7fa33286f948 <line:270:5, col:52> col:41 is_exact 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fa33286f9a8 <col:52> '_Bool' true
| |   | |-VarDecl 0x7fa33286fa30 <line:271:5, col:49> col:41 radix 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fa33286fa90 <col:49> 'int' 2
| |   | |-CXXMethodDecl 0x7fa33286fb60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:272:97> col:61 constexpr epsilon 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fa3328712d8 <col:81, col:97>
| |   | | | `-ReturnStmt 0x7fa3328712c0 <col:82, col:95>
| |   | | |   `-CXXFunctionalCastExpr 0x7fa332871298 <col:89, col:95> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type':'_Bool' functional cast to std::__1::__libcpp_numeric_limits<_Bool, true>::type <NoOp>
| |   | | |     `-ImplicitCastExpr 0x7fa332871280 <col:94> '_Bool' <IntegralToBoolean>
| |   | | |       `-IntegerLiteral 0x7fa332871260 <col:94> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7fa33286fbf8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fa33286fc40 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fa33286fca8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:273:101> col:61 constexpr round_error 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fa332871380 <col:85, col:101>
| |   | | | `-ReturnStmt 0x7fa332871368 <col:86, col:99>
| |   | | |   `-CXXFunctionalCastExpr 0x7fa332871340 <col:93, col:99> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type':'_Bool' functional cast to std::__1::__libcpp_numeric_limits<_Bool, true>::type <NoOp>
| |   | | |     `-ImplicitCastExpr 0x7fa332871328 <col:98> '_Bool' <IntegralToBoolean>
| |   | | |       `-IntegerLiteral 0x7fa332871308 <col:98> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7fa33286fd40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fa33286fd88 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fa33286fdb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:275:5, col:56> col:41 min_exponent 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fa33286fe10 <col:56> 'int' 0
| |   | |-VarDecl 0x7fa33286fea0 <line:276:5, col:58> col:41 min_exponent10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fa33286ff00 <col:58> 'int' 0
| |   | |-VarDecl 0x7fa33286ff90 <line:277:5, col:56> col:41 max_exponent 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fa33286fff0 <col:56> 'int' 0
| |   | |-VarDecl 0x7fa332870080 <line:278:5, col:58> col:41 max_exponent10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fa3328700e0 <col:58> 'int' 0
| |   | |-VarDecl 0x7fa332870168 <line:280:5, col:56> col:41 has_infinity 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fa3328701c8 <col:56> '_Bool' false
| |   | |-VarDecl 0x7fa332870248 <line:281:5, col:57> col:41 has_quiet_NaN 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fa3328702a8 <col:57> '_Bool' false
| |   | |-VarDecl 0x7fa332870328 <line:282:5, col:61> col:41 has_signaling_NaN 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fa332870388 <col:61> '_Bool' false
| |   | |-VarDecl 0x7fa332870408 <line:283:5, col:68> col:55 has_denorm 'const enum std::__1::float_denorm_style' static constexpr cinit
| |   | | `-DeclRefExpr 0x7fa332870468 <col:68> 'enum std::__1::float_denorm_style' EnumConstant 0x7fa3338bf2a8 'denorm_absent' 'enum std::__1::float_denorm_style'
| |   | |-VarDecl 0x7fa3328704f8 <line:284:5, col:59> col:41 has_denorm_loss 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fa332870558 <col:59> '_Bool' false
| |   | |-CXXMethodDecl 0x7fa332870620 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:285:98> col:61 constexpr infinity 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fa332871428 <col:82, col:98>
| |   | | | `-ReturnStmt 0x7fa332871410 <col:83, col:96>
| |   | | |   `-CXXFunctionalCastExpr 0x7fa3328713e8 <col:90, col:96> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type':'_Bool' functional cast to std::__1::__libcpp_numeric_limits<_Bool, true>::type <NoOp>
| |   | | |     `-ImplicitCastExpr 0x7fa3328713d0 <col:95> '_Bool' <IntegralToBoolean>
| |   | | |       `-IntegerLiteral 0x7fa3328713b0 <col:95> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7fa3328706b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fa332870700 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fa332870768 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:286:99> col:61 constexpr quiet_NaN 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fa3328714d0 <col:83, col:99>
| |   | | | `-ReturnStmt 0x7fa3328714b8 <col:84, col:97>
| |   | | |   `-CXXFunctionalCastExpr 0x7fa332871490 <col:91, col:97> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type':'_Bool' functional cast to std::__1::__libcpp_numeric_limits<_Bool, true>::type <NoOp>
| |   | | |     `-ImplicitCastExpr 0x7fa332871478 <col:96> '_Bool' <IntegralToBoolean>
| |   | | |       `-IntegerLiteral 0x7fa332871458 <col:96> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7fa332870800 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fa332870848 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fa3328708b0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:287:103> col:61 constexpr signaling_NaN 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fa332871578 <col:87, col:103>
| |   | | | `-ReturnStmt 0x7fa332871560 <col:88, col:101>
| |   | | |   `-CXXFunctionalCastExpr 0x7fa332871538 <col:95, col:101> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type':'_Bool' functional cast to std::__1::__libcpp_numeric_limits<_Bool, true>::type <NoOp>
| |   | | |     `-ImplicitCastExpr 0x7fa332871520 <col:100> '_Bool' <IntegralToBoolean>
| |   | | |       `-IntegerLiteral 0x7fa332871500 <col:100> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7fa332870948 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fa332870990 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fa3328709f8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:288:100> col:61 constexpr denorm_min 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fa332871620 <col:84, col:100>
| |   | | | `-ReturnStmt 0x7fa332871608 <col:85, col:98>
| |   | | |   `-CXXFunctionalCastExpr 0x7fa3328715e0 <col:92, col:98> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type':'_Bool' functional cast to std::__1::__libcpp_numeric_limits<_Bool, true>::type <NoOp>
| |   | | |     `-ImplicitCastExpr 0x7fa3328715c8 <col:97> '_Bool' <IntegralToBoolean>
| |   | | |       `-IntegerLiteral 0x7fa3328715a8 <col:97> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7fa332870a90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fa332870ad8 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fa332870af8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:290:5, col:53> col:41 is_iec559 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fa332870b58 <col:53> '_Bool' false
| |   | |-VarDecl 0x7fa332870bd8 <line:291:5, col:54> col:41 is_bounded 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fa332870c38 <col:54> '_Bool' true
| |   | |-VarDecl 0x7fa332870cb8 <line:292:5, col:53> col:41 is_modulo 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fa332870d18 <col:53> '_Bool' false
| |   | |-VarDecl 0x7fa332870d98 <line:294:5, col:49> col:41 traps 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fa332870e00 <col:49> '_Bool' false
| |   | |-VarDecl 0x7fa332870e80 <line:295:5, col:59> col:41 tinyness_before 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fa332870ee0 <col:59> '_Bool' false
| |   | `-VarDecl 0x7fa332870f60 <line:296:5, col:68> col:54 round_style 'const enum std::__1::float_round_style' static constexpr cinit
| |   |   `-DeclRefExpr 0x7fa332870fc0 <col:68> 'enum std::__1::float_round_style' EnumConstant 0x7fa3338befc8 'round_toward_zero' 'enum std::__1::float_round_style'
| |   |-ClassTemplateSpecializationDecl 0x7fa332871680 <line:299:1, line:343:1> line:300:7 class __libcpp_numeric_limits definition
| |   | |-TemplateArgument type 'float'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fa3328718f0 <col:1, col:7> col:7 implicit class __libcpp_numeric_limits
| |   | |-AccessSpecDecl 0x7fa332871988 <line:302:1, col:10> col:1 protected
| |   | |-TypedefDecl 0x7fa3328719c8 <line:303:5, col:19> col:19 referenced type 'float'
| |   | | `-BuiltinType 0x7fa3328328c0 'float'
| |   | |-VarDecl 0x7fa332871a30 <line:305:5, col:58> col:41 is_specialized 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fa332871a90 <col:58> '_Bool' true
| |   | |-VarDecl 0x7fa332871b10 <line:307:5, col:53> col:41 is_signed 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fa332871b70 <col:53> '_Bool' true
| |   | |-VarDecl 0x7fa332871bf8 <line:308:5, <built-in>:139:26> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:308:41 referenced digits 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fa332871c58 <<built-in>:139:26> 'int' 24
| |   | |-VarDecl 0x7fa332871ce8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:309:5, <built-in>:134:21> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:309:41 digits10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fa332871d48 <<built-in>:134:21> 'int' 6
| |   | |-VarDecl 0x7fa332871dd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:310:5, col:76> col:41 max_digits10 'const int' static constexpr cinit
| |   | | `-ImplicitCastExpr 0x7fa332871fa0 <col:56, col:76> 'const int' <IntegralCast>
| |   | |   `-BinaryOperator 0x7fa332871f78 <col:56, col:76> 'long' '+'
| |   | |     |-ImplicitCastExpr 0x7fa332871f60 <col:56> 'long' <IntegralCast>
| |   | |     | `-IntegerLiteral 0x7fa332871e38 <col:56> 'int' 2
| |   | |     `-BinaryOperator 0x7fa332871f38 <col:58, col:76> 'long' '/'
| |   | |       |-ParenExpr 0x7fa332871ef8 <col:58, col:74> 'long'
| |   | |       | `-BinaryOperator 0x7fa332871ed0 <col:59, col:68> 'long' '*'
| |   | |       |   |-ImplicitCastExpr 0x7fa332871eb8 <col:59> 'long' <IntegralCast>
| |   | |       |   | `-ImplicitCastExpr 0x7fa332871ea0 <col:59> 'int' <LValueToRValue>
| |   | |       |   |   `-DeclRefExpr 0x7fa332871e58 <col:59> 'const int' lvalue Var 0x7fa332871bf8 'digits' 'const int'
| |   | |       |   `-IntegerLiteral 0x7fa332871e80 <col:68> 'long' 30103
| |   | |       `-IntegerLiteral 0x7fa332871f18 <col:76> 'long' 100000
| |   | |-CXXMethodDecl 0x7fa3328720e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:311:97> col:61 constexpr min 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fa332873d28 <col:77, col:97>
| |   | | | `-ReturnStmt 0x7fa332873d10 <col:78, <built-in>:145:21>
| |   | | |   `-FloatingLiteral 0x7fa332873cf0 <col:21> 'float' 1.175494e-38
| |   | | |-AlwaysInlineAttr 0x7fa332872180 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fa3328721c8 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fa332872230 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:312:97> col:61 used constexpr max 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fa332873d80 <col:77, col:97>
| |   | | | `-ReturnStmt 0x7fa332873d68 <col:78, <built-in>:142:21>
| |   | | |   `-FloatingLiteral 0x7fa332873d48 <col:21> 'float' 3.402823e+38
| |   | | |-AlwaysInlineAttr 0x7fa3328722c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fa332872310 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fa332872378 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:313:95> col:61 constexpr lowest 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fa332873e70 <col:80, col:95>
| |   | | | `-ReturnStmt 0x7fa332873e58 <col:81, col:93>
| |   | | |   `-UnaryOperator 0x7fa332873e38 <col:88, col:93> 'std::__1::__libcpp_numeric_limits<float, true>::type':'float' prefix '-'
| |   | | |     `-CallExpr 0x7fa332873e10 <col:89, col:93> 'std::__1::__libcpp_numeric_limits<float, true>::type':'float'
| |   | | |       `-ImplicitCastExpr 0x7fa332873df8 <col:89> 'std::__1::__libcpp_numeric_limits<float, true>::type (*)(void) noexcept' <FunctionToPointerDecay>
| |   | | |         `-DeclRefExpr 0x7fa332873da0 <col:89> 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept' lvalue CXXMethod 0x7fa332872230 'max' 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept'
| |   | | |-AlwaysInlineAttr 0x7fa332872410 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fa332872458 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fa332872478 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:315:5, col:54> col:41 is_integer 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fa3328724d8 <col:54> '_Bool' false
| |   | |-VarDecl 0x7fa332872558 <line:316:5, col:52> col:41 is_exact 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fa3328725b8 <col:52> '_Bool' false
| |   | |-VarDecl 0x7fa332872640 <line:317:5, <built-in>:332:23> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:317:41 radix 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fa3328726a0 <<built-in>:332:23> 'int' 2
| |   | |-CXXMethodDecl 0x7fa332872770 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:318:105> col:61 constexpr epsilon 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fa332873ec8 <col:81, col:105>
| |   | | | `-ReturnStmt 0x7fa332873eb0 <col:82, <built-in>:136:25>
| |   | | |   `-FloatingLiteral 0x7fa332873e90 <col:25> 'float' 1.192093e-07
| |   | | |-AlwaysInlineAttr 0x7fa332872808 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fa332872850 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fa3328728b8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:319:98> col:61 constexpr round_error 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fa332873f20 <col:85, col:98>
| |   | | | `-ReturnStmt 0x7fa332873f08 <col:86, col:93>
| |   | | |   `-FloatingLiteral 0x7fa332873ee8 <col:93> 'float' 5.000000e-01
| |   | | |-AlwaysInlineAttr 0x7fa332872950 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fa332872998 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fa3328729c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:321:5, <built-in>:144:30> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:321:41 min_exponent 'const int' static constexpr cinit
| |   | | `-ParenExpr 0x7fa332872a60 <<built-in>:144:25, col:30> 'int'
| |   | |   `-UnaryOperator 0x7fa332872a40 <col:26, col:27> 'int' prefix '-'
| |   | |     `-IntegerLiteral 0x7fa332872a20 <col:27> 'int' 125
| |   | |-VarDecl 0x7fa332872af0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:322:5, <built-in>:143:32> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:322:41 min_exponent10 'const int' static constexpr cinit
| |   | | `-ParenExpr 0x7fa332872b90 <<built-in>:143:28, col:32> 'int'
| |   | |   `-UnaryOperator 0x7fa332872b70 <col:29, col:30> 'int' prefix '-'
| |   | |     `-IntegerLiteral 0x7fa332872b50 <col:30> 'int' 37
| |   | |-VarDecl 0x7fa332872c20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:323:5, <built-in>:141:25> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:323:41 max_exponent 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fa332872c80 <<built-in>:141:25> 'int' 128
| |   | |-VarDecl 0x7fa332872d10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:324:5, <built-in>:140:28> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:324:41 max_exponent10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fa332872d70 <<built-in>:140:28> 'int' 38
| |   | |-VarDecl 0x7fa332872e00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:326:5, col:56> col:41 has_infinity 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fa332872e60 <col:56> '_Bool' true
| |   | |-VarDecl 0x7fa332872ee0 <line:327:5, col:57> col:41 has_quiet_NaN 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fa332872f40 <col:57> '_Bool' true
| |   | |-VarDecl 0x7fa332872fc0 <line:328:5, col:61> col:41 has_signaling_NaN 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fa332873020 <col:61> '_Bool' true
| |   | |-VarDecl 0x7fa3328730a0 <line:329:5, col:68> col:55 has_denorm 'const enum std::__1::float_denorm_style' static constexpr cinit
| |   | | `-DeclRefExpr 0x7fa332873100 <col:68> 'enum std::__1::float_denorm_style' EnumConstant 0x7fa3338bf310 'denorm_present' 'enum std::__1::float_denorm_style'
| |   | |-VarDecl 0x7fa332873190 <line:330:5, col:59> col:41 has_denorm_loss 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fa3328731f0 <col:59> '_Bool' false
| |   | |-CXXMethodDecl 0x7fa3328732b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:331:112> col:61 constexpr infinity 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fa332874100 <col:82, col:112>
| |   | | | `-ReturnStmt 0x7fa3328740e8 <col:83, col:110>
| |   | | |   `-CallExpr 0x7fa3328740c0 <col:90, col:110> 'float'
| |   | | |     `-ImplicitCastExpr 0x7fa3328740a8 <col:90> 'float (*)(void) noexcept' <BuiltinFnToFnPtr>
| |   | | |       `-DeclRefExpr 0x7fa332874080 <col:90> '<builtin fn type>' Function 0x7fa332873f90 '__builtin_huge_valf' 'float (void) noexcept'
| |   | | |-AlwaysInlineAttr 0x7fa332873350 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fa332873398 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fa332873400 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:332:110> col:61 constexpr quiet_NaN 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fa332874400 <col:83, col:110>
| |   | | | `-ReturnStmt 0x7fa3328743e8 <col:84, col:108>
| |   | | |   `-CallExpr 0x7fa3328743a0 <col:91, col:108> 'float'
| |   | | |     |-ImplicitCastExpr 0x7fa332874388 <col:91> 'float (*)(const char *) noexcept' <BuiltinFnToFnPtr>
| |   | | |     | `-DeclRefExpr 0x7fa3328742c8 <col:91> '<builtin fn type>' Function 0x7fa332874170 '__builtin_nanf' 'float (const char *) noexcept'
| |   | | |     `-ImplicitCastExpr 0x7fa3328743d0 <col:106> 'const char *' <ArrayToPointerDecay>
| |   | | |       `-StringLiteral 0x7fa3328742f0 <col:106> 'const char [1]' lvalue ""
| |   | | |-AlwaysInlineAttr 0x7fa332873498 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fa3328734e0 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fa332873548 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:333:115> col:61 constexpr signaling_NaN 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fa3328746a8 <col:87, col:115>
| |   | | | `-ReturnStmt 0x7fa332874690 <col:88, col:113>
| |   | | |   `-CallExpr 0x7fa332874648 <col:95, col:113> 'float'
| |   | | |     |-ImplicitCastExpr 0x7fa332874630 <col:95> 'float (*)(const char *) noexcept' <BuiltinFnToFnPtr>
| |   | | |     | `-DeclRefExpr 0x7fa3328745c8 <col:95> '<builtin fn type>' Function 0x7fa332874470 '__builtin_nansf' 'float (const char *) noexcept'
| |   | | |     `-ImplicitCastExpr 0x7fa332874678 <col:111> 'const char *' <ArrayToPointerDecay>
| |   | | |       `-StringLiteral 0x7fa3328745f0 <col:111> 'const char [1]' lvalue ""
| |   | | |-AlwaysInlineAttr 0x7fa3328735e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fa332873628 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fa332873690 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:334:111> col:61 constexpr denorm_min 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fa332874700 <col:84, col:111>
| |   | | | `-ReturnStmt 0x7fa3328746e8 <col:85, <built-in>:132:28>
| |   | | |   `-FloatingLiteral 0x7fa3328746c8 <col:28> 'float' 1.401298e-45
| |   | | |-AlwaysInlineAttr 0x7fa332873728 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fa332873770 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fa332873790 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:336:5, col:53> col:41 is_iec559 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fa3328737f0 <col:53> '_Bool' true
| |   | |-VarDecl 0x7fa332873870 <line:337:5, col:54> col:41 is_bounded 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fa3328738d0 <col:54> '_Bool' true
| |   | |-VarDecl 0x7fa332873950 <line:338:5, col:53> col:41 is_modulo 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fa3328739b0 <col:53> '_Bool' false
| |   | |-VarDecl 0x7fa332873a30 <line:340:5, col:49> col:41 traps 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fa332873a90 <col:49> '_Bool' false
| |   | |-VarDecl 0x7fa332873b10 <line:341:5, col:59> col:41 tinyness_before 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fa332873b70 <col:59> '_Bool' false
| |   | `-VarDecl 0x7fa332873bf0 <line:342:5, col:68> col:54 round_style 'const enum std::__1::float_round_style' static constexpr cinit
| |   |   `-DeclRefExpr 0x7fa332873c50 <col:68> 'enum std::__1::float_round_style' EnumConstant 0x7fa3338bf030 'round_to_nearest' 'enum std::__1::float_round_style'
| |   |-ClassTemplateSpecializationDecl 0x7fa332874760 <line:345:1, line:389:1> line:346:7 class __libcpp_numeric_limits definition
| |   | |-TemplateArgument type 'double'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fa3328749d0 <col:1, col:7> col:7 implicit class __libcpp_numeric_limits
| |   | |-AccessSpecDecl 0x7fa332874a68 <line:348:1, col:10> col:1 protected
| |   | |-TypedefDecl 0x7fa332874aa8 <line:349:5, col:20> col:20 referenced type 'double'
| |   | | `-BuiltinType 0x7fa3328328e0 'double'
| |   | |-VarDecl 0x7fa332874b10 <line:351:5, col:58> col:41 is_specialized 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fa332874b70 <col:58> '_Bool' true
| |   | |-VarDecl 0x7fa332874bf0 <line:353:5, col:53> col:41 is_signed 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fa332874c50 <col:53> '_Bool' true
| |   | |-VarDecl 0x7fa332874cd8 <line:354:5, <built-in>:153:26> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:354:41 referenced digits 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fa332874d38 <<built-in>:153:26> 'int' 53
| |   | |-VarDecl 0x7fa332874e00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:355:5, <built-in>:148:21> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:355:41 digits10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fa332874e60 <<built-in>:148:21> 'int' 15
| |   | |-VarDecl 0x7fa332874ef0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:356:5, col:76> col:41 max_digits10 'const int' static constexpr cinit
| |   | | `-ImplicitCastExpr 0x7fa3328750b8 <col:56, col:76> 'const int' <IntegralCast>
| |   | |   `-BinaryOperator 0x7fa332875090 <col:56, col:76> 'long' '+'
| |   | |     |-ImplicitCastExpr 0x7fa332875078 <col:56> 'long' <IntegralCast>
| |   | |     | `-IntegerLiteral 0x7fa332874f50 <col:56> 'int' 2
| |   | |     `-BinaryOperator 0x7fa332875050 <col:58, col:76> 'long' '/'
| |   | |       |-ParenExpr 0x7fa332875010 <col:58, col:74> 'long'
| |   | |       | `-BinaryOperator 0x7fa332874fe8 <col:59, col:68> 'long' '*'
| |   | |       |   |-ImplicitCastExpr 0x7fa332874fd0 <col:59> 'long' <IntegralCast>
| |   | |       |   | `-ImplicitCastExpr 0x7fa332874fb8 <col:59> 'int' <LValueToRValue>
| |   | |       |   |   `-DeclRefExpr 0x7fa332874f70 <col:59> 'const int' lvalue Var 0x7fa332874cd8 'digits' 'const int'
| |   | |       |   `-IntegerLiteral 0x7fa332874f98 <col:68> 'long' 30103
| |   | |       `-IntegerLiteral 0x7fa332875030 <col:76> 'long' 100000
| |   | |-CXXMethodDecl 0x7fa332875208 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:357:97> col:61 constexpr min 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fa332876e58 <col:77, col:97>
| |   | | | `-ReturnStmt 0x7fa332876e40 <col:78, <built-in>:159:21>
| |   | | |   `-FloatingLiteral 0x7fa332876e20 <col:21> 'double' 2.225074e-308
| |   | | |-AlwaysInlineAttr 0x7fa3328752a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fa3328752e8 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fa332875350 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:358:97> col:61 used constexpr max 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fa332876eb0 <col:77, col:97>
| |   | | | `-ReturnStmt 0x7fa332876e98 <col:78, <built-in>:156:21>
| |   | | |   `-FloatingLiteral 0x7fa332876e78 <col:21> 'double' 1.797693e+308
| |   | | |-AlwaysInlineAttr 0x7fa3328753e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fa332875430 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fa332875498 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:359:95> col:61 constexpr lowest 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fa332876fa0 <col:80, col:95>
| |   | | | `-ReturnStmt 0x7fa332876f88 <col:81, col:93>
| |   | | |   `-UnaryOperator 0x7fa332876f68 <col:88, col:93> 'std::__1::__libcpp_numeric_limits<double, true>::type':'double' prefix '-'
| |   | | |     `-CallExpr 0x7fa332876f40 <col:89, col:93> 'std::__1::__libcpp_numeric_limits<double, true>::type':'double'
| |   | | |       `-ImplicitCastExpr 0x7fa332876f28 <col:89> 'std::__1::__libcpp_numeric_limits<double, true>::type (*)(void) noexcept' <FunctionToPointerDecay>
| |   | | |         `-DeclRefExpr 0x7fa332876ed0 <col:89> 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept' lvalue CXXMethod 0x7fa332875350 'max' 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept'
| |   | | |-AlwaysInlineAttr 0x7fa332875530 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fa332875578 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fa332875598 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:361:5, col:54> col:41 is_integer 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fa3328755f8 <col:54> '_Bool' false
| |   | |-VarDecl 0x7fa332875678 <line:362:5, col:52> col:41 is_exact 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fa3328756d8 <col:52> '_Bool' false
| |   | |-VarDecl 0x7fa332875760 <line:363:5, <built-in>:332:23> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:363:41 radix 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fa3328757c0 <<built-in>:332:23> 'int' 2
| |   | |-CXXMethodDecl 0x7fa332875890 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:364:105> col:61 constexpr epsilon 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fa332876ff8 <col:81, col:105>
| |   | | | `-ReturnStmt 0x7fa332876fe0 <col:82, <built-in>:150:25>
| |   | | |   `-FloatingLiteral 0x7fa332876fc0 <col:25> 'double' 2.220446e-16
| |   | | |-AlwaysInlineAttr 0x7fa332875928 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fa332875970 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fa3328759d8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:365:97> col:61 constexpr round_error 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fa332877050 <col:85, col:97>
| |   | | | `-ReturnStmt 0x7fa332877038 <col:86, col:93>
| |   | | |   `-FloatingLiteral 0x7fa332877018 <col:93> 'double' 5.000000e-01
| |   | | |-AlwaysInlineAttr 0x7fa332875a70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fa332875ab8 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fa332875ae0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:367:5, <built-in>:158:31> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:367:41 min_exponent 'const int' static constexpr cinit
| |   | | `-ParenExpr 0x7fa332875b80 <<built-in>:158:25, col:31> 'int'
| |   | |   `-UnaryOperator 0x7fa332875b60 <col:26, col:27> 'int' prefix '-'
| |   | |     `-IntegerLiteral 0x7fa332875b40 <col:27> 'int' 1021
| |   | |-VarDecl 0x7fa332875c10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:368:5, <built-in>:157:33> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:368:41 min_exponent10 'const int' static constexpr cinit
| |   | | `-ParenExpr 0x7fa332875cb0 <<built-in>:157:28, col:33> 'int'
| |   | |   `-UnaryOperator 0x7fa332875c90 <col:29, col:30> 'int' prefix '-'
| |   | |     `-IntegerLiteral 0x7fa332875c70 <col:30> 'int' 307
| |   | |-VarDecl 0x7fa332875d40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:369:5, <built-in>:155:25> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:369:41 max_exponent 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fa332875da0 <<built-in>:155:25> 'int' 1024
| |   | |-VarDecl 0x7fa332875e30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:370:5, <built-in>:154:28> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:370:41 max_exponent10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fa332875e90 <<built-in>:154:28> 'int' 308
| |   | |-VarDecl 0x7fa332875f18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:372:5, col:56> col:41 has_infinity 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fa332875f78 <col:56> '_Bool' true
| |   | |-VarDecl 0x7fa332875ff8 <line:373:5, col:57> col:41 has_quiet_NaN 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fa332876058 <col:57> '_Bool' true
| |   | |-VarDecl 0x7fa3328760d8 <line:374:5, col:61> col:41 has_signaling_NaN 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fa332876138 <col:61> '_Bool' true
| |   | |-VarDecl 0x7fa3328761b8 <line:375:5, col:68> col:55 has_denorm 'const enum std::__1::float_denorm_style' static constexpr cinit
| |   | | `-DeclRefExpr 0x7fa332876218 <col:68> 'enum std::__1::float_denorm_style' EnumConstant 0x7fa3338bf310 'denorm_present' 'enum std::__1::float_denorm_style'
| |   | |-VarDecl 0x7fa3328762a8 <line:376:5, col:59> col:41 has_denorm_loss 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fa332876308 <col:59> '_Bool' false
| |   | |-CXXMethodDecl 0x7fa3328763d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:377:111> col:61 constexpr infinity 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fa332877230 <col:82, col:111>
| |   | | | `-ReturnStmt 0x7fa332877218 <col:83, col:109>
| |   | | |   `-CallExpr 0x7fa3328771f0 <col:90, col:109> 'double'
| |   | | |     `-ImplicitCastExpr 0x7fa3328771d8 <col:90> 'double (*)(void) noexcept' <BuiltinFnToFnPtr>
| |   | | |       `-DeclRefExpr 0x7fa3328771b0 <col:90> '<builtin fn type>' Function 0x7fa3328770c0 '__builtin_huge_val' 'double (void) noexcept'
| |   | | |-AlwaysInlineAttr 0x7fa332876468 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fa3328764b0 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fa332876518 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:378:109> col:61 constexpr quiet_NaN 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fa332877530 <col:83, col:109>
| |   | | | `-ReturnStmt 0x7fa332877518 <col:84, col:107>
| |   | | |   `-CallExpr 0x7fa3328774d0 <col:91, col:107> 'double'
| |   | | |     |-ImplicitCastExpr 0x7fa3328774b8 <col:91> 'double (*)(const char *) noexcept' <BuiltinFnToFnPtr>
| |   | | |     | `-DeclRefExpr 0x7fa3328773f8 <col:91> '<builtin fn type>' Function 0x7fa3328772a0 '__builtin_nan' 'double (const char *) noexcept'
| |   | | |     `-ImplicitCastExpr 0x7fa332877500 <col:105> 'const char *' <ArrayToPointerDecay>
| |   | | |       `-StringLiteral 0x7fa332877420 <col:105> 'const char [1]' lvalue ""
| |   | | |-AlwaysInlineAttr 0x7fa3328765b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fa3328765f8 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fa332876660 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:379:114> col:61 constexpr signaling_NaN 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fa3328777d8 <col:87, col:114>
| |   | | | `-ReturnStmt 0x7fa3328777c0 <col:88, col:112>
| |   | | |   `-CallExpr 0x7fa332877778 <col:95, col:112> 'double'
| |   | | |     |-ImplicitCastExpr 0x7fa332877760 <col:95> 'double (*)(const char *) noexcept' <BuiltinFnToFnPtr>
| |   | | |     | `-DeclRefExpr 0x7fa3328776f8 <col:95> '<builtin fn type>' Function 0x7fa3328775a0 '__builtin_nans' 'double (const char *) noexcept'
| |   | | |     `-ImplicitCastExpr 0x7fa3328777a8 <col:110> 'const char *' <ArrayToPointerDecay>
| |   | | |       `-StringLiteral 0x7fa332877720 <col:110> 'const char [1]' lvalue ""
| |   | | |-AlwaysInlineAttr 0x7fa3328766f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fa332876740 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fa3328767a8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:380:111> col:61 constexpr denorm_min 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fa332877830 <col:84, col:111>
| |   | | | `-ReturnStmt 0x7fa332877818 <col:85, <built-in>:146:28>
| |   | | |   `-FloatingLiteral 0x7fa3328777f8 <col:28> 'double' 4.940656e-324
| |   | | |-AlwaysInlineAttr 0x7fa332876840 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fa332876888 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fa3328768a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:382:5, col:53> col:41 is_iec559 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fa332876908 <col:53> '_Bool' true
| |   | |-VarDecl 0x7fa332876988 <line:383:5, col:54> col:41 is_bounded 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fa3328769e8 <col:54> '_Bool' true
| |   | |-VarDecl 0x7fa332876a68 <line:384:5, col:53> col:41 is_modulo 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fa332876ac8 <col:53> '_Bool' false
| |   | |-VarDecl 0x7fa332876b48 <line:386:5, col:49> col:41 traps 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fa332876ba8 <col:49> '_Bool' false
| |   | |-VarDecl 0x7fa332876c28 <line:387:5, col:59> col:41 tinyness_before 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fa332876c88 <col:59> '_Bool' false
| |   | `-VarDecl 0x7fa332876d08 <line:388:5, col:68> col:54 round_style 'const enum std::__1::float_round_style' static constexpr cinit
| |   |   `-DeclRefExpr 0x7fa332876d68 <col:68> 'enum std::__1::float_round_style' EnumConstant 0x7fa3338bf030 'round_to_nearest' 'enum std::__1::float_round_style'
| |   |-ClassTemplateSpecializationDecl 0x7fa332877890 <line:391:1, line:439:1> line:392:7 class __libcpp_numeric_limits definition
| |   | |-TemplateArgument type 'long double'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fa332877b00 <col:1, col:7> col:7 implicit class __libcpp_numeric_limits
| |   | |-AccessSpecDecl 0x7fa332877b98 <line:394:1, col:10> col:1 protected
| |   | |-TypedefDecl 0x7fa332877bd8 <line:395:5, col:25> col:25 referenced type 'long double'
| |   | | `-BuiltinType 0x7fa332832900 'long double'
| |   | |-VarDecl 0x7fa332877c40 <line:397:5, col:58> col:41 is_specialized 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fa332877ca0 <col:58> '_Bool' true
| |   | |-VarDecl 0x7fa332877d20 <line:399:5, col:53> col:41 is_signed 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fa332877d80 <col:53> '_Bool' true
| |   | |-VarDecl 0x7fa332877e08 <line:400:5, <built-in>:167:27> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:400:41 referenced digits 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fa332877e68 <<built-in>:167:27> 'int' 64
| |   | |-VarDecl 0x7fa332877ef8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:401:5, <built-in>:162:22> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:401:41 digits10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fa332877f58 <<built-in>:162:22> 'int' 18
| |   | |-VarDecl 0x7fa332877fe8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:402:5, col:76> col:41 max_digits10 'const int' static constexpr cinit
| |   | | `-ImplicitCastExpr 0x7fa3328781b0 <col:56, col:76> 'const int' <IntegralCast>
| |   | |   `-BinaryOperator 0x7fa332878188 <col:56, col:76> 'long' '+'
| |   | |     |-ImplicitCastExpr 0x7fa332878170 <col:56> 'long' <IntegralCast>
| |   | |     | `-IntegerLiteral 0x7fa332878048 <col:56> 'int' 2
| |   | |     `-BinaryOperator 0x7fa332878148 <col:58, col:76> 'long' '/'
| |   | |       |-ParenExpr 0x7fa332878108 <col:58, col:74> 'long'
| |   | |       | `-BinaryOperator 0x7fa3328780e0 <col:59, col:68> 'long' '*'
| |   | |       |   |-ImplicitCastExpr 0x7fa3328780c8 <col:59> 'long' <IntegralCast>
| |   | |       |   | `-ImplicitCastExpr 0x7fa3328780b0 <col:59> 'int' <LValueToRValue>
| |   | |       |   |   `-DeclRefExpr 0x7fa332878068 <col:59> 'const int' lvalue Var 0x7fa332877e08 'digits' 'const int'
| |   | |       |   `-IntegerLiteral 0x7fa332878090 <col:68> 'long' 30103
| |   | |       `-IntegerLiteral 0x7fa332878128 <col:76> 'long' 100000
| |   | |-CXXMethodDecl 0x7fa3328782f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:403:98> col:61 constexpr min 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fa332879f80 <col:77, col:98>
| |   | | | `-ReturnStmt 0x7fa332879f68 <col:78, <built-in>:173:22>
| |   | | |   `-FloatingLiteral 0x7fa332879f38 <col:22> 'long double' 0.000000e+00
| |   | | |-AlwaysInlineAttr 0x7fa332878390 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fa3328783d8 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fa332878440 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:404:98> col:61 used constexpr max 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fa332879fe8 <col:77, col:98>
| |   | | | `-ReturnStmt 0x7fa332879fd0 <col:78, <built-in>:170:22>
| |   | | |   `-FloatingLiteral 0x7fa332879fa0 <col:22> 'long double' INF
| |   | | |-AlwaysInlineAttr 0x7fa3328784d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fa332878520 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fa332878588 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:405:95> col:61 constexpr lowest 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fa33287a0d0 <col:80, col:95>
| |   | | | `-ReturnStmt 0x7fa33287a0b8 <col:81, col:93>
| |   | | |   `-UnaryOperator 0x7fa33287a098 <col:88, col:93> 'std::__1::__libcpp_numeric_limits<long double, true>::type':'long double' prefix '-'
| |   | | |     `-CallExpr 0x7fa33287a070 <col:89, col:93> 'std::__1::__libcpp_numeric_limits<long double, true>::type':'long double'
| |   | | |       `-ImplicitCastExpr 0x7fa33287a058 <col:89> 'std::__1::__libcpp_numeric_limits<long double, true>::type (*)(void) noexcept' <FunctionToPointerDecay>
| |   | | |         `-DeclRefExpr 0x7fa33287a008 <col:89> 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept' lvalue CXXMethod 0x7fa332878440 'max' 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept'
| |   | | |-AlwaysInlineAttr 0x7fa332878620 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fa332878668 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fa332878688 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:407:5, col:54> col:41 is_integer 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fa3328786e8 <col:54> '_Bool' false
| |   | |-VarDecl 0x7fa332878768 <line:408:5, col:52> col:41 is_exact 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fa3328787c8 <col:52> '_Bool' false
| |   | |-VarDecl 0x7fa332878850 <line:409:5, <built-in>:332:23> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:409:41 radix 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fa3328788b0 <<built-in>:332:23> 'int' 2
| |   | |-CXXMethodDecl 0x7fa332878980 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:410:106> col:61 constexpr epsilon 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fa33287a138 <col:81, col:106>
| |   | | | `-ReturnStmt 0x7fa33287a120 <col:82, <built-in>:164:26>
| |   | | |   `-FloatingLiteral 0x7fa33287a0f0 <col:26> 'long double' 1.084202e-19
| |   | | |-AlwaysInlineAttr 0x7fa332878a18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fa332878a60 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fa332878ac8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:411:97> col:61 constexpr round_error 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fa33287a1a8 <col:85, col:97>
| |   | | | `-ReturnStmt 0x7fa33287a190 <col:86, col:93>
| |   | | |   `-ImplicitCastExpr 0x7fa33287a178 <col:93> 'std::__1::__libcpp_numeric_limits<long double, true>::type':'long double' <FloatingCast>
| |   | | |     `-FloatingLiteral 0x7fa33287a158 <col:93> 'double' 5.000000e-01
| |   | | |-AlwaysInlineAttr 0x7fa332878b60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fa332878ba8 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fa332878bd0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:413:5, <built-in>:172:33> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:413:41 min_exponent 'const int' static constexpr cinit
| |   | | `-ParenExpr 0x7fa332878c70 <<built-in>:172:26, col:33> 'int'
| |   | |   `-UnaryOperator 0x7fa332878c50 <col:27, col:28> 'int' prefix '-'
| |   | |     `-IntegerLiteral 0x7fa332878c30 <col:28> 'int' 16381
| |   | |-VarDecl 0x7fa332878d00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:414:5, <built-in>:171:35> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:414:41 min_exponent10 'const int' static constexpr cinit
| |   | | `-ParenExpr 0x7fa332878da0 <<built-in>:171:29, col:35> 'int'
| |   | |   `-UnaryOperator 0x7fa332878d80 <col:30, col:31> 'int' prefix '-'
| |   | |     `-IntegerLiteral 0x7fa332878d60 <col:31> 'int' 4931
| |   | |-VarDecl 0x7fa332878e70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:415:5, <built-in>:169:26> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:415:41 max_exponent 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fa332878ed0 <<built-in>:169:26> 'int' 16384
| |   | |-VarDecl 0x7fa332878f60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:416:5, <built-in>:168:29> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:416:41 max_exponent10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fa332878fc0 <<built-in>:168:29> 'int' 4932
| |   | |-VarDecl 0x7fa332879048 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:418:5, col:56> col:41 has_infinity 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fa3328790a8 <col:56> '_Bool' true
| |   | |-VarDecl 0x7fa332879128 <line:419:5, col:57> col:41 has_quiet_NaN 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fa332879188 <col:57> '_Bool' true
| |   | |-VarDecl 0x7fa332879208 <line:420:5, col:61> col:41 has_signaling_NaN 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fa332879268 <col:61> '_Bool' true
| |   | |-VarDecl 0x7fa3328792e8 <line:421:5, col:68> col:55 has_denorm 'const enum std::__1::float_denorm_style' static constexpr cinit
| |   | | `-DeclRefExpr 0x7fa332879348 <col:68> 'enum std::__1::float_denorm_style' EnumConstant 0x7fa3338bf310 'denorm_present' 'enum std::__1::float_denorm_style'
| |   | |-VarDecl 0x7fa3328793d8 <line:422:5, col:59> col:41 has_denorm_loss 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fa332879438 <col:59> '_Bool' false
| |   | |-CXXMethodDecl 0x7fa332879500 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:423:112> col:61 constexpr infinity 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fa33287a388 <col:82, col:112>
| |   | | | `-ReturnStmt 0x7fa33287a370 <col:83, col:110>
| |   | | |   `-CallExpr 0x7fa33287a348 <col:90, col:110> 'long double'
| |   | | |     `-ImplicitCastExpr 0x7fa33287a330 <col:90> 'long double (*)(void) noexcept' <BuiltinFnToFnPtr>
| |   | | |       `-DeclRefExpr 0x7fa33287a308 <col:90> '<builtin fn type>' Function 0x7fa33287a218 '__builtin_huge_vall' 'long double (void) noexcept'
| |   | | |-AlwaysInlineAttr 0x7fa332879598 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fa3328795e0 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fa332879648 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:424:110> col:61 constexpr quiet_NaN 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fa33287a690 <col:83, col:110>
| |   | | | `-ReturnStmt 0x7fa33287a678 <col:84, col:108>
| |   | | |   `-CallExpr 0x7fa33287a630 <col:91, col:108> 'long double'
| |   | | |     |-ImplicitCastExpr 0x7fa33287a618 <col:91> 'long double (*)(const char *) noexcept' <BuiltinFnToFnPtr>
| |   | | |     | `-DeclRefExpr 0x7fa33287a550 <col:91> '<builtin fn type>' Function 0x7fa33287a3f8 '__builtin_nanl' 'long double (const char *) noexcept'
| |   | | |     `-ImplicitCastExpr 0x7fa33287a660 <col:106> 'const char *' <ArrayToPointerDecay>
| |   | | |       `-StringLiteral 0x7fa33287a578 <col:106> 'const char [1]' lvalue ""
| |   | | |-AlwaysInlineAttr 0x7fa3328796e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fa332879728 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fa332879790 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:425:115> col:61 constexpr signaling_NaN 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fa33287a938 <col:87, col:115>
| |   | | | `-ReturnStmt 0x7fa33287a920 <col:88, col:113>
| |   | | |   `-CallExpr 0x7fa33287a8d8 <col:95, col:113> 'long double'
| |   | | |     |-ImplicitCastExpr 0x7fa33287a8c0 <col:95> 'long double (*)(const char *) noexcept' <BuiltinFnToFnPtr>
| |   | | |     | `-DeclRefExpr 0x7fa33287a858 <col:95> '<builtin fn type>' Function 0x7fa33287a700 '__builtin_nansl' 'long double (const char *) noexcept'
| |   | | |     `-ImplicitCastExpr 0x7fa33287a908 <col:111> 'const char *' <ArrayToPointerDecay>
| |   | | |       `-StringLiteral 0x7fa33287a880 <col:111> 'const char [1]' lvalue ""
| |   | | |-AlwaysInlineAttr 0x7fa332879828 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fa332879870 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fa3328798d8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:426:112> col:61 constexpr denorm_min 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fa33287a9a0 <col:84, col:112>
| |   | | | `-ReturnStmt 0x7fa33287a988 <col:85, <built-in>:160:29>
| |   | | |   `-FloatingLiteral 0x7fa33287a958 <col:29> 'long double' 0.000000e+00
| |   | | |-AlwaysInlineAttr 0x7fa332879970 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fa3328799b8 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fa3328799d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:431:5, col:53> col:41 is_iec559 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fa332879a38 <col:53> '_Bool' true
| |   | |-VarDecl 0x7fa332879ab8 <line:433:5, col:54> col:41 is_bounded 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fa332879b18 <col:54> '_Bool' true
| |   | |-VarDecl 0x7fa332879b98 <line:434:5, col:53> col:41 is_modulo 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fa332879bf8 <col:53> '_Bool' false
| |   | |-VarDecl 0x7fa332879c78 <line:436:5, col:49> col:41 traps 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fa332879cd8 <col:49> '_Bool' false
| |   | |-VarDecl 0x7fa332879d58 <line:437:5, col:59> col:41 tinyness_before 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fa332879db8 <col:59> '_Bool' false
| |   | `-VarDecl 0x7fa332879e38 <line:438:5, col:68> col:54 round_style 'const enum std::__1::float_round_style' static constexpr cinit
| |   |   `-DeclRefExpr 0x7fa332879e98 <col:68> 'enum std::__1::float_round_style' EnumConstant 0x7fa3338bf030 'round_to_nearest' 'enum std::__1::float_round_style'
| |   |-ClassTemplateDecl 0x7fa33287ab08 <line:441:1, line:485:1> line:442:28 numeric_limits
| |   | |-TemplateTypeParmDecl 0x7fa33287a9c0 <line:441:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fa33287aa70 <line:442:1, line:485:1> line:442:28 class numeric_limits definition
| |   |   |-private '__libcpp_numeric_limits<typename remove_cv<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fa33287ad80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fa33287b1a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:442:1, col:28> col:28 implicit class numeric_limits
| |   |   |-TypedefDecl 0x7fa33287b4f8 <line:445:5, col:68> col:68 referenced __base '__libcpp_numeric_limits<typename remove_cv<_Tp>::type>'
| |   |   | `-TemplateSpecializationType 0x7fa33287b450 '__libcpp_numeric_limits<typename remove_cv<_Tp>::type>' dependent __libcpp_numeric_limits
| |   |   |   `-TemplateArgument type 'typename remove_cv<_Tp>::type'
| |   |   |-TypedefDecl 0x7fa33287b660 <line:446:5, col:35> col:35 referenced type 'typename __base::type'
| |   |   | `-DependentNameType 0x7fa33287b5f0 'typename __base::type' dependent
| |   |   |-AccessSpecDecl 0x7fa33287b6b8 <line:447:1, col:7> col:1 public
| |   |   |-VarDecl 0x7fa33287b6f0 <line:448:5, col:66> col:41 is_specialized 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fa33287b788 <col:58, col:66> '<dependent type>' lvalue
| |   |   |-CXXMethodDecl 0x7fa33287b8d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:449:99> col:61 constexpr min 'std::__1::numeric_limits::type (void) noexcept' static
| |   |   | |-CompoundStmt 0x7fa33287d910 <col:77, col:99>
| |   |   | | `-ReturnStmt 0x7fa33287d8f8 <col:78, col:97>
| |   |   | |   `-CallExpr 0x7fa33287d8d0 <col:85, col:97> '<dependent type>'
| |   |   | |     `-DependentScopeDeclRefExpr 0x7fa33287d890 <col:85, col:93> '<dependent type>' lvalue
| |   |   | |-AlwaysInlineAttr 0x7fa33287b970 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   | `-VisibilityAttr 0x7fa33287b9b8 <col:51, col:74> Hidden
| |   |   |-CXXMethodDecl 0x7fa33287ba20 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:450:99> col:61 constexpr max 'std::__1::numeric_limits::type (void) noexcept' static
| |   |   | |-CompoundStmt 0x7fa33287d9e8 <col:77, col:99>
| |   |   | | `-ReturnStmt 0x7fa33287d9d0 <col:78, col:97>
| |   |   | |   `-CallExpr 0x7fa33287d9a8 <col:85, col:97> '<dependent type>'
| |   |   | |     `-DependentScopeDeclRefExpr 0x7fa33287d968 <col:85, col:93> '<dependent type>' lvalue
| |   |   | |-AlwaysInlineAttr 0x7fa33287bab8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   | `-VisibilityAttr 0x7fa33287bb00 <col:51, col:74> Hidden
| |   |   |-CXXMethodDecl 0x7fa33287bb68 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:451:105> col:61 constexpr lowest 'std::__1::numeric_limits::type (void) noexcept' static
| |   |   | |-CompoundStmt 0x7fa33287dac0 <col:80, col:105>
| |   |   | | `-ReturnStmt 0x7fa33287daa8 <col:81, col:103>
| |   |   | |   `-CallExpr 0x7fa33287da80 <col:88, col:103> '<dependent type>'
| |   |   | |     `-DependentScopeDeclRefExpr 0x7fa33287da40 <col:88, col:96> '<dependent type>' lvalue
| |   |   | |-AlwaysInlineAttr 0x7fa33287bc00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   | `-VisibilityAttr 0x7fa33287bc48 <col:51, col:74> Hidden
| |   |   |-VarDecl 0x7fa33287bc70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:453:5, col:58> col:41 digits 'const int' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fa33287bd08 <col:50, col:58> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fa33287bd60 <line:454:5, col:60> col:41 digits10 'const int' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fa33287bdf8 <col:52, col:60> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fa33287be50 <line:455:5, col:64> col:41 max_digits10 'const int' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fa33287bee8 <col:56, col:64> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fa33287bf38 <line:456:5, col:61> col:41 is_signed 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fa33287bfd0 <col:53, col:61> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fa33287c020 <line:457:5, col:62> col:41 is_integer 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fa33287c0b8 <col:54, col:62> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fa33287c108 <line:458:5, col:60> col:41 is_exact 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fa33287c1a0 <col:52, col:60> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fa33287c1f8 <line:459:5, col:57> col:41 radix 'const int' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fa33287c290 <col:49, col:57> '<dependent type>' lvalue
| |   |   |-CXXMethodDecl 0x7fa33287c328 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:460:107> col:61 constexpr epsilon 'std::__1::numeric_limits::type (void) noexcept' static
| |   |   | |-CompoundStmt 0x7fa33287db98 <col:81, col:107>
| |   |   | | `-ReturnStmt 0x7fa33287db80 <col:82, col:105>
| |   |   | |   `-CallExpr 0x7fa33287db58 <col:89, col:105> '<dependent type>'
| |   |   | |     `-DependentScopeDeclRefExpr 0x7fa33287db18 <col:89, col:97> '<dependent type>' lvalue
| |   |   | |-AlwaysInlineAttr 0x7fa33287c3c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   | `-VisibilityAttr 0x7fa33287c408 <col:51, col:74> Hidden
| |   |   |-CXXMethodDecl 0x7fa33287c470 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:461:115> col:61 constexpr round_error 'std::__1::numeric_limits::type (void) noexcept' static
| |   |   | |-CompoundStmt 0x7fa33287dc70 <col:85, col:115>
| |   |   | | `-ReturnStmt 0x7fa33287dc58 <col:86, col:113>
| |   |   | |   `-CallExpr 0x7fa33287dc30 <col:93, col:113> '<dependent type>'
| |   |   | |     `-DependentScopeDeclRefExpr 0x7fa33287dbf0 <col:93, col:101> '<dependent type>' lvalue
| |   |   | |-AlwaysInlineAttr 0x7fa33287c508 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   | `-VisibilityAttr 0x7fa33287c550 <col:51, col:74> Hidden
| |   |   |-VarDecl 0x7fa33287c578 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:463:5, col:64> col:41 min_exponent 'const int' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fa33287c610 <col:56, col:64> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fa33287c668 <line:464:5, col:66> col:41 min_exponent10 'const int' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fa33287c700 <col:58, col:66> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fa33287c758 <line:465:5, col:64> col:41 max_exponent 'const int' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fa33287c7f0 <col:56, col:64> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fa33287c848 <line:466:5, col:66> col:41 max_exponent10 'const int' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fa33287c8e0 <col:58, col:66> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fa33287c930 <line:468:5, col:64> col:41 has_infinity 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fa33287c9c8 <col:56, col:64> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fa33287ca18 <line:469:5, col:65> col:41 has_quiet_NaN 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fa33287cab0 <col:57, col:65> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fa33287cb00 <line:470:5, col:69> col:41 has_signaling_NaN 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fa33287cb98 <col:61, col:69> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fa33287cbe8 <line:471:5, col:76> col:55 has_denorm 'const enum std::__1::float_denorm_style' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fa33287cc80 <col:68, col:76> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fa33287ccd0 <line:472:5, col:67> col:41 has_denorm_loss 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fa33287cd68 <col:59, col:67> '<dependent type>' lvalue
| |   |   |-CXXMethodDecl 0x7fa33287ce00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:473:109> col:61 constexpr infinity 'std::__1::numeric_limits::type (void) noexcept' static
| |   |   | |-CompoundStmt 0x7fa33287dd48 <col:82, col:109>
| |   |   | | `-ReturnStmt 0x7fa33287dd30 <col:83, col:107>
| |   |   | |   `-CallExpr 0x7fa33287dd08 <col:90, col:107> '<dependent type>'
| |   |   | |     `-DependentScopeDeclRefExpr 0x7fa33287dcc8 <col:90, col:98> '<dependent type>' lvalue
| |   |   | |-AlwaysInlineAttr 0x7fa33287ce98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   | `-VisibilityAttr 0x7fa33287cee0 <col:51, col:74> Hidden
| |   |   |-CXXMethodDecl 0x7fa33287cf48 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:474:111> col:61 constexpr quiet_NaN 'std::__1::numeric_limits::type (void) noexcept' static
| |   |   | |-CompoundStmt 0x7fa33287de20 <col:83, col:111>
| |   |   | | `-ReturnStmt 0x7fa33287de08 <col:84, col:109>
| |   |   | |   `-CallExpr 0x7fa33287dde0 <col:91, col:109> '<dependent type>'
| |   |   | |     `-DependentScopeDeclRefExpr 0x7fa33287dda0 <col:91, col:99> '<dependent type>' lvalue
| |   |   | |-AlwaysInlineAttr 0x7fa33287cfe0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   | `-VisibilityAttr 0x7fa33287d028 <col:51, col:74> Hidden
| |   |   |-CXXMethodDecl 0x7fa33287d090 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:475:119> col:61 constexpr signaling_NaN 'std::__1::numeric_limits::type (void) noexcept' static
| |   |   | |-CompoundStmt 0x7fa33287def8 <col:87, col:119>
| |   |   | | `-ReturnStmt 0x7fa33287dee0 <col:88, col:117>
| |   |   | |   `-CallExpr 0x7fa33287deb8 <col:95, col:117> '<dependent type>'
| |   |   | |     `-DependentScopeDeclRefExpr 0x7fa33287de78 <col:95, col:103> '<dependent type>' lvalue
| |   |   | |-AlwaysInlineAttr 0x7fa33287d128 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   | `-VisibilityAttr 0x7fa33287d170 <col:51, col:74> Hidden
| |   |   |-CXXMethodDecl 0x7fa33287d1d8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:476:113> col:61 constexpr denorm_min 'std::__1::numeric_limits::type (void) noexcept' static
| |   |   | |-CompoundStmt 0x7fa33287dfd0 <col:84, col:113>
| |   |   | | `-ReturnStmt 0x7fa33287dfb8 <col:85, col:111>
| |   |   | |   `-CallExpr 0x7fa33287df90 <col:92, col:111> '<dependent type>'
| |   |   | |     `-DependentScopeDeclRefExpr 0x7fa33287df50 <col:92, col:100> '<dependent type>' lvalue
| |   |   | |-AlwaysInlineAttr 0x7fa33287d270 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   | `-VisibilityAttr 0x7fa33287d2b8 <col:51, col:74> Hidden
| |   |   |-VarDecl 0x7fa33287d2d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:478:5, col:61> col:41 is_iec559 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fa33287d370 <col:53, col:61> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fa33287d3c0 <line:479:5, col:62> col:41 is_bounded 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fa33287d458 <col:54, col:62> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fa33287d4a8 <line:480:5, col:61> col:41 is_modulo 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fa33287d540 <col:53, col:61> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fa33287d590 <line:482:5, col:57> col:41 traps 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fa33287d628 <col:49, col:57> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fa33287d678 <line:483:5, col:67> col:41 tinyness_before 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fa33287d710 <col:59, col:67> '<dependent type>' lvalue
| |   |   `-VarDecl 0x7fa33287d760 <line:484:5, col:76> col:54 round_style 'const enum std::__1::float_round_style' static constexpr cinit
| |   |     `-DependentScopeDeclRefExpr 0x7fa33287d7f8 <col:68, col:76> '<dependent type>' lvalue
| |   |-VarDecl 0x7fa33287e1e0 parent 0x7fa33287aa70 prev 0x7fa33287b6f0 <line:487:1, line:488:55> col:55 is_specialized 'const _Bool' constexpr
| |   |-VarDecl 0x7fa33287e478 parent 0x7fa33287aa70 prev 0x7fa33287bc70 <line:489:1, line:490:54> col:54 digits 'const int' constexpr
| |   |-VarDecl 0x7fa33287e718 parent 0x7fa33287aa70 prev 0x7fa33287bd60 <line:491:1, line:492:54> col:54 digits10 'const int' constexpr
| |   |-VarDecl 0x7fa33287e9b8 parent 0x7fa33287aa70 prev 0x7fa33287be50 <line:493:1, line:494:54> col:54 max_digits10 'const int' constexpr
| |   |-VarDecl 0x7fa33287ec50 parent 0x7fa33287aa70 prev 0x7fa33287bf38 <line:495:1, line:496:55> col:55 is_signed 'const _Bool' constexpr
| |   |-VarDecl 0x7fa33287eef0 parent 0x7fa33287aa70 prev 0x7fa33287c020 <line:497:1, line:498:55> col:55 is_integer 'const _Bool' constexpr
| |   |-VarDecl 0x7fa33287f180 parent 0x7fa33287aa70 prev 0x7fa33287c108 <line:499:1, line:500:55> col:55 is_exact 'const _Bool' constexpr
| |   |-VarDecl 0x7fa33287f418 parent 0x7fa33287aa70 prev 0x7fa33287c1f8 <line:501:1, line:502:54> col:54 radix 'const int' constexpr
| |   |-VarDecl 0x7fa33287f6b8 parent 0x7fa33287aa70 prev 0x7fa33287c578 <line:503:1, line:504:54> col:54 min_exponent 'const int' constexpr
| |   |-VarDecl 0x7fa33287f958 parent 0x7fa33287aa70 prev 0x7fa33287c668 <line:505:1, line:506:54> col:54 min_exponent10 'const int' constexpr
| |   |-VarDecl 0x7fa33287fbf8 parent 0x7fa33287aa70 prev 0x7fa33287c758 <line:507:1, line:508:54> col:54 max_exponent 'const int' constexpr
| |   |-VarDecl 0x7fa33287fe98 parent 0x7fa33287aa70 prev 0x7fa33287c848 <line:509:1, line:510:54> col:54 max_exponent10 'const int' constexpr
| |   |-VarDecl 0x7fa332880130 parent 0x7fa33287aa70 prev 0x7fa33287c930 <line:511:1, line:512:55> col:55 has_infinity 'const _Bool' constexpr
| |   |-VarDecl 0x7fa3328803c0 parent 0x7fa33287aa70 prev 0x7fa33287ca18 <line:513:1, line:514:55> col:55 has_quiet_NaN 'const _Bool' constexpr
| |   |-VarDecl 0x7fa332880650 parent 0x7fa33287aa70 prev 0x7fa33287cb00 <line:515:1, line:516:55> col:55 has_signaling_NaN 'const _Bool' constexpr
| |   |-VarDecl 0x7fa3328808e0 parent 0x7fa33287aa70 prev 0x7fa33287cbe8 <line:517:1, line:518:69> col:69 has_denorm 'const enum std::__1::float_denorm_style' constexpr
| |   |-VarDecl 0x7fa332880b70 parent 0x7fa33287aa70 prev 0x7fa33287ccd0 <line:519:1, line:520:55> col:55 has_denorm_loss 'const _Bool' constexpr
| |   |-VarDecl 0x7fa332881e00 parent 0x7fa33287aa70 prev 0x7fa33287d2d8 <line:521:1, line:522:55> col:55 is_iec559 'const _Bool' constexpr
| |   |-VarDecl 0x7fa332882090 parent 0x7fa33287aa70 prev 0x7fa33287d3c0 <line:523:1, line:524:55> col:55 is_bounded 'const _Bool' constexpr
| |   |-VarDecl 0x7fa332882320 parent 0x7fa33287aa70 prev 0x7fa33287d4a8 <line:525:1, line:526:55> col:55 is_modulo 'const _Bool' constexpr
| |   |-VarDecl 0x7fa3328825b0 parent 0x7fa33287aa70 prev 0x7fa33287d590 <line:527:1, line:528:55> col:55 traps 'const _Bool' constexpr
| |   |-VarDecl 0x7fa332882840 parent 0x7fa33287aa70 prev 0x7fa33287d678 <line:529:1, line:530:55> col:55 tinyness_before 'const _Bool' constexpr
| |   |-VarDecl 0x7fa332882ad0 parent 0x7fa33287aa70 prev 0x7fa33287d760 <line:531:1, line:532:68> col:68 round_style 'const enum std::__1::float_round_style' constexpr
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa332882d08 <line:534:1, line:578:1> line:535:28 class numeric_limits definition
| |   | |-private 'numeric_limits<_Tp>'
| |   | |-TemplateArgument type 'const type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fa332882b70 <line:534:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fa332882e48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fa332883038 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:535:1, col:28> col:28 implicit class numeric_limits
| |   | |-TypedefDecl 0x7fa332883188 <line:538:5, col:33> col:33 referenced __base 'numeric_limits<_Tp>'
| |   | | `-TemplateSpecializationType 0x7fa3328830e0 'numeric_limits<_Tp>' dependent numeric_limits
| |   | |   `-TemplateArgument type '_Tp'
| |   | |-TypedefDecl 0x7fa3328831f0 <line:539:5, col:17> col:17 referenced type '_Tp'
| |   | | `-TemplateTypeParmType 0x7fa332882bb0 '_Tp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fa332882b70 '_Tp'
| |   | |-AccessSpecDecl 0x7fa332883248 <line:540:1, col:7> col:1 public
| |   | |-VarDecl 0x7fa332883280 <line:541:5, col:66> col:41 is_specialized 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fa332883350 <col:58, col:66> '<dependent type>' lvalue
| |   | |-CXXMethodDecl 0x7fa332883468 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:542:99> col:61 constexpr min 'std::__1::numeric_limits<const type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fa3328854b0 <col:77, col:99>
| |   | | | `-ReturnStmt 0x7fa332885498 <col:78, col:97>
| |   | | |   `-CallExpr 0x7fa332885470 <col:85, col:97> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fa332885430 <col:85, col:93> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fa332883500 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fa332883548 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fa3328835b0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:543:99> col:61 constexpr max 'std::__1::numeric_limits<const type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fa332885588 <col:77, col:99>
| |   | | | `-ReturnStmt 0x7fa332885570 <col:78, col:97>
| |   | | |   `-CallExpr 0x7fa332885548 <col:85, col:97> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fa332885508 <col:85, col:93> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fa332883648 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fa332883690 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fa3328836f8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:544:105> col:61 constexpr lowest 'std::__1::numeric_limits<const type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fa332885660 <col:80, col:105>
| |   | | | `-ReturnStmt 0x7fa332885648 <col:81, col:103>
| |   | | |   `-CallExpr 0x7fa332885620 <col:88, col:103> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fa3328855e0 <col:88, col:96> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fa332883790 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fa3328837d8 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fa332883800 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:546:5, col:58> col:41 digits 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fa332883898 <col:50, col:58> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fa3328838f0 <line:547:5, col:60> col:41 digits10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fa332883988 <col:52, col:60> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fa3328839e0 <line:548:5, col:64> col:41 max_digits10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fa332883a78 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fa332883ac8 <line:549:5, col:61> col:41 is_signed 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fa332883b60 <col:53, col:61> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fa332883bb0 <line:550:5, col:62> col:41 is_integer 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fa332883c48 <col:54, col:62> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fa332883c98 <line:551:5, col:60> col:41 is_exact 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fa332883d30 <col:52, col:60> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fa332883d88 <line:552:5, col:57> col:41 radix 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fa332883e30 <col:49, col:57> '<dependent type>' lvalue
| |   | |-CXXMethodDecl 0x7fa332883ec8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:553:107> col:61 constexpr epsilon 'std::__1::numeric_limits<const type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fa332885738 <col:81, col:107>
| |   | | | `-ReturnStmt 0x7fa332885720 <col:82, col:105>
| |   | | |   `-CallExpr 0x7fa3328856f8 <col:89, col:105> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fa3328856b8 <col:89, col:97> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fa332883f60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fa332883fa8 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fa332884010 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:554:115> col:61 constexpr round_error 'std::__1::numeric_limits<const type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fa332885810 <col:85, col:115>
| |   | | | `-ReturnStmt 0x7fa3328857f8 <col:86, col:113>
| |   | | |   `-CallExpr 0x7fa3328857d0 <col:93, col:113> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fa332885790 <col:93, col:101> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fa3328840a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fa3328840f0 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fa332884118 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:556:5, col:64> col:41 min_exponent 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fa3328841b0 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fa332884208 <line:557:5, col:66> col:41 min_exponent10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fa3328842a0 <col:58, col:66> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fa3328842f8 <line:558:5, col:64> col:41 max_exponent 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fa332884390 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fa3328843e8 <line:559:5, col:66> col:41 max_exponent10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fa332884480 <col:58, col:66> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fa3328844d0 <line:561:5, col:64> col:41 has_infinity 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fa332884568 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fa3328845b8 <line:562:5, col:65> col:41 has_quiet_NaN 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fa332884650 <col:57, col:65> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fa3328846a0 <line:563:5, col:69> col:41 has_signaling_NaN 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fa332884738 <col:61, col:69> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fa332884788 <line:564:5, col:76> col:55 has_denorm 'const enum std::__1::float_denorm_style' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fa332884820 <col:68, col:76> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fa332884870 <line:565:5, col:67> col:41 has_denorm_loss 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fa332884908 <col:59, col:67> '<dependent type>' lvalue
| |   | |-CXXMethodDecl 0x7fa3328849a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:566:109> col:61 constexpr infinity 'std::__1::numeric_limits<const type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fa3328858e8 <col:82, col:109>
| |   | | | `-ReturnStmt 0x7fa3328858d0 <col:83, col:107>
| |   | | |   `-CallExpr 0x7fa3328858a8 <col:90, col:107> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fa332885868 <col:90, col:98> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fa332884a38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fa332884a80 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fa332884ae8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:567:111> col:61 constexpr quiet_NaN 'std::__1::numeric_limits<const type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fa3328859c0 <col:83, col:111>
| |   | | | `-ReturnStmt 0x7fa3328859a8 <col:84, col:109>
| |   | | |   `-CallExpr 0x7fa332885980 <col:91, col:109> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fa332885940 <col:91, col:99> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fa332884b80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fa332884bc8 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fa332884c30 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:568:119> col:61 constexpr signaling_NaN 'std::__1::numeric_limits<const type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fa332885a98 <col:87, col:119>
| |   | | | `-ReturnStmt 0x7fa332885a80 <col:88, col:117>
| |   | | |   `-CallExpr 0x7fa332885a58 <col:95, col:117> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fa332885a18 <col:95, col:103> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fa332884cc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fa332884d10 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fa332884d78 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:569:113> col:61 constexpr denorm_min 'std::__1::numeric_limits<const type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fa332885b70 <col:84, col:113>
| |   | | | `-ReturnStmt 0x7fa332885b58 <col:85, col:111>
| |   | | |   `-CallExpr 0x7fa332885b30 <col:92, col:111> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fa332885af0 <col:92, col:100> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fa332884e10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fa332884e58 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fa332884e78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:571:5, col:61> col:41 is_iec559 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fa332884f10 <col:53, col:61> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fa332884f60 <line:572:5, col:62> col:41 is_bounded 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fa332884ff8 <col:54, col:62> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fa332885048 <line:573:5, col:61> col:41 is_modulo 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fa3328850e0 <col:53, col:61> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fa332885130 <line:575:5, col:57> col:41 traps 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fa3328851c8 <col:49, col:57> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fa332885218 <line:576:5, col:67> col:41 tinyness_before 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fa3328852b0 <col:59, col:67> '<dependent type>' lvalue
| |   | `-VarDecl 0x7fa332885300 <line:577:5, col:76> col:54 round_style 'const enum std::__1::float_round_style' static constexpr cinit
| |   |   `-DependentScopeDeclRefExpr 0x7fa332885398 <col:68, col:76> '<dependent type>' lvalue
| |   |-VarDecl 0x7fa332885d80 parent 0x7fa332882d08 prev 0x7fa332883280 <line:580:1, line:581:61> col:61 is_specialized 'const _Bool' constexpr
| |   |-VarDecl 0x7fa332886038 parent 0x7fa332882d08 prev 0x7fa332883800 <line:582:1, line:583:60> col:60 digits 'const int' constexpr
| |   |-VarDecl 0x7fa3328862d8 parent 0x7fa332882d08 prev 0x7fa3328838f0 <line:584:1, line:585:60> col:60 digits10 'const int' constexpr
| |   |-VarDecl 0x7fa332886578 parent 0x7fa332882d08 prev 0x7fa3328839e0 <line:586:1, line:587:60> col:60 max_digits10 'const int' constexpr
| |   |-VarDecl 0x7fa332886810 parent 0x7fa332882d08 prev 0x7fa332883ac8 <line:588:1, line:589:61> col:61 is_signed 'const _Bool' constexpr
| |   |-VarDecl 0x7fa332886aa0 parent 0x7fa332882d08 prev 0x7fa332883bb0 <line:590:1, line:591:61> col:61 is_integer 'const _Bool' constexpr
| |   |-VarDecl 0x7fa332886d30 parent 0x7fa332882d08 prev 0x7fa332883c98 <line:592:1, line:593:61> col:61 is_exact 'const _Bool' constexpr
| |   |-VarDecl 0x7fa332886fc8 parent 0x7fa332882d08 prev 0x7fa332883d88 <line:594:1, line:595:60> col:60 radix 'const int' constexpr
| |   |-VarDecl 0x7fa332887268 parent 0x7fa332882d08 prev 0x7fa332884118 <line:596:1, line:597:60> col:60 min_exponent 'const int' constexpr
| |   |-VarDecl 0x7fa332887508 parent 0x7fa332882d08 prev 0x7fa332884208 <line:598:1, line:599:60> col:60 min_exponent10 'const int' constexpr
| |   |-VarDecl 0x7fa3328877a8 parent 0x7fa332882d08 prev 0x7fa3328842f8 <line:600:1, line:601:60> col:60 max_exponent 'const int' constexpr
| |   |-VarDecl 0x7fa332887a48 parent 0x7fa332882d08 prev 0x7fa3328843e8 <line:602:1, line:603:60> col:60 max_exponent10 'const int' constexpr
| |   |-VarDecl 0x7fa332887ce0 parent 0x7fa332882d08 prev 0x7fa3328844d0 <line:604:1, line:605:61> col:61 has_infinity 'const _Bool' constexpr
| |   |-VarDecl 0x7fa332887f70 parent 0x7fa332882d08 prev 0x7fa3328845b8 <line:606:1, line:607:61> col:61 has_quiet_NaN 'const _Bool' constexpr
| |   |-VarDecl 0x7fa332888200 parent 0x7fa332882d08 prev 0x7fa3328846a0 <line:608:1, line:609:61> col:61 has_signaling_NaN 'const _Bool' constexpr
| |   |-VarDecl 0x7fa332888490 parent 0x7fa332882d08 prev 0x7fa332884788 <line:610:1, line:611:75> col:75 has_denorm 'const enum std::__1::float_denorm_style' constexpr
| |   |-VarDecl 0x7fa332888720 parent 0x7fa332882d08 prev 0x7fa332884870 <line:612:1, line:613:61> col:61 has_denorm_loss 'const _Bool' constexpr
| |   |-VarDecl 0x7fa3328889b0 parent 0x7fa332882d08 prev 0x7fa332884e78 <line:614:1, line:615:61> col:61 is_iec559 'const _Bool' constexpr
| |   |-VarDecl 0x7fa332888c40 parent 0x7fa332882d08 prev 0x7fa332884f60 <line:616:1, line:617:61> col:61 is_bounded 'const _Bool' constexpr
| |   |-VarDecl 0x7fa332888ed0 parent 0x7fa332882d08 prev 0x7fa332885048 <line:618:1, line:619:61> col:61 is_modulo 'const _Bool' constexpr
| |   |-VarDecl 0x7fa332889160 parent 0x7fa332882d08 prev 0x7fa332885130 <line:620:1, line:621:61> col:61 traps 'const _Bool' constexpr
| |   |-VarDecl 0x7fa3328893f0 parent 0x7fa332882d08 prev 0x7fa332885218 <line:622:1, line:623:61> col:61 tinyness_before 'const _Bool' constexpr
| |   |-VarDecl 0x7fa332889680 parent 0x7fa332882d08 prev 0x7fa332885300 <line:624:1, line:625:74> col:74 round_style 'const enum std::__1::float_round_style' constexpr
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa3328898b8 <line:627:1, line:671:1> line:628:28 class numeric_limits definition
| |   | |-private 'numeric_limits<_Tp>'
| |   | |-TemplateArgument type 'volatile type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fa332889720 <line:627:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fa3328899f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fa332889be8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:628:1, col:28> col:28 implicit class numeric_limits
| |   | |-TypedefDecl 0x7fa332889d38 <line:631:5, col:33> col:33 referenced __base 'numeric_limits<_Tp>'
| |   | | `-TemplateSpecializationType 0x7fa332889c90 'numeric_limits<_Tp>' dependent numeric_limits
| |   | |   `-TemplateArgument type '_Tp'
| |   | |-TypedefDecl 0x7fa332889da0 <line:632:5, col:17> col:17 referenced type '_Tp'
| |   | | `-TemplateTypeParmType 0x7fa332889760 '_Tp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fa332889720 '_Tp'
| |   | |-AccessSpecDecl 0x7fa332889e00 <line:633:1, col:7> col:1 public
| |   | |-VarDecl 0x7fa332889e38 <line:634:5, col:66> col:41 is_specialized 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fa332889f10 <col:58, col:66> '<dependent type>' lvalue
| |   | |-CXXMethodDecl 0x7fa33288a028 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:635:99> col:61 constexpr min 'std::__1::numeric_limits<volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fa33288c098 <col:77, col:99>
| |   | | | `-ReturnStmt 0x7fa33288c080 <col:78, col:97>
| |   | | |   `-CallExpr 0x7fa33288c058 <col:85, col:97> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fa33288c018 <col:85, col:93> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fa33288a0c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fa33288a108 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fa33288a170 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:636:99> col:61 constexpr max 'std::__1::numeric_limits<volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fa33288c170 <col:77, col:99>
| |   | | | `-ReturnStmt 0x7fa33288c158 <col:78, col:97>
| |   | | |   `-CallExpr 0x7fa33288c130 <col:85, col:97> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fa33288c0f0 <col:85, col:93> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fa33288a208 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fa33288a250 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fa33288a2b8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:637:105> col:61 constexpr lowest 'std::__1::numeric_limits<volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fa33288c248 <col:80, col:105>
| |   | | | `-ReturnStmt 0x7fa33288c230 <col:81, col:103>
| |   | | |   `-CallExpr 0x7fa33288c208 <col:88, col:103> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fa33288c1c8 <col:88, col:96> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fa33288a350 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fa33288a398 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fa33288a3c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:639:5, col:58> col:41 digits 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fa33288a458 <col:50, col:58> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fa33288a4b0 <line:640:5, col:60> col:41 digits10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fa33288a548 <col:52, col:60> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fa33288a5a0 <line:641:5, col:64> col:41 max_digits10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fa33288a638 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fa33288a688 <line:642:5, col:61> col:41 is_signed 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fa33288a720 <col:53, col:61> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fa33288a770 <line:643:5, col:62> col:41 is_integer 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fa33288a808 <col:54, col:62> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fa33288a858 <line:644:5, col:60> col:41 is_exact 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fa33288a8f0 <col:52, col:60> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fa33288a948 <line:645:5, col:57> col:41 radix 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fa33288a9e0 <col:49, col:57> '<dependent type>' lvalue
| |   | |-CXXMethodDecl 0x7fa33288aa78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:646:107> col:61 constexpr epsilon 'std::__1::numeric_limits<volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fa33288c320 <col:81, col:107>
| |   | | | `-ReturnStmt 0x7fa33288c308 <col:82, col:105>
| |   | | |   `-CallExpr 0x7fa33288c2e0 <col:89, col:105> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fa33288c2a0 <col:89, col:97> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fa33288ab10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fa33288ab58 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fa33288abc0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:647:115> col:61 constexpr round_error 'std::__1::numeric_limits<volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fa33288c3f8 <col:85, col:115>
| |   | | | `-ReturnStmt 0x7fa33288c3e0 <col:86, col:113>
| |   | | |   `-CallExpr 0x7fa33288c3b8 <col:93, col:113> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fa33288c378 <col:93, col:101> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fa33288ac58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fa33288aca0 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fa33288acc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:649:5, col:64> col:41 min_exponent 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fa33288ad60 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fa33288adb8 <line:650:5, col:66> col:41 min_exponent10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fa33288ae50 <col:58, col:66> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fa33288aea8 <line:651:5, col:64> col:41 max_exponent 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fa33288af40 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fa33288af98 <line:652:5, col:66> col:41 max_exponent10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fa33288b030 <col:58, col:66> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fa33288b080 <line:654:5, col:64> col:41 has_infinity 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fa33288b118 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fa33288b168 <line:655:5, col:65> col:41 has_quiet_NaN 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fa33288b200 <col:57, col:65> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fa33288b250 <line:656:5, col:69> col:41 has_signaling_NaN 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fa33288b2e8 <col:61, col:69> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fa33288b338 <line:657:5, col:76> col:55 has_denorm 'const enum std::__1::float_denorm_style' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fa33288b3d0 <col:68, col:76> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fa33288b420 <line:658:5, col:67> col:41 has_denorm_loss 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fa33288b4b8 <col:59, col:67> '<dependent type>' lvalue
| |   | |-CXXMethodDecl 0x7fa33288b550 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:659:109> col:61 constexpr infinity 'std::__1::numeric_limits<volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fa33288c4d0 <col:82, col:109>
| |   | | | `-ReturnStmt 0x7fa33288c4b8 <col:83, col:107>
| |   | | |   `-CallExpr 0x7fa33288c490 <col:90, col:107> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fa33288c450 <col:90, col:98> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fa33288b5e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fa33288b630 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fa33288b698 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:660:111> col:61 constexpr quiet_NaN 'std::__1::numeric_limits<volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fa33288c5a8 <col:83, col:111>
| |   | | | `-ReturnStmt 0x7fa33288c590 <col:84, col:109>
| |   | | |   `-CallExpr 0x7fa33288c568 <col:91, col:109> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fa33288c528 <col:91, col:99> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fa33288b730 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fa33288b778 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fa33288b7e0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:661:119> col:61 constexpr signaling_NaN 'std::__1::numeric_limits<volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fa33288c680 <col:87, col:119>
| |   | | | `-ReturnStmt 0x7fa33288c668 <col:88, col:117>
| |   | | |   `-CallExpr 0x7fa33288c640 <col:95, col:117> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fa33288c600 <col:95, col:103> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fa33288b878 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fa33288b8c0 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fa33288b928 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:662:113> col:61 constexpr denorm_min 'std::__1::numeric_limits<volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fa33288c758 <col:84, col:113>
| |   | | | `-ReturnStmt 0x7fa33288c740 <col:85, col:111>
| |   | | |   `-CallExpr 0x7fa33288c718 <col:92, col:111> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fa33288c6d8 <col:92, col:100> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fa33288b9c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fa33288ba08 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fa33288ba28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:664:5, col:61> col:41 is_iec559 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fa33288bac0 <col:53, col:61> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fa33288bb10 <line:665:5, col:62> col:41 is_bounded 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fa33288bba8 <col:54, col:62> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fa33288bbf8 <line:666:5, col:61> col:41 is_modulo 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fa33288bc90 <col:53, col:61> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fa33288bce0 <line:668:5, col:57> col:41 traps 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fa33288bd78 <col:49, col:57> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fa33288be00 <line:669:5, col:67> col:41 tinyness_before 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fa33288be98 <col:59, col:67> '<dependent type>' lvalue
| |   | `-VarDecl 0x7fa33288bee8 <line:670:5, col:76> col:54 round_style 'const enum std::__1::float_round_style' static constexpr cinit
| |   |   `-DependentScopeDeclRefExpr 0x7fa33288bf80 <col:68, col:76> '<dependent type>' lvalue
| |   |-VarDecl 0x7fa33288c970 parent 0x7fa3328898b8 prev 0x7fa332889e38 <line:673:1, line:674:64> col:64 is_specialized 'const _Bool' constexpr
| |   |-VarDecl 0x7fa33288cc08 parent 0x7fa3328898b8 prev 0x7fa33288a3c0 <line:675:1, line:676:63> col:63 digits 'const int' constexpr
| |   |-VarDecl 0x7fa33288cea8 parent 0x7fa3328898b8 prev 0x7fa33288a4b0 <line:677:1, line:678:63> col:63 digits10 'const int' constexpr
| |   |-VarDecl 0x7fa33288d148 parent 0x7fa3328898b8 prev 0x7fa33288a5a0 <line:679:1, line:680:63> col:63 max_digits10 'const int' constexpr
| |   |-VarDecl 0x7fa33288d3e0 parent 0x7fa3328898b8 prev 0x7fa33288a688 <line:681:1, line:682:64> col:64 is_signed 'const _Bool' constexpr
| |   |-VarDecl 0x7fa33288d670 parent 0x7fa3328898b8 prev 0x7fa33288a770 <line:683:1, line:684:64> col:64 is_integer 'const _Bool' constexpr
| |   |-VarDecl 0x7fa33288d900 parent 0x7fa3328898b8 prev 0x7fa33288a858 <line:685:1, line:686:64> col:64 is_exact 'const _Bool' constexpr
| |   |-VarDecl 0x7fa33288db98 parent 0x7fa3328898b8 prev 0x7fa33288a948 <line:687:1, line:688:63> col:63 radix 'const int' constexpr
| |   |-VarDecl 0x7fa33288de40 parent 0x7fa3328898b8 prev 0x7fa33288acc8 <line:689:1, line:690:63> col:63 min_exponent 'const int' constexpr
| |   |-VarDecl 0x7fa33288e0d8 parent 0x7fa3328898b8 prev 0x7fa33288adb8 <line:691:1, line:692:63> col:63 min_exponent10 'const int' constexpr
| |   |-VarDecl 0x7fa33288e378 parent 0x7fa3328898b8 prev 0x7fa33288aea8 <line:693:1, line:694:63> col:63 max_exponent 'const int' constexpr
| |   |-VarDecl 0x7fa33288e618 parent 0x7fa3328898b8 prev 0x7fa33288af98 <line:695:1, line:696:63> col:63 max_exponent10 'const int' constexpr
| |   |-VarDecl 0x7fa33288e8b0 parent 0x7fa3328898b8 prev 0x7fa33288b080 <line:697:1, line:698:64> col:64 has_infinity 'const _Bool' constexpr
| |   |-VarDecl 0x7fa33288eb40 parent 0x7fa3328898b8 prev 0x7fa33288b168 <line:699:1, line:700:64> col:64 has_quiet_NaN 'const _Bool' constexpr
| |   |-VarDecl 0x7fa33288edd0 parent 0x7fa3328898b8 prev 0x7fa33288b250 <line:701:1, line:702:64> col:64 has_signaling_NaN 'const _Bool' constexpr
| |   |-VarDecl 0x7fa33288f060 parent 0x7fa3328898b8 prev 0x7fa33288b338 <line:703:1, line:704:78> col:78 has_denorm 'const enum std::__1::float_denorm_style' constexpr
| |   |-VarDecl 0x7fa33288f2f0 parent 0x7fa3328898b8 prev 0x7fa33288b420 <line:705:1, line:706:64> col:64 has_denorm_loss 'const _Bool' constexpr
| |   |-VarDecl 0x7fa33288f580 parent 0x7fa3328898b8 prev 0x7fa33288ba28 <line:707:1, line:708:64> col:64 is_iec559 'const _Bool' constexpr
| |   |-VarDecl 0x7fa33288f810 parent 0x7fa3328898b8 prev 0x7fa33288bb10 <line:709:1, line:710:64> col:64 is_bounded 'const _Bool' constexpr
| |   |-VarDecl 0x7fa33288faa0 parent 0x7fa3328898b8 prev 0x7fa33288bbf8 <line:711:1, line:712:64> col:64 is_modulo 'const _Bool' constexpr
| |   |-VarDecl 0x7fa33288fd30 parent 0x7fa3328898b8 prev 0x7fa33288bce0 <line:713:1, line:714:64> col:64 traps 'const _Bool' constexpr
| |   |-VarDecl 0x7fa33288fff0 parent 0x7fa3328898b8 prev 0x7fa33288be00 <line:715:1, line:716:64> col:64 tinyness_before 'const _Bool' constexpr
| |   |-VarDecl 0x7fa332890280 parent 0x7fa3328898b8 prev 0x7fa33288bee8 <line:717:1, line:718:77> col:77 round_style 'const enum std::__1::float_round_style' constexpr
| |   |-ClassTemplatePartialSpecializationDecl 0x7fa3328904b8 <line:720:1, line:764:1> line:721:28 class numeric_limits definition
| |   | |-private 'numeric_limits<_Tp>'
| |   | |-TemplateArgument type 'const volatile type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fa332890320 <line:720:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fa3328905f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fa3328907e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:721:1, col:28> col:28 implicit class numeric_limits
| |   | |-TypedefDecl 0x7fa332890938 <line:724:5, col:33> col:33 referenced __base 'numeric_limits<_Tp>'
| |   | | `-TemplateSpecializationType 0x7fa332890890 'numeric_limits<_Tp>' dependent numeric_limits
| |   | |   `-TemplateArgument type '_Tp'
| |   | |-TypedefDecl 0x7fa3328909a0 <line:725:5, col:17> col:17 referenced type '_Tp'
| |   | | `-TemplateTypeParmType 0x7fa332890360 '_Tp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fa332890320 '_Tp'
| |   | |-AccessSpecDecl 0x7fa3328909f8 <line:726:1, col:7> col:1 public
| |   | |-VarDecl 0x7fa332890a30 <line:727:5, col:66> col:41 is_specialized 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fa332890b00 <col:58, col:66> '<dependent type>' lvalue
| |   | |-CXXMethodDecl 0x7fa332890c18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:728:99> col:61 constexpr min 'std::__1::numeric_limits<const volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fa332892c60 <col:77, col:99>
| |   | | | `-ReturnStmt 0x7fa332892c48 <col:78, col:97>
| |   | | |   `-CallExpr 0x7fa332892c20 <col:85, col:97> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fa332892be0 <col:85, col:93> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fa332890cb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fa332890cf8 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fa332890d60 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:729:99> col:61 constexpr max 'std::__1::numeric_limits<const volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fa332892d38 <col:77, col:99>
| |   | | | `-ReturnStmt 0x7fa332892d20 <col:78, col:97>
| |   | | |   `-CallExpr 0x7fa332892cf8 <col:85, col:97> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fa332892cb8 <col:85, col:93> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fa332890df8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fa332890e40 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fa332890ea8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:730:105> col:61 constexpr lowest 'std::__1::numeric_limits<const volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fa332892e10 <col:80, col:105>
| |   | | | `-ReturnStmt 0x7fa332892df8 <col:81, col:103>
| |   | | |   `-CallExpr 0x7fa332892dd0 <col:88, col:103> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fa332892d90 <col:88, col:96> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fa332890f40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fa332890f88 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fa332890fb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:732:5, col:58> col:41 digits 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fa332891048 <col:50, col:58> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fa3328910a0 <line:733:5, col:60> col:41 digits10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fa332891138 <col:52, col:60> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fa332891190 <line:734:5, col:64> col:41 max_digits10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fa332891228 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fa332891278 <line:735:5, col:61> col:41 is_signed 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fa332891310 <col:53, col:61> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fa332891360 <line:736:5, col:62> col:41 is_integer 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fa3328913f8 <col:54, col:62> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fa332891448 <line:737:5, col:60> col:41 is_exact 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fa3328914e0 <col:52, col:60> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fa332891538 <line:738:5, col:57> col:41 radix 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fa3328915d0 <col:49, col:57> '<dependent type>' lvalue
| |   | |-CXXMethodDecl 0x7fa332891668 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:739:107> col:61 constexpr epsilon 'std::__1::numeric_limits<const volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fa332892ee8 <col:81, col:107>
| |   | | | `-ReturnStmt 0x7fa332892ed0 <col:82, col:105>
| |   | | |   `-CallExpr 0x7fa332892ea8 <col:89, col:105> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fa332892e68 <col:89, col:97> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fa332891700 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fa332891748 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fa3328917b0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:740:115> col:61 constexpr round_error 'std::__1::numeric_limits<const volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fa332892fc0 <col:85, col:115>
| |   | | | `-ReturnStmt 0x7fa332892fa8 <col:86, col:113>
| |   | | |   `-CallExpr 0x7fa332892f80 <col:93, col:113> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fa332892f40 <col:93, col:101> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fa332891848 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fa332891890 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fa3328918b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:742:5, col:64> col:41 min_exponent 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fa332891950 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fa3328919a8 <line:743:5, col:66> col:41 min_exponent10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fa332891a40 <col:58, col:66> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fa332891a98 <line:744:5, col:64> col:41 max_exponent 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fa332891b30 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fa332891b88 <line:745:5, col:66> col:41 max_exponent10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fa332891c20 <col:58, col:66> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fa332891c70 <line:747:5, col:64> col:41 has_infinity 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fa332891d08 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fa332891d58 <line:748:5, col:65> col:41 has_quiet_NaN 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fa332891e00 <col:57, col:65> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fa332891e50 <line:749:5, col:69> col:41 has_signaling_NaN 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fa332891ee8 <col:61, col:69> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fa332891f38 <line:750:5, col:76> col:55 has_denorm 'const enum std::__1::float_denorm_style' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fa332891fd0 <col:68, col:76> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fa332892020 <line:751:5, col:67> col:41 has_denorm_loss 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fa3328920b8 <col:59, col:67> '<dependent type>' lvalue
| |   | |-CXXMethodDecl 0x7fa332892150 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:752:109> col:61 constexpr infinity 'std::__1::numeric_limits<const volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fa332893098 <col:82, col:109>
| |   | | | `-ReturnStmt 0x7fa332893080 <col:83, col:107>
| |   | | |   `-CallExpr 0x7fa332893058 <col:90, col:107> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fa332893018 <col:90, col:98> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fa3328921e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fa332892230 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fa332892298 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:753:111> col:61 constexpr quiet_NaN 'std::__1::numeric_limits<const volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fa332893170 <col:83, col:111>
| |   | | | `-ReturnStmt 0x7fa332893158 <col:84, col:109>
| |   | | |   `-CallExpr 0x7fa332893130 <col:91, col:109> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fa3328930f0 <col:91, col:99> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fa332892330 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fa332892378 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fa3328923e0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:754:119> col:61 constexpr signaling_NaN 'std::__1::numeric_limits<const volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fa332893248 <col:87, col:119>
| |   | | | `-ReturnStmt 0x7fa332893230 <col:88, col:117>
| |   | | |   `-CallExpr 0x7fa332893208 <col:95, col:117> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fa3328931c8 <col:95, col:103> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fa332892478 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fa3328924c0 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fa332892528 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:755:113> col:61 constexpr denorm_min 'std::__1::numeric_limits<const volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fa332893320 <col:84, col:113>
| |   | | | `-ReturnStmt 0x7fa332893308 <col:85, col:111>
| |   | | |   `-CallExpr 0x7fa3328932e0 <col:92, col:111> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fa3328932a0 <col:92, col:100> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fa3328925c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fa332892608 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fa332892628 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:757:5, col:61> col:41 is_iec559 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fa3328926c0 <col:53, col:61> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fa332892710 <line:758:5, col:62> col:41 is_bounded 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fa3328927a8 <col:54, col:62> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fa3328927f8 <line:759:5, col:61> col:41 is_modulo 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fa332892890 <col:53, col:61> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fa3328928e0 <line:761:5, col:57> col:41 traps 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fa332892978 <col:49, col:57> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fa3328929c8 <line:762:5, col:67> col:41 tinyness_before 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fa332892a60 <col:59, col:67> '<dependent type>' lvalue
| |   | `-VarDecl 0x7fa332892ab0 <line:763:5, col:76> col:54 round_style 'const enum std::__1::float_round_style' static constexpr cinit
| |   |   `-DependentScopeDeclRefExpr 0x7fa332892b48 <col:68, col:76> '<dependent type>' lvalue
| |   |-VarDecl 0x7fa332893530 parent 0x7fa3328904b8 prev 0x7fa332890a30 <line:766:1, line:767:70> col:70 is_specialized 'const _Bool' constexpr
| |   |-VarDecl 0x7fa3328937c8 parent 0x7fa3328904b8 prev 0x7fa332890fb0 <line:768:1, line:769:69> col:69 digits 'const int' constexpr
| |   |-VarDecl 0x7fa332893a68 parent 0x7fa3328904b8 prev 0x7fa3328910a0 <line:770:1, line:771:69> col:69 digits10 'const int' constexpr
| |   |-VarDecl 0x7fa332893d08 parent 0x7fa3328904b8 prev 0x7fa332891190 <line:772:1, line:773:69> col:69 max_digits10 'const int' constexpr
| |   |-VarDecl 0x7fa332893fb0 parent 0x7fa3328904b8 prev 0x7fa332891278 <line:774:1, line:775:70> col:70 is_signed 'const _Bool' constexpr
| |   |-VarDecl 0x7fa332894240 parent 0x7fa3328904b8 prev 0x7fa332891360 <line:776:1, line:777:70> col:70 is_integer 'const _Bool' constexpr
| |   |-VarDecl 0x7fa3328944d0 parent 0x7fa3328904b8 prev 0x7fa332891448 <line:778:1, line:779:70> col:70 is_exact 'const _Bool' constexpr
| |   |-VarDecl 0x7fa332894768 parent 0x7fa3328904b8 prev 0x7fa332891538 <line:780:1, line:781:69> col:69 radix 'const int' constexpr
| |   |-VarDecl 0x7fa332894a08 parent 0x7fa3328904b8 prev 0x7fa3328918b8 <line:782:1, line:783:69> col:69 min_exponent 'const int' constexpr
| |   |-VarDecl 0x7fa332894ca8 parent 0x7fa3328904b8 prev 0x7fa3328919a8 <line:784:1, line:785:69> col:69 min_exponent10 'const int' constexpr
| |   |-VarDecl 0x7fa332894f48 parent 0x7fa3328904b8 prev 0x7fa332891a98 <line:786:1, line:787:69> col:69 max_exponent 'const int' constexpr
| |   |-VarDecl 0x7fa3328951e8 parent 0x7fa3328904b8 prev 0x7fa332891b88 <line:788:1, line:789:69> col:69 max_exponent10 'const int' constexpr
| |   |-VarDecl 0x7fa332895480 parent 0x7fa3328904b8 prev 0x7fa332891c70 <line:790:1, line:791:70> col:70 has_infinity 'const _Bool' constexpr
| |   |-VarDecl 0x7fa332895710 parent 0x7fa3328904b8 prev 0x7fa332891d58 <line:792:1, line:793:70> col:70 has_quiet_NaN 'const _Bool' constexpr
| |   |-VarDecl 0x7fa3328959a0 parent 0x7fa3328904b8 prev 0x7fa332891e50 <line:794:1, line:795:70> col:70 has_signaling_NaN 'const _Bool' constexpr
| |   |-VarDecl 0x7fa332895c30 parent 0x7fa3328904b8 prev 0x7fa332891f38 <line:796:1, line:797:84> col:84 has_denorm 'const enum std::__1::float_denorm_style' constexpr
| |   |-VarDecl 0x7fa332895ec0 parent 0x7fa3328904b8 prev 0x7fa332892020 <line:798:1, line:799:70> col:70 has_denorm_loss 'const _Bool' constexpr
| |   |-VarDecl 0x7fa332896150 parent 0x7fa3328904b8 prev 0x7fa332892628 <line:800:1, line:801:70> col:70 is_iec559 'const _Bool' constexpr
| |   |-VarDecl 0x7fa3328963e0 parent 0x7fa3328904b8 prev 0x7fa332892710 <line:802:1, line:803:70> col:70 is_bounded 'const _Bool' constexpr
| |   |-VarDecl 0x7fa332896670 parent 0x7fa3328904b8 prev 0x7fa3328927f8 <line:804:1, line:805:70> col:70 is_modulo 'const _Bool' constexpr
| |   |-VarDecl 0x7fa332896900 parent 0x7fa3328904b8 prev 0x7fa3328928e0 <line:806:1, line:807:70> col:70 traps 'const _Bool' constexpr
| |   |-VarDecl 0x7fa332896b90 parent 0x7fa3328904b8 prev 0x7fa3328929c8 <line:808:1, line:809:70> col:70 tinyness_before 'const _Bool' constexpr
| |   `-VarDecl 0x7fa332896e20 parent 0x7fa3328904b8 prev 0x7fa332892ab0 <line:810:1, line:811:83> col:83 round_style 'const enum std::__1::float_round_style' constexpr
| |-FunctionTemplateDecl 0x7fa332897120 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:316:1, line:322:1> line:319:1 __libcpp_signbit
| | |-TemplateTypeParmDecl 0x7fa332896ec0 <line:316:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fa332897088 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:322:1> line:319:1 __libcpp_signbit '_Bool (_A1) noexcept'
| |   |-ParmVarDecl 0x7fa332896f80 <col:18, col:22> col:22 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fa332897890 <line:320:1, line:322:1>
| |   | `-ReturnStmt 0x7fa332897878 <line:321:5, /usr/include/math.h:186:72>
| |   |   `-ImplicitCastExpr 0x7fa332897860 <line:184:5, line:186:72> '_Bool' <IntegralToBoolean>
| |   |     `-ParenExpr 0x7fa332897840 <line:184:5, line:186:72> 'int'
| |   |       `-ConditionalOperator 0x7fa332897810 <line:184:7, line:186:71> 'int'
| |   |         |-BinaryOperator 0x7fa332897270 <line:184:7, col:32> '_Bool' '=='
| |   |         | |-UnaryExprOrTypeTraitExpr 0x7fa332897218 <col:7, col:15> 'unsigned long' sizeof
| |   |         | | `-ParenExpr 0x7fa3328971f8 <col:13, col:15> '_A1' lvalue
| |   |         | |   `-DeclRefExpr 0x7fa3328971d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:321:20> '_A1' lvalue ParmVar 0x7fa332896f80 '__lcpp_x' '_A1'
| |   |         | `-UnaryExprOrTypeTraitExpr 0x7fa332897250 </usr/include/math.h:184:20, col:32> 'unsigned long' sizeof 'float'
| |   |         |-CallExpr 0x7fa3328973e8 <col:37, col:65> 'int'
| |   |         | |-ImplicitCastExpr 0x7fa3328973d0 <col:37> 'int (*)(float)' <FunctionToPointerDecay>
| |   |         | | `-DeclRefExpr 0x7fa3328973a8 <col:37> 'int (float)' lvalue Function 0x7fa3330d5668 '__inline_signbitf' 'int (float)'
| |   |         | `-CStyleCastExpr 0x7fa332897380 <col:55, col:64> 'float' <Dependent>
| |   |         |   `-ParenExpr 0x7fa332897360 <col:62, col:64> '_A1' lvalue
| |   |         |     `-DeclRefExpr 0x7fa3328972f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:321:20> '_A1' lvalue ParmVar 0x7fa332896f80 '__lcpp_x' '_A1'
| |   |         `-ConditionalOperator 0x7fa3328977e0 </usr/include/math.h:185:7, line:186:71> 'int'
| |   |           |-BinaryOperator 0x7fa3328974b8 <line:185:7, col:33> '_Bool' '=='
| |   |           | |-UnaryExprOrTypeTraitExpr 0x7fa332897460 <col:7, col:15> 'unsigned long' sizeof
| |   |           | | `-ParenExpr 0x7fa332897440 <col:13, col:15> '_A1' lvalue
| |   |           | |   `-DeclRefExpr 0x7fa332897418 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:321:20> '_A1' lvalue ParmVar 0x7fa332896f80 '__lcpp_x' '_A1'
| |   |           | `-UnaryExprOrTypeTraitExpr 0x7fa332897498 </usr/include/math.h:185:20, col:33> 'unsigned long' sizeof 'double'
| |   |           |-CallExpr 0x7fa332897630 <col:37, col:66> 'int'
| |   |           | |-ImplicitCastExpr 0x7fa332897618 <col:37> 'int (*)(double)' <FunctionToPointerDecay>
| |   |           | | `-DeclRefExpr 0x7fa3328975f0 <col:37> 'int (double)' lvalue Function 0x7fa3330d73b0 '__inline_signbitd' 'int (double)'
| |   |           | `-CStyleCastExpr 0x7fa3328975c8 <col:55, col:65> 'double' <Dependent>
| |   |           |   `-ParenExpr 0x7fa3328975a8 <col:63, col:65> '_A1' lvalue
| |   |           |     `-DeclRefExpr 0x7fa332897538 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:321:20> '_A1' lvalue ParmVar 0x7fa332896f80 '__lcpp_x' '_A1'
| |   |           `-CallExpr 0x7fa3328977b0 </usr/include/math.h:186:37, col:71> 'int'
| |   |             |-ImplicitCastExpr 0x7fa332897798 <col:37> 'int (*)(long double)' <FunctionToPointerDecay>
| |   |             | `-DeclRefExpr 0x7fa332897770 <col:37> 'int (long double)' lvalue Function 0x7fa3330d9a88 '__inline_signbitl' 'int (long double)'
| |   |             `-CStyleCastExpr 0x7fa332897748 <col:55, col:70> 'long double' <Dependent>
| |   |               `-ParenExpr 0x7fa332897728 <col:68, col:70> '_A1' lvalue
| |   |                 `-DeclRefExpr 0x7fa3328976b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:321:20> '_A1' lvalue ParmVar 0x7fa332896f80 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fa332897178 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7fa3328971c0 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fa332897e98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:326:1, line:332:1> line:329:1 signbit
| | |-TemplateTypeParmDecl 0x7fa3328978b0 <line:326:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fa332897e00 <line:327:1, line:332:1> line:329:1 signbit 'typename std::enable_if<std::is_floating_point<_A1>::value, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fa332897cc0 <col:9, col:13> col:13 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fa332898248 <line:330:1, line:332:1>
| |   | `-ReturnStmt 0x7fa332898230 <line:331:5, col:73>
| |   |   `-CallExpr 0x7fa332898200 <col:12, col:73> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fa332897f48 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_signbit' 0x7fa332897120
| |   |     `-CStyleCastExpr 0x7fa3328981d8 <col:29, col:65> 'typename std::__promote<_A1>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fa332898190 <col:65> '_A1' lvalue ParmVar 0x7fa332897cc0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fa332897ef0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fa332897f38 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fa332898990 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:334:1, line:339:24> line:338:1 signbit
| | |-TemplateTypeParmDecl 0x7fa332898268 <line:334:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fa3328988f8 <line:335:1, line:339:24> line:338:1 signbit 'typename std::enable_if<std::is_integral<_A1>::value && std::is_signed<_A1>::value, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fa3328987e0 <col:9, col:13> col:13 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fa332898ac8 <line:339:1, col:24>
| |   | `-ReturnStmt 0x7fa332898ab0 <col:3, col:21>
| |   |   `-BinaryOperator 0x7fa332898a88 <col:10, col:21> '<dependent type>' '<'
| |   |     |-DeclRefExpr 0x7fa332898a40 <col:10> '_A1' lvalue ParmVar 0x7fa3328987e0 '__lcpp_x' '_A1'
| |   |     `-IntegerLiteral 0x7fa332898a68 <col:21> 'int' 0
| |   |-AlwaysInlineAttr 0x7fa3328989e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fa332898a30 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fa3328991e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:341:1, line:346:17> line:345:1 signbit
| | |-TemplateTypeParmDecl 0x7fa332898ae8 <line:341:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fa332899148 <line:342:1, line:346:17> line:345:1 signbit 'typename std::enable_if<std::is_integral<_A1>::value && !std::is_signed<_A1>::value, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fa332899030 <col:9> col:12 '_A1'
| |   |-CompoundStmt 0x7fa3328992c0 <line:346:1, col:17>
| |   | `-ReturnStmt 0x7fa3328992a8 <col:3, col:10>
| |   |   `-CXXBoolLiteralExpr 0x7fa332899290 <col:10> '_Bool' false
| |   |-AlwaysInlineAttr 0x7fa332899238 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fa332899280 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fa332899548 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:378:1, line:384:1> line:381:1 __libcpp_fpclassify
| | |-TemplateTypeParmDecl 0x7fa3328992e0 <line:378:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fa3328994b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:384:1> line:381:1 __libcpp_fpclassify 'int (_A1) noexcept'
| |   |-ParmVarDecl 0x7fa3328993a0 <col:21, col:25> col:25 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fa332899ca0 <line:382:1, line:384:1>
| |   | `-ReturnStmt 0x7fa332899c88 <line:383:5, /usr/include/math.h:142:68>
| |   |   `-ParenExpr 0x7fa332899c68 <line:140:5, line:142:68> 'int'
| |   |     `-ConditionalOperator 0x7fa332899c38 <line:140:7, line:142:67> 'int'
| |   |       |-BinaryOperator 0x7fa332899698 <line:140:7, col:32> '_Bool' '=='
| |   |       | |-UnaryExprOrTypeTraitExpr 0x7fa332899640 <col:7, col:15> 'unsigned long' sizeof
| |   |       | | `-ParenExpr 0x7fa332899620 <col:13, col:15> '_A1' lvalue
| |   |       | |   `-DeclRefExpr 0x7fa3328995f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:383:23> '_A1' lvalue ParmVar 0x7fa3328993a0 '__lcpp_x' '_A1'
| |   |       | `-UnaryExprOrTypeTraitExpr 0x7fa332899678 </usr/include/math.h:140:20, col:32> 'unsigned long' sizeof 'float'
| |   |       |-CallExpr 0x7fa332899810 <col:37, col:61> 'int'
| |   |       | |-ImplicitCastExpr 0x7fa3328997f8 <col:37> 'int (*)(float)' <FunctionToPointerDecay>
| |   |       | | `-DeclRefExpr 0x7fa3328997d0 <col:37> 'int (float)' lvalue Function 0x7fa33302f398 '__fpclassifyf' 'int (float)'
| |   |       | `-CStyleCastExpr 0x7fa3328997a8 <col:51, col:60> 'float' <Dependent>
| |   |       |   `-ParenExpr 0x7fa332899788 <col:58, col:60> '_A1' lvalue
| |   |       |     `-DeclRefExpr 0x7fa332899718 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:383:23> '_A1' lvalue ParmVar 0x7fa3328993a0 '__lcpp_x' '_A1'
| |   |       `-ConditionalOperator 0x7fa332899c08 </usr/include/math.h:141:7, line:142:67> 'int'
| |   |         |-BinaryOperator 0x7fa3328998e0 <line:141:7, col:33> '_Bool' '=='
| |   |         | |-UnaryExprOrTypeTraitExpr 0x7fa332899888 <col:7, col:15> 'unsigned long' sizeof
| |   |         | | `-ParenExpr 0x7fa332899868 <col:13, col:15> '_A1' lvalue
| |   |         | |   `-DeclRefExpr 0x7fa332899840 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:383:23> '_A1' lvalue ParmVar 0x7fa3328993a0 '__lcpp_x' '_A1'
| |   |         | `-UnaryExprOrTypeTraitExpr 0x7fa3328998c0 </usr/include/math.h:141:20, col:33> 'unsigned long' sizeof 'double'
| |   |         |-CallExpr 0x7fa332899a58 <col:37, col:62> 'int'
| |   |         | |-ImplicitCastExpr 0x7fa332899a40 <col:37> 'int (*)(double)' <FunctionToPointerDecay>
| |   |         | | `-DeclRefExpr 0x7fa332899a18 <col:37> 'int (double)' lvalue Function 0x7fa33302f518 '__fpclassifyd' 'int (double)'
| |   |         | `-CStyleCastExpr 0x7fa3328999f0 <col:51, col:61> 'double' <Dependent>
| |   |         |   `-ParenExpr 0x7fa3328999d0 <col:59, col:61> '_A1' lvalue
| |   |         |     `-DeclRefExpr 0x7fa332899960 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:383:23> '_A1' lvalue ParmVar 0x7fa3328993a0 '__lcpp_x' '_A1'
| |   |         `-CallExpr 0x7fa332899bd8 </usr/include/math.h:142:37, col:67> 'int'
| |   |           |-ImplicitCastExpr 0x7fa332899bc0 <col:37> 'int (*)(long double)' <FunctionToPointerDecay>
| |   |           | `-DeclRefExpr 0x7fa332899b98 <col:37> 'int (long double)' lvalue Function 0x7fa33302f698 '__fpclassifyl' 'int (long double)'
| |   |           `-CStyleCastExpr 0x7fa332899b70 <col:51, col:66> 'long double' <Dependent>
| |   |             `-ParenExpr 0x7fa332899b50 <col:64, col:66> '_A1' lvalue
| |   |               `-DeclRefExpr 0x7fa332899ae0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:383:23> '_A1' lvalue ParmVar 0x7fa3328993a0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fa3328995a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7fa3328995e8 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fa33289a260 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:388:1, line:394:1> line:391:1 fpclassify
| | |-TemplateTypeParmDecl 0x7fa332899cc0 <line:388:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fa33289a1c8 <line:389:1, line:394:1> line:391:1 fpclassify 'typename std::enable_if<std::is_floating_point<_A1>::value, int>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fa33289a0b0 <col:12, col:16> col:16 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fa33289a528 <line:392:1, line:394:1>
| |   | `-ReturnStmt 0x7fa33289a510 <line:393:5, col:76>
| |   |   `-CallExpr 0x7fa33289a4e0 <col:12, col:76> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fa33289a310 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_fpclassify' 0x7fa332899548
| |   |     `-CStyleCastExpr 0x7fa33289a4b8 <col:32, col:68> 'typename std::__promote<_A1>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fa33289a470 <col:68> '_A1' lvalue ParmVar 0x7fa33289a0b0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fa33289a2b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fa33289a300 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fa33289aae0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:396:1, line:400:47> line:399:1 fpclassify
| | |-TemplateTypeParmDecl 0x7fa33289a548 <line:396:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fa33289aa48 <line:397:1, line:400:47> line:399:1 fpclassify 'typename std::enable_if<std::is_integral<_A1>::value, int>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fa33289a930 <col:12, col:16> col:16 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fa33289ac88 <line:400:1, col:47>
| |   | `-ReturnStmt 0x7fa33289ac70 <col:3, /usr/include/math.h:77:25>
| |   |   `-ConditionalOperator 0x7fa33289ac40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:400:10, /usr/include/math.h:77:25> 'int'
| |   |     |-BinaryOperator 0x7fa33289abd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:400:10, col:22> '<dependent type>' '=='
| |   |     | |-DeclRefExpr 0x7fa33289ab90 <col:10> '_A1' lvalue ParmVar 0x7fa33289a930 '__lcpp_x' '_A1'
| |   |     | `-IntegerLiteral 0x7fa33289abb8 <col:22> 'int' 0
| |   |     |-IntegerLiteral 0x7fa33289ac00 </usr/include/math.h:76:25> 'int' 3
| |   |     `-IntegerLiteral 0x7fa33289ac20 <line:77:25> 'int' 4
| |   |-AlwaysInlineAttr 0x7fa33289ab38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fa33289ab80 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fa33289aed0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:424:1, line:430:1> line:427:1 __libcpp_isfinite
| | |-TemplateTypeParmDecl 0x7fa33289aca8 <line:424:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fa33289ae38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:430:1> line:427:1 __libcpp_isfinite '_Bool (_A1) noexcept'
| |   |-ParmVarDecl 0x7fa33289ad70 <col:19, col:23> col:23 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fa33289b640 <line:428:1, line:430:1>
| |   | `-ReturnStmt 0x7fa33289b628 <line:429:5, /usr/include/math.h:171:73>
| |   |   `-ImplicitCastExpr 0x7fa33289b610 <line:169:5, line:171:73> '_Bool' <IntegralToBoolean>
| |   |     `-ParenExpr 0x7fa33289b5f0 <line:169:5, line:171:73> 'int'
| |   |       `-ConditionalOperator 0x7fa33289b5c0 <line:169:7, line:171:72> 'int'
| |   |         |-BinaryOperator 0x7fa33289b020 <line:169:7, col:32> '_Bool' '=='
| |   |         | |-UnaryExprOrTypeTraitExpr 0x7fa33289afc8 <col:7, col:15> 'unsigned long' sizeof
| |   |         | | `-ParenExpr 0x7fa33289afa8 <col:13, col:15> '_A1' lvalue
| |   |         | |   `-DeclRefExpr 0x7fa33289af80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:429:21> '_A1' lvalue ParmVar 0x7fa33289ad70 '__lcpp_x' '_A1'
| |   |         | `-UnaryExprOrTypeTraitExpr 0x7fa33289b000 </usr/include/math.h:169:20, col:32> 'unsigned long' sizeof 'float'
| |   |         |-CallExpr 0x7fa33289b198 <col:37, col:66> 'int'
| |   |         | |-ImplicitCastExpr 0x7fa33289b180 <col:37> 'int (*)(float)' <FunctionToPointerDecay>
| |   |         | | `-DeclRefExpr 0x7fa33289b158 <col:37> 'int (float)' lvalue Function 0x7fa3330d2390 '__inline_isfinitef' 'int (float)'
| |   |         | `-CStyleCastExpr 0x7fa33289b130 <col:56, col:65> 'float' <Dependent>
| |   |         |   `-ParenExpr 0x7fa33289b110 <col:63, col:65> '_A1' lvalue
| |   |         |     `-DeclRefExpr 0x7fa33289b0a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:429:21> '_A1' lvalue ParmVar 0x7fa33289ad70 '__lcpp_x' '_A1'
| |   |         `-ConditionalOperator 0x7fa33289b590 </usr/include/math.h:170:7, line:171:72> 'int'
| |   |           |-BinaryOperator 0x7fa33289b268 <line:170:7, col:33> '_Bool' '=='
| |   |           | |-UnaryExprOrTypeTraitExpr 0x7fa33289b210 <col:7, col:15> 'unsigned long' sizeof
| |   |           | | `-ParenExpr 0x7fa33289b1f0 <col:13, col:15> '_A1' lvalue
| |   |           | |   `-DeclRefExpr 0x7fa33289b1c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:429:21> '_A1' lvalue ParmVar 0x7fa33289ad70 '__lcpp_x' '_A1'
| |   |           | `-UnaryExprOrTypeTraitExpr 0x7fa33289b248 </usr/include/math.h:170:20, col:33> 'unsigned long' sizeof 'double'
| |   |           |-CallExpr 0x7fa33289b3e0 <col:37, col:67> 'int'
| |   |           | |-ImplicitCastExpr 0x7fa33289b3c8 <col:37> 'int (*)(double)' <FunctionToPointerDecay>
| |   |           | | `-DeclRefExpr 0x7fa33289b3a0 <col:37> 'int (double)' lvalue Function 0x7fa3330d2c00 '__inline_isfinited' 'int (double)'
| |   |           | `-CStyleCastExpr 0x7fa33289b378 <col:56, col:66> 'double' <Dependent>
| |   |           |   `-ParenExpr 0x7fa33289b358 <col:64, col:66> '_A1' lvalue
| |   |           |     `-DeclRefExpr 0x7fa33289b2e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:429:21> '_A1' lvalue ParmVar 0x7fa33289ad70 '__lcpp_x' '_A1'
| |   |           `-CallExpr 0x7fa33289b560 </usr/include/math.h:171:37, col:72> 'int'
| |   |             |-ImplicitCastExpr 0x7fa33289b548 <col:37> 'int (*)(long double)' <FunctionToPointerDecay>
| |   |             | `-DeclRefExpr 0x7fa33289b520 <col:37> 'int (long double)' lvalue Function 0x7fa3330d3900 '__inline_isfinitel' 'int (long double)'
| |   |             `-CStyleCastExpr 0x7fa33289b4f8 <col:56, col:71> 'long double' <Dependent>
| |   |               `-ParenExpr 0x7fa33289b4d8 <col:69, col:71> '_A1' lvalue
| |   |                 `-DeclRefExpr 0x7fa33289b468 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:429:21> '_A1' lvalue ParmVar 0x7fa33289ad70 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fa33289af28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7fa33289af70 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fa33289bd80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:434:1, line:442:1> line:439:1 isfinite
| | |-TemplateTypeParmDecl 0x7fa33289b660 <line:434:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fa33289bce8 <line:435:1, line:442:1> line:439:1 isfinite 'typename std::enable_if<std::is_arithmetic<_A1>::value && std::numeric_limits<_A1>::has_infinity, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fa33289bbd0 <col:10, col:14> col:14 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fa33289d058 <line:440:1, line:442:1>
| |   | `-ReturnStmt 0x7fa33289d040 <line:441:5, col:74>
| |   |   `-CallExpr 0x7fa33289d010 <col:12, col:74> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fa33289ce48 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_isfinite' 0x7fa33289aed0
| |   |     `-CStyleCastExpr 0x7fa33289cfe8 <col:30, col:66> 'typename std::__promote<_A1>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fa33289cfa0 <col:66> '_A1' lvalue ParmVar 0x7fa33289bbd0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fa33289bdd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fa33289ce38 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fa33289d770 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:444:1, line:450:16> line:449:1 isfinite
| | |-TemplateTypeParmDecl 0x7fa33289d078 <line:444:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fa33289d6d8 <line:445:1, line:450:16> line:449:1 isfinite 'typename std::enable_if<std::is_arithmetic<_A1>::value && !std::numeric_limits<_A1>::has_infinity, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fa33289d5c0 <col:10> col:13 '_A1'
| |   |-CompoundStmt 0x7fa33289d850 <line:450:1, col:16>
| |   | `-ReturnStmt 0x7fa33289d838 <col:3, col:10>
| |   |   `-CXXBoolLiteralExpr 0x7fa33289d820 <col:10> '_Bool' true
| |   |-AlwaysInlineAttr 0x7fa33289d7c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fa33289d810 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fa33289da90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:458:1, line:464:1> line:461:1 __libcpp_isinf
| | |-TemplateTypeParmDecl 0x7fa33289d870 <line:458:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fa33289d9f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:464:1> line:461:1 __libcpp_isinf '_Bool (_A1) noexcept'
| |   |-ParmVarDecl 0x7fa33289d930 <col:16, col:20> col:20 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fa33289e200 <line:462:1, line:464:1>
| |   | `-ReturnStmt 0x7fa33289e1e8 <line:463:5, /usr/include/math.h:176:70>
| |   |   `-ImplicitCastExpr 0x7fa33289e1d0 <line:174:5, line:176:70> '_Bool' <IntegralToBoolean>
| |   |     `-ParenExpr 0x7fa33289e1b0 <line:174:5, line:176:70> 'int'
| |   |       `-ConditionalOperator 0x7fa33289e180 <line:174:7, line:176:69> 'int'
| |   |         |-BinaryOperator 0x7fa33289dbe0 <line:174:7, col:32> '_Bool' '=='
| |   |         | |-UnaryExprOrTypeTraitExpr 0x7fa33289db88 <col:7, col:15> 'unsigned long' sizeof
| |   |         | | `-ParenExpr 0x7fa33289db68 <col:13, col:15> '_A1' lvalue
| |   |         | |   `-DeclRefExpr 0x7fa33289db40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:463:18> '_A1' lvalue ParmVar 0x7fa33289d930 '__lcpp_x' '_A1'
| |   |         | `-UnaryExprOrTypeTraitExpr 0x7fa33289dbc0 </usr/include/math.h:174:20, col:32> 'unsigned long' sizeof 'float'
| |   |         |-CallExpr 0x7fa33289dd58 <col:37, col:63> 'int'
| |   |         | |-ImplicitCastExpr 0x7fa33289dd40 <col:37> 'int (*)(float)' <FunctionToPointerDecay>
| |   |         | | `-DeclRefExpr 0x7fa33289dd18 <col:37> 'int (float)' lvalue Function 0x7fa3330d4170 '__inline_isinff' 'int (float)'
| |   |         | `-CStyleCastExpr 0x7fa33289dcf0 <col:53, col:62> 'float' <Dependent>
| |   |         |   `-ParenExpr 0x7fa33289dcd0 <col:60, col:62> '_A1' lvalue
| |   |         |     `-DeclRefExpr 0x7fa33289dc60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:463:18> '_A1' lvalue ParmVar 0x7fa33289d930 '__lcpp_x' '_A1'
| |   |         `-ConditionalOperator 0x7fa33289e150 </usr/include/math.h:175:7, line:176:69> 'int'
| |   |           |-BinaryOperator 0x7fa33289de28 <line:175:7, col:33> '_Bool' '=='
| |   |           | |-UnaryExprOrTypeTraitExpr 0x7fa33289ddd0 <col:7, col:15> 'unsigned long' sizeof
| |   |           | | `-ParenExpr 0x7fa33289ddb0 <col:13, col:15> '_A1' lvalue
| |   |           | |   `-DeclRefExpr 0x7fa33289dd88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:463:18> '_A1' lvalue ParmVar 0x7fa33289d930 '__lcpp_x' '_A1'
| |   |           | `-UnaryExprOrTypeTraitExpr 0x7fa33289de08 </usr/include/math.h:175:20, col:33> 'unsigned long' sizeof 'double'
| |   |           |-CallExpr 0x7fa33289dfa0 <col:37, col:64> 'int'
| |   |           | |-ImplicitCastExpr 0x7fa33289df88 <col:37> 'int (*)(double)' <FunctionToPointerDecay>
| |   |           | | `-DeclRefExpr 0x7fa33289df60 <col:37> 'int (double)' lvalue Function 0x7fa3330d4490 '__inline_isinfd' 'int (double)'
| |   |           | `-CStyleCastExpr 0x7fa33289df38 <col:53, col:63> 'double' <Dependent>
| |   |           |   `-ParenExpr 0x7fa33289df18 <col:61, col:63> '_A1' lvalue
| |   |           |     `-DeclRefExpr 0x7fa33289dea8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:463:18> '_A1' lvalue ParmVar 0x7fa33289d930 '__lcpp_x' '_A1'
| |   |           `-CallExpr 0x7fa33289e120 </usr/include/math.h:176:37, col:69> 'int'
| |   |             |-ImplicitCastExpr 0x7fa33289e108 <col:37> 'int (*)(long double)' <FunctionToPointerDecay>
| |   |             | `-DeclRefExpr 0x7fa33289e0e0 <col:37> 'int (long double)' lvalue Function 0x7fa3330d4bb0 '__inline_isinfl' 'int (long double)'
| |   |             `-CStyleCastExpr 0x7fa33289e0b8 <col:53, col:68> 'long double' <Dependent>
| |   |               `-ParenExpr 0x7fa33289e098 <col:66, col:68> '_A1' lvalue
| |   |                 `-DeclRefExpr 0x7fa33289e028 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:463:18> '_A1' lvalue ParmVar 0x7fa33289d930 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fa33289dae8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7fa33289db30 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fa33289e800 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:468:1, line:476:1> line:473:1 isinf
| | |-TemplateTypeParmDecl 0x7fa33289e220 <line:468:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fa33289e768 <line:469:1, line:476:1> line:473:1 isinf 'typename std::enable_if<std::is_arithmetic<_A1>::value && std::numeric_limits<_A1>::has_infinity, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fa33289e690 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fa33289eac8 <line:474:1, line:476:1>
| |   | `-ReturnStmt 0x7fa33289eab0 <line:475:5, col:71>
| |   |   `-CallExpr 0x7fa33289ea80 <col:12, col:71> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fa33289e8b0 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_isinf' 0x7fa33289da90
| |   |     `-CStyleCastExpr 0x7fa33289ea58 <col:27, col:63> 'typename std::__promote<_A1>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fa33289ea10 <col:63> '_A1' lvalue ParmVar 0x7fa33289e690 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fa33289e858 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fa33289e8a0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fa33289f100 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:478:1, line:484:17> line:483:1 isinf
| | |-TemplateTypeParmDecl 0x7fa33289eae8 <line:478:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fa33289f068 <line:479:1, line:484:17> line:483:1 isinf 'typename std::enable_if<std::is_arithmetic<_A1>::value && !std::numeric_limits<_A1>::has_infinity, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fa33289ef90 <col:7> col:10 '_A1'
| |   |-CompoundStmt 0x7fa33289f1e0 <line:484:1, col:17>
| |   | `-ReturnStmt 0x7fa33289f1c8 <col:3, col:10>
| |   |   `-CXXBoolLiteralExpr 0x7fa33289f1b0 <col:10> '_Bool' false
| |   |-AlwaysInlineAttr 0x7fa33289f158 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fa33289f1a0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fa33289f420 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:492:1, line:498:1> line:495:1 __libcpp_isnan
| | |-TemplateTypeParmDecl 0x7fa33289f200 <line:492:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fa33289f388 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:498:1> line:495:1 __libcpp_isnan '_Bool (_A1) noexcept'
| |   |-ParmVarDecl 0x7fa33289f2c0 <col:16, col:20> col:20 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fa33289fb90 <line:496:1, line:498:1>
| |   | `-ReturnStmt 0x7fa33289fb78 <line:497:5, /usr/include/math.h:181:70>
| |   |   `-ImplicitCastExpr 0x7fa33289fb60 <line:179:5, line:181:70> '_Bool' <IntegralToBoolean>
| |   |     `-ParenExpr 0x7fa33289fb40 <line:179:5, line:181:70> 'int'
| |   |       `-ConditionalOperator 0x7fa33289fb10 <line:179:7, line:181:69> 'int'
| |   |         |-BinaryOperator 0x7fa33289f570 <line:179:7, col:32> '_Bool' '=='
| |   |         | |-UnaryExprOrTypeTraitExpr 0x7fa33289f518 <col:7, col:15> 'unsigned long' sizeof
| |   |         | | `-ParenExpr 0x7fa33289f4f8 <col:13, col:15> '_A1' lvalue
| |   |         | |   `-DeclRefExpr 0x7fa33289f4d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:497:18> '_A1' lvalue ParmVar 0x7fa33289f2c0 '__lcpp_x' '_A1'
| |   |         | `-UnaryExprOrTypeTraitExpr 0x7fa33289f550 </usr/include/math.h:179:20, col:32> 'unsigned long' sizeof 'float'
| |   |         |-CallExpr 0x7fa33289f6e8 <col:37, col:63> 'int'
| |   |         | |-ImplicitCastExpr 0x7fa33289f6d0 <col:37> 'int (*)(float)' <FunctionToPointerDecay>
| |   |         | | `-DeclRefExpr 0x7fa33289f6a8 <col:37> 'int (float)' lvalue Function 0x7fa3330d4ed0 '__inline_isnanf' 'int (float)'
| |   |         | `-CStyleCastExpr 0x7fa33289f680 <col:53, col:62> 'float' <Dependent>
| |   |         |   `-ParenExpr 0x7fa33289f660 <col:60, col:62> '_A1' lvalue
| |   |         |     `-DeclRefExpr 0x7fa33289f5f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:497:18> '_A1' lvalue ParmVar 0x7fa33289f2c0 '__lcpp_x' '_A1'
| |   |         `-ConditionalOperator 0x7fa33289fae0 </usr/include/math.h:180:7, line:181:69> 'int'
| |   |           |-BinaryOperator 0x7fa33289f7b8 <line:180:7, col:33> '_Bool' '=='
| |   |           | |-UnaryExprOrTypeTraitExpr 0x7fa33289f760 <col:7, col:15> 'unsigned long' sizeof
| |   |           | | `-ParenExpr 0x7fa33289f740 <col:13, col:15> '_A1' lvalue
| |   |           | |   `-DeclRefExpr 0x7fa33289f718 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:497:18> '_A1' lvalue ParmVar 0x7fa33289f2c0 '__lcpp_x' '_A1'
| |   |           | `-UnaryExprOrTypeTraitExpr 0x7fa33289f798 </usr/include/math.h:180:20, col:33> 'unsigned long' sizeof 'double'
| |   |           |-CallExpr 0x7fa33289f930 <col:37, col:64> 'int'
| |   |           | |-ImplicitCastExpr 0x7fa33289f918 <col:37> 'int (*)(double)' <FunctionToPointerDecay>
| |   |           | | `-DeclRefExpr 0x7fa33289f8f0 <col:37> 'int (double)' lvalue Function 0x7fa3330d5158 '__inline_isnand' 'int (double)'
| |   |           | `-CStyleCastExpr 0x7fa33289f8c8 <col:53, col:63> 'double' <Dependent>
| |   |           |   `-ParenExpr 0x7fa33289f8a8 <col:61, col:63> '_A1' lvalue
| |   |           |     `-DeclRefExpr 0x7fa33289f838 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:497:18> '_A1' lvalue ParmVar 0x7fa33289f2c0 '__lcpp_x' '_A1'
| |   |           `-CallExpr 0x7fa33289fab0 </usr/include/math.h:181:37, col:69> 'int'
| |   |             |-ImplicitCastExpr 0x7fa33289fa98 <col:37> 'int (*)(long double)' <FunctionToPointerDecay>
| |   |             | `-DeclRefExpr 0x7fa33289fa70 <col:37> 'int (long double)' lvalue Function 0x7fa3330d53e0 '__inline_isnanl' 'int (long double)'
| |   |             `-CStyleCastExpr 0x7fa33289fa48 <col:53, col:68> 'long double' <Dependent>
| |   |               `-ParenExpr 0x7fa33289fa28 <col:66, col:68> '_A1' lvalue
| |   |                 `-DeclRefExpr 0x7fa33289f9b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:497:18> '_A1' lvalue ParmVar 0x7fa33289f2c0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fa33289f478 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7fa33289f4c0 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fa3328a0050 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:502:1, line:508:1> line:505:1 isnan
| | |-TemplateTypeParmDecl 0x7fa33289fbb0 <line:502:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fa33289ffb8 <line:503:1, line:508:1> line:505:1 isnan 'typename std::enable_if<std::is_floating_point<_A1>::value, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fa33289fee0 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fa3328a0318 <line:506:1, line:508:1>
| |   | `-ReturnStmt 0x7fa3328a0300 <line:507:5, col:71>
| |   |   `-CallExpr 0x7fa3328a02d0 <col:12, col:71> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fa3328a0100 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_isnan' 0x7fa33289f420
| |   |     `-CStyleCastExpr 0x7fa3328a02a8 <col:27, col:63> 'typename std::__promote<_A1>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fa3328a0260 <col:63> '_A1' lvalue ParmVar 0x7fa33289fee0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fa3328a00a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fa3328a00f0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fa3328a08d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:510:1, line:514:17> line:513:1 isnan
| | |-TemplateTypeParmDecl 0x7fa3328a0338 <line:510:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fa3328a0838 <line:511:1, line:514:17> line:513:1 isnan 'typename std::enable_if<std::is_integral<_A1>::value, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fa3328a0720 <col:7> col:10 '_A1'
| |   |-CompoundStmt 0x7fa3328a09b0 <line:514:1, col:17>
| |   | `-ReturnStmt 0x7fa3328a0998 <col:3, col:10>
| |   |   `-CXXBoolLiteralExpr 0x7fa3328a0980 <col:10> '_Bool' false
| |   |-AlwaysInlineAttr 0x7fa3328a0928 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fa3328a0970 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fa3328a0bf0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:522:1, line:528:1> line:525:1 __libcpp_isnormal
| | |-TemplateTypeParmDecl 0x7fa3328a09d0 <line:522:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fa3328a0b58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:528:1> line:525:1 __libcpp_isnormal '_Bool (_A1) noexcept'
| |   |-ParmVarDecl 0x7fa3328a0a90 <col:19, col:23> col:23 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fa3328a1378 <line:526:1, line:528:1>
| |   | `-ReturnStmt 0x7fa3328a1360 <line:527:5, /usr/include/math.h:166:73>
| |   |   `-ImplicitCastExpr 0x7fa3328a1348 <line:164:5, line:166:73> '_Bool' <IntegralToBoolean>
| |   |     `-ParenExpr 0x7fa3328a1328 <line:164:5, line:166:73> 'int'
| |   |       `-ConditionalOperator 0x7fa3328a12f8 <line:164:7, line:166:72> 'int'
| |   |         |-BinaryOperator 0x7fa3328a0d40 <line:164:7, col:32> '_Bool' '=='
| |   |         | |-UnaryExprOrTypeTraitExpr 0x7fa3328a0ce8 <col:7, col:15> 'unsigned long' sizeof
| |   |         | | `-ParenExpr 0x7fa3328a0cc8 <col:13, col:15> '_A1' lvalue
| |   |         | |   `-DeclRefExpr 0x7fa3328a0ca0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:527:21> '_A1' lvalue ParmVar 0x7fa3328a0a90 '__lcpp_x' '_A1'
| |   |         | `-UnaryExprOrTypeTraitExpr 0x7fa3328a0d20 </usr/include/math.h:164:20, col:32> 'unsigned long' sizeof 'float'
| |   |         |-CallExpr 0x7fa3328a0ed0 <col:37, col:66> 'int'
| |   |         | |-ImplicitCastExpr 0x7fa3328a0eb8 <col:37> 'int (*)(float)' <FunctionToPointerDecay>
| |   |         | | `-DeclRefExpr 0x7fa3328a0e90 <col:37> 'int (float)' lvalue Function 0x7fa3330db838 '__inline_isnormalf' 'int (float)'
| |   |         | `-CStyleCastExpr 0x7fa3328a0e68 <col:56, col:65> 'float' <Dependent>
| |   |         |   `-ParenExpr 0x7fa3328a0e48 <col:63, col:65> '_A1' lvalue
| |   |         |     `-DeclRefExpr 0x7fa3328a0dc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:527:21> '_A1' lvalue ParmVar 0x7fa3328a0a90 '__lcpp_x' '_A1'
| |   |         `-ConditionalOperator 0x7fa3328a12c8 </usr/include/math.h:165:7, line:166:72> 'int'
| |   |           |-BinaryOperator 0x7fa3328a0fa0 <line:165:7, col:33> '_Bool' '=='
| |   |           | |-UnaryExprOrTypeTraitExpr 0x7fa3328a0f48 <col:7, col:15> 'unsigned long' sizeof
| |   |           | | `-ParenExpr 0x7fa3328a0f28 <col:13, col:15> '_A1' lvalue
| |   |           | |   `-DeclRefExpr 0x7fa3328a0f00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:527:21> '_A1' lvalue ParmVar 0x7fa3328a0a90 '__lcpp_x' '_A1'
| |   |           | `-UnaryExprOrTypeTraitExpr 0x7fa3328a0f80 </usr/include/math.h:165:20, col:33> 'unsigned long' sizeof 'double'
| |   |           |-CallExpr 0x7fa3328a1118 <col:37, col:67> 'int'
| |   |           | |-ImplicitCastExpr 0x7fa3328a1100 <col:37> 'int (*)(double)' <FunctionToPointerDecay>
| |   |           | | `-DeclRefExpr 0x7fa3328a10d8 <col:37> 'int (double)' lvalue Function 0x7fa3330dc090 '__inline_isnormald' 'int (double)'
| |   |           | `-CStyleCastExpr 0x7fa3328a10b0 <col:56, col:66> 'double' <Dependent>
| |   |           |   `-ParenExpr 0x7fa3328a1090 <col:64, col:66> '_A1' lvalue
| |   |           |     `-DeclRefExpr 0x7fa3328a1020 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:527:21> '_A1' lvalue ParmVar 0x7fa3328a0a90 '__lcpp_x' '_A1'
| |   |           `-CallExpr 0x7fa3328a1298 </usr/include/math.h:166:37, col:72> 'int'
| |   |             |-ImplicitCastExpr 0x7fa3328a1280 <col:37> 'int (*)(long double)' <FunctionToPointerDecay>
| |   |             | `-DeclRefExpr 0x7fa3328a1258 <col:37> 'int (long double)' lvalue Function 0x7fa3330dc4d8 '__inline_isnormall' 'int (long double)'
| |   |             `-CStyleCastExpr 0x7fa3328a1230 <col:56, col:71> 'long double' <Dependent>
| |   |               `-ParenExpr 0x7fa3328a1210 <col:69, col:71> '_A1' lvalue
| |   |                 `-DeclRefExpr 0x7fa3328a11a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:527:21> '_A1' lvalue ParmVar 0x7fa3328a0a90 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fa3328a0c48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7fa3328a0c90 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fa3328a1840 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:532:1, line:538:1> line:535:1 isnormal
| | |-TemplateTypeParmDecl 0x7fa3328a1398 <line:532:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fa3328a17a8 <line:533:1, line:538:1> line:535:1 isnormal 'typename std::enable_if<std::is_floating_point<_A1>::value, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fa3328a16d0 <col:10, col:14> col:14 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fa3328a1b08 <line:536:1, line:538:1>
| |   | `-ReturnStmt 0x7fa3328a1af0 <line:537:5, col:74>
| |   |   `-CallExpr 0x7fa3328a1ac0 <col:12, col:74> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fa3328a18f0 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_isnormal' 0x7fa3328a0bf0
| |   |     `-CStyleCastExpr 0x7fa3328a1a98 <col:30, col:66> 'typename std::__promote<_A1>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fa3328a1a50 <col:66> '_A1' lvalue ParmVar 0x7fa3328a16d0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fa3328a1898 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fa3328a18e0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fa3328a1fd0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:540:1, line:544:25> line:543:1 isnormal
| | |-TemplateTypeParmDecl 0x7fa3328a1b28 <line:540:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fa3328a1f38 <line:541:1, line:544:25> line:543:1 isnormal 'typename std::enable_if<std::is_integral<_A1>::value, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fa3328a1e60 <col:10, col:14> col:14 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fa3328a2108 <line:544:1, col:25>
| |   | `-ReturnStmt 0x7fa3328a20f0 <col:3, col:22>
| |   |   `-BinaryOperator 0x7fa3328a20c8 <col:10, col:22> '<dependent type>' '!='
| |   |     |-DeclRefExpr 0x7fa3328a2080 <col:10> '_A1' lvalue ParmVar 0x7fa3328a1e60 '__lcpp_x' '_A1'
| |   |     `-IntegerLiteral 0x7fa3328a20a8 <col:22> 'int' 0
| |   |-AlwaysInlineAttr 0x7fa3328a2028 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fa3328a2070 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fa3328a2490 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:552:1, line:558:1> line:555:1 __libcpp_isgreater
| | |-TemplateTypeParmDecl 0x7fa3328a2128 <line:552:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fa3328a2198 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fa3328a23f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:558:1> line:555:1 __libcpp_isgreater '_Bool (_A1, _A2) noexcept'
| |   |-ParmVarDecl 0x7fa3328a2268 <col:20, col:24> col:24 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fa3328a22d8 <col:34, col:38> col:38 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fa3328a27f8 <line:556:1, line:558:1>
| |   | `-ReturnStmt 0x7fa3328a27e0 <line:557:5, /usr/include/math.h:557:52>
| |   |   `-CallExpr 0x7fa3328a27a8 <col:25, col:52> '<dependent type>'
| |   |     |-DeclRefExpr 0x7fa3328a26f0 <col:25> '<builtin fn type>' Function 0x7fa3328a2600 '__builtin_isgreater' 'int (...) noexcept'
| |   |     |-ParenExpr 0x7fa3328a2740 <col:45, col:47> '_A1' lvalue
| |   |     | `-DeclRefExpr 0x7fa3328a2718 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:557:22> '_A1' lvalue ParmVar 0x7fa3328a2268 '__lcpp_x' '_A1'
| |   |     `-ParenExpr 0x7fa3328a2788 </usr/include/math.h:557:49, col:51> '_A2' lvalue
| |   |       `-DeclRefExpr 0x7fa3328a2760 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:557:32> '_A2' lvalue ParmVar 0x7fa3328a22d8 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fa3328a24f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7fa3328a2538 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fa3328a3060 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:562:1, line:574:1> line:570:1 isgreater
| | |-TemplateTypeParmDecl 0x7fa3328a2818 <line:562:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fa3328a2888 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fa3328a2fc8 <line:563:1, line:574:1> line:570:1 isgreater 'typename std::enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, _Bool>::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fa3328a2e30 <col:11, col:15> col:15 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fa3328a2ea0 <col:25, col:29> col:29 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fa3328a3550 <line:571:1, line:574:1>
| |   | |-DeclStmt 0x7fa3328a33a8 <line:572:5, col:57>
| |   | | `-TypedefDecl 0x7fa3328a3350 <col:5, col:53> col:53 referenced type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fa3328a32e0 'typename std::__promote<_A1, _A2>::type' dependent
| |   | `-ReturnStmt 0x7fa3328a3538 <line:573:5, col:61>
| |   |   `-CallExpr 0x7fa3328a3500 <col:12, col:61> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fa3328a33c0 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_isgreater' 0x7fa3328a2490
| |   |     |-CStyleCastExpr 0x7fa3328a3478 <col:31, col:37> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fa3328a3440 <col:37> '_A1' lvalue ParmVar 0x7fa3328a2e30 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fa3328a34d8 <col:47, col:53> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fa3328a34a0 <col:53> '_A2' lvalue ParmVar 0x7fa3328a2ea0 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fa3328a30c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fa3328a3108 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fa3328a38a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:582:1, line:588:1> line:585:1 __libcpp_isgreaterequal
| | |-TemplateTypeParmDecl 0x7fa3328a3578 <line:582:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fa3328a35e8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fa3328a3808 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:588:1> line:585:1 __libcpp_isgreaterequal '_Bool (_A1, _A2) noexcept'
| |   |-ParmVarDecl 0x7fa3328a36b8 <col:25, col:29> col:29 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fa3328a3728 <col:39, col:43> col:43 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fa3328a3ba0 <line:586:1, line:588:1>
| |   | `-ReturnStmt 0x7fa3328a3b88 <line:587:5, /usr/include/math.h:558:62>
| |   |   `-CallExpr 0x7fa3328a3b50 <col:30, col:62> '<dependent type>'
| |   |     |-DeclRefExpr 0x7fa3328a3a98 <col:30> '<builtin fn type>' Function 0x7fa3328a39a8 '__builtin_isgreaterequal' 'int (...) noexcept'
| |   |     |-ParenExpr 0x7fa3328a3ae8 <col:55, col:57> '_A1' lvalue
| |   |     | `-DeclRefExpr 0x7fa3328a3ac0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:587:27> '_A1' lvalue ParmVar 0x7fa3328a36b8 '__lcpp_x' '_A1'
| |   |     `-ParenExpr 0x7fa3328a3b30 </usr/include/math.h:558:59, col:61> '_A2' lvalue
| |   |       `-DeclRefExpr 0x7fa3328a3b08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:587:37> '_A2' lvalue ParmVar 0x7fa3328a3728 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fa3328a3900 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7fa3328a3948 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fa3328a42a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:592:1, line:604:1> line:600:1 isgreaterequal
| | |-TemplateTypeParmDecl 0x7fa3328a3bc0 <line:592:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fa3328a3c28 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fa3328a4208 <line:593:1, line:604:1> line:600:1 isgreaterequal 'typename std::enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, _Bool>::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fa3328a40b0 <col:16, col:20> col:20 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fa3328a4120 <col:30, col:34> col:34 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fa3328a46c0 <line:601:1, line:604:1>
| |   | |-DeclStmt 0x7fa3328a4518 <line:602:5, col:57>
| |   | | `-TypedefDecl 0x7fa3328a44c0 <col:5, col:53> col:53 referenced type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fa3328a4450 'typename std::__promote<_A1, _A2>::type' dependent
| |   | `-ReturnStmt 0x7fa3328a46a8 <line:603:5, col:66>
| |   |   `-CallExpr 0x7fa3328a4670 <col:12, col:66> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fa3328a4530 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_isgreaterequal' 0x7fa3328a38a0
| |   |     |-CStyleCastExpr 0x7fa3328a45e8 <col:36, col:42> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fa3328a45b0 <col:42> '_A1' lvalue ParmVar 0x7fa3328a40b0 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fa3328a4648 <col:52, col:58> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fa3328a4610 <col:58> '_A2' lvalue ParmVar 0x7fa3328a4120 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fa3328a4300 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fa3328a4348 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fa3328a4a10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:612:1, line:618:1> line:615:1 __libcpp_isless
| | |-TemplateTypeParmDecl 0x7fa3328a46e8 <line:612:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fa3328a4758 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fa3328a4978 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:618:1> line:615:1 __libcpp_isless '_Bool (_A1, _A2) noexcept'
| |   |-ParmVarDecl 0x7fa3328a4828 <col:17, col:21> col:21 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fa3328a4898 <col:31, col:35> col:35 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fa3328a4d10 <line:616:1, line:618:1>
| |   | `-ReturnStmt 0x7fa3328a4cf8 <line:617:5, /usr/include/math.h:559:46>
| |   |   `-CallExpr 0x7fa3328a4cc0 <col:22, col:46> '<dependent type>'
| |   |     |-DeclRefExpr 0x7fa3328a4c08 <col:22> '<builtin fn type>' Function 0x7fa3328a4b18 '__builtin_isless' 'int (...) noexcept'
| |   |     |-ParenExpr 0x7fa3328a4c58 <col:39, col:41> '_A1' lvalue
| |   |     | `-DeclRefExpr 0x7fa3328a4c30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:617:19> '_A1' lvalue ParmVar 0x7fa3328a4828 '__lcpp_x' '_A1'
| |   |     `-ParenExpr 0x7fa3328a4ca0 </usr/include/math.h:559:43, col:45> '_A2' lvalue
| |   |       `-DeclRefExpr 0x7fa3328a4c78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:617:29> '_A2' lvalue ParmVar 0x7fa3328a4898 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fa3328a4a70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7fa3328a4ab8 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fa33381b030 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:622:1, line:634:1> line:630:1 isless
| | |-TemplateTypeParmDecl 0x7fa3328a4d30 <line:622:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fa3328a4d98 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fa33381af98 <line:623:1, line:634:1> line:630:1 isless 'typename std::enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, _Bool>::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fa33381ae40 <col:8, col:12> col:12 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fa33381aeb0 <col:22, col:26> col:26 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fa33381b450 <line:631:1, line:634:1>
| |   | |-DeclStmt 0x7fa33381b2a8 <line:632:5, col:57>
| |   | | `-TypedefDecl 0x7fa33381b250 <col:5, col:53> col:53 referenced type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fa33381b1e0 'typename std::__promote<_A1, _A2>::type' dependent
| |   | `-ReturnStmt 0x7fa33381b438 <line:633:5, col:58>
| |   |   `-CallExpr 0x7fa33381b400 <col:12, col:58> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fa33381b2c0 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_isless' 0x7fa3328a4a10
| |   |     |-CStyleCastExpr 0x7fa33381b378 <col:28, col:34> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fa33381b340 <col:34> '_A1' lvalue ParmVar 0x7fa33381ae40 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fa33381b3d8 <col:44, col:50> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fa33381b3a0 <col:50> '_A2' lvalue ParmVar 0x7fa33381aeb0 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fa33381b090 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fa33381b0d8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fa33381b7a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:642:1, line:648:1> line:645:1 __libcpp_islessequal
| | |-TemplateTypeParmDecl 0x7fa33381b478 <line:642:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fa33381b4e8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fa33381b708 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:648:1> line:645:1 __libcpp_islessequal '_Bool (_A1, _A2) noexcept'
| |   |-ParmVarDecl 0x7fa33381b5b8 <col:22, col:26> col:26 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fa33381b628 <col:36, col:40> col:40 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fa33381baa0 <line:646:1, line:648:1>
| |   | `-ReturnStmt 0x7fa33381ba88 <line:647:5, /usr/include/math.h:560:56>
| |   |   `-CallExpr 0x7fa33381ba50 <col:27, col:56> '<dependent type>'
| |   |     |-DeclRefExpr 0x7fa33381b998 <col:27> '<builtin fn type>' Function 0x7fa33381b8a8 '__builtin_islessequal' 'int (...) noexcept'
| |   |     |-ParenExpr 0x7fa33381b9e8 <col:49, col:51> '_A1' lvalue
| |   |     | `-DeclRefExpr 0x7fa33381b9c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:647:24> '_A1' lvalue ParmVar 0x7fa33381b5b8 '__lcpp_x' '_A1'
| |   |     `-ParenExpr 0x7fa33381ba30 </usr/include/math.h:560:53, col:55> '_A2' lvalue
| |   |       `-DeclRefExpr 0x7fa33381ba08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:647:34> '_A2' lvalue ParmVar 0x7fa33381b628 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fa33381b800 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7fa33381b848 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fa33381c1a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:652:1, line:664:1> line:660:1 islessequal
| | |-TemplateTypeParmDecl 0x7fa33381bac0 <line:652:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fa33381bb28 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fa33381c108 <line:653:1, line:664:1> line:660:1 islessequal 'typename std::enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, _Bool>::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fa33381bfb0 <col:13, col:17> col:17 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fa33381c020 <col:27, col:31> col:31 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fa33381c5c0 <line:661:1, line:664:1>
| |   | |-DeclStmt 0x7fa33381c418 <line:662:5, col:57>
| |   | | `-TypedefDecl 0x7fa33381c3c0 <col:5, col:53> col:53 referenced type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fa33381c350 'typename std::__promote<_A1, _A2>::type' dependent
| |   | `-ReturnStmt 0x7fa33381c5a8 <line:663:5, col:63>
| |   |   `-CallExpr 0x7fa33381c570 <col:12, col:63> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fa33381c430 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_islessequal' 0x7fa33381b7a0
| |   |     |-CStyleCastExpr 0x7fa33381c4e8 <col:33, col:39> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fa33381c4b0 <col:39> '_A1' lvalue ParmVar 0x7fa33381bfb0 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fa33381c548 <col:49, col:55> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fa33381c510 <col:55> '_A2' lvalue ParmVar 0x7fa33381c020 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fa33381c200 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fa33381c248 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fa33381c910 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:672:1, line:678:1> line:675:1 __libcpp_islessgreater
| | |-TemplateTypeParmDecl 0x7fa33381c5e8 <line:672:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fa33381c658 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fa33381c878 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:678:1> line:675:1 __libcpp_islessgreater '_Bool (_A1, _A2) noexcept'
| |   |-ParmVarDecl 0x7fa33381c728 <col:24, col:28> col:28 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fa33381c798 <col:38, col:42> col:42 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fa33381cc48 <line:676:1, line:678:1>
| |   | `-ReturnStmt 0x7fa33381cc30 <line:677:5, /usr/include/math.h:561:60>
| |   |   `-CallExpr 0x7fa33381cbf8 <col:29, col:60> '<dependent type>'
| |   |     |-DeclRefExpr 0x7fa33381cb40 <col:29> '<builtin fn type>' Function 0x7fa33381ca50 '__builtin_islessgreater' 'int (...) noexcept'
| |   |     |-ParenExpr 0x7fa33381cb90 <col:53, col:55> '_A1' lvalue
| |   |     | `-DeclRefExpr 0x7fa33381cb68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:677:26> '_A1' lvalue ParmVar 0x7fa33381c728 '__lcpp_x' '_A1'
| |   |     `-ParenExpr 0x7fa33381cbd8 </usr/include/math.h:561:57, col:59> '_A2' lvalue
| |   |       `-DeclRefExpr 0x7fa33381cbb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:677:36> '_A2' lvalue ParmVar 0x7fa33381c798 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fa33381c970 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7fa33381c9b8 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fa33381d350 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:682:1, line:694:1> line:690:1 islessgreater
| | |-TemplateTypeParmDecl 0x7fa33381cc68 <line:682:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fa33381ccd8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fa33381d2b8 <line:683:1, line:694:1> line:690:1 islessgreater 'typename std::enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, _Bool>::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fa33381d160 <col:15, col:19> col:19 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fa33381d1d0 <col:29, col:33> col:33 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fa33381d770 <line:691:1, line:694:1>
| |   | |-DeclStmt 0x7fa33381d5c8 <line:692:5, col:57>
| |   | | `-TypedefDecl 0x7fa33381d570 <col:5, col:53> col:53 referenced type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fa33381d500 'typename std::__promote<_A1, _A2>::type' dependent
| |   | `-ReturnStmt 0x7fa33381d758 <line:693:5, col:65>
| |   |   `-CallExpr 0x7fa33381d720 <col:12, col:65> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fa33381d5e0 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_islessgreater' 0x7fa33381c910
| |   |     |-CStyleCastExpr 0x7fa33381d698 <col:35, col:41> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fa33381d660 <col:41> '_A1' lvalue ParmVar 0x7fa33381d160 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fa33381d6f8 <col:51, col:57> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fa33381d6c0 <col:57> '_A2' lvalue ParmVar 0x7fa33381d1d0 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fa33381d3b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fa33381d3f8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fa33381dac0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:702:1, line:708:1> line:705:1 __libcpp_isunordered
| | |-TemplateTypeParmDecl 0x7fa33381d798 <line:702:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fa33381d808 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fa33381da28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:708:1> line:705:1 __libcpp_isunordered '_Bool (_A1, _A2) noexcept'
| |   |-ParmVarDecl 0x7fa33381d8d8 <col:22, col:26> col:26 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fa33381d948 <col:36, col:40> col:40 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fa33381ddc0 <line:706:1, line:708:1>
| |   | `-ReturnStmt 0x7fa33381dda8 <line:707:5, /usr/include/math.h:562:56>
| |   |   `-CallExpr 0x7fa33381dd70 <col:27, col:56> '<dependent type>'
| |   |     |-DeclRefExpr 0x7fa33381dcb8 <col:27> '<builtin fn type>' Function 0x7fa33381dbc8 '__builtin_isunordered' 'int (...) noexcept'
| |   |     |-ParenExpr 0x7fa33381dd08 <col:49, col:51> '_A1' lvalue
| |   |     | `-DeclRefExpr 0x7fa33381dce0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:707:24> '_A1' lvalue ParmVar 0x7fa33381d8d8 '__lcpp_x' '_A1'
| |   |     `-ParenExpr 0x7fa33381dd50 </usr/include/math.h:562:53, col:55> '_A2' lvalue
| |   |       `-DeclRefExpr 0x7fa33381dd28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:707:34> '_A2' lvalue ParmVar 0x7fa33381d948 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fa33381db20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7fa33381db68 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fa33381e4c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:712:1, line:724:1> line:720:1 isunordered
| | |-TemplateTypeParmDecl 0x7fa33381dde0 <line:712:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fa33381de48 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fa33381e428 <line:713:1, line:724:1> line:720:1 isunordered 'typename std::enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, _Bool>::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fa33381e2d0 <col:13, col:17> col:17 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fa33381e340 <col:27, col:31> col:31 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fa33381e8e0 <line:721:1, line:724:1>
| |   | |-DeclStmt 0x7fa33381e738 <line:722:5, col:57>
| |   | | `-TypedefDecl 0x7fa33381e6e0 <col:5, col:53> col:53 referenced type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fa33381e670 'typename std::__promote<_A1, _A2>::type' dependent
| |   | `-ReturnStmt 0x7fa33381e8c8 <line:723:5, col:63>
| |   |   `-CallExpr 0x7fa33381e890 <col:12, col:63> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fa33381e750 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_isunordered' 0x7fa33381dac0
| |   |     |-CStyleCastExpr 0x7fa33381e808 <col:33, col:39> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fa33381e7d0 <col:39> '_A1' lvalue ParmVar 0x7fa33381e2d0 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fa33381e868 <col:49, col:55> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fa33381e830 <col:55> '_A2' lvalue ParmVar 0x7fa33381e340 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fa33381e520 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fa33381e568 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa33381ea00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:731:1, line:733:57> col:1 abs 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fa33381e950 <col:5, col:11> col:11 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fa33381ebf0 <col:31, col:57>
| | | `-ReturnStmt 0x7fa33381ebd8 <col:32, col:55>
| | |   `-CallExpr 0x7fa33381eb90 <col:39, col:55> 'float'
| | |     |-ImplicitCastExpr 0x7fa33381eb78 <col:39, col:41> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa33381eb18 <col:39, col:41> 'float (float)' lvalue Function 0x7fa3330ea8f0 'fabsf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fa33381ebc0 <col:47> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa33381eb50 <col:47> 'float' lvalue ParmVar 0x7fa33381e950 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fa33381eaa0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa33381eae8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa33381ecf0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:735:1, line:737:57> col:1 abs 'double (double) noexcept' inline
| | |-ParmVarDecl 0x7fa33381ec58 <col:5, col:12> col:12 used __lcpp_x 'double'
| | |-CompoundStmt 0x7fa33381eee0 <col:32, col:57>
| | | `-ReturnStmt 0x7fa33381eec8 <col:33, col:55>
| | |   `-CallExpr 0x7fa33381ee80 <col:40, col:55> 'double'
| | |     |-ImplicitCastExpr 0x7fa33381ee68 <col:40, col:42> 'double (*)(double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa33381ee08 <col:40, col:42> 'double (double)' lvalue Function 0x7fa3330eaa90 'fabs' 'double (double)'
| | |     `-ImplicitCastExpr 0x7fa33381eeb0 <col:47> 'double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa33381ee40 <col:47> 'double' lvalue ParmVar 0x7fa33381ec58 '__lcpp_x' 'double'
| | |-AlwaysInlineAttr 0x7fa33381ed90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa33381edd8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa33381efe0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:739:1, line:741:63> col:1 abs 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fa33381ef48 <col:5, col:17> col:17 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fa33381f1d0 <col:37, col:63>
| | | `-ReturnStmt 0x7fa33381f1b8 <col:38, col:61>
| | |   `-CallExpr 0x7fa33381f170 <col:45, col:61> 'long double'
| | |     |-ImplicitCastExpr 0x7fa33381f158 <col:45, col:47> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa33381f0f8 <col:45, col:47> 'long double (long double)' lvalue Function 0x7fa3330eac30 'fabsl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fa33381f1a0 <col:53> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa33381f130 <col:53> 'long double' lvalue ParmVar 0x7fa33381ef48 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fa33381f080 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa33381f0c8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa33381f2d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:747:1, col:109> col:46 acos 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fa33381f238 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fa33381f4c0 <col:83, col:109>
| | | `-ReturnStmt 0x7fa33381f4a8 <col:84, col:107>
| | |   `-CallExpr 0x7fa33381f460 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fa33381f448 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa33381f3e8 <col:91, col:93> 'float (float)' lvalue Function 0x7fa3330dc938 'acosf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fa33381f490 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa33381f420 <col:99> 'float' lvalue ParmVar 0x7fa33381f238 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fa33381f370 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa33381f3b8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa33381f5c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:748:1, col:109> col:46 acos 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fa33381f528 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fa33381f7b0 <col:83, col:109>
| | | `-ReturnStmt 0x7fa33381f798 <col:84, col:107>
| | |   `-CallExpr 0x7fa33381f750 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fa33381f738 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa33381f6d8 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fa3330dcc78 'acosl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fa33381f780 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa33381f710 <col:99> 'long double' lvalue ParmVar 0x7fa33381f528 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fa33381f660 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa33381f6a8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fa33381fd60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:751:1, line:754:63> col:1 acos
| | |-TemplateTypeParmDecl 0x7fa33381f7d0 <line:751:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fa33381fcc8 <line:752:1, line:754:63> col:1 acos 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fa33381fbb0 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fa333821860 <col:30, col:63>
| |   | `-ReturnStmt 0x7fa333821848 <col:31, col:61>
| |   |   `-CallExpr 0x7fa333821818 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fa333821800 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fa3338217c8 <col:38, col:40> 'double (double)' lvalue Function 0x7fa3330dcad8 'acos' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fa33381fee0 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fa33381fea0 <col:53> '_A1' lvalue ParmVar 0x7fa33381fbb0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fa33381fdb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fa33381fe00 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa333821960 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:759:1, col:109> col:46 asin 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fa3338218c8 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fa333821b50 <col:83, col:109>
| | | `-ReturnStmt 0x7fa333821b38 <col:84, col:107>
| | |   `-CallExpr 0x7fa333821af0 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fa333821ad8 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa333821a78 <col:91, col:93> 'float (float)' lvalue Function 0x7fa3330dce18 'asinf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fa333821b20 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa333821ab0 <col:99> 'float' lvalue ParmVar 0x7fa3338218c8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fa333821a00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa333821a48 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa333821c50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:760:1, col:109> col:46 asin 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fa333821bb8 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fa333821e40 <col:83, col:109>
| | | `-ReturnStmt 0x7fa333821e28 <col:84, col:107>
| | |   `-CallExpr 0x7fa333821de0 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fa333821dc8 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa333821d68 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fa3330dd1a0 'asinl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fa333821e10 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa333821da0 <col:99> 'long double' lvalue ParmVar 0x7fa333821bb8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fa333821cf0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa333821d38 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fa333822300 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:763:1, line:766:63> col:1 asin
| | |-TemplateTypeParmDecl 0x7fa333821e60 <line:763:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fa333822268 <line:764:1, line:766:63> col:1 asin 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fa333822190 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fa333822820 <col:30, col:63>
| |   | `-ReturnStmt 0x7fa333822808 <col:31, col:61>
| |   |   `-CallExpr 0x7fa3338227d8 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fa3338227c0 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fa333822788 <col:38, col:40> 'double (double)' lvalue Function 0x7fa3330dd000 'asin' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fa333822480 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fa333822440 <col:53> '_A1' lvalue ParmVar 0x7fa333822190 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fa333822358 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fa3338223a0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa333822920 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:771:1, col:109> col:46 atan 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fa333822888 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fa333822b40 <col:83, col:109>
| | | `-ReturnStmt 0x7fa333822b28 <col:84, col:107>
| | |   `-CallExpr 0x7fa333822ae0 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fa333822ac8 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa333822a68 <col:91, col:93> 'float (float)' lvalue Function 0x7fa3330dd340 'atanf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fa333822b10 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa333822aa0 <col:99> 'float' lvalue ParmVar 0x7fa333822888 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fa3338229c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa333822a38 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa333822c40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:772:1, col:109> col:46 atan 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fa333822ba8 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fa333822e30 <col:83, col:109>
| | | `-ReturnStmt 0x7fa333822e18 <col:84, col:107>
| | |   `-CallExpr 0x7fa333822dd0 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fa333822db8 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa333822d58 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fa3330dd680 'atanl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fa333822e00 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa333822d90 <col:99> 'long double' lvalue ParmVar 0x7fa333822ba8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fa333822ce0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa333822d28 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fa3338232f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:775:1, line:778:63> col:1 atan
| | |-TemplateTypeParmDecl 0x7fa333822e50 <line:775:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fa333823258 <line:776:1, line:778:63> col:1 atan 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fa333823180 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fa333823810 <col:30, col:63>
| |   | `-ReturnStmt 0x7fa3338237f8 <col:31, col:61>
| |   |   `-CallExpr 0x7fa3338237c8 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fa3338237b0 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fa333823778 <col:38, col:40> 'double (double)' lvalue Function 0x7fa3330dd4e0 'atan' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fa333823470 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fa333823430 <col:53> '_A1' lvalue ParmVar 0x7fa333823180 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fa333823348 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fa333823390 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa333823990 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:783:1, col:143> col:46 atan2 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7fa333823878 <col:52, col:58> col:58 used __lcpp_y 'float'
| | |-ParmVarDecl 0x7fa3338238f0 <col:68, col:74> col:74 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fa333823c00 <col:106, col:143>
| | | `-ReturnStmt 0x7fa333823be8 <col:107, col:141>
| | |   `-CallExpr 0x7fa333823b80 <col:114, col:141> 'float'
| | |     |-ImplicitCastExpr 0x7fa333823b68 <col:114, col:116> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa333823ab0 <col:114, col:116> 'float (float, float)' lvalue Function 0x7fa3330dd8e8 'atan2f' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7fa333823bb8 <col:123> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fa333823ae8 <col:123> 'float' lvalue ParmVar 0x7fa333823878 '__lcpp_y' 'float'
| | |     `-ImplicitCastExpr 0x7fa333823bd0 <col:133> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa333823b10 <col:133> 'float' lvalue ParmVar 0x7fa3338238f0 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fa333823a38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa333823a80 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa333823d80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:784:1, col:143> col:46 atan2 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fa333823c68 <col:52, col:64> col:64 used __lcpp_y 'long double'
| | |-ParmVarDecl 0x7fa333823ce0 <col:74, col:86> col:86 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fa333823ff0 <col:106, col:143>
| | | `-ReturnStmt 0x7fa333823fd8 <col:107, col:141>
| | |   `-CallExpr 0x7fa333823f70 <col:114, col:141> 'long double'
| | |     |-ImplicitCastExpr 0x7fa333823f58 <col:114, col:116> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa333823ea0 <col:114, col:116> 'long double (long double, long double)' lvalue Function 0x7fa3330dde48 'atan2l' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fa333823fa8 <col:123> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fa333823ed8 <col:123> 'long double' lvalue ParmVar 0x7fa333823c68 '__lcpp_y' 'long double'
| | |     `-ImplicitCastExpr 0x7fa333823fc0 <col:133> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa333823f00 <col:133> 'long double' lvalue ParmVar 0x7fa333823ce0 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fa333823e28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa333823e70 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fa333824950 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:787:1, line:801:1> line:795:1 atan2
| | |-TemplateTypeParmDecl 0x7fa333824010 <line:787:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fa333824078 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fa3338248b8 <line:788:1, line:801:1> line:795:1 atan2 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fa333824720 <col:7, col:11> col:11 referenced __lcpp_y '_A1'
| |   |-ParmVarDecl 0x7fa333824790 <col:21, col:25> col:25 referenced __lcpp_x '_A2'
| |   |-CompoundStmt 0x7fa333825258 <line:796:1, line:801:1>
| |   | |-DeclStmt 0x7fa333824bc8 <line:797:5, col:66>
| |   | | `-TypedefDecl 0x7fa333824b70 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fa333824b00 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fa3338250a0 <line:798:5, line:799:68>
| |   | | `-StaticAssertDecl 0x7fa333825068 <line:798:5, line:799:67> line:798:5
| |   | |   |-ParenExpr 0x7fa333825020 <col:19, line:799:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fa333825000 <line:798:20, line:799:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fa333824fe0 <line:798:21, line:799:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fa333824fb8 <line:798:22, line:799:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fa333824db8 <line:798:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fa333824f78 <line:799:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fa333825040 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fa333825240 <line:800:5, col:68>
| |   |   `-CallExpr 0x7fa333825208 <col:12, col:68> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fa3338250d8 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'atan2' 0x7fa3330ddb98 0x7fa333823990 0x7fa333823d80 0x7fa333824950
| |   |     |-CStyleCastExpr 0x7fa333825180 <col:20, col:35> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fa333825148 <col:35> '_A1' lvalue ParmVar 0x7fa333824720 '__lcpp_y' '_A1'
| |   |     `-CStyleCastExpr 0x7fa3338251e0 <col:45, col:60> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fa3338251a8 <col:60> '_A2' lvalue ParmVar 0x7fa333824790 '__lcpp_x' '_A2'
| |   |-AlwaysInlineAttr 0x7fa3338249b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fa333824a00 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa333825368 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:806:1, col:109> col:46 ceil 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fa3338252d0 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fa333825558 <col:83, col:109>
| | | `-ReturnStmt 0x7fa333825540 <col:84, col:107>
| | |   `-CallExpr 0x7fa3338254f8 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fa3338254e0 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa333825480 <col:91, col:93> 'float (float)' lvalue Function 0x7fa3330ed8a8 'ceilf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fa333825528 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa3338254b8 <col:99> 'float' lvalue ParmVar 0x7fa3338252d0 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fa333825408 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa333825450 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa333825658 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:807:1, col:109> col:46 ceil 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fa3338255c0 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fa333825848 <col:83, col:109>
| | | `-ReturnStmt 0x7fa333825830 <col:84, col:107>
| | |   `-CallExpr 0x7fa3338257e8 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fa3338257d0 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa333825770 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fa3330edbe8 'ceill' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fa333825818 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa3338257a8 <col:99> 'long double' lvalue ParmVar 0x7fa3338255c0 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fa3338256f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa333825740 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fa333825d10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:810:1, line:813:63> col:1 ceil
| | |-TemplateTypeParmDecl 0x7fa333825868 <line:810:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fa333825c78 <line:811:1, line:813:63> col:1 ceil 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fa333825ba0 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fa333826230 <col:30, col:63>
| |   | `-ReturnStmt 0x7fa333826218 <col:31, col:61>
| |   |   `-CallExpr 0x7fa3338261e8 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fa3338261d0 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fa333826198 <col:38, col:40> 'double (double)' lvalue Function 0x7fa3330eda48 'ceil' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fa333825e90 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fa333825e50 <col:53> '_A1' lvalue ParmVar 0x7fa333825ba0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fa333825d68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fa333825db0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa333826330 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:818:1, col:107> col:46 cos 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fa333826298 <col:50, col:56> col:56 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fa333826520 <col:82, col:107>
| | | `-ReturnStmt 0x7fa333826508 <col:83, col:105>
| | |   `-CallExpr 0x7fa3338264c0 <col:90, col:105> 'float'
| | |     |-ImplicitCastExpr 0x7fa3338264a8 <col:90, col:92> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa333826448 <col:90, col:92> 'float (float)' lvalue Function 0x7fa3330de830 'cosf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fa3338264f0 <col:97> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa333826480 <col:97> 'float' lvalue ParmVar 0x7fa333826298 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fa3338263d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa333826418 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa333826620 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:819:1, col:107> col:46 cos 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fa333826588 <col:50, col:62> col:62 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fa333826810 <col:82, col:107>
| | | `-ReturnStmt 0x7fa3338267f8 <col:83, col:105>
| | |   `-CallExpr 0x7fa3338267b0 <col:90, col:105> 'long double'
| | |     |-ImplicitCastExpr 0x7fa333826798 <col:90, col:92> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa333826738 <col:90, col:92> 'long double (long double)' lvalue Function 0x7fa3330deb70 'cosl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fa3338267e0 <col:97> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa333826770 <col:97> 'long double' lvalue ParmVar 0x7fa333826588 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fa3338266c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa333826708 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fa3338d9b00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:822:1, line:825:61> col:1 cos
| | |-TemplateTypeParmDecl 0x7fa333826830 <line:822:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fa3338d9a68 <line:823:1, line:825:61> col:1 cos 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fa3338d9990 <col:5, col:9> col:9 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fa3338da020 <col:29, col:61>
| |   | `-ReturnStmt 0x7fa3338da008 <col:30, col:59>
| |   |   `-CallExpr 0x7fa3338d9fd8 <col:37, col:59> 'double'
| |   |     |-ImplicitCastExpr 0x7fa3338d9fc0 <col:37, col:39> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fa3338d9f88 <col:37, col:39> 'double (double)' lvalue Function 0x7fa3330de9d0 'cos' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fa3338d9c80 <col:43, col:51> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fa3338d9c40 <col:51> '_A1' lvalue ParmVar 0x7fa3338d9990 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fa3338d9b58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fa3338d9ba0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa3338da120 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:830:1, col:109> col:46 cosh 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fa3338da088 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fa3338da310 <col:83, col:109>
| | | `-ReturnStmt 0x7fa3338da2f8 <col:84, col:107>
| | |   `-CallExpr 0x7fa3338da2b0 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fa3338da298 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa3338da238 <col:91, col:93> 'float (float)' lvalue Function 0x7fa3330e0d90 'coshf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fa3338da2e0 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa3338da270 <col:99> 'float' lvalue ParmVar 0x7fa3338da088 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fa3338da1c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa3338da208 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa3338da410 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:831:1, col:109> col:46 cosh 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fa3338da378 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fa3338da600 <col:83, col:109>
| | | `-ReturnStmt 0x7fa3338da5e8 <col:84, col:107>
| | |   `-CallExpr 0x7fa3338da5a0 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fa3338da588 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa3338da528 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fa3330e18f0 'coshl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fa3338da5d0 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa3338da560 <col:99> 'long double' lvalue ParmVar 0x7fa3338da378 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fa3338da4b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa3338da4f8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fa3338daac0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:834:1, line:837:63> col:1 cosh
| | |-TemplateTypeParmDecl 0x7fa3338da620 <line:834:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fa3338daa28 <line:835:1, line:837:63> col:1 cosh 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fa3338da950 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fa3338dafe0 <col:30, col:63>
| |   | `-ReturnStmt 0x7fa3338dafc8 <col:31, col:61>
| |   |   `-CallExpr 0x7fa3338daf98 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fa3338daf80 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fa3338daf48 <col:38, col:40> 'double (double)' lvalue Function 0x7fa3330e0f30 'cosh' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fa3338dac40 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fa3338dac00 <col:53> '_A1' lvalue ParmVar 0x7fa3338da950 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fa3338dab18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fa3338dab60 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa3338db0e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:842:1, col:107> col:46 exp 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fa3338db048 <col:50, col:56> col:56 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fa3338db2d0 <col:82, col:107>
| | | `-ReturnStmt 0x7fa3338db2b8 <col:83, col:105>
| | |   `-CallExpr 0x7fa3338db270 <col:90, col:105> 'float'
| | |     |-ImplicitCastExpr 0x7fa3338db258 <col:90, col:92> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa3338db1f8 <col:90, col:92> 'float (float)' lvalue Function 0x7fa3330e2450 'expf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fa3338db2a0 <col:97> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa3338db230 <col:97> 'float' lvalue ParmVar 0x7fa3338db048 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fa3338db180 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa3338db1c8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa3338db3d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:843:1, col:107> col:46 exp 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fa3338db338 <col:50, col:62> col:62 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fa3338db5c0 <col:82, col:107>
| | | `-ReturnStmt 0x7fa3338db5a8 <col:83, col:105>
| | |   `-CallExpr 0x7fa3338db560 <col:90, col:105> 'long double'
| | |     |-ImplicitCastExpr 0x7fa3338db548 <col:90, col:92> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa3338db4e8 <col:90, col:92> 'long double (long double)' lvalue Function 0x7fa3330e2800 'expl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fa3338db590 <col:97> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa3338db520 <col:97> 'long double' lvalue ParmVar 0x7fa3338db338 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fa3338db470 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa3338db4b8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fa3338dbaa0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:846:1, line:849:61> col:1 exp
| | |-TemplateTypeParmDecl 0x7fa3338db5e0 <line:846:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fa3338dba08 <line:847:1, line:849:61> col:1 exp 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fa3338db930 <col:5, col:9> col:9 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fa3338dbfc0 <col:29, col:61>
| |   | `-ReturnStmt 0x7fa3338dbfa8 <col:30, col:59>
| |   |   `-CallExpr 0x7fa3338dbf78 <col:37, col:59> 'double'
| |   |     |-ImplicitCastExpr 0x7fa3338dbf60 <col:37, col:39> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fa3338dbf28 <col:37, col:39> 'double (double)' lvalue Function 0x7fa3330e25f0 'exp' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fa3338dbc20 <col:43, col:51> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fa3338dbbe0 <col:51> '_A1' lvalue ParmVar 0x7fa3338db930 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fa3338dbaf8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fa3338dbb40 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa3338dc0c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:854:1, col:109> col:46 fabs 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fa3338dc028 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fa3338dc2b0 <col:83, col:109>
| | | `-ReturnStmt 0x7fa3338dc298 <col:84, col:107>
| | |   `-CallExpr 0x7fa3338dc250 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fa3338dc238 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa3338dc1d8 <col:91, col:93> 'float (float)' lvalue Function 0x7fa3330ea8f0 'fabsf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fa3338dc280 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa3338dc210 <col:99> 'float' lvalue ParmVar 0x7fa3338dc028 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fa3338dc160 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa3338dc1a8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa3338dc3b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:855:1, col:109> col:46 fabs 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fa3338dc318 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fa3338dc5a0 <col:83, col:109>
| | | `-ReturnStmt 0x7fa3338dc588 <col:84, col:107>
| | |   `-CallExpr 0x7fa3338dc540 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fa3338dc528 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa3338dc4c8 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fa3330eac30 'fabsl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fa3338dc570 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa3338dc500 <col:99> 'long double' lvalue ParmVar 0x7fa3338dc318 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fa3338dc450 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa3338dc498 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fa3338dca60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:858:1, line:861:63> col:1 fabs
| | |-TemplateTypeParmDecl 0x7fa3338dc5c0 <line:858:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fa3338dc9c8 <line:859:1, line:861:63> col:1 fabs 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fa3338dc8f0 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fa3338dcf80 <col:30, col:63>
| |   | `-ReturnStmt 0x7fa3338dcf68 <col:31, col:61>
| |   |   `-CallExpr 0x7fa3338dcf38 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fa3338dcf20 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fa3338dcee8 <col:38, col:40> 'double (double)' lvalue Function 0x7fa3330eaa90 'fabs' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fa3338dcbe0 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fa3338dcba0 <col:53> '_A1' lvalue ParmVar 0x7fa3338dc8f0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fa3338dcab8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fa3338dcb00 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa3338dd080 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:866:1, col:111> col:46 floor 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fa3338dcfe8 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fa3338dd270 <col:84, col:111>
| | | `-ReturnStmt 0x7fa3338dd258 <col:85, col:109>
| | |   `-CallExpr 0x7fa3338dd210 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7fa3338dd1f8 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa3338dd198 <col:92, col:94> 'float (float)' lvalue Function 0x7fa3330edd88 'floorf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fa3338dd240 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa3338dd1d0 <col:101> 'float' lvalue ParmVar 0x7fa3338dcfe8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fa3338dd120 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa3338dd168 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa3338dd370 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:867:1, col:111> col:46 floor 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fa3338dd2d8 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fa3338dd560 <col:84, col:111>
| | | `-ReturnStmt 0x7fa3338dd548 <col:85, col:109>
| | |   `-CallExpr 0x7fa3338dd500 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7fa3338dd4e8 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa3338dd488 <col:92, col:94> 'long double (long double)' lvalue Function 0x7fa3330ee0c8 'floorl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fa3338dd530 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa3338dd4c0 <col:101> 'long double' lvalue ParmVar 0x7fa3338dd2d8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fa3338dd410 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa3338dd458 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fa3338dda40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:870:1, line:873:65> col:1 floor
| | |-TemplateTypeParmDecl 0x7fa3338dd580 <line:870:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fa3338dd9a8 <line:871:1, line:873:65> col:1 floor 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fa3338dd8d0 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fa3338ddf60 <col:31, col:65>
| |   | `-ReturnStmt 0x7fa3338ddf48 <col:32, col:63>
| |   |   `-CallExpr 0x7fa3338ddf18 <col:39, col:63> 'double'
| |   |     |-ImplicitCastExpr 0x7fa3338ddf00 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fa3338ddec8 <col:39, col:41> 'double (double)' lvalue Function 0x7fa3330edf28 'floor' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fa3338ddbc0 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fa3338ddb80 <col:55> '_A1' lvalue ParmVar 0x7fa3338dd8d0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fa3338dda98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fa3338ddae0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa3338de0e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:878:1, col:141> col:46 fmod 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7fa3338ddfc8 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fa3338de040 <col:67, col:73> col:73 used __lcpp_y 'float'
| | |-CompoundStmt 0x7fa3338de320 <col:105, col:141>
| | | `-ReturnStmt 0x7fa3338de308 <col:106, col:139>
| | |   `-CallExpr 0x7fa3338de2a0 <col:113, col:139> 'float'
| | |     |-ImplicitCastExpr 0x7fa3338de288 <col:113, col:115> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa3338de200 <col:113, col:115> 'float (float, float)' lvalue Function 0x7fa3330f0d60 'fmodf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7fa3338de2d8 <col:121> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fa3338de238 <col:121> 'float' lvalue ParmVar 0x7fa3338ddfc8 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fa3338de2f0 <col:131> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa3338de260 <col:131> 'float' lvalue ParmVar 0x7fa3338de040 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7fa3338de188 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa3338de1d0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa3338de4a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:879:1, col:141> col:46 fmod 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fa3338de388 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fa3338de400 <col:73, col:85> col:85 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fa3338de6e0 <col:105, col:141>
| | | `-ReturnStmt 0x7fa3338de6c8 <col:106, col:139>
| | |   `-CallExpr 0x7fa3338de660 <col:113, col:139> 'long double'
| | |     |-ImplicitCastExpr 0x7fa3338de648 <col:113, col:115> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa3338de5c0 <col:113, col:115> 'long double (long double, long double)' lvalue Function 0x7fa3330f11b0 'fmodl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fa3338de698 <col:121> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fa3338de5f8 <col:121> 'long double' lvalue ParmVar 0x7fa3338de388 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fa3338de6b0 <col:131> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa3338de620 <col:131> 'long double' lvalue ParmVar 0x7fa3338de400 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fa3338de548 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa3338de590 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fa3338def40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:882:1, line:896:1> line:890:1 fmod
| | |-TemplateTypeParmDecl 0x7fa3338de700 <line:882:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fa3338de768 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fa3338deea8 <line:883:1, line:896:1> line:890:1 fmod 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fa3338ded50 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fa3338dedc0 <col:20, col:24> col:24 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fa3338df768 <line:891:1, line:896:1>
| |   | |-DeclStmt 0x7fa3338df1b8 <line:892:5, col:66>
| |   | | `-TypedefDecl 0x7fa3338df160 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fa3338df0f0 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fa3338df5b0 <line:893:5, line:894:68>
| |   | | `-StaticAssertDecl 0x7fa3338df578 <line:893:5, line:894:67> line:893:5
| |   | |   |-ParenExpr 0x7fa3338df530 <col:19, line:894:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fa3338df510 <line:893:20, line:894:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fa3338df4f0 <line:893:21, line:894:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fa3338df4c8 <line:893:22, line:894:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fa3338df328 <line:893:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fa3338df488 <line:894:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fa3338df550 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fa3338df750 <line:895:5, col:67>
| |   |   `-CallExpr 0x7fa3338df718 <col:12, col:67> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fa3338df5e8 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'fmod' 0x7fa3330f0f88 0x7fa3338de0e0 0x7fa3338de4a0 0x7fa3338def40
| |   |     |-CStyleCastExpr 0x7fa3338df690 <col:19, col:34> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fa3338df658 <col:34> '_A1' lvalue ParmVar 0x7fa3338ded50 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fa3338df6f0 <col:44, col:59> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fa3338df6b8 <col:59> '_A2' lvalue ParmVar 0x7fa3338dedc0 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fa3338defa0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fa3338defe8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa3338df918 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:901:1, col:136> col:46 frexp 'float (float, int *) noexcept' inline
| | |-ParmVarDecl 0x7fa3338df800 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fa3338df878 <col:68, col:73> col:73 used __lcpp_e 'int *'
| | |-CompoundStmt 0x7fa3338dfbb0 <col:99, col:136>
| | | `-ReturnStmt 0x7fa3338dfb98 <col:100, col:134>
| | |   `-CallExpr 0x7fa3338dfb30 <col:107, col:134> 'float'
| | |     |-ImplicitCastExpr 0x7fa3338dfb18 <col:107, col:109> 'float (*)(float, int *)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa3338dfa38 <col:107, col:109> 'float (float, int *)' lvalue Function 0x7fa3330e7d88 'frexpf' 'float (float, int *)'
| | |     |-ImplicitCastExpr 0x7fa3338dfb68 <col:116> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fa3338dfa70 <col:116> 'float' lvalue ParmVar 0x7fa3338df800 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fa3338dfb80 <col:126> 'int *' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa3338dfa98 <col:126> 'int *' lvalue ParmVar 0x7fa3338df878 '__lcpp_e' 'int *'
| | |-AlwaysInlineAttr 0x7fa3338df9c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa3338dfa08 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa3338dfd30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:902:1, col:136> col:46 frexp 'long double (long double, int *) noexcept' inline
| | |-ParmVarDecl 0x7fa3338dfc18 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fa3338dfc90 <col:74, col:79> col:79 used __lcpp_e 'int *'
| | |-CompoundStmt 0x7fa3338dffd0 <col:99, col:136>
| | | `-ReturnStmt 0x7fa3338dffb8 <col:100, col:134>
| | |   `-CallExpr 0x7fa3338dff50 <col:107, col:134> 'long double'
| | |     |-ImplicitCastExpr 0x7fa3338dff38 <col:107, col:109> 'long double (*)(long double, int *)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa3338dfe50 <col:107, col:109> 'long double (long double, int *)' lvalue Function 0x7fa3330e82c8 'frexpl' 'long double (long double, int *)'
| | |     |-ImplicitCastExpr 0x7fa3338dff88 <col:116> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fa3338dfe88 <col:116> 'long double' lvalue ParmVar 0x7fa3338dfc18 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fa3338dffa0 <col:126> 'int *' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa3338dfeb0 <col:126> 'int *' lvalue ParmVar 0x7fa3338dfc90 '__lcpp_e' 'int *'
| | |-AlwaysInlineAttr 0x7fa3338dfdd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa3338dfe20 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fa3338e0560 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:905:1, line:908:90> col:1 frexp
| | |-TemplateTypeParmDecl 0x7fa3338dfff0 <line:905:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fa3338e04c8 <line:906:1, line:908:90> col:1 frexp 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1, int *) noexcept' inline
| |   |-ParmVarDecl 0x7fa3338e0320 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fa3338e0398 <col:21, col:26> col:26 referenced __lcpp_e 'int *'
| |   |-CompoundStmt 0x7fa3338e0af8 <col:46, col:90>
| |   | `-ReturnStmt 0x7fa3338e0ae0 <col:47, col:88>
| |   |   `-CallExpr 0x7fa3338e0a90 <col:54, col:88> 'double'
| |   |     |-ImplicitCastExpr 0x7fa3338e0a78 <col:54, col:56> 'double (*)(double, int *)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fa3338e0a18 <col:54, col:56> 'double (double, int *)' lvalue Function 0x7fa3330e8028 'frexp' 'double (double, int *)'
| |   |     |-CStyleCastExpr 0x7fa3338e06e8 <col:62, col:70> 'double' <Dependent>
| |   |     | `-DeclRefExpr 0x7fa3338e06a8 <col:70> '_A1' lvalue ParmVar 0x7fa3338e0320 '__lcpp_x' '_A1'
| |   |     `-ImplicitCastExpr 0x7fa3338e0ac8 <col:80> 'int *' <LValueToRValue>
| |   |       `-DeclRefExpr 0x7fa3338e0710 <col:80> 'int *' lvalue ParmVar 0x7fa3338e0398 '__lcpp_e' 'int *'
| |   |-AlwaysInlineAttr 0x7fa3338e05c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fa3338e0608 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa3338e0c78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:913:1, col:135> col:46 ldexp 'float (float, int) noexcept' inline
| | |-ParmVarDecl 0x7fa3338e0b60 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fa3338e0bd8 <col:68, col:72> col:72 used __lcpp_e 'int'
| | |-CompoundStmt 0x7fa3338e0ee0 <col:98, col:135>
| | | `-ReturnStmt 0x7fa3338e0ec8 <col:99, col:133>
| | |   `-CallExpr 0x7fa3338e0e60 <col:106, col:133> 'float'
| | |     |-ImplicitCastExpr 0x7fa3338e0e48 <col:106, col:108> 'float (*)(float, int)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa3338e0d98 <col:106, col:108> 'float (float, int)' lvalue Function 0x7fa3330e6538 'ldexpf' 'float (float, int)'
| | |     |-ImplicitCastExpr 0x7fa3338e0e98 <col:115> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fa3338e0dd0 <col:115> 'float' lvalue ParmVar 0x7fa3338e0b60 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fa3338e0eb0 <col:125> 'int' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa3338e0df8 <col:125> 'int' lvalue ParmVar 0x7fa3338e0bd8 '__lcpp_e' 'int'
| | |-AlwaysInlineAttr 0x7fa3338e0d20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa3338e0d68 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa3338e1060 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:914:1, col:135> col:46 ldexp 'long double (long double, int) noexcept' inline
| | |-ParmVarDecl 0x7fa3338e0f48 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fa3338e0fc0 <col:74, col:78> col:78 used __lcpp_e 'int'
| | |-CompoundStmt 0x7fa3338e12d0 <col:98, col:135>
| | | `-ReturnStmt 0x7fa3338e12b8 <col:99, col:133>
| | |   `-CallExpr 0x7fa3338e1250 <col:106, col:133> 'long double'
| | |     |-ImplicitCastExpr 0x7fa3338e1238 <col:106, col:108> 'long double (*)(long double, int)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa3338e1180 <col:106, col:108> 'long double (long double, int)' lvalue Function 0x7fa3330e7ab8 'ldexpl' 'long double (long double, int)'
| | |     |-ImplicitCastExpr 0x7fa3338e1288 <col:115> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fa3338e11b8 <col:115> 'long double' lvalue ParmVar 0x7fa3338e0f48 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fa3338e12a0 <col:125> 'int' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa3338e11e0 <col:125> 'int' lvalue ParmVar 0x7fa3338e0fc0 '__lcpp_e' 'int'
| | |-AlwaysInlineAttr 0x7fa3338e1108 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa3338e1150 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fa3338e1898 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:917:1, line:920:89> col:1 ldexp
| | |-TemplateTypeParmDecl 0x7fa3338e12f0 <line:917:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fa3338e1800 <line:918:1, line:920:89> col:1 ldexp 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1, int) noexcept' inline
| |   |-ParmVarDecl 0x7fa3338e1620 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fa3338e1698 <col:21, col:25> col:25 referenced __lcpp_e 'int'
| |   |-CompoundStmt 0x7fa3338e1e38 <col:45, col:89>
| |   | `-ReturnStmt 0x7fa3338e1e20 <col:46, col:87>
| |   |   `-CallExpr 0x7fa3338e1dd0 <col:53, col:87> 'double'
| |   |     |-ImplicitCastExpr 0x7fa3338e1db8 <col:53, col:55> 'double (*)(double, int)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fa3338e1d58 <col:53, col:55> 'double (double, int)' lvalue Function 0x7fa3330e7800 'ldexp' 'double (double, int)'
| |   |     |-CStyleCastExpr 0x7fa3338e1a20 <col:61, col:69> 'double' <Dependent>
| |   |     | `-DeclRefExpr 0x7fa3338e19e0 <col:69> '_A1' lvalue ParmVar 0x7fa3338e1620 '__lcpp_x' '_A1'
| |   |     `-ImplicitCastExpr 0x7fa3338e1e08 <col:79> 'int' <LValueToRValue>
| |   |       `-DeclRefExpr 0x7fa3338e1a48 <col:79> 'int' lvalue ParmVar 0x7fa3338e1698 '__lcpp_e' 'int'
| |   |-AlwaysInlineAttr 0x7fa3338e18f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fa3338e1940 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa3338e1f38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:925:1, col:107> col:46 log 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fa3338e1ea0 <col:50, col:56> col:56 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fa3338e2128 <col:82, col:107>
| | | `-ReturnStmt 0x7fa3338e2110 <col:83, col:105>
| | |   `-CallExpr 0x7fa3338e20c8 <col:90, col:105> 'float'
| | |     |-ImplicitCastExpr 0x7fa3338e20b0 <col:90, col:92> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa3338e2050 <col:90, col:92> 'float (float)' lvalue Function 0x7fa3330e3360 'logf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fa3338e20f8 <col:97> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa3338e2088 <col:97> 'float' lvalue ParmVar 0x7fa3338e1ea0 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fa3338e1fd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa3338e2020 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa3338e2228 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:926:1, col:107> col:46 log 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fa3338e2190 <col:50, col:62> col:62 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fa3338e2418 <col:82, col:107>
| | | `-ReturnStmt 0x7fa3338e2400 <col:83, col:105>
| | |   `-CallExpr 0x7fa3338e23b8 <col:90, col:105> 'long double'
| | |     |-ImplicitCastExpr 0x7fa3338e23a0 <col:90, col:92> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa3338e2340 <col:90, col:92> 'long double (long double)' lvalue Function 0x7fa3330e36a0 'logl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fa3338e23e8 <col:97> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa3338e2378 <col:97> 'long double' lvalue ParmVar 0x7fa3338e2190 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fa3338e22c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa3338e2310 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fa3338e28e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:929:1, line:932:61> col:1 log
| | |-TemplateTypeParmDecl 0x7fa3338e2438 <line:929:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fa3338e2848 <line:930:1, line:932:61> col:1 log 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fa3338e2770 <col:5, col:9> col:9 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fa3338e2e00 <col:29, col:61>
| |   | `-ReturnStmt 0x7fa3338e2de8 <col:30, col:59>
| |   |   `-CallExpr 0x7fa3338e2db8 <col:37, col:59> 'double'
| |   |     |-ImplicitCastExpr 0x7fa3338e2da0 <col:37, col:39> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fa3338e2d68 <col:37, col:39> 'double (double)' lvalue Function 0x7fa3330e3500 'log' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fa3338e2a60 <col:43, col:51> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fa3338e2a20 <col:51> '_A1' lvalue ParmVar 0x7fa3338e2770 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fa3338e2938 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fa3338e2980 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa3338e2f00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:937:1, col:111> col:46 log10 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fa3338e2e68 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fa3338e30f0 <col:84, col:111>
| | | `-ReturnStmt 0x7fa3338e30d8 <col:85, col:109>
| | |   `-CallExpr 0x7fa3338e3090 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7fa3338e3078 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa3338e3018 <col:92, col:94> 'float (float)' lvalue Function 0x7fa3330e3890 'log10f' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fa3338e30c0 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa3338e3050 <col:101> 'float' lvalue ParmVar 0x7fa3338e2e68 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fa3338e2fa0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa3338e2fe8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa3338e31f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:938:1, col:111> col:46 log10 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fa3338e3158 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fa3338e33e0 <col:84, col:111>
| | | `-ReturnStmt 0x7fa3338e33c8 <col:85, col:109>
| | |   `-CallExpr 0x7fa3338e3380 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7fa3338e3368 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa3338e3308 <col:92, col:94> 'long double (long double)' lvalue Function 0x7fa3330e3bd0 'log10l' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fa3338e33b0 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa3338e3340 <col:101> 'long double' lvalue ParmVar 0x7fa3338e3158 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fa3338e3290 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa3338e32d8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fa3338e38d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:941:1, line:944:65> col:1 log10
| | |-TemplateTypeParmDecl 0x7fa3338e3400 <line:941:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fa3338e3840 <line:942:1, line:944:65> col:1 log10 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fa3338e3730 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fa3338e3e00 <col:31, col:65>
| |   | `-ReturnStmt 0x7fa3338e3de8 <col:32, col:63>
| |   |   `-CallExpr 0x7fa3338e3db8 <col:39, col:63> 'double'
| |   |     |-ImplicitCastExpr 0x7fa3338e3da0 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fa3338e3d68 <col:39, col:41> 'double (double)' lvalue Function 0x7fa3330e3a30 'log10' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fa3338e3a58 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fa3338e3a18 <col:55> '_A1' lvalue ParmVar 0x7fa3338e3730 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fa3338e3930 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fa3338e3978 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa3338e3f80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:949:1, col:142> col:46 modf 'float (float, float *) noexcept' inline
| | |-ParmVarDecl 0x7fa3338e3e68 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fa3338e3ee0 <col:67, col:74> col:74 used __lcpp_y 'float *'
| | |-CompoundStmt 0x7fa3338e4220 <col:106, col:142>
| | | `-ReturnStmt 0x7fa3338e4208 <col:107, col:140>
| | |   `-CallExpr 0x7fa3338e41a0 <col:114, col:140> 'float'
| | |     |-ImplicitCastExpr 0x7fa3338e4188 <col:114, col:116> 'float (*)(float, float *)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa3338e40a0 <col:114, col:116> 'float (float, float *)' lvalue Function 0x7fa3330e5d18 'modff' 'float (float, float *)'
| | |     |-ImplicitCastExpr 0x7fa3338e41d8 <col:122> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fa3338e40d8 <col:122> 'float' lvalue ParmVar 0x7fa3338e3e68 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fa3338e41f0 <col:132> 'float *' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa3338e4100 <col:132> 'float *' lvalue ParmVar 0x7fa3338e3ee0 '__lcpp_y' 'float *'
| | |-AlwaysInlineAttr 0x7fa3338e4028 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa3338e4070 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa3338e43a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:950:1, col:142> col:46 modf 'long double (long double, long double *) noexcept' inline
| | |-ParmVarDecl 0x7fa3338e4288 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fa3338e4300 <col:73, col:86> col:86 used __lcpp_y 'long double *'
| | |-CompoundStmt 0x7fa3338e4640 <col:106, col:142>
| | | `-ReturnStmt 0x7fa3338e4628 <col:107, col:140>
| | |   `-CallExpr 0x7fa3338e45c0 <col:114, col:140> 'long double'
| | |     |-ImplicitCastExpr 0x7fa3338e45a8 <col:114, col:116> 'long double (*)(long double, long double *)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa3338e44c0 <col:114, col:116> 'long double (long double, long double *)' lvalue Function 0x7fa3330e6298 'modfl' 'long double (long double, long double *)'
| | |     |-ImplicitCastExpr 0x7fa3338e45f8 <col:122> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fa3338e44f8 <col:122> 'long double' lvalue ParmVar 0x7fa3338e4288 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fa3338e4610 <col:132> 'long double *' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa3338e4520 <col:132> 'long double *' lvalue ParmVar 0x7fa3338e4300 '__lcpp_y' 'long double *'
| | |-AlwaysInlineAttr 0x7fa3338e4448 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa3338e4490 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa3338e47c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:956:1, col:139> col:46 pow 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7fa3338e46a8 <col:50, col:56> col:56 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fa3338e4720 <col:66, col:72> col:72 used __lcpp_y 'float'
| | |-CompoundStmt 0x7fa3338e4a00 <col:104, col:139>
| | | `-ReturnStmt 0x7fa3338e49e8 <col:105, col:137>
| | |   `-CallExpr 0x7fa3338e4980 <col:112, col:137> 'float'
| | |     |-ImplicitCastExpr 0x7fa3338e4968 <col:112, col:114> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa3338e48e0 <col:112, col:114> 'float (float, float)' lvalue Function 0x7fa3330eba28 'powf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7fa3338e49b8 <col:119> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fa3338e4918 <col:119> 'float' lvalue ParmVar 0x7fa3338e46a8 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fa3338e49d0 <col:129> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa3338e4940 <col:129> 'float' lvalue ParmVar 0x7fa3338e4720 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7fa3338e4868 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa3338e48b0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa3338e4b80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:957:1, col:139> col:46 pow 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fa3338e4a68 <col:50, col:62> col:62 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fa3338e4ae0 <col:72, col:84> col:84 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fa3338e4dc0 <col:104, col:139>
| | | `-ReturnStmt 0x7fa3338e4da8 <col:105, col:137>
| | |   `-CallExpr 0x7fa3338e4d40 <col:112, col:137> 'long double'
| | |     |-ImplicitCastExpr 0x7fa3338e4d28 <col:112, col:114> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa3338e4ca0 <col:112, col:114> 'long double (long double, long double)' lvalue Function 0x7fa3330ebe78 'powl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fa3338e4d78 <col:119> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fa3338e4cd8 <col:119> 'long double' lvalue ParmVar 0x7fa3338e4a68 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fa3338e4d90 <col:129> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa3338e4d00 <col:129> 'long double' lvalue ParmVar 0x7fa3338e4ae0 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fa3338e4c28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa3338e4c70 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fa3338e5620 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:960:1, line:974:1> line:968:1 pow
| | |-TemplateTypeParmDecl 0x7fa3338e4de0 <line:960:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fa3338e4e48 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fa3338e5588 <line:961:1, line:974:1> line:968:1 pow 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fa3338e5430 <col:5, col:9> col:9 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fa3338e54a0 <col:19, col:23> col:23 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fa3338e5e48 <line:969:1, line:974:1>
| |   | |-DeclStmt 0x7fa3338e5898 <line:970:5, col:66>
| |   | | `-TypedefDecl 0x7fa3338e5840 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fa3338e57d0 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fa3338e5c90 <line:971:5, line:972:68>
| |   | | `-StaticAssertDecl 0x7fa3338e5c58 <line:971:5, line:972:67> line:971:5
| |   | |   |-ParenExpr 0x7fa3338e5c10 <col:19, line:972:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fa3338e5bf0 <line:971:20, line:972:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fa3338e5bd0 <line:971:21, line:972:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fa3338e5ba8 <line:971:22, line:972:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fa3338e5a08 <line:971:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fa3338e5b68 <line:972:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fa3338e5c30 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fa3338e5e30 <line:973:5, col:66>
| |   |   `-CallExpr 0x7fa3338e5df8 <col:12, col:66> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fa3338e5cc8 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'pow' 0x7fa3330ebc50 0x7fa3338e47c0 0x7fa3338e4b80 0x7fa3338e5620
| |   |     |-CStyleCastExpr 0x7fa3338e5d70 <col:18, col:33> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fa3338e5d38 <col:33> '_A1' lvalue ParmVar 0x7fa3338e5430 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fa3338e5dd0 <col:43, col:58> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fa3338e5d98 <col:58> '_A2' lvalue ParmVar 0x7fa3338e54a0 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fa3338e5680 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fa3338e56c8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa3338e5f58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:979:1, col:107> col:46 sin 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fa3338e5ec0 <col:50, col:56> col:56 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fa3338e6148 <col:82, col:107>
| | | `-ReturnStmt 0x7fa3338e6130 <col:83, col:105>
| | |   `-CallExpr 0x7fa3338e60e8 <col:90, col:105> 'float'
| | |     |-ImplicitCastExpr 0x7fa3338e60d0 <col:90, col:92> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa3338e6070 <col:90, col:92> 'float (float)' lvalue Function 0x7fa3330ded10 'sinf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fa3338e6118 <col:97> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa3338e60a8 <col:97> 'float' lvalue ParmVar 0x7fa3338e5ec0 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fa3338e5ff8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa3338e6040 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa3338e6248 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:980:1, col:107> col:46 sin 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fa3338e61b0 <col:50, col:62> col:62 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fa3338e6438 <col:82, col:107>
| | | `-ReturnStmt 0x7fa3338e6420 <col:83, col:105>
| | |   `-CallExpr 0x7fa3338e63d8 <col:90, col:105> 'long double'
| | |     |-ImplicitCastExpr 0x7fa3338e63c0 <col:90, col:92> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa3338e6360 <col:90, col:92> 'long double (long double)' lvalue Function 0x7fa3330df050 'sinl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fa3338e6408 <col:97> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa3338e6398 <col:97> 'long double' lvalue ParmVar 0x7fa3338e61b0 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fa3338e62e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa3338e6330 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fa3338e6900 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:983:1, line:986:61> col:1 sin
| | |-TemplateTypeParmDecl 0x7fa3338e6458 <line:983:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fa3338e6868 <line:984:1, line:986:61> col:1 sin 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fa3338e6790 <col:5, col:9> col:9 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fa3338e6e20 <col:29, col:61>
| |   | `-ReturnStmt 0x7fa3338e6e08 <col:30, col:59>
| |   |   `-CallExpr 0x7fa3338e6dd8 <col:37, col:59> 'double'
| |   |     |-ImplicitCastExpr 0x7fa3338e6dc0 <col:37, col:39> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fa3338e6d88 <col:37, col:39> 'double (double)' lvalue Function 0x7fa3330deeb0 'sin' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fa3338e6a80 <col:43, col:51> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fa3338e6a40 <col:51> '_A1' lvalue ParmVar 0x7fa3338e6790 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fa3338e6958 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fa3338e69a0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa3338e6f20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:991:1, col:109> col:46 sinh 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fa3338e6e88 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fa3338e7110 <col:83, col:109>
| | | `-ReturnStmt 0x7fa3338e70f8 <col:84, col:107>
| | |   `-CallExpr 0x7fa3338e70b0 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fa3338e7098 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa3338e7038 <col:91, col:93> 'float (float)' lvalue Function 0x7fa3330e1a90 'sinhf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fa3338e70e0 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa3338e7070 <col:99> 'float' lvalue ParmVar 0x7fa3338e6e88 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fa3338e6fc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa3338e7008 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa3338e7210 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:992:1, col:109> col:46 sinh 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fa3338e7178 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fa3338e7400 <col:83, col:109>
| | | `-ReturnStmt 0x7fa3338e73e8 <col:84, col:107>
| | |   `-CallExpr 0x7fa3338e73a0 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fa3338e7388 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa3338e7328 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fa3330e1dd0 'sinhl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fa3338e73d0 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa3338e7360 <col:99> 'long double' lvalue ParmVar 0x7fa3338e7178 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fa3338e72b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa3338e72f8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fa3338e9ad8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:995:1, line:998:63> col:1 sinh
| | |-TemplateTypeParmDecl 0x7fa3338e7420 <line:995:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fa3338e9a40 <line:996:1, line:998:63> col:1 sinh 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fa3338e7750 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fa3338ea000 <col:30, col:63>
| |   | `-ReturnStmt 0x7fa3338e9fe8 <col:31, col:61>
| |   |   `-CallExpr 0x7fa3338e9fb8 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fa3338e9fa0 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fa3338e9f68 <col:38, col:40> 'double (double)' lvalue Function 0x7fa3330e1c30 'sinh' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fa3338e9c58 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fa3338e9c18 <col:53> '_A1' lvalue ParmVar 0x7fa3338e7750 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fa3338e9b30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fa3338e9b78 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa3338ea100 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1003:1, col:109> col:46 sqrt 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fa3338ea068 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fa3338ea2f0 <col:83, col:109>
| | | `-ReturnStmt 0x7fa3338ea2d8 <col:84, col:107>
| | |   `-CallExpr 0x7fa3338ea290 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fa3338ea278 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa3338ea218 <col:91, col:93> 'float (float)' lvalue Function 0x7fa3330ec020 'sqrtf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fa3338ea2c0 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa3338ea250 <col:99> 'float' lvalue ParmVar 0x7fa3338ea068 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fa3338ea1a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa3338ea1e8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa3338ea3f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1004:1, col:109> col:46 sqrt 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fa3338ea358 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fa3338ea5e0 <col:83, col:109>
| | | `-ReturnStmt 0x7fa3338ea5c8 <col:84, col:107>
| | |   `-CallExpr 0x7fa3338ea580 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fa3338ea568 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa3338ea508 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fa3330ec360 'sqrtl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fa3338ea5b0 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa3338ea540 <col:99> 'long double' lvalue ParmVar 0x7fa3338ea358 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fa3338ea490 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa3338ea4d8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fa3338eaaa0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1007:1, line:1010:63> col:1 sqrt
| | |-TemplateTypeParmDecl 0x7fa3338ea600 <line:1007:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fa3338eaa08 <line:1008:1, line:1010:63> col:1 sqrt 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fa3338ea930 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fa3338eafc0 <col:30, col:63>
| |   | `-ReturnStmt 0x7fa3338eafa8 <col:31, col:61>
| |   |   `-CallExpr 0x7fa3338eaf78 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fa3338eaf60 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fa3338eaf28 <col:38, col:40> 'double (double)' lvalue Function 0x7fa3330ec1c0 'sqrt' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fa3338eac20 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fa3338eabe0 <col:53> '_A1' lvalue ParmVar 0x7fa3338ea930 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fa3338eaaf8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fa3338eab40 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa3338eb0c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1015:1, col:107> col:46 tan 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fa3338eb028 <col:50, col:56> col:56 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fa3338eb2b0 <col:82, col:107>
| | | `-ReturnStmt 0x7fa3338eb298 <col:83, col:105>
| | |   `-CallExpr 0x7fa3338eb250 <col:90, col:105> 'float'
| | |     |-ImplicitCastExpr 0x7fa3338eb238 <col:90, col:92> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa3338eb1d8 <col:90, col:92> 'float (float)' lvalue Function 0x7fa3330df1f0 'tanf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fa3338eb280 <col:97> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa3338eb210 <col:97> 'float' lvalue ParmVar 0x7fa3338eb028 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fa3338eb160 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa3338eb1a8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa3338eb3b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1016:1, col:107> col:46 tan 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fa3338eb318 <col:50, col:62> col:62 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fa3338eb5a0 <col:82, col:107>
| | | `-ReturnStmt 0x7fa3338eb588 <col:83, col:105>
| | |   `-CallExpr 0x7fa3338eb540 <col:90, col:105> 'long double'
| | |     |-ImplicitCastExpr 0x7fa3338eb528 <col:90, col:92> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa3338eb4c8 <col:90, col:92> 'long double (long double)' lvalue Function 0x7fa3330df530 'tanl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fa3338eb570 <col:97> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa3338eb500 <col:97> 'long double' lvalue ParmVar 0x7fa3338eb318 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fa3338eb450 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa3338eb498 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fa3338eba98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1019:1, line:1022:61> col:1 tan
| | |-TemplateTypeParmDecl 0x7fa3338eb5c0 <line:1019:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fa3338eba00 <line:1020:1, line:1022:61> col:1 tan 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fa3338eb8f0 <col:5, col:9> col:9 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fa3338ebfc0 <col:29, col:61>
| |   | `-ReturnStmt 0x7fa3338ebfa8 <col:30, col:59>
| |   |   `-CallExpr 0x7fa3338ebf78 <col:37, col:59> 'double'
| |   |     |-ImplicitCastExpr 0x7fa3338ebf60 <col:37, col:39> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fa3338ebf28 <col:37, col:39> 'double (double)' lvalue Function 0x7fa3330df390 'tan' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fa3338ebc18 <col:43, col:51> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fa3338ebbd8 <col:51> '_A1' lvalue ParmVar 0x7fa3338eb8f0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fa3338ebaf0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fa3338ebb38 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa3338ec0c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1027:1, col:109> col:46 tanh 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fa3338ec028 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fa3338ec2b0 <col:83, col:109>
| | | `-ReturnStmt 0x7fa3338ec298 <col:84, col:107>
| | |   `-CallExpr 0x7fa3338ec250 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fa3338ec238 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa3338ec1d8 <col:91, col:93> 'float (float)' lvalue Function 0x7fa3330e1f70 'tanhf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fa3338ec280 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa3338ec210 <col:99> 'float' lvalue ParmVar 0x7fa3338ec028 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fa3338ec160 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa3338ec1a8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa3338ec3b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1028:1, col:109> col:46 tanh 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fa3338ec318 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fa3338ec5a0 <col:83, col:109>
| | | `-ReturnStmt 0x7fa3338ec588 <col:84, col:107>
| | |   `-CallExpr 0x7fa3338ec540 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fa3338ec528 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa3338ec4c8 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fa3330e22b0 'tanhl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fa3338ec570 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa3338ec500 <col:99> 'long double' lvalue ParmVar 0x7fa3338ec318 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fa3338ec450 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa3338ec498 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fa3338eca60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1031:1, line:1034:63> col:1 tanh
| | |-TemplateTypeParmDecl 0x7fa3338ec5c0 <line:1031:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fa3338ec9c8 <line:1032:1, line:1034:63> col:1 tanh 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fa3338ec8f0 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fa3338ecf80 <col:30, col:63>
| |   | `-ReturnStmt 0x7fa3338ecf68 <col:31, col:61>
| |   |   `-CallExpr 0x7fa3338ecf38 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fa3338ecf20 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fa3338ecee8 <col:38, col:40> 'double (double)' lvalue Function 0x7fa3330e2110 'tanh' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fa3338ecbe0 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fa3338ecba0 <col:53> '_A1' lvalue ParmVar 0x7fa3338ec8f0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fa3338ecab8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fa3338ecb00 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa3338ed080 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1038:1, col:111> col:46 acosh 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fa3338ecfe8 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fa3338ed270 <col:84, col:111>
| | | `-ReturnStmt 0x7fa3338ed258 <col:85, col:109>
| | |   `-CallExpr 0x7fa3338ed210 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7fa3338ed1f8 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa3338ed198 <col:92, col:94> 'float (float)' lvalue Function 0x7fa3330df6d0 'acoshf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fa3338ed240 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa3338ed1d0 <col:101> 'float' lvalue ParmVar 0x7fa3338ecfe8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fa3338ed120 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa3338ed168 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa3338ed370 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1039:1, col:111> col:46 acosh 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fa3338ed2d8 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fa3338ed560 <col:84, col:111>
| | | `-ReturnStmt 0x7fa3338ed548 <col:85, col:109>
| | |   `-CallExpr 0x7fa3338ed500 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7fa3338ed4e8 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa3338ed488 <col:92, col:94> 'long double (long double)' lvalue Function 0x7fa3330e0230 'acoshl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fa3338ed530 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa3338ed4c0 <col:101> 'long double' lvalue ParmVar 0x7fa3338ed2d8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fa3338ed410 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa3338ed458 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fa3338eda98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1041:1, line:1044:65> col:1 acosh
| | |-TemplateTypeParmDecl 0x7fa3338ed580 <line:1041:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fa3338eda00 <line:1042:1, line:1044:65> col:1 acosh 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fa3338ed8b0 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fa3338edfc0 <col:31, col:65>
| |   | `-ReturnStmt 0x7fa3338edfa8 <col:32, col:63>
| |   |   `-CallExpr 0x7fa3338edf78 <col:39, col:63> 'double'
| |   |     |-ImplicitCastExpr 0x7fa3338edf60 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fa3338edf28 <col:39, col:41> 'double (double)' lvalue Function 0x7fa3330e0090 'acosh' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fa3338edc18 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fa3338edbd8 <col:55> '_A1' lvalue ParmVar 0x7fa3338ed8b0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fa3338edaf0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fa3338edb38 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa3338ee0c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1048:1, col:111> col:46 asinh 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fa3338ee028 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fa3338ee2b0 <col:84, col:111>
| | | `-ReturnStmt 0x7fa3338ee298 <col:85, col:109>
| | |   `-CallExpr 0x7fa3338ee250 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7fa3338ee238 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa3338ee1d8 <col:92, col:94> 'float (float)' lvalue Function 0x7fa3330e03d0 'asinhf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fa3338ee280 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa3338ee210 <col:101> 'float' lvalue ParmVar 0x7fa3338ee028 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fa3338ee160 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa3338ee1a8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa3338ee3b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1049:1, col:111> col:46 asinh 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fa3338ee318 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fa3338ee5a0 <col:84, col:111>
| | | `-ReturnStmt 0x7fa3338ee588 <col:85, col:109>
| | |   `-CallExpr 0x7fa3338ee540 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7fa3338ee528 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa3338ee4c8 <col:92, col:94> 'long double (long double)' lvalue Function 0x7fa3330e0710 'asinhl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fa3338ee570 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa3338ee500 <col:101> 'long double' lvalue ParmVar 0x7fa3338ee318 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fa3338ee450 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa3338ee498 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fa3338eea60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1051:1, line:1054:65> col:1 asinh
| | |-TemplateTypeParmDecl 0x7fa3338ee5c0 <line:1051:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fa3338ee9c8 <line:1052:1, line:1054:65> col:1 asinh 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fa3338ee8f0 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fa3338eef80 <col:31, col:65>
| |   | `-ReturnStmt 0x7fa3338eef68 <col:32, col:63>
| |   |   `-CallExpr 0x7fa3338eef38 <col:39, col:63> 'double'
| |   |     |-ImplicitCastExpr 0x7fa3338eef20 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fa3338eeee8 <col:39, col:41> 'double (double)' lvalue Function 0x7fa3330e0570 'asinh' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fa3338eebe0 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fa3338eeba0 <col:55> '_A1' lvalue ParmVar 0x7fa3338ee8f0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fa3338eeab8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fa3338eeb00 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa3338ef080 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1058:1, col:111> col:46 atanh 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fa3338eefe8 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fa3338ef270 <col:84, col:111>
| | | `-ReturnStmt 0x7fa3338ef258 <col:85, col:109>
| | |   `-CallExpr 0x7fa3338ef210 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7fa3338ef1f8 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa3338ef198 <col:92, col:94> 'float (float)' lvalue Function 0x7fa3330e08b0 'atanhf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fa3338ef240 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa3338ef1d0 <col:101> 'float' lvalue ParmVar 0x7fa3338eefe8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fa3338ef120 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa3338ef168 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa3338ef370 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1059:1, col:111> col:46 atanh 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fa3338ef2d8 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fa3338ef560 <col:84, col:111>
| | | `-ReturnStmt 0x7fa3338ef548 <col:85, col:109>
| | |   `-CallExpr 0x7fa3338ef500 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7fa3338ef4e8 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa3338ef488 <col:92, col:94> 'long double (long double)' lvalue Function 0x7fa3330e0bf0 'atanhl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fa3338ef530 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa3338ef4c0 <col:101> 'long double' lvalue ParmVar 0x7fa3338ef2d8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fa3338ef410 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa3338ef458 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fa3338efa98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1061:1, line:1064:65> col:1 atanh
| | |-TemplateTypeParmDecl 0x7fa3338ef580 <line:1061:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fa3338efa00 <line:1062:1, line:1064:65> col:1 atanh 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fa3338ef8b0 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fa3338effc0 <col:31, col:65>
| |   | `-ReturnStmt 0x7fa3338effa8 <col:32, col:63>
| |   |   `-CallExpr 0x7fa3338eff78 <col:39, col:63> 'double'
| |   |     |-ImplicitCastExpr 0x7fa3338eff60 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fa3338eff28 <col:39, col:41> 'double (double)' lvalue Function 0x7fa3330e0a50 'atanh' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fa3338efc18 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fa3338efbd8 <col:55> '_A1' lvalue ParmVar 0x7fa3338ef8b0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fa3338efaf0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fa3338efb38 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa3338f00c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1068:1, col:109> col:46 cbrt 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fa3338f0028 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fa3338f02b0 <col:83, col:109>
| | | `-ReturnStmt 0x7fa3338f0298 <col:84, col:107>
| | |   `-CallExpr 0x7fa3338f0250 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fa3338f0238 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa3338f01d8 <col:91, col:93> 'float (float)' lvalue Function 0x7fa3330eadd0 'cbrtf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fa3338f0280 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa3338f0210 <col:99> 'float' lvalue ParmVar 0x7fa3338f0028 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fa3338f0160 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa3338f01a8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa3338f03b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1069:1, col:109> col:46 cbrt 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fa3338f0318 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fa3338f05a0 <col:83, col:109>
| | | `-ReturnStmt 0x7fa3338f0588 <col:84, col:107>
| | |   `-CallExpr 0x7fa3338f0540 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fa3338f0528 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa3338f04c8 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fa3330eb110 'cbrtl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fa3338f0570 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa3338f0500 <col:99> 'long double' lvalue ParmVar 0x7fa3338f0318 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fa3338f0450 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa3338f0498 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fa3338f0a60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1071:1, line:1074:63> col:1 cbrt
| | |-TemplateTypeParmDecl 0x7fa3338f05c0 <line:1071:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fa3338f09c8 <line:1072:1, line:1074:63> col:1 cbrt 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fa3338f08f0 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fa3338f0f80 <col:30, col:63>
| |   | `-ReturnStmt 0x7fa3338f0f68 <col:31, col:61>
| |   |   `-CallExpr 0x7fa3338f0f38 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fa3338f0f20 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fa3338f0ee8 <col:38, col:40> 'double (double)' lvalue Function 0x7fa3330eaf70 'cbrt' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fa3338f0be0 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fa3338f0ba0 <col:53> '_A1' lvalue ParmVar 0x7fa3338f08f0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fa3338f0ab8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fa3338f0b00 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa3338f1100 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1078:1, line:1081:1> line:1078:40 copysign 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7fa3338f0fe8 <col:49, col:55> col:55 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fa3338f1060 <line:1079:49, col:55> col:55 used __lcpp_y 'float'
| | |-CompoundStmt 0x7fa3338f1340 <col:75, line:1081:1>
| | | `-ReturnStmt 0x7fa3338f1328 <line:1080:3, col:40>
| | |   `-CallExpr 0x7fa3338f12c0 <col:10, col:40> 'float'
| | |     |-ImplicitCastExpr 0x7fa3338f12a8 <col:10, col:12> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa3338f1220 <col:10, col:12> 'float (float, float)' lvalue Function 0x7fa3330f2240 'copysignf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7fa3338f12f8 <col:22> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fa3338f1258 <col:22> 'float' lvalue ParmVar 0x7fa3338f0fe8 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fa3338f1310 <col:32> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa3338f1280 <col:32> 'float' lvalue ParmVar 0x7fa3338f1060 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7fa3338f11a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa3338f11f0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa3338f14c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1082:1, line:1085:1> line:1083:1 copysign 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fa3338f13a8 <col:10, col:22> col:22 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fa3338f1420 <col:32, col:44> col:44 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fa3338f1700 <col:64, line:1085:1>
| | | `-ReturnStmt 0x7fa3338f16e8 <line:1084:3, col:40>
| | |   `-CallExpr 0x7fa3338f1680 <col:10, col:40> 'long double'
| | |     |-ImplicitCastExpr 0x7fa3338f1668 <col:10, col:12> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa3338f15e0 <col:10, col:12> 'long double (long double, long double)' lvalue Function 0x7fa3330f2690 'copysignl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fa3338f16b8 <col:22> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fa3338f1618 <col:22> 'long double' lvalue ParmVar 0x7fa3338f13a8 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fa3338f16d0 <col:32> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa3338f1640 <col:32> 'long double' lvalue ParmVar 0x7fa3338f1420 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fa3338f1568 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa3338f15b0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fa3338f1f80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1087:1, line:1101:1> line:1095:1 copysign
| | |-TemplateTypeParmDecl 0x7fa3338f1720 <line:1087:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fa3338f1788 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fa3338f1ee8 <line:1088:1, line:1101:1> line:1095:1 copysign 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fa3338f1d90 <col:10, col:14> col:14 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fa3338f1e00 <col:24, col:28> col:28 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fa3338f27a8 <line:1096:1, line:1101:1>
| |   | |-DeclStmt 0x7fa3338f21f8 <line:1097:5, col:66>
| |   | | `-TypedefDecl 0x7fa3338f21a0 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fa3338f2130 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fa3338f25f0 <line:1098:5, line:1099:68>
| |   | | `-StaticAssertDecl 0x7fa3338f25b8 <line:1098:5, line:1099:67> line:1098:5
| |   | |   |-ParenExpr 0x7fa3338f2570 <col:19, line:1099:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fa3338f2550 <line:1098:20, line:1099:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fa3338f2530 <line:1098:21, line:1099:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fa3338f2508 <line:1098:22, line:1099:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fa3338f2368 <line:1098:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fa3338f24c8 <line:1099:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fa3338f2590 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fa3338f2790 <line:1100:5, col:71>
| |   |   `-CallExpr 0x7fa3338f2758 <col:12, col:71> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fa3338f2628 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'copysign' 0x7fa3330f2468 0x7fa3338f1100 0x7fa3338f14c0 0x7fa3338f1f80
| |   |     |-CStyleCastExpr 0x7fa3338f26d0 <col:23, col:38> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fa3338f2698 <col:38> '_A1' lvalue ParmVar 0x7fa3338f1d90 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fa3338f2730 <col:48, col:63> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fa3338f26f8 <col:63> '_A2' lvalue ParmVar 0x7fa3338f1e00 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fa3338f1fe0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fa3338f2028 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa3338f28b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1105:1, col:107> col:46 erf 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fa3338f2820 <col:50, col:56> col:56 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fa3338f2aa8 <col:82, col:107>
| | | `-ReturnStmt 0x7fa3338f2a90 <col:83, col:105>
| | |   `-CallExpr 0x7fa3338f2a48 <col:90, col:105> 'float'
| | |     |-ImplicitCastExpr 0x7fa3338f2a30 <col:90, col:92> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa3338f29d0 <col:90, col:92> 'float (float)' lvalue Function 0x7fa3330ec500 'erff' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fa3338f2a78 <col:97> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa3338f2a08 <col:97> 'float' lvalue ParmVar 0x7fa3338f2820 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fa3338f2958 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa3338f29a0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa3338f2ba8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1106:1, col:107> col:46 erf 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fa3338f2b10 <col:50, col:62> col:62 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fa3338f2d98 <col:82, col:107>
| | | `-ReturnStmt 0x7fa3338f2d80 <col:83, col:105>
| | |   `-CallExpr 0x7fa3338f2d38 <col:90, col:105> 'long double'
| | |     |-ImplicitCastExpr 0x7fa3338f2d20 <col:90, col:92> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa3338f2cc0 <col:90, col:92> 'long double (long double)' lvalue Function 0x7fa3330ec890 'erfl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fa3338f2d68 <col:97> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa3338f2cf8 <col:97> 'long double' lvalue ParmVar 0x7fa3338f2b10 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fa3338f2c48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa3338f2c90 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fa3338f3260 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1108:1, line:1111:61> col:1 erf
| | |-TemplateTypeParmDecl 0x7fa3338f2db8 <line:1108:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fa3338f31c8 <line:1109:1, line:1111:61> col:1 erf 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fa3338f30f0 <col:5, col:9> col:9 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fa3338f3780 <col:29, col:61>
| |   | `-ReturnStmt 0x7fa3338f3768 <col:30, col:59>
| |   |   `-CallExpr 0x7fa3338f3738 <col:37, col:59> 'double'
| |   |     |-ImplicitCastExpr 0x7fa3338f3720 <col:37, col:39> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fa3338f36e8 <col:37, col:39> 'double (double)' lvalue Function 0x7fa3330ec6a0 'erf' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fa3338f33e0 <col:43, col:51> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fa3338f33a0 <col:51> '_A1' lvalue ParmVar 0x7fa3338f30f0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fa3338f32b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fa3338f3300 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa3338f3880 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1115:1, col:109> col:46 erfc 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fa3338f37e8 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fa3338f4a78 <col:83, col:109>
| | | `-ReturnStmt 0x7fa3338f4a60 <col:84, col:107>
| | |   `-CallExpr 0x7fa3338f4a18 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fa3338f4a00 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa3338f3998 <col:91, col:93> 'float (float)' lvalue Function 0x7fa3330eca30 'erfcf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fa3338f4a48 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa3338f39d0 <col:99> 'float' lvalue ParmVar 0x7fa3338f37e8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fa3338f3920 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa3338f3968 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa3338f4b78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1116:1, col:109> col:46 erfc 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fa3338f4ae0 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fa3338f4d68 <col:83, col:109>
| | | `-ReturnStmt 0x7fa3338f4d50 <col:84, col:107>
| | |   `-CallExpr 0x7fa3338f4d08 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fa3338f4cf0 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa3338f4c90 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fa3330ecd70 'erfcl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fa3338f4d38 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa3338f4cc8 <col:99> 'long double' lvalue ParmVar 0x7fa3338f4ae0 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fa3338f4c18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa3338f4c60 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fa3338f5230 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1118:1, line:1121:63> col:1 erfc
| | |-TemplateTypeParmDecl 0x7fa3338f4d88 <line:1118:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fa3338f5198 <line:1119:1, line:1121:63> col:1 erfc 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fa3338f50c0 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fa3338f5750 <col:30, col:63>
| |   | `-ReturnStmt 0x7fa3338f5738 <col:31, col:61>
| |   |   `-CallExpr 0x7fa3338f5708 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fa3338f56f0 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fa3338f56b8 <col:38, col:40> 'double (double)' lvalue Function 0x7fa3330ecbd0 'erfc' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fa3338f53b0 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fa3338f5370 <col:53> '_A1' lvalue ParmVar 0x7fa3338f50c0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fa3338f5288 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fa3338f52d0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa3338f5850 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1125:1, col:109> col:46 exp2 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fa3338f57b8 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fa3338f5a40 <col:83, col:109>
| | | `-ReturnStmt 0x7fa3338f5a28 <col:84, col:107>
| | |   `-CallExpr 0x7fa3338f59e0 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fa3338f59c8 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa3338f5968 <col:91, col:93> 'float (float)' lvalue Function 0x7fa3330e29a0 'exp2f' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fa3338f5a10 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa3338f59a0 <col:99> 'float' lvalue ParmVar 0x7fa3338f57b8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fa3338f58f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa3338f5938 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa3338f5b40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1126:1, col:109> col:46 exp2 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fa3338f5aa8 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fa3338f5d30 <col:83, col:109>
| | | `-ReturnStmt 0x7fa3338f5d18 <col:84, col:107>
| | |   `-CallExpr 0x7fa3338f5cd0 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fa3338f5cb8 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa3338f5c58 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fa3330e2ce0 'exp2l' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fa3338f5d00 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa3338f5c90 <col:99> 'long double' lvalue ParmVar 0x7fa3338f5aa8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fa3338f5be0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa3338f5c28 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fa3338f61f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1128:1, line:1131:63> col:1 exp2
| | |-TemplateTypeParmDecl 0x7fa3338f5d50 <line:1128:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fa3338f6158 <line:1129:1, line:1131:63> col:1 exp2 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fa3338f6080 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fa3338f6710 <col:30, col:63>
| |   | `-ReturnStmt 0x7fa3338f66f8 <col:31, col:61>
| |   |   `-CallExpr 0x7fa3338f66c8 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fa3338f66b0 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fa3338f6678 <col:38, col:40> 'double (double)' lvalue Function 0x7fa3330e2b40 'exp2' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fa3338f6370 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fa3338f6330 <col:53> '_A1' lvalue ParmVar 0x7fa3338f6080 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fa3338f6248 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fa3338f6290 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa3338f6810 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1135:1, col:111> col:46 expm1 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fa3338f6778 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fa3338f6a00 <col:84, col:111>
| | | `-ReturnStmt 0x7fa3338f69e8 <col:85, col:109>
| | |   `-CallExpr 0x7fa3338f69a0 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7fa3338f6988 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa3338f6928 <col:92, col:94> 'float (float)' lvalue Function 0x7fa3330e2e80 'expm1f' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fa3338f69d0 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa3338f6960 <col:101> 'float' lvalue ParmVar 0x7fa3338f6778 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fa3338f68b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa3338f68f8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa3338f6b00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1136:1, col:111> col:46 expm1 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fa3338f6a68 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fa3338f6cf0 <col:84, col:111>
| | | `-ReturnStmt 0x7fa3338f6cd8 <col:85, col:109>
| | |   `-CallExpr 0x7fa3338f6c90 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7fa3338f6c78 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa3338f6c18 <col:92, col:94> 'long double (long double)' lvalue Function 0x7fa3330e31c0 'expm1l' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fa3338f6cc0 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa3338f6c50 <col:101> 'long double' lvalue ParmVar 0x7fa3338f6a68 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fa3338f6ba0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa3338f6be8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fa3338f71b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1138:1, line:1141:65> col:1 expm1
| | |-TemplateTypeParmDecl 0x7fa3338f6d10 <line:1138:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fa3338f7118 <line:1139:1, line:1141:65> col:1 expm1 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fa3338f7040 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fa3338f76d0 <col:31, col:65>
| |   | `-ReturnStmt 0x7fa3338f76b8 <col:32, col:63>
| |   |   `-CallExpr 0x7fa3338f7688 <col:39, col:63> 'double'
| |   |     |-ImplicitCastExpr 0x7fa3338f7670 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fa3338f7638 <col:39, col:41> 'double (double)' lvalue Function 0x7fa3330e3020 'expm1' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fa3338f7330 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fa3338f72f0 <col:55> '_A1' lvalue ParmVar 0x7fa3338f7040 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fa3338f7208 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fa3338f7250 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa3338f7850 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1145:1, col:141> col:46 fdim 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7fa3338f7738 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fa3338f77b0 <col:67, col:73> col:73 used __lcpp_y 'float'
| | |-CompoundStmt 0x7fa3338f7a90 <col:105, col:141>
| | | `-ReturnStmt 0x7fa3338f7a78 <col:106, col:139>
| | |   `-CallExpr 0x7fa3338f7a10 <col:113, col:139> 'float'
| | |     |-ImplicitCastExpr 0x7fa3338f79f8 <col:113, col:115> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa3338f7970 <col:113, col:115> 'float (float, float)' lvalue Function 0x7fa3330e4d68 'fdimf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7fa3338f7a48 <col:121> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fa3338f79a8 <col:121> 'float' lvalue ParmVar 0x7fa3338f7738 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fa3338f7a60 <col:131> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa3338f79d0 <col:131> 'float' lvalue ParmVar 0x7fa3338f77b0 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7fa3338f78f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa3338f7940 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa3338f7c10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1146:1, col:141> col:46 fdim 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fa3338f7af8 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fa3338f7b70 <col:73, col:85> col:85 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fa3338f7e50 <col:105, col:141>
| | | `-ReturnStmt 0x7fa3338f7e38 <col:106, col:139>
| | |   `-CallExpr 0x7fa3338f7dd0 <col:113, col:139> 'long double'
| | |     |-ImplicitCastExpr 0x7fa3338f7db8 <col:113, col:115> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa3338f7d30 <col:113, col:115> 'long double (long double, long double)' lvalue Function 0x7fa3330e51b8 'fdiml' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fa3338f7e08 <col:121> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fa3338f7d68 <col:121> 'long double' lvalue ParmVar 0x7fa3338f7af8 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fa3338f7e20 <col:131> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa3338f7d90 <col:131> 'long double' lvalue ParmVar 0x7fa3338f7b70 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fa3338f7cb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa3338f7d00 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fa3338f86b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1148:1, line:1162:1> line:1156:1 fdim
| | |-TemplateTypeParmDecl 0x7fa3338f7e70 <line:1148:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fa3338f7ed8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fa3338f8618 <line:1149:1, line:1162:1> line:1156:1 fdim 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fa3338f84c0 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fa3338f8530 <col:20, col:24> col:24 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fa3338faef8 <line:1157:1, line:1162:1>
| |   | |-DeclStmt 0x7fa3338f8928 <line:1158:5, col:66>
| |   | | `-TypedefDecl 0x7fa3338f88d0 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fa3338f8860 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fa3338fad40 <line:1159:5, line:1160:68>
| |   | | `-StaticAssertDecl 0x7fa3338fad08 <line:1159:5, line:1160:67> line:1159:5
| |   | |   |-ParenExpr 0x7fa3338facc0 <col:19, line:1160:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fa3338faca0 <line:1159:20, line:1160:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fa3338fac80 <line:1159:21, line:1160:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fa3338fac58 <line:1159:22, line:1160:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fa3338faab8 <line:1159:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fa3338fac18 <line:1160:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fa3338face0 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fa3338faee0 <line:1161:5, col:67>
| |   |   `-CallExpr 0x7fa3338faea8 <col:12, col:67> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fa3338fad78 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'fdim' 0x7fa3330e4f90 0x7fa3338f7850 0x7fa3338f7c10 0x7fa3338f86b0
| |   |     |-CStyleCastExpr 0x7fa3338fae20 <col:19, col:34> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fa3338fade8 <col:34> '_A1' lvalue ParmVar 0x7fa3338f84c0 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fa3338fae80 <col:44, col:59> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fa3338fae48 <col:59> '_A2' lvalue ParmVar 0x7fa3338f8530 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fa3338f8710 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fa3338f8758 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa3338fb108 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1166:1, col:171> col:46 fma 'float (float, float, float) noexcept' inline
| | |-ParmVarDecl 0x7fa3338faf70 <col:50, col:56> col:56 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fa3338fafe8 <col:66, col:72> col:72 used __lcpp_y 'float'
| | |-ParmVarDecl 0x7fa3338fb060 <col:82, col:88> col:88 used __lcpp_z 'float'
| | |-CompoundStmt 0x7fa3338fb3c0 <col:126, col:171>
| | | `-ReturnStmt 0x7fa3338fb3a8 <col:127, col:169>
| | |   `-CallExpr 0x7fa3338fb320 <col:134, col:169> 'float'
| | |     |-ImplicitCastExpr 0x7fa3338fb308 <col:134, col:136> 'float (*)(float, float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa3338fb230 <col:134, col:136> 'float (float, float, float)' lvalue Function 0x7fa3330f81a8 'fmaf' 'float (float, float, float)'
| | |     |-ImplicitCastExpr 0x7fa3338fb360 <col:141> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fa3338fb268 <col:141> 'float' lvalue ParmVar 0x7fa3338faf70 '__lcpp_x' 'float'
| | |     |-ImplicitCastExpr 0x7fa3338fb378 <col:151> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fa3338fb290 <col:151> 'float' lvalue ParmVar 0x7fa3338fafe8 '__lcpp_y' 'float'
| | |     `-ImplicitCastExpr 0x7fa3338fb390 <col:161> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa3338fb2b8 <col:161> 'float' lvalue ParmVar 0x7fa3338fb060 '__lcpp_z' 'float'
| | |-AlwaysInlineAttr 0x7fa3338fb1b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa3338fb200 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa3338fb5c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1167:1, col:171> col:46 fma 'long double (long double, long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fa3338fb428 <col:50, col:62> col:62 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fa3338fb4a0 <col:72, col:84> col:84 used __lcpp_y 'long double'
| | |-ParmVarDecl 0x7fa3338fb518 <col:94, col:106> col:106 used __lcpp_z 'long double'
| | |-CompoundStmt 0x7fa3338fb880 <col:126, col:171>
| | | `-ReturnStmt 0x7fa3338fb868 <col:127, col:169>
| | |   `-CallExpr 0x7fa3338fb7e0 <col:134, col:169> 'long double'
| | |     |-ImplicitCastExpr 0x7fa3338fb7c8 <col:134, col:136> 'long double (*)(long double, long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa3338fb6e8 <col:134, col:136> 'long double (long double, long double, long double)' lvalue Function 0x7fa3330e8888 'fmal' 'long double (long double, long double, long double)'
| | |     |-ImplicitCastExpr 0x7fa3338fb820 <col:141> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fa3338fb720 <col:141> 'long double' lvalue ParmVar 0x7fa3338fb428 '__lcpp_x' 'long double'
| | |     |-ImplicitCastExpr 0x7fa3338fb838 <col:151> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fa3338fb748 <col:151> 'long double' lvalue ParmVar 0x7fa3338fb4a0 '__lcpp_y' 'long double'
| | |     `-ImplicitCastExpr 0x7fa3338fb850 <col:161> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa3338fb770 <col:161> 'long double' lvalue ParmVar 0x7fa3338fb518 '__lcpp_z' 'long double'
| | |-AlwaysInlineAttr 0x7fa3338fb670 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa3338fb6b8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fa3338fc4d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1169:1, line:1185:1> line:1178:1 fma
| | |-TemplateTypeParmDecl 0x7fa3338fb8a0 <line:1169:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fa3338fb908 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | |-TemplateTypeParmDecl 0x7fa3338fb978 <col:33, col:39> col:39 referenced class depth 0 index 2 _A3
| | `-FunctionDecl 0x7fa3338fc438 <line:1170:1, line:1185:1> line:1178:1 fma 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value && std::is_arithmetic<_A3>::value, std::__promote<_A1, _A2, _A3> >::type (_A1, _A2, _A3) noexcept' inline
| |   |-ParmVarDecl 0x7fa3338fc210 <col:5, col:9> col:9 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fa3338fc280 <col:19, col:23> col:23 referenced __lcpp_y '_A2'
| |   |-ParmVarDecl 0x7fa3338fc2f0 <col:33, col:37> col:37 referenced __lcpp_z '_A3'
| |   |-CompoundStmt 0x7fa3338fd090 <line:1179:1, line:1185:1>
| |   | |-DeclStmt 0x7fa3338fc7d8 <line:1180:5, col:71>
| |   | | `-TypedefDecl 0x7fa3338fc780 <col:5, col:58> col:58 referenced __result_type 'typename std::__promote<_A1, _A2, _A3>::type'
| |   | |   `-DependentNameType 0x7fa3338fc710 'typename std::__promote<_A1, _A2, _A3>::type' dependent
| |   | |-DeclStmt 0x7fa3338fce70 <line:1181:5, line:1183:68>
| |   | | `-StaticAssertDecl 0x7fa3338fce38 <line:1181:5, line:1183:67> line:1181:5
| |   | |   |-ParenExpr 0x7fa3338fcdf0 <col:19, line:1183:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fa3338fcdd0 <line:1181:20, line:1183:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fa3338fcdb0 <line:1181:21, line:1183:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fa3338fcd88 <line:1181:22, line:1183:56> '<dependent type>' '&&'
| |   | |   |       |-BinaryOperator 0x7fa3338fcba8 <line:1181:22, line:1182:56> '<dependent type>' '&&'
| |   | |   |       | |-DependentScopeDeclRefExpr 0x7fa3338fc9a8 <line:1181:22, col:56> '<dependent type>' lvalue
| |   | |   |       | `-DependentScopeDeclRefExpr 0x7fa3338fcb68 <line:1182:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fa3338fcd48 <line:1183:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fa3338fce10 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fa3338fd078 <line:1184:5, col:91>
| |   |   `-CallExpr 0x7fa3338fd038 <col:12, col:91> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fa3338fcea8 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'fma' 0x7fa3330f84f8 0x7fa3338fb108 0x7fa3338fb5c0 0x7fa3338fc4d0
| |   |     |-CStyleCastExpr 0x7fa3338fcf50 <col:18, col:33> '__result_type':'typename std::__promote<_A1, _A2, _A3>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fa3338fcf18 <col:33> '_A1' lvalue ParmVar 0x7fa3338fc210 '__lcpp_x' '_A1'
| |   |     |-CStyleCastExpr 0x7fa3338fcfb0 <col:43, col:58> '__result_type':'typename std::__promote<_A1, _A2, _A3>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fa3338fcf78 <col:58> '_A2' lvalue ParmVar 0x7fa3338fc280 '__lcpp_y' '_A2'
| |   |     `-CStyleCastExpr 0x7fa3338fd010 <col:68, col:83> '__result_type':'typename std::__promote<_A1, _A2, _A3>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fa3338fcfd8 <col:83> '_A3' lvalue ParmVar 0x7fa3338fc2f0 '__lcpp_z' '_A3'
| |   |-AlwaysInlineAttr 0x7fa3338fc538 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fa3338fc580 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa3338fd220 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1189:1, col:141> col:46 fmax 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7fa3338fd108 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fa3338fd180 <col:67, col:73> col:73 used __lcpp_y 'float'
| | |-CompoundStmt 0x7fa3338fd460 <col:105, col:141>
| | | `-ReturnStmt 0x7fa3338fd448 <col:106, col:139>
| | |   `-CallExpr 0x7fa3338fd3e0 <col:113, col:139> 'float'
| | |     |-ImplicitCastExpr 0x7fa3338fd3c8 <col:113, col:115> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa3338fd340 <col:113, col:115> 'float (float, float)' lvalue Function 0x7fa3330e53e0 'fmaxf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7fa3338fd418 <col:121> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fa3338fd378 <col:121> 'float' lvalue ParmVar 0x7fa3338fd108 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fa3338fd430 <col:131> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa3338fd3a0 <col:131> 'float' lvalue ParmVar 0x7fa3338fd180 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7fa3338fd2c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa3338fd310 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa3338fd5e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1190:1, col:141> col:46 fmax 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fa3338fd4c8 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fa3338fd540 <col:73, col:85> col:85 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fa3338fd820 <col:105, col:141>
| | | `-ReturnStmt 0x7fa3338fd808 <col:106, col:139>
| | |   `-CallExpr 0x7fa3338fd7a0 <col:113, col:139> 'long double'
| | |     |-ImplicitCastExpr 0x7fa3338fd788 <col:113, col:115> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa3338fd700 <col:113, col:115> 'long double (long double, long double)' lvalue Function 0x7fa3330f7838 'fmaxl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fa3338fd7d8 <col:121> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fa3338fd738 <col:121> 'long double' lvalue ParmVar 0x7fa3338fd4c8 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fa3338fd7f0 <col:131> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa3338fd760 <col:131> 'long double' lvalue ParmVar 0x7fa3338fd540 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fa3338fd688 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa3338fd6d0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fa3338fe080 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1192:1, line:1206:1> line:1200:1 fmax
| | |-TemplateTypeParmDecl 0x7fa3338fd840 <line:1192:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fa3338fd8a8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fa3338fdfe8 <line:1193:1, line:1206:1> line:1200:1 fmax 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fa3338fde90 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fa3338fdf00 <col:20, col:24> col:24 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fa3338fe8a8 <line:1201:1, line:1206:1>
| |   | |-DeclStmt 0x7fa3338fe2f8 <line:1202:5, col:66>
| |   | | `-TypedefDecl 0x7fa3338fe2a0 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fa3338fe230 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fa3338fe6f0 <line:1203:5, line:1204:68>
| |   | | `-StaticAssertDecl 0x7fa3338fe6b8 <line:1203:5, line:1204:67> line:1203:5
| |   | |   |-ParenExpr 0x7fa3338fe670 <col:19, line:1204:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fa3338fe650 <line:1203:20, line:1204:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fa3338fe630 <line:1203:21, line:1204:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fa3338fe608 <line:1203:22, line:1204:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fa3338fe468 <line:1203:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fa3338fe5c8 <line:1204:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fa3338fe690 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fa3338fe890 <line:1205:5, col:67>
| |   |   `-CallExpr 0x7fa3338fe858 <col:12, col:67> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fa3338fe728 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'fmax' 0x7fa3330e5608 0x7fa3338fd220 0x7fa3338fd5e0 0x7fa3338fe080
| |   |     |-CStyleCastExpr 0x7fa3338fe7d0 <col:19, col:34> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fa3338fe798 <col:34> '_A1' lvalue ParmVar 0x7fa3338fde90 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fa3338fe830 <col:44, col:59> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fa3338fe7f8 <col:59> '_A2' lvalue ParmVar 0x7fa3338fdf00 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fa3338fe0e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fa3338fe128 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa3338fea40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1210:1, col:141> col:46 fmin 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7fa3338fe920 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fa3338fe998 <col:67, col:73> col:73 used __lcpp_y 'float'
| | |-CompoundStmt 0x7fa3338fec80 <col:105, col:141>
| | | `-ReturnStmt 0x7fa3338fec68 <col:106, col:139>
| | |   `-CallExpr 0x7fa3338fec00 <col:113, col:139> 'float'
| | |     |-ImplicitCastExpr 0x7fa3338febe8 <col:113, col:115> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa3338feb60 <col:113, col:115> 'float (float, float)' lvalue Function 0x7fa3330f7a60 'fminf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7fa3338fec38 <col:121> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fa3338feb98 <col:121> 'float' lvalue ParmVar 0x7fa3338fe920 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fa3338fec50 <col:131> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa3338febc0 <col:131> 'float' lvalue ParmVar 0x7fa3338fe998 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7fa3338feae8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa3338feb30 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa3338fee00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1211:1, col:141> col:46 fmin 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fa3338fece8 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fa3338fed60 <col:73, col:85> col:85 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fa3338ff040 <col:105, col:141>
| | | `-ReturnStmt 0x7fa3338ff028 <col:106, col:139>
| | |   `-CallExpr 0x7fa3338fefc0 <col:113, col:139> 'long double'
| | |     |-ImplicitCastExpr 0x7fa3338fefa8 <col:113, col:115> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa3338fef20 <col:113, col:115> 'long double (long double, long double)' lvalue Function 0x7fa3330f7eb0 'fminl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fa3338feff8 <col:121> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fa3338fef58 <col:121> 'long double' lvalue ParmVar 0x7fa3338fece8 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fa3338ff010 <col:131> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa3338fef80 <col:131> 'long double' lvalue ParmVar 0x7fa3338fed60 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fa3338feea8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa3338feef0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fa3338ff8a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1213:1, line:1227:1> line:1221:1 fmin
| | |-TemplateTypeParmDecl 0x7fa3338ff060 <line:1213:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fa3338ff0c8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fa3338ff808 <line:1214:1, line:1227:1> line:1221:1 fmin 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fa3338ff6b0 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fa3338ff720 <col:20, col:24> col:24 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fa3339000c8 <line:1222:1, line:1227:1>
| |   | |-DeclStmt 0x7fa3338ffb18 <line:1223:5, col:66>
| |   | | `-TypedefDecl 0x7fa3338ffac0 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fa3338ffa50 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fa3338fff10 <line:1224:5, line:1225:68>
| |   | | `-StaticAssertDecl 0x7fa3338ffed8 <line:1224:5, line:1225:67> line:1224:5
| |   | |   |-ParenExpr 0x7fa3338ffe90 <col:19, line:1225:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fa3338ffe70 <line:1224:20, line:1225:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fa3338ffe50 <line:1224:21, line:1225:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fa3338ffe28 <line:1224:22, line:1225:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fa3338ffc88 <line:1224:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fa3338ffde8 <line:1225:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fa3338ffeb0 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fa3339000b0 <line:1226:5, col:67>
| |   |   `-CallExpr 0x7fa333900078 <col:12, col:67> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fa3338fff48 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'fmin' 0x7fa3330f7c88 0x7fa3338fea40 0x7fa3338fee00 0x7fa3338ff8a0
| |   |     |-CStyleCastExpr 0x7fa3338ffff0 <col:19, col:34> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fa3338fffb8 <col:34> '_A1' lvalue ParmVar 0x7fa3338ff6b0 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fa333900050 <col:44, col:59> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fa333900018 <col:59> '_A2' lvalue ParmVar 0x7fa3338ff720 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fa3338ff900 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fa3338ff948 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa333900258 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1231:1, col:143> col:46 hypot 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7fa333900140 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fa3339001b8 <col:68, col:74> col:74 used __lcpp_y 'float'
| | |-CompoundStmt 0x7fa333900498 <col:106, col:143>
| | | `-ReturnStmt 0x7fa333900480 <col:107, col:141>
| | |   `-CallExpr 0x7fa333900418 <col:114, col:141> 'float'
| | |     |-ImplicitCastExpr 0x7fa333900400 <col:114, col:116> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa333900378 <col:114, col:116> 'float (float, float)' lvalue Function 0x7fa3330eb330 'hypotf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7fa333900450 <col:123> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fa3339003b0 <col:123> 'float' lvalue ParmVar 0x7fa333900140 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fa333900468 <col:133> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa3339003d8 <col:133> 'float' lvalue ParmVar 0x7fa3339001b8 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7fa333900300 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa333900348 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa333900618 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1232:1, col:143> col:46 hypot 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fa333900500 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fa333900578 <col:74, col:86> col:86 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fa333900858 <col:106, col:143>
| | | `-ReturnStmt 0x7fa333900840 <col:107, col:141>
| | |   `-CallExpr 0x7fa3339007d8 <col:114, col:141> 'long double'
| | |     |-ImplicitCastExpr 0x7fa3339007c0 <col:114, col:116> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa333900738 <col:114, col:116> 'long double (long double, long double)' lvalue Function 0x7fa3330eb800 'hypotl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fa333900810 <col:123> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fa333900770 <col:123> 'long double' lvalue ParmVar 0x7fa333900500 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fa333900828 <col:133> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa333900798 <col:133> 'long double' lvalue ParmVar 0x7fa333900578 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fa3339006c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa333900708 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fa333901100 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1234:1, line:1248:1> line:1242:1 hypot
| | |-TemplateTypeParmDecl 0x7fa333900878 <line:1234:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fa3339008e8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fa333901068 <line:1235:1, line:1248:1> line:1242:1 hypot 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fa333900f10 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fa333900f80 <col:21, col:25> col:25 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fa333901928 <line:1243:1, line:1248:1>
| |   | |-DeclStmt 0x7fa333901378 <line:1244:5, col:66>
| |   | | `-TypedefDecl 0x7fa333901320 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fa3339012b0 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fa333901770 <line:1245:5, line:1246:68>
| |   | | `-StaticAssertDecl 0x7fa333901738 <line:1245:5, line:1246:67> line:1245:5
| |   | |   |-ParenExpr 0x7fa3339016f0 <col:19, line:1246:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fa3339016d0 <line:1245:20, line:1246:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fa3339016b0 <line:1245:21, line:1246:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fa333901688 <line:1245:22, line:1246:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fa3339014e8 <line:1245:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fa333901648 <line:1246:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fa333901710 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fa333901910 <line:1247:5, col:68>
| |   |   `-CallExpr 0x7fa3339018d8 <col:12, col:68> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fa3339017a8 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'hypot' 0x7fa3330eb558 0x7fa333900258 0x7fa333900618 0x7fa333901100
| |   |     |-CStyleCastExpr 0x7fa333901850 <col:20, col:35> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fa333901818 <col:35> '_A1' lvalue ParmVar 0x7fa333900f10 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fa3339018b0 <col:45, col:60> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fa333901878 <col:60> '_A2' lvalue ParmVar 0x7fa333900f80 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fa333901160 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fa3339011a8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa333901a38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1252:1, col:103> col:38 ilogb 'int (float) noexcept' inline
| | |-ParmVarDecl 0x7fa3339019a0 <col:44, col:50> col:50 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fa333901c28 <col:76, col:103>
| | | `-ReturnStmt 0x7fa333901c10 <col:77, col:101>
| | |   `-CallExpr 0x7fa333901bc8 <col:84, col:101> 'int'
| | |     |-ImplicitCastExpr 0x7fa333901bb0 <col:84, col:86> 'int (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa333901b50 <col:84, col:86> 'int (float)' lvalue Function 0x7fa3330e84a0 'ilogbf' 'int (float)'
| | |     `-ImplicitCastExpr 0x7fa333901bf8 <col:93> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa333901b88 <col:93> 'float' lvalue ParmVar 0x7fa3339019a0 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fa333901ad8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa333901b20 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa333901d28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1253:1, col:103> col:38 ilogb 'int (long double) noexcept' inline
| | |-ParmVarDecl 0x7fa333901c90 <col:44, col:56> col:56 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fa333901f18 <col:76, col:103>
| | | `-ReturnStmt 0x7fa333901f00 <col:77, col:101>
| | |   `-CallExpr 0x7fa333901eb8 <col:84, col:101> 'int'
| | |     |-ImplicitCastExpr 0x7fa333901ea0 <col:84, col:86> 'int (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa333901e40 <col:84, col:86> 'int (long double)' lvalue Function 0x7fa3330e9890 'ilogbl' 'int (long double)'
| | |     `-ImplicitCastExpr 0x7fa333901ee8 <col:93> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa333901e78 <col:93> 'long double' lvalue ParmVar 0x7fa333901c90 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fa333901dc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa333901e10 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fa3339023e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1255:1, line:1258:65> col:1 ilogb
| | |-TemplateTypeParmDecl 0x7fa333901f38 <line:1255:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fa333902348 <line:1256:1, line:1258:65> col:1 ilogb 'typename std::enable_if<std::is_integral<_A1>::value, int>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fa333902270 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fa333902bb8 <col:31, col:65>
| |   | `-ReturnStmt 0x7fa333902ba0 <col:32, col:63>
| |   |   `-CallExpr 0x7fa333902b70 <col:39, col:63> 'int'
| |   |     |-ImplicitCastExpr 0x7fa333902b58 <col:39, col:41> 'int (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fa333902b20 <col:39, col:41> 'int (double)' lvalue Function 0x7fa3330e8678 'ilogb' 'int (double)'
| |   |     `-CStyleCastExpr 0x7fa333902560 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fa333902520 <col:55> '_A1' lvalue ParmVar 0x7fa333902270 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fa333902438 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fa333902480 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa333902cb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1262:1, col:113> col:46 lgamma 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fa333902c20 <col:53, col:59> col:59 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fa333902ea8 <col:85, col:113>
| | | `-ReturnStmt 0x7fa333902e90 <col:86, col:111>
| | |   `-CallExpr 0x7fa333902e48 <col:93, col:111> 'float'
| | |     |-ImplicitCastExpr 0x7fa333902e30 <col:93, col:95> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa333902dd0 <col:93, col:95> 'float (float)' lvalue Function 0x7fa3330ecf10 'lgammaf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fa333902e78 <col:103> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa333902e08 <col:103> 'float' lvalue ParmVar 0x7fa333902c20 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fa333902d58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa333902da0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa333902fa8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1263:1, col:113> col:46 lgamma 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fa333902f10 <col:53, col:65> col:65 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fa333903198 <col:85, col:113>
| | | `-ReturnStmt 0x7fa333903180 <col:86, col:111>
| | |   `-CallExpr 0x7fa333903138 <col:93, col:111> 'long double'
| | |     |-ImplicitCastExpr 0x7fa333903120 <col:93, col:95> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa3339030c0 <col:93, col:95> 'long double (long double)' lvalue Function 0x7fa3330ed230 'lgammal' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fa333903168 <col:103> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa3339030f8 <col:103> 'long double' lvalue ParmVar 0x7fa333902f10 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fa333903048 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa333903090 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fa333903660 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1265:1, line:1268:67> col:1 lgamma
| | |-TemplateTypeParmDecl 0x7fa3339031b8 <line:1265:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fa3339035c8 <line:1266:1, line:1268:67> col:1 lgamma 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fa3339034f0 <col:8, col:12> col:12 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fa333903b80 <col:32, col:67>
| |   | `-ReturnStmt 0x7fa333903b68 <col:33, col:65>
| |   |   `-CallExpr 0x7fa333903b38 <col:40, col:65> 'double'
| |   |     |-ImplicitCastExpr 0x7fa333903b20 <col:40, col:42> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fa333903ae8 <col:40, col:42> 'double (double)' lvalue Function 0x7fa3330ed0a0 'lgamma' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fa3339037e0 <col:49, col:57> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fa3339037a0 <col:57> '_A1' lvalue ParmVar 0x7fa3339034f0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fa3339036b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fa333903700 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa333903c80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1272:1, col:111> col:44 llrint 'long long (float) noexcept' inline
| | |-ParmVarDecl 0x7fa333903be8 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fa333903ea0 <col:83, col:111>
| | | `-ReturnStmt 0x7fa333903e88 <col:84, col:109>
| | |   `-CallExpr 0x7fa333903e40 <col:91, col:109> 'long long'
| | |     |-ImplicitCastExpr 0x7fa333903e28 <col:91, col:93> 'long long (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa333903d98 <col:91, col:93> 'long long (float)' lvalue Function 0x7fa3330efc88 'llrintf' 'long long (float)'
| | |     `-ImplicitCastExpr 0x7fa333903e70 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa333903dd0 <col:101> 'float' lvalue ParmVar 0x7fa333903be8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fa333903d20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa333903d68 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa333903fa0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1273:1, col:111> col:44 llrint 'long long (long double) noexcept' inline
| | |-ParmVarDecl 0x7fa333903f08 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fa3339041c0 <col:83, col:111>
| | | `-ReturnStmt 0x7fa3339041a8 <col:84, col:109>
| | |   `-CallExpr 0x7fa333904160 <col:91, col:109> 'long long'
| | |     |-ImplicitCastExpr 0x7fa333904148 <col:91, col:93> 'long long (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa3339040b8 <col:91, col:93> 'long long (long double)' lvalue Function 0x7fa3330f00c8 'llrintl' 'long long (long double)'
| | |     `-ImplicitCastExpr 0x7fa333904190 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa3339040f0 <col:101> 'long double' lvalue ParmVar 0x7fa333903f08 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fa333904040 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa333904088 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fa333904770 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1275:1, line:1278:67> col:1 llrint
| | |-TemplateTypeParmDecl 0x7fa3339041e0 <line:1275:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fa3339046d8 <line:1276:1, line:1278:67> col:1 llrint 'typename std::enable_if<std::is_integral<_A1>::value, long long>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fa3339045c0 <col:8, col:12> col:12 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fa333904f48 <col:32, col:67>
| |   | `-ReturnStmt 0x7fa333904f30 <col:33, col:65>
| |   |   `-CallExpr 0x7fa333904f00 <col:40, col:65> 'long long'
| |   |     |-ImplicitCastExpr 0x7fa333904ee8 <col:40, col:42> 'long long (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fa333904e88 <col:40, col:42> 'long long (double)' lvalue Function 0x7fa3330efea8 'llrint' 'long long (double)'
| |   |     `-CStyleCastExpr 0x7fa3339048f0 <col:49, col:57> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fa3339048b0 <col:57> '_A1' lvalue ParmVar 0x7fa3339045c0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fa3339047c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fa333904810 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa333905048 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1282:1, col:113> col:44 llround 'long long (float) noexcept' inline
| | |-ParmVarDecl 0x7fa333904fb0 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fa333905238 <col:84, col:113>
| | | `-ReturnStmt 0x7fa333905220 <col:85, col:111>
| | |   `-CallExpr 0x7fa3339051d8 <col:92, col:111> 'long long'
| | |     |-ImplicitCastExpr 0x7fa3339051c0 <col:92, col:94> 'long long (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa333905160 <col:92, col:94> 'long long (float)' lvalue Function 0x7fa3330f02a8 'llroundf' 'long long (float)'
| | |     `-ImplicitCastExpr 0x7fa333905208 <col:103> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa333905198 <col:103> 'float' lvalue ParmVar 0x7fa333904fb0 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fa3339050e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa333905130 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa333905338 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1283:1, col:113> col:44 llround 'long long (long double) noexcept' inline
| | |-ParmVarDecl 0x7fa3339052a0 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fa333905528 <col:84, col:113>
| | | `-ReturnStmt 0x7fa333905510 <col:85, col:111>
| | |   `-CallExpr 0x7fa3339054c8 <col:92, col:111> 'long long'
| | |     |-ImplicitCastExpr 0x7fa3339054b0 <col:92, col:94> 'long long (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa333905450 <col:92, col:94> 'long long (long double)' lvalue Function 0x7fa3330f05e8 'llroundl' 'long long (long double)'
| | |     `-ImplicitCastExpr 0x7fa3339054f8 <col:103> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa333905488 <col:103> 'long double' lvalue ParmVar 0x7fa3339052a0 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fa3339053d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa333905420 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fa3339059f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1285:1, line:1288:69> col:1 llround
| | |-TemplateTypeParmDecl 0x7fa333905548 <line:1285:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fa333905958 <line:1286:1, line:1288:69> col:1 llround 'typename std::enable_if<std::is_integral<_A1>::value, long long>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fa333905880 <col:9, col:13> col:13 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fa333905f10 <col:33, col:69>
| |   | `-ReturnStmt 0x7fa333905ef8 <col:34, col:67>
| |   |   `-CallExpr 0x7fa333905ec8 <col:41, col:67> 'long long'
| |   |     |-ImplicitCastExpr 0x7fa333905eb0 <col:41, col:43> 'long long (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fa333905e78 <col:41, col:43> 'long long (double)' lvalue Function 0x7fa3330f0448 'llround' 'long long (double)'
| |   |     `-CStyleCastExpr 0x7fa333905b70 <col:51, col:59> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fa333905b30 <col:59> '_A1' lvalue ParmVar 0x7fa333905880 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fa333905a48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fa333905a90 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa333906010 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1292:1, col:111> col:46 log1p 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fa333905f78 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fa333906200 <col:84, col:111>
| | | `-ReturnStmt 0x7fa3339061e8 <col:85, col:109>
| | |   `-CallExpr 0x7fa3339061a0 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7fa333906188 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa333906128 <col:92, col:94> 'float (float)' lvalue Function 0x7fa3330e4250 'log1pf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fa3339061d0 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa333906160 <col:101> 'float' lvalue ParmVar 0x7fa333905f78 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fa3339060b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa3339060f8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa333906300 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1293:1, col:111> col:46 log1p 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fa333906268 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fa3339064f0 <col:84, col:111>
| | | `-ReturnStmt 0x7fa3339064d8 <col:85, col:109>
| | |   `-CallExpr 0x7fa333906490 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7fa333906478 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa333906418 <col:92, col:94> 'long double (long double)' lvalue Function 0x7fa3330e4590 'log1pl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fa3339064c0 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa333906450 <col:101> 'long double' lvalue ParmVar 0x7fa333906268 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fa3339063a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa3339063e8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fa3339069b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1295:1, line:1298:65> col:1 log1p
| | |-TemplateTypeParmDecl 0x7fa333906510 <line:1295:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fa333906918 <line:1296:1, line:1298:65> col:1 log1p 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fa333906840 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fa333906ed0 <col:31, col:65>
| |   | `-ReturnStmt 0x7fa333906eb8 <col:32, col:63>
| |   |   `-CallExpr 0x7fa333906e88 <col:39, col:63> 'double'
| |   |     |-ImplicitCastExpr 0x7fa333906e70 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fa333906e38 <col:39, col:41> 'double (double)' lvalue Function 0x7fa3330e43f0 'log1p' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fa333906b30 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fa333906af0 <col:55> '_A1' lvalue ParmVar 0x7fa333906840 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fa333906a08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fa333906a50 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa333906fd0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1302:1, col:109> col:46 log2 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fa333906f38 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fa3339071c0 <col:83, col:109>
| | | `-ReturnStmt 0x7fa3339071a8 <col:84, col:107>
| | |   `-CallExpr 0x7fa333907160 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fa333907148 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa3339070e8 <col:91, col:93> 'float (float)' lvalue Function 0x7fa3330e3d70 'log2f' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fa333907190 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa333907120 <col:99> 'float' lvalue ParmVar 0x7fa333906f38 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fa333907070 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa3339070b8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa3339072c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1303:1, col:109> col:46 log2 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fa333907228 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fa3339074b0 <col:83, col:109>
| | | `-ReturnStmt 0x7fa333907498 <col:84, col:107>
| | |   `-CallExpr 0x7fa333907450 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fa333907438 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa3339073d8 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fa3330e40b0 'log2l' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fa333907480 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa333907410 <col:99> 'long double' lvalue ParmVar 0x7fa333907228 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fa333907360 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa3339073a8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fa333907970 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1305:1, line:1308:63> col:1 log2
| | |-TemplateTypeParmDecl 0x7fa3339074d0 <line:1305:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fa3339078d8 <line:1306:1, line:1308:63> col:1 log2 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fa333907800 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fa333907e90 <col:30, col:63>
| |   | `-ReturnStmt 0x7fa333907e78 <col:31, col:61>
| |   |   `-CallExpr 0x7fa333907e48 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fa333907e30 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fa333907df8 <col:38, col:40> 'double (double)' lvalue Function 0x7fa3330e3f10 'log2' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fa333907af0 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fa333907ab0 <col:53> '_A1' lvalue ParmVar 0x7fa333907800 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fa3339079c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fa333907a10 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa333907f90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1312:1, col:109> col:46 logb 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fa333907ef8 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fa333908180 <col:83, col:109>
| | | `-ReturnStmt 0x7fa333908168 <col:84, col:107>
| | |   `-CallExpr 0x7fa333908120 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fa333908108 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa3339080a8 <col:91, col:93> 'float (float)' lvalue Function 0x7fa3330e4730 'logbf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fa333908150 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa3339080e0 <col:99> 'float' lvalue ParmVar 0x7fa333907ef8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fa333908030 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa333908078 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa333908280 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1313:1, col:109> col:46 logb 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fa3339081e8 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fa333908470 <col:83, col:109>
| | | `-ReturnStmt 0x7fa333908458 <col:84, col:107>
| | |   `-CallExpr 0x7fa333908410 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fa3339083f8 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa333908398 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fa3330e5a90 'logbl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fa333908440 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa3339083d0 <col:99> 'long double' lvalue ParmVar 0x7fa3339081e8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fa333908320 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa333908368 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fa333908930 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1315:1, line:1318:63> col:1 logb
| | |-TemplateTypeParmDecl 0x7fa333908490 <line:1315:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fa333908898 <line:1316:1, line:1318:63> col:1 logb 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fa3339087c0 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fa333909e50 <col:30, col:63>
| |   | `-ReturnStmt 0x7fa333909e38 <col:31, col:61>
| |   |   `-CallExpr 0x7fa333909e08 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fa333909df0 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fa333909db8 <col:38, col:40> 'double (double)' lvalue Function 0x7fa3330e58f0 'logb' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fa333909ab0 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fa333909a70 <col:53> '_A1' lvalue ParmVar 0x7fa3339087c0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fa333908988 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fa3339089d0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa333909f50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1322:1, col:104> col:39 lrint 'long (float) noexcept' inline
| | |-ParmVarDecl 0x7fa333909eb8 <col:45, col:51> col:51 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fa33390a170 <col:77, col:104>
| | | `-ReturnStmt 0x7fa33390a158 <col:78, col:102>
| | |   `-CallExpr 0x7fa33390a110 <col:85, col:102> 'long'
| | |     |-ImplicitCastExpr 0x7fa33390a0f8 <col:85, col:87> 'long (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa33390a068 <col:85, col:87> 'long (float)' lvalue Function 0x7fa3330eec68 'lrintf' 'long (float)'
| | |     `-ImplicitCastExpr 0x7fa33390a140 <col:94> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa33390a0a0 <col:94> 'float' lvalue ParmVar 0x7fa333909eb8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fa333909ff0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa33390a038 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa33390a270 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1323:1, col:104> col:39 lrint 'long (long double) noexcept' inline
| | |-ParmVarDecl 0x7fa33390a1d8 <col:45, col:57> col:57 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fa33390a490 <col:77, col:104>
| | | `-ReturnStmt 0x7fa33390a478 <col:78, col:102>
| | |   `-CallExpr 0x7fa33390a430 <col:85, col:102> 'long'
| | |     |-ImplicitCastExpr 0x7fa33390a418 <col:85, col:87> 'long (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa33390a388 <col:85, col:87> 'long (long double)' lvalue Function 0x7fa3330ef0a8 'lrintl' 'long (long double)'
| | |     `-ImplicitCastExpr 0x7fa33390a460 <col:94> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa33390a3c0 <col:94> 'long double' lvalue ParmVar 0x7fa33390a1d8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fa33390a310 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa33390a358 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fa33390aa40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1325:1, line:1328:65> col:1 lrint
| | |-TemplateTypeParmDecl 0x7fa33390a4b0 <line:1325:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fa33390a9a8 <line:1326:1, line:1328:65> col:1 lrint 'typename std::enable_if<std::is_integral<_A1>::value, long>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fa33390a890 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fa33390b1f8 <col:31, col:65>
| |   | `-ReturnStmt 0x7fa33390b1e0 <col:32, col:63>
| |   |   `-CallExpr 0x7fa33390b1b0 <col:39, col:63> 'long'
| |   |     |-ImplicitCastExpr 0x7fa33390b198 <col:39, col:41> 'long (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fa33390b138 <col:39, col:41> 'long (double)' lvalue Function 0x7fa3330eee88 'lrint' 'long (double)'
| |   |     `-CStyleCastExpr 0x7fa33390abc0 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fa33390ab80 <col:55> '_A1' lvalue ParmVar 0x7fa33390a890 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fa33390aa98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fa33390aae0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa33390b2f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1332:1, col:106> col:39 lround 'long (float) noexcept' inline
| | |-ParmVarDecl 0x7fa33390b260 <col:46, col:52> col:52 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fa33390b4e8 <col:78, col:106>
| | | `-ReturnStmt 0x7fa33390b4d0 <col:79, col:104>
| | |   `-CallExpr 0x7fa33390b488 <col:86, col:104> 'long'
| | |     |-ImplicitCastExpr 0x7fa33390b470 <col:86, col:88> 'long (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa33390b410 <col:86, col:88> 'long (float)' lvalue Function 0x7fa3330ef768 'lroundf' 'long (float)'
| | |     `-ImplicitCastExpr 0x7fa33390b4b8 <col:96> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa33390b448 <col:96> 'float' lvalue ParmVar 0x7fa33390b260 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fa33390b398 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa33390b3e0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa33390b5e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1333:1, col:106> col:39 lround 'long (long double) noexcept' inline
| | |-ParmVarDecl 0x7fa33390b550 <col:46, col:58> col:58 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fa33390b7d8 <col:78, col:106>
| | | `-ReturnStmt 0x7fa33390b7c0 <col:79, col:104>
| | |   `-CallExpr 0x7fa33390b778 <col:86, col:104> 'long'
| | |     |-ImplicitCastExpr 0x7fa33390b760 <col:86, col:88> 'long (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa33390b700 <col:86, col:88> 'long (long double)' lvalue Function 0x7fa3330efaa8 'lroundl' 'long (long double)'
| | |     `-ImplicitCastExpr 0x7fa33390b7a8 <col:96> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa33390b738 <col:96> 'long double' lvalue ParmVar 0x7fa33390b550 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fa33390b688 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa33390b6d0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fa33390bca0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1335:1, line:1338:67> col:1 lround
| | |-TemplateTypeParmDecl 0x7fa33390b7f8 <line:1335:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fa33390bc08 <line:1336:1, line:1338:67> col:1 lround 'typename std::enable_if<std::is_integral<_A1>::value, long>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fa33390bb30 <col:8, col:12> col:12 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fa33390c1c0 <col:32, col:67>
| |   | `-ReturnStmt 0x7fa33390c1a8 <col:33, col:65>
| |   |   `-CallExpr 0x7fa33390c178 <col:40, col:65> 'long'
| |   |     |-ImplicitCastExpr 0x7fa33390c160 <col:40, col:42> 'long (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fa33390c128 <col:40, col:42> 'long (double)' lvalue Function 0x7fa3330ef908 'lround' 'long (double)'
| |   |     `-CStyleCastExpr 0x7fa33390be20 <col:49, col:57> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fa33390bde0 <col:57> '_A1' lvalue ParmVar 0x7fa33390bb30 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fa33390bcf8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fa33390bd40 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa33390c2c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1344:1, col:119> col:46 nearbyint 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fa33390c228 <col:56, col:62> col:62 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fa33390c4b0 <col:88, col:119>
| | | `-ReturnStmt 0x7fa33390c498 <col:89, col:117>
| | |   `-CallExpr 0x7fa33390c450 <col:96, col:117> 'float'
| | |     |-ImplicitCastExpr 0x7fa33390c438 <col:96, col:98> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa33390c3d8 <col:96, col:98> 'float (float)' lvalue Function 0x7fa3330ee268 'nearbyintf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fa33390c480 <col:109> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa33390c410 <col:109> 'float' lvalue ParmVar 0x7fa33390c228 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fa33390c360 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa33390c3a8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa33390c5b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1345:1, col:119> col:46 nearbyint 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fa33390c518 <col:56, col:68> col:68 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fa33390c7a0 <col:88, col:119>
| | | `-ReturnStmt 0x7fa33390c788 <col:89, col:117>
| | |   `-CallExpr 0x7fa33390c740 <col:96, col:117> 'long double'
| | |     |-ImplicitCastExpr 0x7fa33390c728 <col:96, col:98> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa33390c6c8 <col:96, col:98> 'long double (long double)' lvalue Function 0x7fa3330ee5a8 'nearbyintl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fa33390c770 <col:109> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa33390c700 <col:109> 'long double' lvalue ParmVar 0x7fa33390c518 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fa33390c650 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa33390c698 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fa33390cc60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1347:1, line:1350:73> col:1 nearbyint
| | |-TemplateTypeParmDecl 0x7fa33390c7c0 <line:1347:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fa33390cbc8 <line:1348:1, line:1350:73> col:1 nearbyint 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fa33390caf0 <col:11, col:15> col:15 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fa33390d180 <col:35, col:73>
| |   | `-ReturnStmt 0x7fa33390d168 <col:36, col:71>
| |   |   `-CallExpr 0x7fa33390d138 <col:43, col:71> 'double'
| |   |     |-ImplicitCastExpr 0x7fa33390d120 <col:43, col:45> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fa33390d0e8 <col:43, col:45> 'double (double)' lvalue Function 0x7fa3330ee408 'nearbyint' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fa33390cde0 <col:55, col:63> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fa33390cda0 <col:63> '_A1' lvalue ParmVar 0x7fa33390caf0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fa33390ccb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fa33390cd00 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa33390d300 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1354:1, col:151> col:46 nextafter 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7fa33390d1e8 <col:56, col:62> col:62 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fa33390d260 <col:72, col:78> col:78 used __lcpp_y 'float'
| | |-CompoundStmt 0x7fa33390d540 <col:110, col:151>
| | | `-ReturnStmt 0x7fa33390d528 <col:111, col:149>
| | |   `-CallExpr 0x7fa33390d4c0 <col:118, col:149> 'float'
| | |     |-ImplicitCastExpr 0x7fa33390d4a8 <col:118, col:120> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa33390d420 <col:118, col:120> 'float (float, float)' lvalue Function 0x7fa3330f2f68 'nextafterf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7fa33390d4f8 <col:131> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fa33390d458 <col:131> 'float' lvalue ParmVar 0x7fa33390d1e8 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fa33390d510 <col:141> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa33390d480 <col:141> 'float' lvalue ParmVar 0x7fa33390d260 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7fa33390d3a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa33390d3f0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa33390d6c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1355:1, col:151> col:46 nextafter 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fa33390d5a8 <col:56, col:68> col:68 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fa33390d620 <col:78, col:90> col:90 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fa33390d900 <col:110, col:151>
| | | `-ReturnStmt 0x7fa33390d8e8 <col:111, col:149>
| | |   `-CallExpr 0x7fa33390d880 <col:118, col:149> 'long double'
| | |     |-ImplicitCastExpr 0x7fa33390d868 <col:118, col:120> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa33390d7e0 <col:118, col:120> 'long double (long double, long double)' lvalue Function 0x7fa3330f33b8 'nextafterl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fa33390d8b8 <col:131> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fa33390d818 <col:131> 'long double' lvalue ParmVar 0x7fa33390d5a8 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fa33390d8d0 <col:141> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa33390d840 <col:141> 'long double' lvalue ParmVar 0x7fa33390d620 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fa33390d768 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa33390d7b0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fa33390e160 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1357:1, line:1371:1> line:1365:1 nextafter
| | |-TemplateTypeParmDecl 0x7fa33390d920 <line:1357:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fa33390d988 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fa33390e0c8 <line:1358:1, line:1371:1> line:1365:1 nextafter 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fa33390df70 <col:11, col:15> col:15 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fa33390dfe0 <col:25, col:29> col:29 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fa33390e988 <line:1366:1, line:1371:1>
| |   | |-DeclStmt 0x7fa33390e3d8 <line:1367:5, col:66>
| |   | | `-TypedefDecl 0x7fa33390e380 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fa33390e310 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fa33390e7d0 <line:1368:5, line:1369:68>
| |   | | `-StaticAssertDecl 0x7fa33390e798 <line:1368:5, line:1369:67> line:1368:5
| |   | |   |-ParenExpr 0x7fa33390e750 <col:19, line:1369:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fa33390e730 <line:1368:20, line:1369:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fa33390e710 <line:1368:21, line:1369:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fa33390e6e8 <line:1368:22, line:1369:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fa33390e548 <line:1368:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fa33390e6a8 <line:1369:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fa33390e770 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fa33390e970 <line:1370:5, col:72>
| |   |   `-CallExpr 0x7fa33390e938 <col:12, col:72> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fa33390e808 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'nextafter' 0x7fa3330f3190 0x7fa33390d300 0x7fa33390d6c0 0x7fa33390e160
| |   |     |-CStyleCastExpr 0x7fa33390e8b0 <col:24, col:39> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fa33390e878 <col:39> '_A1' lvalue ParmVar 0x7fa33390df70 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fa33390e910 <col:49, col:64> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fa33390e8d8 <col:64> '_A2' lvalue ParmVar 0x7fa33390dfe0 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fa33390e1c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fa33390e208 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa33390eb18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1375:1, col:153> col:46 nexttoward 'float (float, long double) noexcept' inline
| | |-ParmVarDecl 0x7fa33390ea00 <col:57, col:63> col:63 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fa33390ea78 <col:73, col:85> col:85 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fa33390ed80 <col:111, col:153>
| | | `-ReturnStmt 0x7fa33390ed68 <col:112, col:151>
| | |   `-CallExpr 0x7fa33390ed00 <col:119, col:151> 'float'
| | |     |-ImplicitCastExpr 0x7fa33390ece8 <col:119, col:121> 'float (*)(float, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa33390ec38 <col:119, col:121> 'float (float, long double)' lvalue Function 0x7fa3330e48d8 'nexttowardf' 'float (float, long double)'
| | |     |-ImplicitCastExpr 0x7fa33390ed38 <col:133> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fa33390ec70 <col:133> 'float' lvalue ParmVar 0x7fa33390ea00 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fa33390ed50 <col:143> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa33390ec98 <col:143> 'long double' lvalue ParmVar 0x7fa33390ea78 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fa33390ebc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa33390ec08 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa33390ef00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1376:1, col:153> col:46 nexttoward 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fa33390ede8 <col:57, col:69> col:69 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fa33390ee60 <col:79, col:91> col:91 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fa33390f140 <col:111, col:153>
| | | `-ReturnStmt 0x7fa33390f128 <col:112, col:151>
| | |   `-CallExpr 0x7fa33390f0c0 <col:119, col:151> 'long double'
| | |     |-ImplicitCastExpr 0x7fa33390f0a8 <col:119, col:121> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa33390f020 <col:119, col:121> 'long double (long double, long double)' lvalue Function 0x7fa3330e4b40 'nexttowardl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fa33390f0f8 <col:133> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fa33390f058 <col:133> 'long double' lvalue ParmVar 0x7fa33390ede8 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fa33390f110 <col:143> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa33390f080 <col:143> 'long double' lvalue ParmVar 0x7fa33390ee60 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fa33390efa8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa33390eff0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fa33390f6d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1378:1, line:1381:107> col:1 nexttoward
| | |-TemplateTypeParmDecl 0x7fa33390f160 <line:1378:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fa33390f638 <line:1379:1, line:1381:107> col:1 nexttoward 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1, long double) noexcept' inline
| |   |-ParmVarDecl 0x7fa33390f490 <col:12, col:16> col:16 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fa33390f508 <col:26, col:38> col:38 referenced __lcpp_y 'long double'
| |   |-CompoundStmt 0x7fa33390fc68 <col:58, col:107>
| |   | `-ReturnStmt 0x7fa33390fc50 <col:59, col:105>
| |   |   `-CallExpr 0x7fa33390fc00 <col:66, col:105> 'double'
| |   |     |-ImplicitCastExpr 0x7fa33390fbe8 <col:66, col:68> 'double (*)(double, long double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fa33390fb88 <col:66, col:68> 'double (double, long double)' lvalue Function 0x7fa3330f3628 'nexttoward' 'double (double, long double)'
| |   |     |-CStyleCastExpr 0x7fa33390f858 <col:79, col:87> 'double' <Dependent>
| |   |     | `-DeclRefExpr 0x7fa33390f818 <col:87> '_A1' lvalue ParmVar 0x7fa33390f490 '__lcpp_x' '_A1'
| |   |     `-ImplicitCastExpr 0x7fa33390fc38 <col:97> 'long double' <LValueToRValue>
| |   |       `-DeclRefExpr 0x7fa33390f880 <col:97> 'long double' lvalue ParmVar 0x7fa33390f508 '__lcpp_y' 'long double'
| |   |-AlwaysInlineAttr 0x7fa33390f730 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fa33390f778 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa33390fde8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1385:1, col:151> col:46 remainder 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7fa33390fcd0 <col:56, col:62> col:62 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fa33390fd48 <col:72, col:78> col:78 used __lcpp_y 'float'
| | |-CompoundStmt 0x7fa333910028 <col:110, col:151>
| | | `-ReturnStmt 0x7fa333910010 <col:111, col:149>
| | |   `-CallExpr 0x7fa33390ffa8 <col:118, col:149> 'float'
| | |     |-ImplicitCastExpr 0x7fa33390ff90 <col:118, col:120> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa33390ff08 <col:118, col:120> 'float (float, float)' lvalue Function 0x7fa3330f13d8 'remainderf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7fa33390ffe0 <col:131> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fa33390ff40 <col:131> 'float' lvalue ParmVar 0x7fa33390fcd0 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fa33390fff8 <col:141> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa33390ff68 <col:141> 'float' lvalue ParmVar 0x7fa33390fd48 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7fa33390fe90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa33390fed8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa3339101a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1386:1, col:151> col:46 remainder 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fa333910090 <col:56, col:68> col:68 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fa333910108 <col:78, col:90> col:90 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fa3339103e8 <col:110, col:151>
| | | `-ReturnStmt 0x7fa3339103d0 <col:111, col:149>
| | |   `-CallExpr 0x7fa333910368 <col:118, col:149> 'long double'
| | |     |-ImplicitCastExpr 0x7fa333910350 <col:118, col:120> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa3339102c8 <col:118, col:120> 'long double (long double, long double)' lvalue Function 0x7fa3330f1838 'remainderl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fa3339103a0 <col:131> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fa333910300 <col:131> 'long double' lvalue ParmVar 0x7fa333910090 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fa3339103b8 <col:141> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa333910328 <col:141> 'long double' lvalue ParmVar 0x7fa333910108 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fa333910250 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa333910298 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fa333910c50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1388:1, line:1402:1> line:1396:1 remainder
| | |-TemplateTypeParmDecl 0x7fa333910408 <line:1388:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fa333910478 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fa333910bb8 <line:1389:1, line:1402:1> line:1396:1 remainder 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fa333910a60 <col:11, col:15> col:15 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fa333910ad0 <col:25, col:29> col:29 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fa333911478 <line:1397:1, line:1402:1>
| |   | |-DeclStmt 0x7fa333910ec8 <line:1398:5, col:66>
| |   | | `-TypedefDecl 0x7fa333910e70 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fa333910e00 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fa3339112c0 <line:1399:5, line:1400:68>
| |   | | `-StaticAssertDecl 0x7fa333911288 <line:1399:5, line:1400:67> line:1399:5
| |   | |   |-ParenExpr 0x7fa333911240 <col:19, line:1400:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fa333911220 <line:1399:20, line:1400:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fa333911200 <line:1399:21, line:1400:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fa3339111d8 <line:1399:22, line:1400:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fa333911038 <line:1399:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fa333911198 <line:1400:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fa333911260 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fa333911460 <line:1401:5, col:72>
| |   |   `-CallExpr 0x7fa333911428 <col:12, col:72> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fa3339112f8 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'remainder' 0x7fa3330f1600 0x7fa33390fde8 0x7fa3339101a8 0x7fa333910c50
| |   |     |-CStyleCastExpr 0x7fa3339113a0 <col:24, col:39> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fa333911368 <col:39> '_A1' lvalue ParmVar 0x7fa333910a60 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fa333911400 <col:49, col:64> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fa3339113c8 <col:64> '_A2' lvalue ParmVar 0x7fa333910ad0 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fa333910cb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fa333910cf8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa3339116d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1406:1, col:170> col:46 remquo 'float (float, float, int *) noexcept' inline
| | |-ParmVarDecl 0x7fa3339114f0 <col:53, col:59> col:59 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fa333911568 <col:69, col:75> col:75 used __lcpp_y 'float'
| | |-ParmVarDecl 0x7fa3339115e0 <col:85, col:90> col:90 used __lcpp_z 'int *'
| | |-CompoundStmt 0x7fa333911990 <col:122, col:170>
| | | `-ReturnStmt 0x7fa333911978 <col:123, col:168>
| | |   `-CallExpr 0x7fa3339118f0 <col:130, col:168> 'float'
| | |     |-ImplicitCastExpr 0x7fa3339118d8 <col:130, col:132> 'float (*)(float, float, int *)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa3339117f8 <col:130, col:132> 'float (float, float, int *)' lvalue Function 0x7fa3330f1b28 'remquof' 'float (float, float, int *)'
| | |     |-ImplicitCastExpr 0x7fa333911930 <col:140> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fa333911830 <col:140> 'float' lvalue ParmVar 0x7fa3339114f0 '__lcpp_x' 'float'
| | |     |-ImplicitCastExpr 0x7fa333911948 <col:150> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fa333911858 <col:150> 'float' lvalue ParmVar 0x7fa333911568 '__lcpp_y' 'float'
| | |     `-ImplicitCastExpr 0x7fa333911960 <col:160> 'int *' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa333911880 <col:160> 'int *' lvalue ParmVar 0x7fa3339115e0 '__lcpp_z' 'int *'
| | |-AlwaysInlineAttr 0x7fa333911780 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa3339117c8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa333911be0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1407:1, col:170> col:46 remquo 'long double (long double, long double, int *) noexcept' inline
| | |-ParmVarDecl 0x7fa333911a00 <col:53, col:65> col:65 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fa333911a78 <col:75, col:87> col:87 used __lcpp_y 'long double'
| | |-ParmVarDecl 0x7fa333911af0 <col:97, col:102> col:102 used __lcpp_z 'int *'
| | |-CompoundStmt 0x7fa333911ea0 <col:122, col:170>
| | | `-ReturnStmt 0x7fa333911e88 <col:123, col:168>
| | |   `-CallExpr 0x7fa333911e00 <col:130, col:168> 'long double'
| | |     |-ImplicitCastExpr 0x7fa333911de8 <col:130, col:132> 'long double (*)(long double, long double, int *)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa333911d08 <col:130, col:132> 'long double (long double, long double, int *)' lvalue Function 0x7fa3330f2068 'remquol' 'long double (long double, long double, int *)'
| | |     |-ImplicitCastExpr 0x7fa333911e40 <col:140> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fa333911d40 <col:140> 'long double' lvalue ParmVar 0x7fa333911a00 '__lcpp_x' 'long double'
| | |     |-ImplicitCastExpr 0x7fa333911e58 <col:150> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fa333911d68 <col:150> 'long double' lvalue ParmVar 0x7fa333911a78 '__lcpp_y' 'long double'
| | |     `-ImplicitCastExpr 0x7fa333911e70 <col:160> 'int *' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa333911d90 <col:160> 'int *' lvalue ParmVar 0x7fa333911af0 '__lcpp_z' 'int *'
| | |-AlwaysInlineAttr 0x7fa333911c90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa333911cd8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fa3339127e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1409:1, line:1423:1> line:1417:1 remquo
| | |-TemplateTypeParmDecl 0x7fa333911ec0 <line:1409:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fa333911f28 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fa333912748 <line:1410:1, line:1423:1> line:1417:1 remquo 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2, int *) noexcept' inline
| |   |-ParmVarDecl 0x7fa333912510 <col:8, col:12> col:12 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fa333912580 <col:22, col:26> col:26 referenced __lcpp_y '_A2'
| |   |-ParmVarDecl 0x7fa3339125f8 <col:36, col:41> col:41 referenced __lcpp_z 'int *'
| |   |-CompoundStmt 0x7fa333913038 <line:1418:1, line:1423:1>
| |   | |-DeclStmt 0x7fa333912a58 <line:1419:5, col:66>
| |   | | `-TypedefDecl 0x7fa333912a00 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fa333912990 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fa333912e50 <line:1420:5, line:1421:68>
| |   | | `-StaticAssertDecl 0x7fa333912e18 <line:1420:5, line:1421:67> line:1420:5
| |   | |   |-ParenExpr 0x7fa333912dd0 <col:19, line:1421:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fa333912db0 <line:1420:20, line:1421:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fa333912d90 <line:1420:21, line:1421:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fa333912d68 <line:1420:22, line:1421:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fa333912bc8 <line:1420:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fa333912d28 <line:1421:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fa333912df0 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fa333913020 <line:1422:5, col:79>
| |   |   `-CallExpr 0x7fa333912fe0 <col:12, col:79> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fa333912e88 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'remquo' 0x7fa3330f1dc8 0x7fa3339116d0 0x7fa333911be0 0x7fa3339127e0
| |   |     |-CStyleCastExpr 0x7fa333912f30 <col:21, col:36> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fa333912ef8 <col:36> '_A1' lvalue ParmVar 0x7fa333912510 '__lcpp_x' '_A1'
| |   |     |-CStyleCastExpr 0x7fa333912f90 <col:46, col:61> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fa333912f58 <col:61> '_A2' lvalue ParmVar 0x7fa333912580 '__lcpp_y' '_A2'
| |   |     `-DeclRefExpr 0x7fa333912fb8 <col:71> 'int *' lvalue ParmVar 0x7fa3339125f8 '__lcpp_z' 'int *'
| |   |-AlwaysInlineAttr 0x7fa333912848 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fa333912890 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa333913148 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1427:1, col:109> col:46 rint 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fa3339130b0 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fa333913338 <col:83, col:109>
| | | `-ReturnStmt 0x7fa333913320 <col:84, col:107>
| | |   `-CallExpr 0x7fa3339132d8 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fa3339132c0 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa333913260 <col:91, col:93> 'float (float)' lvalue Function 0x7fa3330ee748 'rintf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fa333913308 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa333913298 <col:99> 'float' lvalue ParmVar 0x7fa3339130b0 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fa3339131e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa333913230 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa333913438 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1428:1, col:109> col:46 rint 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fa3339133a0 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fa333913628 <col:83, col:109>
| | | `-ReturnStmt 0x7fa333913610 <col:84, col:107>
| | |   `-CallExpr 0x7fa3339135c8 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fa3339135b0 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa333913550 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fa3330eea90 'rintl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fa3339135f8 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa333913588 <col:99> 'long double' lvalue ParmVar 0x7fa3339133a0 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fa3339134d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa333913520 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fa333913af0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1430:1, line:1433:63> col:1 rint
| | |-TemplateTypeParmDecl 0x7fa333913648 <line:1430:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fa333913a58 <line:1431:1, line:1433:63> col:1 rint 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fa333913980 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fa333914010 <col:30, col:63>
| |   | `-ReturnStmt 0x7fa333913ff8 <col:31, col:61>
| |   |   `-CallExpr 0x7fa333913fc8 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fa333913fb0 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fa333913f78 <col:38, col:40> 'double (double)' lvalue Function 0x7fa3330ee8f0 'rint' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fa333913c70 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fa333913c30 <col:53> '_A1' lvalue ParmVar 0x7fa333913980 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fa333913b48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fa333913b90 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa333914110 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1437:1, col:111> col:46 round 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fa333914078 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fa333914300 <col:84, col:111>
| | | `-ReturnStmt 0x7fa3339142e8 <col:85, col:109>
| | |   `-CallExpr 0x7fa3339142a0 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7fa333914288 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa333914228 <col:92, col:94> 'float (float)' lvalue Function 0x7fa3330ef288 'roundf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fa3339142d0 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa333914260 <col:101> 'float' lvalue ParmVar 0x7fa333914078 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fa3339141b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa3339141f8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa333914400 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1438:1, col:111> col:46 round 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fa333914368 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fa3339145f0 <col:84, col:111>
| | | `-ReturnStmt 0x7fa3339145d8 <col:85, col:109>
| | |   `-CallExpr 0x7fa333914590 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7fa333914578 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa333914518 <col:92, col:94> 'long double (long double)' lvalue Function 0x7fa3330ef5c8 'roundl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fa3339145c0 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa333914550 <col:101> 'long double' lvalue ParmVar 0x7fa333914368 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fa3339144a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa3339144e8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fa333914ab0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1440:1, line:1443:65> col:1 round
| | |-TemplateTypeParmDecl 0x7fa333914610 <line:1440:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fa333914a18 <line:1441:1, line:1443:65> col:1 round 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fa333914940 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fa333914fd0 <col:31, col:65>
| |   | `-ReturnStmt 0x7fa333914fb8 <col:32, col:63>
| |   |   `-CallExpr 0x7fa333914f88 <col:39, col:63> 'double'
| |   |     |-ImplicitCastExpr 0x7fa333914f70 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fa333914f38 <col:39, col:41> 'double (double)' lvalue Function 0x7fa3330ef428 'round' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fa333914c30 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fa333914bf0 <col:55> '_A1' lvalue ParmVar 0x7fa333914940 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fa333914b08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fa333914b50 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa333915150 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1447:1, col:140> col:46 scalbln 'float (float, long) noexcept' inline
| | |-ParmVarDecl 0x7fa333915038 <col:54, col:60> col:60 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fa3339150b0 <col:70, col:75> col:75 used __lcpp_y 'long'
| | |-CompoundStmt 0x7fa3339153c0 <col:101, col:140>
| | | `-ReturnStmt 0x7fa3339153a8 <col:102, col:138>
| | |   `-CallExpr 0x7fa333915340 <col:109, col:138> 'float'
| | |     |-ImplicitCastExpr 0x7fa333915328 <col:109, col:111> 'float (*)(float, long)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa333915270 <col:109, col:111> 'float (float, long)' lvalue Function 0x7fa3330ea1a8 'scalblnf' 'float (float, long)'
| | |     |-ImplicitCastExpr 0x7fa333915378 <col:120> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fa3339152a8 <col:120> 'float' lvalue ParmVar 0x7fa333915038 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fa333915390 <col:130> 'long' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa3339152d0 <col:130> 'long' lvalue ParmVar 0x7fa3339150b0 '__lcpp_y' 'long'
| | |-AlwaysInlineAttr 0x7fa3339151f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa333915240 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa333915540 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1448:1, col:140> col:46 scalbln 'long double (long double, long) noexcept' inline
| | |-ParmVarDecl 0x7fa333915428 <col:54, col:66> col:66 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fa3339154a0 <col:76, col:81> col:81 used __lcpp_y 'long'
| | |-CompoundStmt 0x7fa3339157b0 <col:101, col:140>
| | | `-ReturnStmt 0x7fa333915798 <col:102, col:138>
| | |   `-CallExpr 0x7fa333915730 <col:109, col:138> 'long double'
| | |     |-ImplicitCastExpr 0x7fa333915718 <col:109, col:111> 'long double (*)(long double, long)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa333915660 <col:109, col:111> 'long double (long double, long)' lvalue Function 0x7fa3330ea708 'scalblnl' 'long double (long double, long)'
| | |     |-ImplicitCastExpr 0x7fa333915768 <col:120> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fa333915698 <col:120> 'long double' lvalue ParmVar 0x7fa333915428 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fa333915780 <col:130> 'long' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa3339156c0 <col:130> 'long' lvalue ParmVar 0x7fa3339154a0 '__lcpp_y' 'long'
| | |-AlwaysInlineAttr 0x7fa3339155e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa333915630 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fa333915d70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1450:1, line:1453:94> col:1 scalbln
| | |-TemplateTypeParmDecl 0x7fa3339157d0 <line:1450:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fa333915cd8 <line:1451:1, line:1453:94> col:1 scalbln 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1, long) noexcept' inline
| |   |-ParmVarDecl 0x7fa333915b30 <col:9, col:13> col:13 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fa333915ba8 <col:23, col:28> col:28 referenced __lcpp_y 'long'
| |   |-CompoundStmt 0x7fa333916308 <col:48, col:94>
| |   | `-ReturnStmt 0x7fa3339162f0 <col:49, col:92>
| |   |   `-CallExpr 0x7fa3339162a0 <col:56, col:92> 'double'
| |   |     |-ImplicitCastExpr 0x7fa333916288 <col:56, col:58> 'double (*)(double, long)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fa333916228 <col:56, col:58> 'double (double, long)' lvalue Function 0x7fa3330ea458 'scalbln' 'double (double, long)'
| |   |     |-CStyleCastExpr 0x7fa333915ef8 <col:66, col:74> 'double' <Dependent>
| |   |     | `-DeclRefExpr 0x7fa333915eb8 <col:74> '_A1' lvalue ParmVar 0x7fa333915b30 '__lcpp_x' '_A1'
| |   |     `-ImplicitCastExpr 0x7fa3339162d8 <col:84> 'long' <LValueToRValue>
| |   |       `-DeclRefExpr 0x7fa333915f20 <col:84> 'long' lvalue ParmVar 0x7fa333915ba8 '__lcpp_y' 'long'
| |   |-AlwaysInlineAttr 0x7fa333915dd0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fa333915e18 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa333916488 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1457:1, col:137> col:46 scalbn 'float (float, int) noexcept' inline
| | |-ParmVarDecl 0x7fa333916370 <col:53, col:59> col:59 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fa3339163e8 <col:69, col:73> col:73 used __lcpp_y 'int'
| | |-CompoundStmt 0x7fa3339166c8 <col:99, col:137>
| | | `-ReturnStmt 0x7fa3339166b0 <col:100, col:135>
| | |   `-CallExpr 0x7fa333916648 <col:107, col:135> 'float'
| | |     |-ImplicitCastExpr 0x7fa333916630 <col:107, col:109> 'float (*)(float, int)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa3339165a8 <col:107, col:109> 'float (float, int)' lvalue Function 0x7fa3330e9ae8 'scalbnf' 'float (float, int)'
| | |     |-ImplicitCastExpr 0x7fa333916680 <col:117> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fa3339165e0 <col:117> 'float' lvalue ParmVar 0x7fa333916370 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fa333916698 <col:127> 'int' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa333916608 <col:127> 'int' lvalue ParmVar 0x7fa3339163e8 '__lcpp_y' 'int'
| | |-AlwaysInlineAttr 0x7fa333916530 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa333916578 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa333916848 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1458:1, col:137> col:46 scalbn 'long double (long double, int) noexcept' inline
| | |-ParmVarDecl 0x7fa333916730 <col:53, col:65> col:65 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fa3339167a8 <col:75, col:79> col:79 used __lcpp_y 'int'
| | |-CompoundStmt 0x7fa333916a88 <col:99, col:137>
| | | `-ReturnStmt 0x7fa333916a70 <col:100, col:135>
| | |   `-CallExpr 0x7fa333916a08 <col:107, col:135> 'long double'
| | |     |-ImplicitCastExpr 0x7fa3339169f0 <col:107, col:109> 'long double (*)(long double, int)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa333916968 <col:107, col:109> 'long double (long double, int)' lvalue Function 0x7fa3330e9f38 'scalbnl' 'long double (long double, int)'
| | |     |-ImplicitCastExpr 0x7fa333916a40 <col:117> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fa3339169a0 <col:117> 'long double' lvalue ParmVar 0x7fa333916730 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fa333916a58 <col:127> 'int' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa3339169c8 <col:127> 'int' lvalue ParmVar 0x7fa3339167a8 '__lcpp_y' 'int'
| | |-AlwaysInlineAttr 0x7fa3339168f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa333916938 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fa333916fe0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1460:1, line:1463:91> col:1 scalbn
| | |-TemplateTypeParmDecl 0x7fa333916aa8 <line:1460:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fa333916f48 <line:1461:1, line:1463:91> col:1 scalbn 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1, int) noexcept' inline
| |   |-ParmVarDecl 0x7fa333916de0 <col:8, col:12> col:12 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fa333916e58 <col:22, col:26> col:26 referenced __lcpp_y 'int'
| |   |-CompoundStmt 0x7fa333917550 <col:46, col:91>
| |   | `-ReturnStmt 0x7fa333917538 <col:47, col:89>
| |   |   `-CallExpr 0x7fa3339174e8 <col:54, col:89> 'double'
| |   |     |-ImplicitCastExpr 0x7fa3339174d0 <col:54, col:56> 'double (*)(double, int)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fa333917498 <col:54, col:56> 'double (double, int)' lvalue Function 0x7fa3330e9d10 'scalbn' 'double (double, int)'
| |   |     |-CStyleCastExpr 0x7fa333917168 <col:63, col:71> 'double' <Dependent>
| |   |     | `-DeclRefExpr 0x7fa333917128 <col:71> '_A1' lvalue ParmVar 0x7fa333916de0 '__lcpp_x' '_A1'
| |   |     `-ImplicitCastExpr 0x7fa333917520 <col:81> 'int' <LValueToRValue>
| |   |       `-DeclRefExpr 0x7fa333917190 <col:81> 'int' lvalue ParmVar 0x7fa333916e58 '__lcpp_y' 'int'
| |   |-AlwaysInlineAttr 0x7fa333917040 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fa333917088 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa333917650 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1467:1, col:113> col:46 tgamma 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fa3339175b8 <col:53, col:59> col:59 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fa333917840 <col:85, col:113>
| | | `-ReturnStmt 0x7fa333917828 <col:86, col:111>
| | |   `-CallExpr 0x7fa3339177e0 <col:93, col:111> 'float'
| | |     |-ImplicitCastExpr 0x7fa3339177c8 <col:93, col:95> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa333917768 <col:93, col:95> 'float (float)' lvalue Function 0x7fa3330ed3c0 'tgammaf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fa333917810 <col:103> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa3339177a0 <col:103> 'float' lvalue ParmVar 0x7fa3339175b8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fa3339176f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa333917738 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa333917940 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1468:1, col:113> col:46 tgamma 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fa3339178a8 <col:53, col:65> col:65 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fa333917b30 <col:85, col:113>
| | | `-ReturnStmt 0x7fa333917b18 <col:86, col:111>
| | |   `-CallExpr 0x7fa333917ad0 <col:93, col:111> 'long double'
| | |     |-ImplicitCastExpr 0x7fa333917ab8 <col:93, col:95> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa333917a58 <col:93, col:95> 'long double (long double)' lvalue Function 0x7fa3330ed700 'tgammal' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fa333917b00 <col:103> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa333917a90 <col:103> 'long double' lvalue ParmVar 0x7fa3339178a8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fa3339179e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa333917a28 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fa333917ff0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1470:1, line:1473:67> col:1 tgamma
| | |-TemplateTypeParmDecl 0x7fa333917b50 <line:1470:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fa333917f58 <line:1471:1, line:1473:67> col:1 tgamma 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fa333917e80 <col:8, col:12> col:12 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fa333918510 <col:32, col:67>
| |   | `-ReturnStmt 0x7fa3339184f8 <col:33, col:65>
| |   |   `-CallExpr 0x7fa3339184c8 <col:40, col:65> 'double'
| |   |     |-ImplicitCastExpr 0x7fa3339184b0 <col:40, col:42> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fa333918478 <col:40, col:42> 'double (double)' lvalue Function 0x7fa3330ed560 'tgamma' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fa333918170 <col:49, col:57> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fa333918130 <col:57> '_A1' lvalue ParmVar 0x7fa333917e80 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fa333918048 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fa333918090 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa333918610 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1477:1, col:111> col:46 trunc 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fa333918578 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fa333918800 <col:84, col:111>
| | | `-ReturnStmt 0x7fa3339187e8 <col:85, col:109>
| | |   `-CallExpr 0x7fa3339187a0 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7fa333918788 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa333918728 <col:92, col:94> 'float (float)' lvalue Function 0x7fa3330f0800 'truncf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fa3339187d0 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa333918760 <col:101> 'float' lvalue ParmVar 0x7fa333918578 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fa3339186b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa3339186f8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fa333918900 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1478:1, col:111> col:46 trunc 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fa333918868 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fa333918af0 <col:84, col:111>
| | | `-ReturnStmt 0x7fa333918ad8 <col:85, col:109>
| | |   `-CallExpr 0x7fa333918a90 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7fa333918a78 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fa333918a18 <col:92, col:94> 'long double (long double)' lvalue Function 0x7fa3330f0b40 'truncl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fa333918ac0 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fa333918a50 <col:101> 'long double' lvalue ParmVar 0x7fa333918868 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fa3339189a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fa3339189e8 <col:51, col:74> Hidden
| `-FunctionTemplateDecl 0x7fa333918fb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1480:1, line:1483:65> col:1 trunc
|   |-TemplateTypeParmDecl 0x7fa333918b10 <line:1480:11, col:17> col:17 referenced class depth 0 index 0 _A1
|   `-FunctionDecl 0x7fa333918f18 <line:1481:1, line:1483:65> col:1 trunc 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
|     |-ParmVarDecl 0x7fa333918e40 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
|     |-CompoundStmt 0x7fa3339194d0 <col:31, col:65>
|     | `-ReturnStmt 0x7fa3339194b8 <col:32, col:63>
|     |   `-CallExpr 0x7fa333919488 <col:39, col:63> 'double'
|     |     |-ImplicitCastExpr 0x7fa333919470 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
|     |     | `-DeclRefExpr 0x7fa333919438 <col:39, col:41> 'double (double)' lvalue Function 0x7fa3330f09a0 'trunc' 'double (double)'
|     |     `-CStyleCastExpr 0x7fa333919130 <col:47, col:55> 'double' <Dependent>
|     |       `-DeclRefExpr 0x7fa3339190f0 <col:55> '_A1' lvalue ParmVar 0x7fa333918e40 '__lcpp_x' '_A1'
|     |-AlwaysInlineAttr 0x7fa333919008 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|     `-VisibilityAttr 0x7fa333919050 <col:51, col:74> Hidden
|-LinkageSpecDecl 0x7fa333116c58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:439:12> col:12 implicit C
| `-FunctionDecl 0x7fa333116ca8 <col:12> col:12 implicit referenced __builtin_addressof 'void *(void &) noexcept' extern
|   |-ParmVarDecl 0x7fa333116d40 <<invalid sloc>> <invalid sloc> 'void &'
|   |-NoThrowAttr 0x7fa333116da8 <col:12> Implicit
|   `-ConstAttr 0x7fa333116df0 <col:12> Implicit
|-LinkageSpecDecl 0x7fa332873f40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:331:90> col:90 implicit C
| `-FunctionDecl 0x7fa332873f90 <col:90> col:90 implicit used __builtin_huge_valf 'float (void) noexcept' extern
|   |-NoThrowAttr 0x7fa332874028 <col:90> Implicit
|   `-ConstAttr 0x7fa332874070 <col:90> Implicit
|-LinkageSpecDecl 0x7fa332874120 <line:332:91> col:91 implicit C
| `-FunctionDecl 0x7fa332874170 <col:91> col:91 implicit used __builtin_nanf 'float (const char *) noexcept' extern
|   |-ParmVarDecl 0x7fa332874208 <<invalid sloc>> <invalid sloc> 'const char *'
|   |-NoThrowAttr 0x7fa332874270 <col:91> Implicit
|   `-ConstAttr 0x7fa3328742b8 <col:91> Implicit
|-LinkageSpecDecl 0x7fa332874420 <line:333:95> col:95 implicit C
| `-FunctionDecl 0x7fa332874470 <col:95> col:95 implicit used __builtin_nansf 'float (const char *) noexcept' extern
|   |-ParmVarDecl 0x7fa332874508 <<invalid sloc>> <invalid sloc> 'const char *'
|   |-NoThrowAttr 0x7fa332874570 <col:95> Implicit
|   `-ConstAttr 0x7fa3328745b8 <col:95> Implicit
|-LinkageSpecDecl 0x7fa332877070 <line:377:90> col:90 implicit C
| `-FunctionDecl 0x7fa3328770c0 <col:90> col:90 implicit used __builtin_huge_val 'double (void) noexcept' extern
|   |-NoThrowAttr 0x7fa332877158 <col:90> Implicit
|   `-ConstAttr 0x7fa3328771a0 <col:90> Implicit
|-LinkageSpecDecl 0x7fa332877250 <line:378:91> col:91 implicit C
| `-FunctionDecl 0x7fa3328772a0 <col:91> col:91 implicit used __builtin_nan 'double (const char *) noexcept' extern
|   |-ParmVarDecl 0x7fa332877338 <<invalid sloc>> <invalid sloc> 'const char *'
|   |-NoThrowAttr 0x7fa3328773a0 <col:91> Implicit
|   `-ConstAttr 0x7fa3328773e8 <col:91> Implicit
|-LinkageSpecDecl 0x7fa332877550 <line:379:95> col:95 implicit C
| `-FunctionDecl 0x7fa3328775a0 <col:95> col:95 implicit used __builtin_nans 'double (const char *) noexcept' extern
|   |-ParmVarDecl 0x7fa332877638 <<invalid sloc>> <invalid sloc> 'const char *'
|   |-NoThrowAttr 0x7fa3328776a0 <col:95> Implicit
|   `-ConstAttr 0x7fa3328776e8 <col:95> Implicit
|-LinkageSpecDecl 0x7fa33287a1c8 <line:423:90> col:90 implicit C
| `-FunctionDecl 0x7fa33287a218 <col:90> col:90 implicit used __builtin_huge_vall 'long double (void) noexcept' extern
|   |-NoThrowAttr 0x7fa33287a2b0 <col:90> Implicit
|   `-ConstAttr 0x7fa33287a2f8 <col:90> Implicit
|-LinkageSpecDecl 0x7fa33287a3a8 <line:424:91> col:91 implicit C
| `-FunctionDecl 0x7fa33287a3f8 <col:91> col:91 implicit used __builtin_nanl 'long double (const char *) noexcept' extern
|   |-ParmVarDecl 0x7fa33287a490 <<invalid sloc>> <invalid sloc> 'const char *'
|   |-NoThrowAttr 0x7fa33287a4f8 <col:91> Implicit
|   `-ConstAttr 0x7fa33287a540 <col:91> Implicit
|-LinkageSpecDecl 0x7fa33287a6b0 <line:425:95> col:95 implicit C
| `-FunctionDecl 0x7fa33287a700 <col:95> col:95 implicit used __builtin_nansl 'long double (const char *) noexcept' extern
|   |-ParmVarDecl 0x7fa33287a798 <<invalid sloc>> <invalid sloc> 'const char *'
|   |-NoThrowAttr 0x7fa33287a800 <col:95> Implicit
|   `-ConstAttr 0x7fa33287a848 <col:95> Implicit
|-LinkageSpecDecl 0x7fa3328a25b0 </usr/include/math.h:557:25> col:25 implicit C
| `-FunctionDecl 0x7fa3328a2600 <col:25> col:25 implicit referenced __builtin_isgreater 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7fa3328a2698 <col:25> Implicit
|   `-ConstAttr 0x7fa3328a26e0 <col:25> Implicit
|-LinkageSpecDecl 0x7fa3328a3958 <line:558:30> col:30 implicit C
| `-FunctionDecl 0x7fa3328a39a8 <col:30> col:30 implicit referenced __builtin_isgreaterequal 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7fa3328a3a40 <col:30> Implicit
|   `-ConstAttr 0x7fa3328a3a88 <col:30> Implicit
|-LinkageSpecDecl 0x7fa3328a4ac8 <line:559:22> col:22 implicit C
| `-FunctionDecl 0x7fa3328a4b18 <col:22> col:22 implicit referenced __builtin_isless 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7fa3328a4bb0 <col:22> Implicit
|   `-ConstAttr 0x7fa3328a4bf8 <col:22> Implicit
|-LinkageSpecDecl 0x7fa33381b858 <line:560:27> col:27 implicit C
| `-FunctionDecl 0x7fa33381b8a8 <col:27> col:27 implicit referenced __builtin_islessequal 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7fa33381b940 <col:27> Implicit
|   `-ConstAttr 0x7fa33381b988 <col:27> Implicit
|-LinkageSpecDecl 0x7fa33381ca00 <line:561:29> col:29 implicit C
| `-FunctionDecl 0x7fa33381ca50 <col:29> col:29 implicit referenced __builtin_islessgreater 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7fa33381cae8 <col:29> Implicit
|   `-ConstAttr 0x7fa33381cb30 <col:29> Implicit
|-LinkageSpecDecl 0x7fa33381db78 <line:562:27> col:27 implicit C
| `-FunctionDecl 0x7fa33381dbc8 <col:27> col:27 implicit referenced __builtin_isunordered 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7fa33381dc60 <col:27> Implicit
|   `-ConstAttr 0x7fa33381dca8 <col:27> Implicit
|-NamespaceDecl 0x7fa3339194f0 prev 0x7fa3338bed98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:438:37, line:439:38> line:438:47 std
| |-original Namespace 0x7fa33302ee58 'std'
| `-NamespaceDecl 0x7fa333919558 prev 0x7fa3338bee00 <col:52, line:439:36> <scratch space>:440:1 __1 inline
|   |-original Namespace 0x7fa33302eec0 '__1'
|   |-UsingDecl 0x7fa3339195c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:313:1, col:9> col:9 ::signbit
|   |-UsingShadowDecl 0x7fa333919618 <col:9> col:9 implicit FunctionTemplate 0x7fa332897e98 'signbit'
|   |-UsingShadowDecl 0x7fa333919660 <col:9> col:9 implicit FunctionTemplate 0x7fa332898990 'signbit'
|   |-UsingShadowDecl 0x7fa3339196a8 <col:9> col:9 implicit FunctionTemplate 0x7fa3328991e0 'signbit'
|   |-UsingDecl 0x7fa3339196f8 <line:314:1, col:9> col:9 ::fpclassify
|   |-UsingShadowDecl 0x7fa333919748 <col:9> col:9 implicit FunctionTemplate 0x7fa33289a260 'fpclassify'
|   |-UsingShadowDecl 0x7fa333919790 <col:9> col:9 implicit FunctionTemplate 0x7fa33289aae0 'fpclassify'
|   |-UsingDecl 0x7fa3339197e0 <line:315:1, col:9> col:9 ::isfinite
|   |-UsingShadowDecl 0x7fa333919830 <col:9> col:9 implicit FunctionTemplate 0x7fa33289bd80 'isfinite'
|   |-UsingShadowDecl 0x7fa333919878 <col:9> col:9 implicit FunctionTemplate 0x7fa33289d770 'isfinite'
|   |-UsingDecl 0x7fa3339198c8 <line:316:1, col:9> col:9 ::isinf
|   |-UsingShadowDecl 0x7fa333919918 <col:9> col:9 implicit FunctionTemplate 0x7fa33289e800 'isinf'
|   |-UsingShadowDecl 0x7fa333919960 <col:9> col:9 implicit FunctionTemplate 0x7fa33289f100 'isinf'
|   |-UsingDecl 0x7fa3339199b0 <line:317:1, col:9> col:9 ::isnan
|   |-UsingShadowDecl 0x7fa33391aa00 <col:9> col:9 implicit FunctionTemplate 0x7fa3328a0050 'isnan'
|   |-UsingShadowDecl 0x7fa33391aa48 <col:9> col:9 implicit FunctionTemplate 0x7fa3328a08d0 'isnan'
|   |-UsingDecl 0x7fa33391aa98 <line:318:1, col:9> col:9 ::isnormal
|   |-UsingShadowDecl 0x7fa33391aae8 <col:9> col:9 implicit FunctionTemplate 0x7fa3328a1840 'isnormal'
|   |-UsingShadowDecl 0x7fa33391ab30 <col:9> col:9 implicit FunctionTemplate 0x7fa3328a1fd0 'isnormal'
|   |-UsingDecl 0x7fa33391ab80 <line:319:1, col:9> col:9 ::isgreater
|   |-UsingShadowDecl 0x7fa33391abd0 <col:9> col:9 implicit FunctionTemplate 0x7fa3328a3060 'isgreater'
|   |-UsingDecl 0x7fa33391ac20 <line:320:1, col:9> col:9 ::isgreaterequal
|   |-UsingShadowDecl 0x7fa33391ac70 <col:9> col:9 implicit FunctionTemplate 0x7fa3328a42a0 'isgreaterequal'
|   |-UsingDecl 0x7fa33391acc0 <line:321:1, col:9> col:9 ::isless
|   |-UsingShadowDecl 0x7fa33391ad10 <col:9> col:9 implicit FunctionTemplate 0x7fa33381b030 'isless'
|   |-UsingDecl 0x7fa33391ad60 <line:322:1, col:9> col:9 ::islessequal
|   |-UsingShadowDecl 0x7fa33391adb0 <col:9> col:9 implicit FunctionTemplate 0x7fa33381c1a0 'islessequal'
|   |-UsingDecl 0x7fa33391ae00 <line:323:1, col:9> col:9 ::islessgreater
|   |-UsingShadowDecl 0x7fa33391ae50 <col:9> col:9 implicit FunctionTemplate 0x7fa33381d350 'islessgreater'
|   |-UsingDecl 0x7fa33391aea0 <line:324:1, col:9> col:9 ::isunordered
|   |-UsingShadowDecl 0x7fa33391aef0 <col:9> col:9 implicit FunctionTemplate 0x7fa33381e4c0 'isunordered'
|   |-UsingDecl 0x7fa33391af40 <line:325:1, col:9> col:9 ::isunordered
|   |-UsingShadowDecl 0x7fa33391af90 prev 0x7fa33391aef0 <col:9> col:9 implicit FunctionTemplate 0x7fa33381e4c0 'isunordered'
|   |-UsingDecl 0x7fa33391afe0 <line:327:1, col:9> col:9 ::float_t
|   |-UsingShadowDecl 0x7fa33391b030 <col:9> col:9 implicit Typedef 0x7fa33302f040 'float_t'
|   | `-<<<NULL>>>
|   |-UsingDecl 0x7fa33391b080 <line:328:1, col:9> col:9 ::double_t
|   |-UsingShadowDecl 0x7fa33391b0d0 <col:9> col:9 implicit Typedef 0x7fa33302f0b0 'double_t'
|   | `-<<<NULL>>>
|   |-UsingDecl 0x7fa33391b120 <line:331:1, col:9> col:9 ::abs
|   |-UsingShadowDecl 0x7fa33391b170 <col:9> col:9 implicit Function 0x7fa33381ea00 'abs' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fa33391b1b8 <col:9> col:9 implicit Function 0x7fa33381ecf0 'abs' 'double (double) noexcept'
|   |-UsingShadowDecl 0x7fa33391b200 <col:9> col:9 implicit Function 0x7fa33381efe0 'abs' 'long double (long double) noexcept'
|   |-UsingDecl 0x7fa33391b250 <line:334:1, col:9> col:9 ::acos
|   |-UsingShadowDecl 0x7fa33391b2a0 <col:9> col:9 implicit Function 0x7fa3330dcad8 'acos' 'double (double)'
|   |-UsingShadowDecl 0x7fa33391b2e8 <col:9> col:9 implicit Function 0x7fa33381f2d0 'acos' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fa33391b330 <col:9> col:9 implicit Function 0x7fa33381f5c0 'acos' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fa33391b378 <col:9> col:9 implicit FunctionTemplate 0x7fa33381fd60 'acos'
|   |-UsingDecl 0x7fa33391b3c8 <line:335:1, col:9> col:9 ::acosf
|   |-UsingShadowDecl 0x7fa33391b418 <col:9> col:9 implicit Function 0x7fa3330dc938 'acosf' 'float (float)'
|   |-UsingDecl 0x7fa33391b468 <line:336:1, col:9> col:9 ::asin
|   |-UsingShadowDecl 0x7fa33391b4b8 <col:9> col:9 implicit Function 0x7fa3330dd000 'asin' 'double (double)'
|   |-UsingShadowDecl 0x7fa33391b500 <col:9> col:9 implicit Function 0x7fa333821960 'asin' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fa33391b548 <col:9> col:9 implicit Function 0x7fa333821c50 'asin' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fa33391b590 <col:9> col:9 implicit FunctionTemplate 0x7fa333822300 'asin'
|   |-UsingDecl 0x7fa33391b5e0 <line:337:1, col:9> col:9 ::asinf
|   |-UsingShadowDecl 0x7fa33391b630 <col:9> col:9 implicit Function 0x7fa3330dce18 'asinf' 'float (float)'
|   |-UsingDecl 0x7fa33391b680 <line:338:1, col:9> col:9 ::atan
|   |-UsingShadowDecl 0x7fa33391b6d0 <col:9> col:9 implicit Function 0x7fa3330dd4e0 'atan' 'double (double)'
|   |-UsingShadowDecl 0x7fa33391b718 <col:9> col:9 implicit Function 0x7fa333822920 'atan' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fa33391b760 <col:9> col:9 implicit Function 0x7fa333822c40 'atan' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fa33391b7a8 <col:9> col:9 implicit FunctionTemplate 0x7fa3338232f0 'atan'
|   |-UsingDecl 0x7fa33391b7f8 <line:339:1, col:9> col:9 ::atanf
|   |-UsingShadowDecl 0x7fa33391b848 <col:9> col:9 implicit Function 0x7fa3330dd340 'atanf' 'float (float)'
|   |-UsingDecl 0x7fa33391b898 <line:340:1, col:9> col:9 ::atan2
|   |-UsingShadowDecl 0x7fa33391b8e8 <col:9> col:9 implicit Function 0x7fa3330ddb98 'atan2' 'double (double, double)'
|   |-UsingShadowDecl 0x7fa33391b930 <col:9> col:9 implicit Function 0x7fa333823990 'atan2' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7fa33391b978 <col:9> col:9 implicit Function 0x7fa333823d80 'atan2' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fa33391b9c0 <col:9> col:9 implicit FunctionTemplate 0x7fa333824950 'atan2'
|   |-UsingDecl 0x7fa33391ba10 <line:341:1, col:9> col:9 ::atan2f
|   |-UsingShadowDecl 0x7fa33391ba60 <col:9> col:9 implicit Function 0x7fa3330dd8e8 'atan2f' 'float (float, float)'
|   |-UsingDecl 0x7fa33391bab0 <line:342:1, col:9> col:9 ::ceil
|   |-UsingShadowDecl 0x7fa33391bb00 <col:9> col:9 implicit Function 0x7fa3330eda48 'ceil' 'double (double)'
|   |-UsingShadowDecl 0x7fa33391bb48 <col:9> col:9 implicit Function 0x7fa333825368 'ceil' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fa33391bb90 <col:9> col:9 implicit Function 0x7fa333825658 'ceil' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fa33391bbd8 <col:9> col:9 implicit FunctionTemplate 0x7fa333825d10 'ceil'
|   |-UsingDecl 0x7fa33391bc28 <line:343:1, col:9> col:9 ::ceilf
|   |-UsingShadowDecl 0x7fa33391bc78 <col:9> col:9 implicit Function 0x7fa3330ed8a8 'ceilf' 'float (float)'
|   |-UsingDecl 0x7fa33391bcc8 <line:344:1, col:9> col:9 ::cos
|   |-UsingShadowDecl 0x7fa33391bd18 <col:9> col:9 implicit Function 0x7fa3330de9d0 'cos' 'double (double)'
|   |-UsingShadowDecl 0x7fa33391bd60 <col:9> col:9 implicit Function 0x7fa333826330 'cos' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fa33391bda8 <col:9> col:9 implicit Function 0x7fa333826620 'cos' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fa33391bdf0 <col:9> col:9 implicit FunctionTemplate 0x7fa3338d9b00 'cos'
|   |-UsingDecl 0x7fa33391be40 <line:345:1, col:9> col:9 ::cosf
|   |-UsingShadowDecl 0x7fa33391be90 <col:9> col:9 implicit Function 0x7fa3330de830 'cosf' 'float (float)'
|   |-UsingDecl 0x7fa33391bee0 <line:346:1, col:9> col:9 ::cosh
|   |-UsingShadowDecl 0x7fa33391bf30 <col:9> col:9 implicit Function 0x7fa3330e0f30 'cosh' 'double (double)'
|   |-UsingShadowDecl 0x7fa33391bf78 <col:9> col:9 implicit Function 0x7fa3338da120 'cosh' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fa33391bfc0 <col:9> col:9 implicit Function 0x7fa3338da410 'cosh' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fa33391c008 <col:9> col:9 implicit FunctionTemplate 0x7fa3338daac0 'cosh'
|   |-UsingDecl 0x7fa33391c058 <line:347:1, col:9> col:9 ::coshf
|   |-UsingShadowDecl 0x7fa33391c0a8 <col:9> col:9 implicit Function 0x7fa3330e0d90 'coshf' 'float (float)'
|   |-UsingDecl 0x7fa33391c0f8 <line:349:1, col:9> col:9 ::exp
|   |-UsingShadowDecl 0x7fa33391c148 <col:9> col:9 implicit Function 0x7fa3330e25f0 'exp' 'double (double)'
|   |-UsingShadowDecl 0x7fa33391c190 <col:9> col:9 implicit Function 0x7fa3338db0e0 'exp' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fa33391c1d8 <col:9> col:9 implicit Function 0x7fa3338db3d0 'exp' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fa33391c220 <col:9> col:9 implicit FunctionTemplate 0x7fa3338dbaa0 'exp'
|   |-UsingDecl 0x7fa33391c270 <line:350:1, col:9> col:9 ::expf
|   |-UsingShadowDecl 0x7fa33391c2c0 <col:9> col:9 implicit Function 0x7fa3330e2450 'expf' 'float (float)'
|   |-UsingDecl 0x7fa33391c310 <line:352:1, col:9> col:9 ::fabs
|   |-UsingShadowDecl 0x7fa33391c360 <col:9> col:9 implicit Function 0x7fa3330eaa90 'fabs' 'double (double)'
|   |-UsingShadowDecl 0x7fa33391c3a8 <col:9> col:9 implicit Function 0x7fa3338dc0c0 'fabs' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fa33391c3f0 <col:9> col:9 implicit Function 0x7fa3338dc3b0 'fabs' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fa33391c438 <col:9> col:9 implicit FunctionTemplate 0x7fa3338dca60 'fabs'
|   |-UsingDecl 0x7fa33391c488 <line:353:1, col:9> col:9 ::fabsf
|   |-UsingShadowDecl 0x7fa33391c4d8 <col:9> col:9 implicit Function 0x7fa3330ea8f0 'fabsf' 'float (float)'
|   |-UsingDecl 0x7fa33391c528 <line:354:1, col:9> col:9 ::floor
|   |-UsingShadowDecl 0x7fa33391c578 <col:9> col:9 implicit Function 0x7fa3330edf28 'floor' 'double (double)'
|   |-UsingShadowDecl 0x7fa33391c5c0 <col:9> col:9 implicit Function 0x7fa3338dd080 'floor' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fa33391c608 <col:9> col:9 implicit Function 0x7fa3338dd370 'floor' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fa33391c650 <col:9> col:9 implicit FunctionTemplate 0x7fa3338dda40 'floor'
|   |-UsingDecl 0x7fa33391c6a0 <line:355:1, col:9> col:9 ::floorf
|   |-UsingShadowDecl 0x7fa33391c6f0 <col:9> col:9 implicit Function 0x7fa3330edd88 'floorf' 'float (float)'
|   |-UsingDecl 0x7fa33391c740 <line:357:1, col:9> col:9 ::fmod
|   |-UsingShadowDecl 0x7fa33391c790 <col:9> col:9 implicit Function 0x7fa3330f0f88 'fmod' 'double (double, double)'
|   |-UsingShadowDecl 0x7fa33391c7d8 <col:9> col:9 implicit Function 0x7fa3338de0e0 'fmod' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7fa33391c820 <col:9> col:9 implicit Function 0x7fa3338de4a0 'fmod' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fa33391c868 <col:9> col:9 implicit FunctionTemplate 0x7fa3338def40 'fmod'
|   |-UsingDecl 0x7fa33391c8b8 <line:358:1, col:9> col:9 ::fmodf
|   |-UsingShadowDecl 0x7fa33391c908 <col:9> col:9 implicit Function 0x7fa3330f0d60 'fmodf' 'float (float, float)'
|   |-UsingDecl 0x7fa33391c958 <line:360:1, col:9> col:9 ::frexp
|   |-UsingShadowDecl 0x7fa33391c9a8 <col:9> col:9 implicit Function 0x7fa3330e8028 'frexp' 'double (double, int *)'
|   |-UsingShadowDecl 0x7fa33391c9f0 <col:9> col:9 implicit Function 0x7fa3338df918 'frexp' 'float (float, int *) noexcept'
|   |-UsingShadowDecl 0x7fa33391ca38 <col:9> col:9 implicit Function 0x7fa3338dfd30 'frexp' 'long double (long double, int *) noexcept'
|   |-UsingShadowDecl 0x7fa33391ca80 <col:9> col:9 implicit FunctionTemplate 0x7fa3338e0560 'frexp'
|   |-UsingDecl 0x7fa33391cad0 <line:361:1, col:9> col:9 ::frexpf
|   |-UsingShadowDecl 0x7fa33391cb20 <col:9> col:9 implicit Function 0x7fa3330e7d88 'frexpf' 'float (float, int *)'
|   |-UsingDecl 0x7fa33391cb70 <line:362:1, col:9> col:9 ::ldexp
|   |-UsingShadowDecl 0x7fa33391cbc0 <col:9> col:9 implicit Function 0x7fa3330e7800 'ldexp' 'double (double, int)'
|   |-UsingShadowDecl 0x7fa33391cc08 <col:9> col:9 implicit Function 0x7fa3338e0c78 'ldexp' 'float (float, int) noexcept'
|   |-UsingShadowDecl 0x7fa33391cc50 <col:9> col:9 implicit Function 0x7fa3338e1060 'ldexp' 'long double (long double, int) noexcept'
|   |-UsingShadowDecl 0x7fa33391cc98 <col:9> col:9 implicit FunctionTemplate 0x7fa3338e1898 'ldexp'
|   |-UsingDecl 0x7fa33391cce8 <line:363:1, col:9> col:9 ::ldexpf
|   |-UsingShadowDecl 0x7fa33391cd38 <col:9> col:9 implicit Function 0x7fa3330e6538 'ldexpf' 'float (float, int)'
|   |-UsingDecl 0x7fa33391cd88 <line:365:1, col:9> col:9 ::log
|   |-UsingShadowDecl 0x7fa33391cdd8 <col:9> col:9 implicit Function 0x7fa3330e3500 'log' 'double (double)'
|   |-UsingShadowDecl 0x7fa33391ce20 <col:9> col:9 implicit Function 0x7fa3338e1f38 'log' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fa33391ce68 <col:9> col:9 implicit Function 0x7fa3338e2228 'log' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fa33391ceb0 <col:9> col:9 implicit FunctionTemplate 0x7fa3338e28e0 'log'
|   |-UsingDecl 0x7fa33391cf00 <line:366:1, col:9> col:9 ::logf
|   |-UsingShadowDecl 0x7fa33391cf50 <col:9> col:9 implicit Function 0x7fa3330e3360 'logf' 'float (float)'
|   |-UsingDecl 0x7fa33391cfa0 <line:368:1, col:9> col:9 ::log10
|   |-UsingShadowDecl 0x7fa33391cff0 <col:9> col:9 implicit Function 0x7fa3330e3a30 'log10' 'double (double)'
|   |-UsingShadowDecl 0x7fa33391d038 <col:9> col:9 implicit Function 0x7fa3338e2f00 'log10' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fa33391d080 <col:9> col:9 implicit Function 0x7fa3338e31f0 'log10' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fa33391d0c8 <col:9> col:9 implicit FunctionTemplate 0x7fa3338e38d8 'log10'
|   |-UsingDecl 0x7fa33391d118 <line:369:1, col:9> col:9 ::log10f
|   |-UsingShadowDecl 0x7fa33391d168 <col:9> col:9 implicit Function 0x7fa3330e3890 'log10f' 'float (float)'
|   |-UsingDecl 0x7fa33391d1b8 <line:370:1, col:9> col:9 ::modf
|   |-UsingShadowDecl 0x7fa33391d208 <col:9> col:9 implicit Function 0x7fa3330e5fd8 'modf' 'double (double, double *)'
|   |-UsingShadowDecl 0x7fa33391d250 <col:9> col:9 implicit Function 0x7fa3338e3f80 'modf' 'float (float, float *) noexcept'
|   |-UsingShadowDecl 0x7fa33391d298 <col:9> col:9 implicit Function 0x7fa3338e43a0 'modf' 'long double (long double, long double *) noexcept'
|   |-UsingDecl 0x7fa33391d2e8 <line:371:1, col:9> col:9 ::modff
|   |-UsingShadowDecl 0x7fa33391d338 <col:9> col:9 implicit Function 0x7fa3330e5d18 'modff' 'float (float, float *)'
|   |-UsingDecl 0x7fa33391d388 <line:373:1, col:9> col:9 ::pow
|   |-UsingShadowDecl 0x7fa33391d3d8 <col:9> col:9 implicit Function 0x7fa3330ebc50 'pow' 'double (double, double)'
|   |-UsingShadowDecl 0x7fa33391d420 <col:9> col:9 implicit Function 0x7fa3338e47c0 'pow' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7fa33391d468 <col:9> col:9 implicit Function 0x7fa3338e4b80 'pow' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fa33391d4b0 <col:9> col:9 implicit FunctionTemplate 0x7fa3338e5620 'pow'
|   |-UsingDecl 0x7fa33391d500 <line:374:1, col:9> col:9 ::powf
|   |-UsingShadowDecl 0x7fa33391d550 <col:9> col:9 implicit Function 0x7fa3330eba28 'powf' 'float (float, float)'
|   |-UsingDecl 0x7fa33391d5a0 <line:376:1, col:9> col:9 ::sin
|   |-UsingShadowDecl 0x7fa33391d5f0 <col:9> col:9 implicit Function 0x7fa3330deeb0 'sin' 'double (double)'
|   |-UsingShadowDecl 0x7fa33391d638 <col:9> col:9 implicit Function 0x7fa3338e5f58 'sin' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fa33391d680 <col:9> col:9 implicit Function 0x7fa3338e6248 'sin' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fa33391d6c8 <col:9> col:9 implicit FunctionTemplate 0x7fa3338e6900 'sin'
|   |-UsingDecl 0x7fa33391d718 <line:377:1, col:9> col:9 ::sinf
|   |-UsingShadowDecl 0x7fa33391d768 <col:9> col:9 implicit Function 0x7fa3330ded10 'sinf' 'float (float)'
|   |-UsingDecl 0x7fa33391d7b8 <line:378:1, col:9> col:9 ::sinh
|   |-UsingShadowDecl 0x7fa33391d808 <col:9> col:9 implicit Function 0x7fa3330e1c30 'sinh' 'double (double)'
|   |-UsingShadowDecl 0x7fa33391d850 <col:9> col:9 implicit Function 0x7fa3338e6f20 'sinh' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fa33391d898 <col:9> col:9 implicit Function 0x7fa3338e7210 'sinh' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fa33391d8e0 <col:9> col:9 implicit FunctionTemplate 0x7fa3338e9ad8 'sinh'
|   |-UsingDecl 0x7fa33391d930 <line:379:1, col:9> col:9 ::sinhf
|   |-UsingShadowDecl 0x7fa33391d980 <col:9> col:9 implicit Function 0x7fa3330e1a90 'sinhf' 'float (float)'
|   |-UsingDecl 0x7fa33391d9d0 <line:381:1, col:9> col:9 ::sqrt
|   |-UsingShadowDecl 0x7fa33391da20 <col:9> col:9 implicit Function 0x7fa3330ec1c0 'sqrt' 'double (double)'
|   |-UsingShadowDecl 0x7fa33391da68 <col:9> col:9 implicit Function 0x7fa3338ea100 'sqrt' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fa33391dab0 <col:9> col:9 implicit Function 0x7fa3338ea3f0 'sqrt' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fa33391daf8 <col:9> col:9 implicit FunctionTemplate 0x7fa3338eaaa0 'sqrt'
|   |-UsingDecl 0x7fa33391db48 <line:382:1, col:9> col:9 ::sqrtf
|   |-UsingShadowDecl 0x7fa33391db98 <col:9> col:9 implicit Function 0x7fa3330ec020 'sqrtf' 'float (float)'
|   |-UsingDecl 0x7fa33391dbe8 <line:383:1, col:9> col:9 ::tan
|   |-UsingShadowDecl 0x7fa33391dc38 <col:9> col:9 implicit Function 0x7fa3330df390 'tan' 'double (double)'
|   |-UsingShadowDecl 0x7fa33391dc80 <col:9> col:9 implicit Function 0x7fa3338eb0c0 'tan' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fa33391dcc8 <col:9> col:9 implicit Function 0x7fa3338eb3b0 'tan' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fa33391dd10 <col:9> col:9 implicit FunctionTemplate 0x7fa3338eba98 'tan'
|   |-UsingDecl 0x7fa33391dd60 <line:384:1, col:9> col:9 ::tanf
|   |-UsingShadowDecl 0x7fa33391ddb0 <col:9> col:9 implicit Function 0x7fa3330df1f0 'tanf' 'float (float)'
|   |-UsingDecl 0x7fa33391de00 <line:386:1, col:9> col:9 ::tanh
|   |-UsingShadowDecl 0x7fa33391de50 <col:9> col:9 implicit Function 0x7fa3330e2110 'tanh' 'double (double)'
|   |-UsingShadowDecl 0x7fa33391de98 <col:9> col:9 implicit Function 0x7fa3338ec0c0 'tanh' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fa33391dee0 <col:9> col:9 implicit Function 0x7fa3338ec3b0 'tanh' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fa33391df28 <col:9> col:9 implicit FunctionTemplate 0x7fa3338eca60 'tanh'
|   |-UsingDecl 0x7fa33391df78 <line:387:1, col:9> col:9 ::tanhf
|   |-UsingShadowDecl 0x7fa33391dfc8 <col:9> col:9 implicit Function 0x7fa3330e1f70 'tanhf' 'float (float)'
|   |-UsingDecl 0x7fa33391e018 <line:389:1, col:9> col:9 ::acosh
|   |-UsingShadowDecl 0x7fa33391e068 <col:9> col:9 implicit Function 0x7fa3330e0090 'acosh' 'double (double)'
|   |-UsingShadowDecl 0x7fa33391e0b0 <col:9> col:9 implicit Function 0x7fa3338ed080 'acosh' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fa33391e0f8 <col:9> col:9 implicit Function 0x7fa3338ed370 'acosh' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fa33391e140 <col:9> col:9 implicit FunctionTemplate 0x7fa3338eda98 'acosh'
|   |-UsingDecl 0x7fa33391e190 <line:390:1, col:9> col:9 ::acoshf
|   |-UsingShadowDecl 0x7fa33391e1e0 <col:9> col:9 implicit Function 0x7fa3330df6d0 'acoshf' 'float (float)'
|   |-UsingDecl 0x7fa33391e230 <line:391:1, col:9> col:9 ::asinh
|   |-UsingShadowDecl 0x7fa33391e280 <col:9> col:9 implicit Function 0x7fa3330e0570 'asinh' 'double (double)'
|   |-UsingShadowDecl 0x7fa33391e2c8 <col:9> col:9 implicit Function 0x7fa3338ee0c0 'asinh' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fa33391e310 <col:9> col:9 implicit Function 0x7fa3338ee3b0 'asinh' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fa33391e358 <col:9> col:9 implicit FunctionTemplate 0x7fa3338eea60 'asinh'
|   |-UsingDecl 0x7fa33391e3a8 <line:392:1, col:9> col:9 ::asinhf
|   |-UsingShadowDecl 0x7fa33391e3f8 <col:9> col:9 implicit Function 0x7fa3330e03d0 'asinhf' 'float (float)'
|   |-UsingDecl 0x7fa33391e448 <line:393:1, col:9> col:9 ::atanh
|   |-UsingShadowDecl 0x7fa33391e498 <col:9> col:9 implicit Function 0x7fa3330e0a50 'atanh' 'double (double)'
|   |-UsingShadowDecl 0x7fa33391e4e0 <col:9> col:9 implicit Function 0x7fa3338ef080 'atanh' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fa33391e528 <col:9> col:9 implicit Function 0x7fa3338ef370 'atanh' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fa33391e570 <col:9> col:9 implicit FunctionTemplate 0x7fa3338efa98 'atanh'
|   |-UsingDecl 0x7fa33391e5c0 <line:394:1, col:9> col:9 ::atanhf
|   |-UsingShadowDecl 0x7fa33391e610 <col:9> col:9 implicit Function 0x7fa3330e08b0 'atanhf' 'float (float)'
|   |-UsingDecl 0x7fa33391e660 <line:395:1, col:9> col:9 ::cbrt
|   |-UsingShadowDecl 0x7fa33391e6b0 <col:9> col:9 implicit Function 0x7fa3330eaf70 'cbrt' 'double (double)'
|   |-UsingShadowDecl 0x7fa33391e6f8 <col:9> col:9 implicit Function 0x7fa3338f00c0 'cbrt' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fa33391e740 <col:9> col:9 implicit Function 0x7fa3338f03b0 'cbrt' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fa33391e788 <col:9> col:9 implicit FunctionTemplate 0x7fa3338f0a60 'cbrt'
|   |-UsingDecl 0x7fa33391e7d8 <line:396:1, col:9> col:9 ::cbrtf
|   |-UsingShadowDecl 0x7fa33391e828 <col:9> col:9 implicit Function 0x7fa3330eadd0 'cbrtf' 'float (float)'
|   |-UsingDecl 0x7fa33391e878 <line:398:1, col:9> col:9 ::copysign
|   |-UsingShadowDecl 0x7fa33391e8c8 <col:9> col:9 implicit Function 0x7fa3330f2468 'copysign' 'double (double, double)'
|   |-UsingShadowDecl 0x7fa33391e910 <col:9> col:9 implicit Function 0x7fa3338f1100 'copysign' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7fa33391e958 <col:9> col:9 implicit Function 0x7fa3338f14c0 'copysign' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fa33391e9a0 <col:9> col:9 implicit FunctionTemplate 0x7fa3338f1f80 'copysign'
|   |-UsingDecl 0x7fa33391f200 <line:399:1, col:9> col:9 ::copysignf
|   |-UsingShadowDecl 0x7fa33391f250 <col:9> col:9 implicit Function 0x7fa3330f2240 'copysignf' 'float (float, float)'
|   |-UsingDecl 0x7fa33391f2a0 <line:401:1, col:9> col:9 ::erf
|   |-UsingShadowDecl 0x7fa33391f2f0 <col:9> col:9 implicit Function 0x7fa3330ec6a0 'erf' 'double (double)'
|   |-UsingShadowDecl 0x7fa33391f338 <col:9> col:9 implicit Function 0x7fa3338f28b8 'erf' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fa33391f380 <col:9> col:9 implicit Function 0x7fa3338f2ba8 'erf' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fa33391f3c8 <col:9> col:9 implicit FunctionTemplate 0x7fa3338f3260 'erf'
|   |-UsingDecl 0x7fa33391f418 <line:402:1, col:9> col:9 ::erff
|   |-UsingShadowDecl 0x7fa33391f468 <col:9> col:9 implicit Function 0x7fa3330ec500 'erff' 'float (float)'
|   |-UsingDecl 0x7fa33391f4b8 <line:403:1, col:9> col:9 ::erfc
|   |-UsingShadowDecl 0x7fa33391f508 <col:9> col:9 implicit Function 0x7fa3330ecbd0 'erfc' 'double (double)'
|   |-UsingShadowDecl 0x7fa33391f550 <col:9> col:9 implicit Function 0x7fa3338f3880 'erfc' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fa33391f598 <col:9> col:9 implicit Function 0x7fa3338f4b78 'erfc' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fa33391f5e0 <col:9> col:9 implicit FunctionTemplate 0x7fa3338f5230 'erfc'
|   |-UsingDecl 0x7fa33391f630 <line:404:1, col:9> col:9 ::erfcf
|   |-UsingShadowDecl 0x7fa33391f680 <col:9> col:9 implicit Function 0x7fa3330eca30 'erfcf' 'float (float)'
|   |-UsingDecl 0x7fa33391f6d0 <line:405:1, col:9> col:9 ::exp2
|   |-UsingShadowDecl 0x7fa33391f720 <col:9> col:9 implicit Function 0x7fa3330e2b40 'exp2' 'double (double)'
|   |-UsingShadowDecl 0x7fa33391f768 <col:9> col:9 implicit Function 0x7fa3338f5850 'exp2' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fa33391f7b0 <col:9> col:9 implicit Function 0x7fa3338f5b40 'exp2' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fa33391f7f8 <col:9> col:9 implicit FunctionTemplate 0x7fa3338f61f0 'exp2'
|   |-UsingDecl 0x7fa33391f848 <line:406:1, col:9> col:9 ::exp2f
|   |-UsingShadowDecl 0x7fa33391f898 <col:9> col:9 implicit Function 0x7fa3330e29a0 'exp2f' 'float (float)'
|   |-UsingDecl 0x7fa33391f8e8 <line:407:1, col:9> col:9 ::expm1
|   |-UsingShadowDecl 0x7fa33391f938 <col:9> col:9 implicit Function 0x7fa3330e3020 'expm1' 'double (double)'
|   |-UsingShadowDecl 0x7fa33391f980 <col:9> col:9 implicit Function 0x7fa3338f6810 'expm1' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fa33391f9c8 <col:9> col:9 implicit Function 0x7fa3338f6b00 'expm1' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fa33391fa10 <col:9> col:9 implicit FunctionTemplate 0x7fa3338f71b0 'expm1'
|   |-UsingDecl 0x7fa33391fa60 <line:408:1, col:9> col:9 ::expm1f
|   |-UsingShadowDecl 0x7fa33391fab0 <col:9> col:9 implicit Function 0x7fa3330e2e80 'expm1f' 'float (float)'
|   |-UsingDecl 0x7fa33391fb00 <line:409:1, col:9> col:9 ::fdim
|   |-UsingShadowDecl 0x7fa33391fb50 <col:9> col:9 implicit Function 0x7fa3330e4f90 'fdim' 'double (double, double)'
|   |-UsingShadowDecl 0x7fa33391fb98 <col:9> col:9 implicit Function 0x7fa3338f7850 'fdim' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7fa33391fbe0 <col:9> col:9 implicit Function 0x7fa3338f7c10 'fdim' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fa33391fc28 <col:9> col:9 implicit FunctionTemplate 0x7fa3338f86b0 'fdim'
|   |-UsingDecl 0x7fa33391fc78 <line:410:1, col:9> col:9 ::fdimf
|   |-UsingShadowDecl 0x7fa33391fcc8 <col:9> col:9 implicit Function 0x7fa3330e4d68 'fdimf' 'float (float, float)'
|   |-UsingDecl 0x7fa33391fd18 <line:411:1, col:9> col:9 ::fmaf
|   |-UsingShadowDecl 0x7fa33391fd68 <col:9> col:9 implicit Function 0x7fa3330f81a8 'fmaf' 'float (float, float, float)'
|   |-UsingDecl 0x7fa33391fdb8 <line:412:1, col:9> col:9 ::fma
|   |-UsingShadowDecl 0x7fa33391fe08 <col:9> col:9 implicit Function 0x7fa3330f84f8 'fma' 'double (double, double, double)'
|   |-UsingShadowDecl 0x7fa33391fe50 <col:9> col:9 implicit Function 0x7fa3338fb108 'fma' 'float (float, float, float) noexcept'
|   |-UsingShadowDecl 0x7fa33391fe98 <col:9> col:9 implicit Function 0x7fa3338fb5c0 'fma' 'long double (long double, long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fa33391fee0 <col:9> col:9 implicit FunctionTemplate 0x7fa3338fc4d0 'fma'
|   |-UsingDecl 0x7fa33391ff30 <line:413:1, col:9> col:9 ::fmax
|   |-UsingShadowDecl 0x7fa33391ff80 <col:9> col:9 implicit Function 0x7fa3330e5608 'fmax' 'double (double, double)'
|   |-UsingShadowDecl 0x7fa33391ffc8 <col:9> col:9 implicit Function 0x7fa3338fd220 'fmax' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7fa333920010 <col:9> col:9 implicit Function 0x7fa3338fd5e0 'fmax' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fa333920058 <col:9> col:9 implicit FunctionTemplate 0x7fa3338fe080 'fmax'
|   |-UsingDecl 0x7fa3339200a8 <line:414:1, col:9> col:9 ::fmaxf
|   |-UsingShadowDecl 0x7fa3339200f8 <col:9> col:9 implicit Function 0x7fa3330e53e0 'fmaxf' 'float (float, float)'
|   |-UsingDecl 0x7fa333920148 <line:415:1, col:9> col:9 ::fmin
|   |-UsingShadowDecl 0x7fa333920198 <col:9> col:9 implicit Function 0x7fa3330f7c88 'fmin' 'double (double, double)'
|   |-UsingShadowDecl 0x7fa3339201e0 <col:9> col:9 implicit Function 0x7fa3338fea40 'fmin' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7fa333920228 <col:9> col:9 implicit Function 0x7fa3338fee00 'fmin' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fa333920270 <col:9> col:9 implicit FunctionTemplate 0x7fa3338ff8a0 'fmin'
|   |-UsingDecl 0x7fa3339202c0 <line:416:1, col:9> col:9 ::fminf
|   |-UsingShadowDecl 0x7fa333920310 <col:9> col:9 implicit Function 0x7fa3330f7a60 'fminf' 'float (float, float)'
|   |-UsingDecl 0x7fa333920360 <line:417:1, col:9> col:9 ::hypot
|   |-UsingShadowDecl 0x7fa3339203b0 <col:9> col:9 implicit Function 0x7fa3330eb558 'hypot' 'double (double, double)'
|   |-UsingShadowDecl 0x7fa3339203f8 <col:9> col:9 implicit Function 0x7fa333900258 'hypot' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7fa333920440 <col:9> col:9 implicit Function 0x7fa333900618 'hypot' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fa333920488 <col:9> col:9 implicit FunctionTemplate 0x7fa333901100 'hypot'
|   |-UsingDecl 0x7fa3339204d8 <line:418:1, col:9> col:9 ::hypotf
|   |-UsingShadowDecl 0x7fa333920528 <col:9> col:9 implicit Function 0x7fa3330eb330 'hypotf' 'float (float, float)'
|   |-UsingDecl 0x7fa333920578 <line:419:1, col:9> col:9 ::ilogb
|   |-UsingShadowDecl 0x7fa3339205c8 <col:9> col:9 implicit Function 0x7fa3330e8678 'ilogb' 'int (double)'
|   |-UsingShadowDecl 0x7fa333920610 <col:9> col:9 implicit Function 0x7fa333901a38 'ilogb' 'int (float) noexcept'
|   |-UsingShadowDecl 0x7fa333920658 <col:9> col:9 implicit Function 0x7fa333901d28 'ilogb' 'int (long double) noexcept'
|   |-UsingShadowDecl 0x7fa3339206a0 <col:9> col:9 implicit FunctionTemplate 0x7fa3339023e0 'ilogb'
|   |-UsingDecl 0x7fa3339206f0 <line:420:1, col:9> col:9 ::ilogbf
|   |-UsingShadowDecl 0x7fa333920740 <col:9> col:9 implicit Function 0x7fa3330e84a0 'ilogbf' 'int (float)'
|   |-UsingDecl 0x7fa333920790 <line:421:1, col:9> col:9 ::lgamma
|   |-UsingShadowDecl 0x7fa3339207e0 <col:9> col:9 implicit Function 0x7fa3330ed0a0 'lgamma' 'double (double)'
|   |-UsingShadowDecl 0x7fa333920828 <col:9> col:9 implicit Function 0x7fa333902cb8 'lgamma' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fa333920870 <col:9> col:9 implicit Function 0x7fa333902fa8 'lgamma' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fa3339208b8 <col:9> col:9 implicit FunctionTemplate 0x7fa333903660 'lgamma'
|   |-UsingDecl 0x7fa333920908 <line:422:1, col:9> col:9 ::lgammaf
|   |-UsingShadowDecl 0x7fa333920958 <col:9> col:9 implicit Function 0x7fa3330ecf10 'lgammaf' 'float (float)'
|   |-UsingDecl 0x7fa3339209a8 <line:423:1, col:9> col:9 ::llrint
|   |-UsingShadowDecl 0x7fa3339209f8 <col:9> col:9 implicit Function 0x7fa3330efea8 'llrint' 'long long (double)'
|   |-UsingShadowDecl 0x7fa333920a40 <col:9> col:9 implicit Function 0x7fa333903c80 'llrint' 'long long (float) noexcept'
|   |-UsingShadowDecl 0x7fa333920a88 <col:9> col:9 implicit Function 0x7fa333903fa0 'llrint' 'long long (long double) noexcept'
|   |-UsingShadowDecl 0x7fa333920ad0 <col:9> col:9 implicit FunctionTemplate 0x7fa333904770 'llrint'
|   |-UsingDecl 0x7fa333920b20 <line:424:1, col:9> col:9 ::llrintf
|   |-UsingShadowDecl 0x7fa333920b70 <col:9> col:9 implicit Function 0x7fa3330efc88 'llrintf' 'long long (float)'
|   |-UsingDecl 0x7fa333920bc0 <line:425:1, col:9> col:9 ::llround
|   |-UsingShadowDecl 0x7fa333920c10 <col:9> col:9 implicit Function 0x7fa3330f0448 'llround' 'long long (double)'
|   |-UsingShadowDecl 0x7fa333920c58 <col:9> col:9 implicit Function 0x7fa333905048 'llround' 'long long (float) noexcept'
|   |-UsingShadowDecl 0x7fa333920ca0 <col:9> col:9 implicit Function 0x7fa333905338 'llround' 'long long (long double) noexcept'
|   |-UsingShadowDecl 0x7fa333920ce8 <col:9> col:9 implicit FunctionTemplate 0x7fa3339059f0 'llround'
|   |-UsingDecl 0x7fa333920d38 <line:426:1, col:9> col:9 ::llroundf
|   |-UsingShadowDecl 0x7fa333920d88 <col:9> col:9 implicit Function 0x7fa3330f02a8 'llroundf' 'long long (float)'
|   |-UsingDecl 0x7fa333920dd8 <line:427:1, col:9> col:9 ::log1p
|   |-UsingShadowDecl 0x7fa333920e28 <col:9> col:9 implicit Function 0x7fa3330e43f0 'log1p' 'double (double)'
|   |-UsingShadowDecl 0x7fa333920e70 <col:9> col:9 implicit Function 0x7fa333906010 'log1p' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fa333920eb8 <col:9> col:9 implicit Function 0x7fa333906300 'log1p' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fa333920f00 <col:9> col:9 implicit FunctionTemplate 0x7fa3339069b0 'log1p'
|   |-UsingDecl 0x7fa333920f50 <line:428:1, col:9> col:9 ::log1pf
|   |-UsingShadowDecl 0x7fa333920fa0 <col:9> col:9 implicit Function 0x7fa3330e4250 'log1pf' 'float (float)'
|   |-UsingDecl 0x7fa333920ff0 <line:429:1, col:9> col:9 ::log2
|   |-UsingShadowDecl 0x7fa333921040 <col:9> col:9 implicit Function 0x7fa3330e3f10 'log2' 'double (double)'
|   |-UsingShadowDecl 0x7fa333921088 <col:9> col:9 implicit Function 0x7fa333906fd0 'log2' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fa3339210d0 <col:9> col:9 implicit Function 0x7fa3339072c0 'log2' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fa333921118 <col:9> col:9 implicit FunctionTemplate 0x7fa333907970 'log2'
|   |-UsingDecl 0x7fa333921168 <line:430:1, col:9> col:9 ::log2f
|   |-UsingShadowDecl 0x7fa3339211b8 <col:9> col:9 implicit Function 0x7fa3330e3d70 'log2f' 'float (float)'
|   |-UsingDecl 0x7fa333921208 <line:431:1, col:9> col:9 ::logb
|   |-UsingShadowDecl 0x7fa333921258 <col:9> col:9 implicit Function 0x7fa3330e58f0 'logb' 'double (double)'
|   |-UsingShadowDecl 0x7fa3339212a0 <col:9> col:9 implicit Function 0x7fa333907f90 'logb' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fa3339212e8 <col:9> col:9 implicit Function 0x7fa333908280 'logb' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fa333921330 <col:9> col:9 implicit FunctionTemplate 0x7fa333908930 'logb'
|   |-UsingDecl 0x7fa333921380 <line:432:1, col:9> col:9 ::logbf
|   |-UsingShadowDecl 0x7fa3339213d0 <col:9> col:9 implicit Function 0x7fa3330e4730 'logbf' 'float (float)'
|   |-UsingDecl 0x7fa333921420 <line:433:1, col:9> col:9 ::lrint
|   |-UsingShadowDecl 0x7fa333921470 <col:9> col:9 implicit Function 0x7fa3330eee88 'lrint' 'long (double)'
|   |-UsingShadowDecl 0x7fa3339214b8 <col:9> col:9 implicit Function 0x7fa333909f50 'lrint' 'long (float) noexcept'
|   |-UsingShadowDecl 0x7fa333921500 <col:9> col:9 implicit Function 0x7fa33390a270 'lrint' 'long (long double) noexcept'
|   |-UsingShadowDecl 0x7fa333921548 <col:9> col:9 implicit FunctionTemplate 0x7fa33390aa40 'lrint'
|   |-UsingDecl 0x7fa333921598 <line:434:1, col:9> col:9 ::lrintf
|   |-UsingShadowDecl 0x7fa3339215e8 <col:9> col:9 implicit Function 0x7fa3330eec68 'lrintf' 'long (float)'
|   |-UsingDecl 0x7fa333921638 <line:435:1, col:9> col:9 ::lround
|   |-UsingShadowDecl 0x7fa333921688 <col:9> col:9 implicit Function 0x7fa3330ef908 'lround' 'long (double)'
|   |-UsingShadowDecl 0x7fa3339216d0 <col:9> col:9 implicit Function 0x7fa33390b2f8 'lround' 'long (float) noexcept'
|   |-UsingShadowDecl 0x7fa333921718 <col:9> col:9 implicit Function 0x7fa33390b5e8 'lround' 'long (long double) noexcept'
|   |-UsingShadowDecl 0x7fa333921760 <col:9> col:9 implicit FunctionTemplate 0x7fa33390bca0 'lround'
|   |-UsingDecl 0x7fa3339217b0 <line:436:1, col:9> col:9 ::lroundf
|   |-UsingShadowDecl 0x7fa333921800 <col:9> col:9 implicit Function 0x7fa3330ef768 'lroundf' 'long (float)'
|   |-UsingDecl 0x7fa333921850 <line:438:1, col:9> col:9 ::nan
|   |-UsingShadowDecl 0x7fa3339218a0 <col:9> col:9 implicit Function 0x7fa3330f2ae8 'nan' 'double (const char *)'
|   |-UsingDecl 0x7fa3339218f0 <line:439:1, col:9> col:9 ::nanf
|   |-UsingShadowDecl 0x7fa333921940 <col:9> col:9 implicit Function 0x7fa3330f28c8 'nanf' 'float (const char *)'
|   |-UsingDecl 0x7fa333921990 <line:441:1, col:9> col:9 ::nearbyint
|   |-UsingShadowDecl 0x7fa3339219e0 <col:9> col:9 implicit Function 0x7fa3330ee408 'nearbyint' 'double (double)'
|   |-UsingShadowDecl 0x7fa333921a28 <col:9> col:9 implicit Function 0x7fa33390c2c0 'nearbyint' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fa333921a70 <col:9> col:9 implicit Function 0x7fa33390c5b0 'nearbyint' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fa333921ab8 <col:9> col:9 implicit FunctionTemplate 0x7fa33390cc60 'nearbyint'
|   |-UsingDecl 0x7fa333921b08 <line:442:1, col:9> col:9 ::nearbyintf
|   |-UsingShadowDecl 0x7fa333921b58 <col:9> col:9 implicit Function 0x7fa3330ee268 'nearbyintf' 'float (float)'
|   |-UsingDecl 0x7fa333921ba8 <line:443:1, col:9> col:9 ::nextafter
|   |-UsingShadowDecl 0x7fa333921bf8 <col:9> col:9 implicit Function 0x7fa3330f3190 'nextafter' 'double (double, double)'
|   |-UsingShadowDecl 0x7fa333921c40 <col:9> col:9 implicit Function 0x7fa33390d300 'nextafter' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7fa333921c88 <col:9> col:9 implicit Function 0x7fa33390d6c0 'nextafter' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fa333921cd0 <col:9> col:9 implicit FunctionTemplate 0x7fa33390e160 'nextafter'
|   |-UsingDecl 0x7fa333921d20 <line:444:1, col:9> col:9 ::nextafterf
|   |-UsingShadowDecl 0x7fa333921d70 <col:9> col:9 implicit Function 0x7fa3330f2f68 'nextafterf' 'float (float, float)'
|   |-UsingDecl 0x7fa333921dc0 <line:445:1, col:9> col:9 ::nexttoward
|   |-UsingShadowDecl 0x7fa333921e10 <col:9> col:9 implicit Function 0x7fa3330f3628 'nexttoward' 'double (double, long double)'
|   |-UsingShadowDecl 0x7fa333921e58 <col:9> col:9 implicit Function 0x7fa33390eb18 'nexttoward' 'float (float, long double) noexcept'
|   |-UsingShadowDecl 0x7fa333921ea0 <col:9> col:9 implicit Function 0x7fa33390ef00 'nexttoward' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fa333921ee8 <col:9> col:9 implicit FunctionTemplate 0x7fa33390f6d0 'nexttoward'
|   |-UsingDecl 0x7fa333921f38 <line:446:1, col:9> col:9 ::nexttowardf
|   |-UsingShadowDecl 0x7fa333921f88 <col:9> col:9 implicit Function 0x7fa3330e48d8 'nexttowardf' 'float (float, long double)'
|   |-UsingDecl 0x7fa333921fd8 <line:447:1, col:9> col:9 ::remainder
|   |-UsingShadowDecl 0x7fa333922028 <col:9> col:9 implicit Function 0x7fa3330f1600 'remainder' 'double (double, double)'
|   |-UsingShadowDecl 0x7fa333922070 <col:9> col:9 implicit Function 0x7fa33390fde8 'remainder' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7fa3339220b8 <col:9> col:9 implicit Function 0x7fa3339101a8 'remainder' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fa333922100 <col:9> col:9 implicit FunctionTemplate 0x7fa333910c50 'remainder'
|   |-UsingDecl 0x7fa333922150 <line:448:1, col:9> col:9 ::remainderf
|   |-UsingShadowDecl 0x7fa3339221a0 <col:9> col:9 implicit Function 0x7fa3330f13d8 'remainderf' 'float (float, float)'
|   |-UsingDecl 0x7fa3339221f0 <line:449:1, col:9> col:9 ::remquo
|   |-UsingShadowDecl 0x7fa333922240 <col:9> col:9 implicit Function 0x7fa3330f1dc8 'remquo' 'double (double, double, int *)'
|   |-UsingShadowDecl 0x7fa333922288 <col:9> col:9 implicit Function 0x7fa3339116d0 'remquo' 'float (float, float, int *) noexcept'
|   |-UsingShadowDecl 0x7fa3339222d0 <col:9> col:9 implicit Function 0x7fa333911be0 'remquo' 'long double (long double, long double, int *) noexcept'
|   |-UsingShadowDecl 0x7fa333922318 <col:9> col:9 implicit FunctionTemplate 0x7fa3339127e0 'remquo'
|   |-UsingDecl 0x7fa333922368 <line:450:1, col:9> col:9 ::remquof
|   |-UsingShadowDecl 0x7fa3339223b8 <col:9> col:9 implicit Function 0x7fa3330f1b28 'remquof' 'float (float, float, int *)'
|   |-UsingDecl 0x7fa333922408 <line:451:1, col:9> col:9 ::rint
|   |-UsingShadowDecl 0x7fa333922458 <col:9> col:9 implicit Function 0x7fa3330ee8f0 'rint' 'double (double)'
|   |-UsingShadowDecl 0x7fa3339224a0 <col:9> col:9 implicit Function 0x7fa333913148 'rint' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fa3339224e8 <col:9> col:9 implicit Function 0x7fa333913438 'rint' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fa333922530 <col:9> col:9 implicit FunctionTemplate 0x7fa333913af0 'rint'
|   |-UsingDecl 0x7fa333922580 <line:452:1, col:9> col:9 ::rintf
|   |-UsingShadowDecl 0x7fa3339225d0 <col:9> col:9 implicit Function 0x7fa3330ee748 'rintf' 'float (float)'
|   |-UsingDecl 0x7fa333922620 <line:453:1, col:9> col:9 ::round
|   |-UsingShadowDecl 0x7fa333922670 <col:9> col:9 implicit Function 0x7fa3330ef428 'round' 'double (double)'
|   |-UsingShadowDecl 0x7fa3339226b8 <col:9> col:9 implicit Function 0x7fa333914110 'round' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fa333922700 <col:9> col:9 implicit Function 0x7fa333914400 'round' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fa333922748 <col:9> col:9 implicit FunctionTemplate 0x7fa333914ab0 'round'
|   |-UsingDecl 0x7fa333922798 <line:454:1, col:9> col:9 ::roundf
|   |-UsingShadowDecl 0x7fa3339227e8 <col:9> col:9 implicit Function 0x7fa3330ef288 'roundf' 'float (float)'
|   |-UsingDecl 0x7fa333922838 <line:455:1, col:9> col:9 ::scalbln
|   |-UsingShadowDecl 0x7fa333922888 <col:9> col:9 implicit Function 0x7fa3330ea458 'scalbln' 'double (double, long)'
|   |-UsingShadowDecl 0x7fa3339228d0 <col:9> col:9 implicit Function 0x7fa333915150 'scalbln' 'float (float, long) noexcept'
|   |-UsingShadowDecl 0x7fa333922918 <col:9> col:9 implicit Function 0x7fa333915540 'scalbln' 'long double (long double, long) noexcept'
|   |-UsingShadowDecl 0x7fa333922960 <col:9> col:9 implicit FunctionTemplate 0x7fa333915d70 'scalbln'
|   |-UsingDecl 0x7fa3339229b0 <line:456:1, col:9> col:9 ::scalblnf
|   |-UsingShadowDecl 0x7fa333922a00 <col:9> col:9 implicit Function 0x7fa3330ea1a8 'scalblnf' 'float (float, long)'
|   |-UsingDecl 0x7fa333922a50 <line:457:1, col:9> col:9 ::scalbn
|   |-UsingShadowDecl 0x7fa333922aa0 <col:9> col:9 implicit Function 0x7fa3330e9d10 'scalbn' 'double (double, int)'
|   |-UsingShadowDecl 0x7fa333922ae8 <col:9> col:9 implicit Function 0x7fa333916488 'scalbn' 'float (float, int) noexcept'
|   |-UsingShadowDecl 0x7fa333922b30 <col:9> col:9 implicit Function 0x7fa333916848 'scalbn' 'long double (long double, int) noexcept'
|   |-UsingShadowDecl 0x7fa333922b78 <col:9> col:9 implicit FunctionTemplate 0x7fa333916fe0 'scalbn'
|   |-UsingDecl 0x7fa333922bc8 <line:458:1, col:9> col:9 ::scalbnf
|   |-UsingShadowDecl 0x7fa333922c18 <col:9> col:9 implicit Function 0x7fa3330e9ae8 'scalbnf' 'float (float, int)'
|   |-UsingDecl 0x7fa333922c68 <line:459:1, col:9> col:9 ::tgamma
|   |-UsingShadowDecl 0x7fa333922cb8 <col:9> col:9 implicit Function 0x7fa3330ed560 'tgamma' 'double (double)'
|   |-UsingShadowDecl 0x7fa333922d00 <col:9> col:9 implicit Function 0x7fa333917650 'tgamma' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fa333922d48 <col:9> col:9 implicit Function 0x7fa333917940 'tgamma' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fa333922d90 <col:9> col:9 implicit FunctionTemplate 0x7fa333917ff0 'tgamma'
|   |-UsingDecl 0x7fa333922de0 <line:460:1, col:9> col:9 ::tgammaf
|   |-UsingShadowDecl 0x7fa333922e30 <col:9> col:9 implicit Function 0x7fa3330ed3c0 'tgammaf' 'float (float)'
|   |-UsingDecl 0x7fa333922e80 <line:461:1, col:9> col:9 ::trunc
|   |-UsingShadowDecl 0x7fa333922ed0 <col:9> col:9 implicit Function 0x7fa3330f09a0 'trunc' 'double (double)'
|   |-UsingShadowDecl 0x7fa333922f18 <col:9> col:9 implicit Function 0x7fa333918610 'trunc' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fa333922f60 <col:9> col:9 implicit Function 0x7fa333918900 'trunc' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fa333922fa8 <col:9> col:9 implicit FunctionTemplate 0x7fa333918fb0 'trunc'
|   |-UsingDecl 0x7fa333922ff8 <line:462:1, col:9> col:9 ::truncf
|   |-UsingShadowDecl 0x7fa333923048 <col:9> col:9 implicit Function 0x7fa3330f0800 'truncf' 'float (float)'
|   |-UsingDecl 0x7fa333923098 <line:464:1, col:9> col:9 ::acosl
|   |-UsingShadowDecl 0x7fa3339230e8 <col:9> col:9 implicit Function 0x7fa3330dcc78 'acosl' 'long double (long double)'
|   |-UsingDecl 0x7fa333923138 <line:465:1, col:9> col:9 ::asinl
|   |-UsingShadowDecl 0x7fa333923188 <col:9> col:9 implicit Function 0x7fa3330dd1a0 'asinl' 'long double (long double)'
|   |-UsingDecl 0x7fa333925200 <line:466:1, col:9> col:9 ::atanl
|   |-UsingShadowDecl 0x7fa333925250 <col:9> col:9 implicit Function 0x7fa3330dd680 'atanl' 'long double (long double)'
|   |-UsingDecl 0x7fa3339252a0 <line:467:1, col:9> col:9 ::atan2l
|   |-UsingShadowDecl 0x7fa3339252f0 <col:9> col:9 implicit Function 0x7fa3330dde48 'atan2l' 'long double (long double, long double)'
|   |-UsingDecl 0x7fa333925340 <line:468:1, col:9> col:9 ::ceill
|   |-UsingShadowDecl 0x7fa333925390 <col:9> col:9 implicit Function 0x7fa3330edbe8 'ceill' 'long double (long double)'
|   |-UsingDecl 0x7fa3339253e0 <line:469:1, col:9> col:9 ::cosl
|   |-UsingShadowDecl 0x7fa333925430 <col:9> col:9 implicit Function 0x7fa3330deb70 'cosl' 'long double (long double)'
|   |-UsingDecl 0x7fa333925480 <line:470:1, col:9> col:9 ::coshl
|   |-UsingShadowDecl 0x7fa3339254d0 <col:9> col:9 implicit Function 0x7fa3330e18f0 'coshl' 'long double (long double)'
|   |-UsingDecl 0x7fa333925520 <line:471:1, col:9> col:9 ::expl
|   |-UsingShadowDecl 0x7fa333925570 <col:9> col:9 implicit Function 0x7fa3330e2800 'expl' 'long double (long double)'
|   |-UsingDecl 0x7fa3339255c0 <line:472:1, col:9> col:9 ::fabsl
|   |-UsingShadowDecl 0x7fa333925610 <col:9> col:9 implicit Function 0x7fa3330eac30 'fabsl' 'long double (long double)'
|   |-UsingDecl 0x7fa333925660 <line:473:1, col:9> col:9 ::floorl
|   |-UsingShadowDecl 0x7fa3339256b0 <col:9> col:9 implicit Function 0x7fa3330ee0c8 'floorl' 'long double (long double)'
|   |-UsingDecl 0x7fa333925700 <line:474:1, col:9> col:9 ::fmodl
|   |-UsingShadowDecl 0x7fa333925750 <col:9> col:9 implicit Function 0x7fa3330f11b0 'fmodl' 'long double (long double, long double)'
|   |-UsingDecl 0x7fa3339257a0 <line:475:1, col:9> col:9 ::frexpl
|   |-UsingShadowDecl 0x7fa3339257f0 <col:9> col:9 implicit Function 0x7fa3330e82c8 'frexpl' 'long double (long double, int *)'
|   |-UsingDecl 0x7fa333925840 <line:476:1, col:9> col:9 ::ldexpl
|   |-UsingShadowDecl 0x7fa333925890 <col:9> col:9 implicit Function 0x7fa3330e7ab8 'ldexpl' 'long double (long double, int)'
|   |-UsingDecl 0x7fa3339258e0 <line:477:1, col:9> col:9 ::logl
|   |-UsingShadowDecl 0x7fa333925930 <col:9> col:9 implicit Function 0x7fa3330e36a0 'logl' 'long double (long double)'
|   |-UsingDecl 0x7fa333925980 <line:478:1, col:9> col:9 ::log10l
|   |-UsingShadowDecl 0x7fa3339259d0 <col:9> col:9 implicit Function 0x7fa3330e3bd0 'log10l' 'long double (long double)'
|   |-UsingDecl 0x7fa333925a20 <line:479:1, col:9> col:9 ::modfl
|   |-UsingShadowDecl 0x7fa333925a70 <col:9> col:9 implicit Function 0x7fa3330e6298 'modfl' 'long double (long double, long double *)'
|   |-UsingDecl 0x7fa333925ac0 <line:480:1, col:9> col:9 ::powl
|   |-UsingShadowDecl 0x7fa333925b10 <col:9> col:9 implicit Function 0x7fa3330ebe78 'powl' 'long double (long double, long double)'
|   |-UsingDecl 0x7fa333925b60 <line:481:1, col:9> col:9 ::sinl
|   |-UsingShadowDecl 0x7fa333925bb0 <col:9> col:9 implicit Function 0x7fa3330df050 'sinl' 'long double (long double)'
|   |-UsingDecl 0x7fa333925c00 <line:482:1, col:9> col:9 ::sinhl
|   |-UsingShadowDecl 0x7fa333925c50 <col:9> col:9 implicit Function 0x7fa3330e1dd0 'sinhl' 'long double (long double)'
|   |-UsingDecl 0x7fa333925ca0 <line:483:1, col:9> col:9 ::sqrtl
|   |-UsingShadowDecl 0x7fa333925cf0 <col:9> col:9 implicit Function 0x7fa3330ec360 'sqrtl' 'long double (long double)'
|   |-UsingDecl 0x7fa333925d40 <line:484:1, col:9> col:9 ::tanl
|   |-UsingShadowDecl 0x7fa333925d90 <col:9> col:9 implicit Function 0x7fa3330df530 'tanl' 'long double (long double)'
|   |-UsingDecl 0x7fa333925de0 <line:486:1, col:9> col:9 ::tanhl
|   |-UsingShadowDecl 0x7fa333925e30 <col:9> col:9 implicit Function 0x7fa3330e22b0 'tanhl' 'long double (long double)'
|   |-UsingDecl 0x7fa333925e80 <line:487:1, col:9> col:9 ::acoshl
|   |-UsingShadowDecl 0x7fa333925ed0 <col:9> col:9 implicit Function 0x7fa3330e0230 'acoshl' 'long double (long double)'
|   |-UsingDecl 0x7fa333925f20 <line:488:1, col:9> col:9 ::asinhl
|   |-UsingShadowDecl 0x7fa333925f70 <col:9> col:9 implicit Function 0x7fa3330e0710 'asinhl' 'long double (long double)'
|   |-UsingDecl 0x7fa333925fc0 <line:489:1, col:9> col:9 ::atanhl
|   |-UsingShadowDecl 0x7fa333926010 <col:9> col:9 implicit Function 0x7fa3330e0bf0 'atanhl' 'long double (long double)'
|   |-UsingDecl 0x7fa333926060 <line:490:1, col:9> col:9 ::cbrtl
|   |-UsingShadowDecl 0x7fa3339260b0 <col:9> col:9 implicit Function 0x7fa3330eb110 'cbrtl' 'long double (long double)'
|   |-UsingDecl 0x7fa333926100 <line:492:1, col:9> col:9 ::copysignl
|   |-UsingShadowDecl 0x7fa333926150 <col:9> col:9 implicit Function 0x7fa3330f2690 'copysignl' 'long double (long double, long double)'
|   |-UsingDecl 0x7fa3339261a0 <line:494:1, col:9> col:9 ::erfl
|   |-UsingShadowDecl 0x7fa3339261f0 <col:9> col:9 implicit Function 0x7fa3330ec890 'erfl' 'long double (long double)'
|   |-UsingDecl 0x7fa333926240 <line:495:1, col:9> col:9 ::erfcl
|   |-UsingShadowDecl 0x7fa333926290 <col:9> col:9 implicit Function 0x7fa3330ecd70 'erfcl' 'long double (long double)'
|   |-UsingDecl 0x7fa3339262e0 <line:496:1, col:9> col:9 ::exp2l
|   |-UsingShadowDecl 0x7fa333926330 <col:9> col:9 implicit Function 0x7fa3330e2ce0 'exp2l' 'long double (long double)'
|   |-UsingDecl 0x7fa333926380 <line:497:1, col:9> col:9 ::expm1l
|   |-UsingShadowDecl 0x7fa3339263d0 <col:9> col:9 implicit Function 0x7fa3330e31c0 'expm1l' 'long double (long double)'
|   |-UsingDecl 0x7fa333926420 <line:498:1, col:9> col:9 ::fdiml
|   |-UsingShadowDecl 0x7fa333926470 <col:9> col:9 implicit Function 0x7fa3330e51b8 'fdiml' 'long double (long double, long double)'
|   |-UsingDecl 0x7fa3339264c0 <line:499:1, col:9> col:9 ::fmal
|   |-UsingShadowDecl 0x7fa333926510 <col:9> col:9 implicit Function 0x7fa3330e8888 'fmal' 'long double (long double, long double, long double)'
|   |-UsingDecl 0x7fa333926560 <line:500:1, col:9> col:9 ::fmaxl
|   |-UsingShadowDecl 0x7fa3339265b0 <col:9> col:9 implicit Function 0x7fa3330f7838 'fmaxl' 'long double (long double, long double)'
|   |-UsingDecl 0x7fa333926600 <line:501:1, col:9> col:9 ::fminl
|   |-UsingShadowDecl 0x7fa333926650 <col:9> col:9 implicit Function 0x7fa3330f7eb0 'fminl' 'long double (long double, long double)'
|   |-UsingDecl 0x7fa3339266a0 <line:502:1, col:9> col:9 ::hypotl
|   |-UsingShadowDecl 0x7fa3339266f0 <col:9> col:9 implicit Function 0x7fa3330eb800 'hypotl' 'long double (long double, long double)'
|   |-UsingDecl 0x7fa333926740 <line:503:1, col:9> col:9 ::ilogbl
|   |-UsingShadowDecl 0x7fa333926790 <col:9> col:9 implicit Function 0x7fa3330e9890 'ilogbl' 'int (long double)'
|   |-UsingDecl 0x7fa3339267e0 <line:504:1, col:9> col:9 ::lgammal
|   |-UsingShadowDecl 0x7fa333926830 <col:9> col:9 implicit Function 0x7fa3330ed230 'lgammal' 'long double (long double)'
|   |-UsingDecl 0x7fa333926880 <line:505:1, col:9> col:9 ::llrintl
|   |-UsingShadowDecl 0x7fa3339268d0 <col:9> col:9 implicit Function 0x7fa3330f00c8 'llrintl' 'long long (long double)'
|   |-UsingDecl 0x7fa333926920 <line:506:1, col:9> col:9 ::llroundl
|   |-UsingShadowDecl 0x7fa333926970 <col:9> col:9 implicit Function 0x7fa3330f05e8 'llroundl' 'long long (long double)'
|   |-UsingDecl 0x7fa3339269c0 <line:507:1, col:9> col:9 ::log1pl
|   |-UsingShadowDecl 0x7fa333926a10 <col:9> col:9 implicit Function 0x7fa3330e4590 'log1pl' 'long double (long double)'
|   |-UsingDecl 0x7fa333926a60 <line:508:1, col:9> col:9 ::log2l
|   |-UsingShadowDecl 0x7fa333926ab0 <col:9> col:9 implicit Function 0x7fa3330e40b0 'log2l' 'long double (long double)'
|   |-UsingDecl 0x7fa333926b00 <line:509:1, col:9> col:9 ::logbl
|   |-UsingShadowDecl 0x7fa333926b50 <col:9> col:9 implicit Function 0x7fa3330e5a90 'logbl' 'long double (long double)'
|   |-UsingDecl 0x7fa333926ba0 <line:510:1, col:9> col:9 ::lrintl
|   |-UsingShadowDecl 0x7fa333926bf0 <col:9> col:9 implicit Function 0x7fa3330ef0a8 'lrintl' 'long (long double)'
|   |-UsingDecl 0x7fa333926c40 <line:511:1, col:9> col:9 ::lroundl
|   |-UsingShadowDecl 0x7fa333926c90 <col:9> col:9 implicit Function 0x7fa3330efaa8 'lroundl' 'long (long double)'
|   |-UsingDecl 0x7fa333926ce0 <line:512:1, col:9> col:9 ::nanl
|   |-UsingShadowDecl 0x7fa333926d30 <col:9> col:9 implicit Function 0x7fa3330f2d08 'nanl' 'long double (const char *)'
|   |-UsingDecl 0x7fa333926d80 <line:513:1, col:9> col:9 ::nearbyintl
|   |-UsingShadowDecl 0x7fa333926dd0 <col:9> col:9 implicit Function 0x7fa3330ee5a8 'nearbyintl' 'long double (long double)'
|   |-UsingDecl 0x7fa333926e20 <line:514:1, col:9> col:9 ::nextafterl
|   |-UsingShadowDecl 0x7fa333926e70 <col:9> col:9 implicit Function 0x7fa3330f33b8 'nextafterl' 'long double (long double, long double)'
|   |-UsingDecl 0x7fa333926ec0 <line:515:1, col:9> col:9 ::nexttowardl
|   |-UsingShadowDecl 0x7fa333926f10 <col:9> col:9 implicit Function 0x7fa3330e4b40 'nexttowardl' 'long double (long double, long double)'
|   |-UsingDecl 0x7fa333926f60 <line:516:1, col:9> col:9 ::remainderl
|   |-UsingShadowDecl 0x7fa333926fb0 <col:9> col:9 implicit Function 0x7fa3330f1838 'remainderl' 'long double (long double, long double)'
|   |-UsingDecl 0x7fa333927000 <line:517:1, col:9> col:9 ::remquol
|   |-UsingShadowDecl 0x7fa333927050 <col:9> col:9 implicit Function 0x7fa3330f2068 'remquol' 'long double (long double, long double, int *)'
|   |-UsingDecl 0x7fa3339270a0 <line:518:1, col:9> col:9 ::rintl
|   |-UsingShadowDecl 0x7fa3339270f0 <col:9> col:9 implicit Function 0x7fa3330eea90 'rintl' 'long double (long double)'
|   |-UsingDecl 0x7fa333927140 <line:519:1, col:9> col:9 ::roundl
|   |-UsingShadowDecl 0x7fa333927190 <col:9> col:9 implicit Function 0x7fa3330ef5c8 'roundl' 'long double (long double)'
|   |-UsingDecl 0x7fa3339271e0 <line:520:1, col:9> col:9 ::scalblnl
|   |-UsingShadowDecl 0x7fa333927230 <col:9> col:9 implicit Function 0x7fa3330ea708 'scalblnl' 'long double (long double, long)'
|   |-UsingDecl 0x7fa333927280 <line:521:1, col:9> col:9 ::scalbnl
|   |-UsingShadowDecl 0x7fa3339272d0 <col:9> col:9 implicit Function 0x7fa3330e9f38 'scalbnl' 'long double (long double, int)'
|   |-UsingDecl 0x7fa333927320 <line:522:1, col:9> col:9 ::tgammal
|   |-UsingShadowDecl 0x7fa333927370 <col:9> col:9 implicit Function 0x7fa3330ed700 'tgammal' 'long double (long double)'
|   |-UsingDecl 0x7fa3339273c0 <line:523:1, col:9> col:9 ::truncl
|   |-UsingShadowDecl 0x7fa333927410 <col:9> col:9 implicit Function 0x7fa3330f0b40 'truncl' 'long double (long double)'
|   |-FunctionTemplateDecl 0x7fa3339278e0 <line:549:1, line:559:1> line:552:1 __libcpp_isnan
|   | |-TemplateTypeParmDecl 0x7fa333927458 <line:549:11, col:17> col:17 referenced class depth 0 index 0 _A1
|   | `-FunctionDecl 0x7fa333927848 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:559:1> line:552:1 constexpr __libcpp_isnan 'typename enable_if<is_floating_point<_A1>::value, _Bool>::type (_A1) noexcept'
|   |   |-ParmVarDecl 0x7fa333927770 <col:16, col:20> col:20 referenced __lcpp_x '_A1'
|   |   |-CompoundStmt 0x7fa333927b68 <line:553:1, line:559:1>
|   |   | `-ReturnStmt 0x7fa333927b50 <line:555:5, col:36>
|   |   |   `-CallExpr 0x7fa333927b20 <col:12, col:36> '<dependent type>'
|   |   |     |-DeclRefExpr 0x7fa333927ad0 <col:12> '<builtin fn type>' Function 0x7fa3339279e0 '__builtin_isnan' 'int (...) noexcept'
|   |   |     `-DeclRefExpr 0x7fa333927af8 <col:28> '_A1' lvalue ParmVar 0x7fa333927770 '__lcpp_x' '_A1'
|   |   |-AlwaysInlineAttr 0x7fa333927938 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
|   |   `-VisibilityAttr 0x7fa333927980 <col:48, col:71> Hidden
|   |-FunctionTemplateDecl 0x7fa333928100 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:561:1, line:567:1> line:564:1 __libcpp_isnan
|   | |-TemplateTypeParmDecl 0x7fa333927b88 <line:561:11, col:17> col:17 referenced class depth 0 index 0 _A1
|   | `-FunctionDecl 0x7fa333928068 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:567:1> line:564:1 constexpr __libcpp_isnan 'typename enable_if<!is_floating_point<_A1>::value, _Bool>::type (_A1) noexcept'
|   |   |-ParmVarDecl 0x7fa333927f50 <col:16, col:20> col:20 referenced __lcpp_x '_A1'
|   |   |-CompoundStmt 0x7fa333928280 <line:565:1, line:567:1>
|   |   | `-ReturnStmt 0x7fa333928268 <line:566:5, col:26>
|   |   |   `-CallExpr 0x7fa333928238 <col:12, col:26> '<dependent type>'
|   |   |     |-UnresolvedLookupExpr 0x7fa3339281b0 <col:12> '<overloaded function type>' lvalue (ADL) = 'isnan' 0x7fa33391aa48 0x7fa33391aa00
|   |   |     `-DeclRefExpr 0x7fa333928210 <col:18> '_A1' lvalue ParmVar 0x7fa333927f50 '__lcpp_x' '_A1'
|   |   |-AlwaysInlineAttr 0x7fa333928158 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
|   |   `-VisibilityAttr 0x7fa3339281a0 <col:48, col:71> Hidden
|   |-FunctionTemplateDecl 0x7fa333928720 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:569:1, line:579:1> line:572:1 __libcpp_isinf
|   | |-TemplateTypeParmDecl 0x7fa3339282a0 <line:569:11, col:17> col:17 referenced class depth 0 index 0 _A1
|   | `-FunctionDecl 0x7fa333928688 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:579:1> line:572:1 constexpr __libcpp_isinf 'typename enable_if<is_floating_point<_A1>::value, _Bool>::type (_A1) noexcept'
|   |   |-ParmVarDecl 0x7fa3339285b0 <col:16, col:20> col:20 referenced __lcpp_x '_A1'
|   |   |-CompoundStmt 0x7fa3339289a8 <line:573:1, line:579:1>
|   |   | `-ReturnStmt 0x7fa333928990 <line:575:5, col:36>
|   |   |   `-CallExpr 0x7fa333928960 <col:12, col:36> '<dependent type>'
|   |   |     |-DeclRefExpr 0x7fa333928910 <col:12> '<builtin fn type>' Function 0x7fa333928820 '__builtin_isinf' 'int (...) noexcept'
|   |   |     `-DeclRefExpr 0x7fa333928938 <col:28> '_A1' lvalue ParmVar 0x7fa3339285b0 '__lcpp_x' '_A1'
|   |   |-AlwaysInlineAttr 0x7fa333928778 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
|   |   `-VisibilityAttr 0x7fa3339287c0 <col:48, col:71> Hidden
|   |-FunctionTemplateDecl 0x7fa333928e60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:581:1, line:587:1> line:584:1 __libcpp_isinf
|   | |-TemplateTypeParmDecl 0x7fa3339289c8 <line:581:11, col:17> col:17 referenced class depth 0 index 0 _A1
|   | `-FunctionDecl 0x7fa333928dc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:587:1> line:584:1 constexpr __libcpp_isinf 'typename enable_if<!is_floating_point<_A1>::value, _Bool>::type (_A1) noexcept'
|   |   |-ParmVarDecl 0x7fa333928cf0 <col:16, col:20> col:20 referenced __lcpp_x '_A1'
|   |   |-CompoundStmt 0x7fa333928fe0 <line:585:1, line:587:1>
|   |   | `-ReturnStmt 0x7fa333928fc8 <line:586:5, col:26>
|   |   |   `-CallExpr 0x7fa333928f98 <col:12, col:26> '<dependent type>'
|   |   |     |-UnresolvedLookupExpr 0x7fa333928f10 <col:12> '<overloaded function type>' lvalue (ADL) = 'isinf' 0x7fa333919960 0x7fa333919918
|   |   |     `-DeclRefExpr 0x7fa333928f70 <col:18> '_A1' lvalue ParmVar 0x7fa333928cf0 '__lcpp_x' '_A1'
|   |   |-AlwaysInlineAttr 0x7fa333928eb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
|   |   `-VisibilityAttr 0x7fa333928f00 <col:48, col:71> Hidden
|   |-FunctionTemplateDecl 0x7fa3339314a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:589:1, line:599:1> line:592:1 __libcpp_isfinite
|   | |-TemplateTypeParmDecl 0x7fa333929000 <line:589:11, col:17> col:17 referenced class depth 0 index 0 _A1
|   | `-FunctionDecl 0x7fa333931408 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:599:1> line:592:1 constexpr __libcpp_isfinite 'typename enable_if<is_floating_point<_A1>::value, _Bool>::type (_A1) noexcept'
|   |   |-ParmVarDecl 0x7fa333931330 <col:19, col:23> col:23 referenced __lcpp_x '_A1'
|   |   |-CompoundStmt 0x7fa333931728 <line:593:1, line:599:1>
|   |   | `-ReturnStmt 0x7fa333931710 <line:595:5, col:39>
|   |   |   `-CallExpr 0x7fa3339316e0 <col:12, col:39> '<dependent type>'
|   |   |     |-DeclRefExpr 0x7fa333931690 <col:12> '<builtin fn type>' Function 0x7fa3339315a0 '__builtin_isfinite' 'int (...) noexcept'
|   |   |     `-DeclRefExpr 0x7fa3339316b8 <col:31> '_A1' lvalue ParmVar 0x7fa333931330 '__lcpp_x' '_A1'
|   |   |-AlwaysInlineAttr 0x7fa3339314f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
|   |   `-VisibilityAttr 0x7fa333931540 <col:48, col:71> Hidden
|   `-FunctionTemplateDecl 0x7fa333931be0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:601:1, line:607:1> line:604:1 __libcpp_isfinite
|     |-TemplateTypeParmDecl 0x7fa333931748 <line:601:11, col:17> col:17 referenced class depth 0 index 0 _A1
|     `-FunctionDecl 0x7fa333931b48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:607:1> line:604:1 constexpr __libcpp_isfinite 'typename enable_if<!is_floating_point<_A1>::value, _Bool>::type (_A1) noexcept'
|       |-ParmVarDecl 0x7fa333931a70 <col:19, col:23> col:23 referenced __lcpp_x '_A1'
|       |-CompoundStmt 0x7fa333931d60 <line:605:1, line:607:1>
|       | `-ReturnStmt 0x7fa333931d48 <line:606:5, col:29>
|       |   `-CallExpr 0x7fa333931d18 <col:12, col:29> '<dependent type>'
|       |     |-UnresolvedLookupExpr 0x7fa333931c90 <col:12> '<overloaded function type>' lvalue (ADL) = 'isfinite' 0x7fa333919878 0x7fa333919830
|       |     `-DeclRefExpr 0x7fa333931cf0 <col:21> '_A1' lvalue ParmVar 0x7fa333931a70 '__lcpp_x' '_A1'
|       |-AlwaysInlineAttr 0x7fa333931c38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
|       `-VisibilityAttr 0x7fa333931c80 <col:48, col:71> Hidden
|-LinkageSpecDecl 0x7fa333927990 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:555:12> col:12 implicit C
| `-FunctionDecl 0x7fa3339279e0 <col:12> col:12 implicit referenced __builtin_isnan 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7fa333927a78 <col:12> Implicit
|   `-ConstAttr 0x7fa333927ac0 <col:12> Implicit
|-LinkageSpecDecl 0x7fa3339287d0 <line:575:12> col:12 implicit C
| `-FunctionDecl 0x7fa333928820 <col:12> col:12 implicit referenced __builtin_isinf 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7fa3339288b8 <col:12> Implicit
|   `-ConstAttr 0x7fa333928900 <col:12> Implicit
|-LinkageSpecDecl 0x7fa333931550 <line:595:12> col:12 implicit C
| `-FunctionDecl 0x7fa3339315a0 <col:12> col:12 implicit referenced __builtin_isfinite 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7fa333931638 <col:12> Implicit
|   `-ConstAttr 0x7fa333931680 <col:12> Implicit
|-CXXRecordDecl 0x7fa333931d80 <object_model/3_data/06_multiple_inheritance.cpp:3:1, line:5:1> line:3:8 referenced struct P1 definition
| |-CXXRecordDecl 0x7fa333931ea8 <col:1, col:8> col:8 implicit struct P1
| |-FieldDecl 0x7fa333931f58 <line:4:5, col:12> col:12 referenced x 'double'
| |-CXXConstructorDecl 0x7fa333933568 <line:3:8> col:8 implicit P1 'void (void) noexcept' inline default trivial
| |-CXXDestructorDecl 0x7fa333933648 <col:8> col:8 implicit ~P1 'void (void)' inline default trivial noexcept-unevaluated 0x7fa333933648
| |-CXXConstructorDecl 0x7fa333933908 <col:8> col:8 implicit constexpr P1 'void (const struct P1 &)' inline default trivial noexcept-unevaluated 0x7fa333933908
| | `-ParmVarDecl 0x7fa333933a30 <col:8> col:8 'const struct P1 &'
| `-CXXConstructorDecl 0x7fa333933ac8 <col:8> col:8 implicit constexpr P1 'void (struct P1 &&)' inline default trivial noexcept-unevaluated 0x7fa333933ac8
|   `-ParmVarDecl 0x7fa333933bf0 <col:8> col:8 'struct P1 &&'
|-CXXRecordDecl 0x7fa333931fc0 <line:7:1, line:9:1> line:7:8 referenced struct P2 definition
| |-CXXRecordDecl 0x7fa3339320e8 <col:1, col:8> col:8 implicit struct P2
| |-FieldDecl 0x7fa333932198 <line:8:5, col:12> col:12 referenced y 'double'
| |-CXXConstructorDecl 0x7fa333933748 <line:7:8> col:8 implicit P2 'void (void) noexcept' inline default trivial
| |-CXXDestructorDecl 0x7fa333933828 <col:8> col:8 implicit ~P2 'void (void)' inline default trivial noexcept-unevaluated 0x7fa333933828
| |-CXXConstructorDecl 0x7fa333933c58 <col:8> col:8 implicit constexpr P2 'void (const struct P2 &)' inline default trivial noexcept-unevaluated 0x7fa333933c58
| | `-ParmVarDecl 0x7fa333933d80 <col:8> col:8 'const struct P2 &'
| `-CXXConstructorDecl 0x7fa333933e18 <col:8> col:8 implicit constexpr P2 'void (struct P2 &&)' inline default trivial noexcept-unevaluated 0x7fa333933e18
|   `-ParmVarDecl 0x7fa333933f40 <col:8> col:8 'struct P2 &&'
|-CXXRecordDecl 0x7fa333932200 <line:11:1, line:13:1> line:11:8 referenced struct P3 definition
| |-public 'struct P1'
| |-public 'struct P2'
| |-CXXRecordDecl 0x7fa3339323a8 <col:1, col:8> col:8 implicit struct P3
| |-FieldDecl 0x7fa333932458 <line:12:5, col:12> col:12 z 'double'
| |-CXXConstructorDecl 0x7fa333933468 <line:11:8> col:8 implicit referenced P3 'void (void) noexcept' inline default trivial
| |-CXXConstructorDecl 0x7fa333933fa8 <col:8> col:8 implicit constexpr P3 'void (const struct P3 &)' inline default trivial noexcept-unevaluated 0x7fa333933fa8
| | `-ParmVarDecl 0x7fa3339340d0 <col:8> col:8 'const struct P3 &'
| `-CXXConstructorDecl 0x7fa333934168 <col:8> col:8 implicit constexpr P3 'void (struct P3 &&)' inline default trivial noexcept-unevaluated 0x7fa333934168
|   `-ParmVarDecl 0x7fa333934290 <col:8> col:8 'struct P3 &&'
|-FunctionDecl 0x7fa3339325c8 <line:15:1, line:18:1> line:15:8 used func1 'double (const struct P1 &)'
| |-ParmVarDecl 0x7fa3339324f8 <col:14, col:24> col:24 used p 'const struct P1 &'
| `-CompoundStmt 0x7fa333932798 <line:16:1, line:18:1>
|   `-ReturnStmt 0x7fa333932780 <line:17:5, col:20>
|     `-BinaryOperator 0x7fa333932758 <col:12, col:20> 'double' '*'
|       |-ImplicitCastExpr 0x7fa333932728 <col:12, col:14> 'double' <LValueToRValue>
|       | `-MemberExpr 0x7fa333932690 <col:12, col:14> 'const double' lvalue .x 0x7fa333931f58
|       |   `-DeclRefExpr 0x7fa333932668 <col:12> 'const struct P1' lvalue ParmVar 0x7fa3339324f8 'p' 'const struct P1 &'
|       `-ImplicitCastExpr 0x7fa333932740 <col:18, col:20> 'double' <LValueToRValue>
|         `-MemberExpr 0x7fa3339326f0 <col:18, col:20> 'const double' lvalue .x 0x7fa333931f58
|           `-DeclRefExpr 0x7fa3339326c8 <col:18> 'const struct P1' lvalue ParmVar 0x7fa3339324f8 'p' 'const struct P1 &'
|-FunctionDecl 0x7fa3339328c8 <line:20:1, line:23:1> line:20:8 used func2 'double (const struct P2 &)'
| |-ParmVarDecl 0x7fa3339327f8 <col:14, col:24> col:24 used p 'const struct P2 &'
| `-CompoundStmt 0x7fa333932a98 <line:21:1, line:23:1>
|   `-ReturnStmt 0x7fa333932a80 <line:22:5, col:20>
|     `-BinaryOperator 0x7fa333932a58 <col:12, col:20> 'double' '*'
|       |-ImplicitCastExpr 0x7fa333932a28 <col:12, col:14> 'double' <LValueToRValue>
|       | `-MemberExpr 0x7fa333932990 <col:12, col:14> 'const double' lvalue .y 0x7fa333932198
|       |   `-DeclRefExpr 0x7fa333932968 <col:12> 'const struct P2' lvalue ParmVar 0x7fa3339327f8 'p' 'const struct P2 &'
|       `-ImplicitCastExpr 0x7fa333932a40 <col:18, col:20> 'double' <LValueToRValue>
|         `-MemberExpr 0x7fa3339329f0 <col:18, col:20> 'const double' lvalue .y 0x7fa333932198
|           `-DeclRefExpr 0x7fa3339329c8 <col:18> 'const struct P2' lvalue ParmVar 0x7fa3339327f8 'p' 'const struct P2 &'
|-FunctionDecl 0x7fa333932bc8 <line:25:1, line:28:1> line:25:8 used func3 'double (const struct P3 &)'
| |-ParmVarDecl 0x7fa333932af8 <col:14, col:24> col:24 used p 'const struct P3 &'
| `-CompoundStmt 0x7fa333933288 <line:26:1, line:28:1>
|   `-ReturnStmt 0x7fa333933270 <line:27:5, col:41>
|     `-CallExpr 0x7fa333933240 <col:12, col:41> 'double'
|       |-ImplicitCastExpr 0x7fa333933228 <col:12, col:17> 'double (*)(double)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x7fa3339331e8 <col:12, col:17> 'double (double)' lvalue Function 0x7fa3330ec1c0 'sqrt' 'double (double)' (UsingShadow 0x7fa33391da20 'sqrt')
|       `-BinaryOperator 0x7fa333932f90 <col:22, col:40> 'double' '+'
|         |-CallExpr 0x7fa333932e00 <col:22, col:29> 'double'
|         | |-ImplicitCastExpr 0x7fa333932de8 <col:22> 'double (*)(const struct P1 &)' <FunctionToPointerDecay>
|         | | `-DeclRefExpr 0x7fa333932d90 <col:22> 'double (const struct P1 &)' lvalue Function 0x7fa3339325c8 'func1' 'double (const struct P1 &)'
|         | `-ImplicitCastExpr 0x7fa333932e30 <col:28> 'const struct P1' lvalue <DerivedToBase (P1)>
|         |   `-DeclRefExpr 0x7fa333932d68 <col:28> 'const struct P3' lvalue ParmVar 0x7fa333932af8 'p' 'const struct P3 &'
|         `-CallExpr 0x7fa333932f40 <col:33, col:40> 'double'
|           |-ImplicitCastExpr 0x7fa333932f28 <col:33> 'double (*)(const struct P2 &)' <FunctionToPointerDecay>
|           | `-DeclRefExpr 0x7fa333932ed0 <col:33> 'double (const struct P2 &)' lvalue Function 0x7fa3339328c8 'func2' 'double (const struct P2 &)'
|           `-ImplicitCastExpr 0x7fa333932f70 <col:39> 'const struct P2' lvalue <DerivedToBase (P2)>
|             `-DeclRefExpr 0x7fa333932ea8 <col:39> 'const struct P3' lvalue ParmVar 0x7fa333932af8 'p' 'const struct P3 &'
`-FunctionDecl 0x7fa3339332d0 <line:30:1, line:37:1> line:30:5 main 'int (void)'
  `-CompoundStmt 0x7fa333934950 <line:31:1, line:37:1>
    |-DeclStmt 0x7fa333934568 <line:32:5, col:12>
    | `-VarDecl 0x7fa3339333a8 <col:5, col:11> col:8 used p3 'struct P3' listinit
    |   `-CXXConstructExpr 0x7fa3339342f8 <col:8, col:11> 'struct P3' 'void (void) noexcept' zeroing
    |-DeclStmt 0x7fa3339346a8 <line:33:5, col:17>
    | `-VarDecl 0x7fa3339345b8 <col:5, col:15> col:9 pv 'struct P2 *' cinit
    |   `-ImplicitCastExpr 0x7fa333934688 <col:14, col:15> 'struct P2 *' <DerivedToBase (P2)>
    |     `-UnaryOperator 0x7fa333934668 <col:14, col:15> 'struct P3 *' prefix '&'
    |       `-DeclRefExpr 0x7fa333934618 <col:15> 'struct P3' lvalue Var 0x7fa3339333a8 'p3' 'struct P3'
    |-DeclStmt 0x7fa333934900 <line:35:5, col:23>
    | `-VarDecl 0x7fa3339346d0 <col:5, col:22> col:10 v 'double':'double' cinit
    |   `-CallExpr 0x7fa333934820 <col:14, col:22> 'double'
    |     |-ImplicitCastExpr 0x7fa333934808 <col:14> 'double (*)(const struct P3 &)' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x7fa3339347b0 <col:14> 'double (const struct P3 &)' lvalue Function 0x7fa333932bc8 'func3' 'double (const struct P3 &)'
    |     `-ImplicitCastExpr 0x7fa333934850 <col:20> 'const struct P3' lvalue <NoOp>
    |       `-DeclRefExpr 0x7fa333934788 <col:20> 'struct P3' lvalue Var 0x7fa3339333a8 'p3' 'struct P3'
    `-ReturnStmt 0x7fa333934938 <line:36:5, col:12>
      `-IntegerLiteral 0x7fa333934918 <col:12> 'int' 0
