TranslationUnitDecl 0x7fe8b18324d0 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x7fe8b1832a60 <<invalid sloc>> <invalid sloc> implicit referenced __int128_t '__int128'
| `-BuiltinType 0x7fe8b1832740 '__int128'
|-TypedefDecl 0x7fe8b1832ad0 <<invalid sloc>> <invalid sloc> implicit referenced __uint128_t 'unsigned __int128'
| `-BuiltinType 0x7fe8b1832760 'unsigned __int128'
|-TypedefDecl 0x7fe8b1832e18 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x7fe8b1832bc0 'struct __NSConstantString_tag'
|   `-CXXRecord 0x7fe8b1832b28 '__NSConstantString_tag'
|-TypedefDecl 0x7fe8b1832eb0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x7fe8b1832e70 'char *'
|   `-BuiltinType 0x7fe8b1832560 'char'
|-TypedefDecl 0x7fe8b1865600 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x7fe8b1833190 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x7fe8b1832fa0 'struct __va_list_tag'
|     `-CXXRecord 0x7fe8b1832f08 '__va_list_tag'
|-NamespaceDecl 0x7fe8b1865658 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:442:1, line:445:1> line:442:11 std
| `-NamespaceDecl 0x7fe8b18656c0 <line:443:3, line:444:3> <scratch space>:25:1 __1 inline
|-LinkageSpecDecl 0x7fe8b18657d8 </usr/include/sys/cdefs.h:71:23, line:72:21> line:71:30 C
| |-TypedefDecl 0x7fe8b1865840 </usr/include/math.h:44:5, col:19> col:19 float_t 'float'
| | `-BuiltinType 0x7fe8b18326c0 'float'
| |-TypedefDecl 0x7fe8b18658b0 <line:45:5, col:20> col:20 double_t 'double'
| | `-BuiltinType 0x7fe8b18326e0 'double'
| |-FunctionDecl 0x7fe8b18659d8 <line:111:1, col:35> col:12 __math_errhandling 'int (void)' extern
| |-FunctionDecl 0x7fe8b1865b98 <line:144:1, col:31> col:12 referenced __fpclassifyf 'int (float)' extern
| | `-ParmVarDecl 0x7fe8b1865ac8 <col:26> col:31 'float'
| |-FunctionDecl 0x7fe8b1865d18 <line:145:1, col:32> col:12 referenced __fpclassifyd 'int (double)' extern
| | `-ParmVarDecl 0x7fe8b1865c50 <col:26> col:32 'double'
| |-FunctionDecl 0x7fe8b1865e98 <line:146:1, col:37> col:12 referenced __fpclassifyl 'int (long double)' extern
| | `-ParmVarDecl 0x7fe8b1865dd0 <col:26, col:31> col:37 'long double'
| |-FunctionDecl 0x7fe8b1865fe0 </usr/include/sys/cdefs.h:300:36, /usr/include/math.h:188:52> col:28 used __inline_isfinitef 'int (float)' inline
| | |-ParmVarDecl 0x7fe8b1865f50 <col:47> col:52 'float'
| | `-AlwaysInlineAttr 0x7fe8b1866080 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fe8b1866170 <line:300:36, /usr/include/math.h:189:53> col:28 used __inline_isfinited 'int (double)' inline
| | |-ParmVarDecl 0x7fe8b18660e0 <col:47> col:53 'double'
| | `-AlwaysInlineAttr 0x7fe8b1866210 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fe8b1866300 <line:300:36, /usr/include/math.h:190:58> col:28 used __inline_isfinitel 'int (long double)' inline
| | |-ParmVarDecl 0x7fe8b1866270 <col:47, col:52> col:58 'long double'
| | `-AlwaysInlineAttr 0x7fe8b18663a0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fe8b1866490 <line:300:36, /usr/include/math.h:191:49> col:28 __inline_isinff 'int (float)' inline
| | |-ParmVarDecl 0x7fe8b1866400 <col:44> col:49 'float'
| | `-AlwaysInlineAttr 0x7fe8b1866530 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fe8b1902230 <line:300:36, /usr/include/math.h:192:50> col:28 __inline_isinfd 'int (double)' inline
| | |-ParmVarDecl 0x7fe8b1866590 <col:44> col:50 'double'
| | `-AlwaysInlineAttr 0x7fe8b19022d0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fe8b19023c0 <line:300:36, /usr/include/math.h:193:55> col:28 __inline_isinfl 'int (long double)' inline
| | |-ParmVarDecl 0x7fe8b1902330 <col:44, col:49> col:55 'long double'
| | `-AlwaysInlineAttr 0x7fe8b1902460 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fe8b1902550 <line:300:36, /usr/include/math.h:194:49> col:28 __inline_isnanf 'int (float)' inline
| | |-ParmVarDecl 0x7fe8b19024c0 <col:44> col:49 'float'
| | `-AlwaysInlineAttr 0x7fe8b19025f0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fe8b19026e0 <line:300:36, /usr/include/math.h:195:50> col:28 __inline_isnand 'int (double)' inline
| | |-ParmVarDecl 0x7fe8b1902650 <col:44> col:50 'double'
| | `-AlwaysInlineAttr 0x7fe8b1902780 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fe8b1902870 <line:300:36, /usr/include/math.h:196:55> col:28 __inline_isnanl 'int (long double)' inline
| | |-ParmVarDecl 0x7fe8b19027e0 <col:44, col:49> col:55 'long double'
| | `-AlwaysInlineAttr 0x7fe8b1902910 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fe8b1902a00 <line:300:36, /usr/include/math.h:197:52> col:28 __inline_isnormalf 'int (float)' inline
| | |-ParmVarDecl 0x7fe8b1902970 <col:47> col:52 'float'
| | `-AlwaysInlineAttr 0x7fe8b1902aa0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fe8b1902b90 <line:300:36, /usr/include/math.h:198:53> col:28 __inline_isnormald 'int (double)' inline
| | |-ParmVarDecl 0x7fe8b1902b00 <col:47> col:53 'double'
| | `-AlwaysInlineAttr 0x7fe8b1902c30 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fe8b1902d20 <line:300:36, /usr/include/math.h:199:58> col:28 __inline_isnormall 'int (long double)' inline
| | |-ParmVarDecl 0x7fe8b1902c90 <col:47, col:52> col:58 'long double'
| | `-AlwaysInlineAttr 0x7fe8b1902dc0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fe8b1902eb0 <line:300:36, /usr/include/math.h:200:51> col:28 __inline_signbitf 'int (float)' inline
| | |-ParmVarDecl 0x7fe8b1902e20 <col:46> col:51 'float'
| | `-AlwaysInlineAttr 0x7fe8b1902f50 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fe8b1903040 <line:300:36, /usr/include/math.h:201:52> col:28 __inline_signbitd 'int (double)' inline
| | |-ParmVarDecl 0x7fe8b1902fb0 <col:46> col:52 'double'
| | `-AlwaysInlineAttr 0x7fe8b19030e0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fe8b1903200 <line:300:36, /usr/include/math.h:202:57> col:28 __inline_signbitl 'int (long double)' inline
| | |-ParmVarDecl 0x7fe8b1903140 <col:46, col:51> col:57 'long double'
| | `-AlwaysInlineAttr 0x7fe8b19032a0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fe8b1903390 prev 0x7fe8b1865fe0 <line:300:36, /usr/include/math.h:206:1> line:204:28 used __inline_isfinitef 'int (float)' inline
| | |-ParmVarDecl 0x7fe8b1903300 <col:47, col:53> col:53 used __x 'float'
| | |-CompoundStmt 0x7fe8b1903b38 <col:58, line:206:1>
| | | `-ReturnStmt 0x7fe8b1903b20 <line:205:5, col:65>
| | |   `-ImplicitCastExpr 0x7fe8b1903b08 <col:12, col:65> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fe8b1903ae0 <col:12, col:65> '_Bool' '&&'
| | |       |-BinaryOperator 0x7fe8b19034f8 <col:12, col:19> '_Bool' '=='
| | |       | |-ImplicitCastExpr 0x7fe8b19034c8 <col:12> 'float' <LValueToRValue>
| | |       | | `-DeclRefExpr 0x7fe8b1903478 <col:12> 'float' lvalue ParmVar 0x7fe8b1903300 '__x' 'float'
| | |       | `-ImplicitCastExpr 0x7fe8b19034e0 <col:19> 'float' <LValueToRValue>
| | |       |   `-DeclRefExpr 0x7fe8b19034a0 <col:19> 'float' lvalue ParmVar 0x7fe8b1903300 '__x' 'float'
| | |       `-BinaryOperator 0x7fe8b1903ab8 <col:26, col:65> '_Bool' '!='
| | |         |-CallExpr 0x7fe8b1903800 <col:26, col:45> 'float'
| | |         | |-ImplicitCastExpr 0x7fe8b19037e8 <col:26> 'float (*)(float) noexcept' <BuiltinFnToFnPtr>
| | |         | | `-DeclRefExpr 0x7fe8b1903740 <col:26> '<builtin fn type>' Function 0x7fe8b19035e8 '__builtin_fabsf' 'float (float) noexcept'
| | |         | `-ImplicitCastExpr 0x7fe8b1903830 <col:42> 'float' <LValueToRValue>
| | |         |   `-DeclRefExpr 0x7fe8b1903768 <col:42> 'float' lvalue ParmVar 0x7fe8b1903300 '__x' 'float'
| | |         `-CallExpr 0x7fe8b1903a90 <col:50, col:65> 'float'
| | |           `-ImplicitCastExpr 0x7fe8b1903a78 <col:50> 'float (*)(void) noexcept' <BuiltinFnToFnPtr>
| | |             `-DeclRefExpr 0x7fe8b19039f0 <col:50> '<builtin fn type>' Function 0x7fe8b1903900 '__builtin_inff' 'float (void) noexcept'
| | `-AlwaysInlineAttr 0x7fe8b1903430 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fe8b1903c00 prev 0x7fe8b1866170 <line:300:36, /usr/include/math.h:209:1> line:207:28 used __inline_isfinited 'int (double)' inline
| | |-ParmVarDecl 0x7fe8b1903b70 <col:47, col:54> col:54 used __x 'double'
| | |-CompoundStmt 0x7fe8b1904838 <col:59, line:209:1>
| | | `-ReturnStmt 0x7fe8b1904820 <line:208:5, col:63>
| | |   `-ImplicitCastExpr 0x7fe8b1904808 <col:12, col:63> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fe8b19047e0 <col:12, col:63> '_Bool' '&&'
| | |       |-BinaryOperator 0x7fe8b1903d68 <col:12, col:19> '_Bool' '=='
| | |       | |-ImplicitCastExpr 0x7fe8b1903d38 <col:12> 'double' <LValueToRValue>
| | |       | | `-DeclRefExpr 0x7fe8b1903ce8 <col:12> 'double' lvalue ParmVar 0x7fe8b1903b70 '__x' 'double'
| | |       | `-ImplicitCastExpr 0x7fe8b1903d50 <col:19> 'double' <LValueToRValue>
| | |       |   `-DeclRefExpr 0x7fe8b1903d10 <col:19> 'double' lvalue ParmVar 0x7fe8b1903b70 '__x' 'double'
| | |       `-BinaryOperator 0x7fe8b19047b8 <col:26, col:63> '_Bool' '!='
| | |         |-CallExpr 0x7fe8b1904070 <col:26, col:44> 'double'
| | |         | |-ImplicitCastExpr 0x7fe8b1904058 <col:26> 'double (*)(double) noexcept' <BuiltinFnToFnPtr>
| | |         | | `-DeclRefExpr 0x7fe8b1903fb0 <col:26> '<builtin fn type>' Function 0x7fe8b1903e58 '__builtin_fabs' 'double (double) noexcept'
| | |         | `-ImplicitCastExpr 0x7fe8b19040a0 <col:41> 'double' <LValueToRValue>
| | |         |   `-DeclRefExpr 0x7fe8b1903fd8 <col:41> 'double' lvalue ParmVar 0x7fe8b1903b70 '__x' 'double'
| | |         `-CallExpr 0x7fe8b1904790 <col:49, col:63> 'double'
| | |           `-ImplicitCastExpr 0x7fe8b1904778 <col:49> 'double (*)(void) noexcept' <BuiltinFnToFnPtr>
| | |             `-DeclRefExpr 0x7fe8b19046f0 <col:49> '<builtin fn type>' Function 0x7fe8b1904600 '__builtin_inf' 'double (void) noexcept'
| | `-AlwaysInlineAttr 0x7fe8b1903ca0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fe8b1904900 prev 0x7fe8b1866300 <line:300:36, /usr/include/math.h:212:1> line:210:28 used __inline_isfinitel 'int (long double)' inline
| | |-ParmVarDecl 0x7fe8b1904870 <col:47, col:59> col:59 used __x 'long double'
| | |-CompoundStmt 0x7fe8b19050a8 <col:64, line:212:1>
| | | `-ReturnStmt 0x7fe8b1905090 <line:211:5, col:65>
| | |   `-ImplicitCastExpr 0x7fe8b1905078 <col:12, col:65> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fe8b1905050 <col:12, col:65> '_Bool' '&&'
| | |       |-BinaryOperator 0x7fe8b1904a68 <col:12, col:19> '_Bool' '=='
| | |       | |-ImplicitCastExpr 0x7fe8b1904a38 <col:12> 'long double' <LValueToRValue>
| | |       | | `-DeclRefExpr 0x7fe8b19049e8 <col:12> 'long double' lvalue ParmVar 0x7fe8b1904870 '__x' 'long double'
| | |       | `-ImplicitCastExpr 0x7fe8b1904a50 <col:19> 'long double' <LValueToRValue>
| | |       |   `-DeclRefExpr 0x7fe8b1904a10 <col:19> 'long double' lvalue ParmVar 0x7fe8b1904870 '__x' 'long double'
| | |       `-BinaryOperator 0x7fe8b1905028 <col:26, col:65> '_Bool' '!='
| | |         |-CallExpr 0x7fe8b1904d70 <col:26, col:45> 'long double'
| | |         | |-ImplicitCastExpr 0x7fe8b1904d58 <col:26> 'long double (*)(long double) noexcept' <BuiltinFnToFnPtr>
| | |         | | `-DeclRefExpr 0x7fe8b1904cb0 <col:26> '<builtin fn type>' Function 0x7fe8b1904b58 '__builtin_fabsl' 'long double (long double) noexcept'
| | |         | `-ImplicitCastExpr 0x7fe8b1904da0 <col:42> 'long double' <LValueToRValue>
| | |         |   `-DeclRefExpr 0x7fe8b1904cd8 <col:42> 'long double' lvalue ParmVar 0x7fe8b1904870 '__x' 'long double'
| | |         `-CallExpr 0x7fe8b1905000 <col:50, col:65> 'long double'
| | |           `-ImplicitCastExpr 0x7fe8b1904fe8 <col:50> 'long double (*)(void) noexcept' <BuiltinFnToFnPtr>
| | |             `-DeclRefExpr 0x7fe8b1904f60 <col:50> '<builtin fn type>' Function 0x7fe8b1904e70 '__builtin_infl' 'long double (void) noexcept'
| | `-AlwaysInlineAttr 0x7fe8b19049a0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fe8b1905170 prev 0x7fe8b1866490 <line:300:36, /usr/include/math.h:215:1> line:213:28 referenced __inline_isinff 'int (float)' inline
| | |-ParmVarDecl 0x7fe8b19050e0 <col:44, col:50> col:50 used __x 'float'
| | |-CompoundStmt 0x7fe8b19053c8 <col:55, line:215:1>
| | | `-ReturnStmt 0x7fe8b19053b0 <line:214:5, col:51>
| | |   `-ImplicitCastExpr 0x7fe8b1905398 <col:12, col:51> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fe8b1905370 <col:12, col:51> '_Bool' '=='
| | |       |-CallExpr 0x7fe8b19052c0 <col:12, col:31> 'float'
| | |       | |-ImplicitCastExpr 0x7fe8b19052a8 <col:12> 'float (*)(float) noexcept' <BuiltinFnToFnPtr>
| | |       | | `-DeclRefExpr 0x7fe8b1905258 <col:12> '<builtin fn type>' Function 0x7fe8b19035e8 '__builtin_fabsf' 'float (float) noexcept'
| | |       | `-ImplicitCastExpr 0x7fe8b19052f0 <col:28> 'float' <LValueToRValue>
| | |       |   `-DeclRefExpr 0x7fe8b1905280 <col:28> 'float' lvalue ParmVar 0x7fe8b19050e0 '__x' 'float'
| | |       `-CallExpr 0x7fe8b1905348 <col:36, col:51> 'float'
| | |         `-ImplicitCastExpr 0x7fe8b1905330 <col:36> 'float (*)(void) noexcept' <BuiltinFnToFnPtr>
| | |           `-DeclRefExpr 0x7fe8b1905308 <col:36> '<builtin fn type>' Function 0x7fe8b1903900 '__builtin_inff' 'float (void) noexcept'
| | `-AlwaysInlineAttr 0x7fe8b1905210 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fe8b1905490 prev 0x7fe8b1902230 <line:300:36, /usr/include/math.h:218:1> line:216:28 referenced __inline_isinfd 'int (double)' inline
| | |-ParmVarDecl 0x7fe8b1905400 <col:44, col:51> col:51 used __x 'double'
| | |-CompoundStmt 0x7fe8b1905ae8 <col:56, line:218:1>
| | | `-ReturnStmt 0x7fe8b1905ad0 <line:217:5, col:49>
| | |   `-ImplicitCastExpr 0x7fe8b1905ab8 <col:12, col:49> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fe8b1905a90 <col:12, col:49> '_Bool' '=='
| | |       |-CallExpr 0x7fe8b19055e0 <col:12, col:30> 'double'
| | |       | |-ImplicitCastExpr 0x7fe8b19055c8 <col:12> 'double (*)(double) noexcept' <BuiltinFnToFnPtr>
| | |       | | `-DeclRefExpr 0x7fe8b1905578 <col:12> '<builtin fn type>' Function 0x7fe8b1903e58 '__builtin_fabs' 'double (double) noexcept'
| | |       | `-ImplicitCastExpr 0x7fe8b1905a10 <col:27> 'double' <LValueToRValue>
| | |       |   `-DeclRefExpr 0x7fe8b19055a0 <col:27> 'double' lvalue ParmVar 0x7fe8b1905400 '__x' 'double'
| | |       `-CallExpr 0x7fe8b1905a68 <col:35, col:49> 'double'
| | |         `-ImplicitCastExpr 0x7fe8b1905a50 <col:35> 'double (*)(void) noexcept' <BuiltinFnToFnPtr>
| | |           `-DeclRefExpr 0x7fe8b1905a28 <col:35> '<builtin fn type>' Function 0x7fe8b1904600 '__builtin_inf' 'double (void) noexcept'
| | `-AlwaysInlineAttr 0x7fe8b1905530 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fe8b1905bb0 prev 0x7fe8b19023c0 <line:300:36, /usr/include/math.h:221:1> line:219:28 referenced __inline_isinfl 'int (long double)' inline
| | |-ParmVarDecl 0x7fe8b1905b20 <col:44, col:56> col:56 used __x 'long double'
| | |-CompoundStmt 0x7fe8b1905e08 <col:61, line:221:1>
| | | `-ReturnStmt 0x7fe8b1905df0 <line:220:5, col:51>
| | |   `-ImplicitCastExpr 0x7fe8b1905dd8 <col:12, col:51> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fe8b1905db0 <col:12, col:51> '_Bool' '=='
| | |       |-CallExpr 0x7fe8b1905d00 <col:12, col:31> 'long double'
| | |       | |-ImplicitCastExpr 0x7fe8b1905ce8 <col:12> 'long double (*)(long double) noexcept' <BuiltinFnToFnPtr>
| | |       | | `-DeclRefExpr 0x7fe8b1905c98 <col:12> '<builtin fn type>' Function 0x7fe8b1904b58 '__builtin_fabsl' 'long double (long double) noexcept'
| | |       | `-ImplicitCastExpr 0x7fe8b1905d30 <col:28> 'long double' <LValueToRValue>
| | |       |   `-DeclRefExpr 0x7fe8b1905cc0 <col:28> 'long double' lvalue ParmVar 0x7fe8b1905b20 '__x' 'long double'
| | |       `-CallExpr 0x7fe8b1905d88 <col:36, col:51> 'long double'
| | |         `-ImplicitCastExpr 0x7fe8b1905d70 <col:36> 'long double (*)(void) noexcept' <BuiltinFnToFnPtr>
| | |           `-DeclRefExpr 0x7fe8b1905d48 <col:36> '<builtin fn type>' Function 0x7fe8b1904e70 '__builtin_infl' 'long double (void) noexcept'
| | `-AlwaysInlineAttr 0x7fe8b1905c50 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fe8b1905ed0 prev 0x7fe8b1902550 <line:300:36, /usr/include/math.h:224:1> line:222:28 referenced __inline_isnanf 'int (float)' inline
| | |-ParmVarDecl 0x7fe8b1905e40 <col:44, col:50> col:50 used __x 'float'
| | |-CompoundStmt 0x7fe8b1906090 <col:55, line:224:1>
| | | `-ReturnStmt 0x7fe8b1906078 <line:223:5, col:19>
| | |   `-ImplicitCastExpr 0x7fe8b1906060 <col:12, col:19> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fe8b1906038 <col:12, col:19> '_Bool' '!='
| | |       |-ImplicitCastExpr 0x7fe8b1906008 <col:12> 'float' <LValueToRValue>
| | |       | `-DeclRefExpr 0x7fe8b1905fb8 <col:12> 'float' lvalue ParmVar 0x7fe8b1905e40 '__x' 'float'
| | |       `-ImplicitCastExpr 0x7fe8b1906020 <col:19> 'float' <LValueToRValue>
| | |         `-DeclRefExpr 0x7fe8b1905fe0 <col:19> 'float' lvalue ParmVar 0x7fe8b1905e40 '__x' 'float'
| | `-AlwaysInlineAttr 0x7fe8b1905f70 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fe8b1906158 prev 0x7fe8b19026e0 <line:300:36, /usr/include/math.h:227:1> line:225:28 referenced __inline_isnand 'int (double)' inline
| | |-ParmVarDecl 0x7fe8b19060c8 <col:44, col:51> col:51 used __x 'double'
| | |-CompoundStmt 0x7fe8b1906318 <col:56, line:227:1>
| | | `-ReturnStmt 0x7fe8b1906300 <line:226:5, col:19>
| | |   `-ImplicitCastExpr 0x7fe8b19062e8 <col:12, col:19> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fe8b19062c0 <col:12, col:19> '_Bool' '!='
| | |       |-ImplicitCastExpr 0x7fe8b1906290 <col:12> 'double' <LValueToRValue>
| | |       | `-DeclRefExpr 0x7fe8b1906240 <col:12> 'double' lvalue ParmVar 0x7fe8b19060c8 '__x' 'double'
| | |       `-ImplicitCastExpr 0x7fe8b19062a8 <col:19> 'double' <LValueToRValue>
| | |         `-DeclRefExpr 0x7fe8b1906268 <col:19> 'double' lvalue ParmVar 0x7fe8b19060c8 '__x' 'double'
| | `-AlwaysInlineAttr 0x7fe8b19061f8 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fe8b19063e0 prev 0x7fe8b1902870 <line:300:36, /usr/include/math.h:230:1> line:228:28 referenced __inline_isnanl 'int (long double)' inline
| | |-ParmVarDecl 0x7fe8b1906350 <col:44, col:56> col:56 used __x 'long double'
| | |-CompoundStmt 0x7fe8b19065a0 <col:61, line:230:1>
| | | `-ReturnStmt 0x7fe8b1906588 <line:229:5, col:19>
| | |   `-ImplicitCastExpr 0x7fe8b1906570 <col:12, col:19> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fe8b1906548 <col:12, col:19> '_Bool' '!='
| | |       |-ImplicitCastExpr 0x7fe8b1906518 <col:12> 'long double' <LValueToRValue>
| | |       | `-DeclRefExpr 0x7fe8b19064c8 <col:12> 'long double' lvalue ParmVar 0x7fe8b1906350 '__x' 'long double'
| | |       `-ImplicitCastExpr 0x7fe8b1906530 <col:19> 'long double' <LValueToRValue>
| | |         `-DeclRefExpr 0x7fe8b19064f0 <col:19> 'long double' lvalue ParmVar 0x7fe8b1906350 '__x' 'long double'
| | `-AlwaysInlineAttr 0x7fe8b1906480 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fe8b1906668 prev 0x7fe8b1902eb0 <line:300:36, /usr/include/math.h:235:1> line:231:28 referenced __inline_signbitf 'int (float)' inline
| | |-ParmVarDecl 0x7fe8b19065d8 <col:46, col:52> col:52 used __x 'float'
| | |-CompoundStmt 0x7fe8b19082c8 <col:57, line:235:1>
| | | |-DeclStmt 0x7fe8b1907fb0 <line:232:5, col:47>
| | | | |-CXXRecordDecl 0x7fe8b1906750 <col:5, col:42> col:5 union definition
| | | | | |-FieldDecl 0x7fe8b1906890 <col:13, col:19> col:19 referenced __f 'float'
| | | | | |-FieldDecl 0x7fe8b19068f0 <col:24, col:37> col:37 referenced __u 'unsigned int'
| | | | | |-CXXConstructorDecl 0x7fe8b1907a80 <col:5> col:5 implicit used  'void (void) noexcept' inline default trivial
| | | | | | `-CompoundStmt 0x7fe8b1907f50 <col:5>
| | | | | |-CXXConstructorDecl 0x7fe8b1907bc8 <col:5> col:5 implicit constexpr  'void (const union (anonymous at /usr/include/math.h:232:5) &)' inline default trivial noexcept-unevaluated 0x7fe8b1907bc8
| | | | | | `-ParmVarDecl 0x7fe8b1907cf0 <col:5> col:5 'const union (anonymous at /usr/include/math.h:232:5) &'
| | | | | `-CXXConstructorDecl 0x7fe8b1907d88 <col:5> col:5 implicit constexpr  'void (union (anonymous at /usr/include/math.h:232:5) &&)' inline default trivial noexcept-unevaluated 0x7fe8b1907d88
| | | | |   `-ParmVarDecl 0x7fe8b1907eb0 <col:5> col:5 'union (anonymous at /usr/include/math.h:232:5) &&'
| | | | `-VarDecl 0x7fe8b1907a00 <col:5, col:44> col:44 used __u 'union (anonymous union at /usr/include/math.h:232:5)':'union (anonymous at /usr/include/math.h:232:5)' callinit
| | | |   `-CXXConstructExpr 0x7fe8b1907f68 <col:44> 'union (anonymous union at /usr/include/math.h:232:5)':'union (anonymous at /usr/include/math.h:232:5)' 'void (void) noexcept'
| | | |-BinaryOperator 0x7fe8b1908068 <line:233:5, col:15> 'float' lvalue '='
| | | | |-MemberExpr 0x7fe8b1907ff0 <col:5, col:9> 'float' lvalue .__f 0x7fe8b1906890
| | | | | `-DeclRefExpr 0x7fe8b1907fc8 <col:5> 'union (anonymous union at /usr/include/math.h:232:5)':'union (anonymous at /usr/include/math.h:232:5)' lvalue Var 0x7fe8b1907a00 '__u' 'union (anonymous union at /usr/include/math.h:232:5)':'union (anonymous at /usr/include/math.h:232:5)'
| | | | `-ImplicitCastExpr 0x7fe8b1908050 <col:15> 'float' <LValueToRValue>
| | | |   `-DeclRefExpr 0x7fe8b1908028 <col:15> 'float' lvalue ParmVar 0x7fe8b19065d8 '__x' 'float'
| | | `-ReturnStmt 0x7fe8b19082b0 <line:234:5, col:31>
| | |   `-CStyleCastExpr 0x7fe8b1908288 <col:12, col:31> 'int' <NoOp>
| | |     `-ImplicitCastExpr 0x7fe8b1908270 <col:17, col:31> 'int' <IntegralCast>
| | |       `-ParenExpr 0x7fe8b1908250 <col:17, col:31> 'unsigned int'
| | |         `-BinaryOperator 0x7fe8b19081e0 <col:18, col:29> 'unsigned int' '>>'
| | |           |-ImplicitCastExpr 0x7fe8b19081c8 <col:18, col:22> 'unsigned int' <LValueToRValue>
| | |           | `-MemberExpr 0x7fe8b1908170 <col:18, col:22> 'unsigned int' lvalue .__u 0x7fe8b19068f0
| | |           |   `-DeclRefExpr 0x7fe8b1908148 <col:18> 'union (anonymous union at /usr/include/math.h:232:5)':'union (anonymous at /usr/include/math.h:232:5)' lvalue Var 0x7fe8b1907a00 '__u' 'union (anonymous union at /usr/include/math.h:232:5)':'union (anonymous at /usr/include/math.h:232:5)'
| | |           `-IntegerLiteral 0x7fe8b19081a8 <col:29> 'int' 31
| | `-AlwaysInlineAttr 0x7fe8b1906708 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fe8b19083a0 prev 0x7fe8b1903040 <line:300:36, /usr/include/math.h:240:1> line:236:28 referenced __inline_signbitd 'int (double)' inline
| | |-ParmVarDecl 0x7fe8b1908310 <col:46, col:53> col:53 used __x 'double'
| | |-CompoundStmt 0x7fe8b190a940 <col:58, line:240:1>
| | | |-DeclStmt 0x7fe8b190a628 <line:237:5, col:54>
| | | | |-CXXRecordDecl 0x7fe8b1908488 <col:5, col:49> col:5 union definition
| | | | | |-FieldDecl 0x7fe8b19085c0 <col:13, col:20> col:20 referenced __f 'double'
| | | | | |-FieldDecl 0x7fe8b1908620 <col:25, col:44> col:44 referenced __u 'unsigned long long'
| | | | | |-CXXConstructorDecl 0x7fe8b1908760 <col:5> col:5 implicit used  'void (void) noexcept' inline default trivial
| | | | | | `-CompoundStmt 0x7fe8b190a5c8 <col:5>
| | | | | |-CXXConstructorDecl 0x7fe8b1908878 <col:5> col:5 implicit constexpr  'void (const union (anonymous at /usr/include/math.h:237:5) &)' inline default trivial noexcept-unevaluated 0x7fe8b1908878
| | | | | | `-ParmVarDecl 0x7fe8b19089a0 <col:5> col:5 'const union (anonymous at /usr/include/math.h:237:5) &'
| | | | | `-CXXConstructorDecl 0x7fe8b190a438 <col:5> col:5 implicit constexpr  'void (union (anonymous at /usr/include/math.h:237:5) &&)' inline default trivial noexcept-unevaluated 0x7fe8b190a438
| | | | |   `-ParmVarDecl 0x7fe8b190a560 <col:5> col:5 'union (anonymous at /usr/include/math.h:237:5) &&'
| | | | `-VarDecl 0x7fe8b19086e0 <col:5, col:51> col:51 used __u 'union (anonymous union at /usr/include/math.h:237:5)':'union (anonymous at /usr/include/math.h:237:5)' callinit
| | | |   `-CXXConstructExpr 0x7fe8b190a5e0 <col:51> 'union (anonymous union at /usr/include/math.h:237:5)':'union (anonymous at /usr/include/math.h:237:5)' 'void (void) noexcept'
| | | |-BinaryOperator 0x7fe8b190a6e0 <line:238:5, col:15> 'double' lvalue '='
| | | | |-MemberExpr 0x7fe8b190a668 <col:5, col:9> 'double' lvalue .__f 0x7fe8b19085c0
| | | | | `-DeclRefExpr 0x7fe8b190a640 <col:5> 'union (anonymous union at /usr/include/math.h:237:5)':'union (anonymous at /usr/include/math.h:237:5)' lvalue Var 0x7fe8b19086e0 '__u' 'union (anonymous union at /usr/include/math.h:237:5)':'union (anonymous at /usr/include/math.h:237:5)'
| | | | `-ImplicitCastExpr 0x7fe8b190a6c8 <col:15> 'double' <LValueToRValue>
| | | |   `-DeclRefExpr 0x7fe8b190a6a0 <col:15> 'double' lvalue ParmVar 0x7fe8b1908310 '__x' 'double'
| | | `-ReturnStmt 0x7fe8b190a928 <line:239:5, col:31>
| | |   `-CStyleCastExpr 0x7fe8b190a900 <col:12, col:31> 'int' <NoOp>
| | |     `-ImplicitCastExpr 0x7fe8b190a8e8 <col:17, col:31> 'int' <IntegralCast>
| | |       `-ParenExpr 0x7fe8b190a8c8 <col:17, col:31> 'unsigned long long'
| | |         `-BinaryOperator 0x7fe8b190a858 <col:18, col:29> 'unsigned long long' '>>'
| | |           |-ImplicitCastExpr 0x7fe8b190a840 <col:18, col:22> 'unsigned long long' <LValueToRValue>
| | |           | `-MemberExpr 0x7fe8b190a7e8 <col:18, col:22> 'unsigned long long' lvalue .__u 0x7fe8b1908620
| | |           |   `-DeclRefExpr 0x7fe8b190a7c0 <col:18> 'union (anonymous union at /usr/include/math.h:237:5)':'union (anonymous at /usr/include/math.h:237:5)' lvalue Var 0x7fe8b19086e0 '__u' 'union (anonymous union at /usr/include/math.h:237:5)':'union (anonymous at /usr/include/math.h:237:5)'
| | |           `-IntegerLiteral 0x7fe8b190a820 <col:29> 'int' 63
| | `-AlwaysInlineAttr 0x7fe8b1908440 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fe8b190aa18 prev 0x7fe8b1903200 <line:300:36, /usr/include/math.h:249:1> line:242:28 referenced __inline_signbitl 'int (long double)' inline
| | |-ParmVarDecl 0x7fe8b190a988 <col:46, col:58> col:58 used __x 'long double'
| | |-CompoundStmt 0x7fe8b190c690 <col:63, line:249:1>
| | | |-DeclStmt 0x7fe8b190c288 <line:243:5, line:246:10>
| | | | |-CXXRecordDecl 0x7fe8b190ab00 <line:243:5, line:246:5> line:243:5 union definition
| | | | | |-FieldDecl 0x7fe8b190ac40 <line:244:9, col:21> col:21 referenced __ld 'long double'
| | | | | |-CXXRecordDecl 0x7fe8b190ac88 <line:245:9, col:64> col:9 struct definition
| | | | | | |-FieldDecl 0x7fe8b190adc0 <col:17, col:36> col:36 __m 'unsigned long long'
| | | | | | |-FieldDecl 0x7fe8b190ae20 <col:41, col:56> col:56 referenced __sexp 'unsigned short'
| | | | | | |-CXXConstructorDecl 0x7fe8b190b138 <col:9> col:9 implicit  'void (void) noexcept' inline default trivial
| | | | | | |-CXXDestructorDecl 0x7fe8b190b218 <col:9> col:9 implicit ~ 'void (void)' inline default trivial noexcept-unevaluated 0x7fe8b190b218
| | | | | | |-CXXConstructorDecl 0x7fe8b190bd18 <col:9> col:9 implicit constexpr  'void (const struct (anonymous at /usr/include/math.h:245:9) &)' inline default trivial noexcept-unevaluated 0x7fe8b190bd18
| | | | | | | `-ParmVarDecl 0x7fe8b190be40 <col:9> col:9 'const struct (anonymous at /usr/include/math.h:245:9) &'
| | | | | | `-CXXConstructorDecl 0x7fe8b190bed8 <col:9> col:9 implicit constexpr  'void (struct (anonymous at /usr/include/math.h:245:9) &&)' inline default trivial noexcept-unevaluated 0x7fe8b190bed8
| | | | | |   `-ParmVarDecl 0x7fe8b190c000 <col:9> col:9 'struct (anonymous at /usr/include/math.h:245:9) &&'
| | | | | |-FieldDecl 0x7fe8b190aee0 <col:9, col:66> col:66 referenced __p 'struct (anonymous struct at /usr/include/math.h:245:9)':'struct (anonymous at /usr/include/math.h:245:9)'
| | | | | |-CXXConstructorDecl 0x7fe8b190b030 <line:243:5> col:5 implicit used  'void (void) noexcept' inline default trivial
| | | | | | `-CompoundStmt 0x7fe8b190c228 <col:5>
| | | | | |-CXXConstructorDecl 0x7fe8b190b328 <col:5> col:5 implicit constexpr  'void (const union (anonymous at /usr/include/math.h:243:5) &)' inline default trivial noexcept-unevaluated 0x7fe8b190b328
| | | | | | `-ParmVarDecl 0x7fe8b190bc80 <col:5> col:5 'const union (anonymous at /usr/include/math.h:243:5) &'
| | | | | `-CXXConstructorDecl 0x7fe8b190c098 <col:5> col:5 implicit constexpr  'void (union (anonymous at /usr/include/math.h:243:5) &&)' inline default trivial noexcept-unevaluated 0x7fe8b190c098
| | | | |   `-ParmVarDecl 0x7fe8b190c1c0 <col:5> col:5 'union (anonymous at /usr/include/math.h:243:5) &&'
| | | | `-VarDecl 0x7fe8b190afb0 <col:5, line:246:7> col:7 used __u 'union (anonymous union at /usr/include/math.h:243:5)':'union (anonymous at /usr/include/math.h:243:5)' callinit
| | | |   `-CXXConstructExpr 0x7fe8b190c240 <col:7> 'union (anonymous union at /usr/include/math.h:243:5)':'union (anonymous at /usr/include/math.h:243:5)' 'void (void) noexcept'
| | | |-BinaryOperator 0x7fe8b190c340 <line:247:5, col:16> 'long double' lvalue '='
| | | | |-MemberExpr 0x7fe8b190c2c8 <col:5, col:9> 'long double' lvalue .__ld 0x7fe8b190ac40
| | | | | `-DeclRefExpr 0x7fe8b190c2a0 <col:5> 'union (anonymous union at /usr/include/math.h:243:5)':'union (anonymous at /usr/include/math.h:243:5)' lvalue Var 0x7fe8b190afb0 '__u' 'union (anonymous union at /usr/include/math.h:243:5)':'union (anonymous at /usr/include/math.h:243:5)'
| | | | `-ImplicitCastExpr 0x7fe8b190c328 <col:16> 'long double' <LValueToRValue>
| | | |   `-DeclRefExpr 0x7fe8b190c300 <col:16> 'long double' lvalue ParmVar 0x7fe8b190a988 '__x' 'long double'
| | | `-ReturnStmt 0x7fe8b190c678 <line:248:5, col:38>
| | |   `-CStyleCastExpr 0x7fe8b190c650 <col:12, col:38> 'int' <NoOp>
| | |     `-ParenExpr 0x7fe8b190c630 <col:17, col:38> 'int'
| | |       `-BinaryOperator 0x7fe8b190c5c0 <col:18, col:36> 'int' '>>'
| | |         |-ImplicitCastExpr 0x7fe8b190c5a8 <col:18, col:26> 'int' <IntegralCast>
| | |         | `-ImplicitCastExpr 0x7fe8b190c590 <col:18, col:26> 'unsigned short' <LValueToRValue>
| | |         |   `-MemberExpr 0x7fe8b190c538 <col:18, col:26> 'unsigned short' lvalue .__sexp 0x7fe8b190ae20
| | |         |     `-MemberExpr 0x7fe8b190c500 <col:18, col:22> 'struct (anonymous struct at /usr/include/math.h:245:9)':'struct (anonymous at /usr/include/math.h:245:9)' lvalue .__p 0x7fe8b190aee0
| | |         |       `-DeclRefExpr 0x7fe8b190c4d8 <col:18> 'union (anonymous union at /usr/include/math.h:243:5)':'union (anonymous at /usr/include/math.h:243:5)' lvalue Var 0x7fe8b190afb0 '__u' 'union (anonymous union at /usr/include/math.h:243:5)':'union (anonymous at /usr/include/math.h:243:5)'
| | |         `-IntegerLiteral 0x7fe8b190c570 <col:36> 'int' 15
| | `-AlwaysInlineAttr 0x7fe8b190aab8 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fe8b190c768 prev 0x7fe8b1902a00 <line:300:36, /usr/include/math.h:259:1> line:257:28 referenced __inline_isnormalf 'int (float)' inline
| | |-ParmVarDecl 0x7fe8b190c6d8 <col:47, col:53> col:53 used __x 'float'
| | |-CompoundStmt 0x7fe8b190caf0 <col:58, line:259:1>
| | | `-ReturnStmt 0x7fe8b190cad8 <line:258:5, <built-in>:145:21>
| | |   `-ImplicitCastExpr 0x7fe8b190cac0 </usr/include/math.h:258:12, <built-in>:145:21> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fe8b190ca98 </usr/include/math.h:258:12, <built-in>:145:21> '_Bool' '&&'
| | |       |-ImplicitCastExpr 0x7fe8b190ca80 </usr/include/math.h:258:12, col:34> '_Bool' <IntegralToBoolean>
| | |       | `-CallExpr 0x7fe8b190c940 <col:12, col:34> 'int'
| | |       |   |-ImplicitCastExpr 0x7fe8b190c928 <col:12> 'int (*)(float)' <FunctionToPointerDecay>
| | |       |   | `-DeclRefExpr 0x7fe8b190c8d0 <col:12> 'int (float)' lvalue Function 0x7fe8b1903390 '__inline_isfinitef' 'int (float)'
| | |       |   `-ImplicitCastExpr 0x7fe8b190c970 <col:31> 'float' <LValueToRValue>
| | |       |     `-DeclRefExpr 0x7fe8b190c8a8 <col:31> 'float' lvalue ParmVar 0x7fe8b190c6d8 '__x' 'float'
| | |       `-BinaryOperator 0x7fe8b190ca58 <col:39, <built-in>:145:21> '_Bool' '>='
| | |         |-CallExpr 0x7fe8b190c9f0 </usr/include/math.h:258:39, col:58> 'float'
| | |         | |-ImplicitCastExpr 0x7fe8b190c9d8 <col:39> 'float (*)(float) noexcept' <BuiltinFnToFnPtr>
| | |         | | `-DeclRefExpr 0x7fe8b190c988 <col:39> '<builtin fn type>' Function 0x7fe8b19035e8 '__builtin_fabsf' 'float (float) noexcept'
| | |         | `-ImplicitCastExpr 0x7fe8b190ca20 <col:55> 'float' <LValueToRValue>
| | |         |   `-DeclRefExpr 0x7fe8b190c9b0 <col:55> 'float' lvalue ParmVar 0x7fe8b190c6d8 '__x' 'float'
| | |         `-FloatingLiteral 0x7fe8b190ca38 <<built-in>:145:21> 'float' 1.175494e-38
| | `-AlwaysInlineAttr 0x7fe8b190c808 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fe8b190d000 prev 0x7fe8b1902b90 <line:300:36, /usr/include/math.h:262:1> line:260:28 referenced __inline_isnormald 'int (double)' inline
| | |-ParmVarDecl 0x7fe8b190cb28 <col:47, col:54> col:54 used __x 'double'
| | |-CompoundStmt 0x7fe8b190d380 <col:59, line:262:1>
| | | `-ReturnStmt 0x7fe8b190d368 <line:261:5, <built-in>:159:21>
| | |   `-ImplicitCastExpr 0x7fe8b190d350 </usr/include/math.h:261:12, <built-in>:159:21> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fe8b190d328 </usr/include/math.h:261:12, <built-in>:159:21> '_Bool' '&&'
| | |       |-ImplicitCastExpr 0x7fe8b190d310 </usr/include/math.h:261:12, col:34> '_Bool' <IntegralToBoolean>
| | |       | `-CallExpr 0x7fe8b190d1d0 <col:12, col:34> 'int'
| | |       |   |-ImplicitCastExpr 0x7fe8b190d1b8 <col:12> 'int (*)(double)' <FunctionToPointerDecay>
| | |       |   | `-DeclRefExpr 0x7fe8b190d168 <col:12> 'int (double)' lvalue Function 0x7fe8b1903c00 '__inline_isfinited' 'int (double)'
| | |       |   `-ImplicitCastExpr 0x7fe8b190d200 <col:31> 'double' <LValueToRValue>
| | |       |     `-DeclRefExpr 0x7fe8b190d140 <col:31> 'double' lvalue ParmVar 0x7fe8b190cb28 '__x' 'double'
| | |       `-BinaryOperator 0x7fe8b190d2e8 <col:39, <built-in>:159:21> '_Bool' '>='
| | |         |-CallExpr 0x7fe8b190d280 </usr/include/math.h:261:39, col:57> 'double'
| | |         | |-ImplicitCastExpr 0x7fe8b190d268 <col:39> 'double (*)(double) noexcept' <BuiltinFnToFnPtr>
| | |         | | `-DeclRefExpr 0x7fe8b190d218 <col:39> '<builtin fn type>' Function 0x7fe8b1903e58 '__builtin_fabs' 'double (double) noexcept'
| | |         | `-ImplicitCastExpr 0x7fe8b190d2b0 <col:54> 'double' <LValueToRValue>
| | |         |   `-DeclRefExpr 0x7fe8b190d240 <col:54> 'double' lvalue ParmVar 0x7fe8b190cb28 '__x' 'double'
| | |         `-FloatingLiteral 0x7fe8b190d2c8 <<built-in>:159:21> 'double' 2.225074e-308
| | `-AlwaysInlineAttr 0x7fe8b190d0a0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fe8b190d448 prev 0x7fe8b1902d20 <line:300:36, /usr/include/math.h:265:1> line:263:28 referenced __inline_isnormall 'int (long double)' inline
| | |-ParmVarDecl 0x7fe8b190d3b8 <col:47, col:59> col:59 used __x 'long double'
| | |-CompoundStmt 0x7fe8b190d7e0 <col:64, line:265:1>
| | | `-ReturnStmt 0x7fe8b190d7c8 <line:264:5, <built-in>:173:22>
| | |   `-ImplicitCastExpr 0x7fe8b190d7b0 </usr/include/math.h:264:12, <built-in>:173:22> 'int' <IntegralCast>
| | |     `-BinaryOperator 0x7fe8b190d788 </usr/include/math.h:264:12, <built-in>:173:22> '_Bool' '&&'
| | |       |-ImplicitCastExpr 0x7fe8b190d770 </usr/include/math.h:264:12, col:34> '_Bool' <IntegralToBoolean>
| | |       | `-CallExpr 0x7fe8b190d620 <col:12, col:34> 'int'
| | |       |   |-ImplicitCastExpr 0x7fe8b190d608 <col:12> 'int (*)(long double)' <FunctionToPointerDecay>
| | |       |   | `-DeclRefExpr 0x7fe8b190d5b0 <col:12> 'int (long double)' lvalue Function 0x7fe8b1904900 '__inline_isfinitel' 'int (long double)'
| | |       |   `-ImplicitCastExpr 0x7fe8b190d650 <col:31> 'long double' <LValueToRValue>
| | |       |     `-DeclRefExpr 0x7fe8b190d588 <col:31> 'long double' lvalue ParmVar 0x7fe8b190d3b8 '__x' 'long double'
| | |       `-BinaryOperator 0x7fe8b190d748 <col:39, <built-in>:173:22> '_Bool' '>='
| | |         |-CallExpr 0x7fe8b190d6d0 </usr/include/math.h:264:39, col:58> 'long double'
| | |         | |-ImplicitCastExpr 0x7fe8b190d6b8 <col:39> 'long double (*)(long double) noexcept' <BuiltinFnToFnPtr>
| | |         | | `-DeclRefExpr 0x7fe8b190d668 <col:39> '<builtin fn type>' Function 0x7fe8b1904b58 '__builtin_fabsl' 'long double (long double) noexcept'
| | |         | `-ImplicitCastExpr 0x7fe8b190d700 <col:55> 'long double' <LValueToRValue>
| | |         |   `-DeclRefExpr 0x7fe8b190d690 <col:55> 'long double' lvalue ParmVar 0x7fe8b190d3b8 '__x' 'long double'
| | |         `-FloatingLiteral 0x7fe8b190d718 <<built-in>:173:22> 'long double' 0.000000e+00
| | `-AlwaysInlineAttr 0x7fe8b190d4e8 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fe8b190d8a8 </usr/include/math.h:322:1, col:25> col:14 used acosf 'float (float)' extern
| | |-ParmVarDecl 0x7fe8b190d818 <col:20> col:25 'float'
| | |-ConstAttr 0x7fe8b190d948 <col:14> Implicit
| | `-NoThrowAttr 0x7fe8b190d990 <col:14> Implicit
| |-FunctionDecl 0x7fe8b190da48 <line:323:1, col:26> col:15 referenced acos 'double (double)' extern
| | |-ParmVarDecl 0x7fe8b190d9b8 <col:20> col:26 'double'
| | |-ConstAttr 0x7fe8b190dae8 <col:15> Implicit
| | `-NoThrowAttr 0x7fe8b190db30 <col:15> Implicit
| |-FunctionDecl 0x7fe8b190dbe8 <line:324:1, col:37> col:20 used acosl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fe8b190db58 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fe8b190dc88 <col:20> Implicit
| | `-NoThrowAttr 0x7fe8b190dcd0 <col:20> Implicit
| |-FunctionDecl 0x7fe8b190dd88 <line:326:1, col:25> col:14 used asinf 'float (float)' extern
| | |-ParmVarDecl 0x7fe8b190dcf8 <col:20> col:25 'float'
| | |-ConstAttr 0x7fe8b190de28 <col:14> Implicit
| | `-NoThrowAttr 0x7fe8b190de70 <col:14> Implicit
| |-FunctionDecl 0x7fe8b190df28 <line:327:1, col:26> col:15 referenced asin 'double (double)' extern
| | |-ParmVarDecl 0x7fe8b190de98 <col:20> col:26 'double'
| | |-ConstAttr 0x7fe8b190dfc8 <col:15> Implicit
| | `-NoThrowAttr 0x7fe8b2000038 <col:15> Implicit
| |-FunctionDecl 0x7fe8b20000f0 <line:328:1, col:37> col:20 used asinl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fe8b2000060 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fe8b2000190 <col:20> Implicit
| | `-NoThrowAttr 0x7fe8b20001d8 <col:20> Implicit
| |-FunctionDecl 0x7fe8b2000290 <line:330:1, col:25> col:14 used atanf 'float (float)' extern
| | |-ParmVarDecl 0x7fe8b2000200 <col:20> col:25 'float'
| | |-ConstAttr 0x7fe8b2000330 <col:14> Implicit
| | `-NoThrowAttr 0x7fe8b2000378 <col:14> Implicit
| |-FunctionDecl 0x7fe8b2000430 <line:331:1, col:26> col:15 referenced atan 'double (double)' extern
| | |-ParmVarDecl 0x7fe8b20003a0 <col:20> col:26 'double'
| | |-ConstAttr 0x7fe8b20004d0 <col:15> Implicit
| | `-NoThrowAttr 0x7fe8b2000518 <col:15> Implicit
| |-FunctionDecl 0x7fe8b20005d0 <line:332:1, col:37> col:20 used atanl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fe8b2000540 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fe8b2000670 <col:20> Implicit
| | `-NoThrowAttr 0x7fe8b20006b8 <col:20> Implicit
| |-FunctionDecl 0x7fe8b2000838 <line:334:1, col:33> col:14 used atan2f 'float (float, float)' extern
| | |-ParmVarDecl 0x7fe8b20006e0 <col:21> col:26 'float'
| | |-ParmVarDecl 0x7fe8b2000758 <col:28> col:33 'float'
| | |-ConstAttr 0x7fe8b2000920 <col:14> Implicit
| | `-NoThrowAttr 0x7fe8b2000968 <col:14> Implicit
| |-FunctionDecl 0x7fe8b2000ae8 <line:335:1, col:35> col:15 atan2 'double (double, double)' extern
| | |-ParmVarDecl 0x7fe8b2000990 <col:21> col:27 'double'
| | |-ParmVarDecl 0x7fe8b2000a08 <col:29> col:35 'double'
| | |-ConstAttr 0x7fe8b2000bd0 <col:15> Implicit
| | `-NoThrowAttr 0x7fe8b2000c18 <col:15> Implicit
| |-FunctionDecl 0x7fe8b2000d98 <line:336:1, col:51> col:20 used atan2l 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fe8b2000c40 <col:27, col:32> col:38 'long double'
| | |-ParmVarDecl 0x7fe8b2000cb8 <col:40, col:45> col:51 'long double'
| | |-ConstAttr 0x7fe8b2000e80 <col:20> Implicit
| | `-NoThrowAttr 0x7fe8b2000ec8 <col:20> Implicit
| |-FunctionDecl 0x7fe8b2001800 <line:338:1, col:24> col:14 used cosf 'float (float)' extern
| | |-ParmVarDecl 0x7fe8b2000ef0 <col:19> col:24 'float'
| | |-ConstAttr 0x7fe8b20018a0 <col:14> Implicit
| | `-NoThrowAttr 0x7fe8b20018e8 <col:14> Implicit
| |-FunctionDecl 0x7fe8b20019a0 <line:339:1, col:25> col:15 referenced cos 'double (double)' extern
| | |-ParmVarDecl 0x7fe8b2001910 <col:19> col:25 'double'
| | |-ConstAttr 0x7fe8b2001a40 <col:15> Implicit
| | `-NoThrowAttr 0x7fe8b2001a88 <col:15> Implicit
| |-FunctionDecl 0x7fe8b2001b40 <line:340:1, col:36> col:20 used cosl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fe8b2001ab0 <col:25, col:30> col:36 'long double'
| | |-ConstAttr 0x7fe8b2001be0 <col:20> Implicit
| | `-NoThrowAttr 0x7fe8b2001c28 <col:20> Implicit
| |-FunctionDecl 0x7fe8b2001ce0 <line:342:1, col:24> col:14 used sinf 'float (float)' extern
| | |-ParmVarDecl 0x7fe8b2001c50 <col:19> col:24 'float'
| | |-ConstAttr 0x7fe8b2001d80 <col:14> Implicit
| | `-NoThrowAttr 0x7fe8b2001dc8 <col:14> Implicit
| |-FunctionDecl 0x7fe8b2001e80 <line:343:1, col:25> col:15 referenced sin 'double (double)' extern
| | |-ParmVarDecl 0x7fe8b2001df0 <col:19> col:25 'double'
| | |-ConstAttr 0x7fe8b2001f20 <col:15> Implicit
| | `-NoThrowAttr 0x7fe8b2001f68 <col:15> Implicit
| |-FunctionDecl 0x7fe8b2002020 <line:344:1, col:36> col:20 used sinl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fe8b2001f90 <col:25, col:30> col:36 'long double'
| | |-ConstAttr 0x7fe8b20020c0 <col:20> Implicit
| | `-NoThrowAttr 0x7fe8b2002108 <col:20> Implicit
| |-FunctionDecl 0x7fe8b20021c0 <line:346:1, col:24> col:14 used tanf 'float (float)' extern
| | |-ParmVarDecl 0x7fe8b2002130 <col:19> col:24 'float'
| | |-ConstAttr 0x7fe8b2002260 <col:14> Implicit
| | `-NoThrowAttr 0x7fe8b20022a8 <col:14> Implicit
| |-FunctionDecl 0x7fe8b2002360 <line:347:1, col:25> col:15 referenced tan 'double (double)' extern
| | |-ParmVarDecl 0x7fe8b20022d0 <col:19> col:25 'double'
| | |-ConstAttr 0x7fe8b2002400 <col:15> Implicit
| | `-NoThrowAttr 0x7fe8b2002448 <col:15> Implicit
| |-FunctionDecl 0x7fe8b2002500 <line:348:1, col:36> col:20 used tanl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fe8b2002470 <col:25, col:30> col:36 'long double'
| | |-ConstAttr 0x7fe8b20025a0 <col:20> Implicit
| | `-NoThrowAttr 0x7fe8b20025e8 <col:20> Implicit
| |-FunctionDecl 0x7fe8b20026a0 <line:350:1, col:26> col:14 used acoshf 'float (float)' extern
| | |-ParmVarDecl 0x7fe8b2002610 <col:21> col:26 'float'
| | |-ConstAttr 0x7fe8b2002740 <col:14> Implicit
| | `-NoThrowAttr 0x7fe8b2002788 <col:14> Implicit
| |-FunctionDecl 0x7fe8b2003090 <line:351:1, col:27> col:15 referenced acosh 'double (double)' extern
| | |-ParmVarDecl 0x7fe8b2003000 <col:21> col:27 'double'
| | |-ConstAttr 0x7fe8b2003130 <col:15> Implicit
| | `-NoThrowAttr 0x7fe8b2003178 <col:15> Implicit
| |-FunctionDecl 0x7fe8b2003230 <line:352:1, col:38> col:20 used acoshl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fe8b20031a0 <col:27, col:32> col:38 'long double'
| | |-ConstAttr 0x7fe8b20032d0 <col:20> Implicit
| | `-NoThrowAttr 0x7fe8b2003318 <col:20> Implicit
| |-FunctionDecl 0x7fe8b20033d0 <line:354:1, col:26> col:14 used asinhf 'float (float)' extern
| | |-ParmVarDecl 0x7fe8b2003340 <col:21> col:26 'float'
| | |-ConstAttr 0x7fe8b2003470 <col:14> Implicit
| | `-NoThrowAttr 0x7fe8b20034b8 <col:14> Implicit
| |-FunctionDecl 0x7fe8b2003570 <line:355:1, col:27> col:15 referenced asinh 'double (double)' extern
| | |-ParmVarDecl 0x7fe8b20034e0 <col:21> col:27 'double'
| | |-ConstAttr 0x7fe8b2003610 <col:15> Implicit
| | `-NoThrowAttr 0x7fe8b2003658 <col:15> Implicit
| |-FunctionDecl 0x7fe8b2003710 <line:356:1, col:38> col:20 used asinhl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fe8b2003680 <col:27, col:32> col:38 'long double'
| | |-ConstAttr 0x7fe8b20037b0 <col:20> Implicit
| | `-NoThrowAttr 0x7fe8b20037f8 <col:20> Implicit
| |-FunctionDecl 0x7fe8b20038b0 <line:358:1, col:26> col:14 used atanhf 'float (float)' extern
| | |-ParmVarDecl 0x7fe8b2003820 <col:21> col:26 'float'
| | |-ConstAttr 0x7fe8b2003950 <col:14> Implicit
| | `-NoThrowAttr 0x7fe8b2003998 <col:14> Implicit
| |-FunctionDecl 0x7fe8b2003a50 <line:359:1, col:27> col:15 referenced atanh 'double (double)' extern
| | |-ParmVarDecl 0x7fe8b20039c0 <col:21> col:27 'double'
| | |-ConstAttr 0x7fe8b2003af0 <col:15> Implicit
| | `-NoThrowAttr 0x7fe8b2003b38 <col:15> Implicit
| |-FunctionDecl 0x7fe8b2003bf0 <line:360:1, col:38> col:20 used atanhl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fe8b2003b60 <col:27, col:32> col:38 'long double'
| | |-ConstAttr 0x7fe8b2003c90 <col:20> Implicit
| | `-NoThrowAttr 0x7fe8b2003cd8 <col:20> Implicit
| |-FunctionDecl 0x7fe8b2003d90 <line:362:1, col:25> col:14 used coshf 'float (float)' extern
| | |-ParmVarDecl 0x7fe8b2003d00 <col:20> col:25 'float'
| | |-ConstAttr 0x7fe8b2003e30 <col:14> Implicit
| | `-NoThrowAttr 0x7fe8b2003e78 <col:14> Implicit
| |-FunctionDecl 0x7fe8b2003f30 <line:363:1, col:26> col:15 referenced cosh 'double (double)' extern
| | |-ParmVarDecl 0x7fe8b2003ea0 <col:20> col:26 'double'
| | |-ConstAttr 0x7fe8b2003fd0 <col:15> Implicit
| | `-NoThrowAttr 0x7fe8b2004838 <col:15> Implicit
| |-FunctionDecl 0x7fe8b20048f0 <line:364:1, col:37> col:20 used coshl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fe8b2004860 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fe8b2004990 <col:20> Implicit
| | `-NoThrowAttr 0x7fe8b20049d8 <col:20> Implicit
| |-FunctionDecl 0x7fe8b2004a90 <line:366:1, col:25> col:14 used sinhf 'float (float)' extern
| | |-ParmVarDecl 0x7fe8b2004a00 <col:20> col:25 'float'
| | |-ConstAttr 0x7fe8b2004b30 <col:14> Implicit
| | `-NoThrowAttr 0x7fe8b2004b78 <col:14> Implicit
| |-FunctionDecl 0x7fe8b2004c30 <line:367:1, col:26> col:15 referenced sinh 'double (double)' extern
| | |-ParmVarDecl 0x7fe8b2004ba0 <col:20> col:26 'double'
| | |-ConstAttr 0x7fe8b2004cd0 <col:15> Implicit
| | `-NoThrowAttr 0x7fe8b2004d18 <col:15> Implicit
| |-FunctionDecl 0x7fe8b2004dd0 <line:368:1, col:37> col:20 used sinhl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fe8b2004d40 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fe8b2004e70 <col:20> Implicit
| | `-NoThrowAttr 0x7fe8b2004eb8 <col:20> Implicit
| |-FunctionDecl 0x7fe8b2004f70 <line:370:1, col:25> col:14 used tanhf 'float (float)' extern
| | |-ParmVarDecl 0x7fe8b2004ee0 <col:20> col:25 'float'
| | |-ConstAttr 0x7fe8b2005010 <col:14> Implicit
| | `-NoThrowAttr 0x7fe8b2005058 <col:14> Implicit
| |-FunctionDecl 0x7fe8b2005110 <line:371:1, col:26> col:15 referenced tanh 'double (double)' extern
| | |-ParmVarDecl 0x7fe8b2005080 <col:20> col:26 'double'
| | |-ConstAttr 0x7fe8b20051b0 <col:15> Implicit
| | `-NoThrowAttr 0x7fe8b20051f8 <col:15> Implicit
| |-FunctionDecl 0x7fe8b20052b0 <line:372:1, col:37> col:20 used tanhl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fe8b2005220 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fe8b2005350 <col:20> Implicit
| | `-NoThrowAttr 0x7fe8b2005398 <col:20> Implicit
| |-FunctionDecl 0x7fe8b2005450 <line:374:1, col:24> col:14 used expf 'float (float)' extern
| | |-ParmVarDecl 0x7fe8b20053c0 <col:19> col:24 'float'
| | |-ConstAttr 0x7fe8b20054f0 <col:14> Implicit
| | `-NoThrowAttr 0x7fe8b2005538 <col:14> Implicit
| |-FunctionDecl 0x7fe8b20055f0 <line:375:1, col:25> col:15 referenced exp 'double (double)' extern
| | |-ParmVarDecl 0x7fe8b2005560 <col:19> col:25 'double'
| | |-ConstAttr 0x7fe8b2005690 <col:15> Implicit
| | `-NoThrowAttr 0x7fe8b20056d8 <col:15> Implicit
| |-FunctionDecl 0x7fe8b2005800 <line:376:1, col:36> col:20 used expl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fe8b2005700 <col:25, col:30> col:36 'long double'
| | |-ConstAttr 0x7fe8b20058a0 <col:20> Implicit
| | `-NoThrowAttr 0x7fe8b20058e8 <col:20> Implicit
| |-FunctionDecl 0x7fe8b20059a0 <line:378:1, col:25> col:14 used exp2f 'float (float)' extern
| | |-ParmVarDecl 0x7fe8b2005910 <col:20> col:25 'float'
| | |-ConstAttr 0x7fe8b2005a40 <col:14> Implicit
| | `-NoThrowAttr 0x7fe8b2005a88 <col:14> Implicit
| |-FunctionDecl 0x7fe8b2005b40 <line:379:1, col:26> col:15 referenced exp2 'double (double)' extern
| | |-ParmVarDecl 0x7fe8b2005ab0 <col:20> col:26 'double'
| | |-ConstAttr 0x7fe8b2005be0 <col:15> Implicit
| | `-NoThrowAttr 0x7fe8b2005c28 <col:15> Implicit
| |-FunctionDecl 0x7fe8b2005ce0 <line:380:1, col:37> col:20 used exp2l 'long double (long double)' extern
| | |-ParmVarDecl 0x7fe8b2005c50 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fe8b2005d80 <col:20> Implicit
| | `-NoThrowAttr 0x7fe8b2005dc8 <col:20> Implicit
| |-FunctionDecl 0x7fe8b2005e80 <line:382:1, col:26> col:14 used expm1f 'float (float)' extern
| | |-ParmVarDecl 0x7fe8b2005df0 <col:21> col:26 'float'
| | |-ConstAttr 0x7fe8b2005f20 <col:14> Implicit
| | `-NoThrowAttr 0x7fe8b2005f68 <col:14> Implicit
| |-FunctionDecl 0x7fe8b2006020 <line:383:1, col:27> col:15 referenced expm1 'double (double)' extern
| | |-ParmVarDecl 0x7fe8b2005f90 <col:21> col:27 'double'
| | |-ConstAttr 0x7fe8b20060c0 <col:15> Implicit
| | `-NoThrowAttr 0x7fe8b2006108 <col:15> Implicit
| |-FunctionDecl 0x7fe8b20061c0 <line:384:1, col:38> col:20 used expm1l 'long double (long double)' extern
| | |-ParmVarDecl 0x7fe8b2006130 <col:27, col:32> col:38 'long double'
| | |-ConstAttr 0x7fe8b2006260 <col:20> Implicit
| | `-NoThrowAttr 0x7fe8b20062a8 <col:20> Implicit
| |-FunctionDecl 0x7fe8b2006360 <line:386:1, col:24> col:14 used logf 'float (float)' extern
| | |-ParmVarDecl 0x7fe8b20062d0 <col:19> col:24 'float'
| | |-ConstAttr 0x7fe8b2006400 <col:14> Implicit
| | `-NoThrowAttr 0x7fe8b2006448 <col:14> Implicit
| |-FunctionDecl 0x7fe8b2006500 <line:387:1, col:25> col:15 referenced log 'double (double)' extern
| | |-ParmVarDecl 0x7fe8b2006470 <col:19> col:25 'double'
| | |-ConstAttr 0x7fe8b20065a0 <col:15> Implicit
| | `-NoThrowAttr 0x7fe8b20065e8 <col:15> Implicit
| |-FunctionDecl 0x7fe8b20066a0 <line:388:1, col:36> col:20 used logl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fe8b2006610 <col:25, col:30> col:36 'long double'
| | |-ConstAttr 0x7fe8b2006740 <col:20> Implicit
| | `-NoThrowAttr 0x7fe8b2006788 <col:20> Implicit
| |-FunctionDecl 0x7fe8b2006890 <line:390:1, col:26> col:14 used log10f 'float (float)' extern
| | |-ParmVarDecl 0x7fe8b2006800 <col:21> col:26 'float'
| | |-ConstAttr 0x7fe8b2006930 <col:14> Implicit
| | `-NoThrowAttr 0x7fe8b2006978 <col:14> Implicit
| |-FunctionDecl 0x7fe8b2006a30 <line:391:1, col:27> col:15 referenced log10 'double (double)' extern
| | |-ParmVarDecl 0x7fe8b20069a0 <col:21> col:27 'double'
| | |-ConstAttr 0x7fe8b2006ad0 <col:15> Implicit
| | `-NoThrowAttr 0x7fe8b2006b18 <col:15> Implicit
| |-FunctionDecl 0x7fe8b2006bd0 <line:392:1, col:38> col:20 used log10l 'long double (long double)' extern
| | |-ParmVarDecl 0x7fe8b2006b40 <col:27, col:32> col:38 'long double'
| | |-ConstAttr 0x7fe8b2006c70 <col:20> Implicit
| | `-NoThrowAttr 0x7fe8b2006cb8 <col:20> Implicit
| |-FunctionDecl 0x7fe8b2006d70 <line:394:1, col:25> col:14 used log2f 'float (float)' extern
| | |-ParmVarDecl 0x7fe8b2006ce0 <col:20> col:25 'float'
| | |-ConstAttr 0x7fe8b2006e10 <col:14> Implicit
| | `-NoThrowAttr 0x7fe8b2006e58 <col:14> Implicit
| |-FunctionDecl 0x7fe8b2006f10 <line:395:1, col:26> col:15 referenced log2 'double (double)' extern
| | |-ParmVarDecl 0x7fe8b2006e80 <col:20> col:26 'double'
| | |-ConstAttr 0x7fe8b2006fb0 <col:15> Implicit
| | `-NoThrowAttr 0x7fe8b2006ff8 <col:15> Implicit
| |-FunctionDecl 0x7fe8b20070b0 <line:396:1, col:37> col:20 used log2l 'long double (long double)' extern
| | |-ParmVarDecl 0x7fe8b2007020 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fe8b2007150 <col:20> Implicit
| | `-NoThrowAttr 0x7fe8b2007198 <col:20> Implicit
| |-FunctionDecl 0x7fe8b2007250 <line:398:1, col:26> col:14 used log1pf 'float (float)' extern
| | |-ParmVarDecl 0x7fe8b20071c0 <col:21> col:26 'float'
| | |-ConstAttr 0x7fe8b20072f0 <col:14> Implicit
| | `-NoThrowAttr 0x7fe8b2007338 <col:14> Implicit
| |-FunctionDecl 0x7fe8b20073f0 <line:399:1, col:27> col:15 referenced log1p 'double (double)' extern
| | |-ParmVarDecl 0x7fe8b2007360 <col:21> col:27 'double'
| | |-ConstAttr 0x7fe8b2007490 <col:15> Implicit
| | `-NoThrowAttr 0x7fe8b20074d8 <col:15> Implicit
| |-FunctionDecl 0x7fe8b2007590 <line:400:1, col:38> col:20 used log1pl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fe8b2007500 <col:27, col:32> col:38 'long double'
| | |-ConstAttr 0x7fe8b2007630 <col:20> Implicit
| | `-NoThrowAttr 0x7fe8b2007678 <col:20> Implicit
| |-FunctionDecl 0x7fe8b2007730 <line:402:1, col:25> col:14 used logbf 'float (float)' extern
| | |-ParmVarDecl 0x7fe8b20076a0 <col:20> col:25 'float'
| | |-ConstAttr 0x7fe8b20077d0 <col:14> Implicit
| | `-NoThrowAttr 0x7fe8b2008838 <col:14> Implicit
| |-FunctionDecl 0x7fe8b20088f0 <line:403:1, col:26> col:15 referenced logb 'double (double)' extern
| | |-ParmVarDecl 0x7fe8b2008860 <col:20> col:26 'double'
| | |-ConstAttr 0x7fe8b2008990 <col:15> Implicit
| | `-NoThrowAttr 0x7fe8b20089d8 <col:15> Implicit
| |-FunctionDecl 0x7fe8b2008a90 <line:404:1, col:37> col:20 used logbl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fe8b2008a00 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fe8b2008b30 <col:20> Implicit
| | `-NoThrowAttr 0x7fe8b2008b78 <col:20> Implicit
| |-FunctionDecl 0x7fe8b2008d18 <line:406:1, col:34> col:14 used modff 'float (float, float *)' extern
| | |-ParmVarDecl 0x7fe8b2008ba0 <col:20> col:25 'float'
| | |-ParmVarDecl 0x7fe8b2008c40 <col:27, col:33> col:34 'float *'
| | `-NoThrowAttr 0x7fe8b2008e00 <col:14> Implicit
| |-FunctionDecl 0x7fe8b2008fd8 <line:407:1, col:36> col:15 modf 'double (double, double *)' extern
| | |-ParmVarDecl 0x7fe8b2008e60 <col:20> col:26 'double'
| | |-ParmVarDecl 0x7fe8b2008f00 <col:28, col:35> col:36 'double *'
| | `-NoThrowAttr 0x7fe8b20090c0 <col:15> Implicit
| |-FunctionDecl 0x7fe8b2009298 <line:408:1, col:52> col:20 used modfl 'long double (long double, long double *)' extern
| | |-ParmVarDecl 0x7fe8b2009120 <col:26, col:31> col:37 'long double'
| | |-ParmVarDecl 0x7fe8b20091c0 <col:39, col:51> col:52 'long double *'
| | `-NoThrowAttr 0x7fe8b2009380 <col:20> Implicit
| |-FunctionDecl 0x7fe8b2009538 <line:410:1, col:31> col:14 used ldexpf 'float (float, int)' extern
| | |-ParmVarDecl 0x7fe8b20093e0 <col:21> col:26 'float'
| | |-ParmVarDecl 0x7fe8b2009458 <col:28> col:31 'int'
| | |-ConstAttr 0x7fe8b2009620 <col:14> Implicit
| | `-NoThrowAttr 0x7fe8b2009668 <col:14> Implicit
| |-FunctionDecl 0x7fe8b200a800 <line:411:1, col:32> col:15 referenced ldexp 'double (double, int)' extern
| | |-ParmVarDecl 0x7fe8b2009690 <col:21> col:27 'double'
| | |-ParmVarDecl 0x7fe8b2009708 <col:29> col:32 'int'
| | |-ConstAttr 0x7fe8b200a8f0 <col:15> Implicit
| | `-NoThrowAttr 0x7fe8b200a938 <col:15> Implicit
| |-FunctionDecl 0x7fe8b200aab8 <line:412:1, col:43> col:20 used ldexpl 'long double (long double, int)' extern
| | |-ParmVarDecl 0x7fe8b200a960 <col:27, col:32> col:38 'long double'
| | |-ParmVarDecl 0x7fe8b200a9d8 <col:40> col:43 'int'
| | |-ConstAttr 0x7fe8b200aba0 <col:20> Implicit
| | `-NoThrowAttr 0x7fe8b200abe8 <col:20> Implicit
| |-FunctionDecl 0x7fe8b200ad88 <line:414:1, col:33> col:14 used frexpf 'float (float, int *)' extern
| | |-ParmVarDecl 0x7fe8b200ac10 <col:21> col:26 'float'
| | |-ParmVarDecl 0x7fe8b200acb0 <col:28, col:32> col:33 'int *'
| | `-NoThrowAttr 0x7fe8b200ae70 <col:14> Implicit
| |-FunctionDecl 0x7fe8b200b028 <line:415:1, col:34> col:15 referenced frexp 'double (double, int *)' extern
| | |-ParmVarDecl 0x7fe8b200aed0 <col:21> col:27 'double'
| | |-ParmVarDecl 0x7fe8b200af48 <col:29, col:33> col:34 'int *'
| | `-NoThrowAttr 0x7fe8b200b110 <col:15> Implicit
| |-FunctionDecl 0x7fe8b200b2c8 <line:416:1, col:45> col:20 used frexpl 'long double (long double, int *)' extern
| | |-ParmVarDecl 0x7fe8b200b170 <col:27, col:32> col:38 'long double'
| | |-ParmVarDecl 0x7fe8b200b1e8 <col:40, col:44> col:45 'int *'
| | `-NoThrowAttr 0x7fe8b200b3b0 <col:20> Implicit
| |-FunctionDecl 0x7fe8b200b4a0 <line:418:1, col:24> col:12 used ilogbf 'int (float)' extern
| | |-ParmVarDecl 0x7fe8b200b410 <col:19> col:24 'float'
| | |-ConstAttr 0x7fe8b200b578 <col:12> Implicit
| | `-NoThrowAttr 0x7fe8b200b5c0 <col:12> Implicit
| |-FunctionDecl 0x7fe8b200b678 <line:419:1, col:24> col:12 referenced ilogb 'int (double)' extern
| | |-ParmVarDecl 0x7fe8b200b5e8 <col:18> col:24 'double'
| | |-ConstAttr 0x7fe8b200b758 <col:12> Implicit
| | `-NoThrowAttr 0x7fe8b200b7a0 <col:12> Implicit
| |-FunctionDecl 0x7fe8b200c890 <line:420:1, col:30> col:12 used ilogbl 'int (long double)' extern
| | |-ParmVarDecl 0x7fe8b200c800 <col:19, col:24> col:30 'long double'
| | |-ConstAttr 0x7fe8b200c968 <col:12> Implicit
| | `-NoThrowAttr 0x7fe8b200c9b0 <col:12> Implicit
| |-FunctionDecl 0x7fe8b200cae8 <line:422:1, col:32> col:14 used scalbnf 'float (float, int)' extern
| | |-ParmVarDecl 0x7fe8b200c9d8 <col:22> col:27 'float'
| | |-ParmVarDecl 0x7fe8b200ca50 <col:29> col:32 'int'
| | |-ConstAttr 0x7fe8b200cb90 <col:14> Implicit
| | `-NoThrowAttr 0x7fe8b200cbd8 <col:14> Implicit
| |-FunctionDecl 0x7fe8b200cd10 <line:423:1, col:33> col:15 referenced scalbn 'double (double, int)' extern
| | |-ParmVarDecl 0x7fe8b200cc00 <col:22> col:28 'double'
| | |-ParmVarDecl 0x7fe8b200cc78 <col:30> col:33 'int'
| | |-ConstAttr 0x7fe8b200cdb8 <col:15> Implicit
| | `-NoThrowAttr 0x7fe8b200ce00 <col:15> Implicit
| |-FunctionDecl 0x7fe8b200cf38 <line:424:1, col:44> col:20 used scalbnl 'long double (long double, int)' extern
| | |-ParmVarDecl 0x7fe8b200ce28 <col:28, col:33> col:39 'long double'
| | |-ParmVarDecl 0x7fe8b200cea0 <col:41> col:44 'int'
| | |-ConstAttr 0x7fe8b200cfe0 <col:20> Implicit
| | `-NoThrowAttr 0x7fe8b200d028 <col:20> Implicit
| |-FunctionDecl 0x7fe8b200d1a8 <line:426:1, col:38> col:14 used scalblnf 'float (float, long)' extern
| | |-ParmVarDecl 0x7fe8b200d050 <col:23> col:28 'float'
| | |-ParmVarDecl 0x7fe8b200d0c8 <col:30, col:35> col:38 'long'
| | |-ConstAttr 0x7fe8b200d290 <col:14> Implicit
| | `-NoThrowAttr 0x7fe8b200d2d8 <col:14> Implicit
| |-FunctionDecl 0x7fe8b200d458 <line:427:1, col:39> col:15 referenced scalbln 'double (double, long)' extern
| | |-ParmVarDecl 0x7fe8b200d300 <col:23> col:29 'double'
| | |-ParmVarDecl 0x7fe8b200d378 <col:31, col:36> col:39 'long'
| | |-ConstAttr 0x7fe8b200d540 <col:15> Implicit
| | `-NoThrowAttr 0x7fe8b200d588 <col:15> Implicit
| |-FunctionDecl 0x7fe8b200d708 <line:428:1, col:50> col:20 used scalblnl 'long double (long double, long)' extern
| | |-ParmVarDecl 0x7fe8b200d5b0 <col:29, col:34> col:40 'long double'
| | |-ParmVarDecl 0x7fe8b200d628 <col:42, col:47> col:50 'long'
| | |-ConstAttr 0x7fe8b200d7f0 <col:20> Implicit
| | `-NoThrowAttr 0x7fe8b200d838 <col:20> Implicit
| |-FunctionDecl 0x7fe8b200d8f0 <line:430:1, col:25> col:14 used fabsf 'float (float)' extern
| | |-ParmVarDecl 0x7fe8b200d860 <col:20> col:25 'float'
| | |-NoThrowAttr 0x7fe8b200d990 <col:14> Implicit
| | `-ConstAttr 0x7fe8b200d9d8 <col:14> Implicit
| |-FunctionDecl 0x7fe8b200da90 <line:431:1, col:26> col:15 used fabs 'double (double)' extern
| | |-ParmVarDecl 0x7fe8b200da00 <col:20> col:26 'double'
| | |-NoThrowAttr 0x7fe8b200db30 <col:15> Implicit
| | `-ConstAttr 0x7fe8b200db78 <col:15> Implicit
| |-FunctionDecl 0x7fe8b200dc30 <line:432:1, col:37> col:20 used fabsl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fe8b200dba0 <col:26, col:31> col:37 'long double'
| | |-NoThrowAttr 0x7fe8b200dcd0 <col:20> Implicit
| | `-ConstAttr 0x7fe8b200dd18 <col:20> Implicit
| |-FunctionDecl 0x7fe8b200ddd0 <line:434:1, col:25> col:14 used cbrtf 'float (float)' extern
| | |-ParmVarDecl 0x7fe8b200dd40 <col:20> col:25 'float'
| | |-ConstAttr 0x7fe8b200de70 <col:14> Implicit
| | `-NoThrowAttr 0x7fe8b200deb8 <col:14> Implicit
| |-FunctionDecl 0x7fe8b200df70 <line:435:1, col:26> col:15 referenced cbrt 'double (double)' extern
| | |-ParmVarDecl 0x7fe8b200dee0 <col:20> col:26 'double'
| | |-ConstAttr 0x7fe8b200e010 <col:15> Implicit
| | `-NoThrowAttr 0x7fe8b200e058 <col:15> Implicit
| |-FunctionDecl 0x7fe8b200e110 <line:436:1, col:37> col:20 used cbrtl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fe8b200e080 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fe8b200e1b0 <col:20> Implicit
| | `-NoThrowAttr 0x7fe8b200e1f8 <col:20> Implicit
| |-FunctionDecl 0x7fe8b200e330 <line:438:1, col:33> col:14 used hypotf 'float (float, float)' extern
| | |-ParmVarDecl 0x7fe8b200e220 <col:21> col:26 'float'
| | |-ParmVarDecl 0x7fe8b200e298 <col:28> col:33 'float'
| | |-ConstAttr 0x7fe8b200e3d8 <col:14> Implicit
| | `-NoThrowAttr 0x7fe8b200e420 <col:14> Implicit
| |-FunctionDecl 0x7fe8b200e558 <line:439:1, col:35> col:15 hypot 'double (double, double)' extern
| | |-ParmVarDecl 0x7fe8b200e448 <col:21> col:27 'double'
| | |-ParmVarDecl 0x7fe8b200e4c0 <col:29> col:35 'double'
| | |-ConstAttr 0x7fe8b200e600 <col:15> Implicit
| | `-NoThrowAttr 0x7fe8b200e648 <col:15> Implicit
| |-FunctionDecl 0x7fe8b200e800 <line:440:1, col:51> col:20 used hypotl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fe8b200e670 <col:27, col:32> col:38 'long double'
| | |-ParmVarDecl 0x7fe8b200e6e8 <col:40, col:45> col:51 'long double'
| | |-ConstAttr 0x7fe8b200e8a8 <col:20> Implicit
| | `-NoThrowAttr 0x7fe8b200e8f0 <col:20> Implicit
| |-FunctionDecl 0x7fe8b200ea28 <line:442:1, col:31> col:14 used powf 'float (float, float)' extern
| | |-ParmVarDecl 0x7fe8b200e918 <col:19> col:24 'float'
| | |-ParmVarDecl 0x7fe8b200e990 <col:26> col:31 'float'
| | |-ConstAttr 0x7fe8b200ead0 <col:14> Implicit
| | `-NoThrowAttr 0x7fe8b200eb18 <col:14> Implicit
| |-FunctionDecl 0x7fe8b200ec50 <line:443:1, col:33> col:15 pow 'double (double, double)' extern
| | |-ParmVarDecl 0x7fe8b200eb40 <col:19> col:25 'double'
| | |-ParmVarDecl 0x7fe8b200ebb8 <col:27> col:33 'double'
| | |-ConstAttr 0x7fe8b200ecf8 <col:15> Implicit
| | `-NoThrowAttr 0x7fe8b200ed40 <col:15> Implicit
| |-FunctionDecl 0x7fe8b200ee78 <line:444:1, col:49> col:20 used powl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fe8b200ed68 <col:25, col:30> col:36 'long double'
| | |-ParmVarDecl 0x7fe8b200ede0 <col:38, col:43> col:49 'long double'
| | |-ConstAttr 0x7fe8b200ef20 <col:20> Implicit
| | `-NoThrowAttr 0x7fe8b200ef68 <col:20> Implicit
| |-FunctionDecl 0x7fe8b200f020 <line:446:1, col:25> col:14 used sqrtf 'float (float)' extern
| | |-ParmVarDecl 0x7fe8b200ef90 <col:20> col:25 'float'
| | |-ConstAttr 0x7fe8b200f0c0 <col:14> Implicit
| | `-NoThrowAttr 0x7fe8b200f108 <col:14> Implicit
| |-FunctionDecl 0x7fe8b200f1c0 <line:447:1, col:26> col:15 used sqrt 'double (double)' extern
| | |-ParmVarDecl 0x7fe8b200f130 <col:20> col:26 'double'
| | |-ConstAttr 0x7fe8b200f260 <col:15> Implicit
| | `-NoThrowAttr 0x7fe8b200f2a8 <col:15> Implicit
| |-FunctionDecl 0x7fe8b200f360 <line:448:1, col:37> col:20 used sqrtl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fe8b200f2d0 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fe8b200f400 <col:20> Implicit
| | `-NoThrowAttr 0x7fe8b200f448 <col:20> Implicit
| |-FunctionDecl 0x7fe8b200f500 <line:450:1, col:24> col:14 used erff 'float (float)' extern
| | |-ParmVarDecl 0x7fe8b200f470 <col:19> col:24 'float'
| | |-ConstAttr 0x7fe8b200f5a0 <col:14> Implicit
| | `-NoThrowAttr 0x7fe8b200f5e8 <col:14> Implicit
| |-FunctionDecl 0x7fe8b200f6a0 <line:451:1, col:25> col:15 referenced erf 'double (double)' extern
| | |-ParmVarDecl 0x7fe8b200f610 <col:19> col:25 'double'
| | |-ConstAttr 0x7fe8b200f740 <col:15> Implicit
| | `-NoThrowAttr 0x7fe8b200f788 <col:15> Implicit
| |-FunctionDecl 0x7fe8b200f890 <line:452:1, col:36> col:20 used erfl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fe8b200f800 <col:25, col:30> col:36 'long double'
| | |-ConstAttr 0x7fe8b200f930 <col:20> Implicit
| | `-NoThrowAttr 0x7fe8b200f978 <col:20> Implicit
| |-FunctionDecl 0x7fe8b200fa30 <line:454:1, col:25> col:14 used erfcf 'float (float)' extern
| | |-ParmVarDecl 0x7fe8b200f9a0 <col:20> col:25 'float'
| | |-ConstAttr 0x7fe8b200fad0 <col:14> Implicit
| | `-NoThrowAttr 0x7fe8b200fb18 <col:14> Implicit
| |-FunctionDecl 0x7fe8b200fbd0 <line:455:1, col:26> col:15 referenced erfc 'double (double)' extern
| | |-ParmVarDecl 0x7fe8b200fb40 <col:20> col:26 'double'
| | |-ConstAttr 0x7fe8b200fc70 <col:15> Implicit
| | `-NoThrowAttr 0x7fe8b200fcb8 <col:15> Implicit
| |-FunctionDecl 0x7fe8b200fd70 <line:456:1, col:37> col:20 used erfcl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fe8b200fce0 <col:26, col:31> col:37 'long double'
| | |-ConstAttr 0x7fe8b200fe10 <col:20> Implicit
| | `-NoThrowAttr 0x7fe8b200fe58 <col:20> Implicit
| |-FunctionDecl 0x7fe8b200ff10 <line:461:1, col:27> col:14 used lgammaf 'float (float)' extern
| | |-ParmVarDecl 0x7fe8b200fe80 <col:22> col:27 'float'
| | `-NoThrowAttr 0x7fe8b200ffb0 <col:14> Implicit
| |-FunctionDecl 0x7fe8b20100a0 <line:462:1, col:28> col:15 referenced lgamma 'double (double)' extern
| | |-ParmVarDecl 0x7fe8b2010010 <col:22> col:28 'double'
| | `-NoThrowAttr 0x7fe8b2010140 <col:15> Implicit
| |-FunctionDecl 0x7fe8b2010230 <line:463:1, col:39> col:20 used lgammal 'long double (long double)' extern
| | |-ParmVarDecl 0x7fe8b20101a0 <col:28, col:33> col:39 'long double'
| | `-NoThrowAttr 0x7fe8b20102d0 <col:20> Implicit
| |-FunctionDecl 0x7fe8b20103c0 <line:465:1, col:27> col:14 used tgammaf 'float (float)' extern
| | |-ParmVarDecl 0x7fe8b2010330 <col:22> col:27 'float'
| | |-ConstAttr 0x7fe8b2010460 <col:14> Implicit
| | `-NoThrowAttr 0x7fe8b20104a8 <col:14> Implicit
| |-FunctionDecl 0x7fe8b2010560 <line:466:1, col:28> col:15 referenced tgamma 'double (double)' extern
| | |-ParmVarDecl 0x7fe8b20104d0 <col:22> col:28 'double'
| | |-ConstAttr 0x7fe8b2010600 <col:15> Implicit
| | `-NoThrowAttr 0x7fe8b2010648 <col:15> Implicit
| |-FunctionDecl 0x7fe8b2010700 <line:467:1, col:39> col:20 used tgammal 'long double (long double)' extern
| | |-ParmVarDecl 0x7fe8b2010670 <col:28, col:33> col:39 'long double'
| | |-ConstAttr 0x7fe8b20107a0 <col:20> Implicit
| | `-NoThrowAttr 0x7fe8b20107e8 <col:20> Implicit
| |-FunctionDecl 0x7fe8b20108a8 <line:469:1, col:25> col:14 used ceilf 'float (float)' extern
| | |-ParmVarDecl 0x7fe8b2010818 <col:20> col:25 'float'
| | |-NoThrowAttr 0x7fe8b2010948 <col:14> Implicit
| | `-ConstAttr 0x7fe8b2010990 <col:14> Implicit
| |-FunctionDecl 0x7fe8b2010a48 <line:470:1, col:26> col:15 referenced ceil 'double (double)' extern
| | |-ParmVarDecl 0x7fe8b20109b8 <col:20> col:26 'double'
| | |-NoThrowAttr 0x7fe8b2010ae8 <col:15> Implicit
| | `-ConstAttr 0x7fe8b2010b30 <col:15> Implicit
| |-FunctionDecl 0x7fe8b2010be8 <line:471:1, col:37> col:20 used ceill 'long double (long double)' extern
| | |-ParmVarDecl 0x7fe8b2010b58 <col:26, col:31> col:37 'long double'
| | |-NoThrowAttr 0x7fe8b2010c88 <col:20> Implicit
| | `-ConstAttr 0x7fe8b2010cd0 <col:20> Implicit
| |-FunctionDecl 0x7fe8b2010d88 <line:473:1, col:26> col:14 used floorf 'float (float)' extern
| | |-ParmVarDecl 0x7fe8b2010cf8 <col:21> col:26 'float'
| | |-NoThrowAttr 0x7fe8b2010e28 <col:14> Implicit
| | `-ConstAttr 0x7fe8b2010e70 <col:14> Implicit
| |-FunctionDecl 0x7fe8b2010f28 <line:474:1, col:27> col:15 referenced floor 'double (double)' extern
| | |-ParmVarDecl 0x7fe8b2010e98 <col:21> col:27 'double'
| | |-NoThrowAttr 0x7fe8b2010fc8 <col:15> Implicit
| | `-ConstAttr 0x7fe8b2011010 <col:15> Implicit
| |-FunctionDecl 0x7fe8b20110c8 <line:475:1, col:38> col:20 used floorl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fe8b2011038 <col:27, col:32> col:38 'long double'
| | |-NoThrowAttr 0x7fe8b2011168 <col:20> Implicit
| | `-ConstAttr 0x7fe8b20111b0 <col:20> Implicit
| |-FunctionDecl 0x7fe8b2011268 <line:477:1, col:30> col:14 used nearbyintf 'float (float)' extern
| | |-ParmVarDecl 0x7fe8b20111d8 <col:25> col:30 'float'
| | |-NoThrowAttr 0x7fe8b2011308 <col:14> Implicit
| | `-ConstAttr 0x7fe8b2011350 <col:14> Implicit
| |-FunctionDecl 0x7fe8b2011408 <line:478:1, col:31> col:15 referenced nearbyint 'double (double)' extern
| | |-ParmVarDecl 0x7fe8b2011378 <col:25> col:31 'double'
| | |-NoThrowAttr 0x7fe8b20114a8 <col:15> Implicit
| | `-ConstAttr 0x7fe8b20114f0 <col:15> Implicit
| |-FunctionDecl 0x7fe8b20115a8 <line:479:1, col:42> col:20 used nearbyintl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fe8b2011518 <col:31, col:36> col:42 'long double'
| | |-NoThrowAttr 0x7fe8b2011648 <col:20> Implicit
| | `-ConstAttr 0x7fe8b2011690 <col:20> Implicit
| |-FunctionDecl 0x7fe8b2011748 <line:481:1, col:25> col:14 used rintf 'float (float)' extern
| | |-ParmVarDecl 0x7fe8b20116b8 <col:20> col:25 'float'
| | |-NoThrowAttr 0x7fe8b20117e8 <col:14> Implicit
| | `-ConstAttr 0x7fe8b2011838 <col:14> Implicit
| |-FunctionDecl 0x7fe8b20118f0 <line:482:1, col:26> col:15 referenced rint 'double (double)' extern
| | |-ParmVarDecl 0x7fe8b2011860 <col:20> col:26 'double'
| | |-NoThrowAttr 0x7fe8b2011990 <col:15> Implicit
| | `-ConstAttr 0x7fe8b20119d8 <col:15> Implicit
| |-FunctionDecl 0x7fe8b2011a90 <line:483:1, col:37> col:20 used rintl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fe8b2011a00 <col:26, col:31> col:37 'long double'
| | |-NoThrowAttr 0x7fe8b2011b30 <col:20> Implicit
| | `-ConstAttr 0x7fe8b2011b78 <col:20> Implicit
| |-FunctionDecl 0x7fe8b2011c68 <line:485:1, col:29> col:17 used lrintf 'long (float)' extern
| | |-ParmVarDecl 0x7fe8b2011ba0 <col:24> col:29 'float'
| | |-ConstAttr 0x7fe8b2011d48 <col:17> Implicit
| | `-NoThrowAttr 0x7fe8b2011d90 <col:17> Implicit
| |-FunctionDecl 0x7fe8b2011e88 <line:486:1, col:29> col:17 referenced lrint 'long (double)' extern
| | |-ParmVarDecl 0x7fe8b2011db8 <col:23> col:29 'double'
| | |-ConstAttr 0x7fe8b2011f68 <col:17> Implicit
| | `-NoThrowAttr 0x7fe8b2011fb0 <col:17> Implicit
| |-FunctionDecl 0x7fe8b20120a8 <line:487:1, col:35> col:17 used lrintl 'long (long double)' extern
| | |-ParmVarDecl 0x7fe8b2011fd8 <col:24, col:29> col:35 'long double'
| | |-ConstAttr 0x7fe8b2012188 <col:17> Implicit
| | `-NoThrowAttr 0x7fe8b20121d0 <col:17> Implicit
| |-FunctionDecl 0x7fe8b2012288 <line:489:1, col:26> col:14 used roundf 'float (float)' extern
| | |-ParmVarDecl 0x7fe8b20121f8 <col:21> col:26 'float'
| | |-NoThrowAttr 0x7fe8b2012328 <col:14> Implicit
| | `-ConstAttr 0x7fe8b2012370 <col:14> Implicit
| |-FunctionDecl 0x7fe8b2012428 <line:490:1, col:27> col:15 referenced round 'double (double)' extern
| | |-ParmVarDecl 0x7fe8b2012398 <col:21> col:27 'double'
| | |-NoThrowAttr 0x7fe8b20124c8 <col:15> Implicit
| | `-ConstAttr 0x7fe8b2012510 <col:15> Implicit
| |-FunctionDecl 0x7fe8b20125c8 <line:491:1, col:38> col:20 used roundl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fe8b2012538 <col:27, col:32> col:38 'long double'
| | |-NoThrowAttr 0x7fe8b2012668 <col:20> Implicit
| | `-ConstAttr 0x7fe8b20126b0 <col:20> Implicit
| |-FunctionDecl 0x7fe8b2012768 <line:493:1, col:30> col:17 used lroundf 'long (float)' extern
| | |-ParmVarDecl 0x7fe8b20126d8 <col:25> col:30 'float'
| | |-ConstAttr 0x7fe8b2012808 <col:17> Implicit
| | `-NoThrowAttr 0x7fe8b2012850 <col:17> Implicit
| |-FunctionDecl 0x7fe8b2012908 <line:494:1, col:30> col:17 referenced lround 'long (double)' extern
| | |-ParmVarDecl 0x7fe8b2012878 <col:24> col:30 'double'
| | |-ConstAttr 0x7fe8b20129a8 <col:17> Implicit
| | `-NoThrowAttr 0x7fe8b20129f0 <col:17> Implicit
| |-FunctionDecl 0x7fe8b2012aa8 <line:495:1, col:36> col:17 used lroundl 'long (long double)' extern
| | |-ParmVarDecl 0x7fe8b2012a18 <col:25, col:30> col:36 'long double'
| | |-ConstAttr 0x7fe8b2012b48 <col:17> Implicit
| | `-NoThrowAttr 0x7fe8b2012b90 <col:17> Implicit
| |-FunctionDecl 0x7fe8b2012c88 <line:500:1, col:35> col:22 used llrintf 'long long (float)' extern
| | |-ParmVarDecl 0x7fe8b2012bb8 <col:30> col:35 'float'
| | |-ConstAttr 0x7fe8b2012d68 <col:22> Implicit
| | `-NoThrowAttr 0x7fe8b2012db0 <col:22> Implicit
| |-FunctionDecl 0x7fe8b2012ea8 <line:501:1, col:35> col:22 referenced llrint 'long long (double)' extern
| | |-ParmVarDecl 0x7fe8b2012dd8 <col:29> col:35 'double'
| | |-ConstAttr 0x7fe8b2012f88 <col:22> Implicit
| | `-NoThrowAttr 0x7fe8b2012fd0 <col:22> Implicit
| |-FunctionDecl 0x7fe8b20130c8 <line:502:1, col:41> col:22 used llrintl 'long long (long double)' extern
| | |-ParmVarDecl 0x7fe8b2012ff8 <col:30, col:35> col:41 'long double'
| | |-ConstAttr 0x7fe8b20131a8 <col:22> Implicit
| | `-NoThrowAttr 0x7fe8b20131f0 <col:22> Implicit
| |-FunctionDecl 0x7fe8b20132a8 <line:504:1, col:36> col:22 used llroundf 'long long (float)' extern
| | |-ParmVarDecl 0x7fe8b2013218 <col:31> col:36 'float'
| | |-ConstAttr 0x7fe8b2013348 <col:22> Implicit
| | `-NoThrowAttr 0x7fe8b2013390 <col:22> Implicit
| |-FunctionDecl 0x7fe8b2013448 <line:505:1, col:36> col:22 referenced llround 'long long (double)' extern
| | |-ParmVarDecl 0x7fe8b20133b8 <col:30> col:36 'double'
| | |-ConstAttr 0x7fe8b20134e8 <col:22> Implicit
| | `-NoThrowAttr 0x7fe8b2013530 <col:22> Implicit
| |-FunctionDecl 0x7fe8b20135e8 <line:506:1, col:42> col:22 used llroundl 'long long (long double)' extern
| | |-ParmVarDecl 0x7fe8b2013558 <col:31, col:36> col:42 'long double'
| | |-ConstAttr 0x7fe8b2013688 <col:22> Implicit
| | `-NoThrowAttr 0x7fe8b20136d0 <col:22> Implicit
| |-FunctionDecl 0x7fe8b2013800 <line:509:1, col:26> col:14 used truncf 'float (float)' extern
| | |-ParmVarDecl 0x7fe8b20136f8 <col:21> col:26 'float'
| | |-NoThrowAttr 0x7fe8b20138a0 <col:14> Implicit
| | `-ConstAttr 0x7fe8b20138e8 <col:14> Implicit
| |-FunctionDecl 0x7fe8b20139a0 <line:510:1, col:27> col:15 referenced trunc 'double (double)' extern
| | |-ParmVarDecl 0x7fe8b2013910 <col:21> col:27 'double'
| | |-NoThrowAttr 0x7fe8b2013a40 <col:15> Implicit
| | `-ConstAttr 0x7fe8b2013a88 <col:15> Implicit
| |-FunctionDecl 0x7fe8b2013b40 <line:511:1, col:38> col:20 used truncl 'long double (long double)' extern
| | |-ParmVarDecl 0x7fe8b2013ab0 <col:27, col:32> col:38 'long double'
| | |-NoThrowAttr 0x7fe8b2013be0 <col:20> Implicit
| | `-ConstAttr 0x7fe8b2013c28 <col:20> Implicit
| |-FunctionDecl 0x7fe8b2013d60 <line:513:1, col:32> col:14 used fmodf 'float (float, float)' extern
| | |-ParmVarDecl 0x7fe8b2013c50 <col:20> col:25 'float'
| | |-ParmVarDecl 0x7fe8b2013cc8 <col:27> col:32 'float'
| | |-ConstAttr 0x7fe8b2013e08 <col:14> Implicit
| | `-NoThrowAttr 0x7fe8b2013e50 <col:14> Implicit
| |-FunctionDecl 0x7fe8b2013f88 <line:514:1, col:34> col:15 fmod 'double (double, double)' extern
| | |-ParmVarDecl 0x7fe8b2013e78 <col:20> col:26 'double'
| | |-ParmVarDecl 0x7fe8b2013ef0 <col:28> col:34 'double'
| | |-ConstAttr 0x7fe8b2014030 <col:15> Implicit
| | `-NoThrowAttr 0x7fe8b2014078 <col:15> Implicit
| |-FunctionDecl 0x7fe8b20141b0 <line:515:1, col:50> col:20 used fmodl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fe8b20140a0 <col:26, col:31> col:37 'long double'
| | |-ParmVarDecl 0x7fe8b2014118 <col:39, col:44> col:50 'long double'
| | |-ConstAttr 0x7fe8b2014258 <col:20> Implicit
| | `-NoThrowAttr 0x7fe8b20142a0 <col:20> Implicit
| |-FunctionDecl 0x7fe8b20143d8 <line:517:1, col:37> col:14 used remainderf 'float (float, float)' extern
| | |-ParmVarDecl 0x7fe8b20142c8 <col:25> col:30 'float'
| | |-ParmVarDecl 0x7fe8b2014340 <col:32> col:37 'float'
| | |-ConstAttr 0x7fe8b2014480 <col:14> Implicit
| | `-NoThrowAttr 0x7fe8b20144c8 <col:14> Implicit
| |-FunctionDecl 0x7fe8b2014600 <line:518:1, col:39> col:15 remainder 'double (double, double)' extern
| | |-ParmVarDecl 0x7fe8b20144f0 <col:25> col:31 'double'
| | |-ParmVarDecl 0x7fe8b2014568 <col:33> col:39 'double'
| | |-ConstAttr 0x7fe8b20146a8 <col:15> Implicit
| | `-NoThrowAttr 0x7fe8b20146f0 <col:15> Implicit
| |-FunctionDecl 0x7fe8b2014838 <line:519:1, col:55> col:20 used remainderl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fe8b2014718 <col:31, col:36> col:42 'long double'
| | |-ParmVarDecl 0x7fe8b2014790 <col:44, col:49> col:55 'long double'
| | |-ConstAttr 0x7fe8b20148e0 <col:20> Implicit
| | `-NoThrowAttr 0x7fe8b2014928 <col:20> Implicit
| |-FunctionDecl 0x7fe8b2014b28 <line:521:1, col:41> col:14 used remquof 'float (float, float, int *)' extern
| | |-ParmVarDecl 0x7fe8b2014950 <col:22> col:27 'float'
| | |-ParmVarDecl 0x7fe8b20149c8 <col:29> col:34 'float'
| | `-ParmVarDecl 0x7fe8b2014a40 <col:36, col:40> col:41 'int *'
| |-FunctionDecl 0x7fe8b2014dc8 <line:522:1, col:43> col:15 remquo 'double (double, double, int *)' extern
| | |-ParmVarDecl 0x7fe8b2014bf0 <col:22> col:28 'double'
| | |-ParmVarDecl 0x7fe8b2014c68 <col:30> col:36 'double'
| | `-ParmVarDecl 0x7fe8b2014ce0 <col:38, col:42> col:43 'int *'
| |-FunctionDecl 0x7fe8b2015068 <line:523:1, col:59> col:20 used remquol 'long double (long double, long double, int *)' extern
| | |-ParmVarDecl 0x7fe8b2014e90 <col:28, col:33> col:39 'long double'
| | |-ParmVarDecl 0x7fe8b2014f08 <col:41, col:46> col:52 'long double'
| | `-ParmVarDecl 0x7fe8b2014f80 <col:54, col:58> col:59 'int *'
| |-FunctionDecl 0x7fe8b2015240 <line:525:1, col:36> col:14 used copysignf 'float (float, float)' extern
| | |-ParmVarDecl 0x7fe8b2015130 <col:24> col:29 'float'
| | |-ParmVarDecl 0x7fe8b20151a8 <col:31> col:36 'float'
| | |-NoThrowAttr 0x7fe8b20152e8 <col:14> Implicit
| | `-ConstAttr 0x7fe8b2015330 <col:14> Implicit
| |-FunctionDecl 0x7fe8b2015468 <line:526:1, col:38> col:15 copysign 'double (double, double)' extern
| | |-ParmVarDecl 0x7fe8b2015358 <col:24> col:30 'double'
| | |-ParmVarDecl 0x7fe8b20153d0 <col:32> col:38 'double'
| | |-NoThrowAttr 0x7fe8b2015510 <col:15> Implicit
| | `-ConstAttr 0x7fe8b2015558 <col:15> Implicit
| |-FunctionDecl 0x7fe8b2015690 <line:527:1, col:54> col:20 used copysignl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fe8b2015580 <col:30, col:35> col:41 'long double'
| | |-ParmVarDecl 0x7fe8b20155f8 <col:43, col:48> col:54 'long double'
| | |-NoThrowAttr 0x7fe8b2015738 <col:20> Implicit
| | `-ConstAttr 0x7fe8b2015780 <col:20> Implicit
| |-FunctionDecl 0x7fe8b20158c8 <line:529:1, col:31> col:14 nanf 'float (const char *)' extern
| | |-ParmVarDecl 0x7fe8b2015800 <col:19, col:30> col:31 'const char *'
| | |-NoThrowAttr 0x7fe8b20159a8 <col:14> Implicit
| | `-ConstAttr 0x7fe8b20159f0 <col:14> Implicit
| |-FunctionDecl 0x7fe8b2015ae8 <line:530:1, col:31> col:15 nan 'double (const char *)' extern
| | |-ParmVarDecl 0x7fe8b2015a18 <col:19, col:30> col:31 'const char *'
| | |-NoThrowAttr 0x7fe8b2015bc8 <col:15> Implicit
| | `-ConstAttr 0x7fe8b2015c10 <col:15> Implicit
| |-FunctionDecl 0x7fe8b2015d08 <line:531:1, col:37> col:20 nanl 'long double (const char *)' extern
| | |-ParmVarDecl 0x7fe8b2015c38 <col:25, col:36> col:37 'const char *'
| | |-NoThrowAttr 0x7fe8b2015de8 <col:20> Implicit
| | `-ConstAttr 0x7fe8b2015e30 <col:20> Implicit
| |-FunctionDecl 0x7fe8b2015f68 <line:533:1, col:37> col:14 used nextafterf 'float (float, float)' extern
| | |-ParmVarDecl 0x7fe8b2015e58 <col:25> col:30 'float'
| | |-ParmVarDecl 0x7fe8b2015ed0 <col:32> col:37 'float'
| | |-ConstAttr 0x7fe8b2016010 <col:14> Implicit
| | `-NoThrowAttr 0x7fe8b2016058 <col:14> Implicit
| |-FunctionDecl 0x7fe8b2016190 <line:534:1, col:39> col:15 nextafter 'double (double, double)' extern
| | |-ParmVarDecl 0x7fe8b2016080 <col:25> col:31 'double'
| | |-ParmVarDecl 0x7fe8b20160f8 <col:33> col:39 'double'
| | |-ConstAttr 0x7fe8b2016238 <col:15> Implicit
| | `-NoThrowAttr 0x7fe8b2016280 <col:15> Implicit
| |-FunctionDecl 0x7fe8b20163b8 <line:535:1, col:55> col:20 used nextafterl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fe8b20162a8 <col:31, col:36> col:42 'long double'
| | |-ParmVarDecl 0x7fe8b2016320 <col:44, col:49> col:55 'long double'
| | |-ConstAttr 0x7fe8b2016460 <col:20> Implicit
| | `-NoThrowAttr 0x7fe8b20164a8 <col:20> Implicit
| |-FunctionDecl 0x7fe8b2016628 <line:537:1, col:45> col:15 referenced nexttoward 'double (double, long double)' extern
| | |-ParmVarDecl 0x7fe8b20164d0 <col:26> col:32 'double'
| | |-ParmVarDecl 0x7fe8b2016548 <col:34, col:39> col:45 'long double'
| | |-ConstAttr 0x7fe8b2016710 <col:15> Implicit
| | `-NoThrowAttr 0x7fe8b2016758 <col:15> Implicit
| |-FunctionDecl 0x7fe8b20078d8 <line:538:1, col:44> col:14 used nexttowardf 'float (float, long double)' extern
| | |-ParmVarDecl 0x7fe8b2016780 <col:26> col:31 'float'
| | |-ParmVarDecl 0x7fe8b2007800 <col:33, col:38> col:44 'long double'
| | |-ConstAttr 0x7fe8b20079c0 <col:14> Implicit
| | `-NoThrowAttr 0x7fe8b2007a08 <col:14> Implicit
| |-FunctionDecl 0x7fe8b2007b40 <line:539:1, col:56> col:20 used nexttowardl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fe8b2007a30 <col:32, col:37> col:43 'long double'
| | |-ParmVarDecl 0x7fe8b2007aa8 <col:45, col:50> col:56 'long double'
| | |-ConstAttr 0x7fe8b2007be8 <col:20> Implicit
| | `-NoThrowAttr 0x7fe8b2007c30 <col:20> Implicit
| |-FunctionDecl 0x7fe8b2007d68 <line:541:1, col:32> col:14 used fdimf 'float (float, float)' extern
| | |-ParmVarDecl 0x7fe8b2007c58 <col:20> col:25 'float'
| | |-ParmVarDecl 0x7fe8b2007cd0 <col:27> col:32 'float'
| | |-ConstAttr 0x7fe8b2007e10 <col:14> Implicit
| | `-NoThrowAttr 0x7fe8b2007e58 <col:14> Implicit
| |-FunctionDecl 0x7fe8b2007f90 <line:542:1, col:34> col:15 fdim 'double (double, double)' extern
| | |-ParmVarDecl 0x7fe8b2007e80 <col:20> col:26 'double'
| | |-ParmVarDecl 0x7fe8b2007ef8 <col:28> col:34 'double'
| | |-ConstAttr 0x7fe8b2008038 <col:15> Implicit
| | `-NoThrowAttr 0x7fe8b2008080 <col:15> Implicit
| |-FunctionDecl 0x7fe8b20081b8 <line:543:1, col:50> col:20 used fdiml 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fe8b20080a8 <col:26, col:31> col:37 'long double'
| | |-ParmVarDecl 0x7fe8b2008120 <col:39, col:44> col:50 'long double'
| | |-ConstAttr 0x7fe8b2008260 <col:20> Implicit
| | `-NoThrowAttr 0x7fe8b20082a8 <col:20> Implicit
| |-FunctionDecl 0x7fe8b20083e0 <line:545:1, col:32> col:14 used fmaxf 'float (float, float)' extern
| | |-ParmVarDecl 0x7fe8b20082d0 <col:20> col:25 'float'
| | |-ParmVarDecl 0x7fe8b2008348 <col:27> col:32 'float'
| | |-NoThrowAttr 0x7fe8b2008488 <col:14> Implicit
| | `-ConstAttr 0x7fe8b20084d0 <col:14> Implicit
| |-FunctionDecl 0x7fe8b2008608 <line:546:1, col:34> col:15 fmax 'double (double, double)' extern
| | |-ParmVarDecl 0x7fe8b20084f8 <col:20> col:26 'double'
| | |-ParmVarDecl 0x7fe8b2008570 <col:28> col:34 'double'
| | |-NoThrowAttr 0x7fe8b20086b0 <col:15> Implicit
| | `-ConstAttr 0x7fe8b20086f8 <col:15> Implicit
| |-FunctionDecl 0x7fe8b201a838 <line:547:1, col:50> col:20 used fmaxl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fe8b2008720 <col:26, col:31> col:37 'long double'
| | |-ParmVarDecl 0x7fe8b2008798 <col:39, col:44> col:50 'long double'
| | |-NoThrowAttr 0x7fe8b201a8e0 <col:20> Implicit
| | `-ConstAttr 0x7fe8b201a928 <col:20> Implicit
| |-FunctionDecl 0x7fe8b201aa60 <line:549:1, col:32> col:14 used fminf 'float (float, float)' extern
| | |-ParmVarDecl 0x7fe8b201a950 <col:20> col:25 'float'
| | |-ParmVarDecl 0x7fe8b201a9c8 <col:27> col:32 'float'
| | |-NoThrowAttr 0x7fe8b201ab08 <col:14> Implicit
| | `-ConstAttr 0x7fe8b201ab50 <col:14> Implicit
| |-FunctionDecl 0x7fe8b201ac88 <line:550:1, col:34> col:15 fmin 'double (double, double)' extern
| | |-ParmVarDecl 0x7fe8b201ab78 <col:20> col:26 'double'
| | |-ParmVarDecl 0x7fe8b201abf0 <col:28> col:34 'double'
| | |-NoThrowAttr 0x7fe8b201ad30 <col:15> Implicit
| | `-ConstAttr 0x7fe8b201ad78 <col:15> Implicit
| |-FunctionDecl 0x7fe8b201aeb0 <line:551:1, col:50> col:20 used fminl 'long double (long double, long double)' extern
| | |-ParmVarDecl 0x7fe8b201ada0 <col:26, col:31> col:37 'long double'
| | |-ParmVarDecl 0x7fe8b201ae18 <col:39, col:44> col:50 'long double'
| | |-NoThrowAttr 0x7fe8b201af58 <col:20> Implicit
| | `-ConstAttr 0x7fe8b201afa0 <col:20> Implicit
| |-FunctionDecl 0x7fe8b201b1a8 <line:553:1, col:38> col:14 used fmaf 'float (float, float, float)' extern
| | |-ParmVarDecl 0x7fe8b201afc8 <col:19> col:24 'float'
| | |-ParmVarDecl 0x7fe8b201b040 <col:26> col:31 'float'
| | |-ParmVarDecl 0x7fe8b201b0b8 <col:33> col:38 'float'
| | |-ConstAttr 0x7fe8b201b2a8 <col:14> Implicit
| | `-NoThrowAttr 0x7fe8b201b2f0 <col:14> Implicit
| |-FunctionDecl 0x7fe8b201b4f8 <line:554:1, col:41> col:15 fma 'double (double, double, double)' extern
| | |-ParmVarDecl 0x7fe8b201b318 <col:19> col:25 'double'
| | |-ParmVarDecl 0x7fe8b201b390 <col:27> col:33 'double'
| | |-ParmVarDecl 0x7fe8b201b408 <col:35> col:41 'double'
| | |-ConstAttr 0x7fe8b201b5f8 <col:15> Implicit
| | `-NoThrowAttr 0x7fe8b201b640 <col:15> Implicit
| |-FunctionDecl 0x7fe8b200b888 <line:555:1, col:62> col:20 used fmal 'long double (long double, long double, long double)' extern
| | |-ParmVarDecl 0x7fe8b201b668 <col:25, col:30> col:36 'long double'
| | |-ParmVarDecl 0x7fe8b201b6e0 <col:38, col:43> col:49 'long double'
| | |-ParmVarDecl 0x7fe8b201b758 <col:51, col:56> col:62 'long double'
| | |-ConstAttr 0x7fe8b200b988 <col:20> Implicit
| | `-NoThrowAttr 0x7fe8b200b9d0 <col:20> Implicit
| |-FunctionDecl 0x7fe8b200ba88 <line:565:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:565:14 __inff 'float (void)' extern
| | `-AvailabilityAttr 0x7fe8b200bb20 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
| |-FunctionDecl 0x7fe8b200bc68 </usr/include/math.h:566:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:566:15 __inf 'double (void)' extern
| | `-AvailabilityAttr 0x7fe8b200bd00 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
| |-FunctionDecl 0x7fe8b200be48 </usr/include/math.h:567:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:567:20 __infl 'long double (void)' extern
| | `-AvailabilityAttr 0x7fe8b200bee0 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
| |-FunctionDecl 0x7fe8b200c028 </usr/include/math.h:569:1, /usr/include/AvailabilityInternal.h:20677:124> /usr/include/math.h:569:14 __nan 'float (void)' extern
| | `-AvailabilityAttr 0x7fe8b200c0c0 </usr/include/AvailabilityInternal.h:20677:87, col:122> macos 10.0 0 0 "" ""
| |-FunctionDecl 0x7fe8b200c218 </usr/include/math.h:597:1, /usr/include/AvailabilityInternal.h:21622:124> /usr/include/math.h:597:14 __exp10f 'float (float)' extern
| | |-ParmVarDecl 0x7fe8b200c178 <col:23> col:28 'float'
| | |-AvailabilityAttr 0x7fe8b200c2b8 </usr/include/AvailabilityInternal.h:21622:87, col:122> macos 10.9 0 0 "" ""
| | |-ConstAttr 0x7fe8b200c358 </usr/include/math.h:597:14> Implicit
| | `-NoThrowAttr 0x7fe8b200c368 <col:14> Implicit
| |-FunctionDecl 0x7fe8b200c430 <line:598:1, /usr/include/AvailabilityInternal.h:21622:124> /usr/include/math.h:598:15 __exp10 'double (double)' extern
| | |-ParmVarDecl 0x7fe8b200c390 <col:23> col:29 'double'
| | |-AvailabilityAttr 0x7fe8b200c4d0 </usr/include/AvailabilityInternal.h:21622:87, col:122> macos 10.9 0 0 "" ""
| | |-ConstAttr 0x7fe8b200c570 </usr/include/math.h:598:15> Implicit
| | `-NoThrowAttr 0x7fe8b200c580 <col:15> Implicit
| |-FunctionDecl 0x7fe8b201e800 </usr/include/sys/cdefs.h:300:36, /usr/include/math.h:604:78> col:29 __sincosf 'void (float, float *, float *)' inline
| | |-ParmVarDecl 0x7fe8b200c5a8 <col:39, col:45> col:45 __x 'float'
| | |-ParmVarDecl 0x7fe8b200c620 <col:50, col:57> col:57 __sinp 'float *'
| | |-ParmVarDecl 0x7fe8b200c698 <col:65, col:72> col:72 __cosp 'float *'
| | `-AlwaysInlineAttr 0x7fe8b201e8b0 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fe8b201eae0 <line:300:36, /usr/include/math.h:605:80> col:29 __sincos 'void (double, double *, double *)' inline
| | |-ParmVarDecl 0x7fe8b201e910 <col:38, col:45> col:45 __x 'double'
| | |-ParmVarDecl 0x7fe8b201e988 <col:50, col:58> col:58 __sinp 'double *'
| | |-ParmVarDecl 0x7fe8b201ea00 <col:66, col:74> col:74 __cosp 'double *'
| | `-AlwaysInlineAttr 0x7fe8b201eb90 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fe8b201ec90 </usr/include/math.h:614:1, /usr/include/AvailabilityInternal.h:21622:124> /usr/include/math.h:614:14 __cospif 'float (float)' extern
| | |-ParmVarDecl 0x7fe8b201ebf0 <col:23> col:28 'float'
| | |-AvailabilityAttr 0x7fe8b201ed30 </usr/include/AvailabilityInternal.h:21622:87, col:122> macos 10.9 0 0 "" ""
| | |-ConstAttr 0x7fe8b201edd0 </usr/include/math.h:614:14> Implicit
| | `-NoThrowAttr 0x7fe8b201ede0 <col:14> Implicit
| |-FunctionDecl 0x7fe8b201eea8 <line:615:1, /usr/include/AvailabilityInternal.h:21622:124> /usr/include/math.h:615:15 __cospi 'double (double)' extern
| | |-ParmVarDecl 0x7fe8b201ee08 <col:23> col:29 'double'
| | |-AvailabilityAttr 0x7fe8b201ef48 </usr/include/AvailabilityInternal.h:21622:87, col:122> macos 10.9 0 0 "" ""
| | |-ConstAttr 0x7fe8b201efe8 </usr/include/math.h:615:15> Implicit
| | `-NoThrowAttr 0x7fe8b201eff8 <col:15> Implicit
| |-FunctionDecl 0x7fe8b201f0c0 <line:616:1, /usr/include/AvailabilityInternal.h:21622:124> /usr/include/math.h:616:14 __sinpif 'float (float)' extern
| | |-ParmVarDecl 0x7fe8b201f020 <col:23> col:28 'float'
| | |-AvailabilityAttr 0x7fe8b201f160 </usr/include/AvailabilityInternal.h:21622:87, col:122> macos 10.9 0 0 "" ""
| | |-ConstAttr 0x7fe8b201f200 </usr/include/math.h:616:14> Implicit
| | `-NoThrowAttr 0x7fe8b201f210 <col:14> Implicit
| |-FunctionDecl 0x7fe8b201f2d8 <line:617:1, /usr/include/AvailabilityInternal.h:21622:124> /usr/include/math.h:617:15 __sinpi 'double (double)' extern
| | |-ParmVarDecl 0x7fe8b201f238 <col:23> col:29 'double'
| | |-AvailabilityAttr 0x7fe8b201f378 </usr/include/AvailabilityInternal.h:21622:87, col:122> macos 10.9 0 0 "" ""
| | |-ConstAttr 0x7fe8b201f418 </usr/include/math.h:617:15> Implicit
| | `-NoThrowAttr 0x7fe8b201f428 <col:15> Implicit
| |-FunctionDecl 0x7fe8b201f4f0 <line:618:1, /usr/include/AvailabilityInternal.h:21622:124> /usr/include/math.h:618:14 __tanpif 'float (float)' extern
| | |-ParmVarDecl 0x7fe8b201f450 <col:23> col:28 'float'
| | |-AvailabilityAttr 0x7fe8b201f590 </usr/include/AvailabilityInternal.h:21622:87, col:122> macos 10.9 0 0 "" ""
| | |-ConstAttr 0x7fe8b201f630 </usr/include/math.h:618:14> Implicit
| | `-NoThrowAttr 0x7fe8b201f640 <col:14> Implicit
| |-FunctionDecl 0x7fe8b201f708 <line:619:1, /usr/include/AvailabilityInternal.h:21622:124> /usr/include/math.h:619:15 __tanpi 'double (double)' extern
| | |-ParmVarDecl 0x7fe8b201f668 <col:23> col:29 'double'
| | |-AvailabilityAttr 0x7fe8b2025800 </usr/include/AvailabilityInternal.h:21622:87, col:122> macos 10.9 0 0 "" ""
| | |-ConstAttr 0x7fe8b20258a0 </usr/include/math.h:619:15> Implicit
| | `-NoThrowAttr 0x7fe8b20258b0 <col:15> Implicit
| |-FunctionDecl 0x7fe8b2025a60 </usr/include/sys/cdefs.h:300:36, /usr/include/math.h:645:80> col:29 __sincospif 'void (float, float *, float *)' inline
| | |-ParmVarDecl 0x7fe8b20258d8 <col:41, col:47> col:47 __x 'float'
| | |-ParmVarDecl 0x7fe8b2025950 <col:52, col:59> col:59 __sinp 'float *'
| | |-ParmVarDecl 0x7fe8b20259c8 <col:67, col:74> col:74 __cosp 'float *'
| | `-AlwaysInlineAttr 0x7fe8b2025b10 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fe8b2025cf8 <line:300:36, /usr/include/math.h:646:82> col:29 __sincospi 'void (double, double *, double *)' inline
| | |-ParmVarDecl 0x7fe8b2025b70 <col:40, col:47> col:47 __x 'double'
| | |-ParmVarDecl 0x7fe8b2025be8 <col:52, col:60> col:60 __sinp 'double *'
| | |-ParmVarDecl 0x7fe8b2025c60 <col:68, col:76> col:76 __cosp 'double *'
| | `-AlwaysInlineAttr 0x7fe8b2025da8 </usr/include/sys/cdefs.h:313:68> always_inline
| |-CXXRecordDecl 0x7fe8b2025df0 </usr/include/math.h:653:1, col:51> col:8 struct __float2 definition
| | |-CXXRecordDecl 0x7fe8b2025f18 <col:1, col:8> col:8 implicit struct __float2
| | |-FieldDecl 0x7fe8b2025fc8 <col:19, col:25> col:25 referenced __sinval 'float'
| | |-FieldDecl 0x7fe8b2026028 <col:35, col:41> col:41 referenced __cosval 'float'
| | |-CXXDestructorDecl 0x7fe8b202d068 <col:8> col:8 implicit referenced ~__float2 'void (void) noexcept' inline default trivial
| | |-CXXConstructorDecl 0x7fe8b202d168 <col:8> col:8 implicit __float2 'void (void)' inline default trivial noexcept-unevaluated 0x7fe8b202d168
| | |-CXXConstructorDecl 0x7fe8b202d278 <col:8> col:8 implicit constexpr __float2 'void (const struct __float2 &)' inline default trivial noexcept-unevaluated 0x7fe8b202d278
| | | `-ParmVarDecl 0x7fe8b202d3a0 <col:8> col:8 'const struct __float2 &'
| | `-CXXConstructorDecl 0x7fe8b202d438 <col:8> col:8 implicit used constexpr __float2 'void (struct __float2 &&) noexcept' inline default trivial
| |   |-ParmVarDecl 0x7fe8b202d560 <col:8> col:8 used 'struct __float2 &&'
| |   |-CXXCtorInitializer Field 0x7fe8b2025fc8 '__sinval' 'float'
| |   | `-ImplicitCastExpr 0x7fe8b202d6b8 <col:8> 'float' <LValueToRValue>
| |   |   `-MemberExpr 0x7fe8b202d680 <col:8> 'float' xvalue .__sinval 0x7fe8b2025fc8
| |   |     `-CXXStaticCastExpr 0x7fe8b202d650 <col:8> 'struct __float2' xvalue static_cast<struct __float2 &&> <NoOp>
| |   |       `-DeclRefExpr 0x7fe8b202d618 <col:8> 'struct __float2' lvalue ParmVar 0x7fe8b202d560 '' 'struct __float2 &&'
| |   |-CXXCtorInitializer Field 0x7fe8b2026028 '__cosval' 'float'
| |   | `-ImplicitCastExpr 0x7fe8b202d798 <col:8> 'float' <LValueToRValue>
| |   |   `-MemberExpr 0x7fe8b202d760 <col:8> 'float' xvalue .__cosval 0x7fe8b2026028
| |   |     `-CXXStaticCastExpr 0x7fe8b202d730 <col:8> 'struct __float2' xvalue static_cast<struct __float2 &&> <NoOp>
| |   |       `-DeclRefExpr 0x7fe8b202d6f8 <col:8> 'struct __float2' lvalue ParmVar 0x7fe8b202d560 '' 'struct __float2 &&'
| |   `-CompoundStmt 0x7fe8b202d7e8 <col:8>
| |-CXXRecordDecl 0x7fe8b2026090 <line:654:1, col:54> col:8 struct __double2 definition
| | |-CXXRecordDecl 0x7fe8b20261b8 <col:1, col:8> col:8 implicit struct __double2
| | |-FieldDecl 0x7fe8b2026268 <col:20, col:27> col:27 referenced __sinval 'double'
| | |-FieldDecl 0x7fe8b20262c8 <col:37, col:44> col:44 referenced __cosval 'double'
| | |-CXXDestructorDecl 0x7fe8b202e478 <col:8> col:8 implicit referenced ~__double2 'void (void) noexcept' inline default trivial
| | |-CXXConstructorDecl 0x7fe8b202e578 <col:8> col:8 implicit __double2 'void (void)' inline default trivial noexcept-unevaluated 0x7fe8b202e578
| | |-CXXConstructorDecl 0x7fe8b202e688 <col:8> col:8 implicit constexpr __double2 'void (const struct __double2 &)' inline default trivial noexcept-unevaluated 0x7fe8b202e688
| | | `-ParmVarDecl 0x7fe8b202e7b0 <col:8> col:8 'const struct __double2 &'
| | `-CXXConstructorDecl 0x7fe8b202e848 <col:8> col:8 implicit used constexpr __double2 'void (struct __double2 &&) noexcept' inline default trivial
| |   |-ParmVarDecl 0x7fe8b202e970 <col:8> col:8 used 'struct __double2 &&'
| |   |-CXXCtorInitializer Field 0x7fe8b2026268 '__sinval' 'double'
| |   | `-ImplicitCastExpr 0x7fe8b202eac8 <col:8> 'double' <LValueToRValue>
| |   |   `-MemberExpr 0x7fe8b202ea90 <col:8> 'double' xvalue .__sinval 0x7fe8b2026268
| |   |     `-CXXStaticCastExpr 0x7fe8b202ea60 <col:8> 'struct __double2' xvalue static_cast<struct __double2 &&> <NoOp>
| |   |       `-DeclRefExpr 0x7fe8b202ea28 <col:8> 'struct __double2' lvalue ParmVar 0x7fe8b202e970 '' 'struct __double2 &&'
| |   |-CXXCtorInitializer Field 0x7fe8b20262c8 '__cosval' 'double'
| |   | `-ImplicitCastExpr 0x7fe8b202eba8 <col:8> 'double' <LValueToRValue>
| |   |   `-MemberExpr 0x7fe8b202eb70 <col:8> 'double' xvalue .__cosval 0x7fe8b20262c8
| |   |     `-CXXStaticCastExpr 0x7fe8b202eb40 <col:8> 'struct __double2' xvalue static_cast<struct __double2 &&> <NoOp>
| |   |       `-DeclRefExpr 0x7fe8b202eb08 <col:8> 'struct __double2' lvalue ParmVar 0x7fe8b202e970 '' 'struct __double2 &&'
| |   `-CompoundStmt 0x7fe8b202ebf8 <col:8>
| |-FunctionDecl 0x7fe8b2026490 <line:656:1, col:45> col:24 used __sincosf_stret 'struct __float2 (float)' extern
| | `-ParmVarDecl 0x7fe8b2026348 <col:40> col:45 'float'
| |-FunctionDecl 0x7fe8b2026690 <line:657:1, col:46> col:25 used __sincos_stret 'struct __double2 (double)' extern
| | `-ParmVarDecl 0x7fe8b2026548 <col:40> col:46 'double'
| |-FunctionDecl 0x7fe8b202ca00 <line:658:1, col:47> col:24 used __sincospif_stret 'struct __float2 (float)' extern
| | `-ParmVarDecl 0x7fe8b2026748 <col:42> col:47 'float'
| |-FunctionDecl 0x7fe8b202cb50 <line:659:1, col:48> col:25 used __sincospi_stret 'struct __double2 (double)' extern
| | `-ParmVarDecl 0x7fe8b202cab8 <col:42> col:48 'double'
| |-FunctionDecl 0x7fe8b202cd90 prev 0x7fe8b201e800 </usr/include/sys/cdefs.h:300:36, /usr/include/math.h:664:1> line:661:29 __sincosf 'void (float, float *, float *)' inline
| | |-ParmVarDecl 0x7fe8b202cc08 <col:39, col:45> col:45 used __x 'float'
| | |-ParmVarDecl 0x7fe8b202cc80 <col:50, col:57> col:57 used __sinp 'float *'
| | |-ParmVarDecl 0x7fe8b202ccf8 <col:65, col:72> col:72 used __cosp 'float *'
| | |-CompoundStmt 0x7fe8b202dfd0 <col:80, line:664:1>
| | | |-DeclStmt 0x7fe8b202d850 <line:662:5, col:57>
| | | | `-VarDecl 0x7fe8b202cea8 <col:5, col:56> col:27 used __stret 'const struct __float2':'const struct __float2' cinit
| | | |   `-ExprWithCleanups 0x7fe8b202d838 <col:37, col:56> 'const struct __float2':'const struct __float2'
| | | |     `-CXXConstructExpr 0x7fe8b202d800 <col:37, col:56> 'const struct __float2':'const struct __float2' 'void (struct __float2 &&) noexcept' elidable
| | | |       `-MaterializeTemporaryExpr 0x7fe8b202d5c8 <col:37, col:56> 'struct __float2':'struct __float2' xvalue
| | | |         `-CallExpr 0x7fe8b202d020 <col:37, col:56> 'struct __float2':'struct __float2'
| | | |           |-ImplicitCastExpr 0x7fe8b202d008 <col:37> 'struct __float2 (*)(float)' <FunctionToPointerDecay>
| | | |           | `-DeclRefExpr 0x7fe8b202cf88 <col:37> 'struct __float2 (float)' lvalue Function 0x7fe8b2026490 '__sincosf_stret' 'struct __float2 (float)'
| | | |           `-ImplicitCastExpr 0x7fe8b202d050 <col:53> 'float' <LValueToRValue>
| | | |             `-DeclRefExpr 0x7fe8b202cf60 <col:53> 'float' lvalue ParmVar 0x7fe8b202cc08 '__x' 'float'
| | | |-BinaryOperator 0x7fe8b202d940 <line:663:5, col:23> 'float' lvalue '='
| | | | |-UnaryOperator 0x7fe8b202d8a8 <col:5, col:6> 'float' lvalue prefix '*'
| | | | | `-ImplicitCastExpr 0x7fe8b202d890 <col:6> 'float *' <LValueToRValue>
| | | | |   `-DeclRefExpr 0x7fe8b202d868 <col:6> 'float *' lvalue ParmVar 0x7fe8b202cc80 '__sinp' 'float *'
| | | | `-ImplicitCastExpr 0x7fe8b202d928 <col:15, col:23> 'float' <LValueToRValue>
| | | |   `-MemberExpr 0x7fe8b202d8f0 <col:15, col:23> 'const float' lvalue .__sinval 0x7fe8b2025fc8
| | | |     `-DeclRefExpr 0x7fe8b202d8c8 <col:15> 'const struct __float2':'const struct __float2' lvalue Var 0x7fe8b202cea8 '__stret' 'const struct __float2':'const struct __float2'
| | | `-BinaryOperator 0x7fe8b202dfa8 <col:33, col:51> 'float' lvalue '='
| | |   |-UnaryOperator 0x7fe8b202df10 <col:33, col:34> 'float' lvalue prefix '*'
| | |   | `-ImplicitCastExpr 0x7fe8b202def8 <col:34> 'float *' <LValueToRValue>
| | |   |   `-DeclRefExpr 0x7fe8b202ded0 <col:34> 'float *' lvalue ParmVar 0x7fe8b202ccf8 '__cosp' 'float *'
| | |   `-ImplicitCastExpr 0x7fe8b202df90 <col:43, col:51> 'float' <LValueToRValue>
| | |     `-MemberExpr 0x7fe8b202df58 <col:43, col:51> 'const float' lvalue .__cosval 0x7fe8b2026028
| | |       `-DeclRefExpr 0x7fe8b202df30 <col:43> 'const struct __float2':'const struct __float2' lvalue Var 0x7fe8b202cea8 '__stret' 'const struct __float2':'const struct __float2'
| | `-AlwaysInlineAttr 0x7fe8b202ce40 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fe8b202e1a0 prev 0x7fe8b201eae0 <line:300:36, /usr/include/math.h:669:1> line:666:29 __sincos 'void (double, double *, double *)' inline
| | |-ParmVarDecl 0x7fe8b202e018 <col:38, col:45> col:45 used __x 'double'
| | |-ParmVarDecl 0x7fe8b202e090 <col:50, col:58> col:58 used __sinp 'double *'
| | |-ParmVarDecl 0x7fe8b202e108 <col:66, col:74> col:74 used __cosp 'double *'
| | |-CompoundStmt 0x7fe8b202efd0 <col:82, line:669:1>
| | | |-DeclStmt 0x7fe8b202ec60 <line:667:5, col:57>
| | | | `-VarDecl 0x7fe8b202e2b8 <col:5, col:56> col:28 used __stret 'const struct __double2':'const struct __double2' cinit
| | | |   `-ExprWithCleanups 0x7fe8b202ec48 <col:38, col:56> 'const struct __double2':'const struct __double2'
| | | |     `-CXXConstructExpr 0x7fe8b202ec10 <col:38, col:56> 'const struct __double2':'const struct __double2' 'void (struct __double2 &&) noexcept' elidable
| | | |       `-MaterializeTemporaryExpr 0x7fe8b202e9d8 <col:38, col:56> 'struct __double2':'struct __double2' xvalue
| | | |         `-CallExpr 0x7fe8b202e430 <col:38, col:56> 'struct __double2':'struct __double2'
| | | |           |-ImplicitCastExpr 0x7fe8b202e418 <col:38> 'struct __double2 (*)(double)' <FunctionToPointerDecay>
| | | |           | `-DeclRefExpr 0x7fe8b202e398 <col:38> 'struct __double2 (double)' lvalue Function 0x7fe8b2026690 '__sincos_stret' 'struct __double2 (double)'
| | | |           `-ImplicitCastExpr 0x7fe8b202e460 <col:53> 'double' <LValueToRValue>
| | | |             `-DeclRefExpr 0x7fe8b202e370 <col:53> 'double' lvalue ParmVar 0x7fe8b202e018 '__x' 'double'
| | | |-BinaryOperator 0x7fe8b202ed50 <line:668:5, col:23> 'double' lvalue '='
| | | | |-UnaryOperator 0x7fe8b202ecb8 <col:5, col:6> 'double' lvalue prefix '*'
| | | | | `-ImplicitCastExpr 0x7fe8b202eca0 <col:6> 'double *' <LValueToRValue>
| | | | |   `-DeclRefExpr 0x7fe8b202ec78 <col:6> 'double *' lvalue ParmVar 0x7fe8b202e090 '__sinp' 'double *'
| | | | `-ImplicitCastExpr 0x7fe8b202ed38 <col:15, col:23> 'double' <LValueToRValue>
| | | |   `-MemberExpr 0x7fe8b202ed00 <col:15, col:23> 'const double' lvalue .__sinval 0x7fe8b2026268
| | | |     `-DeclRefExpr 0x7fe8b202ecd8 <col:15> 'const struct __double2':'const struct __double2' lvalue Var 0x7fe8b202e2b8 '__stret' 'const struct __double2':'const struct __double2'
| | | `-BinaryOperator 0x7fe8b202efa8 <col:33, col:51> 'double' lvalue '='
| | |   |-UnaryOperator 0x7fe8b202ef10 <col:33, col:34> 'double' lvalue prefix '*'
| | |   | `-ImplicitCastExpr 0x7fe8b202eef8 <col:34> 'double *' <LValueToRValue>
| | |   |   `-DeclRefExpr 0x7fe8b202eed0 <col:34> 'double *' lvalue ParmVar 0x7fe8b202e108 '__cosp' 'double *'
| | |   `-ImplicitCastExpr 0x7fe8b202ef90 <col:43, col:51> 'double' <LValueToRValue>
| | |     `-MemberExpr 0x7fe8b202ef58 <col:43, col:51> 'const double' lvalue .__cosval 0x7fe8b20262c8
| | |       `-DeclRefExpr 0x7fe8b202ef30 <col:43> 'const struct __double2':'const struct __double2' lvalue Var 0x7fe8b202e2b8 '__stret' 'const struct __double2':'const struct __double2'
| | `-AlwaysInlineAttr 0x7fe8b202e250 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fe8b202f1a0 prev 0x7fe8b2025a60 <line:300:36, /usr/include/math.h:674:1> line:671:29 __sincospif 'void (float, float *, float *)' inline
| | |-ParmVarDecl 0x7fe8b202f018 <col:41, col:47> col:47 used __x 'float'
| | |-ParmVarDecl 0x7fe8b202f090 <col:52, col:59> col:59 used __sinp 'float *'
| | |-ParmVarDecl 0x7fe8b202f108 <col:67, col:74> col:74 used __cosp 'float *'
| | |-CompoundStmt 0x7fe8b202f6f8 <col:82, line:674:1>
| | | |-DeclStmt 0x7fe8b202f488 <line:672:5, col:59>
| | | | `-VarDecl 0x7fe8b202f2b8 <col:5, col:58> col:27 used __stret 'const struct __float2':'const struct __float2' cinit
| | | |   `-ExprWithCleanups 0x7fe8b202f470 <col:37, col:58> 'const struct __float2':'const struct __float2'
| | | |     `-CXXConstructExpr 0x7fe8b202f438 <col:37, col:58> 'const struct __float2':'const struct __float2' 'void (struct __float2 &&) noexcept' elidable
| | | |       `-MaterializeTemporaryExpr 0x7fe8b202f420 <col:37, col:58> 'struct __float2':'struct __float2' xvalue
| | | |         `-CallExpr 0x7fe8b202f3d8 <col:37, col:58> 'struct __float2':'struct __float2'
| | | |           |-ImplicitCastExpr 0x7fe8b202f3c0 <col:37> 'struct __float2 (*)(float)' <FunctionToPointerDecay>
| | | |           | `-DeclRefExpr 0x7fe8b202f398 <col:37> 'struct __float2 (float)' lvalue Function 0x7fe8b202ca00 '__sincospif_stret' 'struct __float2 (float)'
| | | |           `-ImplicitCastExpr 0x7fe8b202f408 <col:55> 'float' <LValueToRValue>
| | | |             `-DeclRefExpr 0x7fe8b202f370 <col:55> 'float' lvalue ParmVar 0x7fe8b202f018 '__x' 'float'
| | | |-BinaryOperator 0x7fe8b202f578 <line:673:5, col:23> 'float' lvalue '='
| | | | |-UnaryOperator 0x7fe8b202f4e0 <col:5, col:6> 'float' lvalue prefix '*'
| | | | | `-ImplicitCastExpr 0x7fe8b202f4c8 <col:6> 'float *' <LValueToRValue>
| | | | |   `-DeclRefExpr 0x7fe8b202f4a0 <col:6> 'float *' lvalue ParmVar 0x7fe8b202f090 '__sinp' 'float *'
| | | | `-ImplicitCastExpr 0x7fe8b202f560 <col:15, col:23> 'float' <LValueToRValue>
| | | |   `-MemberExpr 0x7fe8b202f528 <col:15, col:23> 'const float' lvalue .__sinval 0x7fe8b2025fc8
| | | |     `-DeclRefExpr 0x7fe8b202f500 <col:15> 'const struct __float2':'const struct __float2' lvalue Var 0x7fe8b202f2b8 '__stret' 'const struct __float2':'const struct __float2'
| | | `-BinaryOperator 0x7fe8b202f6d0 <col:33, col:51> 'float' lvalue '='
| | |   |-UnaryOperator 0x7fe8b202f638 <col:33, col:34> 'float' lvalue prefix '*'
| | |   | `-ImplicitCastExpr 0x7fe8b202f620 <col:34> 'float *' <LValueToRValue>
| | |   |   `-DeclRefExpr 0x7fe8b202f5f8 <col:34> 'float *' lvalue ParmVar 0x7fe8b202f108 '__cosp' 'float *'
| | |   `-ImplicitCastExpr 0x7fe8b202f6b8 <col:43, col:51> 'float' <LValueToRValue>
| | |     `-MemberExpr 0x7fe8b202f680 <col:43, col:51> 'const float' lvalue .__cosval 0x7fe8b2026028
| | |       `-DeclRefExpr 0x7fe8b202f658 <col:43> 'const struct __float2':'const struct __float2' lvalue Var 0x7fe8b202f2b8 '__stret' 'const struct __float2':'const struct __float2'
| | `-AlwaysInlineAttr 0x7fe8b202f250 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fe8b202f8c8 prev 0x7fe8b2025cf8 <line:300:36, /usr/include/math.h:679:1> line:676:29 __sincospi 'void (double, double *, double *)' inline
| | |-ParmVarDecl 0x7fe8b202f740 <col:40, col:47> col:47 used __x 'double'
| | |-ParmVarDecl 0x7fe8b202f7b8 <col:52, col:60> col:60 used __sinp 'double *'
| | |-ParmVarDecl 0x7fe8b202f830 <col:68, col:76> col:76 used __cosp 'double *'
| | |-CompoundStmt 0x7fe8b2030228 <col:84, line:679:1>
| | | |-DeclStmt 0x7fe8b202fbb0 <line:677:5, col:59>
| | | | `-VarDecl 0x7fe8b202f9e0 <col:5, col:58> col:28 used __stret 'const struct __double2':'const struct __double2' cinit
| | | |   `-ExprWithCleanups 0x7fe8b202fb98 <col:38, col:58> 'const struct __double2':'const struct __double2'
| | | |     `-CXXConstructExpr 0x7fe8b202fb60 <col:38, col:58> 'const struct __double2':'const struct __double2' 'void (struct __double2 &&) noexcept' elidable
| | | |       `-MaterializeTemporaryExpr 0x7fe8b202fb48 <col:38, col:58> 'struct __double2':'struct __double2' xvalue
| | | |         `-CallExpr 0x7fe8b202fb00 <col:38, col:58> 'struct __double2':'struct __double2'
| | | |           |-ImplicitCastExpr 0x7fe8b202fae8 <col:38> 'struct __double2 (*)(double)' <FunctionToPointerDecay>
| | | |           | `-DeclRefExpr 0x7fe8b202fac0 <col:38> 'struct __double2 (double)' lvalue Function 0x7fe8b202cb50 '__sincospi_stret' 'struct __double2 (double)'
| | | |           `-ImplicitCastExpr 0x7fe8b202fb30 <col:55> 'double' <LValueToRValue>
| | | |             `-DeclRefExpr 0x7fe8b202fa98 <col:55> 'double' lvalue ParmVar 0x7fe8b202f740 '__x' 'double'
| | | |-BinaryOperator 0x7fe8b202fca0 <line:678:5, col:23> 'double' lvalue '='
| | | | |-UnaryOperator 0x7fe8b202fc08 <col:5, col:6> 'double' lvalue prefix '*'
| | | | | `-ImplicitCastExpr 0x7fe8b202fbf0 <col:6> 'double *' <LValueToRValue>
| | | | |   `-DeclRefExpr 0x7fe8b202fbc8 <col:6> 'double *' lvalue ParmVar 0x7fe8b202f7b8 '__sinp' 'double *'
| | | | `-ImplicitCastExpr 0x7fe8b202fc88 <col:15, col:23> 'double' <LValueToRValue>
| | | |   `-MemberExpr 0x7fe8b202fc50 <col:15, col:23> 'const double' lvalue .__sinval 0x7fe8b2026268
| | | |     `-DeclRefExpr 0x7fe8b202fc28 <col:15> 'const struct __double2':'const struct __double2' lvalue Var 0x7fe8b202f9e0 '__stret' 'const struct __double2':'const struct __double2'
| | | `-BinaryOperator 0x7fe8b2030200 <col:33, col:51> 'double' lvalue '='
| | |   |-UnaryOperator 0x7fe8b202fd60 <col:33, col:34> 'double' lvalue prefix '*'
| | |   | `-ImplicitCastExpr 0x7fe8b202fd48 <col:34> 'double *' <LValueToRValue>
| | |   |   `-DeclRefExpr 0x7fe8b202fd20 <col:34> 'double *' lvalue ParmVar 0x7fe8b202f830 '__cosp' 'double *'
| | |   `-ImplicitCastExpr 0x7fe8b202fde0 <col:43, col:51> 'double' <LValueToRValue>
| | |     `-MemberExpr 0x7fe8b202fda8 <col:43, col:51> 'const double' lvalue .__cosval 0x7fe8b20262c8
| | |       `-DeclRefExpr 0x7fe8b202fd80 <col:43> 'const struct __double2':'const struct __double2' lvalue Var 0x7fe8b202f9e0 '__stret' 'const struct __double2':'const struct __double2'
| | `-AlwaysInlineAttr 0x7fe8b202f978 </usr/include/sys/cdefs.h:313:68> always_inline
| |-FunctionDecl 0x7fe8b2030310 </usr/include/math.h:687:1, /usr/include/AvailabilityInternal.h:20677:124> /usr/include/math.h:687:15 j0 'double (double)' extern
| | |-ParmVarDecl 0x7fe8b2030270 <col:18> col:24 'double'
| | `-AvailabilityAttr 0x7fe8b20303b0 </usr/include/AvailabilityInternal.h:20677:87, col:122> macos 10.0 0 0 "" ""
| |-FunctionDecl 0x7fe8b2030508 </usr/include/math.h:688:1, /usr/include/AvailabilityInternal.h:20677:124> /usr/include/math.h:688:15 j1 'double (double)' extern
| | |-ParmVarDecl 0x7fe8b2030468 <col:18> col:24 'double'
| | `-AvailabilityAttr 0x7fe8b20305a8 </usr/include/AvailabilityInternal.h:20677:87, col:122> macos 10.0 0 0 "" ""
| |-FunctionDecl 0x7fe8b20307c8 </usr/include/math.h:689:1, /usr/include/AvailabilityInternal.h:20677:124> /usr/include/math.h:689:15 jn 'double (int, double)' extern
| | |-ParmVarDecl 0x7fe8b2030660 <col:18> col:21 'int'
| | |-ParmVarDecl 0x7fe8b20306d8 <col:23> col:29 'double'
| | `-AvailabilityAttr 0x7fe8b2030870 </usr/include/AvailabilityInternal.h:20677:87, col:122> macos 10.0 0 0 "" ""
| |-FunctionDecl 0x7fe8b20309c8 </usr/include/math.h:690:1, /usr/include/AvailabilityInternal.h:20677:124> /usr/include/math.h:690:15 y0 'double (double)' extern
| | |-ParmVarDecl 0x7fe8b2030928 <col:18> col:24 'double'
| | `-AvailabilityAttr 0x7fe8b2030a68 </usr/include/AvailabilityInternal.h:20677:87, col:122> macos 10.0 0 0 "" ""
| |-FunctionDecl 0x7fe8b2030bc0 </usr/include/math.h:691:1, /usr/include/AvailabilityInternal.h:20677:124> /usr/include/math.h:691:15 y1 'double (double)' extern
| | |-ParmVarDecl 0x7fe8b2030b20 <col:18> col:24 'double'
| | `-AvailabilityAttr 0x7fe8b2030c60 </usr/include/AvailabilityInternal.h:20677:87, col:122> macos 10.0 0 0 "" ""
| |-FunctionDecl 0x7fe8b2030e38 </usr/include/math.h:692:1, /usr/include/AvailabilityInternal.h:20677:124> /usr/include/math.h:692:15 yn 'double (int, double)' extern
| | |-ParmVarDecl 0x7fe8b2030d18 <col:18> col:21 'int'
| | |-ParmVarDecl 0x7fe8b2030d90 <col:23> col:29 'double'
| | `-AvailabilityAttr 0x7fe8b2030ee0 </usr/include/AvailabilityInternal.h:20677:87, col:122> macos 10.0 0 0 "" ""
| |-FunctionDecl 0x7fe8b20310a8 </usr/include/math.h:693:1, col:35> col:15 scalb 'double (double, double)' extern
| | |-ParmVarDecl 0x7fe8b2030f98 <col:21> col:27 'double'
| | `-ParmVarDecl 0x7fe8b2031010 <col:29> col:35 'double'
| |-VarDecl 0x7fe8b2031168 <line:694:1, col:12> col:12 signgam 'int' extern
| |-FunctionDecl 0x7fe8b20332a0 <line:751:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:751:17 rinttol 'long (double)' extern
| | |-ParmVarDecl 0x7fe8b2033200 <col:25> col:31 'double'
| | `-AvailabilityAttr 0x7fe8b2033340 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
| |-FunctionDecl 0x7fe8b2033498 </usr/include/math.h:753:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:753:17 roundtol 'long (double)' extern
| | |-ParmVarDecl 0x7fe8b20333f8 <col:26> col:32 'double'
| | `-AvailabilityAttr 0x7fe8b2033538 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
| |-FunctionDecl 0x7fe8b2033710 </usr/include/math.h:755:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:755:15 drem 'double (double, double)' extern
| | |-ParmVarDecl 0x7fe8b20335f0 <col:20> col:26 'double'
| | |-ParmVarDecl 0x7fe8b2033668 <col:28> col:34 'double'
| | `-AvailabilityAttr 0x7fe8b20337b8 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
| |-FunctionDecl 0x7fe8b2033910 </usr/include/math.h:757:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:757:12 finite 'int (double)' extern
| | |-ParmVarDecl 0x7fe8b2033870 <col:19> col:25 'double'
| | `-AvailabilityAttr 0x7fe8b20339b0 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
| |-FunctionDecl 0x7fe8b2033b08 </usr/include/math.h:759:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:759:15 gamma 'double (double)' extern
| | |-ParmVarDecl 0x7fe8b2033a68 <col:21> col:27 'double'
| | `-AvailabilityAttr 0x7fe8b2033ba8 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
| `-FunctionDecl 0x7fe8b2033d00 </usr/include/math.h:761:1, /usr/include/AvailabilityInternal.h:20732:140> /usr/include/math.h:761:15 significand 'double (double)' extern
|   |-ParmVarDecl 0x7fe8b2033c60 <col:27> col:33 'double'
|   `-AvailabilityAttr 0x7fe8b2033da0 </usr/include/AvailabilityInternal.h:20732:87, col:138> macos 10.0 10.9 0 "" ""
|-LinkageSpecDecl 0x7fe8b1903598 </usr/include/math.h:205:26> col:26 implicit C
| `-FunctionDecl 0x7fe8b19035e8 <col:26> col:26 implicit used __builtin_fabsf 'float (float) noexcept' extern
|   |-ParmVarDecl 0x7fe8b1903680 <<invalid sloc>> <invalid sloc> 'float'
|   |-NoThrowAttr 0x7fe8b19036e8 <col:26> Implicit
|   `-ConstAttr 0x7fe8b1903730 <col:26> Implicit
|-LinkageSpecDecl 0x7fe8b19038b0 <col:50> col:50 implicit C
| `-FunctionDecl 0x7fe8b1903900 <col:50> col:50 implicit used __builtin_inff 'float (void) noexcept' extern
|   |-NoThrowAttr 0x7fe8b1903998 <col:50> Implicit
|   `-ConstAttr 0x7fe8b19039e0 <col:50> Implicit
|-LinkageSpecDecl 0x7fe8b1903e08 <line:208:26> col:26 implicit C
| `-FunctionDecl 0x7fe8b1903e58 <col:26> col:26 implicit used __builtin_fabs 'double (double) noexcept' extern
|   |-ParmVarDecl 0x7fe8b1903ef0 <<invalid sloc>> <invalid sloc> 'double'
|   |-NoThrowAttr 0x7fe8b1903f58 <col:26> Implicit
|   `-ConstAttr 0x7fe8b1903fa0 <col:26> Implicit
|-LinkageSpecDecl 0x7fe8b1904120 <col:49> col:49 implicit C
| `-FunctionDecl 0x7fe8b1904600 <col:49> col:49 implicit used __builtin_inf 'double (void) noexcept' extern
|   |-NoThrowAttr 0x7fe8b1904698 <col:49> Implicit
|   `-ConstAttr 0x7fe8b19046e0 <col:49> Implicit
|-LinkageSpecDecl 0x7fe8b1904b08 <line:211:26> col:26 implicit C
| `-FunctionDecl 0x7fe8b1904b58 <col:26> col:26 implicit used __builtin_fabsl 'long double (long double) noexcept' extern
|   |-ParmVarDecl 0x7fe8b1904bf0 <<invalid sloc>> <invalid sloc> 'long double'
|   |-NoThrowAttr 0x7fe8b1904c58 <col:26> Implicit
|   `-ConstAttr 0x7fe8b1904ca0 <col:26> Implicit
|-LinkageSpecDecl 0x7fe8b1904e20 <col:50> col:50 implicit C
| `-FunctionDecl 0x7fe8b1904e70 <col:50> col:50 implicit used __builtin_infl 'long double (void) noexcept' extern
|   |-NoThrowAttr 0x7fe8b1904f08 <col:50> Implicit
|   `-ConstAttr 0x7fe8b1904f50 <col:50> Implicit
|-LinkageSpecDecl 0x7fe8b2033ee8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:307:1, line:1485:1> line:307:8 C++
| |-TypedefDecl 0x7fe8b2033f50 </usr/local/Cellar/llvm/5.0.0/bin/../lib/clang/5.0.0/include/stddef.h:51:1, col:26> col:26 ptrdiff_t 'long'
| | `-BuiltinType 0x7fe8b18325e0 'long'
| |-TypedefDecl 0x7fe8b2033fc0 <line:62:1, col:23> col:23 referenced size_t 'unsigned long'
| | `-BuiltinType 0x7fe8b1832680 'unsigned long'
| |-TypedefDecl 0x7fe8b2034030 </usr/local/Cellar/llvm/5.0.0/bin/../lib/clang/5.0.0/include/__stddef_max_align_t.h:32:1, col:21> col:21 max_align_t 'long double'
| | `-BuiltinType 0x7fe8b1832700 'long double'
| |-NamespaceDecl 0x7fe8b2034088 prev 0x7fe8b1865658 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__nullptr:55:1, line:58:1> line:55:11 std
| | |-original Namespace 0x7fe8b1865658 'std'
| | `-TypedefDecl 0x7fe8b2034148 <line:57:5, col:31> col:31 referenced nullptr_t 'decltype(nullptr)':'nullptr_t'
| |   `-DecltypeType 0x7fe8b2034110 'decltype(nullptr)' sugar
| |     |-CXXNullPtrLiteralExpr 0x7fe8b20340f0 <col:22> 'nullptr_t'
| |     `-BuiltinType 0x7fe8b1832a10 'nullptr_t'
| |-NamespaceDecl 0x7fe8b2037e00 prev 0x7fe8b2034088 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:438:37, line:439:38> line:438:47 std
| | |-original Namespace 0x7fe8b1865658 'std'
| | `-NamespaceDecl 0x7fe8b2037e68 prev 0x7fe8b18656c0 <col:52, line:439:36> <scratch space>:343:1 __1 inline
| |   |-original Namespace 0x7fe8b18656c0 '__1'
| |   |-UsingDecl 0x7fe8b2037ef0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cstddef:49:1, col:9> col:9 ::ptrdiff_t
| |   |-UsingShadowDecl 0x7fe8b2037f40 <col:9> col:9 implicit Typedef 0x7fe8b2033f50 'ptrdiff_t'
| |   | `-<<<NULL>>>
| |   |-UsingDecl 0x7fe8b2037f90 <line:50:1, col:9> col:9 ::size_t
| |   |-UsingShadowDecl 0x7fe8b2037fe0 <col:9> col:9 implicit Typedef 0x7fe8b2033fc0 'size_t'
| |   | `-TypedefType 0x7fe8b205fe80 'size_t' sugar
| |   |   |-Typedef 0x7fe8b2033fc0 'size_t'
| |   |   `-BuiltinType 0x7fe8b1832680 'unsigned long'
| |   |-UsingDecl 0x7fe8b2038030 <line:55:1, col:9> col:9 ::max_align_t
| |   `-UsingShadowDecl 0x7fe8b2038080 <col:9> col:9 implicit Typedef 0x7fe8b2034030 'max_align_t'
| |     `-<<<NULL>>>
| |-NamespaceDecl 0x7fe8b20380c8 prev 0x7fe8b2037e00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:438:37, line:439:38> line:438:47 std
| | |-original Namespace 0x7fe8b1865658 'std'
| | `-NamespaceDecl 0x7fe8b2038130 prev 0x7fe8b2037e68 <col:52, line:439:36> <scratch space>:344:1 __1 inline
| |   |-original Namespace 0x7fe8b18656c0 '__1'
| |   |-ClassTemplateDecl 0x7fe8b2038440 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:398:1, col:61> col:61 pair
| |   | |-TemplateTypeParmDecl 0x7fe8b2038198 <col:11, col:17> col:17 class depth 0 index 0 _T1
| |   | |-TemplateTypeParmDecl 0x7fe8b2038238 <col:22, col:28> col:28 class depth 0 index 1 _T2
| |   | `-CXXRecordDecl 0x7fe8b20383a8 <col:33, col:61> col:61 struct pair
| |   |   `-TypeVisibilityAttr 0x7fe8b2038678 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |-ClassTemplateDecl 0x7fe8b2038808 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:399:1, col:49> col:49 reference_wrapper
| |   | |-TemplateTypeParmDecl 0x7fe8b20386c0 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b2038770 <col:22, col:49> col:49 class reference_wrapper
| |   |   `-TypeVisibilityAttr 0x7fe8b2038a18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |-ClassTemplateDecl 0x7fe8b2038ba8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:400:1, col:50> col:50 hash
| |   | |-TemplateTypeParmDecl 0x7fe8b2038a60 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b2038b10 <col:22, col:50> col:50 struct hash
| |   |   `-TypeVisibilityAttr 0x7fe8b2038db8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |-ClassTemplateDecl 0x7fe8b203a718 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:402:1, line:403:38> col:8 __void_t
| |   | |-TemplateTypeParmDecl 0x7fe8b203a600 <line:402:11> col:11 class depth 0 index 0
| |   | `-CXXRecordDecl 0x7fe8b203a680 <line:403:1, col:38> col:8 struct __void_t definition
| |   |   |-CXXRecordDecl 0x7fe8b203a990 <col:1, col:8> col:8 implicit struct __void_t
| |   |   `-TypedefDecl 0x7fe8b203aa38 <col:19, col:32> col:32 type 'void'
| |   |     `-BuiltinType 0x7fe8b1832520 'void'
| |   |-ClassTemplateDecl 0x7fe8b203abc8 <line:405:1, line:406:39> col:8 __identity
| |   | |-TemplateTypeParmDecl 0x7fe8b203aab0 <line:405:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b203ab30 <line:406:1, col:39> col:8 struct __identity definition
| |   |   |-CXXRecordDecl 0x7fe8b203ae40 <col:1, col:8> col:8 implicit struct __identity
| |   |   `-TypedefDecl 0x7fe8b203aee8 <col:21, col:33> col:33 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7fe8b203aaf0 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fe8b203aab0 '_Tp'
| |   |-ClassTemplateDecl 0x7fe8b203b118 <line:408:1, line:409:60> col:29 __dependent_type
| |   | |-TemplateTypeParmDecl 0x7fe8b203af60 <line:408:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fe8b203afd8 <col:22> col:26 '_Bool' depth 0 index 1
| |   | `-CXXRecordDecl 0x7fe8b203b080 <line:409:1, col:60> col:29 struct __dependent_type definition
| |   |   |-public '_Tp'
| |   |   |-TypeVisibilityAttr 0x7fe8b203b3e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fe8b203b468 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:409:1, col:29> col:29 implicit struct __dependent_type
| |   |-ClassTemplateDecl 0x7fe8b203b788 <line:411:1, line:412:63> col:33 conditional
| |   | |-NonTypeTemplateParmDecl 0x7fe8b203b530 <line:411:11, col:16> col:16 '_Bool' depth 0 index 0 _Bp
| |   | |-TemplateTypeParmDecl 0x7fe8b203b588 <col:21, col:27> col:27 referenced class depth 0 index 1 _If
| |   | |-TemplateTypeParmDecl 0x7fe8b203b600 <col:32, col:38> col:38 class depth 0 index 2 _Then
| |   | `-CXXRecordDecl 0x7fe8b203b6f0 <line:412:5, col:63> col:33 struct conditional definition
| |   |   |-TypeVisibilityAttr 0x7fe8b203ba90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fe8b203bad8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:412:5, col:33> col:33 implicit struct conditional
| |   |   `-TypedefDecl 0x7fe8b203bb80 <col:46, col:58> col:58 type '_If'
| |   |     `-TemplateTypeParmType 0x7fe8b203b5d0 '_If' dependent depth 0 index 1
| |   |       `-TemplateTypeParm 0x7fe8b203b588 '_If'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b203bef8 <line:413:1, line:414:84> col:33 struct conditional definition
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateTypeParmDecl 0x7fe8b203bbf8 <line:413:11, col:17> col:17 referenced class depth 0 index 0 _If
| |   | |-TemplateTypeParmDecl 0x7fe8b203bc68 <col:22, col:28> col:28 referenced class depth 0 index 1 _Then
| |   | |-TypeVisibilityAttr 0x7fe8b203c090 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fe8b203c230 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:414:5, col:33> col:33 implicit struct conditional
| |   | `-TypedefDecl 0x7fe8b203c2d8 <col:65, col:79> col:79 type '_Then'
| |   |   `-TemplateTypeParmType 0x7fe8b203bcb0 '_Then' dependent depth 0 index 1
| |   |     `-TemplateTypeParm 0x7fe8b203bc68 '_Then'
| |   |-TypeAliasTemplateDecl 0x7fe8b203d730 <line:417:1, col:106> col:45 conditional_t
| |   | |-NonTypeTemplateParmDecl 0x7fe8b203c360 <col:11, col:16> col:16 referenced '_Bool' depth 0 index 0 _Bp
| |   | |-TemplateTypeParmDecl 0x7fe8b203c3b8 <col:21, col:27> col:27 referenced class depth 0 index 1 _If
| |   | |-TemplateTypeParmDecl 0x7fe8b203c428 <col:32, col:38> col:38 referenced class depth 0 index 2 _Then
| |   | `-TypeAliasDecl 0x7fe8b203d6d0 <col:45, col:106> col:51 conditional_t 'typename conditional<_Bp, _If, _Then>::type'
| |   |   `-DependentNameType 0x7fe8b203d660 'typename conditional<_Bp, _If, _Then>::type' dependent
| |   |-ClassTemplateDecl 0x7fe8b203d940 <line:420:1, col:74> col:56 __lazy_enable_if
| |   | |-NonTypeTemplateParmDecl 0x7fe8b203d790 <col:11> col:15 '_Bool' depth 0 index 0
| |   | |-TemplateTypeParmDecl 0x7fe8b203d7e8 <col:17, col:23> col:23 class depth 0 index 1 _Tp
| |   | `-CXXRecordDecl 0x7fe8b203d8a8 <col:28, col:74> col:56 struct __lazy_enable_if definition
| |   |   |-TypeVisibilityAttr 0x7fe8b203dc00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fe8b203dc48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:420:28, col:56> col:56 implicit struct __lazy_enable_if
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b203df10 <line:421:1, col:111> col:50 struct __lazy_enable_if definition
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fe8b203dd00 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fe8b203e080 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fe8b203e1f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:421:22, col:50> col:50 implicit struct __lazy_enable_if
| |   | `-TypedefDecl 0x7fe8b203e370 <col:79, col:106> col:106 type 'typename _Tp::type'
| |   |   `-DependentNameType 0x7fe8b203e300 'typename _Tp::type' dependent
| |   |-ClassTemplateDecl 0x7fe8b203e5b0 <line:423:1, col:74> col:63 enable_if
| |   | |-NonTypeTemplateParmDecl 0x7fe8b203e3f8 <col:11> col:15 '_Bool' depth 0 index 0
| |   | |-TemplateTypeParmDecl 0x7fe8b203e460 <col:17, col:29> col:23 class depth 0 index 1 _Tp
| |   | | `-TemplateArgument type 'void'
| |   | |-CXXRecordDecl 0x7fe8b203e518 <col:35, col:74> col:63 struct enable_if definition
| |   | | |-TypeVisibilityAttr 0x7fe8b203e870 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | | `-CXXRecordDecl 0x7fe8b203e8b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:423:35, col:63> col:63 implicit struct enable_if
| |   | |-ClassTemplateSpecializationDecl 0x7fe8b21c4e80 <col:1, col:74> col:63 struct enable_if definition
| |   | | |-TemplateArgument integral 0
| |   | | |-TemplateArgument type 'double'
| |   | | `-CXXRecordDecl 0x7fe8b21c5110 prev 0x7fe8b21c4e80 <col:35, col:63> col:63 implicit struct enable_if
| |   | |-ClassTemplateSpecializationDecl 0x7fe8b21f4388 <col:1, col:74> col:63 struct enable_if definition
| |   | | |-TemplateArgument integral 0
| |   | | |-TemplateArgument type 'int'
| |   | | `-CXXRecordDecl 0x7fe8b21f4668 prev 0x7fe8b21f4388 <col:35, col:63> col:63 implicit struct enable_if
| |   | |-ClassTemplateSpecializationDecl 0x7fe8b21f6738 <col:1, col:74> col:63 struct enable_if definition
| |   | | |-TemplateArgument integral 0
| |   | | |-TemplateArgument type 'long long'
| |   | | `-CXXRecordDecl 0x7fe8b21f69d0 prev 0x7fe8b21f6738 <col:35, col:63> col:63 implicit struct enable_if
| |   | `-ClassTemplateSpecializationDecl 0x7fe8b21fb9e8 <col:1, col:74> col:63 struct enable_if definition
| |   |   |-TemplateArgument integral 0
| |   |   |-TemplateArgument type 'long'
| |   |   `-CXXRecordDecl 0x7fe8b21fbc80 prev 0x7fe8b21fb9e8 <col:35, col:63> col:63 implicit struct enable_if
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b203eb80 <line:424:1, col:89> col:50 struct enable_if definition
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fe8b203e970 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fe8b203ecf0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fe8b203ee60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:424:22, col:50> col:50 implicit struct enable_if
| |   | `-TypedefDecl 0x7fe8b203ef08 <col:72, col:84> col:84 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fe8b203e9b0 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fe8b203e970 '_Tp'
| |   |-TypeAliasTemplateDecl 0x7fe8b203f2a0 <line:427:1, col:89> col:39 enable_if_t
| |   | |-NonTypeTemplateParmDecl 0x7fe8b203ef90 <col:11, col:16> col:16 referenced '_Bool' depth 0 index 0 _Bp
| |   | |-TemplateTypeParmDecl 0x7fe8b203eff8 <col:21, col:33> col:27 referenced class depth 0 index 1 _Tp
| |   | | `-TemplateArgument type 'void'
| |   | `-TypeAliasDecl 0x7fe8b203f240 <col:39, col:89> col:45 enable_if_t 'typename enable_if<_Bp, _Tp>::type'
| |   |   `-DependentNameType 0x7fe8b203f1d0 'typename enable_if<_Bp, _Tp>::type' dependent
| |   |-FunctionTemplateDecl 0x7fe8b203f6c8 <line:433:1, line:440:1> line:437:1 addressof
| |   | |-TemplateTypeParmDecl 0x7fe8b203f2f0 <line:433:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fe8b203f630 <line:434:1, line:440:1> line:437:1 addressof '_Tp *(_Tp &) noexcept' inline
| |   |   |-ParmVarDecl 0x7fe8b203f4b8 <col:11, col:16> col:16 referenced __x '_Tp &'
| |   |   |-CompoundStmt 0x7fe8b203fa98 <line:438:1, line:440:1>
| |   |   | `-ReturnStmt 0x7fe8b203fa80 <line:439:5, col:35>
| |   |   |   `-CallExpr 0x7fe8b203fa50 <col:12, col:35> '<dependent type>'
| |   |   |     |-DeclRefExpr 0x7fe8b203fa00 <col:12> '<builtin fn type>' Function 0x7fe8b203f8a8 '__builtin_addressof' 'void *(void &) noexcept'
| |   |   |     `-DeclRefExpr 0x7fe8b203fa28 <col:32> '_Tp' lvalue ParmVar 0x7fe8b203f4b8 '__x' '_Tp &'
| |   |   |-AlwaysInlineAttr 0x7fe8b203f720 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   |-VisibilityAttr 0x7fe8b203f768 <col:51, col:74> Hidden
| |   |   `-NoSanitizeAttr 0x7fe8b203f778 <line:296:39, col:60> cfi
| |   |-FunctionTemplateDecl 0x7fe8b203fd80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:496:1, col:50> col:27 addressof
| |   | |-TemplateTypeParmDecl 0x7fe8b203fab8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fe8b203fce8 <col:22, col:50> col:27 addressof '_Tp *(const _Tp &&) noexcept' delete
| |   |   `-ParmVarDecl 0x7fe8b203fba8 <col:37, col:46> col:48 'const _Tp &&'
| |   |-CXXRecordDecl 0x7fe8b203fdd8 <line:499:1, col:28> col:8 referenced struct __two definition
| |   | |-CXXRecordDecl 0x7fe8b203fef8 <col:1, col:8> col:8 implicit struct __two
| |   | `-FieldDecl 0x7fe8b203ffd0 <col:15, col:26> col:20 __lx 'char [2]'
| |   |-ClassTemplateDecl 0x7fe8b20401f8 <line:503:1, line:515:1> line:504:29 integral_constant
| |   | |-TemplateTypeParmDecl 0x7fe8b2040038 <line:503:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fe8b20400b8 <col:22, col:26> col:26 referenced '_Tp' depth 0 index 1 __v
| |   | |-CXXRecordDecl 0x7fe8b2040160 <line:504:1, line:515:1> line:504:29 struct integral_constant definition
| |   | | |-TypeVisibilityAttr 0x7fe8b20404c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | | |-CXXRecordDecl 0x7fe8b2040508 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:504:1, col:29> col:29 implicit referenced struct integral_constant
| |   | | |-VarDecl 0x7fe8b2040c00 <line:506:5, col:53> col:45 referenced value 'const _Tp' static constexpr cinit
| |   | | | `-DeclRefExpr 0x7fe8b2040c60 <col:53> '_Tp' NonTypeTemplateParm 0x7fe8b20400b8 '__v' '_Tp'
| |   | | |-TypedefDecl 0x7fe8b2040c98 <line:507:5, col:31> col:31 referenced value_type '_Tp'
| |   | | | `-TemplateTypeParmType 0x7fe8b2040080 '_Tp' dependent depth 0 index 0
| |   | | |   `-TemplateTypeParm 0x7fe8b2040038 '_Tp'
| |   | | |-TypedefDecl 0x7fe8b2040d00 <line:508:5, col:31> col:31 type 'integral_constant<_Tp, __v>'
| |   | | | `-InjectedClassNameType 0x7fe8b2040430 'integral_constant<_Tp, __v>' dependent
| |   | | |   `-CXXRecord 0x7fe8b2040160 'integral_constant'
| |   | | |-CXXConversionDecl 0x7fe8b2040e98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:510:79> col:27 constexpr operator type-parameter-0-0 'std::__1::integral_constant::value_type (void) const noexcept'
| |   | | | |-CompoundStmt 0x7fe8b2041168 <col:65, col:79>
| |   | | | | `-ReturnStmt 0x7fe8b2041150 <col:66, col:73>
| |   | | | |   `-DeclRefExpr 0x7fe8b2041128 <col:73> 'const _Tp' lvalue Var 0x7fe8b2040c00 'value' 'const _Tp'
| |   | | | |-AlwaysInlineAttr 0x7fe8b2040f30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | | `-VisibilityAttr 0x7fe8b2040f78 <col:51, col:74> Hidden
| |   | | `-CXXMethodDecl 0x7fe8b2040fe8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:513:75> col:31 constexpr operator() 'std::__1::integral_constant::value_type (void) const noexcept'
| |   | |   |-CompoundStmt 0x7fe8b20411c8 <col:61, col:75>
| |   | |   | `-ReturnStmt 0x7fe8b20411b0 <col:62, col:69>
| |   | |   |   `-DeclRefExpr 0x7fe8b2041188 <col:69> 'const _Tp' lvalue Var 0x7fe8b2040c00 'value' 'const _Tp'
| |   | |   |-AlwaysInlineAttr 0x7fe8b2041080 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | |   `-VisibilityAttr 0x7fe8b20410c8 <col:51, col:74> Hidden
| |   | |-ClassTemplateSpecializationDecl 0x7fe8b20416a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:503:1, line:515:1> line:504:29 struct integral_constant definition
| |   | | |-TemplateArgument type '_Bool'
| |   | | |-TemplateArgument integral 1
| |   | | |-CXXRecordDecl 0x7fe8b2043858 prev 0x7fe8b20416a8 <col:1, col:29> col:29 implicit struct integral_constant
| |   | | |-VarDecl 0x7fe8b2043900 <line:506:5, col:53> col:45 value 'const _Bool':'const _Bool' static constexpr cinit
| |   | | | `-SubstNonTypeTemplateParmExpr 0x7fe8b2043988 <col:53> '_Bool'
| |   | | |   `-CXXBoolLiteralExpr 0x7fe8b2043970 <col:53> '_Bool' true
| |   | | |-TypedefDecl 0x7fe8b2043a18 <line:507:5, col:31> col:31 value_type '_Bool':'_Bool'
| |   | | | `-SubstTemplateTypeParmType 0x7fe8b2041670 '_Bool' sugar
| |   | | |   |-TemplateTypeParmType 0x7fe8b2040080 '_Tp' dependent depth 0 index 0
| |   | | |   | `-TemplateTypeParm 0x7fe8b2040038 '_Tp'
| |   | | |   `-BuiltinType 0x7fe8b1832540 '_Bool'
| |   | | |-TypedefDecl 0x7fe8b2043a80 <line:508:5, col:31> col:31 type 'struct std::__1::integral_constant<_Bool, true>'
| |   | | | `-RecordType 0x7fe8b20417b0 'struct std::__1::integral_constant<_Bool, true>'
| |   | | |   `-ClassTemplateSpecialization 0x7fe8b20416a8 'integral_constant'
| |   | | |-CXXConversionDecl 0x7fe8b2043b68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:510:79> col:27 constexpr operator bool 'std::__1::integral_constant<_Bool, true>::value_type (void) const noexcept'
| |   | | | `-AlwaysInlineAttr 0x7fe8b2043c38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-CXXMethodDecl 0x7fe8b2043cb0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:513:75> col:31 constexpr operator() 'std::__1::integral_constant<_Bool, true>::value_type (void) const noexcept'
| |   | |   `-AlwaysInlineAttr 0x7fe8b2043d58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | |-ClassTemplateSpecializationDecl 0x7fe8b2041980 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:503:1, line:515:1> line:504:29 struct integral_constant definition
| |   | | |-TemplateArgument type '_Bool'
| |   | | |-TemplateArgument integral 0
| |   | | |-CXXRecordDecl 0x7fe8b20426a8 prev 0x7fe8b2041980 <col:1, col:29> col:29 implicit struct integral_constant
| |   | | |-VarDecl 0x7fe8b2042750 <line:506:5, col:53> col:45 referenced value 'const _Bool':'const _Bool' static constexpr cinit
| |   | | | `-SubstNonTypeTemplateParmExpr 0x7fe8b20427d8 <col:53> '_Bool'
| |   | | |   `-CXXBoolLiteralExpr 0x7fe8b20427c0 <col:53> '_Bool' false
| |   | | |-TypedefDecl 0x7fe8b2042868 <line:507:5, col:31> col:31 value_type '_Bool':'_Bool'
| |   | | | `-SubstTemplateTypeParmType 0x7fe8b2041670 '_Bool' sugar
| |   | | |   |-TemplateTypeParmType 0x7fe8b2040080 '_Tp' dependent depth 0 index 0
| |   | | |   | `-TemplateTypeParm 0x7fe8b2040038 '_Tp'
| |   | | |   `-BuiltinType 0x7fe8b1832540 '_Bool'
| |   | | |-TypedefDecl 0x7fe8b20428d0 <line:508:5, col:31> col:31 type 'struct std::__1::integral_constant<_Bool, false>'
| |   | | | `-RecordType 0x7fe8b2041a80 'struct std::__1::integral_constant<_Bool, false>'
| |   | | |   `-ClassTemplateSpecialization 0x7fe8b2041980 'integral_constant'
| |   | | |-CXXConversionDecl 0x7fe8b2042a08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:510:79> col:27 constexpr operator bool 'std::__1::integral_constant<_Bool, false>::value_type (void) const noexcept'
| |   | | | `-AlwaysInlineAttr 0x7fe8b2042ad8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-CXXMethodDecl 0x7fe8b2042b50 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:513:75> col:31 constexpr operator() 'std::__1::integral_constant<_Bool, false>::value_type (void) const noexcept'
| |   | |   `-AlwaysInlineAttr 0x7fe8b2043400 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | `-ClassTemplateSpecializationDecl 0x7fe8b208df00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:503:1, line:515:1> line:504:29 struct integral_constant definition
| |   |   |-TemplateArgument type 'unsigned long'
| |   |   |-TemplateArgument integral 0
| |   |   |-CXXRecordDecl 0x7fe8b208e130 prev 0x7fe8b208df00 <col:1, col:29> col:29 implicit struct integral_constant
| |   |   |-VarDecl 0x7fe8b208e200 <line:506:5, col:53> col:45 value 'const unsigned long':'const unsigned long' static constexpr cinit
| |   |   | `-SubstNonTypeTemplateParmExpr 0x7fe8b208e290 <col:53> 'unsigned long'
| |   |   |   `-IntegerLiteral 0x7fe8b208e270 <col:53> 'unsigned long' 0
| |   |   |-TypedefDecl 0x7fe8b208e320 <line:507:5, col:31> col:31 value_type 'unsigned long':'unsigned long'
| |   |   | `-SubstTemplateTypeParmType 0x7fe8b208deb0 'unsigned long' sugar
| |   |   |   |-TemplateTypeParmType 0x7fe8b2040080 '_Tp' dependent depth 0 index 0
| |   |   |   | `-TemplateTypeParm 0x7fe8b2040038 '_Tp'
| |   |   |   `-BuiltinType 0x7fe8b1832680 'unsigned long'
| |   |   |-TypedefDecl 0x7fe8b208e388 <line:508:5, col:31> col:31 type 'struct std::__1::integral_constant<unsigned long, 0>'
| |   |   | `-RecordType 0x7fe8b208e000 'struct std::__1::integral_constant<unsigned long, 0>'
| |   |   |   `-ClassTemplateSpecialization 0x7fe8b208df00 'integral_constant'
| |   |   |-CXXConversionDecl 0x7fe8b208e4b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:510:79> col:27 constexpr operator unsigned long 'std::__1::integral_constant<unsigned long, 0>::value_type (void) const noexcept'
| |   |   | `-AlwaysInlineAttr 0x7fe8b208e588 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-CXXMethodDecl 0x7fe8b208e600 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:513:75> col:31 constexpr operator() 'std::__1::integral_constant<unsigned long, 0>::value_type (void) const noexcept'
| |   |     `-AlwaysInlineAttr 0x7fe8b208e6a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |-VarDecl 0x7fe8b2041570 parent 0x7fe8b2040160 prev 0x7fe8b2040c00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:517:1, line:518:58> col:58 value 'const _Tp' constexpr
| |   |-TypedefDecl 0x7fe8b20418c0 <line:528:1, col:38> col:38 referenced true_type 'integral_constant<_Bool, (true)>':'struct std::__1::integral_constant<_Bool, true>'
| |   | `-TemplateSpecializationType 0x7fe8b20417d0 'integral_constant<_Bool, (true)>' sugar integral_constant
| |   |   |-TemplateArgument type '_Bool'
| |   |   |-TemplateArgument expr
| |   |   | `-ParenExpr 0x7fe8b2041638 <line:525:59, col:63> '_Bool'
| |   |   |   `-CXXBoolLiteralExpr 0x7fe8b2041620 <line:528:31> '_Bool' true
| |   |   `-RecordType 0x7fe8b20417b0 'struct std::__1::integral_constant<_Bool, true>'
| |   |     `-ClassTemplateSpecialization 0x7fe8b20416a8 'integral_constant'
| |   |-TypedefDecl 0x7fe8b2041b90 <line:529:1, col:38> col:38 referenced false_type 'integral_constant<_Bool, (false)>':'struct std::__1::integral_constant<_Bool, false>'
| |   | `-TemplateSpecializationType 0x7fe8b2041aa0 'integral_constant<_Bool, (false)>' sugar integral_constant
| |   |   |-TemplateArgument type '_Bool'
| |   |   |-TemplateArgument expr
| |   |   | `-ParenExpr 0x7fe8b2041940 <line:525:59, col:63> '_Bool'
| |   |   |   `-CXXBoolLiteralExpr 0x7fe8b2041928 <line:529:31> '_Bool' false
| |   |   `-RecordType 0x7fe8b2041a80 'struct std::__1::integral_constant<_Bool, false>'
| |   |     `-ClassTemplateSpecialization 0x7fe8b2041980 'integral_constant'
| |   |-ClassTemplateDecl 0x7fe8b2041db0 <line:535:1, line:536:8> col:8 __lazy_and_impl
| |   | |-NonTypeTemplateParmDecl 0x7fe8b2041c00 <line:535:11, col:16> col:16 '_Bool' depth 0 index 0 _Last
| |   | |-TemplateTypeParmDecl 0x7fe8b2041c58 <col:23, col:32> col:32 class depth 0 index 1 ... _Preds
| |   | |-CXXRecordDecl 0x7fe8b2041d18 <line:536:1, col:8> col:8 struct __lazy_and_impl
| |   | `-ClassTemplateSpecialization 0x7fe8b2043578 '__lazy_and_impl'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b2042350 <line:538:1, line:539:56> col:8 struct __lazy_and_impl definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0...'
| |   | |-TemplateTypeParmDecl 0x7fe8b2042098 <line:538:11, col:20> col:20 referenced class depth 0 index 0 ... _Preds
| |   | `-CXXRecordDecl 0x7fe8b2043498 <line:539:1, col:8> col:8 implicit struct __lazy_and_impl
| |   |-ClassTemplateSpecializationDecl 0x7fe8b2043578 <line:541:1, line:542:43> col:8 struct __lazy_and_impl definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument pack
| |   | `-CXXRecordDecl 0x7fe8b2043df0 <col:1, col:8> col:8 implicit struct __lazy_and_impl
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b20440c0 <line:544:1, line:545:84> col:8 struct __lazy_and_impl definition
| |   | |-public 'integral_constant<_Bool, _Pred::type::value>'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fe8b2043ea8 <line:544:11, col:17> col:17 referenced class depth 0 index 0 _Pred
| |   | `-CXXRecordDecl 0x7fe8b20449f8 <line:545:1, col:8> col:8 implicit struct __lazy_and_impl
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b2044de0 <line:547:1, line:548:88> col:8 struct __lazy_and_impl definition
| |   | |-public '__lazy_and_impl<_Hp::type::value, _Tp...>'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | `-TemplateArgument type 'type-parameter-0-1...'
| |   | |-TemplateTypeParmDecl 0x7fe8b2044ab0 <line:547:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-TemplateTypeParmDecl 0x7fe8b2044b18 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Tp
| |   | `-CXXRecordDecl 0x7fe8b2045378 <line:548:1, col:8> col:8 implicit struct __lazy_and_impl
| |   |-ClassTemplateDecl 0x7fe8b20455c0 <line:550:1, line:551:64> col:8 __lazy_and
| |   | |-TemplateTypeParmDecl 0x7fe8b2045430 <line:550:11, col:17> col:17 class depth 0 index 0 _P1
| |   | |-TemplateTypeParmDecl 0x7fe8b2045498 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Pr
| |   | `-CXXRecordDecl 0x7fe8b2045528 <line:551:1, col:64> col:8 struct __lazy_and definition
| |   |   |-public '__lazy_and_impl<_P1::type::value, _Pr...>'
| |   |   `-CXXRecordDecl 0x7fe8b2045af8 <col:1, col:8> col:8 implicit struct __lazy_and
| |   |-ClassTemplateDecl 0x7fe8b2045d40 <line:555:1, line:556:8> col:8 __lazy_or_impl
| |   | |-NonTypeTemplateParmDecl 0x7fe8b2045bc0 <line:555:11, col:16> col:16 '_Bool' depth 0 index 0 _List
| |   | |-TemplateTypeParmDecl 0x7fe8b2045c18 <col:23, col:32> col:32 class depth 0 index 1 ... _Preds
| |   | |-CXXRecordDecl 0x7fe8b2045ca8 <line:556:1, col:8> col:8 struct __lazy_or_impl
| |   | `-ClassTemplateSpecialization 0x7fe8b2046630 '__lazy_or_impl'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b2046250 <line:558:1, line:559:53> col:8 struct __lazy_or_impl definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0...'
| |   | |-TemplateTypeParmDecl 0x7fe8b2045ff8 <line:558:11, col:20> col:20 referenced class depth 0 index 0 ... _Preds
| |   | `-CXXRecordDecl 0x7fe8b2046550 <line:559:1, col:8> col:8 implicit struct __lazy_or_impl
| |   |-ClassTemplateSpecializationDecl 0x7fe8b2046630 <line:561:1, line:562:44> col:8 struct __lazy_or_impl definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument pack
| |   | `-CXXRecordDecl 0x7fe8b20468b8 <col:1, col:8> col:8 implicit struct __lazy_or_impl
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b2046ca0 <line:564:1, line:566:53> line:565:8 struct __lazy_or_impl definition
| |   | |-public '__lazy_or_impl<_Hp::type::value, _Tp...>'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | `-TemplateArgument type 'type-parameter-0-1...'
| |   | |-TemplateTypeParmDecl 0x7fe8b2046970 <line:564:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-TemplateTypeParmDecl 0x7fe8b20469d8 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Tp
| |   | `-CXXRecordDecl 0x7fe8b2047238 <line:565:1, col:8> col:8 implicit struct __lazy_or_impl
| |   |-ClassTemplateDecl 0x7fe8b2047480 <line:568:1, line:569:62> col:8 __lazy_or
| |   | |-TemplateTypeParmDecl 0x7fe8b20472f0 <line:568:11, col:17> col:17 class depth 0 index 0 _P1
| |   | |-TemplateTypeParmDecl 0x7fe8b2047358 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Pr
| |   | `-CXXRecordDecl 0x7fe8b20473e8 <line:569:1, col:62> col:8 struct __lazy_or definition
| |   |   |-public '__lazy_or_impl<_P1::type::value, _Pr...>'
| |   |   `-CXXRecordDecl 0x7fe8b2047988 <col:1, col:8> col:8 implicit struct __lazy_or
| |   |-ClassTemplateDecl 0x7fe8b2047b58 <line:573:1, line:574:67> col:8 __lazy_not
| |   | |-TemplateTypeParmDecl 0x7fe8b2047a40 <line:573:11, col:17> col:17 class depth 0 index 0 _Pred
| |   | `-CXXRecordDecl 0x7fe8b2047ac0 <line:574:1, col:67> col:8 struct __lazy_not definition
| |   |   |-public 'integral_constant<_Bool, !_Pred::type::value>'
| |   |   `-CXXRecordDecl 0x7fe8b2048018 <col:1, col:8> col:8 implicit struct __lazy_not
| |   |-ClassTemplateDecl 0x7fe8b20481e8 <line:577:1, col:27> col:27 __and_
| |   | |-TemplateTypeParmDecl 0x7fe8b20480d0 <col:10> col:10 class depth 0 index 0 ...
| |   | |-CXXRecordDecl 0x7fe8b2048150 <col:20, col:27> col:27 struct __and_
| |   | `-ClassTemplateSpecialization 0x7fe8b2048468 '__and_'
| |   |-ClassTemplateSpecializationDecl 0x7fe8b2048468 <line:578:1, col:41> col:19 struct __and_ definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument pack
| |   | `-CXXRecordDecl 0x7fe8b20486a0 <col:12, col:19> col:19 implicit struct __and_
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b2048908 <line:580:1, col:47> col:28 struct __and_ definition
| |   | |-public '_B0'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fe8b2048758 <col:10, col:16> col:16 referenced class depth 0 index 0 _B0
| |   | `-CXXRecordDecl 0x7fe8b2048bb0 <col:21, col:28> col:28 implicit struct __and_
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b2048ef8 <line:582:1, line:583:68> col:8 struct __and_ definition
| |   | |-public 'conditional<_B0::value, _B1, _B0>::type'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | `-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateTypeParmDecl 0x7fe8b2048c68 <line:582:10, col:16> col:16 referenced class depth 0 index 0 _B0
| |   | |-TemplateTypeParmDecl 0x7fe8b2048cd8 <col:21, col:27> col:27 referenced class depth 0 index 1 _B1
| |   | `-CXXRecordDecl 0x7fe8b2049500 <line:583:1, col:8> col:8 implicit struct __and_
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b204e6b8 <line:585:1, line:587:73> line:586:8 struct __and_ definition
| |   | |-public 'conditional<_B0::value, __and_<_B1, _B2, _Bn...>, _B0>::type'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | |-TemplateArgument type 'type-parameter-0-1'
| |   | | |-TemplateArgument type 'type-parameter-0-2'
| |   | | `-TemplateArgument type 'type-parameter-0-3...'
| |   | |-TemplateTypeParmDecl 0x7fe8b20495b8 <line:585:10, col:16> col:16 referenced class depth 0 index 0 _B0
| |   | |-TemplateTypeParmDecl 0x7fe8b2049628 <col:21, col:27> col:27 referenced class depth 0 index 1 _B1
| |   | |-TemplateTypeParmDecl 0x7fe8b2049698 <col:32, col:38> col:38 referenced class depth 0 index 2 _B2
| |   | |-TemplateTypeParmDecl 0x7fe8b2049708 <col:43, col:52> col:52 referenced class depth 0 index 3 ... _Bn
| |   | `-CXXRecordDecl 0x7fe8b204eff0 <line:586:1, col:8> col:8 implicit struct __and_
| |   |-ClassTemplateDecl 0x7fe8b204f1c8 <line:590:1, col:27> col:27 __or_
| |   | |-TemplateTypeParmDecl 0x7fe8b204f0a8 <col:10> col:10 class depth 0 index 0 ...
| |   | |-CXXRecordDecl 0x7fe8b204f130 <col:20, col:27> col:27 struct __or_
| |   | `-ClassTemplateSpecialization 0x7fe8b204f488 '__or_'
| |   |-ClassTemplateSpecializationDecl 0x7fe8b204f488 <line:591:1, col:41> col:19 struct __or_ definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument pack
| |   | `-CXXRecordDecl 0x7fe8b204f6c0 <col:12, col:19> col:19 implicit struct __or_
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b204f918 <line:593:1, col:46> col:28 struct __or_ definition
| |   | |-public '_B0'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fe8b204f778 <col:10, col:16> col:16 referenced class depth 0 index 0 _B0
| |   | `-CXXRecordDecl 0x7fe8b204fbc0 <col:21, col:28> col:28 implicit struct __or_
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b204ff08 <line:595:1, line:596:67> col:8 struct __or_ definition
| |   | |-public 'conditional<_B0::value, _B0, _B1>::type'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | `-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateTypeParmDecl 0x7fe8b204fc78 <line:595:10, col:16> col:16 referenced class depth 0 index 0 _B0
| |   | |-TemplateTypeParmDecl 0x7fe8b204fce8 <col:21, col:27> col:27 referenced class depth 0 index 1 _B1
| |   | `-CXXRecordDecl 0x7fe8b2050510 <line:596:1, col:8> col:8 implicit struct __or_
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b2050a68 <line:598:1, line:600:73> line:599:8 struct __or_ definition
| |   | |-public 'conditional<_B0::value, _B0, __or_<_B1, _B2, _Bn...> >::type'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | |-TemplateArgument type 'type-parameter-0-1'
| |   | | |-TemplateArgument type 'type-parameter-0-2'
| |   | | `-TemplateArgument type 'type-parameter-0-3...'
| |   | |-TemplateTypeParmDecl 0x7fe8b20505c8 <line:598:10, col:16> col:16 referenced class depth 0 index 0 _B0
| |   | |-TemplateTypeParmDecl 0x7fe8b2050638 <col:21, col:27> col:27 referenced class depth 0 index 1 _B1
| |   | |-TemplateTypeParmDecl 0x7fe8b20506a8 <col:32, col:38> col:38 referenced class depth 0 index 2 _B2
| |   | |-TemplateTypeParmDecl 0x7fe8b2050718 <col:43, col:52> col:52 referenced class depth 0 index 3 ... _Bn
| |   | `-CXXRecordDecl 0x7fe8b2052400 <line:599:1, col:8> col:8 implicit struct __or_
| |   |-ClassTemplateDecl 0x7fe8b20525d8 <line:603:1, line:604:71> col:8 __not_
| |   | |-TemplateTypeParmDecl 0x7fe8b20524b8 <line:603:10, col:16> col:16 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b2052540 <line:604:1, col:71> col:8 struct __not_ definition
| |   |   |-public 'conditional<_Tp::value, false_type, true_type>::type'
| |   |   `-CXXRecordDecl 0x7fe8b2052b80 <col:1, col:8> col:8 implicit struct __not_
| |   |-ClassTemplateDecl 0x7fe8b2052d88 <line:610:1, col:91> col:50 is_const
| |   | |-TemplateTypeParmDecl 0x7fe8b2052c38 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b2052cf0 <col:22, col:91> col:50 struct is_const definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TypeVisibilityAttr 0x7fe8b2053000 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fe8b2053088 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:610:22, col:50> col:50 implicit struct is_const
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b20532d8 <line:611:1, col:90> col:50 struct is_const definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'const type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fe8b2053140 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fe8b2053438 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fe8b20535b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:611:22, col:50> col:50 implicit struct is_const
| |   |-ClassTemplateDecl 0x7fe8b20537b8 <line:620:1, col:97> col:50 is_volatile
| |   | |-TemplateTypeParmDecl 0x7fe8b2053668 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b2053720 <col:22, col:97> col:50 struct is_volatile definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TypeVisibilityAttr 0x7fe8b2053a30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fe8b2053ab8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:620:22, col:50> col:50 implicit struct is_volatile
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b2053d08 <line:621:1, col:96> col:50 struct is_volatile definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'volatile type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fe8b2053b70 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fe8b2053e48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fe8b2053fc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:621:22, col:50> col:50 implicit struct is_volatile
| |   |-ClassTemplateDecl 0x7fe8b20541c8 <line:630:1, col:92> col:50 remove_const
| |   | |-TemplateTypeParmDecl 0x7fe8b2054078 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fe8b2054130 <col:22, col:92> col:50 struct remove_const definition
| |   | | |-TypeVisibilityAttr 0x7fe8b203c668 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | | |-CXXRecordDecl 0x7fe8b203c6b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:630:22, col:50> col:50 implicit struct remove_const
| |   | | `-TypedefDecl 0x7fe8b203c758 <col:75, col:87> col:87 type '_Tp'
| |   | |   `-TemplateTypeParmType 0x7fe8b20540c0 '_Tp' dependent depth 0 index 0
| |   | |     `-TemplateTypeParm 0x7fe8b2054078 '_Tp'
| |   | `-ClassTemplateSpecializationDecl 0x7fe8b21c3f38 <col:1, col:92> col:50 struct remove_const definition
| |   |   |-TemplateArgument type 'double'
| |   |   |-CXXRecordDecl 0x7fe8b21c4180 prev 0x7fe8b21c3f38 <col:22, col:50> col:50 implicit struct remove_const
| |   |   `-TypedefDecl 0x7fe8b21c4258 <col:75, col:87> col:87 referenced type 'double':'double'
| |   |     `-SubstTemplateTypeParmType 0x7fe8b21c4220 'double' sugar
| |   |       |-TemplateTypeParmType 0x7fe8b20540c0 '_Tp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fe8b2054078 '_Tp'
| |   |       `-BuiltinType 0x7fe8b18326e0 'double'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b203c968 <line:631:1, col:92> col:50 struct remove_const definition
| |   | |-TemplateArgument type 'const type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fe8b203c7d0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fe8b203caa8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fe8b203cbe0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:631:22, col:50> col:50 implicit struct remove_const
| |   | `-TypedefDecl 0x7fe8b203cc88 <col:75, col:87> col:87 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fe8b203c810 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fe8b203c7d0 '_Tp'
| |   |-TypeAliasTemplateDecl 0x7fe8b203cf40 <line:633:1, col:73> col:22 remove_const_t
| |   | |-TemplateTypeParmDecl 0x7fe8b203cd00 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fe8b203cee0 <col:22, col:73> col:28 remove_const_t 'typename remove_const<_Tp>::type'
| |   |   `-DependentNameType 0x7fe8b203ce70 'typename remove_const<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fe8b203d0d8 <line:638:1, col:98> col:50 remove_volatile
| |   | |-TemplateTypeParmDecl 0x7fe8b203cf90 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fe8b203d040 <col:22, col:98> col:50 struct remove_volatile definition
| |   | | |-TypeVisibilityAttr 0x7fe8b203d350 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | | |-CXXRecordDecl 0x7fe8b203d398 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:638:22, col:50> col:50 implicit struct remove_volatile
| |   | | `-TypedefDecl 0x7fe8b203d440 <col:81, col:93> col:93 type '_Tp'
| |   | |   `-TemplateTypeParmType 0x7fe8b203cfd0 '_Tp' dependent depth 0 index 0
| |   | |     `-TemplateTypeParm 0x7fe8b203cf90 '_Tp'
| |   | `-ClassTemplateSpecializationDecl 0x7fe8b21c4340 <col:1, col:98> col:50 struct remove_volatile definition
| |   |   |-TemplateArgument type 'double'
| |   |   |-CXXRecordDecl 0x7fe8b21c4590 prev 0x7fe8b21c4340 <col:22, col:50> col:50 implicit struct remove_volatile
| |   |   `-TypedefDecl 0x7fe8b21c4668 <col:81, col:93> col:93 referenced type 'double':'double'
| |   |     `-SubstTemplateTypeParmType 0x7fe8b21c4630 'double' sugar
| |   |       |-TemplateTypeParmType 0x7fe8b203cfd0 '_Tp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fe8b203cf90 '_Tp'
| |   |       `-BuiltinType 0x7fe8b18326e0 'double'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b2056488 <line:639:1, col:98> col:50 struct remove_volatile definition
| |   | |-TemplateArgument type 'volatile type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fe8b203d4b8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fe8b20565c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fe8b2056700 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:639:22, col:50> col:50 implicit struct remove_volatile
| |   | `-TypedefDecl 0x7fe8b20567a8 <col:81, col:93> col:93 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fe8b203d500 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fe8b203d4b8 '_Tp'
| |   |-TypeAliasTemplateDecl 0x7fe8b2056a60 <line:641:1, col:79> col:22 remove_volatile_t
| |   | |-TemplateTypeParmDecl 0x7fe8b2056820 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fe8b2056a00 <col:22, col:79> col:28 remove_volatile_t 'typename remove_volatile<_Tp>::type'
| |   |   `-DependentNameType 0x7fe8b2056990 'typename remove_volatile<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fe8b2056bf8 <line:646:1, line:647:80> line:646:50 remove_cv
| |   | |-TemplateTypeParmDecl 0x7fe8b2056ab0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fe8b2056b60 <col:22, line:647:80> line:646:50 struct remove_cv definition
| |   | | |-TypeVisibilityAttr 0x7fe8b2056e70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | | |-CXXRecordDecl 0x7fe8b2056eb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:646:22, col:50> col:50 implicit struct remove_cv
| |   | | `-TypedefDecl 0x7fe8b2057210 <line:647:2, col:75> col:75 type 'typename remove_volatile<typename remove_const<_Tp>::type>::type'
| |   | |   `-DependentNameType 0x7fe8b20571a0 'typename remove_volatile<typename remove_const<_Tp>::type>::type' dependent
| |   | `-ClassTemplateSpecializationDecl 0x7fe8b21c3c58 <line:646:1, line:647:80> line:646:50 struct remove_cv definition
| |   |   |-TemplateArgument type 'double'
| |   |   |-CXXRecordDecl 0x7fe8b21c3e68 prev 0x7fe8b21c3c58 <col:22, col:50> col:50 implicit struct remove_cv
| |   |   `-TypedefDecl 0x7fe8b21c4750 <line:647:2, col:75> col:75 referenced type 'typename remove_volatile<typename remove_const<double>::type>::type':'double'
| |   |     `-ElaboratedType 0x7fe8b21c4700 'typename remove_volatile<typename remove_const<double>::type>::type' sugar
| |   |       `-TypedefType 0x7fe8b21c46e0 'std::__1::remove_volatile<double>::type' sugar
| |   |         |-Typedef 0x7fe8b21c4668 'type'
| |   |         `-SubstTemplateTypeParmType 0x7fe8b21c4630 'double' sugar
| |   |           |-TemplateTypeParmType 0x7fe8b203cfd0 '_Tp' dependent depth 0 index 0
| |   |           | `-TemplateTypeParm 0x7fe8b203cf90 '_Tp'
| |   |           `-BuiltinType 0x7fe8b18326e0 'double'
| |   |-TypeAliasTemplateDecl 0x7fe8b20574d0 <line:649:1, col:67> col:22 remove_cv_t
| |   | |-TemplateTypeParmDecl 0x7fe8b2057288 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fe8b2057470 <col:22, col:67> col:28 remove_cv_t 'typename remove_cv<_Tp>::type'
| |   |   `-DependentNameType 0x7fe8b2057400 'typename remove_cv<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fe8b2057638 <line:654:1, col:73> col:29 __libcpp_is_void
| |   | |-TemplateTypeParmDecl 0x7fe8b2057520 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fe8b20575a0 <col:22, col:73> col:29 struct __libcpp_is_void definition
| |   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | | `-CXXRecordDecl 0x7fe8b20578f0 <col:22, col:29> col:29 implicit struct __libcpp_is_void
| |   | `-ClassTemplateSpecialization 0x7fe8b20579c8 '__libcpp_is_void'
| |   |-ClassTemplateSpecializationDecl 0x7fe8b20579c8 <line:655:1, col:72> col:29 struct __libcpp_is_void definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'void'
| |   | `-CXXRecordDecl 0x7fe8b2057c30 <col:22, col:29> col:29 implicit struct __libcpp_is_void
| |   |-ClassTemplateDecl 0x7fe8b2057e38 <line:657:1, line:658:63> line:657:50 is_void
| |   | |-TemplateTypeParmDecl 0x7fe8b2057ce8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b2057da0 <col:22, line:658:63> line:657:50 struct is_void definition
| |   |   |-public '__libcpp_is_void<typename remove_cv<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fe8b20580b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fe8b2058318 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:657:22, col:50> col:50 implicit struct is_void
| |   |-ClassTemplateDecl 0x7fe8b2058518 <line:667:1, col:76> col:29 __is_nullptr_t_impl
| |   | |-TemplateTypeParmDecl 0x7fe8b2058400 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fe8b2058480 <col:22, col:76> col:29 struct __is_nullptr_t_impl definition
| |   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | | `-CXXRecordDecl 0x7fe8b20587d0 <col:22, col:29> col:29 implicit struct __is_nullptr_t_impl
| |   | `-ClassTemplateSpecialization 0x7fe8b20588d0 '__is_nullptr_t_impl'
| |   |-ClassTemplateSpecializationDecl 0x7fe8b20588d0 <line:668:1, col:80> col:29 struct __is_nullptr_t_impl definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'nullptr_t'
| |   | `-CXXRecordDecl 0x7fe8b2058b40 <col:22, col:29> col:29 implicit struct __is_nullptr_t_impl
| |   |-ClassTemplateDecl 0x7fe8b2058d48 <line:670:1, line:671:66> line:670:50 __is_nullptr_t
| |   | |-TemplateTypeParmDecl 0x7fe8b2058bf8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b2058cb0 <col:22, line:671:66> line:670:50 struct __is_nullptr_t definition
| |   |   |-public '__is_nullptr_t_impl<typename remove_cv<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fe8b2058fc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fe8b2059228 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:670:22, col:50> col:50 implicit struct __is_nullptr_t
| |   |-ClassTemplateDecl 0x7fe8b2059498 <line:674:1, line:675:66> line:674:50 is_null_pointer
| |   | |-TemplateTypeParmDecl 0x7fe8b20592e0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b2059400 <col:22, line:675:66> line:674:50 struct is_null_pointer definition
| |   |   |-public '__is_nullptr_t_impl<typename remove_cv<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fe8b2059710 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fe8b2059928 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:674:22, col:50> col:50 implicit struct is_null_pointer
| |   |-ClassTemplateDecl 0x7fe8b2059af8 <line:685:1, col:91> col:29 __libcpp_is_integral
| |   | |-TemplateTypeParmDecl 0x7fe8b20599e0 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fe8b2059a60 <col:22, col:91> col:29 struct __libcpp_is_integral definition
| |   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | | `-CXXRecordDecl 0x7fe8b2059db0 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   | |-ClassTemplateSpecialization 0x7fe8b2059e88 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fe8b205a1c8 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fe8b205a510 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fe8b205a860 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fe8b205aba8 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fe8b205aee8 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fe8b205b228 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fe8b205b588 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fe8b205b8d0 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fe8b205bc20 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fe8b205bf70 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fe8b205c2c0 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fe8b205c610 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fe8b205c960 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fe8b205ccb0 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fe8b205d020 '__libcpp_is_integral'
| |   | |-ClassTemplateSpecialization 0x7fe8b205d400 '__libcpp_is_integral'
| |   | `-ClassTemplateSpecializationDecl 0x7fe8b21c4840 <col:1, col:91> col:29 struct __libcpp_is_integral definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TemplateArgument type 'double'
| |   |   `-CXXRecordDecl 0x7fe8b21c4a60 prev 0x7fe8b21c4840 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fe8b2059e88 <line:686:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type '_Bool'
| |   | `-CXXRecordDecl 0x7fe8b205a0f0 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fe8b205a1c8 <line:687:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'char'
| |   | `-CXXRecordDecl 0x7fe8b205a430 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fe8b205a510 <line:688:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'signed char'
| |   | `-CXXRecordDecl 0x7fe8b205a780 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fe8b205a860 <line:689:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'unsigned char'
| |   | `-CXXRecordDecl 0x7fe8b205aad0 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fe8b205aba8 <line:690:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'wchar_t'
| |   | `-CXXRecordDecl 0x7fe8b205ae10 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fe8b205aee8 <line:692:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'char16_t'
| |   | `-CXXRecordDecl 0x7fe8b205b150 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fe8b205b228 <line:693:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'char32_t'
| |   | `-CXXRecordDecl 0x7fe8b205b4a8 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fe8b205b588 <line:695:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'short'
| |   | `-CXXRecordDecl 0x7fe8b205b7f0 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fe8b205b8d0 <line:696:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'unsigned short'
| |   | `-CXXRecordDecl 0x7fe8b205bb40 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fe8b205bc20 <line:697:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'int'
| |   | `-CXXRecordDecl 0x7fe8b205be90 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fe8b205bf70 <line:698:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'unsigned int'
| |   | `-CXXRecordDecl 0x7fe8b205c1e0 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fe8b205c2c0 <line:699:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'long'
| |   | `-CXXRecordDecl 0x7fe8b205c530 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fe8b205c610 <line:700:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'unsigned long'
| |   | `-CXXRecordDecl 0x7fe8b205c880 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fe8b205c960 <line:701:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'long long'
| |   | `-CXXRecordDecl 0x7fe8b205cbd0 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fe8b205ccb0 <line:702:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'unsigned long long'
| |   | `-CXXRecordDecl 0x7fe8b205cf20 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fe8b205d020 <line:704:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type '__int128'
| |   | `-CXXRecordDecl 0x7fe8b205d290 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateSpecializationDecl 0x7fe8b205d400 <line:705:1, col:90> col:29 struct __libcpp_is_integral definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'unsigned __int128'
| |   | `-CXXRecordDecl 0x7fe8b205d670 <col:22, col:29> col:29 implicit struct __libcpp_is_integral
| |   |-ClassTemplateDecl 0x7fe8b205d878 <line:708:1, line:709:67> line:708:50 is_integral
| |   | |-TemplateTypeParmDecl 0x7fe8b205d728 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fe8b205d7e0 <col:22, line:709:67> line:708:50 struct is_integral definition
| |   | | |-public '__libcpp_is_integral<typename remove_cv<_Tp>::type>'
| |   | | |-TypeVisibilityAttr 0x7fe8b205daf0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | | `-CXXRecordDecl 0x7fe8b205dd58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:708:22, col:50> col:50 implicit struct is_integral
| |   | `-ClassTemplateSpecializationDecl 0x7fe8b21c3a08 <col:1, line:709:67> line:708:50 struct is_integral definition
| |   |   |-public '__libcpp_is_integral<typename remove_cv<double>::type>':'struct std::__1::__libcpp_is_integral<double>'
| |   |   |-TemplateArgument type 'double'
| |   |   `-CXXRecordDecl 0x7fe8b21c4b48 prev 0x7fe8b21c3a08 <col:22, col:50> col:50 implicit struct is_integral
| |   |-ClassTemplateDecl 0x7fe8b205df28 <line:718:1, col:90> col:29 __libcpp_is_floating_point
| |   | |-TemplateTypeParmDecl 0x7fe8b205de10 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fe8b205de90 <col:22, col:90> col:29 struct __libcpp_is_floating_point definition
| |   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | | `-CXXRecordDecl 0x7fe8b205e1e0 <col:22, col:29> col:29 implicit struct __libcpp_is_floating_point
| |   | |-ClassTemplateSpecialization 0x7fe8b205e2c0 '__libcpp_is_floating_point'
| |   | |-ClassTemplateSpecialization 0x7fe8b205e610 '__libcpp_is_floating_point'
| |   | `-ClassTemplateSpecialization 0x7fe8b205e960 '__libcpp_is_floating_point'
| |   |-ClassTemplateSpecializationDecl 0x7fe8b205e2c0 <line:719:1, col:89> col:29 struct __libcpp_is_floating_point definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'float'
| |   | `-CXXRecordDecl 0x7fe8b205e530 <col:22, col:29> col:29 implicit struct __libcpp_is_floating_point
| |   |-ClassTemplateSpecializationDecl 0x7fe8b205e610 <line:720:1, col:89> col:29 struct __libcpp_is_floating_point definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'double'
| |   | `-CXXRecordDecl 0x7fe8b205e880 <col:22, col:29> col:29 implicit struct __libcpp_is_floating_point
| |   |-ClassTemplateSpecializationDecl 0x7fe8b205e960 <line:721:1, col:89> col:29 struct __libcpp_is_floating_point definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'long double'
| |   | `-CXXRecordDecl 0x7fe8b205ebd0 <col:22, col:29> col:29 implicit struct __libcpp_is_floating_point
| |   |-ClassTemplateDecl 0x7fe8b205edd8 <line:723:1, line:724:73> line:723:50 is_floating_point
| |   | |-TemplateTypeParmDecl 0x7fe8b205ec88 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b205ed40 <col:22, line:724:73> line:723:50 struct is_floating_point definition
| |   |   |-public '__libcpp_is_floating_point<typename remove_cv<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fe8b205f050 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fe8b205f2b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:723:22, col:50> col:50 implicit struct is_floating_point
| |   |-ClassTemplateDecl 0x7fe8b205f4c8 <line:733:1, line:734:26> line:733:50 is_array
| |   | |-TemplateTypeParmDecl 0x7fe8b205f370 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b205f430 <col:22, line:734:26> line:733:50 struct is_array definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TypeVisibilityAttr 0x7fe8b205f740 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fe8b205f7c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:733:22, col:50> col:50 implicit struct is_array
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b205fa88 <line:735:1, line:736:25> line:735:50 struct is_array definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 []'
| |   | |-TemplateTypeParmDecl 0x7fe8b205f880 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fe8b205fbd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fe8b205fd50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:735:22, col:50> col:50 implicit struct is_array
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b20600f8 <line:737:1, line:738:25> line:737:62 struct is_array definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
| |   | |-TemplateTypeParmDecl 0x7fe8b205fe08 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fe8b205feb0 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Np
| |   | |-TypeVisibilityAttr 0x7fe8b2060248 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fe8b2060400 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:737:34, col:62> col:62 implicit struct is_array
| |   |-ClassTemplateDecl 0x7fe8b20605d8 <line:747:1, col:76> col:29 __libcpp_is_pointer
| |   | |-TemplateTypeParmDecl 0x7fe8b20604b8 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b2060540 <col:22, col:76> col:29 struct __libcpp_is_pointer definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   `-CXXRecordDecl 0x7fe8b2060890 <col:22, col:29> col:29 implicit struct __libcpp_is_pointer
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b2060ae8 <line:748:1, col:75> col:29 struct __libcpp_is_pointer definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 *'
| |   | |-TemplateTypeParmDecl 0x7fe8b2060948 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b2060d60 <col:22, col:29> col:29 implicit struct __libcpp_is_pointer
| |   |-ClassTemplateDecl 0x7fe8b2060f68 <line:750:1, line:751:66> line:750:50 is_pointer
| |   | |-TemplateTypeParmDecl 0x7fe8b2060e18 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b2060ed0 <col:22, line:751:66> line:750:50 struct is_pointer definition
| |   |   |-public '__libcpp_is_pointer<typename remove_cv<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fe8b20611e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fe8b2062260 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:750:22, col:50> col:50 implicit struct is_pointer
| |   |-ClassTemplateDecl 0x7fe8b2062468 <line:760:1, col:97> col:50 is_lvalue_reference
| |   | |-TemplateTypeParmDecl 0x7fe8b2062318 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b20623d0 <col:22, col:97> col:50 struct is_lvalue_reference definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TypeVisibilityAttr 0x7fe8b20626e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fe8b2062768 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:760:22, col:50> col:50 implicit struct is_lvalue_reference
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b20629e8 <line:761:1, col:96> col:50 struct is_lvalue_reference definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateTypeParmDecl 0x7fe8b2062820 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fe8b2062b28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fe8b2062ca0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:761:22, col:50> col:50 implicit struct is_lvalue_reference
| |   |-ClassTemplateDecl 0x7fe8b2062ea8 <line:763:1, col:98> col:50 is_rvalue_reference
| |   | |-TemplateTypeParmDecl 0x7fe8b2062d58 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b2062e10 <col:22, col:98> col:50 struct is_rvalue_reference definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TypeVisibilityAttr 0x7fe8b2063120 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fe8b2063a00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:763:22, col:50> col:50 implicit struct is_rvalue_reference
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b2063cb8 <line:765:1, col:97> col:50 struct is_rvalue_reference definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 &&'
| |   | |-TemplateTypeParmDecl 0x7fe8b2063ab8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fe8b2063df8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fe8b2063f70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:765:22, col:50> col:50 implicit struct is_rvalue_reference
| |   |-ClassTemplateDecl 0x7fe8b2064178 <line:768:1, col:91> col:50 is_reference
| |   | |-TemplateTypeParmDecl 0x7fe8b2064028 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b20640e0 <col:22, col:91> col:50 struct is_reference definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TypeVisibilityAttr 0x7fe8b20643f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fe8b2064478 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:768:22, col:50> col:50 implicit struct is_reference
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b20646f8 <line:769:1, col:90> col:50 struct is_reference definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateTypeParmDecl 0x7fe8b2064530 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fe8b2064838 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fe8b2065a00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:769:22, col:50> col:50 implicit struct is_reference
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b2065c88 <line:771:1, col:90> col:50 struct is_reference definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 &&'
| |   | |-TemplateTypeParmDecl 0x7fe8b2065ab8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fe8b2065dc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fe8b2065f40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:771:22, col:50> col:50 implicit struct is_reference
| |   |-ClassTemplateDecl 0x7fe8b2066148 <line:788:1, line:789:56> line:788:50 is_union
| |   | |-TemplateTypeParmDecl 0x7fe8b2065ff8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b20660b0 <col:22, line:789:56> line:788:50 struct is_union definition
| |   |   |-public 'integral_constant<_Bool, __is_union(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fe8b20663c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fe8b20665a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:788:22, col:50> col:50 implicit struct is_union
| |   |-ClassTemplateDecl 0x7fe8b20667a8 <line:808:1, line:809:56> line:808:50 is_class
| |   | |-TemplateTypeParmDecl 0x7fe8b2066660 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b2066710 <col:22, line:809:56> line:808:50 struct is_class definition
| |   |   |-public 'integral_constant<_Bool, __is_class(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fe8b2066a68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fe8b2066c48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:808:22, col:50> col:50 implicit struct is_class
| |   |-ClassTemplateDecl 0x7fe8b2066ec0 <line:831:1, col:100> col:61 is_same
| |   | |-TemplateTypeParmDecl 0x7fe8b2066d00 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fe8b2066d68 <col:22, col:28> col:28 class depth 0 index 1 _Up
| |   | `-CXXRecordDecl 0x7fe8b2066e28 <col:33, col:100> col:61 struct is_same definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TypeVisibilityAttr 0x7fe8b2067160 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fe8b20671e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:831:33, col:61> col:61 implicit struct is_same
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b20674a0 <line:832:1, col:99> col:61 struct is_same definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fe8b20672a0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fe8b2067608 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fe8b20677b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:832:33, col:61> col:61 implicit struct is_same
| |   |-NamespaceDecl 0x7fe8b2067868 <line:841:1, line:849:1> line:841:11 __libcpp_is_function_imp
| |   | |-CXXRecordDecl 0x7fe8b20678d0 <line:843:1, col:22> col:8 referenced struct __dummy_type definition
| |   | | `-CXXRecordDecl 0x7fe8b2068a00 <col:1, col:8> col:8 implicit struct __dummy_type
| |   | |-FunctionTemplateDecl 0x7fe8b2068d18 <line:844:1, col:39> col:28 __test
| |   | | |-TemplateTypeParmDecl 0x7fe8b2068ab8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | | `-FunctionDecl 0x7fe8b2068c80 <col:22, col:39> col:28 __test 'char (_Tp *)'
| |   | |   `-ParmVarDecl 0x7fe8b2068b78 <col:35, col:38> col:39 '_Tp *'
| |   | |-FunctionTemplateDecl 0x7fe8b2068f58 <line:845:1, col:46> col:27 __test
| |   | | |-TemplateTypeParmDecl 0x7fe8b2068d70 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | | `-FunctionDecl 0x7fe8b2068ec0 <col:22, col:46> col:27 __test 'char (struct std::__1::__libcpp_is_function_imp::__dummy_type)'
| |   | |   `-ParmVarDecl 0x7fe8b2068e00 <col:34> col:46 'struct std::__1::__libcpp_is_function_imp::__dummy_type'
| |   | |-FunctionTemplateDecl 0x7fe8b2069118 <line:846:1, col:38> col:28 __test
| |   | | |-TemplateTypeParmDecl 0x7fe8b2068fb0 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | | `-FunctionDecl 0x7fe8b2069080 <col:22, col:38> col:28 __test 'struct std::__1::__two (...)'
| |   | |-FunctionTemplateDecl 0x7fe8b20693d8 <line:847:1, col:40> col:28 __source
| |   | | |-TemplateTypeParmDecl 0x7fe8b2069168 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | | `-FunctionDecl 0x7fe8b2069340 <col:22, col:40> col:28 __source '_Tp &(int)'
| |   | |   `-ParmVarDecl 0x7fe8b2069208 <col:37> col:40 'int'
| |   | `-FunctionTemplateDecl 0x7fe8b2069598 <line:848:1, col:47> col:35 __source
| |   |   |-TemplateTypeParmDecl 0x7fe8b2069430 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   |   `-FunctionDecl 0x7fe8b2069500 <col:22, col:47> col:35 __source 'struct std::__1::__libcpp_is_function_imp::__dummy_type (...)'
| |   |-ClassTemplateDecl 0x7fe8b2069d70 <line:851:1, line:858:6> line:856:8 __libcpp_is_function
| |   | |-TemplateTypeParmDecl 0x7fe8b20695e8 <line:851:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fe8b2069c60 <col:22, line:855:50> line:851:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7fe8b2069c28 <col:29, line:855:50> '<dependent type>' '||'
| |   | |     |-BinaryOperator 0x7fe8b2069af8 <line:851:29, line:854:48> '<dependent type>' '||'
| |   | |     | |-BinaryOperator 0x7fe8b20699a8 <line:851:29, line:853:43> '<dependent type>' '||'
| |   | |     | | |-BinaryOperator 0x7fe8b2069878 <line:851:29, line:852:44> '<dependent type>' '||'
| |   | |     | | | |-DependentScopeDeclRefExpr 0x7fe8b2069728 <line:851:29, col:44> '<dependent type>' lvalue
| |   | |     | | | `-DependentScopeDeclRefExpr 0x7fe8b2069838 <line:852:29, col:44> '<dependent type>' lvalue
| |   | |     | | `-DependentScopeDeclRefExpr 0x7fe8b2069968 <line:853:29, col:43> '<dependent type>' lvalue
| |   | |     | `-DependentScopeDeclRefExpr 0x7fe8b2069ab8 <line:854:29, col:48> '<dependent type>' lvalue
| |   | |     `-DependentScopeDeclRefExpr 0x7fe8b2069be8 <line:855:29, col:50> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fe8b2069cd8 <line:856:1, line:858:6> line:856:8 struct __libcpp_is_function definition
| |   |   |-public 'integral_constant<_Bool, sizeof (__libcpp_is_function_imp::__test<_Tp>(__libcpp_is_function_imp::__source<_Tp>(0))) == 1>'
| |   |   `-CXXRecordDecl 0x7fe8b206a4c8 <col:1, col:8> col:8 implicit struct __libcpp_is_function
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b206a760 <line:859:1, col:82> col:29 struct __libcpp_is_function definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fe8b206a580 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b206aa30 <col:22, col:29> col:29 implicit struct __libcpp_is_function
| |   |-ClassTemplateDecl 0x7fe8b206ac38 <line:861:1, line:862:41> line:861:50 is_function
| |   | |-TemplateTypeParmDecl 0x7fe8b206aae8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b206aba0 <col:22, line:862:41> line:861:50 struct is_function definition
| |   |   |-public '__libcpp_is_function<_Tp>'
| |   |   |-TypeVisibilityAttr 0x7fe8b206aeb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fe8b206b628 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:861:22, col:50> col:50 implicit struct is_function
| |   |-ClassTemplateDecl 0x7fe8b206b8d8 <line:875:1, line:878:1> line:876:8 __member_pointer_traits_imp
| |   | |-TemplateTypeParmDecl 0x7fe8b206b6e0 <line:875:11, col:17> col:17 class depth 0 index 0 _MP
| |   | |-NonTypeTemplateParmDecl 0x7fe8b206b758 <col:22, col:27> col:27 '_Bool' depth 0 index 1 _IsMemberFunctionPtr
| |   | |-NonTypeTemplateParmDecl 0x7fe8b206b7c0 <col:49, col:54> col:54 '_Bool' depth 0 index 2 _IsMemberObjectPtr
| |   | `-CXXRecordDecl 0x7fe8b206b840 <line:876:1, line:878:1> line:876:8 struct __member_pointer_traits_imp definition
| |   |   `-CXXRecordDecl 0x7fe8b206bce0 <col:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   |-ClassTemplateDecl 0x7fe8b206beb8 <line:881:1, line:882:26> line:881:29 __libcpp_is_member_function_pointer
| |   | |-TemplateTypeParmDecl 0x7fe8b206bd98 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b206be20 <col:22, line:882:26> line:881:29 struct __libcpp_is_member_function_pointer definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   `-CXXRecordDecl 0x7fe8b206c170 <col:22, col:29> col:29 implicit struct __libcpp_is_member_function_pointer
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b206c4c8 <line:884:1, line:886:33> line:885:8 struct __libcpp_is_member_function_pointer definition
| |   | |-public 'is_function<_Ret>'
| |   | |-TemplateArgument type 'type-parameter-0-0 type-parameter-0-1::*'
| |   | |-TemplateTypeParmDecl 0x7fe8b206c228 <line:884:11, col:17> col:17 referenced class depth 0 index 0 _Ret
| |   | |-TemplateTypeParmDecl 0x7fe8b206c298 <col:23, col:29> col:29 class depth 0 index 1 _Class
| |   | `-CXXRecordDecl 0x7fe8b206c7c8 <line:885:1, col:8> col:8 implicit struct __libcpp_is_member_function_pointer
| |   |-ClassTemplateDecl 0x7fe8b206ca00 <line:888:1, line:889:88> line:888:50 is_member_function_pointer
| |   | |-TemplateTypeParmDecl 0x7fe8b206c880 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b206c930 <col:22, line:889:88> line:888:50 struct is_member_function_pointer definition
| |   |   |-public '__libcpp_is_member_function_pointer<typename remove_cv<_Tp>::type>::type'
| |   |   |-TypeVisibilityAttr 0x7fe8b206cc80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fe8b206cfc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:888:22, col:50> col:50 implicit struct is_member_function_pointer
| |   |-ClassTemplateDecl 0x7fe8b206d198 <line:898:1, col:100> col:40 __libcpp_is_member_pointer
| |   | |-TemplateTypeParmDecl 0x7fe8b206d078 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b206d100 <col:33, col:100> col:40 struct __libcpp_is_member_pointer definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   `-CXXRecordDecl 0x7fe8b206d450 <col:33, col:40> col:40 implicit struct __libcpp_is_member_pointer
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b206d778 <line:899:1, col:99> col:40 struct __libcpp_is_member_pointer definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 type-parameter-0-1::*'
| |   | |-TemplateTypeParmDecl 0x7fe8b206d508 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fe8b206d578 <col:22, col:28> col:28 class depth 0 index 1 _Up
| |   | `-CXXRecordDecl 0x7fe8b206da00 <col:33, col:40> col:40 implicit struct __libcpp_is_member_pointer
| |   |-ClassTemplateDecl 0x7fe8b206dc08 <line:901:1, line:902:73> line:901:50 is_member_pointer
| |   | |-TemplateTypeParmDecl 0x7fe8b206dab8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b206db70 <col:22, line:902:73> line:901:50 struct is_member_pointer definition
| |   |   |-public '__libcpp_is_member_pointer<typename remove_cv<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fe8b206de80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fe8b206e0e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:901:22, col:50> col:50 implicit struct is_member_pointer
| |   |-ClassTemplateDecl 0x7fe8b206e2e8 <line:911:1, line:913:79> line:911:50 is_member_object_pointer
| |   | |-TemplateTypeParmDecl 0x7fe8b206e1a0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b206e250 <col:22, line:913:79> line:911:50 struct is_member_object_pointer definition
| |   |   |-public 'integral_constant<_Bool, is_member_pointer<_Tp>::value && !is_member_function_pointer<_Tp>::value>'
| |   |   |-TypeVisibilityAttr 0x7fe8b206e560 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fe8b206ea00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:911:22, col:50> col:50 implicit struct is_member_object_pointer
| |   |-ClassTemplateDecl 0x7fe8b206ec08 <line:924:1, line:925:55> line:924:50 is_enum
| |   | |-TemplateTypeParmDecl 0x7fe8b206eab8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b206eb70 <col:22, line:925:55> line:924:50 struct is_enum definition
| |   |   |-public 'integral_constant<_Bool, __is_enum(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fe8b206ee80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fe8b206f068 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:924:22, col:50> col:50 implicit struct is_enum
| |   |-ClassTemplateDecl 0x7fe8b206f268 <line:950:1, line:952:70> line:950:50 is_arithmetic
| |   | |-TemplateTypeParmDecl 0x7fe8b206f120 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b206f1d0 <col:22, line:952:70> line:950:50 struct is_arithmetic definition
| |   |   |-public 'integral_constant<_Bool, is_integral<_Tp>::value || is_floating_point<_Tp>::value>'
| |   |   |-TypeVisibilityAttr 0x7fe8b206f4e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fe8b206f918 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:950:22, col:50> col:50 implicit struct is_arithmetic
| |   |-ClassTemplateDecl 0x7fe8b2070148 <line:961:1, line:964:66> line:961:50 is_fundamental
| |   | |-TemplateTypeParmDecl 0x7fe8b2070000 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b20700b0 <col:22, line:964:66> line:961:50 struct is_fundamental definition
| |   |   |-public 'integral_constant<_Bool, is_void<_Tp>::value || __is_nullptr_t<_Tp>::value || is_arithmetic<_Tp>::value>'
| |   |   |-TypeVisibilityAttr 0x7fe8b20703c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fe8b2070918 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:961:22, col:50> col:50 implicit struct is_fundamental
| |   |-ClassTemplateDecl 0x7fe8b2070b18 <line:973:1, line:978:71> line:973:50 is_scalar
| |   | |-TemplateTypeParmDecl 0x7fe8b20709d0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fe8b2070a80 <col:22, line:978:71> line:973:50 struct is_scalar definition
| |   | | |-public 'integral_constant<_Bool, is_arithmetic<_Tp>::value || is_member_pointer<_Tp>::value || is_pointer<_Tp>::value || __is_nullptr_t<_Tp>::value || is_enum<_Tp>::value>'
| |   | | |-TypeVisibilityAttr 0x7fe8b2070d90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | | `-CXXRecordDecl 0x7fe8b2071588 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:973:22, col:50> col:50 implicit struct is_scalar
| |   | `-ClassTemplateSpecialization 0x7fe8b2071690 'is_scalar'
| |   |-ClassTemplateSpecializationDecl 0x7fe8b2071690 <line:980:1, col:82> col:41 struct is_scalar definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'nullptr_t'
| |   | |-TypeVisibilityAttr 0x7fe8b20717c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fe8b2071940 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:980:13, col:41> col:41 implicit struct is_scalar
| |   |-ClassTemplateDecl 0x7fe8b2071b48 <line:989:1, line:993:63> line:989:50 is_object
| |   | |-TemplateTypeParmDecl 0x7fe8b20719f8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b2071ab0 <col:22, line:993:63> line:989:50 struct is_object definition
| |   |   |-public 'integral_constant<_Bool, is_scalar<_Tp>::value || is_array<_Tp>::value || is_union<_Tp>::value || is_class<_Tp>::value>'
| |   |   |-TypeVisibilityAttr 0x7fe8b2071dc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fe8b2072468 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:989:22, col:50> col:50 implicit struct is_object
| |   |-ClassTemplateDecl 0x7fe8b2072668 <line:1002:1, line:1003:68> line:1002:50 is_compound
| |   | |-TemplateTypeParmDecl 0x7fe8b2072520 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b20725d0 <col:22, line:1003:68> line:1002:50 struct is_compound definition
| |   |   |-public 'integral_constant<_Bool, !is_fundamental<_Tp>::value>'
| |   |   |-TypeVisibilityAttr 0x7fe8b20728e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fe8b2072bd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1002:22, col:50> col:50 implicit struct is_compound
| |   |-CXXRecordDecl 0x7fe8b2072c90 <line:1013:1, line:1016:1> line:1013:8 struct __is_referenceable_impl definition
| |   | |-CXXRecordDecl 0x7fe8b2072db8 <col:1, col:8> col:8 implicit struct __is_referenceable_impl
| |   | |-FunctionTemplateDecl 0x7fe8b20730c0 <line:1014:5, col:48> col:38 __test
| |   | | |-TemplateTypeParmDecl 0x7fe8b2072e50 <col:15, col:21> col:21 referenced class depth 0 index 0 _Tp
| |   | | `-CXXMethodDecl 0x7fe8b2073028 <col:26, col:48> col:38 __test '_Tp &(int)' static
| |   | |   `-ParmVarDecl 0x7fe8b2072ee8 <col:45> col:48 'int'
| |   | `-FunctionTemplateDecl 0x7fe8b2073258 <line:1015:5, col:49> col:39 __test
| |   |   |-TemplateTypeParmDecl 0x7fe8b2073118 <col:15, col:21> col:21 class depth 0 index 0 _Tp
| |   |   `-CXXMethodDecl 0x7fe8b20731c0 <col:26, col:49> col:39 __test 'struct std::__1::__two (...)' static
| |   |-ClassTemplateDecl 0x7fe8b20733e8 <line:1018:1, line:1020:81> line:1019:8 __is_referenceable
| |   | |-TemplateTypeParmDecl 0x7fe8b20732c8 <line:1018:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b2073350 <line:1019:1, line:1020:81> line:1019:8 struct __is_referenceable definition
| |   |   |-public 'integral_constant<_Bool, !is_same<decltype(struct __is_referenceable_impl::__test<_Tp>(0)), struct __two>::value>'
| |   |   `-CXXRecordDecl 0x7fe8b2073b88 <col:1, col:8> col:8 implicit struct __is_referenceable
| |   |-ClassTemplateDecl 0x7fe8b2074148 <line:1025:1, line:1028:50> col:8 __add_const
| |   | |-TemplateTypeParmDecl 0x7fe8b2073c40 <line:1025:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fe8b2074038 <col:22, line:1027:44> line:1025:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7fe8b2074000 <col:29, line:1027:44> '<dependent type>' '||'
| |   | |     |-BinaryOperator 0x7fe8b2073ec8 <line:1025:29, line:1026:47> '<dependent type>' '||'
| |   | |     | |-DependentScopeDeclRefExpr 0x7fe8b2073d78 <line:1025:29, col:48> '<dependent type>' lvalue
| |   | |     | `-DependentScopeDeclRefExpr 0x7fe8b2073e88 <line:1026:29, col:47> '<dependent type>' lvalue
| |   | |     `-DependentScopeDeclRefExpr 0x7fe8b2073fb8 <line:1027:29, col:44> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fe8b20740b0 <line:1028:1, col:50> col:8 struct __add_const definition
| |   |   |-CXXRecordDecl 0x7fe8b2074410 <col:1, col:8> col:8 implicit struct __add_const
| |   |   `-TypedefDecl 0x7fe8b20744b8 <col:33, col:45> col:45 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7fe8b2073c80 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fe8b2073c40 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b2074710 <line:1030:1, line:1031:56> col:8 struct __add_const definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fe8b2074530 <line:1030:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fe8b20749a0 <line:1031:1, col:8> col:8 implicit struct __add_const
| |   | `-TypedefDecl 0x7fe8b2074a48 <col:33, col:51> col:51 type 'const _Tp'
| |   |   `-QualType 0x7fe8b2074571 'const _Tp' const
| |   |     `-TemplateTypeParmType 0x7fe8b2074570 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fe8b2074530 '_Tp'
| |   |-ClassTemplateDecl 0x7fe8b2074c08 <line:1033:1, line:1034:51> line:1033:50 add_const
| |   | |-TemplateTypeParmDecl 0x7fe8b2074ac0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b2074b70 <col:22, line:1034:51> line:1033:50 struct add_const definition
| |   |   |-TypeVisibilityAttr 0x7fe8b2074e80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fe8b2074ec8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1033:22, col:50> col:50 implicit struct add_const
| |   |   `-TypedefDecl 0x7fe8b20754c0 <line:1034:6, col:46> col:46 type 'typename __add_const<_Tp>::type'
| |   |     `-DependentNameType 0x7fe8b2075450 'typename __add_const<_Tp>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fe8b2075780 <line:1037:1, col:67> col:22 add_const_t
| |   | |-TemplateTypeParmDecl 0x7fe8b2075538 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fe8b2075720 <col:22, col:67> col:28 add_const_t 'typename add_const<_Tp>::type'
| |   |   `-DependentNameType 0x7fe8b20756b0 'typename add_const<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fe8b2075cd0 <line:1042:1, line:1045:53> col:8 __add_volatile
| |   | |-TemplateTypeParmDecl 0x7fe8b20757d0 <line:1042:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fe8b2075bc0 <col:22, line:1044:47> line:1042:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7fe8b2075b88 <col:29, line:1044:47> '<dependent type>' '||'
| |   | |     |-BinaryOperator 0x7fe8b2075a58 <line:1042:29, line:1043:47> '<dependent type>' '||'
| |   | |     | |-DependentScopeDeclRefExpr 0x7fe8b2075908 <line:1042:29, col:48> '<dependent type>' lvalue
| |   | |     | `-DependentScopeDeclRefExpr 0x7fe8b2075a18 <line:1043:29, col:47> '<dependent type>' lvalue
| |   | |     `-DependentScopeDeclRefExpr 0x7fe8b2075b48 <line:1044:29, col:47> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fe8b2075c38 <line:1045:1, col:53> col:8 struct __add_volatile definition
| |   |   |-CXXRecordDecl 0x7fe8b2076600 <col:1, col:8> col:8 implicit struct __add_volatile
| |   |   `-TypedefDecl 0x7fe8b20766a8 <col:36, col:48> col:48 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7fe8b2075810 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fe8b20757d0 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b2076900 <line:1047:1, line:1048:62> col:8 struct __add_volatile definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fe8b2076720 <line:1047:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fe8b2076b90 <line:1048:1, col:8> col:8 implicit struct __add_volatile
| |   | `-TypedefDecl 0x7fe8b2076c38 <col:36, col:57> col:57 type 'volatile _Tp'
| |   |   `-QualType 0x7fe8b2076764 'volatile _Tp' volatile
| |   |     `-TemplateTypeParmType 0x7fe8b2076760 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fe8b2076720 '_Tp'
| |   |-ClassTemplateDecl 0x7fe8b2076df8 <line:1050:1, line:1051:54> line:1050:50 add_volatile
| |   | |-TemplateTypeParmDecl 0x7fe8b2076cb0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b2076d60 <col:22, line:1051:54> line:1050:50 struct add_volatile definition
| |   |   |-TypeVisibilityAttr 0x7fe8b2077070 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fe8b20770b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1050:22, col:50> col:50 implicit struct add_volatile
| |   |   `-TypedefDecl 0x7fe8b2077ca0 <line:1051:6, col:49> col:49 type 'typename __add_volatile<_Tp>::type'
| |   |     `-DependentNameType 0x7fe8b2077c30 'typename __add_volatile<_Tp>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fe8b2077f60 <line:1054:1, col:73> col:22 add_volatile_t
| |   | |-TemplateTypeParmDecl 0x7fe8b2077d18 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fe8b2077f00 <col:22, col:73> col:28 add_volatile_t 'typename add_volatile<_Tp>::type'
| |   |   `-DependentNameType 0x7fe8b2077e90 'typename add_volatile<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fe8b20780f8 <line:1059:1, line:1060:78> line:1059:50 add_cv
| |   | |-TemplateTypeParmDecl 0x7fe8b2077fb0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b2078060 <col:22, line:1060:78> line:1059:50 struct add_cv definition
| |   |   |-TypeVisibilityAttr 0x7fe8b2078370 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fe8b20783b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1059:22, col:50> col:50 implicit struct add_cv
| |   |   `-TypedefDecl 0x7fe8b2078710 <line:1060:6, col:73> col:73 type 'typename add_const<typename add_volatile<_Tp>::type>::type'
| |   |     `-DependentNameType 0x7fe8b20786a0 'typename add_const<typename add_volatile<_Tp>::type>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fe8b20789d0 <line:1063:1, col:61> col:22 add_cv_t
| |   | |-TemplateTypeParmDecl 0x7fe8b2078788 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fe8b2078970 <col:22, col:61> col:28 add_cv_t 'typename add_cv<_Tp>::type'
| |   |   `-DependentNameType 0x7fe8b2078900 'typename add_cv<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fe8b2078b68 <line:1068:1, col:92> col:50 remove_reference
| |   | |-TemplateTypeParmDecl 0x7fe8b2078a20 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b2078ad0 <col:22, col:92> col:50 struct remove_reference definition
| |   |   |-TypeVisibilityAttr 0x7fe8b2079430 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fe8b2079478 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1068:22, col:50> col:50 implicit struct remove_reference
| |   |   `-TypedefDecl 0x7fe8b2079520 <col:75, col:87> col:87 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7fe8b2078a60 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fe8b2078a20 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b2079768 <line:1069:1, col:92> col:50 struct remove_reference definition
| |   | |-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateTypeParmDecl 0x7fe8b2079598 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fe8b20798a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fe8b20799e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1069:22, col:50> col:50 implicit struct remove_reference
| |   | `-TypedefDecl 0x7fe8b2079a88 <col:75, col:87> col:87 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fe8b20795e0 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fe8b2079598 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b2079cc8 <line:1071:1, col:92> col:50 struct remove_reference definition
| |   | |-TemplateArgument type 'type-parameter-0-0 &&'
| |   | |-TemplateTypeParmDecl 0x7fe8b2079b00 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fe8b2079e08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fe8b2079f40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1071:22, col:50> col:50 implicit struct remove_reference
| |   | `-TypedefDecl 0x7fe8b2079fe8 <col:75, col:87> col:87 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fe8b2079b40 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fe8b2079b00 '_Tp'
| |   |-TypeAliasTemplateDecl 0x7fe8b207a8a0 <line:1075:1, col:81> col:22 remove_reference_t
| |   | |-TemplateTypeParmDecl 0x7fe8b207a060 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fe8b207a840 <col:22, col:81> col:28 remove_reference_t 'typename remove_reference<_Tp>::type'
| |   |   `-DependentNameType 0x7fe8b207a1d0 'typename remove_reference<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fe8b207ab88 <line:1080:1, col:128> col:68 __add_lvalue_reference_impl
| |   | |-TemplateTypeParmDecl 0x7fe8b207a8f0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fe8b207aa78 <col:22, col:54> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fe8b207aa28 <col:29, col:54> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fe8b207aaf0 <col:61, col:128> col:68 struct __add_lvalue_reference_impl definition
| |   |   |-CXXRecordDecl 0x7fe8b207ae50 <col:61, col:68> col:68 implicit struct __add_lvalue_reference_impl
| |   |   `-TypedefDecl 0x7fe8b207aef8 <col:109, col:122> col:122 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7fe8b207a930 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fe8b207a8f0 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b207b150 <line:1081:1, col:128> col:68 struct __add_lvalue_reference_impl definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fe8b207af70 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fe8b207b3e0 <col:61, col:68> col:68 implicit struct __add_lvalue_reference_impl
| |   | `-TypedefDecl 0x7fe8b207b4b8 <col:109, col:122> col:122 type '_Tp &'
| |   |   `-LValueReferenceType 0x7fe8b207b480 '_Tp &' dependent
| |   |     `-TemplateTypeParmType 0x7fe8b207afb0 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fe8b207af70 '_Tp'
| |   |-ClassTemplateDecl 0x7fe8b207b678 <line:1083:1, line:1084:63> line:1083:50 add_lvalue_reference
| |   | |-TemplateTypeParmDecl 0x7fe8b207b530 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b207b5e0 <col:22, line:1084:63> line:1083:50 struct add_lvalue_reference definition
| |   |   |-TypeVisibilityAttr 0x7fe8b207b930 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fe8b207b978 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1083:22, col:50> col:50 implicit struct add_lvalue_reference
| |   |   `-TypedefDecl 0x7fe8b207bd10 <line:1084:2, col:58> col:58 type 'typename __add_lvalue_reference_impl<_Tp>::type'
| |   |     `-DependentNameType 0x7fe8b207bca0 'typename __add_lvalue_reference_impl<_Tp>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fe8b207bfd0 <line:1087:1, col:89> col:22 add_lvalue_reference_t
| |   | |-TemplateTypeParmDecl 0x7fe8b207bd88 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fe8b207bf70 <col:22, col:89> col:28 add_lvalue_reference_t 'typename add_lvalue_reference<_Tp>::type'
| |   |   `-DependentNameType 0x7fe8b207bf00 'typename add_lvalue_reference<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fe8b207c2b8 <line:1092:1, col:129> col:68 __add_rvalue_reference_impl
| |   | |-TemplateTypeParmDecl 0x7fe8b207c020 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fe8b207c1a8 <col:22, col:54> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fe8b207c158 <col:29, col:54> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fe8b207c220 <col:61, col:129> col:68 struct __add_rvalue_reference_impl definition
| |   |   |-CXXRecordDecl 0x7fe8b207c580 <col:61, col:68> col:68 implicit struct __add_rvalue_reference_impl
| |   |   `-TypedefDecl 0x7fe8b207c628 <col:109, col:123> col:123 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7fe8b207c060 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fe8b207c020 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b20808d0 <line:1093:1, col:129> col:68 struct __add_rvalue_reference_impl definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fe8b207c6a0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fe8b2080b60 <col:61, col:68> col:68 implicit struct __add_rvalue_reference_impl
| |   | `-TypedefDecl 0x7fe8b2080c38 <col:109, col:123> col:123 type '_Tp &&'
| |   |   `-RValueReferenceType 0x7fe8b2080c00 '_Tp &&' dependent
| |   |     `-TemplateTypeParmType 0x7fe8b207c6e0 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fe8b207c6a0 '_Tp'
| |   |-ClassTemplateDecl 0x7fe8b2080df8 <line:1095:1, line:1096:63> line:1095:50 add_rvalue_reference
| |   | |-TemplateTypeParmDecl 0x7fe8b2080cb0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b2080d60 <col:22, line:1096:63> line:1095:50 struct add_rvalue_reference definition
| |   |   |-TypeVisibilityAttr 0x7fe8b2081070 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fe8b20810b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1095:22, col:50> col:50 implicit struct add_rvalue_reference
| |   |   `-TypedefDecl 0x7fe8b2081430 <line:1096:2, col:58> col:58 type 'typename __add_rvalue_reference_impl<_Tp>::type'
| |   |     `-DependentNameType 0x7fe8b20813c0 'typename __add_rvalue_reference_impl<_Tp>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fe8b20816f0 <line:1099:1, col:89> col:22 add_rvalue_reference_t
| |   | |-TemplateTypeParmDecl 0x7fe8b20814a8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fe8b2081690 <col:22, col:89> col:28 add_rvalue_reference_t 'typename add_rvalue_reference<_Tp>::type'
| |   |   `-DependentNameType 0x7fe8b2081620 'typename add_rvalue_reference<_Tp>::type' dependent
| |   |-FunctionTemplateDecl 0x7fe8b20819c8 <line:1106:1, col:41> col:28 __declval
| |   | |-TemplateTypeParmDecl 0x7fe8b2081740 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fe8b2081930 <col:22, col:41> col:28 __declval '_Tp &&(int)'
| |   |   `-ParmVarDecl 0x7fe8b2081800 <col:38> col:41 'int'
| |   |-FunctionTemplateDecl 0x7fe8b2081c58 <line:1107:1, col:42> col:28 __declval
| |   | |-TemplateTypeParmDecl 0x7fe8b2081a20 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fe8b2081bc0 <col:22, col:42> col:28 __declval '_Tp (long)'
| |   |   `-ParmVarDecl 0x7fe8b2081ab8 <col:38> col:42 'long'
| |   |-FunctionTemplateDecl 0x7fe8b2082050 <line:1109:1, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:758:21> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1111:1 declval
| |   | |-TemplateTypeParmDecl 0x7fe8b2081cb0 <line:1109:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fe8b2081fb8 <line:1110:1, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:758:21> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1111:1 declval 'decltype(std::__1::__declval<_Tp>(0)) (void) noexcept'
| |   |-ClassTemplateDecl 0x7fe8b20821b8 <line:1123:1, line:1126:1> line:1124:8 __uncvref
| |   | |-TemplateTypeParmDecl 0x7fe8b20820a0 <line:1123:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b2082120 <line:1124:1, line:1126:1> line:1124:8 struct __uncvref definition
| |   |   |-CXXRecordDecl 0x7fe8b2082430 <col:1, col:8> col:8 implicit struct __uncvref
| |   |   `-TypedefDecl 0x7fe8b2082790 <line:1125:5, col:76> col:76 type 'typename remove_cv<typename remove_reference<_Tp>::type>::type'
| |   |     `-DependentNameType 0x7fe8b2082720 'typename remove_cv<typename remove_reference<_Tp>::type>::type' dependent
| |   |-ClassTemplateDecl 0x7fe8b2082938 <line:1128:1, line:1131:1> line:1129:8 __unconstref
| |   | |-TemplateTypeParmDecl 0x7fe8b2082820 <line:1128:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b20828a0 <line:1129:1, line:1131:1> line:1129:8 struct __unconstref definition
| |   |   |-CXXRecordDecl 0x7fe8b2082bb0 <col:1, col:8> col:8 implicit struct __unconstref
| |   |   `-TypedefDecl 0x7fe8b2082f10 <line:1130:5, col:79> col:79 type 'typename remove_const<typename remove_reference<_Tp>::type>::type'
| |   |     `-DependentNameType 0x7fe8b2082ea0 'typename remove_const<typename remove_reference<_Tp>::type>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fe8b20831d0 <line:1134:1, line:1135:46> col:1 __uncvref_t
| |   | |-TemplateTypeParmDecl 0x7fe8b2082f88 <line:1134:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fe8b2083170 <line:1135:1, col:46> col:7 __uncvref_t 'typename __uncvref<_Tp>::type'
| |   |   `-DependentNameType 0x7fe8b2083100 'typename __uncvref<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fe8b20833b0 <line:1140:1, line:1142:68> line:1141:8 __is_same_uncvref
| |   | |-TemplateTypeParmDecl 0x7fe8b2083220 <line:1140:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fe8b2083288 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | `-CXXRecordDecl 0x7fe8b2083318 <line:1141:1, line:1142:68> line:1141:8 struct __is_same_uncvref definition
| |   |   |-public 'is_same<typename __uncvref<_Tp>::type, typename __uncvref<_Up>::type>'
| |   |   `-CXXRecordDecl 0x7fe8b2055688 <col:1, col:8> col:8 implicit struct __is_same_uncvref
| |   |-CXXRecordDecl 0x7fe8b2055740 <line:1144:1, line:1147:1> line:1144:8 referenced struct __any definition
| |   | |-CXXRecordDecl 0x7fe8b2055868 <col:1, col:8> col:8 implicit referenced struct __any
| |   | `-CXXConstructorDecl 0x7fe8b20559a0 <line:1146:5, col:14> col:5 __any 'void (...)'
| |   |-ClassTemplateDecl 0x7fe8b2055bb8 <line:1151:1, col:104> col:50 remove_pointer
| |   | |-TemplateTypeParmDecl 0x7fe8b2055a68 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b2055b20 <col:22, col:104> col:50 struct remove_pointer definition
| |   |   |-TypeVisibilityAttr 0x7fe8b2055e30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fe8b2055e78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1151:22, col:50> col:50 implicit struct remove_pointer
| |   |   `-TypedefDecl 0x7fe8b2055f20 <col:87, col:99> col:99 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7fe8b2055ab0 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fe8b2055a68 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b2056168 <line:1152:1, col:104> col:50 struct remove_pointer definition
| |   | |-TemplateArgument type 'type-parameter-0-0 *'
| |   | |-TemplateTypeParmDecl 0x7fe8b2055f98 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fe8b20562a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fe8b2085200 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1152:22, col:50> col:50 implicit struct remove_pointer
| |   | `-TypedefDecl 0x7fe8b20852a8 <col:87, col:99> col:99 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fe8b2055fe0 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fe8b2055f98 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b20854e8 <line:1153:1, col:104> col:50 struct remove_pointer definition
| |   | |-TemplateArgument type 'type-parameter-0-0 *const'
| |   | |-TemplateTypeParmDecl 0x7fe8b2085320 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fe8b2085628 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fe8b2085760 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1153:22, col:50> col:50 implicit struct remove_pointer
| |   | `-TypedefDecl 0x7fe8b2085808 <col:87, col:99> col:99 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fe8b2085360 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fe8b2085320 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b2085a48 <line:1154:1, col:104> col:50 struct remove_pointer definition
| |   | |-TemplateArgument type 'type-parameter-0-0 *volatile'
| |   | |-TemplateTypeParmDecl 0x7fe8b2085880 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fe8b2085b88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fe8b2085cc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1154:22, col:50> col:50 implicit struct remove_pointer
| |   | `-TypedefDecl 0x7fe8b2085d68 <col:87, col:99> col:99 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fe8b20858c0 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fe8b2085880 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b2085fa8 <line:1155:1, col:104> col:50 struct remove_pointer definition
| |   | |-TemplateArgument type 'type-parameter-0-0 *const volatile'
| |   | |-TemplateTypeParmDecl 0x7fe8b2085de0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fe8b20860e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fe8b2086268 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1155:22, col:50> col:50 implicit struct remove_pointer
| |   | `-TypedefDecl 0x7fe8b2086310 <col:87, col:99> col:99 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fe8b2085e20 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fe8b2085de0 '_Tp'
| |   |-TypeAliasTemplateDecl 0x7fe8b20865d0 <line:1158:1, col:77> col:22 remove_pointer_t
| |   | |-TemplateTypeParmDecl 0x7fe8b2086388 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fe8b2086570 <col:22, col:77> col:28 remove_pointer_t 'typename remove_pointer<_Tp>::type'
| |   |   `-DependentNameType 0x7fe8b2086500 'typename remove_pointer<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fe8b2086ba0 <line:1163:1, line:1167:57> line:1166:8 __add_pointer_impl
| |   | |-TemplateTypeParmDecl 0x7fe8b2086620 <line:1163:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fe8b2086a90 <line:1164:9, line:1165:63> line:1164:14 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7fe8b2086a58 <col:16, line:1165:63> '<dependent type>' '||'
| |   | |     |-DependentScopeDeclRefExpr 0x7fe8b2086758 <line:1164:16, col:41> '<dependent type>' lvalue
| |   | |     `-DependentScopeDeclRefExpr 0x7fe8b2086a18 <line:1165:17, col:63> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fe8b2086b08 <line:1166:1, line:1167:57> line:1166:8 struct __add_pointer_impl definition
| |   |   |-CXXRecordDecl 0x7fe8b2086e60 <col:1, col:8> col:8 implicit struct __add_pointer_impl
| |   |   `-TypedefDecl 0x7fe8b2087080 <line:1167:6, col:52> col:52 type 'typename remove_reference<_Tp>::type *'
| |   |     `-PointerType 0x7fe8b2087030 'typename remove_reference<_Tp>::type *' dependent
| |   |       `-DependentNameType 0x7fe8b2086fb0 'typename remove_reference<_Tp>::type' dependent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b2088330 <line:1168:1, line:1169:23> line:1168:29 struct __add_pointer_impl definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fe8b20870f8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fe8b20885c0 <col:22, col:29> col:29 implicit struct __add_pointer_impl
| |   | `-TypedefDecl 0x7fe8b2088668 <line:1169:6, col:18> col:18 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fe8b2087140 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fe8b20870f8 '_Tp'
| |   |-ClassTemplateDecl 0x7fe8b2088828 <line:1171:1, line:1172:58> line:1171:50 add_pointer
| |   | |-TemplateTypeParmDecl 0x7fe8b20886e0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b2088790 <col:22, line:1172:58> line:1171:50 struct add_pointer definition
| |   |   |-TypeVisibilityAttr 0x7fe8b2088aa0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fe8b2088ae8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1171:22, col:50> col:50 implicit struct add_pointer
| |   |   `-TypedefDecl 0x7fe8b20890b0 <line:1172:6, col:53> col:53 type 'typename __add_pointer_impl<_Tp>::type'
| |   |     `-DependentNameType 0x7fe8b2089040 'typename __add_pointer_impl<_Tp>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fe8b20893b0 <line:1175:1, col:71> col:22 add_pointer_t
| |   | |-TemplateTypeParmDecl 0x7fe8b2089128 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fe8b2089350 <col:22, col:71> col:28 add_pointer_t 'typename add_pointer<_Tp>::type'
| |   |   `-DependentNameType 0x7fe8b20892e0 'typename add_pointer<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fe8b2089698 <line:1180:1, line:1181:82> col:8 __libcpp_is_signed_impl
| |   | |-TemplateTypeParmDecl 0x7fe8b2089400 <line:1180:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fe8b2089588 <col:22, col:47> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fe8b2089538 <col:29, col:47> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fe8b2089600 <line:1181:1, col:82> col:8 struct __libcpp_is_signed_impl definition
| |   |   |-public 'integral_constant<_Bool, (_Tp(-1) < _Tp(0))>'
| |   |   `-CXXRecordDecl 0x7fe8b2089bf8 <col:1, col:8> col:8 implicit struct __libcpp_is_signed_impl
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b2089e90 <line:1183:1, line:1184:64> col:8 struct __libcpp_is_signed_impl definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fe8b2089cb0 <line:1183:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b208a160 <line:1184:1, col:8> col:8 implicit struct __libcpp_is_signed_impl
| |   |-ClassTemplateDecl 0x7fe8b208a4b8 <line:1186:1, line:1187:66> col:8 __libcpp_is_signed
| |   | |-TemplateTypeParmDecl 0x7fe8b208a220 <line:1186:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fe8b208a3a8 <col:22, col:49> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fe8b208a358 <col:29, col:49> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fe8b208a420 <line:1187:1, col:66> col:8 struct __libcpp_is_signed definition
| |   |   |-public '__libcpp_is_signed_impl<_Tp>'
| |   |   `-CXXRecordDecl 0x7fe8b208a9b8 <col:1, col:8> col:8 implicit struct __libcpp_is_signed
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b208ac50 <line:1189:1, col:81> col:29 struct __libcpp_is_signed definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fe8b208aa70 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b208af20 <col:22, col:29> col:29 implicit struct __libcpp_is_signed
| |   |-ClassTemplateDecl 0x7fe8b208b128 <line:1191:1, col:94> col:50 is_signed
| |   | |-TemplateTypeParmDecl 0x7fe8b208afd8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b208b090 <col:22, col:94> col:50 struct is_signed definition
| |   |   |-public '__libcpp_is_signed<_Tp>'
| |   |   |-TypeVisibilityAttr 0x7fe8b208b430 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fe8b208b6b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1191:22, col:50> col:50 implicit struct is_signed
| |   |-ClassTemplateDecl 0x7fe8b208ba08 <line:1200:1, line:1201:84> col:8 __libcpp_is_unsigned_impl
| |   | |-TemplateTypeParmDecl 0x7fe8b208b770 <line:1200:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fe8b208b8f8 <col:22, col:47> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fe8b208b8a8 <col:29, col:47> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fe8b208b970 <line:1201:1, col:84> col:8 struct __libcpp_is_unsigned_impl definition
| |   |   |-public 'integral_constant<_Bool, (_Tp(0) < _Tp(-1))>'
| |   |   `-CXXRecordDecl 0x7fe8b208bf68 <col:1, col:8> col:8 implicit struct __libcpp_is_unsigned_impl
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b208c200 <line:1203:1, line:1204:67> col:8 struct __libcpp_is_unsigned_impl definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fe8b208c020 <line:1203:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b208c4d0 <line:1204:1, col:8> col:8 implicit struct __libcpp_is_unsigned_impl
| |   |-ClassTemplateDecl 0x7fe8b208c828 <line:1206:1, line:1207:70> col:8 __libcpp_is_unsigned
| |   | |-TemplateTypeParmDecl 0x7fe8b208c588 <line:1206:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fe8b208c718 <col:22, col:49> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fe8b208c6c8 <col:29, col:49> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fe8b208c790 <line:1207:1, col:70> col:8 struct __libcpp_is_unsigned definition
| |   |   |-public '__libcpp_is_unsigned_impl<_Tp>'
| |   |   `-CXXRecordDecl 0x7fe8b208cd28 <col:1, col:8> col:8 implicit struct __libcpp_is_unsigned
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b208cfc0 <line:1209:1, col:83> col:29 struct __libcpp_is_unsigned definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fe8b208cde0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b208d2a8 <col:22, col:29> col:29 implicit struct __libcpp_is_unsigned
| |   |-ClassTemplateDecl 0x7fe8b208d4a8 <line:1211:1, col:98> col:50 is_unsigned
| |   | |-TemplateTypeParmDecl 0x7fe8b208d360 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b208d410 <col:22, col:98> col:50 struct is_unsigned definition
| |   |   |-public '__libcpp_is_unsigned<_Tp>'
| |   |   |-TypeVisibilityAttr 0x7fe8b208d720 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fe8b208d9a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1211:22, col:50> col:50 implicit struct is_unsigned
| |   |-ClassTemplateDecl 0x7fe8b208dba8 <line:1220:1, line:1221:44> line:1220:50 rank
| |   | |-TemplateTypeParmDecl 0x7fe8b208da60 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b208db10 <col:22, line:1221:44> line:1220:50 struct rank definition
| |   |   |-public 'integral_constant<size_t, 0>':'struct std::__1::integral_constant<unsigned long, 0>'
| |   |   |-TypeVisibilityAttr 0x7fe8b208de20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fe8b208e740 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1220:22, col:50> col:50 implicit struct rank
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b208e9d8 <line:1222:1, line:1223:63> line:1222:50 struct rank definition
| |   | |-public 'integral_constant<size_t, rank<_Tp>::value + 1>'
| |   | |-TemplateArgument type 'type-parameter-0-0 []'
| |   | |-TemplateTypeParmDecl 0x7fe8b208e7f8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fe8b208eb28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fe8b208ef48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1222:22, col:50> col:50 implicit struct rank
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b208f288 <line:1224:1, line:1225:63> line:1224:62 struct rank definition
| |   | |-public 'integral_constant<size_t, rank<_Tp>::value + 1>'
| |   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
| |   | |-TemplateTypeParmDecl 0x7fe8b208f000 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fe8b208f078 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Np
| |   | |-TypeVisibilityAttr 0x7fe8b208f3d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fe8b208f788 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1224:34, col:62> col:62 implicit struct rank
| |   |-ClassTemplateDecl 0x7fe8b208fa38 <line:1234:1, line:1235:44> line:1234:68 extent
| |   | |-TemplateTypeParmDecl 0x7fe8b208f840 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fe8b208f8e0 <col:22, col:37> col:31 'unsigned int' depth 0 index 1 _Ip
| |   | | `-TemplateArgument expr
| |   | |   `-ImplicitCastExpr 0x7fe8b208f938 <col:37> 'unsigned int' <IntegralCast>
| |   | |     `-IntegerLiteral 0x7fe8b208f8a8 <col:37> 'int' 0
| |   | `-CXXRecordDecl 0x7fe8b208f9a0 <col:40, line:1235:44> line:1234:68 struct extent definition
| |   |   |-public 'integral_constant<size_t, 0>':'struct std::__1::integral_constant<unsigned long, 0>'
| |   |   |-TypeVisibilityAttr 0x7fe8b208fd00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fe8b208fe88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1234:40, col:68> col:68 implicit struct extent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b2090200 <line:1236:1, line:1237:44> line:1236:50 struct extent definition
| |   | |-public 'integral_constant<size_t, 0>':'struct std::__1::integral_constant<unsigned long, 0>'
| |   | |-TemplateArgument type 'type-parameter-0-0 []'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fe8b208ff40 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fe8b2090388 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fe8b2090638 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1236:22, col:50> col:50 implicit struct extent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b20909c0 <line:1238:1, line:1239:68> line:1238:64 struct extent definition
| |   | |-public 'integral_constant<size_t, extent<_Tp, _Ip - 1>::value>'
| |   | |-TemplateArgument type 'type-parameter-0-0 []'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fe8b2090868 <col:78> 'unsigned int' NonTypeTemplateParm 0x7fe8b2090770 '_Ip' 'unsigned int'
| |   | |-TemplateTypeParmDecl 0x7fe8b20906f0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fe8b2090770 <col:22, col:31> col:31 referenced 'unsigned int' depth 0 index 1 _Ip
| |   | |-TypeVisibilityAttr 0x7fe8b2090b28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fe8b2091058 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1238:36, col:64> col:64 implicit struct extent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b2091430 <line:1240:1, line:1241:46> line:1240:62 struct extent definition
| |   | |-public 'integral_constant<size_t, _Np>'
| |   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fe8b2091110 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fe8b2091188 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Np
| |   | |-TypeVisibilityAttr 0x7fe8b20915b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fe8b20918b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1240:34, col:62> col:62 implicit struct extent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b2091cf0 <line:1242:1, line:1243:68> line:1242:76 struct extent definition
| |   | |-public 'integral_constant<size_t, extent<_Tp, _Ip - 1>::value>'
| |   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fe8b2091b90 <col:93> 'unsigned int' NonTypeTemplateParm 0x7fe8b2091a58 '_Ip' 'unsigned int'
| |   | |-TemplateTypeParmDecl 0x7fe8b2091970 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fe8b20919e8 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Np
| |   | |-NonTypeTemplateParmDecl 0x7fe8b2091a58 <col:34, col:43> col:43 referenced 'unsigned int' depth 0 index 2 _Ip
| |   | |-TypeVisibilityAttr 0x7fe8b2091e58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fe8b20923b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1242:48, col:76> col:76 implicit struct extent
| |   |-ClassTemplateDecl 0x7fe8b20925b8 <line:1252:1, line:1253:23> line:1252:50 remove_extent
| |   | |-TemplateTypeParmDecl 0x7fe8b2092470 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b2092520 <col:22, line:1253:23> line:1252:50 struct remove_extent definition
| |   |   |-TypeVisibilityAttr 0x7fe8b2092830 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fe8b2092878 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1252:22, col:50> col:50 implicit struct remove_extent
| |   |   `-TypedefDecl 0x7fe8b2092920 <line:1253:6, col:18> col:18 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7fe8b20924b0 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fe8b2092470 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b2092b78 <line:1254:1, line:1255:23> line:1254:50 struct remove_extent definition
| |   | |-TemplateArgument type 'type-parameter-0-0 []'
| |   | |-TemplateTypeParmDecl 0x7fe8b2092998 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fe8b2092cc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fe8b2092e00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1254:22, col:50> col:50 implicit struct remove_extent
| |   | `-TypedefDecl 0x7fe8b2092ea8 <line:1255:6, col:18> col:18 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fe8b20929e0 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fe8b2092998 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b2093200 <line:1256:1, line:1257:23> line:1256:62 struct remove_extent definition
| |   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
| |   | |-TemplateTypeParmDecl 0x7fe8b2092f20 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fe8b2092f98 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Np
| |   | |-TypeVisibilityAttr 0x7fe8b2093348 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fe8b2093480 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1256:34, col:62> col:62 implicit struct remove_extent
| |   | `-TypedefDecl 0x7fe8b2093528 <line:1257:6, col:18> col:18 type '_Tp'
| |   |   `-TemplateTypeParmType 0x7fe8b2092f60 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fe8b2092f20 '_Tp'
| |   |-TypeAliasTemplateDecl 0x7fe8b20937e0 <line:1260:1, col:75> col:22 remove_extent_t
| |   | |-TemplateTypeParmDecl 0x7fe8b20935a0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fe8b2093780 <col:22, col:75> col:28 remove_extent_t 'typename remove_extent<_Tp>::type'
| |   |   `-DependentNameType 0x7fe8b2093710 'typename remove_extent<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fe8b2093978 <line:1265:1, line:1266:23> line:1265:50 remove_all_extents
| |   | |-TemplateTypeParmDecl 0x7fe8b2093830 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b20938e0 <col:22, line:1266:23> line:1265:50 struct remove_all_extents definition
| |   |   |-TypeVisibilityAttr 0x7fe8b2093bf0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fe8b2093c38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1265:22, col:50> col:50 implicit struct remove_all_extents
| |   |   `-TypedefDecl 0x7fe8b2093ce0 <line:1266:6, col:18> col:18 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7fe8b2093870 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x7fe8b2093830 '_Tp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b2093f38 <line:1267:1, line:1268:58> line:1267:50 struct remove_all_extents definition
| |   | |-TemplateArgument type 'type-parameter-0-0 []'
| |   | |-TemplateTypeParmDecl 0x7fe8b2093d58 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fe8b2094088 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fe8b2094200 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1267:22, col:50> col:50 implicit struct remove_all_extents
| |   | `-TypedefDecl 0x7fe8b2094400 <line:1268:6, col:53> col:53 type 'typename remove_all_extents<_Tp>::type'
| |   |   `-DependentNameType 0x7fe8b2094390 'typename remove_all_extents<_Tp>::type' dependent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b2094708 <line:1269:1, line:1270:58> line:1269:62 struct remove_all_extents definition
| |   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
| |   | |-TemplateTypeParmDecl 0x7fe8b2094478 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fe8b20944f8 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Np
| |   | |-TypeVisibilityAttr 0x7fe8b2094858 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fe8b2094990 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1269:34, col:62> col:62 implicit struct remove_all_extents
| |   | `-TypedefDecl 0x7fe8b2094b50 <line:1270:6, col:53> col:53 type 'typename remove_all_extents<_Tp>::type'
| |   |   `-DependentNameType 0x7fe8b2094ae0 'typename remove_all_extents<_Tp>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fe8b2094dd0 <line:1273:1, col:85> col:22 remove_all_extents_t
| |   | |-TemplateTypeParmDecl 0x7fe8b2094bc8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fe8b2094d70 <col:22, col:85> col:28 remove_all_extents_t 'typename remove_all_extents<_Tp>::type'
| |   |   `-DependentNameType 0x7fe8b2094d00 'typename remove_all_extents<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fe8b2094fa8 <line:1278:1, line:1281:1> line:1279:8 __decay
| |   | |-TemplateTypeParmDecl 0x7fe8b2094e20 <line:1278:11, col:17> col:17 referenced class depth 0 index 0 _Up
| |   | |-NonTypeTemplateParmDecl 0x7fe8b2094e98 <col:22> col:26 '_Bool' depth 0 index 1
| |   | `-CXXRecordDecl 0x7fe8b2094f10 <line:1279:1, line:1281:1> line:1279:8 struct __decay definition
| |   |   |-CXXRecordDecl 0x7fe8b2096290 <col:1, col:8> col:8 implicit struct __decay
| |   |   `-TypedefDecl 0x7fe8b2096450 <line:1280:5, col:43> col:43 type 'typename remove_cv<_Up>::type'
| |   |     `-DependentNameType 0x7fe8b20963e0 'typename remove_cv<_Up>::type' dependent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b20966b0 <line:1283:1, line:1297:1> line:1284:8 struct __decay definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fe8b20964c8 <line:1283:11, col:17> col:17 referenced class depth 0 index 0 _Up
| |   | |-CXXRecordDecl 0x7fe8b2096940 <line:1284:1, col:8> col:8 implicit struct __decay
| |   | |-AccessSpecDecl 0x7fe8b20969d8 <line:1285:1, col:7> col:1 public
| |   | `-TypedefDecl 0x7fe8b2097470 <line:1286:5, line:1296:30> col:30 type 'typename conditional<is_array<_Up>::value, typename remove_extent<_Up>::type *, typename conditional<is_function<_Up>::value, typename add_pointer<_Up>::type, typename remove_cv<_Up>::type>::type>::type'
| |   |   `-DependentNameType 0x7fe8b2097400 'typename conditional<is_array<_Up>::value, typename remove_extent<_Up>::type *, typename conditional<is_function<_Up>::value, typename add_pointer<_Up>::type, typename remove_cv<_Up>::type>::type>::type' dependent
| |   |-ClassTemplateDecl 0x7fe8b2097638 <line:1299:1, line:1306:1> line:1300:29 decay
| |   | |-TemplateTypeParmDecl 0x7fe8b20974e8 <line:1299:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b20975a0 <line:1300:1, line:1306:1> line:1300:29 struct decay definition
| |   |   |-TypeVisibilityAttr 0x7fe8b20978b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fe8b20978f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1300:1, col:29> col:29 implicit struct decay
| |   |   |-AccessSpecDecl 0x7fe8b2097990 <line:1302:1, col:8> col:1 private
| |   |   |-TypedefDecl 0x7fe8b2097ae0 <line:1303:5, col:50> col:50 referenced _Up 'typename remove_reference<_Tp>::type'
| |   |   | `-DependentNameType 0x7fe8b2097a70 'typename remove_reference<_Tp>::type' dependent
| |   |   |-AccessSpecDecl 0x7fe8b2097b38 <line:1304:1, col:7> col:1 public
| |   |   `-TypedefDecl 0x7fe8b2097f00 <line:1305:5, col:73> col:73 type 'typename __decay<_Up, __is_referenceable<_Up>::value>::type'
| |   |     `-DependentNameType 0x7fe8b2097e90 'typename __decay<_Up, __is_referenceable<_Up>::value>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fe8b2098200 <line:1309:1, col:59> col:22 decay_t
| |   | |-TemplateTypeParmDecl 0x7fe8b2097f78 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fe8b2098160 <col:22, col:59> col:28 decay_t 'typename decay<_Tp>::type'
| |   |   `-DependentNameType 0x7fe8b20980f0 'typename decay<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fe8b2098398 <line:1314:1, line:1315:59> line:1314:50 is_abstract
| |   | |-TemplateTypeParmDecl 0x7fe8b2098250 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b2098300 <col:22, line:1315:59> line:1314:50 struct is_abstract definition
| |   |   |-public 'integral_constant<_Bool, __is_abstract(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fe8b2098610 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fe8b20987f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1314:22, col:50> col:50 implicit struct is_abstract
| |   |-ClassTemplateDecl 0x7fe8b20989f8 <line:1325:1, line:1326:70> col:1 __libcpp_is_final
| |   | |-TemplateTypeParmDecl 0x7fe8b20988b0 <line:1325:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b2098960 <col:22, line:1326:70> col:1 struct __libcpp_is_final definition
| |   |   |-public 'integral_constant<_Bool, __is_final(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fe8b2098c70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fe8b2098e58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1325:22, line:1326:1> col:1 implicit struct __libcpp_is_final
| |   |-ClassTemplateDecl 0x7fe8b2099058 <line:1333:1, line:1334:61> col:1 is_final
| |   | |-TemplateTypeParmDecl 0x7fe8b2098f10 <line:1333:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b2098fc0 <col:22, line:1334:61> col:1 struct is_final definition
| |   |   |-public 'integral_constant<_Bool, __is_final(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fe8b20992e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fe8b2099468 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1333:22, line:1334:1> col:1 implicit struct is_final
| |   |-ClassTemplateDecl 0x7fe8b20996e0 <line:1359:1, line:1361:63> line:1360:29 is_base_of
| |   | |-TemplateTypeParmDecl 0x7fe8b2099520 <line:1359:11, col:17> col:17 referenced class depth 0 index 0 _Bp
| |   | |-TemplateTypeParmDecl 0x7fe8b2099588 <col:22, col:28> col:28 referenced class depth 0 index 1 _Dp
| |   | `-CXXRecordDecl 0x7fe8b2099648 <line:1360:1, line:1361:63> line:1360:29 struct is_base_of definition
| |   |   |-public 'integral_constant<_Bool, __is_base_of(_Bp, _Dp)>'
| |   |   |-TypeVisibilityAttr 0x7fe8b2099980 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fe8b2099b78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1360:1, col:29> col:29 implicit struct is_base_of
| |   |-ClassTemplateDecl 0x7fe8b2099df0 <line:1399:1, line:1401:65> line:1399:61 is_convertible
| |   | |-TemplateTypeParmDecl 0x7fe8b2099c30 <col:11, col:17> col:17 referenced class depth 0 index 0 _T1
| |   | |-TemplateTypeParmDecl 0x7fe8b2099c98 <col:22, col:28> col:28 referenced class depth 0 index 1 _T2
| |   | `-CXXRecordDecl 0x7fe8b2099d58 <col:33, line:1401:65> line:1399:61 struct is_convertible definition
| |   |   |-public 'integral_constant<_Bool, __is_convertible_to(_T1, _T2) && !is_abstract<_T2>::value>'
| |   |   |-TypeVisibilityAttr 0x7fe8b209a090 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fe8b209b448 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1399:33, col:61> col:61 implicit struct is_convertible
| |   |-ClassTemplateDecl 0x7fe8b209b648 <line:1489:1, line:1491:56> line:1490:29 is_empty
| |   | |-TemplateTypeParmDecl 0x7fe8b209b500 <line:1489:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b209b5b0 <line:1490:1, line:1491:56> line:1490:29 struct is_empty definition
| |   |   |-public 'integral_constant<_Bool, __is_empty(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fe8b209b8c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fe8b209baa8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1490:1, col:29> col:29 implicit struct is_empty
| |   |-ClassTemplateDecl 0x7fe8b209bca8 <line:1525:1, line:1527:62> line:1526:29 is_polymorphic
| |   | |-TemplateTypeParmDecl 0x7fe8b209bb60 <line:1525:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b209bc10 <line:1526:1, line:1527:62> line:1526:29 struct is_polymorphic definition
| |   |   |-public 'integral_constant<_Bool, __is_polymorphic(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fe8b209bf20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fe8b209c108 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1526:1, col:29> col:29 implicit struct is_polymorphic
| |   |-ClassTemplateDecl 0x7fe8b209c308 <line:1550:1, line:1551:70> line:1550:50 has_virtual_destructor
| |   | |-TemplateTypeParmDecl 0x7fe8b209c1c0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b209c270 <col:22, line:1551:70> line:1550:50 struct has_virtual_destructor definition
| |   |   |-public 'integral_constant<_Bool, __has_virtual_destructor(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fe8b209c580 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fe8b209c768 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1550:22, col:50> col:50 implicit struct has_virtual_destructor
| |   |-ClassTemplateDecl 0x7fe8b209c968 <line:1567:1, line:1568:59> line:1567:50 alignment_of
| |   | |-TemplateTypeParmDecl 0x7fe8b209c820 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b209c8d0 <col:22, line:1568:59> line:1567:50 struct alignment_of definition
| |   |   |-public 'integral_constant<size_t, __alignof(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fe8b209cbe0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fe8b209cdc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1567:22, col:50> col:50 implicit struct alignment_of
| |   |-ClassTemplateDecl 0x7fe8b209d010 <line:1577:1, line:1582:1> line:1578:8 __type_list
| |   | |-TemplateTypeParmDecl 0x7fe8b209ce80 <line:1577:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-TemplateTypeParmDecl 0x7fe8b209cee8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Tp
| |   | |-CXXRecordDecl 0x7fe8b209cf78 <line:1578:1, line:1582:1> line:1578:8 struct __type_list definition
| |   | | |-CXXRecordDecl 0x7fe8b209d2f0 <col:1, col:8> col:8 implicit struct __type_list
| |   | | |-TypedefDecl 0x7fe8b209d398 <line:1580:5, col:17> col:17 _Head '_Hp'
| |   | | | `-TemplateTypeParmType 0x7fe8b209cec0 '_Hp' dependent depth 0 index 0
| |   | | |   `-TemplateTypeParm 0x7fe8b209ce80 '_Hp'
| |   | | `-TypedefDecl 0x7fe8b209d400 <line:1581:5, col:17> col:17 _Tail '_Tp'
| |   | |   `-TemplateTypeParmType 0x7fe8b209cf30 '_Tp' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fe8b209cee8 '_Tp'
| |   | |-ClassTemplateSpecializationDecl 0x7fe8b20a0d18 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<int *>'
| |   | | `-TemplateArgument type 'struct std::__1::__nat'
| |   | |-ClassTemplateSpecializationDecl 0x7fe8b20a0f30 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<struct std::__1::__struct_double4>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat>'
| |   | |-ClassTemplateSpecializationDecl 0x7fe8b20a1140 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<struct std::__1::__struct_double>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> >'
| |   | |-ClassTemplateSpecializationDecl 0x7fe8b20a1350 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<long double>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > >'
| |   | |-ClassTemplateSpecializationDecl 0x7fe8b20a1600 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<double>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > >'
| |   | |-ClassTemplateSpecializationDecl 0x7fe8b20a1810 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<unsigned long long>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > >'
| |   | |-ClassTemplateSpecializationDecl 0x7fe8b20a1a20 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<unsigned long>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > >'
| |   | |-ClassTemplateSpecializationDecl 0x7fe8b20a1c30 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<unsigned int>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<unsigned long>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > > >'
| |   | |-ClassTemplateSpecializationDecl 0x7fe8b20a1e40 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<unsigned short>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<unsigned int>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > > > >'
| |   | |-ClassTemplateSpecializationDecl 0x7fe8b20a2050 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'struct std::__1::__align_type<unsigned char>'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<struct std::__1::__align_type<unsigned short>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned int>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > > > > >'
| |   | |-ClassTemplateSpecializationDecl 0x7fe8b20bfce8 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type '__int128'
| |   | | `-TemplateArgument type 'struct std::__1::__nat'
| |   | |-ClassTemplateSpecializationDecl 0x7fe8b20bff00 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'long long'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<__int128, struct std::__1::__nat>'
| |   | |-ClassTemplateSpecializationDecl 0x7fe8b20c0110 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'long'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> >'
| |   | |-ClassTemplateSpecializationDecl 0x7fe8b20c0320 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'int'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > >'
| |   | |-ClassTemplateSpecializationDecl 0x7fe8b20c0530 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'short'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > >'
| |   | |-ClassTemplateSpecializationDecl 0x7fe8b20c0740 <line:1577:1, line:1582:1> line:1578:8 struct __type_list definition
| |   | | |-TemplateArgument type 'signed char'
| |   | | |-TemplateArgument type 'struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > >'
| |   | | |-CXXRecordDecl 0x7fe8b20c8488 prev 0x7fe8b20c0740 <col:1, col:8> col:8 implicit struct __type_list
| |   | | |-TypedefDecl 0x7fe8b20c8558 <line:1580:5, col:17> col:17 referenced _Head 'signed char':'signed char'
| |   | | | `-SubstTemplateTypeParmType 0x7fe8b20c8520 'signed char' sugar
| |   | | |   |-TemplateTypeParmType 0x7fe8b209cec0 '_Hp' dependent depth 0 index 0
| |   | | |   | `-TemplateTypeParm 0x7fe8b209ce80 '_Hp'
| |   | | |   `-BuiltinType 0x7fe8b1832580 'signed char'
| |   | | `-TypedefDecl 0x7fe8b20c85e8 <line:1581:5, col:17> col:17 _Tail 'struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > >':'struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > >'
| |   | |   `-SubstTemplateTypeParmType 0x7fe8b20c85b0 'struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > >' sugar
| |   | |     |-TemplateTypeParmType 0x7fe8b209cf30 '_Tp' dependent depth 0 index 1
| |   | |     | `-TemplateTypeParm 0x7fe8b209cee8 '_Tp'
| |   | |     `-RecordType 0x7fe8b20c0630 'struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > >'
| |   | |       `-ClassTemplateSpecialization 0x7fe8b20c0530 '__type_list'
| |   | |-ClassTemplateSpecializationDecl 0x7fe8b20c0a40 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'unsigned __int128'
| |   | | `-TemplateArgument type 'struct std::__1::__nat'
| |   | |-ClassTemplateSpecializationDecl 0x7fe8b20c0c50 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'unsigned long long'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat>'
| |   | |-ClassTemplateSpecializationDecl 0x7fe8b20c0e60 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'unsigned long'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> >'
| |   | |-ClassTemplateSpecializationDecl 0x7fe8b20c1070 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'unsigned int'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > >'
| |   | |-ClassTemplateSpecializationDecl 0x7fe8b20c1290 <line:1577:1, line:1582:1> line:1578:8 struct __type_list
| |   | | |-TemplateArgument type 'unsigned short'
| |   | | `-TemplateArgument type 'struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > >'
| |   | `-ClassTemplateSpecializationDecl 0x7fe8b20c14a0 <line:1577:1, line:1582:1> line:1578:8 struct __type_list definition
| |   |   |-TemplateArgument type 'unsigned char'
| |   |   |-TemplateArgument type 'struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > >'
| |   |   |-CXXRecordDecl 0x7fe8b20cfd68 prev 0x7fe8b20c14a0 <col:1, col:8> col:8 implicit struct __type_list
| |   |   |-TypedefDecl 0x7fe8b20cfe38 <line:1580:5, col:17> col:17 referenced _Head 'unsigned char':'unsigned char'
| |   |   | `-SubstTemplateTypeParmType 0x7fe8b20cfe00 'unsigned char' sugar
| |   |   |   |-TemplateTypeParmType 0x7fe8b209cec0 '_Hp' dependent depth 0 index 0
| |   |   |   | `-TemplateTypeParm 0x7fe8b209ce80 '_Hp'
| |   |   |   `-BuiltinType 0x7fe8b1832620 'unsigned char'
| |   |   `-TypedefDecl 0x7fe8b20cfec8 <line:1581:5, col:17> col:17 _Tail 'struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > >':'struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > >'
| |   |     `-SubstTemplateTypeParmType 0x7fe8b20cfe90 'struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > >' sugar
| |   |       |-TemplateTypeParmType 0x7fe8b209cf30 '_Tp' dependent depth 0 index 1
| |   |       | `-TemplateTypeParm 0x7fe8b209cee8 '_Tp'
| |   |       `-RecordType 0x7fe8b20c1390 'struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > >'
| |   |         `-ClassTemplateSpecialization 0x7fe8b20c1290 '__type_list'
| |   |-CXXRecordDecl 0x7fe8b209d478 <line:1584:1, line:1592:1> line:1584:8 referenced struct __nat definition
| |   | |-CXXRecordDecl 0x7fe8b209d598 <col:1, col:8> col:8 implicit referenced struct __nat
| |   | |-CXXConstructorDecl 0x7fe8b209d698 <line:1587:5, col:20> col:5 __nat 'void (void)' delete trivial
| |   | |-CXXConstructorDecl 0x7fe8b209d840 <line:1588:5, col:32> col:5 __nat 'void (const struct std::__1::__nat &)' delete trivial
| |   | | `-ParmVarDecl 0x7fe8b209d778 <col:11, col:22> col:23 'const struct std::__1::__nat &'
| |   | |-CXXMethodDecl 0x7fe8b209d9f0 <line:1589:5, col:43> col:12 operator= 'struct std::__1::__nat &(const struct std::__1::__nat &)' delete trivial
| |   | | `-ParmVarDecl 0x7fe8b209d900 <col:22, col:33> col:34 'const struct std::__1::__nat &'
| |   | `-CXXDestructorDecl 0x7fe8b209dae0 <line:1590:5, col:21> col:5 ~__nat 'void (void)' delete trivial noexcept-unevaluated 0x7fe8b209dae0
| |   |-ClassTemplateDecl 0x7fe8b209dcd8 <line:1594:1, line:1599:1> line:1595:8 __align_type
| |   | |-TemplateTypeParmDecl 0x7fe8b209dbb8 <line:1594:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fe8b209dc40 <line:1595:1, line:1599:1> line:1595:8 struct __align_type definition
| |   | | |-CXXRecordDecl 0x7fe8b209df50 <col:1, col:8> col:8 implicit struct __align_type
| |   | | |-VarDecl 0x7fe8b209dff8 <line:1597:5, col:52> col:25 value 'const size_t':'const unsigned long' static cinit
| |   | | | `-DependentScopeDeclRefExpr 0x7fe8b209e128 <col:33, col:52> '<dependent type>' lvalue
| |   | | `-TypedefDecl 0x7fe8b209e178 <line:1598:5, col:17> col:17 type '_Tp'
| |   | |   `-TemplateTypeParmType 0x7fe8b209dc00 '_Tp' dependent depth 0 index 0
| |   | |     `-TemplateTypeParm 0x7fe8b209dbb8 '_Tp'
| |   | |-ClassTemplateSpecializationDecl 0x7fe8b209e700 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
| |   | | `-TemplateArgument type 'unsigned char'
| |   | |-ClassTemplateSpecializationDecl 0x7fe8b209e8d0 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
| |   | | `-TemplateArgument type 'unsigned short'
| |   | |-ClassTemplateSpecializationDecl 0x7fe8b209eaa0 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
| |   | | `-TemplateArgument type 'unsigned int'
| |   | |-ClassTemplateSpecializationDecl 0x7fe8b209ec70 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
| |   | | `-TemplateArgument type 'unsigned long'
| |   | |-ClassTemplateSpecializationDecl 0x7fe8b209ee40 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
| |   | | `-TemplateArgument type 'unsigned long long'
| |   | |-ClassTemplateSpecializationDecl 0x7fe8b209f010 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
| |   | | `-TemplateArgument type 'double'
| |   | |-ClassTemplateSpecializationDecl 0x7fe8b20a0600 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
| |   | | `-TemplateArgument type 'long double'
| |   | |-ClassTemplateSpecializationDecl 0x7fe8b20a07c8 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
| |   | | `-TemplateArgument type 'struct std::__1::__struct_double'
| |   | |-ClassTemplateSpecializationDecl 0x7fe8b20a0988 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
| |   | | `-TemplateArgument type 'struct std::__1::__struct_double4'
| |   | `-ClassTemplateSpecializationDecl 0x7fe8b20a0b50 <line:1594:1, line:1599:1> line:1595:8 struct __align_type
| |   |   `-TemplateArgument type 'int *'
| |   |-CXXRecordDecl 0x7fe8b209e200 <line:1601:1, col:42> col:8 referenced struct __struct_double definition
| |   | |-CXXRecordDecl 0x7fe8b209e328 <col:1, col:8> col:8 implicit struct __struct_double
| |   | `-FieldDecl 0x7fe8b209e3d8 <col:25, col:37> col:37 __lx 'long double'
| |   |-CXXRecordDecl 0x7fe8b209e440 <line:1602:1, col:41> col:8 referenced struct __struct_double4 definition
| |   | |-CXXRecordDecl 0x7fe8b209e568 <col:1, col:8> col:8 implicit struct __struct_double4
| |   | `-FieldDecl 0x7fe8b209e680 <col:26, col:39> col:33 __lx 'double [4]'
| |   |-TypedefDecl 0x7fe8b20a2260 <line:1604:1, line:1616:25> col:25 referenced __all_types '__type_list<__align_type<unsigned char>, __type_list<__align_type<unsigned short>, __type_list<__align_type<unsigned int>, __type_list<__align_type<unsigned long>, __type_list<__align_type<unsigned long long>, __type_list<__align_type<double>, __type_list<__align_type<long double>, __type_list<__align_type<struct std::__1::__struct_double>, __type_list<__align_type<struct std::__1::__struct_double4>, __type_list<__align_type<int *>, struct std::__1::__nat> > > > > > > > > >':'struct std::__1::__type_list<struct std::__1::__align_type<unsigned char>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned short>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned int>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > > > > > >'
| |   | `-TemplateSpecializationType 0x7fe8b20a2170 '__type_list<__align_type<unsigned char>, __type_list<__align_type<unsigned short>, __type_list<__align_type<unsigned int>, __type_list<__align_type<unsigned long>, __type_list<__align_type<unsigned long long>, __type_list<__align_type<double>, __type_list<__align_type<long double>, __type_list<__align_type<struct std::__1::__struct_double>, __type_list<__align_type<struct std::__1::__struct_double4>, __type_list<__align_type<int *>, struct std::__1::__nat> > > > > > > > > >' sugar __type_list
| |   |   |-TemplateArgument type '__align_type<unsigned char>':'struct std::__1::__align_type<unsigned char>'
| |   |   |-TemplateArgument type '__type_list<__align_type<unsigned short>, __type_list<__align_type<unsigned int>, __type_list<__align_type<unsigned long>, __type_list<__align_type<unsigned long long>, __type_list<__align_type<double>, __type_list<__align_type<long double>, __type_list<__align_type<struct std::__1::__struct_double>, __type_list<__align_type<struct std::__1::__struct_double4>, __type_list<__align_type<int *>, struct std::__1::__nat> > > > > > > > >':'struct std::__1::__type_list<struct std::__1::__align_type<unsigned short>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned int>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > > > > >'
| |   |   `-RecordType 0x7fe8b20a2150 'struct std::__1::__type_list<struct std::__1::__align_type<unsigned char>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned short>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned int>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long>, struct std::__1::__type_list<struct std::__1::__align_type<unsigned long long>, struct std::__1::__type_list<struct std::__1::__align_type<double>, struct std::__1::__type_list<struct std::__1::__align_type<long double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double>, struct std::__1::__type_list<struct std::__1::__align_type<struct std::__1::__struct_double4>, struct std::__1::__type_list<struct std::__1::__align_type<int *>, struct std::__1::__nat> > > > > > > > > >'
| |   |     `-ClassTemplateSpecialization 0x7fe8b20a2050 '__type_list'
| |   |-ClassTemplateDecl 0x7fe8b20a2448 <line:1618:1, col:44> col:44 __find_pod
| |   | |-TemplateTypeParmDecl 0x7fe8b20a22b8 <col:11, col:17> col:17 class depth 0 index 0 _TL
| |   | |-NonTypeTemplateParmDecl 0x7fe8b20a2338 <col:22, col:29> col:29 'size_t':'unsigned long' depth 0 index 1 _Align
| |   | `-CXXRecordDecl 0x7fe8b20a23b0 <col:37, col:44> col:44 struct __find_pod
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b20a2ab0 <line:1620:1, line:1628:1> line:1621:8 struct __find_pod definition
| |   | |-TemplateArgument type '__type_list<type-parameter-0-0, struct std::__1::__nat>'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fe8b20a2950 <col:44> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe8b20a2768 '_Align' 'size_t':'unsigned long'
| |   | |-TemplateTypeParmDecl 0x7fe8b20a26e8 <line:1620:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-NonTypeTemplateParmDecl 0x7fe8b20a2768 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Align
| |   | |-CXXRecordDecl 0x7fe8b20a2d80 <line:1621:1, col:8> col:8 implicit struct __find_pod
| |   | `-TypedefDecl 0x7fe8b20a31c0 <line:1623:5, line:1627:34> col:34 type 'typename conditional<_Align == _Hp::value, typename _Hp::type, void>::type'
| |   |   `-DependentNameType 0x7fe8b20a3150 'typename conditional<_Align == _Hp::value, typename _Hp::type, void>::type' dependent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b20a3670 <line:1630:1, line:1638:1> line:1631:8 struct __find_pod definition
| |   | |-TemplateArgument type '__type_list<type-parameter-0-0, type-parameter-0-1>'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fe8b20a34c0 <col:42> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe8b20a3328 '_Align' 'size_t':'unsigned long'
| |   | |-TemplateTypeParmDecl 0x7fe8b20a3238 <line:1630:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-TemplateTypeParmDecl 0x7fe8b20a32a8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fe8b20a3328 <col:33, col:40> col:40 referenced 'size_t':'unsigned long' depth 0 index 2 _Align
| |   | |-CXXRecordDecl 0x7fe8b20a3940 <line:1631:1, col:8> col:8 implicit struct __find_pod
| |   | `-TypedefDecl 0x7fe8b20a3f90 <line:1633:5, line:1637:34> col:34 type 'typename conditional<_Align == _Hp::value, typename _Hp::type, typename __find_pod<_Tp, _Align>::type>::type'
| |   |   `-DependentNameType 0x7fe8b20a3f20 'typename conditional<_Align == _Hp::value, typename _Hp::type, typename __find_pod<_Tp, _Align>::type>::type' dependent
| |   |-ClassTemplateDecl 0x7fe8b20a4198 <line:1640:1, col:42> col:42 __find_max_align
| |   | |-TemplateTypeParmDecl 0x7fe8b20a4008 <col:11, col:17> col:17 class depth 0 index 0 _TL
| |   | |-NonTypeTemplateParmDecl 0x7fe8b20a4088 <col:22, col:29> col:29 'size_t':'unsigned long' depth 0 index 1 _Len
| |   | `-CXXRecordDecl 0x7fe8b20a4100 <col:35, col:42> col:42 struct __find_max_align
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b20a4760 <line:1642:1, line:1643:104> col:8 struct __find_max_align definition
| |   | |-public 'integral_constant<size_t, _Hp::value>'
| |   | |-TemplateArgument type '__type_list<type-parameter-0-0, struct std::__1::__nat>'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fe8b20a4600 <col:50> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe8b20a4478 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateTypeParmDecl 0x7fe8b20a43f8 <line:1642:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-NonTypeTemplateParmDecl 0x7fe8b20a4478 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Len
| |   | `-CXXRecordDecl 0x7fe8b20a4c48 <line:1643:1, col:8> col:8 implicit struct __find_max_align
| |   |-ClassTemplateDecl 0x7fe8b20a4ef8 <line:1645:1, line:1653:1> line:1646:8 __select_align
| |   | |-NonTypeTemplateParmDecl 0x7fe8b20a4d10 <line:1645:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-NonTypeTemplateParmDecl 0x7fe8b20a4d78 <col:24, col:31> col:31 referenced 'size_t':'unsigned long' depth 0 index 1 _A1
| |   | |-NonTypeTemplateParmDecl 0x7fe8b20a4de0 <col:36, col:43> col:43 referenced 'size_t':'unsigned long' depth 0 index 2 _A2
| |   | `-CXXRecordDecl 0x7fe8b20a4e60 <line:1646:1, line:1653:1> line:1646:8 struct __select_align definition
| |   |   |-CXXRecordDecl 0x7fe8b20a5250 <col:1, col:8> col:8 implicit struct __select_align
| |   |   |-AccessSpecDecl 0x7fe8b20a52e8 <line:1648:1, col:8> col:1 private
| |   |   |-VarDecl 0x7fe8b20a5320 <line:1649:5, col:51> col:25 referenced __min 'const size_t':'const unsigned long' static cinit
| |   |   | `-ConditionalOperator 0x7fe8b20a5448 <col:33, col:51> 'size_t':'unsigned long'
| |   |   |   |-BinaryOperator 0x7fe8b20a53d0 <col:33, col:39> '_Bool' '<'
| |   |   |   | |-DeclRefExpr 0x7fe8b20a5380 <col:33> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe8b20a4de0 '_A2' 'size_t':'unsigned long'
| |   |   |   | `-DeclRefExpr 0x7fe8b20a53a8 <col:39> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe8b20a4d78 '_A1' 'size_t':'unsigned long'
| |   |   |   |-DeclRefExpr 0x7fe8b20a53f8 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe8b20a4de0 '_A2' 'size_t':'unsigned long'
| |   |   |   `-DeclRefExpr 0x7fe8b20a5420 <col:51> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe8b20a4d78 '_A1' 'size_t':'unsigned long'
| |   |   |-VarDecl 0x7fe8b20a5488 <line:1650:5, col:51> col:25 referenced __max 'const size_t':'const unsigned long' static cinit
| |   |   | `-ConditionalOperator 0x7fe8b20a55b0 <col:33, col:51> 'size_t':'unsigned long'
| |   |   |   |-BinaryOperator 0x7fe8b20a5538 <col:33, col:39> '_Bool' '<'
| |   |   |   | |-DeclRefExpr 0x7fe8b20a54e8 <col:33> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe8b20a4d78 '_A1' 'size_t':'unsigned long'
| |   |   |   | `-DeclRefExpr 0x7fe8b20a5510 <col:39> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe8b20a4de0 '_A2' 'size_t':'unsigned long'
| |   |   |   |-DeclRefExpr 0x7fe8b20a5560 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe8b20a4de0 '_A2' 'size_t':'unsigned long'
| |   |   |   `-DeclRefExpr 0x7fe8b20a5588 <col:51> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe8b20a4d78 '_A1' 'size_t':'unsigned long'
| |   |   |-AccessSpecDecl 0x7fe8b20a5600 <line:1651:1, col:7> col:1 public
| |   |   `-VarDecl 0x7fe8b20a5638 <line:1652:5, col:56> col:25 value 'const size_t':'const unsigned long' static cinit
| |   |     `-ImplicitCastExpr 0x7fe8b20a57a8 <col:33, col:56> 'size_t':'unsigned long' <LValueToRValue>
| |   |       `-ConditionalOperator 0x7fe8b20a5778 <col:33, col:56> 'const size_t':'const unsigned long' lvalue
| |   |         |-BinaryOperator 0x7fe8b20a5700 <col:33, col:40> '_Bool' '<'
| |   |         | |-DeclRefExpr 0x7fe8b20a5698 <col:33> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe8b20a4d10 '_Len' 'size_t':'unsigned long'
| |   |         | `-ImplicitCastExpr 0x7fe8b20a56e8 <col:40> 'size_t':'unsigned long' <LValueToRValue>
| |   |         |   `-DeclRefExpr 0x7fe8b20a56c0 <col:40> 'const size_t':'const unsigned long' lvalue Var 0x7fe8b20a5488 '__max' 'const size_t':'const unsigned long'
| |   |         |-DeclRefExpr 0x7fe8b20a5728 <col:48> 'const size_t':'const unsigned long' lvalue Var 0x7fe8b20a5320 '__min' 'const size_t':'const unsigned long'
| |   |         `-DeclRefExpr 0x7fe8b20a5750 <col:56> 'const size_t':'const unsigned long' lvalue Var 0x7fe8b20a5488 '__max' 'const size_t':'const unsigned long'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b20a5bc0 <line:1655:1, line:1657:118> line:1656:8 struct __find_max_align definition
| |   | |-public 'integral_constant<size_t, __select_align<_Len, _Hp::value, __find_max_align<_Tp, _Len>::value>::value>'
| |   | |-TemplateArgument type '__type_list<type-parameter-0-0, type-parameter-0-1>'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fe8b20a5a60 <col:48> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe8b20a58c8 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateTypeParmDecl 0x7fe8b20a57e0 <line:1655:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-TemplateTypeParmDecl 0x7fe8b20a5848 <col:22, col:28> col:28 referenced class depth 0 index 1 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fe8b20a58c8 <col:33, col:40> col:40 referenced 'size_t':'unsigned long' depth 0 index 2 _Len
| |   | `-CXXRecordDecl 0x7fe8b20a64d8 <line:1656:1, col:8> col:8 implicit struct __find_max_align
| |   |-ClassTemplateDecl 0x7fe8b20a6938 <line:1659:1, line:1669:1> line:1660:29 aligned_storage
| |   | |-NonTypeTemplateParmDecl 0x7fe8b20a65a0 <line:1659:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-NonTypeTemplateParmDecl 0x7fe8b20a67f8 <col:24, col:77> col:31 referenced 'size_t':'unsigned long' depth 0 index 1 _Align
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fe8b20a67a8 <col:40, col:77> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fe8b20a68a0 <line:1660:1, line:1669:1> line:1660:29 struct aligned_storage definition
| |   |   |-TypeVisibilityAttr 0x7fe8b20a6c20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fe8b20a6c68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1660:1, col:29> col:29 implicit struct aligned_storage
| |   |   |-TypedefDecl 0x7fe8b20a6f20 <line:1662:5, col:60> col:60 referenced _Aligner 'typename __find_pod<__all_types, _Align>::type'
| |   |   | `-DependentNameType 0x7fe8b20a6eb0 'typename __find_pod<__all_types, _Align>::type' dependent
| |   |   |-StaticAssertDecl 0x7fe8b20a71c0 <line:1663:5, col:48> col:5
| |   |   | |-UnaryOperator 0x7fe8b20a70f8 <col:19, col:39> '<dependent type>' prefix '!'
| |   |   | | `-DependentScopeDeclRefExpr 0x7fe8b20a70b8 <col:20, col:39> '<dependent type>' lvalue
| |   |   | `-StringLiteral 0x7fe8b20a7198 <col:46> 'const char [1]' lvalue ""
| |   |   `-CXXRecordDecl 0x7fe8b20a71f8 <line:1664:5, line:1668:5> line:1664:11 union type definition
| |   |     |-CXXRecordDecl 0x7fe8b20a7318 <col:5, col:11> col:11 implicit union type
| |   |     |-FieldDecl 0x7fe8b20a73c0 <line:1666:9, col:18> col:18 __align 'std::__1::aligned_storage::_Aligner':'typename __find_pod<__all_types, _Align>::type'
| |   |     `-FieldDecl 0x7fe8b20a7a28 <line:1667:9, col:65> col:23 __data 'unsigned char [(_Len + _Align - 1) / _Align * _Align]'
| |   |-TypeAliasTemplateDecl 0x7fe8b20a7f30 <line:1672:1, line:1673:71> col:5 aligned_storage_t
| |   | |-NonTypeTemplateParmDecl 0x7fe8b20a7ac0 <line:1672:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-NonTypeTemplateParmDecl 0x7fe8b20a7c88 <col:24, col:77> col:31 referenced 'size_t':'unsigned long' depth 0 index 1 _Align
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fe8b20a7c38 <col:40, col:77> '<dependent type>' lvalue
| |   | `-TypeAliasDecl 0x7fe8b20a7ed0 <line:1673:5, col:71> col:11 aligned_storage_t 'typename aligned_storage<_Len, _Align>::type'
| |   |   `-DependentNameType 0x7fe8b20a7e60 'typename aligned_storage<_Len, _Align>::type' dependent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b20a81c0 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fe8b20a8030 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe8b20a7f90 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 1
| |   | |-NonTypeTemplateParmDecl 0x7fe8b20a7f90 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fe8b20a8328 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fe8b20a8490 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fe8b20a8548 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fe8b20a8668 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fe8b20a8528 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1686:40> 'int' 1
| |   |   |-CXXRecordDecl 0x7fe8b20a86b8 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fe8b20a8988 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 1 - 1) / 1 * 1]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b20aa060 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fe8b20a9ed0 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe8b20a9e30 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 2
| |   | |-NonTypeTemplateParmDecl 0x7fe8b20a9e30 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fe8b20aa1c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fe8b20aa330 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fe8b20aa3e8 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fe8b20aa508 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fe8b20aa3c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1687:40> 'int' 2
| |   |   |-CXXRecordDecl 0x7fe8b20aa558 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fe8b20aa828 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 2 - 1) / 2 * 2]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b20aaaf0 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fe8b20aa960 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe8b20aa8c0 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 4
| |   | |-NonTypeTemplateParmDecl 0x7fe8b20aa8c0 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fe8b20aac58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fe8b20aae00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fe8b20aaeb8 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fe8b20aafd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fe8b20aae98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1688:40> 'int' 4
| |   |   |-CXXRecordDecl 0x7fe8b20ab028 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fe8b20ab2f8 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 4 - 1) / 4 * 4]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b20ab5c0 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fe8b20ab430 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe8b20ab390 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 8
| |   | |-NonTypeTemplateParmDecl 0x7fe8b20ab390 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fe8b20ab728 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fe8b20ab890 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fe8b20ab948 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fe8b20aba68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fe8b20ab928 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1689:40> 'int' 8
| |   |   |-CXXRecordDecl 0x7fe8b20abab8 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fe8b20abd88 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 8 - 1) / 8 * 8]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b20ac060 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fe8b20abed0 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe8b20abe30 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 16
| |   | |-NonTypeTemplateParmDecl 0x7fe8b20abe30 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fe8b20ac1c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fe8b20ac330 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fe8b20ac3e8 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fe8b20ac508 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fe8b20ac3c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1690:40> 'int' 16
| |   |   |-CXXRecordDecl 0x7fe8b20ac558 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fe8b20ac828 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 16 - 1) / 16 * 16]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b20acaf0 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fe8b20ac960 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe8b20ac8c0 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 32
| |   | |-NonTypeTemplateParmDecl 0x7fe8b20ac8c0 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fe8b20acc58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fe8b20acdc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fe8b20ace78 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fe8b20acf98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fe8b20ace58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1691:40> 'int' 32
| |   |   |-CXXRecordDecl 0x7fe8b20acfe8 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fe8b20ad2b8 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 32 - 1) / 32 * 32]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b20ad580 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fe8b20ad3f0 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe8b20ad350 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 64
| |   | |-NonTypeTemplateParmDecl 0x7fe8b20ad350 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fe8b20ad6e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fe8b20ad850 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fe8b20ad908 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fe8b20ada28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fe8b20ad8e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1692:40> 'int' 64
| |   |   |-CXXRecordDecl 0x7fe8b20ada78 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fe8b20add48 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 64 - 1) / 64 * 64]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b20ae030 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fe8b20adea0 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe8b20ade00 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 128
| |   | |-NonTypeTemplateParmDecl 0x7fe8b20ade00 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fe8b20ae198 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fe8b20ae300 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fe8b20ae3b8 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fe8b20ae4d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fe8b20ae398 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1693:40> 'int' 128
| |   |   |-CXXRecordDecl 0x7fe8b20ae528 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fe8b20ae7f8 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 128 - 1) / 128 * 128]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b20aeac0 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fe8b20ae930 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe8b20ae890 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 256
| |   | |-NonTypeTemplateParmDecl 0x7fe8b20ae890 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fe8b20aec28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fe8b20aed90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fe8b20aee48 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fe8b20aef68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fe8b20aee28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1694:40> 'int' 256
| |   |   |-CXXRecordDecl 0x7fe8b20aefb8 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fe8b20af288 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 256 - 1) / 256 * 256]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b20af550 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fe8b20af3c0 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe8b20af320 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 512
| |   | |-NonTypeTemplateParmDecl 0x7fe8b20af320 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fe8b20af6b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fe8b20af820 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fe8b20af8d8 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fe8b20af9f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fe8b20af8b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1695:40> 'int' 512
| |   |   |-CXXRecordDecl 0x7fe8b20afa48 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fe8b20afd18 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 512 - 1) / 512 * 512]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b20b0030 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fe8b20afea0 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe8b20afe00 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 1024
| |   | |-NonTypeTemplateParmDecl 0x7fe8b20afe00 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fe8b20b0198 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fe8b20b0300 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fe8b20b03b8 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fe8b20b04d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fe8b20b0398 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1696:40> 'int' 1024
| |   |   |-CXXRecordDecl 0x7fe8b20b0528 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fe8b20b07f8 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 1024 - 1) / 1024 * 1024]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b20b0ac0 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fe8b20b0930 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe8b20b0890 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 2048
| |   | |-NonTypeTemplateParmDecl 0x7fe8b20b0890 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fe8b20b0c28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fe8b20b0d90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fe8b20b0e48 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fe8b20b0f68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fe8b20b0e28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1697:40> 'int' 2048
| |   |   |-CXXRecordDecl 0x7fe8b20b0fb8 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fe8b20b1288 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 2048 - 1) / 2048 * 2048]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b20b1550 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fe8b20b13c0 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe8b20b1320 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 4096
| |   | |-NonTypeTemplateParmDecl 0x7fe8b20b1320 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fe8b20b16b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fe8b20b1820 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fe8b20b18d8 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fe8b20b19f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fe8b20b18b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1698:40> 'int' 4096
| |   |   |-CXXRecordDecl 0x7fe8b20b1a48 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fe8b20b1d18 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 4096 - 1) / 4096 * 4096]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b20b2030 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fe8b20b1ea0 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe8b20b1e00 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 8192
| |   | |-NonTypeTemplateParmDecl 0x7fe8b20b1e00 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fe8b20b2198 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fe8b20b2300 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fe8b20b23b8 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fe8b20b24d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fe8b20b2398 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1699:40> 'int' 8192
| |   |   |-CXXRecordDecl 0x7fe8b20b2528 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fe8b20b27f8 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 8192 - 1) / 8192 * 8192]'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b20b2ac0 <line:1676:51, line:1683:7> line:1678:29 struct aligned_storage definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fe8b20b2930 <col:45> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe8b20b2890 '_Len' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 16384
| |   | |-NonTypeTemplateParmDecl 0x7fe8b20b2890 <line:1677:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TypeVisibilityAttr 0x7fe8b20b2c28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fe8b20b2d90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1677:23, line:1678:29> col:29 implicit struct aligned_storage
| |   | `-CXXRecordDecl 0x7fe8b20b2e48 <line:1680:5, line:1683:5> line:1680:24 struct type definition
| |   |   |-AlignedAttr 0x7fe8b20b2f68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:313:23> alignas
| |   |   | `-IntegerLiteral 0x7fe8b20b2e28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1702:40> 'int' 16384
| |   |   |-CXXRecordDecl 0x7fe8b20b2fb8 <line:1680:5, col:24> col:24 implicit struct type
| |   |   `-FieldDecl 0x7fe8b20b3288 <line:1682:9, col:48> col:23 __lx 'unsigned char [(_Len + 16384 - 1) / 16384 * 16384]'
| |   |-ClassTemplateDecl 0x7fe8b20b3498 <line:1711:1, line:1712:8> col:8 __static_max
| |   | |-NonTypeTemplateParmDecl 0x7fe8b20b3320 <line:1711:11, col:18> col:18 'size_t':'unsigned long' depth 0 index 0 _I0
| |   | |-NonTypeTemplateParmDecl 0x7fe8b20b3388 <col:23, col:33> col:33 'size_t':'unsigned long' depth 0 index 1 ... _In
| |   | `-CXXRecordDecl 0x7fe8b20b3400 <line:1712:1, col:8> col:8 struct __static_max
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b20b3910 <line:1714:1, line:1718:1> line:1715:8 struct __static_max definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fe8b20b37e8 <col:21> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe8b20b3778 '_I0' 'size_t':'unsigned long'
| |   | |-TemplateArgument pack
| |   | |-NonTypeTemplateParmDecl 0x7fe8b20b3778 <line:1714:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _I0
| |   | |-CXXRecordDecl 0x7fe8b20b3ba0 <line:1715:1, col:8> col:8 implicit struct __static_max
| |   | `-VarDecl 0x7fe8b20b3c48 <line:1717:5, col:33> col:25 value 'const size_t':'const unsigned long' static cinit
| |   |   `-DeclRefExpr 0x7fe8b20b3ca8 <col:33> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe8b20b3778 '_I0' 'size_t':'unsigned long'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b20b40e0 <line:1720:1, line:1725:1> line:1721:8 struct __static_max definition
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fe8b20b3e80 <col:21> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe8b20b3d00 '_I0' 'size_t':'unsigned long'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument expr
| |   | | | `-DeclRefExpr 0x7fe8b20b3ea8 <col:26> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe8b20b3d68 '_I1' 'size_t':'unsigned long'
| |   | | `-TemplateArgument expr
| |   | |   `-PackExpansionExpr 0x7fe8b20b3ef8 <col:31, col:34> '<dependent type>'
| |   | |     `-DeclRefExpr 0x7fe8b20b3ed0 <col:31> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe8b20b3e00 '_In' 'size_t':'unsigned long'
| |   | |-NonTypeTemplateParmDecl 0x7fe8b20b3d00 <line:1720:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _I0
| |   | |-NonTypeTemplateParmDecl 0x7fe8b20b3d68 <col:23, col:30> col:30 referenced 'size_t':'unsigned long' depth 0 index 1 _I1
| |   | |-NonTypeTemplateParmDecl 0x7fe8b20b3e00 <col:35, col:45> col:45 referenced 'size_t':'unsigned long' depth 0 index 2 ... _In
| |   | |-CXXRecordDecl 0x7fe8b20b43e0 <line:1721:1, col:8> col:8 implicit struct __static_max
| |   | `-VarDecl 0x7fe8b20b4488 <line:1723:5, line:1724:73> line:1723:25 value 'const size_t':'const unsigned long' static cinit
| |   |   `-ConditionalOperator 0x7fe8b20b49b8 <col:33, line:1724:73> '<dependent type>'
| |   |     |-BinaryOperator 0x7fe8b20b4538 <line:1723:33, col:40> '_Bool' '>='
| |   |     | |-DeclRefExpr 0x7fe8b20b44e8 <col:33> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe8b20b3d00 '_I0' 'size_t':'unsigned long'
| |   |     | `-DeclRefExpr 0x7fe8b20b4510 <col:40> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe8b20b3d68 '_I1' 'size_t':'unsigned long'
| |   |     |-DependentScopeDeclRefExpr 0x7fe8b20b4748 <col:46, col:73> '<dependent type>' lvalue
| |   |     `-DependentScopeDeclRefExpr 0x7fe8b20b4978 <line:1724:46, col:73> '<dependent type>' lvalue
| |   |-ClassTemplateDecl 0x7fe8b20b4c38 <line:1727:1, line:1735:1> line:1728:8 aligned_union
| |   | |-NonTypeTemplateParmDecl 0x7fe8b20b4a18 <line:1727:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TemplateTypeParmDecl 0x7fe8b20b4a70 <col:24, col:30> col:30 referenced class depth 0 index 1 _Type0
| |   | |-TemplateTypeParmDecl 0x7fe8b20b4ad8 <col:38, col:47> col:47 referenced class depth 0 index 2 ... _Types
| |   | `-CXXRecordDecl 0x7fe8b20b4ba0 <line:1728:1, line:1735:1> line:1728:8 struct aligned_union definition
| |   |   |-CXXRecordDecl 0x7fe8b20b4fd0 <col:1, col:8> col:8 implicit struct aligned_union
| |   |   |-VarDecl 0x7fe8b20b5078 <line:1730:5, line:1731:81> line:1730:25 referenced alignment_value 'const size_t':'const unsigned long' static cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fe8b20b52d8 <col:43, line:1731:81> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fe8b20b5328 <line:1732:5, line:1733:66> line:1732:25 referenced __len 'const size_t':'const unsigned long' static cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fe8b20b5608 <col:33, line:1733:66> '<dependent type>' lvalue
| |   |   `-TypedefDecl 0x7fe8b20b58b0 <line:1734:5, col:68> col:68 type 'typename aligned_storage<__len, alignment_value>::type'
| |   |     `-DependentNameType 0x7fe8b20b5840 'typename aligned_storage<__len, alignment_value>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fe8b20b5cd0 <line:1738:1, col:106> col:41 aligned_union_t
| |   | |-NonTypeTemplateParmDecl 0x7fe8b20b5938 <col:11, col:18> col:18 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| |   | |-TemplateTypeParmDecl 0x7fe8b20b5990 <col:24, col:33> col:33 referenced class depth 0 index 1 ... _Types
| |   | `-TypeAliasDecl 0x7fe8b20b5c70 <col:41, col:106> col:47 aligned_union_t 'typename aligned_union<_Len, _Types...>::type'
| |   |   `-DependentNameType 0x7fe8b20b5c00 'typename aligned_union<_Len, _Types...>::type' dependent
| |   |-ClassTemplateDecl 0x7fe8b20b6c98 <line:1743:1, line:1760:1> line:1744:8 __numeric_type
| |   | |-TemplateTypeParmDecl 0x7fe8b20b5d20 <line:1743:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fe8b20b6c00 <line:1744:1, line:1760:1> line:1744:8 struct __numeric_type definition
| |   | | |-CXXRecordDecl 0x7fe8b20b6f10 <col:1, col:8> col:8 implicit struct __numeric_type
| |   | | |-CXXMethodDecl 0x7fe8b20b6ff8 <line:1746:4, col:26> col:16 __test 'void (...)' static
| |   | | |-CXXMethodDecl 0x7fe8b20b7138 <line:1747:4, col:29> col:17 __test 'float (float)' static
| |   | | | `-ParmVarDecl 0x7fe8b20b70a8 <col:24> col:29 'float'
| |   | | |-CXXMethodDecl 0x7fe8b20b72b8 <line:1748:4, col:29> col:18 __test 'double (char)' static
| |   | | | `-ParmVarDecl 0x7fe8b20b71e8 <col:25> col:29 'char'
| |   | | |-CXXMethodDecl 0x7fe8b20b7438 <line:1749:4, col:28> col:18 __test 'double (int)' static
| |   | | | `-ParmVarDecl 0x7fe8b20b7370 <col:25> col:28 'int'
| |   | | |-CXXMethodDecl 0x7fe8b20b75b8 <line:1750:4, col:33> col:18 __test 'double (unsigned int)' static
| |   | | | `-ParmVarDecl 0x7fe8b20b74f0 <col:25> col:33 'unsigned int'
| |   | | |-CXXMethodDecl 0x7fe8b20b7738 <line:1751:4, col:29> col:18 __test 'double (long)' static
| |   | | | `-ParmVarDecl 0x7fe8b20b7670 <col:25> col:29 'long'
| |   | | |-CXXMethodDecl 0x7fe8b20b78b8 <line:1752:4, col:38> col:18 __test 'double (unsigned long)' static
| |   | | | `-ParmVarDecl 0x7fe8b20b77f0 <col:25, col:34> col:38 'unsigned long'
| |   | | |-CXXMethodDecl 0x7fe8b20b7a38 <line:1753:4, col:34> col:18 __test 'double (long long)' static
| |   | | | `-ParmVarDecl 0x7fe8b20b7970 <col:25, col:30> col:34 'long long'
| |   | | |-CXXMethodDecl 0x7fe8b20b7bb8 <line:1754:4, col:43> col:18 __test 'double (unsigned long long)' static
| |   | | | `-ParmVarDecl 0x7fe8b20b7af0 <col:25, col:39> col:43 'unsigned long long'
| |   | | |-CXXMethodDecl 0x7fe8b20b7d00 <line:1755:4, col:31> col:18 __test 'double (double)' static
| |   | | | `-ParmVarDecl 0x7fe8b20b7c70 <col:25> col:31 'double'
| |   | | |-CXXMethodDecl 0x7fe8b20b7e48 <line:1756:4, col:41> col:23 __test 'long double (long double)' static
| |   | | | `-ParmVarDecl 0x7fe8b20b7db8 <col:30, col:35> col:41 'long double'
| |   | | |-TypedefDecl 0x7fe8b20b8108 <line:1758:4, col:45> col:45 referenced type 'decltype(__test(declval<_Tp>()))'
| |   | | | `-DecltypeType 0x7fe8b20b80d0 'decltype(__test(declval<_Tp>()))' dependent
| |   | | |   `-CallExpr 0x7fe8b20b8060 <col:21, col:42> '<dependent type>'
| |   | | |     |-UnresolvedLookupExpr 0x7fe8b20b7ee8 <col:21> '<dependent type>' lvalue (no ADL) = '__test' 0x7fe8b20b7e48 0x7fe8b20b7d00 0x7fe8b20b7bb8 0x7fe8b20b7a38 0x7fe8b20b78b8 0x7fe8b20b7738 0x7fe8b20b75b8 0x7fe8b20b7438 0x7fe8b20b72b8 0x7fe8b20b7138 0x7fe8b20b6ff8
| |   | | |     `-CallExpr 0x7fe8b20b8038 <col:28, col:41> '<dependent type>'
| |   | | |       `-UnresolvedLookupExpr 0x7fe8b20b7fa0 <col:28, col:39> '<dependent type>' lvalue (ADL) = 'declval' 0x7fe8b2082050
| |   | | `-VarDecl 0x7fe8b20b8170 <line:1759:4, col:52> col:22 value 'const _Bool' static cinit
| |   | |   `-UnaryOperator 0x7fe8b20b8398 <col:30, col:52> '<dependent type>' prefix '!'
| |   | |     `-DependentScopeDeclRefExpr 0x7fe8b20b8358 <col:31, col:52> '<dependent type>' lvalue
| |   | `-ClassTemplateSpecialization 0x7fe8b20b83f8 '__numeric_type'
| |   |-ClassTemplateSpecializationDecl 0x7fe8b20b83f8 <line:1762:1, line:1766:1> line:1763:8 struct __numeric_type definition
| |   | |-TemplateArgument type 'void'
| |   | |-CXXRecordDecl 0x7fe8b20b8620 <col:1, col:8> col:8 implicit struct __numeric_type
| |   | `-VarDecl 0x7fe8b20b86c8 <line:1765:4, col:30> col:22 referenced value 'const _Bool' static cinit
| |   |   `-CXXBoolLiteralExpr 0x7fe8b20b8728 <col:30> '_Bool' true
| |   |-ClassTemplateDecl 0x7fe8b20ba2a0 <line:1770:1, line:1778:1> line:1774:7 __promote_imp
| |   | |-TemplateTypeParmDecl 0x7fe8b20b87b8 <line:1770:11, col:17> col:17 referenced class depth 0 index 0 _A1
| |   | |-TemplateTypeParmDecl 0x7fe8b20b8838 <col:22, col:34> col:28 referenced class depth 0 index 1 _A2
| |   | | `-TemplateArgument type 'void'
| |   | |-TemplateTypeParmDecl 0x7fe8b20b88b8 <col:40, col:52> col:46 referenced class depth 0 index 2 _A3
| |   | | `-TemplateArgument type 'void'
| |   | |-NonTypeTemplateParmDecl 0x7fe8b20ba180 <line:1771:11, line:1773:39> line:1771:16 '_Bool' depth 0 index 3
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7fe8b20ba148 <col:18, line:1773:39> '<dependent type>' '&&'
| |   | |     |-BinaryOperator 0x7fe8b20b8b98 <line:1771:18, line:1772:39> '<dependent type>' '&&'
| |   | |     | |-DependentScopeDeclRefExpr 0x7fe8b20b89f8 <line:1771:18, col:39> '<dependent type>' lvalue
| |   | |     | `-DependentScopeDeclRefExpr 0x7fe8b20b8b58 <line:1772:18, col:39> '<dependent type>' lvalue
| |   | |     `-DependentScopeDeclRefExpr 0x7fe8b20ba108 <line:1773:18, col:39> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fe8b20ba208 <line:1774:1, line:1778:1> line:1774:7 class __promote_imp definition
| |   |   |-CXXRecordDecl 0x7fe8b20ba5c0 <col:1, col:7> col:7 implicit class __promote_imp
| |   |   |-AccessSpecDecl 0x7fe8b20ba658 <line:1776:1, col:7> col:1 public
| |   |   `-VarDecl 0x7fe8b20ba690 <line:1777:5, col:31> col:23 value 'const _Bool' static cinit
| |   |     `-CXXBoolLiteralExpr 0x7fe8b20ba6f0 <col:31> '_Bool' false
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b20baae0 <line:1780:1, line:1790:1> line:1781:7 class __promote_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument type 'type-parameter-0-2'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fe8b20ba728 <line:1780:11, col:17> col:17 referenced class depth 0 index 0 _A1
| |   | |-TemplateTypeParmDecl 0x7fe8b20ba798 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| |   | |-TemplateTypeParmDecl 0x7fe8b20ba808 <col:33, col:39> col:39 referenced class depth 0 index 2 _A3
| |   | |-CXXRecordDecl 0x7fe8b20bae20 <line:1781:1, col:7> col:7 implicit class __promote_imp
| |   | |-AccessSpecDecl 0x7fe8b20baeb8 <line:1783:1, col:8> col:1 private
| |   | |-TypedefDecl 0x7fe8b20bb490 <line:1784:5, col:47> col:47 referenced __type1 'typename __promote_imp<_A1>::type'
| |   | | `-DependentNameType 0x7fe8b20bb420 'typename __promote_imp<_A1>::type' dependent
| |   | |-TypedefDecl 0x7fe8b20bba40 <line:1785:5, col:47> col:47 referenced __type2 'typename __promote_imp<_A2>::type'
| |   | | `-DependentNameType 0x7fe8b20bb9d0 'typename __promote_imp<_A2>::type' dependent
| |   | |-TypedefDecl 0x7fe8b20bca00 <line:1786:5, col:47> col:47 referenced __type3 'typename __promote_imp<_A3>::type'
| |   | | `-DependentNameType 0x7fe8b20bbf80 'typename __promote_imp<_A3>::type' dependent
| |   | |-AccessSpecDecl 0x7fe8b20bca58 <line:1787:1, col:7> col:1 public
| |   | |-TypedefDecl 0x7fe8b20bcc58 <line:1788:5, col:57> col:57 type 'decltype(std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type1() + std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type2() + std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type3())'
| |   | | `-DecltypeType 0x7fe8b20bcc20 'decltype(std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type1() + std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type2() + std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type3())' dependent
| |   | |   `-BinaryOperator 0x7fe8b20bcbb8 <col:22, col:54> '<dependent type>' '+'
| |   | |     |-BinaryOperator 0x7fe8b20bcb38 <col:22, col:42> '<dependent type>' '+'
| |   | |     | |-CXXUnresolvedConstructExpr 0x7fe8b20bcab0 <col:22, col:30> 'std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type1':'typename __promote_imp<_A1>::type'
| |   | |     | `-CXXUnresolvedConstructExpr 0x7fe8b20bcb10 <col:34, col:42> 'std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type2':'typename __promote_imp<_A2>::type'
| |   | |     `-CXXUnresolvedConstructExpr 0x7fe8b20bcb90 <col:46, col:54> 'std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, true>::__type3':'typename __promote_imp<_A3>::type'
| |   | `-VarDecl 0x7fe8b20bccc0 <line:1789:5, col:31> col:23 value 'const _Bool' static cinit
| |   |   `-CXXBoolLiteralExpr 0x7fe8b20bcd20 <col:31> '_Bool' true
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b20bd090 <line:1792:1, line:1801:1> line:1793:7 class __promote_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument type 'void'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fe8b20bcd58 <line:1792:11, col:17> col:17 referenced class depth 0 index 0 _A1
| |   | |-TemplateTypeParmDecl 0x7fe8b20bcdc8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| |   | |-CXXRecordDecl 0x7fe8b20bd3d0 <line:1793:1, col:7> col:7 implicit class __promote_imp
| |   | |-AccessSpecDecl 0x7fe8b20bd468 <line:1795:1, col:8> col:1 private
| |   | |-TypedefDecl 0x7fe8b20bd8c0 <line:1796:5, col:47> col:47 referenced __type1 'typename __promote_imp<_A1>::type'
| |   | | `-DependentNameType 0x7fe8b20bd850 'typename __promote_imp<_A1>::type' dependent
| |   | |-TypedefDecl 0x7fe8b20bdd50 <line:1797:5, col:47> col:47 referenced __type2 'typename __promote_imp<_A2>::type'
| |   | | `-DependentNameType 0x7fe8b20bdce0 'typename __promote_imp<_A2>::type' dependent
| |   | |-AccessSpecDecl 0x7fe8b20bdda8 <line:1798:1, col:7> col:1 public
| |   | |-TypedefDecl 0x7fe8b20bdf28 <line:1799:5, col:45> col:45 type 'decltype(std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, void, true>::__type1() + std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, void, true>::__type2())'
| |   | | `-DecltypeType 0x7fe8b20bdef0 'decltype(std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, void, true>::__type1() + std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, void, true>::__type2())' dependent
| |   | |   `-BinaryOperator 0x7fe8b20bde88 <col:22, col:42> '<dependent type>' '+'
| |   | |     |-CXXUnresolvedConstructExpr 0x7fe8b20bde00 <col:22, col:30> 'std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, void, true>::__type1':'typename __promote_imp<_A1>::type'
| |   | |     `-CXXUnresolvedConstructExpr 0x7fe8b20bde60 <col:34, col:42> 'std::__1::__promote_imp<type-parameter-0-0, type-parameter-0-1, void, true>::__type2':'typename __promote_imp<_A2>::type'
| |   | `-VarDecl 0x7fe8b20bdf90 <line:1800:5, col:31> col:23 value 'const _Bool' static cinit
| |   |   `-CXXBoolLiteralExpr 0x7fe8b20bdff0 <col:31> '_Bool' true
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b20be2f0 <line:1803:1, line:1809:1> line:1804:7 class __promote_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'void'
| |   | |-TemplateArgument type 'void'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fe8b20be028 <line:1803:11, col:17> col:17 referenced class depth 0 index 0 _A1
| |   | |-CXXRecordDecl 0x7fe8b20be630 <line:1804:1, col:7> col:7 implicit class __promote_imp
| |   | |-AccessSpecDecl 0x7fe8b20be6c8 <line:1806:1, col:7> col:1 public
| |   | |-TypedefDecl 0x7fe8b20be840 <line:1807:5, col:48> col:48 type 'typename __numeric_type<_A1>::type'
| |   | | `-DependentNameType 0x7fe8b20be7d0 'typename __numeric_type<_A1>::type' dependent
| |   | `-VarDecl 0x7fe8b20be8a8 <line:1808:5, col:31> col:23 value 'const _Bool' static cinit
| |   |   `-CXXBoolLiteralExpr 0x7fe8b20be908 <col:31> '_Bool' true
| |   |-ClassTemplateDecl 0x7fe8b20bf368 <line:1811:1, line:1812:56> col:7 __promote
| |   | |-TemplateTypeParmDecl 0x7fe8b20be940 <line:1811:11, col:17> col:17 referenced class depth 0 index 0 _A1
| |   | |-TemplateTypeParmDecl 0x7fe8b20be9b8 <col:22, col:34> col:28 referenced class depth 0 index 1 _A2
| |   | | `-TemplateArgument type 'void'
| |   | |-TemplateTypeParmDecl 0x7fe8b20bf238 <col:40, col:52> col:46 referenced class depth 0 index 2 _A3
| |   | | `-TemplateArgument type 'void'
| |   | `-CXXRecordDecl 0x7fe8b20bf2d0 <line:1812:1, col:56> col:7 class __promote definition
| |   |   |-public '__promote_imp<_A1, _A2, _A3>'
| |   |   `-CXXRecordDecl 0x7fe8b20bfb98 <col:1, col:7> col:7 implicit class __promote
| |   |-TypedefDecl 0x7fe8b20c0950 <line:1816:1, line:1829:15> col:15 referenced __signed_types '__type_list<signed char, __type_list<short, __type_list<int, __type_list<long, __type_list<long long, __type_list<__int128_t, struct std::__1::__nat> > > > > >':'struct std::__1::__type_list<signed char, struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > > >'
| |   | `-TemplateSpecializationType 0x7fe8b20c0860 '__type_list<signed char, __type_list<short, __type_list<int, __type_list<long, __type_list<long long, __type_list<__int128_t, struct std::__1::__nat> > > > > >' sugar __type_list
| |   |   |-TemplateArgument type 'signed char'
| |   |   |-TemplateArgument type '__type_list<short, __type_list<int, __type_list<long, __type_list<long long, __type_list<__int128_t, struct std::__1::__nat> > > > >':'struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > >'
| |   |   `-RecordType 0x7fe8b20c0840 'struct std::__1::__type_list<signed char, struct std::__1::__type_list<short, struct std::__1::__type_list<int, struct std::__1::__type_list<long, struct std::__1::__type_list<long long, struct std::__1::__type_list<__int128, struct std::__1::__nat> > > > > >'
| |   |     `-ClassTemplateSpecialization 0x7fe8b20c0740 '__type_list'
| |   |-TypedefDecl 0x7fe8b20c16b0 <line:1831:1, line:1844:15> col:15 referenced __unsigned_types '__type_list<unsigned char, __type_list<unsigned short, __type_list<unsigned int, __type_list<unsigned long, __type_list<unsigned long long, __type_list<__uint128_t, struct std::__1::__nat> > > > > >':'struct std::__1::__type_list<unsigned char, struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > > >'
| |   | `-TemplateSpecializationType 0x7fe8b20c15c0 '__type_list<unsigned char, __type_list<unsigned short, __type_list<unsigned int, __type_list<unsigned long, __type_list<unsigned long long, __type_list<__uint128_t, struct std::__1::__nat> > > > > >' sugar __type_list
| |   |   |-TemplateArgument type 'unsigned char'
| |   |   |-TemplateArgument type '__type_list<unsigned short, __type_list<unsigned int, __type_list<unsigned long, __type_list<unsigned long long, __type_list<__uint128_t, struct std::__1::__nat> > > > >':'struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > >'
| |   |   `-RecordType 0x7fe8b20c15a0 'struct std::__1::__type_list<unsigned char, struct std::__1::__type_list<unsigned short, struct std::__1::__type_list<unsigned int, struct std::__1::__type_list<unsigned long, struct std::__1::__type_list<unsigned long long, struct std::__1::__type_list<unsigned __int128, struct std::__1::__nat> > > > > >'
| |   |     `-ClassTemplateSpecialization 0x7fe8b20c14a0 '__type_list'
| |   |-ClassTemplateDecl 0x7fe8b20c1a50 <line:1846:1, col:100> col:100 __find_first
| |   | |-TemplateTypeParmDecl 0x7fe8b20c1708 <col:11, col:17> col:17 class depth 0 index 0 _TypeList
| |   | |-NonTypeTemplateParmDecl 0x7fe8b20c1788 <col:28, col:35> col:35 referenced 'size_t':'unsigned long' depth 0 index 1 _Size
| |   | |-NonTypeTemplateParmDecl 0x7fe8b20c1938 <col:42, col:90> col:47 '_Bool' depth 0 index 2
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7fe8b20c1900 <col:49, col:90> '_Bool' '<='
| |   | |     |-DeclRefExpr 0x7fe8b20c17e0 <col:49> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe8b20c1788 '_Size' 'size_t':'unsigned long'
| |   | |     `-UnaryExprOrTypeTraitExpr 0x7fe8b20c18e0 <col:58, col:90> 'unsigned long' sizeof 'typename _TypeList::_Head'
| |   | `-CXXRecordDecl 0x7fe8b20c19b8 <col:93, col:100> col:100 struct __find_first
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b20c2178 <line:1848:1, line:1852:1> line:1849:8 struct __find_first definition
| |   | |-TemplateArgument type '__type_list<type-parameter-0-0, type-parameter-0-1>'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fe8b20c1fa0 <col:44> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe8b20c1e08 '_Size' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fe8b20c1d18 <line:1848:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-TemplateTypeParmDecl 0x7fe8b20c1d88 <col:22, col:28> col:28 referenced class depth 0 index 1 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fe8b20c1e08 <col:33, col:40> col:40 referenced 'size_t':'unsigned long' depth 0 index 2 _Size
| |   | |-CXXRecordDecl 0x7fe8b20c24b0 <line:1849:1, col:8> col:8 implicit struct __find_first
| |   | `-TypedefDecl 0x7fe8b20c2558 <line:1851:5, col:17> col:17 type '_Hp'
| |   |   `-TemplateTypeParmType 0x7fe8b20c1d60 '_Hp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fe8b20c1d18 '_Hp'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b20c2a28 <line:1854:1, line:1858:1> line:1855:8 struct __find_first definition
| |   | |-TemplateArgument type '__type_list<type-parameter-0-0, type-parameter-0-1>'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fe8b20c2850 <col:44> 'size_t':'unsigned long' NonTypeTemplateParm 0x7fe8b20c26b8 '_Size' 'size_t':'unsigned long'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fe8b20c25d0 <line:1854:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-TemplateTypeParmDecl 0x7fe8b20c2638 <col:22, col:28> col:28 referenced class depth 0 index 1 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fe8b20c26b8 <col:33, col:40> col:40 referenced 'size_t':'unsigned long' depth 0 index 2 _Size
| |   | |-CXXRecordDecl 0x7fe8b20c2d60 <line:1855:1, col:8> col:8 implicit struct __find_first
| |   | `-TypedefDecl 0x7fe8b20c3200 <line:1857:5, col:53> col:53 type 'typename __find_first<_Tp, _Size>::type'
| |   |   `-DependentNameType 0x7fe8b20c3140 'typename __find_first<_Tp, _Size>::type' dependent
| |   |-ClassTemplateDecl 0x7fe8b20c39c8 <line:1860:1, line:1865:1> line:1862:8 __apply_cv
| |   | |-TemplateTypeParmDecl 0x7fe8b20c3278 <line:1860:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fe8b20c32e8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-NonTypeTemplateParmDecl 0x7fe8b20c35d8 <col:33, col:88> col:38 '_Bool' depth 0 index 2
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fe8b20c3588 <col:40, col:88> '<dependent type>' lvalue
| |   | |-NonTypeTemplateParmDecl 0x7fe8b20c38a8 <line:1861:30, col:88> col:35 '_Bool' depth 0 index 3
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fe8b20c3858 <col:37, col:88> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fe8b20c3930 <line:1862:1, line:1865:1> line:1862:8 struct __apply_cv definition
| |   |   |-CXXRecordDecl 0x7fe8b20c3d10 <col:1, col:8> col:8 implicit struct __apply_cv
| |   |   `-TypedefDecl 0x7fe8b20c3db8 <line:1864:5, col:17> col:17 type '_Up'
| |   |     `-TemplateTypeParmType 0x7fe8b20c3330 '_Up' dependent depth 0 index 1
| |   |       `-TemplateTypeParm 0x7fe8b20c32e8 '_Up'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b20c4170 <line:1867:1, line:1871:1> line:1868:8 struct __apply_cv definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fe8b20c3e30 <line:1867:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fe8b20c3e98 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7fe8b20c44c0 <line:1868:1, col:8> col:8 implicit struct __apply_cv
| |   | `-TypedefDecl 0x7fe8b20c4568 <line:1870:5, col:23> col:23 type 'const _Up'
| |   |   `-QualType 0x7fe8b20c3ee1 'const _Up' const
| |   |     `-TemplateTypeParmType 0x7fe8b20c3ee0 '_Up' dependent depth 0 index 1
| |   |       `-TemplateTypeParm 0x7fe8b20c3e98 '_Up'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b20c4920 <line:1873:1, line:1877:1> line:1874:8 struct __apply_cv definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fe8b20c45e0 <line:1873:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fe8b20c4648 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7fe8b20c4c70 <line:1874:1, col:8> col:8 implicit struct __apply_cv
| |   | `-TypedefDecl 0x7fe8b20c4d18 <line:1876:5, col:26> col:26 type 'volatile _Up'
| |   |   `-QualType 0x7fe8b20c4694 'volatile _Up' volatile
| |   |     `-TemplateTypeParmType 0x7fe8b20c4690 '_Up' dependent depth 0 index 1
| |   |       `-TemplateTypeParm 0x7fe8b20c4648 '_Up'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b20c50d0 <line:1879:1, line:1883:1> line:1880:8 struct __apply_cv definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fe8b20c4d90 <line:1879:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fe8b20c4df8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7fe8b20c5470 <line:1880:1, col:8> col:8 implicit struct __apply_cv
| |   | `-TypedefDecl 0x7fe8b20c5518 <line:1882:5, col:32> col:32 type 'const volatile _Up'
| |   |   `-QualType 0x7fe8b20c4e45 'const volatile _Up' const volatile
| |   |     `-TemplateTypeParmType 0x7fe8b20c4e40 '_Up' dependent depth 0 index 1
| |   |       `-TemplateTypeParm 0x7fe8b20c4df8 '_Up'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b20c5900 <line:1885:1, line:1889:1> line:1886:8 struct __apply_cv definition
| |   | |-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fe8b20c5590 <line:1885:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fe8b20c55f8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7fe8b20c5c50 <line:1886:1, col:8> col:8 implicit struct __apply_cv
| |   | `-TypedefDecl 0x7fe8b20c5d58 <line:1888:5, col:18> col:18 type '_Up &'
| |   |   `-LValueReferenceType 0x7fe8b20c5d20 '_Up &' dependent
| |   |     `-TemplateTypeParmType 0x7fe8b20c5640 '_Up' dependent depth 0 index 1
| |   |       `-TemplateTypeParm 0x7fe8b20c55f8 '_Up'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b20c6140 <line:1891:1, line:1895:1> line:1892:8 struct __apply_cv definition
| |   | |-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fe8b20c5dd0 <line:1891:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fe8b20c5e38 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7fe8b20c6490 <line:1892:1, col:8> col:8 implicit struct __apply_cv
| |   | `-TypedefDecl 0x7fe8b20c6598 <line:1894:5, col:24> col:24 type 'const _Up &'
| |   |   `-LValueReferenceType 0x7fe8b20c6560 'const _Up &' dependent
| |   |     `-QualType 0x7fe8b20c5e81 'const _Up' const
| |   |       `-TemplateTypeParmType 0x7fe8b20c5e80 '_Up' dependent depth 0 index 1
| |   |         `-TemplateTypeParm 0x7fe8b20c5e38 '_Up'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b20c6980 <line:1897:1, line:1901:1> line:1898:8 struct __apply_cv definition
| |   | |-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fe8b20c6610 <line:1897:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fe8b20c6678 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7fe8b20c6cd0 <line:1898:1, col:8> col:8 implicit struct __apply_cv
| |   | `-TypedefDecl 0x7fe8b20c6dd8 <line:1900:5, col:27> col:27 type 'volatile _Up &'
| |   |   `-LValueReferenceType 0x7fe8b20c6da0 'volatile _Up &' dependent
| |   |     `-QualType 0x7fe8b20c66c4 'volatile _Up' volatile
| |   |       `-TemplateTypeParmType 0x7fe8b20c66c0 '_Up' dependent depth 0 index 1
| |   |         `-TemplateTypeParm 0x7fe8b20c6678 '_Up'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b20c7200 <line:1903:1, line:1907:1> line:1904:8 struct __apply_cv definition
| |   | |-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fe8b20c6e50 <line:1903:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fe8b20c6eb8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7fe8b20c7550 <line:1904:1, col:8> col:8 implicit struct __apply_cv
| |   | `-TypedefDecl 0x7fe8b20c7658 <line:1906:5, col:33> col:33 type 'const volatile _Up &'
| |   |   `-LValueReferenceType 0x7fe8b20c7620 'const volatile _Up &' dependent
| |   |     `-QualType 0x7fe8b20c6f05 'const volatile _Up' const volatile
| |   |       `-TemplateTypeParmType 0x7fe8b20c6f00 '_Up' dependent depth 0 index 1
| |   |         `-TemplateTypeParm 0x7fe8b20c6eb8 '_Up'
| |   |-ClassTemplateDecl 0x7fe8b20c7aa0 <line:1909:1, line:1910:23> col:8 __make_signed
| |   | |-TemplateTypeParmDecl 0x7fe8b20c76d0 <line:1909:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fe8b20c7990 <col:22, col:70> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7fe8b20c7958 <col:29, col:70> '<dependent type>' '||'
| |   | |     |-DependentScopeDeclRefExpr 0x7fe8b20c7808 <col:29, col:47> '<dependent type>' lvalue
| |   | |     `-DependentScopeDeclRefExpr 0x7fe8b20c7918 <col:56, col:70> '<dependent type>' lvalue
| |   | |-CXXRecordDecl 0x7fe8b20c7a08 <line:1910:1, col:23> col:8 struct __make_signed definition
| |   | | `-CXXRecordDecl 0x7fe8b20c7d60 <col:1, col:8> col:8 implicit struct __make_signed
| |   | |-ClassTemplateSpecialization 0x7fe8b20c89d0 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7fe8b20c8d38 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7fe8b20c9118 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7fe8b20cad18 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7fe8b20cb0f8 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7fe8b20cb4d8 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7fe8b20cb8b8 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7fe8b20cbc98 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7fe8b20cc078 '__make_signed'
| |   | |-ClassTemplateSpecialization 0x7fe8b20cc450 '__make_signed'
| |   | `-ClassTemplateSpecialization 0x7fe8b20cc818 '__make_signed'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b20c8000 <line:1912:1, line:1916:1> line:1913:8 struct __make_signed definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fe8b20c7e18 <line:1912:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fe8b20c8290 <line:1913:1, col:8> col:8 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fe8b20c8920 <line:1915:5, col:70> col:70 type 'typename __find_first<__signed_types, sizeof(_Tp)>::type'
| |   |   `-DependentNameType 0x7fe8b20c88b0 'typename __find_first<__signed_types, sizeof(_Tp)>::type' dependent
| |   |-ClassTemplateSpecializationDecl 0x7fe8b20c89d0 <line:1918:1, col:61> col:20 struct __make_signed definition
| |   | |-TemplateArgument type '_Bool'
| |   | |-TemplateArgument integral 1
| |   | `-CXXRecordDecl 0x7fe8b20c8c40 <col:13, col:20> col:20 implicit struct __make_signed
| |   |-ClassTemplateSpecializationDecl 0x7fe8b20c8d38 <line:1919:1, col:84> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'short'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fe8b20c8fb0 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fe8b20c9060 <col:61, col:79> col:79 type 'short'
| |   |   `-BuiltinType 0x7fe8b18325a0 'short'
| |   |-ClassTemplateSpecializationDecl 0x7fe8b20c9118 <line:1920:1, col:84> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'unsigned short'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fe8b20cabb0 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fe8b20cac60 <col:61, col:79> col:79 type 'short'
| |   |   `-BuiltinType 0x7fe8b18325a0 'short'
| |   |-ClassTemplateSpecializationDecl 0x7fe8b20cad18 <line:1921:1, col:84> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'int'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fe8b20caf90 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fe8b20cb040 <col:61, col:79> col:79 type 'int'
| |   |   `-BuiltinType 0x7fe8b18325c0 'int'
| |   |-ClassTemplateSpecializationDecl 0x7fe8b20cb0f8 <line:1922:1, col:84> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'unsigned int'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fe8b20cb370 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fe8b20cb420 <col:61, col:79> col:79 type 'int'
| |   |   `-BuiltinType 0x7fe8b18325c0 'int'
| |   |-ClassTemplateSpecializationDecl 0x7fe8b20cb4d8 <line:1923:1, col:84> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'long'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fe8b20cb750 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fe8b20cb800 <col:61, col:79> col:79 type 'long'
| |   |   `-BuiltinType 0x7fe8b18325e0 'long'
| |   |-ClassTemplateSpecializationDecl 0x7fe8b20cb8b8 <line:1924:1, col:84> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'unsigned long'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fe8b20cbb30 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fe8b20cbbe0 <col:61, col:79> col:79 type 'long'
| |   |   `-BuiltinType 0x7fe8b18325e0 'long'
| |   |-ClassTemplateSpecializationDecl 0x7fe8b20cbc98 <line:1925:1, col:84> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'long long'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fe8b20cbf10 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fe8b20cbfc0 <col:61, col:79> col:79 type 'long long'
| |   |   `-BuiltinType 0x7fe8b1832600 'long long'
| |   |-ClassTemplateSpecializationDecl 0x7fe8b20cc078 <line:1926:1, col:84> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'unsigned long long'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fe8b20cc2f0 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fe8b20cc3a0 <col:61, col:79> col:79 type 'long long'
| |   |   `-BuiltinType 0x7fe8b1832600 'long long'
| |   |-ClassTemplateSpecializationDecl 0x7fe8b20cc450 <line:1928:1, col:85> col:20 struct __make_signed definition
| |   | |-TemplateArgument type '__int128'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fe8b20cc6c0 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fe8b20cc768 <col:61, col:80> col:80 type '__int128_t':'__int128'
| |   |   `-TypedefType 0x7fe8b205cff0 '__int128_t' sugar
| |   |     |-Typedef 0x7fe8b1832a60 '__int128_t'
| |   |     `-BuiltinType 0x7fe8b1832740 '__int128'
| |   |-ClassTemplateSpecializationDecl 0x7fe8b20cc818 <line:1929:1, col:85> col:20 struct __make_signed definition
| |   | |-TemplateArgument type 'unsigned __int128'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fe8b20ccac0 <col:13, col:20> col:20 implicit struct __make_signed
| |   | `-TypedefDecl 0x7fe8b20ccb68 <col:61, col:80> col:80 type '__int128_t':'__int128'
| |   |   `-TypedefType 0x7fe8b205cff0 '__int128_t' sugar
| |   |     |-Typedef 0x7fe8b1832a60 '__int128_t'
| |   |     `-BuiltinType 0x7fe8b1832740 '__int128'
| |   |-ClassTemplateDecl 0x7fe8b20ccd28 <line:1932:1, line:1936:1> line:1933:29 make_signed
| |   | |-TemplateTypeParmDecl 0x7fe8b20ccbe0 <line:1932:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b20ccc90 <line:1933:1, line:1936:1> line:1933:29 struct make_signed definition
| |   |   |-TypeVisibilityAttr 0x7fe8b20ccfa0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fe8b20ccfe8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1933:1, col:29> col:29 implicit struct make_signed
| |   |   `-TypedefDecl 0x7fe8b20cdca0 <line:1935:5, col:105> col:105 type 'typename __apply_cv<_Tp, typename __make_signed<typename remove_cv<_Tp>::type>::type>::type'
| |   |     `-DependentNameType 0x7fe8b20cdc30 'typename __apply_cv<_Tp, typename __make_signed<typename remove_cv<_Tp>::type>::type>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fe8b20cdf60 <line:1939:1, col:71> col:22 make_signed_t
| |   | |-TemplateTypeParmDecl 0x7fe8b20cdd18 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fe8b20cdf00 <col:22, col:71> col:28 make_signed_t 'typename make_signed<_Tp>::type'
| |   |   `-DependentNameType 0x7fe8b20cde90 'typename make_signed<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fe8b20ce380 <line:1942:1, line:1943:25> col:8 __make_unsigned
| |   | |-TemplateTypeParmDecl 0x7fe8b20cdfb0 <line:1942:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fe8b20ce270 <col:22, col:70> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7fe8b20ce238 <col:29, col:70> '<dependent type>' '||'
| |   | |     |-DependentScopeDeclRefExpr 0x7fe8b20ce0e8 <col:29, col:47> '<dependent type>' lvalue
| |   | |     `-DependentScopeDeclRefExpr 0x7fe8b20ce1f8 <col:56, col:70> '<dependent type>' lvalue
| |   | |-CXXRecordDecl 0x7fe8b20ce2e8 <line:1943:1, col:25> col:8 struct __make_unsigned definition
| |   | | `-CXXRecordDecl 0x7fe8b20ce640 <col:1, col:8> col:8 implicit struct __make_unsigned
| |   | |-ClassTemplateSpecialization 0x7fe8b20d02b0 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7fe8b20d0618 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7fe8b20d09f8 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7fe8b20d0dd8 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7fe8b20d11b8 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7fe8b20d1598 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7fe8b20d9a00 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7fe8b20d9dd8 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7fe8b20da1b8 '__make_unsigned'
| |   | |-ClassTemplateSpecialization 0x7fe8b20da590 '__make_unsigned'
| |   | `-ClassTemplateSpecialization 0x7fe8b20da958 '__make_unsigned'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b20ce8e0 <line:1945:1, line:1949:1> line:1946:8 struct __make_unsigned definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fe8b20ce6f8 <line:1945:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fe8b20cfb70 <line:1946:1, col:8> col:8 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fe8b20d0200 <line:1948:5, col:72> col:72 type 'typename __find_first<__unsigned_types, sizeof(_Tp)>::type'
| |   |   `-DependentNameType 0x7fe8b20d0190 'typename __find_first<__unsigned_types, sizeof(_Tp)>::type' dependent
| |   |-ClassTemplateSpecializationDecl 0x7fe8b20d02b0 <line:1951:1, col:63> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type '_Bool'
| |   | |-TemplateArgument integral 1
| |   | `-CXXRecordDecl 0x7fe8b20d0520 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   |-ClassTemplateSpecializationDecl 0x7fe8b20d0618 <line:1952:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'short'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fe8b20d0890 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fe8b20d0940 <col:63, col:90> col:90 type 'unsigned short'
| |   |   `-BuiltinType 0x7fe8b1832640 'unsigned short'
| |   |-ClassTemplateSpecializationDecl 0x7fe8b20d09f8 <line:1953:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'unsigned short'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fe8b20d0c70 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fe8b20d0d20 <col:63, col:90> col:90 type 'unsigned short'
| |   |   `-BuiltinType 0x7fe8b1832640 'unsigned short'
| |   |-ClassTemplateSpecializationDecl 0x7fe8b20d0dd8 <line:1954:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'int'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fe8b20d1050 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fe8b20d1100 <col:63, col:90> col:90 type 'unsigned int'
| |   |   `-BuiltinType 0x7fe8b1832660 'unsigned int'
| |   |-ClassTemplateSpecializationDecl 0x7fe8b20d11b8 <line:1955:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'unsigned int'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fe8b20d1430 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fe8b20d14e0 <col:63, col:90> col:90 type 'unsigned int'
| |   |   `-BuiltinType 0x7fe8b1832660 'unsigned int'
| |   |-ClassTemplateSpecializationDecl 0x7fe8b20d1598 <line:1956:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'long'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fe8b20d1810 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fe8b20d18c0 <col:63, col:90> col:90 type 'unsigned long'
| |   |   `-BuiltinType 0x7fe8b1832680 'unsigned long'
| |   |-ClassTemplateSpecializationDecl 0x7fe8b20d9a00 <line:1957:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'unsigned long'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fe8b20d9c70 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fe8b20d9d20 <col:63, col:90> col:90 type 'unsigned long'
| |   |   `-BuiltinType 0x7fe8b1832680 'unsigned long'
| |   |-ClassTemplateSpecializationDecl 0x7fe8b20d9dd8 <line:1958:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'long long'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fe8b20da050 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fe8b20da100 <col:63, col:90> col:90 type 'unsigned long long'
| |   |   `-BuiltinType 0x7fe8b18326a0 'unsigned long long'
| |   |-ClassTemplateSpecializationDecl 0x7fe8b20da1b8 <line:1959:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'unsigned long long'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fe8b20da430 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fe8b20da4e0 <col:63, col:90> col:90 type 'unsigned long long'
| |   |   `-BuiltinType 0x7fe8b18326a0 'unsigned long long'
| |   |-ClassTemplateSpecializationDecl 0x7fe8b20da590 <line:1961:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type '__int128'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fe8b20da800 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fe8b20da8a8 <col:63, col:90> col:90 type '__uint128_t':'unsigned __int128'
| |   |   `-TypedefType 0x7fe8b205d360 '__uint128_t' sugar
| |   |     |-Typedef 0x7fe8b1832ad0 '__uint128_t'
| |   |     `-BuiltinType 0x7fe8b1832760 'unsigned __int128'
| |   |-ClassTemplateSpecializationDecl 0x7fe8b20da958 <line:1962:1, col:95> col:20 struct __make_unsigned definition
| |   | |-TemplateArgument type 'unsigned __int128'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fe8b20dabd0 <col:13, col:20> col:20 implicit struct __make_unsigned
| |   | `-TypedefDecl 0x7fe8b20dac78 <col:63, col:90> col:90 type '__uint128_t':'unsigned __int128'
| |   |   `-TypedefType 0x7fe8b205d360 '__uint128_t' sugar
| |   |     |-Typedef 0x7fe8b1832ad0 '__uint128_t'
| |   |     `-BuiltinType 0x7fe8b1832760 'unsigned __int128'
| |   |-ClassTemplateDecl 0x7fe8b20dae38 <line:1965:1, line:1969:1> line:1966:29 make_unsigned
| |   | |-TemplateTypeParmDecl 0x7fe8b20dacf0 <line:1965:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b20dada0 <line:1966:1, line:1969:1> line:1966:29 struct make_unsigned definition
| |   |   |-TypeVisibilityAttr 0x7fe8b20db0b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fe8b20db0f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:1966:1, col:29> col:29 implicit struct make_unsigned
| |   |   `-TypedefDecl 0x7fe8b20dbcb0 <line:1968:5, col:107> col:107 type 'typename __apply_cv<_Tp, typename __make_unsigned<typename remove_cv<_Tp>::type>::type>::type'
| |   |     `-DependentNameType 0x7fe8b20dbc40 'typename __apply_cv<_Tp, typename __make_unsigned<typename remove_cv<_Tp>::type>::type>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fe8b20dbf70 <line:1972:1, col:75> col:22 make_unsigned_t
| |   | |-TemplateTypeParmDecl 0x7fe8b20dbd28 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fe8b20dbf10 <col:22, col:75> col:28 make_unsigned_t 'typename make_unsigned<_Tp>::type'
| |   |   `-DependentNameType 0x7fe8b20dbea0 'typename make_unsigned<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fe8b20dc108 <line:2010:1, line:2011:42> col:29 common_type
| |   | |-TemplateTypeParmDecl 0x7fe8b20dbfc0 <line:2010:11, col:20> col:20 class depth 0 index 0 ... _Tp
| |   | `-CXXRecordDecl 0x7fe8b20dc070 <line:2011:1, col:42> col:29 struct common_type definition
| |   |   |-TypeVisibilityAttr 0x7fe8b20dc3e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fe8b20dc428 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2011:1, col:29> col:29 implicit struct common_type
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b20dc6a8 <line:2015:1, line:2017:37> line:2016:29 struct common_type definition
| |   | |-public 'common_type<_Tp, _Tp>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fe8b20dc4e0 <line:2015:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fe8b20dc818 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fe8b20dcaf8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2016:1, col:29> col:29 implicit struct common_type
| |   |-ClassTemplateDecl 0x7fe8b20dcdc8 <line:2021:1, line:2022:28> col:8 __common_type2_imp
| |   | |-TemplateTypeParmDecl 0x7fe8b20dcbb0 <line:2021:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fe8b20dcc18 <col:22, col:28> col:28 class depth 0 index 1 _Up
| |   | |-TemplateTypeParmDecl 0x7fe8b20dcc98 <col:33, col:41> col:33 class depth 0 index 2
| |   | | `-TemplateArgument type 'void'
| |   | `-CXXRecordDecl 0x7fe8b20dcd30 <line:2022:1, col:28> col:8 struct __common_type2_imp definition
| |   |   `-CXXRecordDecl 0x7fe8b20dd0a0 <col:1, col:8> col:8 implicit struct __common_type2_imp
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b20dd898 <line:2024:1, line:2033:1> line:2025:8 struct __common_type2_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument type 'typename __void_t<decltype(true ? std::__1::declval<_Tp>() : std::__1::declval<_Up>())>::type'
| |   | |-TemplateTypeParmDecl 0x7fe8b20dd158 <line:2024:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fe8b20dd1c8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7fe8b20ddfc0 <line:2025:1, col:8> col:8 implicit struct __common_type2_imp
| |   | `-TypedefDecl 0x7fe8b20de480 <line:2030:5, line:2032:14> col:14 type 'typename decay<decltype(true ? std::__1::declval<_Tp>() : std::__1::declval<_Up>())>::type'
| |   |   `-DependentNameType 0x7fe8b20de410 'typename decay<decltype(true ? std::__1::declval<_Tp>() : std::__1::declval<_Up>())>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fe8b20df390 <line:2035:1, line:2043:6> line:2038:1 __common_type2
| |   | |-TemplateTypeParmDecl 0x7fe8b20de4f8 <line:2035:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fe8b20de568 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-TemplateTypeParmDecl 0x7fe8b20de700 <line:2036:11, col:45> col:17 referenced class depth 0 index 2 _DTp
| |   | | `-TemplateArgument type 'typename decay<_Tp>::type'
| |   | |-TemplateTypeParmDecl 0x7fe8b20de920 <line:2037:11, col:45> col:17 referenced class depth 0 index 3 _DUp
| |   | | `-TemplateArgument type 'typename decay<_Up>::type'
| |   | `-TypeAliasDecl 0x7fe8b20df330 <line:2038:1, line:2043:6> line:2038:7 __common_type2 'typename conditional<is_same<_Tp, _DTp>::value && is_same<_Up, _DUp>::value, __common_type2_imp<_Tp, _Up>, common_type<_DTp, _DUp> >::type'
| |   |   `-DependentNameType 0x7fe8b20df2c0 'typename conditional<is_same<_Tp, _DTp>::value && is_same<_Up, _DUp>::value, __common_type2_imp<_Tp, _Up>, common_type<_DTp, _DUp> >::type' dependent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b20df698 <line:2045:1, line:2047:33> line:2046:29 struct common_type definition
| |   | |-public '__common_type2<_Tp, _Up>':'typename conditional<is_same<type-parameter-0-0, typename decay<type-parameter-0-0>::type>::value && is_same<type-parameter-0-1, typename decay<type-parameter-0-1>::type>::value, __common_type2_imp<type-parameter-0-0, type-parameter-0-1, void>, common_type<typename decay<type-parameter-0-0>::type, typename decay<type-parameter-0-1>::type> >::type'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | `-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateTypeParmDecl 0x7fe8b20df3e0 <line:2045:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fe8b20df448 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-TypeVisibilityAttr 0x7fe8b20df848 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fe8b20e16c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2046:1, col:29> col:29 implicit struct common_type
| |   |-ClassTemplateDecl 0x7fe8b20e1898 <line:2051:1, col:31> col:31 __common_types
| |   | |-TemplateTypeParmDecl 0x7fe8b20e1778 <col:11, col:20> col:20 class depth 0 index 0 ... Tp
| |   | `-CXXRecordDecl 0x7fe8b20e1800 <col:24, col:31> col:31 struct __common_types
| |   |-ClassTemplateDecl 0x7fe8b20e1cb0 <line:2053:1, line:2054:28> col:8 __common_type_impl
| |   | |-TemplateTypeParmDecl 0x7fe8b20e1b08 <line:2053:11> col:11 class depth 0 index 0
| |   | |-TemplateTypeParmDecl 0x7fe8b20e1b88 <col:18, col:26> col:18 class depth 0 index 1
| |   | | `-TemplateArgument type 'void'
| |   | `-CXXRecordDecl 0x7fe8b20e1c18 <line:2054:1, col:28> col:8 struct __common_type_impl definition
| |   |   `-CXXRecordDecl 0x7fe8b20e1f50 <col:1, col:8> col:8 implicit struct __common_type_impl
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b20e27a0 <line:2056:1, line:2062:1> line:2057:8 struct __common_type_impl definition
| |   | |-TemplateArgument type '__common_types<type-parameter-0-0, type-parameter-0-1>'
| |   | |-TemplateArgument type 'typename __void_t<typename common_type<type-parameter-0-0, type-parameter-0-1>::type>::type'
| |   | |-TemplateTypeParmDecl 0x7fe8b20e2008 <line:2056:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fe8b20e2078 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-CXXRecordDecl 0x7fe8b20e2b20 <line:2057:1, col:8> col:8 implicit struct __common_type_impl
| |   | `-TypedefDecl 0x7fe8b20e2d80 <line:2061:3, col:48> col:48 type 'typename common_type<_Tp, _Up>::type'
| |   |   `-DependentNameType 0x7fe8b20e2d10 'typename common_type<_Tp, _Up>::type' dependent
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b20e3600 <line:2064:1, line:2071:1> line:2065:8 struct __common_type_impl definition
| |   | |-public '__common_type_impl<__common_types<typename common_type<_Tp, _Up>::type, _Vp...> >'
| |   | |-TemplateArgument type '__common_types<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2...>'
| |   | |-TemplateArgument type 'typename __void_t<typename common_type<type-parameter-0-0, type-parameter-0-1>::type>::type'
| |   | |-TemplateTypeParmDecl 0x7fe8b20e2df8 <line:2064:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fe8b20e2e68 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-TemplateTypeParmDecl 0x7fe8b20e2ed8 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Vp
| |   | `-CXXRecordDecl 0x7fe8b20e3de8 <line:2065:1, col:8> col:8 implicit struct __common_type_impl
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b20e4278 <line:2073:1, line:2075:62> line:2074:29 struct common_type definition
| |   | |-public '__common_type_impl<__common_types<_Tp, _Up, _Vp...> >'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | |-TemplateArgument type 'type-parameter-0-1'
| |   | | `-TemplateArgument type 'type-parameter-0-2...'
| |   | |-TemplateTypeParmDecl 0x7fe8b20e3ea0 <line:2073:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fe8b20e3f08 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | |-TemplateTypeParmDecl 0x7fe8b20e3f78 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Vp
| |   | |-TypeVisibilityAttr 0x7fe8b20e4468 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fe8b20e4918 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2074:1, col:29> col:29 implicit struct common_type
| |   |-TypeAliasTemplateDecl 0x7fe8b20e4cb0 <line:2078:1, col:77> col:25 common_type_t
| |   | |-TemplateTypeParmDecl 0x7fe8b20e4a00 <col:11, col:20> col:20 referenced class depth 0 index 0 ... _Tp
| |   | `-TypeAliasDecl 0x7fe8b20e4c50 <col:25, col:77> col:31 common_type_t 'typename common_type<_Tp...>::type'
| |   |   `-DependentNameType 0x7fe8b20e4be0 'typename common_type<_Tp...>::type' dependent
| |   |-ClassTemplateDecl 0x7fe8b20e4e90 <line:2085:1, col:74> col:41 __select_2nd
| |   | |-TemplateTypeParmDecl 0x7fe8b20e4d00 <col:10> col:10 typename depth 0 index 0
| |   | |-TemplateTypeParmDecl 0x7fe8b20e4d68 <col:20, col:29> col:29 referenced typename depth 0 index 1 _Tp
| |   | `-CXXRecordDecl 0x7fe8b20e4df8 <col:34, col:74> col:41 struct __select_2nd definition
| |   |   |-CXXRecordDecl 0x7fe8b20e5130 <col:34, col:41> col:41 implicit struct __select_2nd
| |   |   `-TypedefDecl 0x7fe8b20e51d8 <col:56, col:68> col:68 type '_Tp'
| |   |     `-TemplateTypeParmType 0x7fe8b20e4db0 '_Tp' dependent depth 0 index 1
| |   |       `-TemplateTypeParm 0x7fe8b20e4d68 '_Tp'
| |   |-FunctionTemplateDecl 0x7fe8b20e59c8 <line:2087:1, line:2089:25> col:1 __is_assignable_test
| |   | |-TemplateTypeParmDecl 0x7fe8b20e5250 <line:2087:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fe8b20e52b8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | `-FunctionDecl 0x7fe8b20e5930 <line:2088:1, line:2089:25> col:1 __is_assignable_test 'typename __select_2nd<decltype((std::__1::declval<_Tp>() = std::__1::declval<_Arg>())), true_type>::type (int)'
| |   |   `-ParmVarDecl 0x7fe8b20e5818 <col:22> col:25 'int'
| |   |-FunctionTemplateDecl 0x7fe8b20e5c38 <line:2091:1, line:2092:36> col:12 __is_assignable_test
| |   | |-TemplateTypeParmDecl 0x7fe8b20e5a20 <line:2091:11> col:11 class depth 0 index 0
| |   | |-TemplateTypeParmDecl 0x7fe8b20e5a88 <col:18> col:18 class depth 0 index 1
| |   | `-FunctionDecl 0x7fe8b20e5ba0 <line:2092:1, col:36> col:12 __is_assignable_test 'std::__1::false_type (...)'
| |   |-ClassTemplateDecl 0x7fe8b20e6128 <line:2095:1, line:2097:69> line:2096:8 __is_assignable_imp
| |   | |-TemplateTypeParmDecl 0x7fe8b20e5c88 <line:2095:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fe8b20e5cf8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | |-NonTypeTemplateParmDecl 0x7fe8b20e6010 <col:34, col:79> col:39 '_Bool' depth 0 index 2
| |   | | `-TemplateArgument expr
| |   | |   `-BinaryOperator 0x7fe8b20e5fd8 <col:41, col:79> '<dependent type>' '||'
| |   | |     |-DependentScopeDeclRefExpr 0x7fe8b20e5e38 <col:41, col:55> '<dependent type>' lvalue
| |   | |     `-DependentScopeDeclRefExpr 0x7fe8b20e5f98 <col:64, col:79> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fe8b20e6090 <line:2096:1, line:2097:69> line:2096:8 struct __is_assignable_imp definition
| |   |   |-public 'decltype((std::__1::__is_assignable_test<_Tp, _Arg>(0)))'
| |   |   `-CXXRecordDecl 0x7fe8b20e6698 <col:1, col:8> col:8 implicit struct __is_assignable_imp
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b207d8a0 <line:2099:1, line:2103:1> line:2100:8 struct __is_assignable_imp definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fe8b20e6750 <line:2099:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fe8b20e67b8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | `-CXXRecordDecl 0x7fe8b207dbc0 <line:2100:1, col:8> col:8 implicit struct __is_assignable_imp
| |   |-ClassTemplateDecl 0x7fe8b207de10 <line:2105:1, line:2107:46> line:2106:8 is_assignable
| |   | |-TemplateTypeParmDecl 0x7fe8b207dc78 <line:2105:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fe8b207dce8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | `-CXXRecordDecl 0x7fe8b207dd78 <line:2106:1, line:2107:46> line:2106:8 struct is_assignable definition
| |   |   |-public '__is_assignable_imp<_Tp, _Arg>'
| |   |   `-CXXRecordDecl 0x7fe8b207e4a8 <col:1, col:8> col:8 implicit struct is_assignable
| |   |-ClassTemplateDecl 0x7fe8b207e6a8 <line:2116:1, line:2118:88> line:2116:50 is_copy_assignable
| |   | |-TemplateTypeParmDecl 0x7fe8b207e560 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b207e610 <col:22, line:2118:88> line:2116:50 struct is_copy_assignable definition
| |   |   |-public 'is_assignable<typename add_lvalue_reference<_Tp>::type, typename add_lvalue_reference<typename add_const<_Tp>::type>::type>'
| |   |   |-TypeVisibilityAttr 0x7fe8b207e920 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fe8b207ee88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2116:22, col:50> col:50 implicit struct is_copy_assignable
| |   |-ClassTemplateDecl 0x7fe8b207f088 <line:2127:1, line:2130:71> line:2127:50 is_move_assignable
| |   | |-TemplateTypeParmDecl 0x7fe8b207ef40 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b207eff0 <col:22, line:2130:71> line:2127:50 struct is_move_assignable definition
| |   |   |-public 'is_assignable<typename add_lvalue_reference<_Tp>::type, typename add_rvalue_reference<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fe8b207f300 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fe8b207f6c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2127:22, col:50> col:50 implicit struct is_move_assignable
| |   |-ClassTemplateDecl 0x7fe8b20f2a98 <line:2149:1, line:2150:52> col:8 __is_destructible_apply
| |   | |-TemplateTypeParmDecl 0x7fe8b207f780 <line:2149:11> col:11 class depth 0 index 0
| |   | `-CXXRecordDecl 0x7fe8b20f2a00 <line:2150:1, col:52> col:8 struct __is_destructible_apply definition
| |   |   |-CXXRecordDecl 0x7fe8b20f2d10 <col:1, col:8> col:8 implicit struct __is_destructible_apply
| |   |   `-TypedefDecl 0x7fe8b20f2dc0 <col:34, col:46> col:46 type 'int'
| |   |     `-BuiltinType 0x7fe8b18325c0 'int'
| |   |-ClassTemplateDecl 0x7fe8b20f2f58 <line:2152:1, line:2163:1> line:2153:8 __is_destructor_wellformed
| |   | |-TemplateTypeParmDecl 0x7fe8b20f2e38 <line:2152:11, col:20> col:20 referenced typename depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b20f2ec0 <line:2153:1, line:2163:1> line:2153:8 struct __is_destructor_wellformed definition
| |   |   |-CXXRecordDecl 0x7fe8b20f31d0 <col:1, col:8> col:8 implicit struct __is_destructor_wellformed
| |   |   |-FunctionTemplateDecl 0x7fe8b20f38e8 <line:2154:5, line:2157:5> line:2155:18 __test
| |   |   | |-TemplateTypeParmDecl 0x7fe8b20f3268 <line:2154:15, col:24> col:24 referenced typename depth 1 index 0 _Tp1
| |   |   | `-CXXMethodDecl 0x7fe8b20f3850 <line:2155:5, line:2157:5> line:2155:18 __test 'char (typename __is_destructible_apply<decltype(std::__1::declval<_Tp1 &>().~_Tp1())>::type)' static
| |   |   |   `-ParmVarDecl 0x7fe8b20f3720 <line:2156:9, col:86> line:2157:5 'typename __is_destructible_apply<decltype(std::__1::declval<_Tp1 &>().~_Tp1())>::type'
| |   |   |-FunctionTemplateDecl 0x7fe8b20f3a78 <line:2159:5, line:2160:29> col:18 __test
| |   |   | |-TemplateTypeParmDecl 0x7fe8b20f3940 <line:2159:15, col:24> col:24 typename depth 1 index 0 _Tp1
| |   |   | `-CXXMethodDecl 0x7fe8b20f39e0 <line:2160:5, col:29> col:18 __test 'struct std::__1::__two (...)' static
| |   |   `-VarDecl 0x7fe8b20f3ad8 <line:2162:5, col:69> col:23 value 'const _Bool' static cinit
| |   |     `-BinaryOperator 0x7fe8b20f3cc0 <col:31, col:69> '_Bool' '=='
| |   |       |-UnaryExprOrTypeTraitExpr 0x7fe8b20f3c70 <col:31, col:53> 'unsigned long' sizeof
| |   |       | `-ParenExpr 0x7fe8b20f3c50 <col:37, col:53> '<dependent type>'
| |   |       |   `-CallExpr 0x7fe8b20f3c20 <col:38, col:52> '<dependent type>'
| |   |       |     |-UnresolvedLookupExpr 0x7fe8b20f3b60 <col:38, col:48> '<dependent type>' lvalue (no ADL) = '__test' 0x7fe8b20f3a78 0x7fe8b20f38e8
| |   |       |     `-IntegerLiteral 0x7fe8b20f3c00 <col:50> 'int' 12
| |   |       `-UnaryExprOrTypeTraitExpr 0x7fe8b20f3ca0 <col:58, col:69> 'unsigned long' sizeof 'char'
| |   |-ClassTemplateDecl 0x7fe8b20f3e98 <line:2165:1, line:2166:8> col:8 __destructible_imp
| |   | |-TemplateTypeParmDecl 0x7fe8b20f3d08 <line:2165:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fe8b20f3d88 <col:22> col:26 '_Bool' depth 0 index 1
| |   | `-CXXRecordDecl 0x7fe8b20f3e00 <line:2166:1, col:8> col:8 struct __destructible_imp
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b20f42e0 <line:2168:1, line:2171:92> line:2169:8 struct __destructible_imp definition
| |   | |-public 'std::__1::integral_constant<_Bool, __is_destructor_wellformed<typename std::__1::remove_all_extents<_Tp>::type>::value>':'integral_constant<_Bool, __is_destructor_wellformed<typename std::__1::remove_all_extents<_Tp>::type>::value>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fe8b20f40f8 <line:2168:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b20f4a18 <line:2169:1, col:8> col:8 implicit struct __destructible_imp
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b20f4cb0 <line:2173:1, line:2175:32> line:2174:8 struct __destructible_imp definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fe8b20f4ad0 <line:2173:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b20f4ff0 <line:2174:1, col:8> col:8 implicit struct __destructible_imp
| |   |-ClassTemplateDecl 0x7fe8b20f5238 <line:2177:1, line:2178:8> col:8 __destructible_false
| |   | |-TemplateTypeParmDecl 0x7fe8b20f50a8 <line:2177:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fe8b20f5128 <col:22> col:26 '_Bool' depth 0 index 1
| |   | `-CXXRecordDecl 0x7fe8b20f51a0 <line:2178:1, col:8> col:8 struct __destructible_false
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b20f5680 <line:2180:1, line:2181:108> col:8 struct __destructible_false definition
| |   | |-public '__destructible_imp<_Tp, std::__1::is_reference<_Tp>::value>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fe8b20f5498 <line:2180:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b20f5bc8 <line:2181:1, col:8> col:8 implicit struct __destructible_false
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b20f5e60 <line:2183:1, line:2184:68> col:8 struct __destructible_false definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fe8b20f5c80 <line:2183:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b20f61a0 <line:2184:1, col:8> col:8 implicit struct __destructible_false
| |   |-ClassTemplateDecl 0x7fe8b20f6378 <line:2186:1, line:2188:73> line:2187:8 is_destructible
| |   | |-TemplateTypeParmDecl 0x7fe8b20f6258 <line:2186:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fe8b20f62e0 <line:2187:1, line:2188:73> line:2187:8 struct is_destructible definition
| |   | | |-public '__destructible_false<_Tp, std::__1::is_function<_Tp>::value>'
| |   | | `-CXXRecordDecl 0x7fe8b20f68a8 <col:1, col:8> col:8 implicit struct is_destructible
| |   | `-ClassTemplateSpecialization 0x7fe8b20f6ec8 'is_destructible'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b20f6b28 <line:2190:1, line:2192:33> line:2191:8 struct is_destructible definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'type-parameter-0-0 []'
| |   | |-TemplateTypeParmDecl 0x7fe8b20f6960 <line:2190:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b20f6df0 <line:2191:1, col:8> col:8 implicit struct is_destructible
| |   |-ClassTemplateSpecializationDecl 0x7fe8b20f6ec8 <line:2194:1, line:2196:33> line:2195:8 struct is_destructible definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'void'
| |   | `-CXXRecordDecl 0x7fe8b20f7170 <col:1, col:8> col:8 implicit struct is_destructible
| |   |-FunctionTemplateDecl 0x7fe8b20f7638 <line:2207:1, line:2214:1> line:2210:1 move
| |   | |-TemplateTypeParmDecl 0x7fe8b20f7228 <line:2207:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fe8b20f75a0 <line:2208:1, line:2214:1> line:2210:1 constexpr move 'typename remove_reference<_Tp>::type &&(_Tp &&) noexcept' inline
| |   |   |-ParmVarDecl 0x7fe8b20f7418 <col:6, col:12> col:12 referenced __t '_Tp &&'
| |   |   |-CompoundStmt 0x7fe8b20f7950 <line:2211:1, line:2214:1>
| |   |   | |-DeclStmt 0x7fe8b20f7868 <line:2212:5, col:53>
| |   |   | | `-TypedefDecl 0x7fe8b20f7810 <col:5, col:50> col:50 referenced _Up 'typename remove_reference<_Tp>::type'
| |   |   | |   `-DependentNameType 0x7fe8b20f77a0 'typename remove_reference<_Tp>::type' dependent
| |   |   | `-ReturnStmt 0x7fe8b20f7938 <line:2213:5, col:34>
| |   |   |   `-CXXStaticCastExpr 0x7fe8b20f7908 <col:12, col:34> '_Up':'typename remove_reference<_Tp>::type' xvalue static_cast<_Up &&> <Dependent>
| |   |   |     `-DeclRefExpr 0x7fe8b20f78a0 <col:31> '_Tp' lvalue ParmVar 0x7fe8b20f7418 '__t' '_Tp &&'
| |   |   |-AlwaysInlineAttr 0x7fe8b20f7690 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fe8b20f76d8 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fe8b20f7d80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2216:1, line:2222:1> line:2219:1 forward
| |   | |-TemplateTypeParmDecl 0x7fe8b20f7978 <line:2216:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fe8b20f7ce8 <line:2217:1, line:2222:1> line:2219:1 constexpr forward '_Tp &&(typename remove_reference<_Tp>::type &) noexcept' inline
| |   |   |-ParmVarDecl 0x7fe8b20f7bb0 <col:9, col:47> col:47 referenced __t 'typename remove_reference<_Tp>::type &'
| |   |   |-CompoundStmt 0x7fe8b20f7eb0 <line:2220:1, line:2222:1>
| |   |   | `-ReturnStmt 0x7fe8b20f7e98 <line:2221:5, col:34>
| |   |   |   `-CXXStaticCastExpr 0x7fe8b20f7e68 <col:12, col:34> '_Tp' xvalue static_cast<_Tp &&> <Dependent>
| |   |   |     `-DeclRefExpr 0x7fe8b20f7e30 <col:31> 'typename remove_reference<_Tp>::type' lvalue ParmVar 0x7fe8b20f7bb0 '__t' 'typename remove_reference<_Tp>::type &'
| |   |   |-AlwaysInlineAttr 0x7fe8b20f7dd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fe8b20f7e20 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fe8b20f82a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2224:1, line:2232:1> line:2227:1 forward
| |   | |-TemplateTypeParmDecl 0x7fe8b20f7ed0 <line:2224:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fe8b20f8208 <line:2225:1, line:2232:1> line:2227:1 constexpr forward '_Tp &&(typename remove_reference<_Tp>::type &&) noexcept' inline
| |   |   |-ParmVarDecl 0x7fe8b20f80d0 <col:9, col:48> col:48 referenced __t 'typename remove_reference<_Tp>::type &&'
| |   |   |-CompoundStmt 0x7fe8b20f8618 <line:2228:1, line:2232:1>
| |   |   | |-DeclStmt 0x7fe8b20f8580 <line:2229:5, line:2230:60>
| |   |   | | `-StaticAssertDecl 0x7fe8b20f8548 <line:2229:5, line:2230:59> line:2229:5
| |   |   | |   |-UnaryOperator 0x7fe8b20f8458 <col:19, col:46> '<dependent type>' prefix '!'
| |   |   | |   | `-DependentScopeDeclRefExpr 0x7fe8b20f8418 <col:20, col:46> '<dependent type>' lvalue
| |   |   | |   `-StringLiteral 0x7fe8b20f84f8 <line:2230:19> 'const char [39]' lvalue "can not forward an rvalue as an lvalue"
| |   |   | `-ReturnStmt 0x7fe8b20f8600 <line:2231:5, col:34>
| |   |   |   `-CXXStaticCastExpr 0x7fe8b20f85d0 <col:12, col:34> '_Tp' xvalue static_cast<_Tp &&> <Dependent>
| |   |   |     `-DeclRefExpr 0x7fe8b20f8598 <col:31> 'typename remove_reference<_Tp>::type' lvalue ParmVar 0x7fe8b20f80d0 '__t' 'typename remove_reference<_Tp>::type &&'
| |   |   |-AlwaysInlineAttr 0x7fe8b20f82f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fe8b20f8340 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fe8b20f8a00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2277:1, line:2283:1> line:2280:1 __decay_copy
| |   | |-TemplateTypeParmDecl 0x7fe8b20f8640 <line:2277:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fe8b20f8940 <line:2278:1, line:2283:1> line:2280:1 __decay_copy 'typename decay<_Tp>::type (_Tp &&)' inline
| |   |   |-ParmVarDecl 0x7fe8b20f8828 <col:14, col:20> col:20 referenced __t '_Tp &&'
| |   |   |-CompoundStmt 0x7fe8b20f8c18 <line:2281:1, line:2283:1>
| |   |   | `-ReturnStmt 0x7fe8b20f8c00 <line:2282:5, col:35>
| |   |   |   `-CallExpr 0x7fe8b20f8bd0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2282:35> '<dependent type>'
| |   |   |     |-UnresolvedLookupExpr 0x7fe8b20f8b08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2282:30> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fe8b20f7d80 0x7fe8b20f82a0
| |   |   |     `-DeclRefExpr 0x7fe8b20f8ba8 <col:32> '_Tp' lvalue ParmVar 0x7fe8b20f8828 '__t' '_Tp &&'
| |   |   |-AlwaysInlineAttr 0x7fe8b20f8a58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fe8b20f8aa0 <col:51, col:74> Hidden
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b20f91b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:2299:1, line:2305:1> line:2300:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...)'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fe8b20f8c38 <line:2299:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fe8b20f8ca8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fe8b20f8d18 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fe8b20f94d0 <line:2300:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fe8b20f9578 <line:2302:5, col:20> col:20 _ClassType '_Class'
| |   | | `-TemplateTypeParmType 0x7fe8b20f8cf0 '_Class' dependent depth 0 index 1
| |   | |   `-TemplateTypeParm 0x7fe8b20f8ca8 '_Class'
| |   | |-TypedefDecl 0x7fe8b20f95e0 <line:2303:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fe8b20f8c80 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fe8b20f8c38 '_Rp'
| |   | `-TypedefDecl 0x7fe8b20f96d8 <line:2304:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fe8b20f8f10 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fe8b20f8ed0 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fe8b20f8c80 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fe8b20f8c38 '_Rp'
| |   |       `-PackExpansionType 0x7fe8b20f8df0 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fe8b20f8d60 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fe8b20f8d18 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b20f9cc8 <line:2307:1, line:2313:1> line:2308:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...)'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fe8b20f9750 <line:2307:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fe8b20f97b8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fe8b20f9828 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fe8b20f9fe0 <line:2308:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fe8b20fa088 <line:2310:5, col:20> col:20 _ClassType '_Class'
| |   | | `-TemplateTypeParmType 0x7fe8b20f9800 '_Class' dependent depth 0 index 1
| |   | |   `-TemplateTypeParm 0x7fe8b20f97b8 '_Class'
| |   | |-TypedefDecl 0x7fe8b20fa0f0 <line:2311:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fe8b20f9790 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fe8b20f9750 '_Rp'
| |   | `-TypedefDecl 0x7fe8b20fa1e8 <line:2312:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fe8b20f9a20 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fe8b20f99e0 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fe8b20f9790 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fe8b20f9750 '_Rp'
| |   |       |-PackExpansionType 0x7fe8b20f9900 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fe8b20f9870 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fe8b20f9828 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b20fa7d8 <line:2315:1, line:2321:1> line:2316:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fe8b20fa260 <line:2315:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fe8b20fa2c8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fe8b20fa338 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fe8b20fab50 <line:2316:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fe8b20fabf8 <line:2318:5, col:26> col:26 _ClassType 'const _Class'
| |   | | `-QualType 0x7fe8b20fa311 'const _Class' const
| |   | |   `-TemplateTypeParmType 0x7fe8b20fa310 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fe8b20fa2c8 '_Class'
| |   | |-TypedefDecl 0x7fe8b20fac60 <line:2319:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fe8b20fa2a0 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fe8b20fa260 '_Rp'
| |   | `-TypedefDecl 0x7fe8b20fadc8 <line:2320:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fe8b20fad70 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fe8b20fad30 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fe8b20fa2a0 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fe8b20fa260 '_Rp'
| |   |       `-PackExpansionType 0x7fe8b20fa410 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fe8b20fa380 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fe8b20fa338 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b20fb3b8 <line:2323:1, line:2329:1> line:2324:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) const'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fe8b20fae40 <line:2323:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fe8b20faea8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fe8b20faf18 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fe8b20fb6d0 <line:2324:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fe8b20fb778 <line:2326:5, col:26> col:26 _ClassType 'const _Class'
| |   | | `-QualType 0x7fe8b20faef1 'const _Class' const
| |   | |   `-TemplateTypeParmType 0x7fe8b20faef0 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fe8b20faea8 '_Class'
| |   | |-TypedefDecl 0x7fe8b20fb7e0 <line:2327:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fe8b20fae80 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fe8b20fae40 '_Rp'
| |   | `-TypedefDecl 0x7fe8b20fb948 <line:2328:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fe8b20fb8f0 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fe8b20fb8b0 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fe8b20fae80 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fe8b20fae40 '_Rp'
| |   |       |-PackExpansionType 0x7fe8b20faff0 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fe8b20faf60 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fe8b20faf18 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b20fbf38 <line:2331:1, line:2337:1> line:2332:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) volatile'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fe8b20fb9c0 <line:2331:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fe8b20fba28 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fe8b20fba98 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fe8b20fc250 <line:2332:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fe8b20fc2f8 <line:2334:5, col:29> col:29 _ClassType 'volatile _Class'
| |   | | `-QualType 0x7fe8b20fba74 'volatile _Class' volatile
| |   | |   `-TemplateTypeParmType 0x7fe8b20fba70 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fe8b20fba28 '_Class'
| |   | |-TypedefDecl 0x7fe8b20fc360 <line:2335:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fe8b20fba00 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fe8b20fb9c0 '_Rp'
| |   | `-TypedefDecl 0x7fe8b20fc4c8 <line:2336:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fe8b20fc470 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fe8b20fc430 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fe8b20fba00 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fe8b20fb9c0 '_Rp'
| |   |       `-PackExpansionType 0x7fe8b20fbb70 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fe8b20fbae0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fe8b20fba98 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b20fd318 <line:2339:1, line:2345:1> line:2340:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) volatile'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fe8b20fc540 <line:2339:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fe8b20fc5a8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fe8b20fc618 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fe8b20fd630 <line:2340:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fe8b20fd6d8 <line:2342:5, col:29> col:29 _ClassType 'volatile _Class'
| |   | | `-QualType 0x7fe8b20fc5f4 'volatile _Class' volatile
| |   | |   `-TemplateTypeParmType 0x7fe8b20fc5f0 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fe8b20fc5a8 '_Class'
| |   | |-TypedefDecl 0x7fe8b20fd740 <line:2343:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fe8b20fc580 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fe8b20fc540 '_Rp'
| |   | `-TypedefDecl 0x7fe8b20fd8a8 <line:2344:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fe8b20fd850 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fe8b20fd810 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fe8b20fc580 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fe8b20fc540 '_Rp'
| |   |       |-PackExpansionType 0x7fe8b20fc6f0 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fe8b20fc660 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fe8b20fc618 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b20fde98 <line:2347:1, line:2353:1> line:2348:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const volatile'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fe8b20fd920 <line:2347:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fe8b20fd988 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fe8b20fd9f8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fe8b20fe1b0 <line:2348:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fe8b20fe258 <line:2350:5, col:35> col:35 _ClassType 'const volatile _Class'
| |   | | `-QualType 0x7fe8b20fd9d5 'const volatile _Class' const volatile
| |   | |   `-TemplateTypeParmType 0x7fe8b20fd9d0 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fe8b20fd988 '_Class'
| |   | |-TypedefDecl 0x7fe8b20fe2c0 <line:2351:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fe8b20fd960 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fe8b20fd920 '_Rp'
| |   | `-TypedefDecl 0x7fe8b20fe428 <line:2352:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fe8b20fe3d0 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fe8b20fe390 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fe8b20fd960 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fe8b20fd920 '_Rp'
| |   |       `-PackExpansionType 0x7fe8b20fdad0 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fe8b20fda40 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fe8b20fd9f8 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b20fea18 <line:2355:1, line:2361:1> line:2356:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) const volatile'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fe8b20fe4a0 <line:2355:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fe8b20fe508 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fe8b20fe578 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fe8b20fed30 <line:2356:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fe8b20fedd8 <line:2358:5, col:35> col:35 _ClassType 'const volatile _Class'
| |   | | `-QualType 0x7fe8b20fe555 'const volatile _Class' const volatile
| |   | |   `-TemplateTypeParmType 0x7fe8b20fe550 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fe8b20fe508 '_Class'
| |   | |-TypedefDecl 0x7fe8b20fee40 <line:2359:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fe8b20fe4e0 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fe8b20fe4a0 '_Rp'
| |   | `-TypedefDecl 0x7fe8b20fefa8 <line:2360:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fe8b20fef50 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fe8b20fef10 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fe8b20fe4e0 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fe8b20fe4a0 '_Rp'
| |   |       |-PackExpansionType 0x7fe8b20fe650 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fe8b20fe5c0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fe8b20fe578 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b2100198 <line:2366:1, line:2372:1> line:2367:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) &'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fe8b20ff020 <line:2366:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fe8b20ff088 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fe8b20ff0f8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fe8b21004b0 <line:2367:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fe8b2100588 <line:2369:5, col:21> col:21 _ClassType '_Class &'
| |   | | `-LValueReferenceType 0x7fe8b2100550 '_Class &' dependent
| |   | |   `-TemplateTypeParmType 0x7fe8b20ff0d0 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fe8b20ff088 '_Class'
| |   | |-TypedefDecl 0x7fe8b21005f0 <line:2370:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fe8b20ff060 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fe8b20ff020 '_Rp'
| |   | `-TypedefDecl 0x7fe8b2100758 <line:2371:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fe8b2100700 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fe8b21006c0 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fe8b20ff060 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fe8b20ff020 '_Rp'
| |   |       `-PackExpansionType 0x7fe8b20ff1d0 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fe8b20ff140 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fe8b20ff0f8 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b2100d48 <line:2374:1, line:2380:1> line:2375:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) &'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fe8b21007d0 <line:2374:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fe8b2100838 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fe8b21008a8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fe8b2101060 <line:2375:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fe8b2101138 <line:2377:5, col:21> col:21 _ClassType '_Class &'
| |   | | `-LValueReferenceType 0x7fe8b2101100 '_Class &' dependent
| |   | |   `-TemplateTypeParmType 0x7fe8b2100880 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fe8b2100838 '_Class'
| |   | |-TypedefDecl 0x7fe8b21011a0 <line:2378:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fe8b2100810 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fe8b21007d0 '_Rp'
| |   | `-TypedefDecl 0x7fe8b2101308 <line:2379:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fe8b21012b0 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fe8b2101270 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fe8b2100810 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fe8b21007d0 '_Rp'
| |   |       |-PackExpansionType 0x7fe8b2100980 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fe8b21008f0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fe8b21008a8 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b21018f8 <line:2382:1, line:2388:1> line:2383:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const &'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fe8b2101380 <line:2382:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fe8b21013e8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fe8b2101458 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fe8b2101c10 <line:2383:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fe8b2101ce8 <line:2385:5, col:27> col:27 _ClassType 'const _Class &'
| |   | | `-LValueReferenceType 0x7fe8b2101cb0 'const _Class &' dependent
| |   | |   `-QualType 0x7fe8b2101431 'const _Class' const
| |   | |     `-TemplateTypeParmType 0x7fe8b2101430 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fe8b21013e8 '_Class'
| |   | |-TypedefDecl 0x7fe8b2101d50 <line:2386:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fe8b21013c0 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fe8b2101380 '_Rp'
| |   | `-TypedefDecl 0x7fe8b2102af8 <line:2387:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fe8b2102aa0 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fe8b2102a60 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fe8b21013c0 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fe8b2101380 '_Rp'
| |   |       `-PackExpansionType 0x7fe8b2101530 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fe8b21014a0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fe8b2101458 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b21030e8 <line:2390:1, line:2396:1> line:2391:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) const &'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fe8b2102b70 <line:2390:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fe8b2102bd8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fe8b2102c48 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fe8b2103400 <line:2391:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fe8b21034d8 <line:2393:5, col:27> col:27 _ClassType 'const _Class &'
| |   | | `-LValueReferenceType 0x7fe8b21034a0 'const _Class &' dependent
| |   | |   `-QualType 0x7fe8b2102c21 'const _Class' const
| |   | |     `-TemplateTypeParmType 0x7fe8b2102c20 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fe8b2102bd8 '_Class'
| |   | |-TypedefDecl 0x7fe8b2103540 <line:2394:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fe8b2102bb0 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fe8b2102b70 '_Rp'
| |   | `-TypedefDecl 0x7fe8b21036a8 <line:2395:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fe8b2103650 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fe8b2103610 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fe8b2102bb0 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fe8b2102b70 '_Rp'
| |   |       |-PackExpansionType 0x7fe8b2102d20 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fe8b2102c90 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fe8b2102c48 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b2103c98 <line:2398:1, line:2404:1> line:2399:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) volatile &'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fe8b2103720 <line:2398:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fe8b2103788 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fe8b21037f8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fe8b2103fb0 <line:2399:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fe8b2104088 <line:2401:5, col:30> col:30 _ClassType 'volatile _Class &'
| |   | | `-LValueReferenceType 0x7fe8b2104050 'volatile _Class &' dependent
| |   | |   `-QualType 0x7fe8b21037d4 'volatile _Class' volatile
| |   | |     `-TemplateTypeParmType 0x7fe8b21037d0 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fe8b2103788 '_Class'
| |   | |-TypedefDecl 0x7fe8b21040f0 <line:2402:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fe8b2103760 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fe8b2103720 '_Rp'
| |   | `-TypedefDecl 0x7fe8b2104258 <line:2403:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fe8b2104200 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fe8b21041c0 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fe8b2103760 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fe8b2103720 '_Rp'
| |   |       `-PackExpansionType 0x7fe8b21038d0 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fe8b2103840 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fe8b21037f8 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b2104848 <line:2406:1, line:2412:1> line:2407:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) volatile &'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fe8b21042d0 <line:2406:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fe8b2104338 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fe8b21043a8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fe8b2105370 <line:2407:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fe8b2105448 <line:2409:5, col:30> col:30 _ClassType 'volatile _Class &'
| |   | | `-LValueReferenceType 0x7fe8b2105410 'volatile _Class &' dependent
| |   | |   `-QualType 0x7fe8b2104384 'volatile _Class' volatile
| |   | |     `-TemplateTypeParmType 0x7fe8b2104380 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fe8b2104338 '_Class'
| |   | |-TypedefDecl 0x7fe8b21054b0 <line:2410:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fe8b2104310 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fe8b21042d0 '_Rp'
| |   | `-TypedefDecl 0x7fe8b2105618 <line:2411:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fe8b21055c0 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fe8b2105580 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fe8b2104310 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fe8b21042d0 '_Rp'
| |   |       |-PackExpansionType 0x7fe8b2104480 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fe8b21043f0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fe8b21043a8 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b2105c08 <line:2414:1, line:2420:1> line:2415:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const volatile &'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fe8b2105690 <line:2414:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fe8b21056f8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fe8b2105768 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fe8b2105f20 <line:2415:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fe8b2105ff8 <line:2417:5, col:36> col:36 _ClassType 'const volatile _Class &'
| |   | | `-LValueReferenceType 0x7fe8b2105fc0 'const volatile _Class &' dependent
| |   | |   `-QualType 0x7fe8b2105745 'const volatile _Class' const volatile
| |   | |     `-TemplateTypeParmType 0x7fe8b2105740 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fe8b21056f8 '_Class'
| |   | |-TypedefDecl 0x7fe8b2106060 <line:2418:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fe8b21056d0 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fe8b2105690 '_Rp'
| |   | `-TypedefDecl 0x7fe8b21061c8 <line:2419:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fe8b2106170 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fe8b2106130 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fe8b21056d0 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fe8b2105690 '_Rp'
| |   |       `-PackExpansionType 0x7fe8b2105840 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fe8b21057b0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fe8b2105768 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b21067b8 <line:2422:1, line:2428:1> line:2423:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) const volatile &'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fe8b2106240 <line:2422:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fe8b21062a8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fe8b2106318 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fe8b2106ad0 <line:2423:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fe8b2106ba8 <line:2425:5, col:36> col:36 _ClassType 'const volatile _Class &'
| |   | | `-LValueReferenceType 0x7fe8b2106b70 'const volatile _Class &' dependent
| |   | |   `-QualType 0x7fe8b21062f5 'const volatile _Class' const volatile
| |   | |     `-TemplateTypeParmType 0x7fe8b21062f0 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fe8b21062a8 '_Class'
| |   | |-TypedefDecl 0x7fe8b2106c10 <line:2426:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fe8b2106280 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fe8b2106240 '_Rp'
| |   | `-TypedefDecl 0x7fe8b2106d78 <line:2427:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fe8b2106d20 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fe8b2106ce0 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fe8b2106280 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fe8b2106240 '_Rp'
| |   |       |-PackExpansionType 0x7fe8b21063f0 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fe8b2106360 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fe8b2106318 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b2020598 <line:2430:1, line:2436:1> line:2431:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) &&'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fe8b2106df0 <line:2430:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fe8b2106e58 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fe8b2106ec8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fe8b20208b0 <line:2431:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fe8b20209b8 <line:2433:5, col:22> col:22 _ClassType '_Class &&'
| |   | | `-RValueReferenceType 0x7fe8b2020980 '_Class &&' dependent
| |   | |   `-TemplateTypeParmType 0x7fe8b2106ea0 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fe8b2106e58 '_Class'
| |   | |-TypedefDecl 0x7fe8b2020a20 <line:2434:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fe8b2106e30 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fe8b2106df0 '_Rp'
| |   | `-TypedefDecl 0x7fe8b2020b88 <line:2435:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fe8b2020b30 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fe8b2020af0 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fe8b2106e30 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fe8b2106df0 '_Rp'
| |   |       `-PackExpansionType 0x7fe8b2106fa0 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fe8b2106f10 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fe8b2106ec8 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b2021178 <line:2438:1, line:2444:1> line:2439:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) &&'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fe8b2020c00 <line:2438:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fe8b2020c68 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fe8b2020cd8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fe8b2021490 <line:2439:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fe8b2021568 <line:2441:5, col:22> col:22 _ClassType '_Class &&'
| |   | | `-RValueReferenceType 0x7fe8b2021530 '_Class &&' dependent
| |   | |   `-TemplateTypeParmType 0x7fe8b2020cb0 '_Class' dependent depth 0 index 1
| |   | |     `-TemplateTypeParm 0x7fe8b2020c68 '_Class'
| |   | |-TypedefDecl 0x7fe8b20215d0 <line:2442:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fe8b2020c40 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fe8b2020c00 '_Rp'
| |   | `-TypedefDecl 0x7fe8b2021738 <line:2443:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fe8b20216e0 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fe8b20216a0 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fe8b2020c40 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fe8b2020c00 '_Rp'
| |   |       |-PackExpansionType 0x7fe8b2020db0 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fe8b2020d20 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fe8b2020cd8 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b2021d28 <line:2446:1, line:2452:1> line:2447:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const &&'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fe8b20217b0 <line:2446:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fe8b2021818 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fe8b2021888 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fe8b2022040 <line:2447:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fe8b2022148 <line:2449:5, col:28> col:28 _ClassType 'const _Class &&'
| |   | | `-RValueReferenceType 0x7fe8b2022110 'const _Class &&' dependent
| |   | |   `-QualType 0x7fe8b2021861 'const _Class' const
| |   | |     `-TemplateTypeParmType 0x7fe8b2021860 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fe8b2021818 '_Class'
| |   | |-TypedefDecl 0x7fe8b20221b0 <line:2450:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fe8b20217f0 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fe8b20217b0 '_Rp'
| |   | `-TypedefDecl 0x7fe8b2022318 <line:2451:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fe8b20222c0 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fe8b2022280 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fe8b20217f0 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fe8b20217b0 '_Rp'
| |   |       `-PackExpansionType 0x7fe8b2021960 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fe8b20218d0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fe8b2021888 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b2023508 <line:2454:1, line:2460:1> line:2455:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) const &&'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fe8b2022390 <line:2454:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fe8b2023000 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fe8b2023068 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fe8b2023820 <line:2455:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fe8b20238f8 <line:2457:5, col:28> col:28 _ClassType 'const _Class &&'
| |   | | `-RValueReferenceType 0x7fe8b20238c0 'const _Class &&' dependent
| |   | |   `-QualType 0x7fe8b2023041 'const _Class' const
| |   | |     `-TemplateTypeParmType 0x7fe8b2023040 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fe8b2023000 '_Class'
| |   | |-TypedefDecl 0x7fe8b2023960 <line:2458:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fe8b20223d0 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fe8b2022390 '_Rp'
| |   | `-TypedefDecl 0x7fe8b2023ac8 <line:2459:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fe8b2023a70 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fe8b2023a30 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fe8b20223d0 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fe8b2022390 '_Rp'
| |   |       |-PackExpansionType 0x7fe8b2023140 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fe8b20230b0 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fe8b2023068 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b20240b8 <line:2462:1, line:2468:1> line:2463:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) volatile &&'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fe8b2023b40 <line:2462:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fe8b2023ba8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fe8b2023c18 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fe8b20243d0 <line:2463:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fe8b20244d8 <line:2465:5, col:31> col:31 _ClassType 'volatile _Class &&'
| |   | | `-RValueReferenceType 0x7fe8b20244a0 'volatile _Class &&' dependent
| |   | |   `-QualType 0x7fe8b2023bf4 'volatile _Class' volatile
| |   | |     `-TemplateTypeParmType 0x7fe8b2023bf0 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fe8b2023ba8 '_Class'
| |   | |-TypedefDecl 0x7fe8b2024540 <line:2466:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fe8b2023b80 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fe8b2023b40 '_Rp'
| |   | `-TypedefDecl 0x7fe8b20246a8 <line:2467:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fe8b2024650 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fe8b2024610 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fe8b2023b80 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fe8b2023b40 '_Rp'
| |   |       `-PackExpansionType 0x7fe8b2023cf0 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fe8b2023c60 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fe8b2023c18 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b2024c98 <line:2470:1, line:2476:1> line:2471:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) volatile &&'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fe8b2024720 <line:2470:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fe8b2024788 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fe8b20247f8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fe8b2107c00 <line:2471:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fe8b2107cd8 <line:2473:5, col:31> col:31 _ClassType 'volatile _Class &&'
| |   | | `-RValueReferenceType 0x7fe8b2107ca0 'volatile _Class &&' dependent
| |   | |   `-QualType 0x7fe8b20247d4 'volatile _Class' volatile
| |   | |     `-TemplateTypeParmType 0x7fe8b20247d0 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fe8b2024788 '_Class'
| |   | |-TypedefDecl 0x7fe8b2107d40 <line:2474:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fe8b2024760 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fe8b2024720 '_Rp'
| |   | `-TypedefDecl 0x7fe8b2107ea8 <line:2475:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fe8b2107e50 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fe8b2107e10 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fe8b2024760 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fe8b2024720 '_Rp'
| |   |       |-PackExpansionType 0x7fe8b20248d0 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fe8b2024840 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fe8b20247f8 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b2108498 <line:2478:1, line:2484:1> line:2479:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const volatile &&'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fe8b2107f20 <line:2478:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fe8b2107f88 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fe8b2107ff8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fe8b21087b0 <line:2479:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fe8b21088b8 <line:2481:5, col:37> col:37 _ClassType 'const volatile _Class &&'
| |   | | `-RValueReferenceType 0x7fe8b2108880 'const volatile _Class &&' dependent
| |   | |   `-QualType 0x7fe8b2107fd5 'const volatile _Class' const volatile
| |   | |     `-TemplateTypeParmType 0x7fe8b2107fd0 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fe8b2107f88 '_Class'
| |   | |-TypedefDecl 0x7fe8b2108920 <line:2482:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fe8b2107f60 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fe8b2107f20 '_Rp'
| |   | `-TypedefDecl 0x7fe8b2108a88 <line:2483:5, col:37> col:18 _FnType '_Rp (_Param...)':'_Rp (_Param...)'
| |   |   `-ParenType 0x7fe8b2108a30 '_Rp (_Param...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fe8b21089f0 '_Rp (_Param...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fe8b2107f60 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fe8b2107f20 '_Rp'
| |   |       `-PackExpansionType 0x7fe8b21080d0 '_Param...' dependent
| |   |         `-TemplateTypeParmType 0x7fe8b2108040 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |           `-TemplateTypeParm 0x7fe8b2107ff8 '_Param'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b2109078 <line:2486:1, line:2492:1> line:2487:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2..., ...) const volatile &&'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fe8b2108b00 <line:2486:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fe8b2108b68 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fe8b2108bd8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | |-CXXRecordDecl 0x7fe8b2109390 <line:2487:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fe8b2109468 <line:2489:5, col:37> col:37 _ClassType 'const volatile _Class &&'
| |   | | `-RValueReferenceType 0x7fe8b2109430 'const volatile _Class &&' dependent
| |   | |   `-QualType 0x7fe8b2108bb5 'const volatile _Class' const volatile
| |   | |     `-TemplateTypeParmType 0x7fe8b2108bb0 '_Class' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x7fe8b2108b68 '_Class'
| |   | |-TypedefDecl 0x7fe8b21094d0 <line:2490:5, col:17> col:17 _ReturnType '_Rp'
| |   | | `-TemplateTypeParmType 0x7fe8b2108b40 '_Rp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fe8b2108b00 '_Rp'
| |   | `-TypedefDecl 0x7fe8b2109638 <line:2491:5, col:42> col:18 _FnType '_Rp (_Param..., ...)':'_Rp (_Param..., ...)'
| |   |   `-ParenType 0x7fe8b21095e0 '_Rp (_Param..., ...)' sugar dependent
| |   |     `-FunctionProtoType 0x7fe8b21095a0 '_Rp (_Param..., ...)' dependent cdecl
| |   |       |-TemplateTypeParmType 0x7fe8b2108b40 '_Rp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0x7fe8b2108b00 '_Rp'
| |   |       |-PackExpansionType 0x7fe8b2108cb0 '_Param...' dependent
| |   |       | `-TemplateTypeParmType 0x7fe8b2108c20 '_Param' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |       |   `-TemplateTypeParm 0x7fe8b2108bd8 '_Param'
| |   |       `-...
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b2109a08 <line:2756:1, line:2761:1> line:2757:8 struct __member_pointer_traits_imp definition
| |   | |-TemplateArgument type 'type-parameter-0-0 type-parameter-0-1::*'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fe8b21096b0 <line:2756:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fe8b2109718 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-CXXRecordDecl 0x7fe8b210a950 <line:2757:1, col:8> col:8 implicit struct __member_pointer_traits_imp
| |   | |-TypedefDecl 0x7fe8b210a9f8 <line:2759:5, col:20> col:20 _ClassType '_Class'
| |   | | `-TemplateTypeParmType 0x7fe8b2109760 '_Class' dependent depth 0 index 1
| |   | |   `-TemplateTypeParm 0x7fe8b2109718 '_Class'
| |   | `-TypedefDecl 0x7fe8b210aa60 <line:2760:5, col:17> col:17 _ReturnType '_Rp'
| |   |   `-TemplateTypeParmType 0x7fe8b21096f0 '_Rp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x7fe8b21096b0 '_Rp'
| |   |-ClassTemplateDecl 0x7fe8b210abf8 <line:2763:1, line:2772:1> line:2764:8 __member_pointer_traits
| |   | |-TemplateTypeParmDecl 0x7fe8b210aad8 <line:2763:11, col:17> col:17 referenced class depth 0 index 0 _MP
| |   | `-CXXRecordDecl 0x7fe8b210ab60 <line:2764:1, line:2772:1> line:2764:8 struct __member_pointer_traits definition
| |   |   |-public '__member_pointer_traits_imp<typename remove_cv<_MP>::type, is_member_function_pointer<_MP>::value, is_member_object_pointer<_MP>::value>'
| |   |   `-CXXRecordDecl 0x7fe8b210b378 <col:1, col:8> col:8 implicit struct __member_pointer_traits
| |   |-ClassTemplateDecl 0x7fe8b210b548 <line:2775:1, line:2776:37> col:8 __member_pointer_class_type
| |   | |-TemplateTypeParmDecl 0x7fe8b210b430 <line:2775:11, col:17> col:17 class depth 0 index 0 _DecayedFp
| |   | `-CXXRecordDecl 0x7fe8b210b4b0 <line:2776:1, col:37> col:8 struct __member_pointer_class_type definition
| |   |   `-CXXRecordDecl 0x7fe8b210b7c0 <col:1, col:8> col:8 implicit struct __member_pointer_class_type
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b210bae8 <line:2778:1, line:2781:1> line:2779:8 struct __member_pointer_class_type definition
| |   | |-TemplateArgument type 'type-parameter-0-0 type-parameter-0-1::*'
| |   | |-TemplateTypeParmDecl 0x7fe8b210b878 <line:2778:11, col:17> col:17 referenced class depth 0 index 0 _Ret
| |   | |-TemplateTypeParmDecl 0x7fe8b210b8e8 <col:23, col:29> col:29 referenced class depth 0 index 1 _ClassType
| |   | |-CXXRecordDecl 0x7fe8b210bd30 <line:2779:1, col:8> col:8 implicit struct __member_pointer_class_type
| |   | `-TypedefDecl 0x7fe8b210bdd8 <line:2780:3, col:22> col:22 type '_ClassType'
| |   |   `-TemplateTypeParmType 0x7fe8b210b930 '_ClassType' dependent depth 0 index 1
| |   |     `-TemplateTypeParm 0x7fe8b210b8e8 '_ClassType'
| |   |-ClassTemplateDecl 0x7fe8b210bf68 <line:2785:1, col:34> col:34 result_of
| |   | |-TemplateTypeParmDecl 0x7fe8b210be50 <col:11, col:17> col:17 class depth 0 index 0 _Callable
| |   | `-CXXRecordDecl 0x7fe8b210bed0 <col:28, col:34> col:34 class result_of
| |   |-NamespaceDecl 0x7fe8b210c178 <line:2937:1, line:2940:1> line:2937:11 __is_construct
| |   | `-CXXRecordDecl 0x7fe8b210c1e0 <line:2939:1, col:15> col:8 struct __nat definition
| |   |   `-CXXRecordDecl 0x7fe8b210c308 <col:1, col:8> col:8 implicit struct __nat
| |   |-ClassTemplateDecl 0x7fe8b210c580 <line:3059:1, line:3062:6> line:3060:29 is_constructible
| |   | |-TemplateTypeParmDecl 0x7fe8b210c3c0 <line:3059:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fe8b210c428 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | `-CXXRecordDecl 0x7fe8b210c4e8 <line:3060:1, line:3062:6> line:3060:29 struct is_constructible definition
| |   |   |-public 'integral_constant<_Bool, __is_constructible(_Tp, _Args...)>'
| |   |   |-TypeVisibilityAttr 0x7fe8b210cc90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fe8b210ce98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3060:1, col:29> col:29 implicit struct is_constructible
| |   |-ClassTemplateDecl 0x7fe8b210d098 <line:3250:1, line:3253:6> line:3251:29 is_default_constructible
| |   | |-TemplateTypeParmDecl 0x7fe8b210cf50 <line:3250:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b210d000 <line:3251:1, line:3253:6> line:3251:29 struct is_default_constructible definition
| |   |   |-public 'is_constructible<_Tp>'
| |   |   |-TypeVisibilityAttr 0x7fe8b210d310 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fe8b210d478 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3251:1, col:29> col:29 implicit struct is_default_constructible
| |   |-ClassTemplateDecl 0x7fe8b210d678 <line:3262:1, line:3265:88> line:3263:29 is_copy_constructible
| |   | |-TemplateTypeParmDecl 0x7fe8b210d530 <line:3262:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b210d5e0 <line:3263:1, line:3265:88> line:3263:29 struct is_copy_constructible definition
| |   |   |-public 'is_constructible<_Tp, typename add_lvalue_reference<typename add_const<_Tp>::type>::type>'
| |   |   |-TypeVisibilityAttr 0x7fe8b210d8f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fe8b210dce8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3263:1, col:29> col:29 implicit struct is_copy_constructible
| |   |-ClassTemplateDecl 0x7fe8b210dee8 <line:3274:1, line:3281:6> line:3275:29 is_move_constructible
| |   | |-TemplateTypeParmDecl 0x7fe8b210dda0 <line:3274:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b210de50 <line:3275:1, line:3281:6> line:3275:29 struct is_move_constructible definition
| |   |   |-public 'is_constructible<_Tp, typename add_rvalue_reference<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fe8b210e160 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fe8b210e448 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3275:1, col:29> col:29 implicit struct is_move_constructible
| |   |-ClassTemplateDecl 0x7fe8b210e6c0 <line:3294:1, line:3298:1> line:3295:29 is_trivially_constructible
| |   | |-TemplateTypeParmDecl 0x7fe8b210e500 <line:3294:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fe8b210e568 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | `-CXXRecordDecl 0x7fe8b210e628 <line:3295:1, line:3298:1> line:3295:29 struct is_trivially_constructible definition
| |   |   |-public 'integral_constant<_Bool, __is_trivially_constructible(_Tp, _Args...)>'
| |   |   |-TypeVisibilityAttr 0x7fe8b210e9c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fe8b2016800 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3295:1, col:29> col:29 implicit struct is_trivially_constructible
| |   |-ClassTemplateDecl 0x7fe8b2016a08 <line:3422:1, line:3424:6> line:3422:50 is_trivially_default_constructible
| |   | |-TemplateTypeParmDecl 0x7fe8b20168b8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b2016970 <col:22, line:3424:6> line:3422:50 struct is_trivially_default_constructible definition
| |   |   |-public 'is_trivially_constructible<_Tp>'
| |   |   |-TypeVisibilityAttr 0x7fe8b2016c80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fe8b2016de8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3422:22, col:50> col:50 implicit struct is_trivially_default_constructible
| |   |-ClassTemplateDecl 0x7fe8b2016fe8 <line:3433:1, line:3435:6> line:3433:50 is_trivially_copy_constructible
| |   | |-TemplateTypeParmDecl 0x7fe8b2016ea0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b2016f50 <col:22, line:3435:6> line:3433:50 struct is_trivially_copy_constructible definition
| |   |   |-public 'is_trivially_constructible<_Tp, typename add_lvalue_reference<const _Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fe8b2017260 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fe8b20175d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3433:22, col:50> col:50 implicit struct is_trivially_copy_constructible
| |   |-ClassTemplateDecl 0x7fe8b20177d8 <line:3444:1, line:3450:6> line:3444:50 is_trivially_move_constructible
| |   | |-TemplateTypeParmDecl 0x7fe8b2017690 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b2017740 <col:22, line:3450:6> line:3444:50 struct is_trivially_move_constructible definition
| |   |   |-public 'is_trivially_constructible<_Tp, typename add_rvalue_reference<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fe8b2017a50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fe8b2017d38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3444:22, col:50> col:50 implicit struct is_trivially_move_constructible
| |   |-ClassTemplateDecl 0x7fe8b2017f80 <line:3461:1, line:3465:1> line:3462:8 is_trivially_assignable
| |   | |-TemplateTypeParmDecl 0x7fe8b2017df0 <line:3461:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fe8b2017e58 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | `-CXXRecordDecl 0x7fe8b2017ee8 <line:3462:1, line:3465:1> line:3462:8 struct is_trivially_assignable definition
| |   |   |-public 'integral_constant<_Bool, __is_trivially_assignable(_Tp, _Arg)>'
| |   |   `-CXXRecordDecl 0x7fe8b20183d8 <col:1, col:8> col:8 implicit struct is_trivially_assignable
| |   |-ClassTemplateDecl 0x7fe8b20185d8 <line:3502:1, line:3504:88> line:3502:50 is_trivially_copy_assignable
| |   | |-TemplateTypeParmDecl 0x7fe8b2018490 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b2018540 <col:22, line:3504:88> line:3502:50 struct is_trivially_copy_assignable definition
| |   |   |-public 'is_trivially_assignable<typename add_lvalue_reference<_Tp>::type, typename add_lvalue_reference<typename add_const<_Tp>::type>::type>'
| |   |   |-TypeVisibilityAttr 0x7fe8b2114e68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fe8b2115338 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3502:22, col:50> col:50 implicit struct is_trivially_copy_assignable
| |   |-ClassTemplateDecl 0x7fe8b2115538 <line:3513:1, line:3520:6> line:3513:50 is_trivially_move_assignable
| |   | |-TemplateTypeParmDecl 0x7fe8b21153f0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b21154a0 <col:22, line:3520:6> line:3513:50 struct is_trivially_move_assignable definition
| |   |   |-public 'is_trivially_assignable<typename add_lvalue_reference<_Tp>::type, typename add_rvalue_reference<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fe8b21157b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fe8b2115b78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3513:22, col:50> col:50 implicit struct is_trivially_move_assignable
| |   |-ClassTemplateDecl 0x7fe8b2115d78 <line:3531:1, line:3532:101> line:3531:50 is_trivially_destructible
| |   | |-TemplateTypeParmDecl 0x7fe8b2115c30 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b2115ce0 <col:22, line:3532:101> line:3531:50 struct is_trivially_destructible definition
| |   |   |-public 'integral_constant<_Bool, is_destructible<_Tp>::value && __has_trivial_destructor(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fe8b2115ff0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fe8b2116338 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3531:22, col:50> col:50 implicit struct is_trivially_destructible
| |   |-ClassTemplateDecl 0x7fe8b2116660 <line:3568:1, col:57> col:57 __libcpp_is_nothrow_constructible
| |   | |-NonTypeTemplateParmDecl 0x7fe8b2116400 <col:11> col:15 '_Bool' depth 0 index 0
| |   | |-NonTypeTemplateParmDecl 0x7fe8b2116468 <col:17> col:21 '_Bool' depth 0 index 1
| |   | |-TemplateTypeParmDecl 0x7fe8b21164c0 <col:23, col:29> col:29 class depth 0 index 2 _Tp
| |   | |-TemplateTypeParmDecl 0x7fe8b2116528 <col:34, col:43> col:43 class depth 0 index 3 ... _Args
| |   | `-CXXRecordDecl 0x7fe8b21165c8 <col:50, col:57> col:57 struct __libcpp_is_nothrow_constructible
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b2116e00 <line:3570:1, line:3574:1> line:3571:8 struct __libcpp_is_nothrow_constructible definition
| |   | |-public 'integral_constant<_Bool, noexcept(_Tp(declval<_Args>()...))>'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-1...'
| |   | |-TemplateTypeParmDecl 0x7fe8b21169a8 <line:3570:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fe8b2116a18 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | `-CXXRecordDecl 0x7fe8b2117448 <line:3571:1, col:8> col:8 implicit struct __libcpp_is_nothrow_constructible
| |   |-FunctionTemplateDecl 0x7fe8b2117730 <line:3576:1, line:3577:47> col:6 __implicit_conversion_to
| |   | |-TemplateTypeParmDecl 0x7fe8b2117500 <line:3576:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fe8b2117698 <line:3577:1, col:47> col:6 __implicit_conversion_to 'void (_Tp) noexcept'
| |   |   |-ParmVarDecl 0x7fe8b2117590 <col:31> col:34 '_Tp'
| |   |   `-CompoundStmt 0x7fe8b2117788 <col:45, col:47>
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b2117b10 <line:3579:1, line:3583:1> line:3580:8 struct __libcpp_is_nothrow_constructible definition
| |   | |-public 'integral_constant<_Bool, noexcept(__implicit_conversion_to<_Tp>(declval<_Arg>()))>'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateTypeParmDecl 0x7fe8b21177a0 <line:3579:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fe8b2117808 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | `-CXXRecordDecl 0x7fe8b21181c8 <line:3580:1, col:8> col:8 implicit struct __libcpp_is_nothrow_constructible
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b21186a0 <line:3585:1, line:3589:1> line:3586:8 struct __libcpp_is_nothrow_constructible definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fe8b21183f8 <col:69> '_Bool' NonTypeTemplateParm 0x7fe8b21182f8 '_IsReference' '_Bool'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-2...'
| |   | |-TemplateTypeParmDecl 0x7fe8b2118280 <line:3585:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fe8b21182f8 <col:22, col:27> col:27 referenced '_Bool' depth 0 index 1 _IsReference
| |   | |-TemplateTypeParmDecl 0x7fe8b2118350 <col:41, col:50> col:50 referenced class depth 0 index 2 ... _Args
| |   | `-CXXRecordDecl 0x7fe8b2118a40 <line:3586:1, col:8> col:8 implicit struct __libcpp_is_nothrow_constructible
| |   |-ClassTemplateDecl 0x7fe8b2118cc0 <line:3591:1, line:3595:1> line:3592:29 is_nothrow_constructible
| |   | |-TemplateTypeParmDecl 0x7fe8b2118af8 <line:3591:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fe8b2118b68 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | `-CXXRecordDecl 0x7fe8b2118c28 <line:3592:1, line:3595:1> line:3592:29 struct is_nothrow_constructible definition
| |   |   |-public '__libcpp_is_nothrow_constructible<is_constructible<_Tp, _Args...>::value, is_reference<_Tp>::value, _Tp, _Args...>'
| |   |   |-TypeVisibilityAttr 0x7fe8b21190b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fe8b2119608 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3592:1, col:29> col:29 implicit struct is_nothrow_constructible
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b2119970 <line:3597:1, line:3601:1> line:3598:29 struct is_nothrow_constructible definition
| |   | |-public '__libcpp_is_nothrow_constructible<is_constructible<_Tp>::value, is_reference<_Tp>::value, _Tp>'
| |   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
| |   | |-TemplateArgument pack
| |   | |-TemplateTypeParmDecl 0x7fe8b21196c0 <line:3597:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fe8b2119738 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Ns
| |   | |-TypeVisibilityAttr 0x7fe8b2119ad8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fe8b211a018 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3598:1, col:29> col:29 implicit struct is_nothrow_constructible
| |   |-ClassTemplateDecl 0x7fe8b211a218 <line:3720:1, line:3722:6> line:3720:50 is_nothrow_default_constructible
| |   | |-TemplateTypeParmDecl 0x7fe8b211a0d0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b211a180 <col:22, line:3722:6> line:3720:50 struct is_nothrow_default_constructible definition
| |   |   |-public 'is_nothrow_constructible<_Tp>'
| |   |   |-TypeVisibilityAttr 0x7fe8b211a490 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fe8b211a5f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3720:22, col:50> col:50 implicit struct is_nothrow_default_constructible
| |   |-ClassTemplateDecl 0x7fe8b211a7f8 <line:3731:1, line:3733:88> line:3731:50 is_nothrow_copy_constructible
| |   | |-TemplateTypeParmDecl 0x7fe8b211a6b0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b211a760 <col:22, line:3733:88> line:3731:50 struct is_nothrow_copy_constructible definition
| |   |   |-public 'is_nothrow_constructible<_Tp, typename add_lvalue_reference<typename add_const<_Tp>::type>::type>'
| |   |   |-TypeVisibilityAttr 0x7fe8b211aa70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fe8b211ce78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3731:22, col:50> col:50 implicit struct is_nothrow_copy_constructible
| |   |-ClassTemplateDecl 0x7fe8b211d078 <line:3742:1, line:3748:6> line:3742:50 is_nothrow_move_constructible
| |   | |-TemplateTypeParmDecl 0x7fe8b211cf30 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b211cfe0 <col:22, line:3748:6> line:3742:50 struct is_nothrow_move_constructible definition
| |   |   |-public 'is_nothrow_constructible<_Tp, typename add_rvalue_reference<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fe8b211d2f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fe8b211d5d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3742:22, col:50> col:50 implicit struct is_nothrow_move_constructible
| |   |-ClassTemplateDecl 0x7fe8b211d898 <line:3759:1, col:47> col:47 __libcpp_is_nothrow_assignable
| |   | |-NonTypeTemplateParmDecl 0x7fe8b211d6a0 <col:11> col:15 '_Bool' depth 0 index 0
| |   | |-TemplateTypeParmDecl 0x7fe8b211d6f8 <col:17, col:23> col:23 class depth 0 index 1 _Tp
| |   | |-TemplateTypeParmDecl 0x7fe8b211d768 <col:28, col:34> col:34 class depth 0 index 2 _Arg
| |   | `-CXXRecordDecl 0x7fe8b211d800 <col:40, col:47> col:47 struct __libcpp_is_nothrow_assignable
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b211de08 <line:3761:1, line:3765:1> line:3762:8 struct __libcpp_is_nothrow_assignable definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateTypeParmDecl 0x7fe8b211db38 <line:3761:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fe8b211dba8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | `-CXXRecordDecl 0x7fe8b211e130 <line:3762:1, col:8> col:8 implicit struct __libcpp_is_nothrow_assignable
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b211e4b8 <line:3767:1, line:3771:1> line:3768:8 struct __libcpp_is_nothrow_assignable definition
| |   | |-public 'integral_constant<_Bool, noexcept(std::__1::declval<_Tp>() = std::__1::declval<_Arg>())>'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateTypeParmDecl 0x7fe8b211e1e8 <line:3767:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fe8b211e258 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | `-CXXRecordDecl 0x7fe8b211eb58 <line:3768:1, col:8> col:8 implicit struct __libcpp_is_nothrow_assignable
| |   |-ClassTemplateDecl 0x7fe8b2120e00 <line:3773:1, line:3777:1> line:3774:29 is_nothrow_assignable
| |   | |-TemplateTypeParmDecl 0x7fe8b211ec10 <line:3773:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x7fe8b211ec78 <col:22, col:28> col:28 referenced class depth 0 index 1 _Arg
| |   | `-CXXRecordDecl 0x7fe8b211ed38 <line:3774:1, line:3777:1> line:3774:29 struct is_nothrow_assignable definition
| |   |   |-public '__libcpp_is_nothrow_assignable<is_assignable<_Tp, _Arg>::value, _Tp, _Arg>'
| |   |   |-TypeVisibilityAttr 0x7fe8b21210a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fe8b2121418 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3774:1, col:29> col:29 implicit struct is_nothrow_assignable
| |   |-ClassTemplateDecl 0x7fe8b2121618 <line:3830:1, line:3832:88> line:3830:50 is_nothrow_copy_assignable
| |   | |-TemplateTypeParmDecl 0x7fe8b21214d0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b2121580 <col:22, line:3832:88> line:3830:50 struct is_nothrow_copy_assignable definition
| |   |   |-public 'is_nothrow_assignable<typename add_lvalue_reference<_Tp>::type, typename add_lvalue_reference<typename add_const<_Tp>::type>::type>'
| |   |   |-TypeVisibilityAttr 0x7fe8b2121890 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fe8b2121d68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3830:22, col:50> col:50 implicit struct is_nothrow_copy_assignable
| |   |-ClassTemplateDecl 0x7fe8b2121f68 <line:3841:1, line:3848:6> line:3841:50 is_nothrow_move_assignable
| |   | |-TemplateTypeParmDecl 0x7fe8b2121e20 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b2121ed0 <col:22, line:3848:6> line:3841:50 struct is_nothrow_move_assignable definition
| |   |   |-public 'is_nothrow_assignable<typename add_lvalue_reference<_Tp>::type, typename add_rvalue_reference<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fe8b21221e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fe8b21225a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3841:22, col:50> col:50 implicit struct is_nothrow_move_assignable
| |   |-ClassTemplateDecl 0x7fe8b21227f0 <line:3859:1, col:35> col:35 __libcpp_is_nothrow_destructible
| |   | |-NonTypeTemplateParmDecl 0x7fe8b2122670 <col:11> col:15 '_Bool' depth 0 index 0
| |   | |-TemplateTypeParmDecl 0x7fe8b21226c8 <col:17, col:23> col:23 class depth 0 index 1 _Tp
| |   | `-CXXRecordDecl 0x7fe8b2122758 <col:28, col:35> col:35 struct __libcpp_is_nothrow_destructible
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b2122c30 <line:3861:1, line:3865:1> line:3862:8 struct __libcpp_is_nothrow_destructible definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fe8b2122a48 <line:3861:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b2122f00 <line:3862:1, col:8> col:8 implicit struct __libcpp_is_nothrow_destructible
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b21231a0 <line:3867:1, line:3871:1> line:3868:8 struct __libcpp_is_nothrow_destructible definition
| |   | |-public 'integral_constant<_Bool, noexcept(std::__1::declval<_Tp>().~_Tp())>'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fe8b2122fb8 <line:3867:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b2123748 <line:3868:1, col:8> col:8 implicit struct __libcpp_is_nothrow_destructible
| |   |-ClassTemplateDecl 0x7fe8b2123948 <line:3873:1, line:3877:1> line:3874:29 is_nothrow_destructible
| |   | |-TemplateTypeParmDecl 0x7fe8b2123800 <line:3873:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b21238b0 <line:3874:1, line:3877:1> line:3874:29 struct is_nothrow_destructible definition
| |   |   |-public '__libcpp_is_nothrow_destructible<is_destructible<_Tp>::value, _Tp>'
| |   |   |-TypeVisibilityAttr 0x7fe8b2123bc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fe8b2123e78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3874:1, col:29> col:29 implicit struct is_nothrow_destructible
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b21241b8 <line:3879:1, line:3883:1> line:3880:29 struct is_nothrow_destructible definition
| |   | |-public 'is_nothrow_destructible<_Tp>'
| |   | |-TemplateArgument type 'type-parameter-0-0 [_Np]'
| |   | |-TemplateTypeParmDecl 0x7fe8b2123f30 <line:3879:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fe8b2123fa8 <col:22, col:29> col:29 referenced 'size_t':'unsigned long' depth 0 index 1 _Ns
| |   | |-TypeVisibilityAttr 0x7fe8b2124308 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fe8b21244f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3880:1, col:29> col:29 implicit struct is_nothrow_destructible
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b2124778 <line:3885:1, line:3889:1> line:3886:29 struct is_nothrow_destructible definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateTypeParmDecl 0x7fe8b21245b0 <line:3885:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fe8b21248b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fe8b2124a30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3886:1, col:29> col:29 implicit struct is_nothrow_destructible
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b2124cb8 <line:3893:1, line:3897:1> line:3894:29 struct is_nothrow_destructible definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'type-parameter-0-0 &&'
| |   | |-TemplateTypeParmDecl 0x7fe8b2124ae8 <line:3893:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fe8b2124e00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fe8b2124f80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3894:1, col:29> col:29 implicit struct is_nothrow_destructible
| |   |-ClassTemplateDecl 0x7fe8b2125188 <line:3925:1, line:3926:54> line:3925:50 is_pod
| |   | |-TemplateTypeParmDecl 0x7fe8b2125038 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b21250f0 <col:22, line:3926:54> line:3925:50 struct is_pod definition
| |   |   |-public 'integral_constant<_Bool, __is_pod(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fe8b2125400 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fe8b21255e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3925:22, col:50> col:50 implicit struct is_pod
| |   |-ClassTemplateDecl 0x7fe8b21257e8 <line:3945:1, line:3952:6> line:3945:50 is_literal_type
| |   | |-TemplateTypeParmDecl 0x7fe8b21256a0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b2125750 <col:22, line:3952:6> line:3945:50 struct is_literal_type definition
| |   |   |-public 'integral_constant<_Bool, __is_literal(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fe8b2125a60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fe8b2125c48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3945:22, col:50> col:50 implicit struct is_literal_type
| |   |-ClassTemplateDecl 0x7fe8b2125e48 <line:3961:1, line:3967:6> line:3961:50 is_standard_layout
| |   | |-TemplateTypeParmDecl 0x7fe8b2125d00 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b2125db0 <col:22, line:3967:6> line:3961:50 struct is_standard_layout definition
| |   |   |-public 'integral_constant<_Bool, __is_standard_layout(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fe8b21260c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fe8b21262a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3961:22, col:50> col:50 implicit struct is_standard_layout
| |   |-ClassTemplateDecl 0x7fe8b21264a8 <line:3976:1, line:3984:6> line:3976:50 is_trivially_copyable
| |   | |-TemplateTypeParmDecl 0x7fe8b2126360 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b2126410 <col:22, line:3984:6> line:3976:50 struct is_trivially_copyable definition
| |   |   |-public 'integral_constant<_Bool, __is_trivially_copyable(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fe8b2126720 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fe8b2126908 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3976:22, col:50> col:50 implicit struct is_trivially_copyable
| |   |-ClassTemplateDecl 0x7fe8b2126b08 <line:3993:1, line:4000:6> line:3993:50 is_trivial
| |   | |-TemplateTypeParmDecl 0x7fe8b21269c0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b2126a70 <col:22, line:4000:6> line:3993:50 struct is_trivial definition
| |   |   |-public 'integral_constant<_Bool, __is_trivial(_Tp)>'
| |   |   |-TypeVisibilityAttr 0x7fe8b2126d80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   `-CXXRecordDecl 0x7fe8b2127f78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:3993:22, col:50> col:50 implicit struct is_trivial
| |   |-ClassTemplateDecl 0x7fe8b2128148 <line:4007:1, col:78> col:29 __is_reference_wrapper_impl
| |   | |-TemplateTypeParmDecl 0x7fe8b2128030 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b21280b0 <col:22, col:78> col:29 struct __is_reference_wrapper_impl definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   `-CXXRecordDecl 0x7fe8b2128400 <col:22, col:29> col:29 implicit struct __is_reference_wrapper_impl
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b21286d8 <line:4008:1, col:102> col:29 struct __is_reference_wrapper_impl definition
| |   | |-public 'std::__1::true_type':'struct std::__1::integral_constant<_Bool, true>'
| |   | |-TemplateArgument type 'reference_wrapper<type-parameter-0-0>'
| |   | |-TemplateTypeParmDecl 0x7fe8b21284b8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b2128980 <col:22, col:29> col:29 implicit struct __is_reference_wrapper_impl
| |   |-ClassTemplateDecl 0x7fe8b2128b58 <line:4009:1, line:4010:74> line:4009:29 __is_reference_wrapper
| |   | |-TemplateTypeParmDecl 0x7fe8b2128a38 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b2128ac0 <col:22, line:4010:74> line:4009:29 struct __is_reference_wrapper definition
| |   |   |-public '__is_reference_wrapper_impl<typename remove_cv<_Tp>::type>'
| |   |   `-CXXRecordDecl 0x7fe8b2128fe8 <col:22, col:29> col:29 implicit struct __is_reference_wrapper
| |   |-ClassTemplateDecl 0x7fe8b21291b8 <line:4016:1, col:32> col:32 __check_complete
| |   | |-TemplateTypeParmDecl 0x7fe8b21290a0 <col:11, col:20> col:20 class depth 0 index 0 ... _Tp
| |   | |-CXXRecordDecl 0x7fe8b2129120 <col:25, col:32> col:32 struct __check_complete
| |   | `-ClassTemplateSpecialization 0x7fe8b2129438 '__check_complete'
| |   |-ClassTemplateSpecializationDecl 0x7fe8b2129438 <line:4018:1, line:4021:1> line:4019:8 struct __check_complete definition
| |   | |-TemplateArgument pack
| |   | `-CXXRecordDecl 0x7fe8b2129630 <col:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b2129a98 <line:4023:1, line:4028:1> line:4024:8 struct __check_complete definition
| |   | |-private '__check_complete<_Hp>'
| |   | |-private '__check_complete<_T0, _Tp...>'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | |-TemplateArgument type 'type-parameter-0-1'
| |   | | `-TemplateArgument type 'type-parameter-0-2...'
| |   | |-TemplateTypeParmDecl 0x7fe8b21296e8 <line:4023:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | |-TemplateTypeParmDecl 0x7fe8b2129758 <col:22, col:28> col:28 referenced class depth 0 index 1 _T0
| |   | |-TemplateTypeParmDecl 0x7fe8b21297c8 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Tp
| |   | `-CXXRecordDecl 0x7fe8b212a0e0 <line:4024:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b212a3a8 <line:4030:1, line:4034:1> line:4031:8 struct __check_complete definition
| |   | |-private '__check_complete<_Hp>'
| |   | |-TemplateArgument pack
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | `-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fe8b212a198 <line:4030:11, col:17> col:17 referenced class depth 0 index 0 _Hp
| |   | `-CXXRecordDecl 0x7fe8b212a768 <line:4031:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b212a968 <line:4036:1, line:4040:1> line:4037:8 struct __check_complete definition
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fe8b212a820 <line:4036:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fe8b212abd0 <line:4037:1, col:8> col:8 implicit struct __check_complete
| |   | `-StaticAssertDecl 0x7fe8b212adb8 <line:4039:5, col:60> col:5
| |   |   |-BinaryOperator 0x7fe8b212acd0 <col:19, col:33> '_Bool' '>'
| |   |   | |-UnaryExprOrTypeTraitExpr 0x7fe8b212ac78 <col:19, col:29> 'unsigned long' sizeof '_Tp'
| |   |   | `-ImplicitCastExpr 0x7fe8b212acb8 <col:33> 'unsigned long' <IntegralCast>
| |   |   |   `-IntegerLiteral 0x7fe8b212ac98 <col:33> 'int' 0
| |   |   `-StringLiteral 0x7fe8b212ad78 <col:36> 'const char [23]' lvalue "Type must be complete."
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b212afd8 <line:4042:1, line:4046:1> line:4043:8 struct __check_complete definition
| |   | |-private '__check_complete<_Tp>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 &'
| |   | |-TemplateTypeParmDecl 0x7fe8b212ae10 <line:4042:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b212b328 <line:4043:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b212b5a8 <line:4048:1, line:4052:1> line:4049:8 struct __check_complete definition
| |   | |-private '__check_complete<_Tp>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 &&'
| |   | |-TemplateTypeParmDecl 0x7fe8b212b3e0 <line:4048:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b212b8f8 <line:4049:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b212be00 <line:4054:1, line:4058:1> line:4055:8 struct __check_complete definition
| |   | |-private '__check_complete<_Rp>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (*)(type-parameter-0-1...)'
| |   | |-TemplateTypeParmDecl 0x7fe8b212b9b0 <line:4054:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fe8b212ba18 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Param
| |   | `-CXXRecordDecl 0x7fe8b212c168 <line:4055:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b212c588 <line:4060:1, line:4063:1> line:4061:8 struct __check_complete definition
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'void (*)(type-parameter-0-0...)'
| |   | |-TemplateTypeParmDecl 0x7fe8b212c220 <line:4060:11, col:20> col:20 referenced class depth 0 index 0 ... _Param
| |   | `-CXXRecordDecl 0x7fe8b212c810 <line:4061:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b212cbd8 <line:4065:1, line:4069:1> line:4066:8 struct __check_complete definition
| |   | |-private '__check_complete<_Rp>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1...)'
| |   | |-TemplateTypeParmDecl 0x7fe8b212c8c8 <line:4065:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fe8b212c938 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Param
| |   | `-CXXRecordDecl 0x7fe8b212cf38 <line:4066:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b212d278 <line:4071:1, line:4074:1> line:4072:8 struct __check_complete definition
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'void (type-parameter-0-0...)'
| |   | |-TemplateTypeParmDecl 0x7fe8b212cff0 <line:4071:11, col:20> col:20 referenced class depth 0 index 0 ... _Param
| |   | `-CXXRecordDecl 0x7fe8b212d4f0 <line:4072:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b212d9f8 <line:4076:1, line:4080:1> line:4077:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...)'
| |   | |-TemplateTypeParmDecl 0x7fe8b212d5a8 <line:4076:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fe8b212d618 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fe8b212d688 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fe8b212de00 <line:4077:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b212e308 <line:4082:1, line:4086:1> line:4083:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const'
| |   | |-TemplateTypeParmDecl 0x7fe8b212deb8 <line:4082:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fe8b212df28 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fe8b212df98 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fe8b212e678 <line:4083:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b212eb78 <line:4088:1, line:4092:1> line:4089:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) volatile'
| |   | |-TemplateTypeParmDecl 0x7fe8b212e730 <line:4088:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fe8b212e798 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fe8b212e808 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fe8b212eee8 <line:4089:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b212f3e8 <line:4094:1, line:4098:1> line:4095:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const volatile'
| |   | |-TemplateTypeParmDecl 0x7fe8b212efa0 <line:4094:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fe8b212f008 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fe8b212f078 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fe8b212f758 <line:4095:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b212fc58 <line:4100:1, line:4104:1> line:4101:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) &'
| |   | |-TemplateTypeParmDecl 0x7fe8b212f810 <line:4100:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fe8b212f878 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fe8b212f8e8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fe8b212ffd8 <line:4101:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b21304d8 <line:4106:1, line:4110:1> line:4107:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const &'
| |   | |-TemplateTypeParmDecl 0x7fe8b2130090 <line:4106:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fe8b21300f8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fe8b2130168 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fe8b2130848 <line:4107:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b2130d48 <line:4112:1, line:4116:1> line:4113:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) volatile &'
| |   | |-TemplateTypeParmDecl 0x7fe8b2130900 <line:4112:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fe8b2130968 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fe8b21309d8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fe8b21310b8 <line:4113:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b21315b8 <line:4118:1, line:4122:1> line:4119:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const volatile &'
| |   | |-TemplateTypeParmDecl 0x7fe8b2131170 <line:4118:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fe8b21311d8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fe8b2131248 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fe8b2131928 <line:4119:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b2131e40 <line:4124:1, line:4128:1> line:4125:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) &&'
| |   | |-TemplateTypeParmDecl 0x7fe8b21319e0 <line:4124:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fe8b2131a48 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fe8b2131ab8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fe8b21321a8 <line:4125:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b21326a8 <line:4130:1, line:4134:1> line:4131:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const &&'
| |   | |-TemplateTypeParmDecl 0x7fe8b2132260 <line:4130:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fe8b21322c8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fe8b2132338 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fe8b2132a18 <line:4131:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b2132f18 <line:4136:1, line:4140:1> line:4137:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) volatile &&'
| |   | |-TemplateTypeParmDecl 0x7fe8b2132ad0 <line:4136:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fe8b2132b38 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fe8b2132ba8 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fe8b2133288 <line:4137:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b2133788 <line:4142:1, line:4146:1> line:4143:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2...) const volatile &&'
| |   | |-TemplateTypeParmDecl 0x7fe8b2133340 <line:4142:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fe8b21333a8 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | |-TemplateTypeParmDecl 0x7fe8b2133418 <col:36, col:45> col:45 referenced class depth 0 index 2 ... _Param
| |   | `-CXXRecordDecl 0x7fe8b2133af8 <line:4143:1, col:8> col:8 implicit struct __check_complete
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b2133e88 <line:4148:1, line:4152:1> line:4149:8 struct __check_complete definition
| |   | |-private '__check_complete<_Class>'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-0 type-parameter-0-1::*'
| |   | |-TemplateTypeParmDecl 0x7fe8b2133bb0 <line:4148:11, col:17> col:17 referenced class depth 0 index 0 _Rp
| |   | |-TemplateTypeParmDecl 0x7fe8b2133c18 <col:22, col:28> col:28 referenced class depth 0 index 1 _Class
| |   | `-CXXRecordDecl 0x7fe8b21341e8 <line:4149:1, col:8> col:8 implicit struct __check_complete
| |   |-TypeAliasTemplateDecl 0x7fe8b2134ea0 <line:4155:1, line:4163:8> line:4159:1 __enable_if_bullet1
| |   | |-TemplateTypeParmDecl 0x7fe8b21342a0 <line:4155:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fe8b2134308 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fe8b21344a0 <line:4156:10, col:48> col:16 referenced class depth 0 index 2 _DecayFp
| |   | | `-TemplateArgument type 'typename decay<_Fp>::type'
| |   | |-TemplateTypeParmDecl 0x7fe8b2134630 <line:4157:10, col:48> col:16 referenced class depth 0 index 3 _DecayA0
| |   | | `-TemplateArgument type 'typename decay<_A0>::type'
| |   | |-TemplateTypeParmDecl 0x7fe8b2134850 <line:4158:10, col:74> col:16 referenced class depth 0 index 4 _ClassT
| |   | | `-TemplateArgument type 'typename __member_pointer_class_type<_DecayFp>::type'
| |   | `-TypeAliasDecl 0x7fe8b2134e40 <line:4159:1, line:4163:8> line:4159:7 __enable_if_bullet1 'typename enable_if<is_member_function_pointer<_DecayFp>::value && is_base_of<_ClassT, _DecayA0>::value>::type'
| |   |   `-DependentNameType 0x7fe8b2134dd0 'typename enable_if<is_member_function_pointer<_DecayFp>::value && is_base_of<_ClassT, _DecayA0>::value>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fe8b21357f0 <line:4165:1, line:4172:8> line:4168:1 __enable_if_bullet2
| |   | |-TemplateTypeParmDecl 0x7fe8b2134ef0 <line:4165:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fe8b2134f58 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fe8b21350f0 <line:4166:10, col:48> col:16 referenced class depth 0 index 2 _DecayFp
| |   | | `-TemplateArgument type 'typename decay<_Fp>::type'
| |   | |-TemplateTypeParmDecl 0x7fe8b2135280 <line:4167:10, col:48> col:16 referenced class depth 0 index 3 _DecayA0
| |   | | `-TemplateArgument type 'typename decay<_A0>::type'
| |   | `-TypeAliasDecl 0x7fe8b2135790 <line:4168:1, line:4172:8> line:4168:7 __enable_if_bullet2 'typename enable_if<is_member_function_pointer<_DecayFp>::value && __is_reference_wrapper<_DecayA0>::value>::type'
| |   |   `-DependentNameType 0x7fe8b2135720 'typename enable_if<is_member_function_pointer<_DecayFp>::value && __is_reference_wrapper<_DecayA0>::value>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fe8b2137610 <line:4174:1, line:4183:8> line:4178:1 __enable_if_bullet3
| |   | |-TemplateTypeParmDecl 0x7fe8b2135840 <line:4174:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fe8b21358a8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fe8b2135a40 <line:4175:10, col:48> col:16 referenced class depth 0 index 2 _DecayFp
| |   | | `-TemplateArgument type 'typename decay<_Fp>::type'
| |   | |-TemplateTypeParmDecl 0x7fe8b2135bd0 <line:4176:10, col:48> col:16 referenced class depth 0 index 3 _DecayA0
| |   | | `-TemplateArgument type 'typename decay<_A0>::type'
| |   | |-TemplateTypeParmDecl 0x7fe8b2135d60 <line:4177:10, col:74> col:16 referenced class depth 0 index 4 _ClassT
| |   | | `-TemplateArgument type 'typename __member_pointer_class_type<_DecayFp>::type'
| |   | `-TypeAliasDecl 0x7fe8b21375b0 <line:4178:1, line:4183:8> line:4178:7 __enable_if_bullet3 'typename enable_if<is_member_function_pointer<_DecayFp>::value && !is_base_of<_ClassT, _DecayA0>::value && !__is_reference_wrapper<_DecayA0>::value>::type'
| |   |   `-DependentNameType 0x7fe8b2137540 'typename enable_if<is_member_function_pointer<_DecayFp>::value && !is_base_of<_ClassT, _DecayA0>::value && !__is_reference_wrapper<_DecayA0>::value>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fe8b2138130 <line:4185:1, line:4193:8> line:4189:1 __enable_if_bullet4
| |   | |-TemplateTypeParmDecl 0x7fe8b2137660 <line:4185:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fe8b21376c8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fe8b2137860 <line:4186:10, col:48> col:16 referenced class depth 0 index 2 _DecayFp
| |   | | `-TemplateArgument type 'typename decay<_Fp>::type'
| |   | |-TemplateTypeParmDecl 0x7fe8b21379f0 <line:4187:10, col:48> col:16 referenced class depth 0 index 3 _DecayA0
| |   | | `-TemplateArgument type 'typename decay<_A0>::type'
| |   | |-TemplateTypeParmDecl 0x7fe8b2137b80 <line:4188:10, col:74> col:16 referenced class depth 0 index 4 _ClassT
| |   | | `-TemplateArgument type 'typename __member_pointer_class_type<_DecayFp>::type'
| |   | `-TypeAliasDecl 0x7fe8b21380d0 <line:4189:1, line:4193:8> line:4189:7 __enable_if_bullet4 'typename enable_if<is_member_object_pointer<_DecayFp>::value && is_base_of<_ClassT, _DecayA0>::value>::type'
| |   |   `-DependentNameType 0x7fe8b2138060 'typename enable_if<is_member_object_pointer<_DecayFp>::value && is_base_of<_ClassT, _DecayA0>::value>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fe8b2138a10 <line:4195:1, line:4202:8> line:4198:1 __enable_if_bullet5
| |   | |-TemplateTypeParmDecl 0x7fe8b2138180 <line:4195:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fe8b21381e8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fe8b2138380 <line:4196:10, col:48> col:16 referenced class depth 0 index 2 _DecayFp
| |   | | `-TemplateArgument type 'typename decay<_Fp>::type'
| |   | |-TemplateTypeParmDecl 0x7fe8b2138510 <line:4197:10, col:48> col:16 referenced class depth 0 index 3 _DecayA0
| |   | | `-TemplateArgument type 'typename decay<_A0>::type'
| |   | `-TypeAliasDecl 0x7fe8b21389b0 <line:4198:1, line:4202:8> line:4198:7 __enable_if_bullet5 'typename enable_if<is_member_object_pointer<_DecayFp>::value && __is_reference_wrapper<_DecayA0>::value>::type'
| |   |   `-DependentNameType 0x7fe8b2138940 'typename enable_if<is_member_object_pointer<_DecayFp>::value && __is_reference_wrapper<_DecayA0>::value>::type' dependent
| |   |-TypeAliasTemplateDecl 0x7fe8b213a650 <line:4204:1, line:4213:8> line:4208:1 __enable_if_bullet6
| |   | |-TemplateTypeParmDecl 0x7fe8b2138a60 <line:4204:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fe8b2138ac8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fe8b2138c60 <line:4205:10, col:48> col:16 referenced class depth 0 index 2 _DecayFp
| |   | | `-TemplateArgument type 'typename decay<_Fp>::type'
| |   | |-TemplateTypeParmDecl 0x7fe8b2138df0 <line:4206:10, col:48> col:16 referenced class depth 0 index 3 _DecayA0
| |   | | `-TemplateArgument type 'typename decay<_A0>::type'
| |   | |-TemplateTypeParmDecl 0x7fe8b2138f80 <line:4207:10, col:74> col:16 referenced class depth 0 index 4 _ClassT
| |   | | `-TemplateArgument type 'typename __member_pointer_class_type<_DecayFp>::type'
| |   | `-TypeAliasDecl 0x7fe8b213a5f0 <line:4208:1, line:4213:8> line:4208:7 __enable_if_bullet6 'typename enable_if<is_member_object_pointer<_DecayFp>::value && !is_base_of<_ClassT, _DecayA0>::value && !__is_reference_wrapper<_DecayA0>::value>::type'
| |   |   `-DependentNameType 0x7fe8b213a580 'typename enable_if<is_member_object_pointer<_DecayFp>::value && !is_base_of<_ClassT, _DecayA0>::value && !__is_reference_wrapper<_DecayA0>::value>::type' dependent
| |   |-FunctionTemplateDecl 0x7fe8b213aa48 <line:4223:1, line:4224:44> col:6 __invoke
| |   | |-TemplateTypeParmDecl 0x7fe8b213a6a0 <line:4223:11, col:20> col:20 referenced class depth 0 index 0 ... _Args
| |   | `-FunctionDecl 0x7fe8b213a9b0 <line:4224:1, col:44> col:6 __invoke 'auto (struct std::__1::__any, _Args &&...) -> struct std::__1::__nat'
| |   |   |-ParmVarDecl 0x7fe8b213a730 <col:15> col:20 'struct std::__1::__any'
| |   |   `-ParmVarDecl 0x7fe8b213a868 <col:22, col:33> col:33 __args '_Args &&...'
| |   |-FunctionTemplateDecl 0x7fe8b213ad98 <line:4226:1, line:4227:54> col:6 __invoke_constexpr
| |   | |-TemplateTypeParmDecl 0x7fe8b213aaa8 <line:4226:11, col:20> col:20 referenced class depth 0 index 0 ... _Args
| |   | `-FunctionDecl 0x7fe8b213ad00 <line:4227:1, col:54> col:6 __invoke_constexpr 'auto (struct std::__1::__any, _Args &&...) -> struct std::__1::__nat'
| |   |   |-ParmVarDecl 0x7fe8b213ab40 <col:25> col:30 'struct std::__1::__any'
| |   |   `-ParmVarDecl 0x7fe8b213ac18 <col:32, col:43> col:43 __args '_Args &&...'
| |   |-FunctionTemplateDecl 0x7fe8b213e6e8 <line:4231:1, line:4221:27> line:4235:1 __invoke
| |   | |-TemplateTypeParmDecl 0x7fe8b213adf8 <line:4231:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fe8b213ae68 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fe8b213aed8 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Args
| |   | |-TemplateTypeParmDecl 0x7fe8b213ba28 <line:4232:11, col:47> col:11 class depth 0 index 3
| |   | | `-TemplateArgument type '__enable_if_bullet1<_Fp, _A0>':'typename enable_if<is_member_function_pointer<typename decay<type-parameter-0-0>::type>::value && is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fe8b213e650 <line:4233:1, line:4221:27> line:4235:1 __invoke 'auto (_Fp &&, _A0 &&, _Args &&...) noexcept(noexcept((std::__1::forward<_A0>(__a0) .* __f)(std::__1::forward<_Args>(__args)...))) -> decltype((std::__1::forward<_A0>(__a0) .* __f)(std::__1::forward<_Args>(__args)...))' inline
| |   |   |-ParmVarDecl 0x7fe8b213bb38 <col:10, col:16> col:16 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fe8b213bbd8 <col:21, col:27> col:27 referenced __a0 '_A0 &&'
| |   |   |-ParmVarDecl 0x7fe8b213bd18 <col:33, col:44> col:44 referenced __args '_Args &&...'
| |   |   |-CompoundStmt 0x7fe8b213eb38 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fe8b213eb20 <col:7, line:4236:88>
| |   |   |   `-CallExpr 0x7fe8b213eaf0 <col:23, col:88> '<dependent type>'
| |   |   |     |-ParenExpr 0x7fe8b213e960 <col:23, col:54> '<dependent type>'
| |   |   |     | `-BinaryOperator 0x7fe8b213e938 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4236:51> '<dependent type>' '.*'
| |   |   |     |   |-CallExpr 0x7fe8b213e8e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4236:48> '<dependent type>'
| |   |   |     |   | |-UnresolvedLookupExpr 0x7fe8b213e818 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4236:42> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fe8b20f7d80 0x7fe8b20f82a0
| |   |   |     |   | `-DeclRefExpr 0x7fe8b213e8b8 <col:44> '_A0' lvalue ParmVar 0x7fe8b213bbd8 '__a0' '_A0 &&'
| |   |   |     |   `-DeclRefExpr 0x7fe8b213e910 <col:51> '_Fp' lvalue ParmVar 0x7fe8b213bb38 '__f' '_Fp &&'
| |   |   |     `-PackExpansionExpr 0x7fe8b213ead0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4236:85> '<dependent type>'
| |   |   |       `-CallExpr 0x7fe8b213eaa0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4236:84> '<dependent type>'
| |   |   |         |-UnresolvedLookupExpr 0x7fe8b213e9d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4236:76> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fe8b20f7d80 0x7fe8b20f82a0
| |   |   |         `-DeclRefExpr 0x7fe8b213ea78 <col:78> '_Args &&...' lvalue ParmVar 0x7fe8b213bd18 '__args' '_Args &&...'
| |   |   |-AlwaysInlineAttr 0x7fe8b213e750 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fe8b213e798 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fe8b2140000 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4238:1, line:4221:27> line:4242:1 __invoke_constexpr
| |   | |-TemplateTypeParmDecl 0x7fe8b213eb58 <line:4238:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fe8b213ebc8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fe8b213ec38 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Args
| |   | |-TemplateTypeParmDecl 0x7fe8b213f468 <line:4239:11, col:47> col:11 class depth 0 index 3
| |   | | `-TemplateArgument type '__enable_if_bullet1<_Fp, _A0>':'typename enable_if<is_member_function_pointer<typename decay<type-parameter-0-0>::type>::value && is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fe8b213ff40 <line:4240:1, line:4221:27> line:4242:1 constexpr __invoke_constexpr 'auto (_Fp &&, _A0 &&, _Args &&...) noexcept(noexcept((std::__1::forward<_A0>(__a0) .* __f)(std::__1::forward<_Args>(__args)...))) -> decltype((std::__1::forward<_A0>(__a0) .* __f)(std::__1::forward<_Args>(__args)...))' inline
| |   |   |-ParmVarDecl 0x7fe8b213f578 <col:20, col:26> col:26 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fe8b213f618 <col:31, col:37> col:37 referenced __a0 '_A0 &&'
| |   |   |-ParmVarDecl 0x7fe8b213f6f8 <col:43, col:54> col:54 referenced __args '_Args &&...'
| |   |   |-CompoundStmt 0x7fe8b2140450 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fe8b2140438 <col:7, line:4243:88>
| |   |   |   `-CallExpr 0x7fe8b2140408 <col:23, col:88> '<dependent type>'
| |   |   |     |-ParenExpr 0x7fe8b2140278 <col:23, col:54> '<dependent type>'
| |   |   |     | `-BinaryOperator 0x7fe8b2140250 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4243:51> '<dependent type>' '.*'
| |   |   |     |   |-CallExpr 0x7fe8b21401f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4243:48> '<dependent type>'
| |   |   |     |   | |-UnresolvedLookupExpr 0x7fe8b2140130 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4243:42> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fe8b20f7d80 0x7fe8b20f82a0
| |   |   |     |   | `-DeclRefExpr 0x7fe8b21401d0 <col:44> '_A0' lvalue ParmVar 0x7fe8b213f618 '__a0' '_A0 &&'
| |   |   |     |   `-DeclRefExpr 0x7fe8b2140228 <col:51> '_Fp' lvalue ParmVar 0x7fe8b213f578 '__f' '_Fp &&'
| |   |   |     `-PackExpansionExpr 0x7fe8b21403e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4243:85> '<dependent type>'
| |   |   |       `-CallExpr 0x7fe8b21403b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4243:84> '<dependent type>'
| |   |   |         |-UnresolvedLookupExpr 0x7fe8b21402f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4243:76> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fe8b20f7d80 0x7fe8b20f82a0
| |   |   |         `-DeclRefExpr 0x7fe8b2140390 <col:78> '_Args &&...' lvalue ParmVar 0x7fe8b213f6f8 '__args' '_Args &&...'
| |   |   |-AlwaysInlineAttr 0x7fe8b2140068 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fe8b21400b0 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fe8b2141888 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4245:1, line:4221:27> line:4249:1 __invoke
| |   | |-TemplateTypeParmDecl 0x7fe8b2140470 <line:4245:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fe8b21404d8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fe8b2140548 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Args
| |   | |-TemplateTypeParmDecl 0x7fe8b2140e08 <line:4246:11, col:47> col:11 class depth 0 index 3
| |   | | `-TemplateArgument type '__enable_if_bullet2<_Fp, _A0>':'typename enable_if<is_member_function_pointer<typename decay<type-parameter-0-0>::type>::value && __is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fe8b21417f0 <line:4247:1, line:4221:27> line:4249:1 __invoke 'auto (_Fp &&, _A0 &&, _Args &&...) noexcept(noexcept((__a0.get() .* __f)(std::__1::forward<_Args>(__args)...))) -> decltype((__a0.get() .* __f)(std::__1::forward<_Args>(__args)...))' inline
| |   |   |-ParmVarDecl 0x7fe8b2140f18 <col:10, col:16> col:16 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fe8b2140fb8 <col:21, col:27> col:27 referenced __a0 '_A0 &&'
| |   |   |-ParmVarDecl 0x7fe8b2141098 <col:33, col:44> col:44 referenced __args '_Args &&...'
| |   |   |-CompoundStmt 0x7fe8b2141c18 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fe8b2141c00 <col:7, line:4250:73>
| |   |   |   `-CallExpr 0x7fe8b2141bd0 <col:23, col:73> '<dependent type>'
| |   |   |     |-ParenExpr 0x7fe8b2141a40 <col:23, col:39> '<dependent type>'
| |   |   |     | `-BinaryOperator 0x7fe8b2141a18 <col:24, col:36> '<dependent type>' '.*'
| |   |   |     |   |-CallExpr 0x7fe8b21419c8 <col:24, col:33> '<dependent type>'
| |   |   |     |   | `-CXXDependentScopeMemberExpr 0x7fe8b2141970 <col:24, col:29> '<dependent type>' lvalue .get
| |   |   |     |   |   `-DeclRefExpr 0x7fe8b2141948 <col:24> '_A0' lvalue ParmVar 0x7fe8b2140fb8 '__a0' '_A0 &&'
| |   |   |     |   `-DeclRefExpr 0x7fe8b21419f0 <col:36> '_Fp' lvalue ParmVar 0x7fe8b2140f18 '__f' '_Fp &&'
| |   |   |     `-PackExpansionExpr 0x7fe8b2141bb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4250:70> '<dependent type>'
| |   |   |       `-CallExpr 0x7fe8b2141b80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4250:69> '<dependent type>'
| |   |   |         |-UnresolvedLookupExpr 0x7fe8b2141ab8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4250:61> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fe8b20f7d80 0x7fe8b20f82a0
| |   |   |         `-DeclRefExpr 0x7fe8b2141b58 <col:63> '_Args &&...' lvalue ParmVar 0x7fe8b2141098 '__args' '_Args &&...'
| |   |   |-AlwaysInlineAttr 0x7fe8b21418f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fe8b2141938 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fe8b2142df8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4252:1, line:4221:27> line:4256:1 __invoke_constexpr
| |   | |-TemplateTypeParmDecl 0x7fe8b2141c38 <line:4252:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fe8b2141ca8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fe8b2141d18 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Args
| |   | |-TemplateTypeParmDecl 0x7fe8b2142408 <line:4253:11, col:47> col:11 class depth 0 index 3
| |   | | `-TemplateArgument type '__enable_if_bullet2<_Fp, _A0>':'typename enable_if<is_member_function_pointer<typename decay<type-parameter-0-0>::type>::value && __is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fe8b2142d60 <line:4254:1, line:4221:27> line:4256:1 constexpr __invoke_constexpr 'auto (_Fp &&, _A0 &&, _Args &&...) noexcept(noexcept((__a0.get() .* __f)(std::__1::forward<_Args>(__args)...))) -> decltype((__a0.get() .* __f)(std::__1::forward<_Args>(__args)...))' inline
| |   |   |-ParmVarDecl 0x7fe8b2142518 <col:20, col:26> col:26 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fe8b21425b8 <col:31, col:37> col:37 referenced __a0 '_A0 &&'
| |   |   |-ParmVarDecl 0x7fe8b2142698 <col:43, col:54> col:54 referenced __args '_Args &&...'
| |   |   |-CompoundStmt 0x7fe8b2143188 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fe8b2143170 <col:7, line:4257:73>
| |   |   |   `-CallExpr 0x7fe8b2143140 <col:23, col:73> '<dependent type>'
| |   |   |     |-ParenExpr 0x7fe8b2142fb0 <col:23, col:39> '<dependent type>'
| |   |   |     | `-BinaryOperator 0x7fe8b2142f88 <col:24, col:36> '<dependent type>' '.*'
| |   |   |     |   |-CallExpr 0x7fe8b2142f38 <col:24, col:33> '<dependent type>'
| |   |   |     |   | `-CXXDependentScopeMemberExpr 0x7fe8b2142ee0 <col:24, col:29> '<dependent type>' lvalue .get
| |   |   |     |   |   `-DeclRefExpr 0x7fe8b2142eb8 <col:24> '_A0' lvalue ParmVar 0x7fe8b21425b8 '__a0' '_A0 &&'
| |   |   |     |   `-DeclRefExpr 0x7fe8b2142f60 <col:36> '_Fp' lvalue ParmVar 0x7fe8b2142518 '__f' '_Fp &&'
| |   |   |     `-PackExpansionExpr 0x7fe8b2143120 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4257:70> '<dependent type>'
| |   |   |       `-CallExpr 0x7fe8b21430f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4257:69> '<dependent type>'
| |   |   |         |-UnresolvedLookupExpr 0x7fe8b2143028 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4257:61> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fe8b20f7d80 0x7fe8b20f82a0
| |   |   |         `-DeclRefExpr 0x7fe8b21430c8 <col:63> '_Args &&...' lvalue ParmVar 0x7fe8b2142698 '__args' '_Args &&...'
| |   |   |-AlwaysInlineAttr 0x7fe8b2142e60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fe8b2142ea8 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fe8b2144a08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4259:1, line:4221:27> line:4263:1 __invoke
| |   | |-TemplateTypeParmDecl 0x7fe8b21431a8 <line:4259:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fe8b2143218 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fe8b2143288 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Args
| |   | |-TemplateTypeParmDecl 0x7fe8b2143db8 <line:4260:11, col:47> col:11 class depth 0 index 3
| |   | | `-TemplateArgument type '__enable_if_bullet3<_Fp, _A0>':'typename enable_if<is_member_function_pointer<typename decay<type-parameter-0-0>::type>::value && !is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value && !__is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fe8b2144970 <line:4261:1, line:4221:27> line:4263:1 __invoke 'auto (_Fp &&, _A0 &&, _Args &&...) noexcept(noexcept(((*std::__1::forward<_A0>(__a0)) .* __f)(std::__1::forward<_Args>(__args)...))) -> decltype(((*std::__1::forward<_A0>(__a0)) .* __f)(std::__1::forward<_Args>(__args)...))' inline
| |   |   |-ParmVarDecl 0x7fe8b2143ec8 <col:10, col:16> col:16 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fe8b2143f68 <col:21, col:27> col:27 referenced __a0 '_A0 &&'
| |   |   |-ParmVarDecl 0x7fe8b2144048 <col:33, col:44> col:44 referenced __args '_Args &&...'
| |   |   |-CompoundStmt 0x7fe8b2144e80 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fe8b2144e68 <col:7, line:4264:91>
| |   |   |   `-CallExpr 0x7fe8b2144e38 <col:23, col:91> '<dependent type>'
| |   |   |     |-ParenExpr 0x7fe8b2144ca8 <col:23, col:57> '<dependent type>'
| |   |   |     | `-BinaryOperator 0x7fe8b2144c80 <col:24, col:54> '<dependent type>' '.*'
| |   |   |     |   |-ParenExpr 0x7fe8b2144c38 <col:24, col:51> '<dependent type>'
| |   |   |     |   | `-UnaryOperator 0x7fe8b2144c18 <col:25, col:50> '<dependent type>' prefix '*'
| |   |   |     |   |   `-CallExpr 0x7fe8b2144be8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4264:50> '<dependent type>'
| |   |   |     |   |     |-UnresolvedLookupExpr 0x7fe8b2144b20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4264:44> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fe8b20f7d80 0x7fe8b20f82a0
| |   |   |     |   |     `-DeclRefExpr 0x7fe8b2144bc0 <col:46> '_A0' lvalue ParmVar 0x7fe8b2143f68 '__a0' '_A0 &&'
| |   |   |     |   `-DeclRefExpr 0x7fe8b2144c58 <col:54> '_Fp' lvalue ParmVar 0x7fe8b2143ec8 '__f' '_Fp &&'
| |   |   |     `-PackExpansionExpr 0x7fe8b2144e18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4264:88> '<dependent type>'
| |   |   |       `-CallExpr 0x7fe8b2144de8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4264:87> '<dependent type>'
| |   |   |         |-UnresolvedLookupExpr 0x7fe8b2144d20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4264:79> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fe8b20f7d80 0x7fe8b20f82a0
| |   |   |         `-DeclRefExpr 0x7fe8b2144dc0 <col:81> '_Args &&...' lvalue ParmVar 0x7fe8b2144048 '__args' '_Args &&...'
| |   |   |-AlwaysInlineAttr 0x7fe8b2144a70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fe8b2144ab8 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fe8b21464c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4266:1, line:4221:27> line:4270:1 __invoke_constexpr
| |   | |-TemplateTypeParmDecl 0x7fe8b2144ea0 <line:4266:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fe8b2144f08 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fe8b2144f78 <col:33, col:42> col:42 referenced class depth 0 index 2 ... _Args
| |   | |-TemplateTypeParmDecl 0x7fe8b2145908 <line:4267:11, col:47> col:11 class depth 0 index 3
| |   | | `-TemplateArgument type '__enable_if_bullet3<_Fp, _A0>':'typename enable_if<is_member_function_pointer<typename decay<type-parameter-0-0>::type>::value && !is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value && !__is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fe8b2146430 <line:4268:1, line:4221:27> line:4270:1 constexpr __invoke_constexpr 'auto (_Fp &&, _A0 &&, _Args &&...) noexcept(noexcept(((*std::__1::forward<_A0>(__a0)) .* __f)(std::__1::forward<_Args>(__args)...))) -> decltype(((*std::__1::forward<_A0>(__a0)) .* __f)(std::__1::forward<_Args>(__args)...))' inline
| |   |   |-ParmVarDecl 0x7fe8b2145a18 <col:20, col:26> col:26 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fe8b2145ab8 <col:31, col:37> col:37 referenced __a0 '_A0 &&'
| |   |   |-ParmVarDecl 0x7fe8b2145b98 <col:43, col:54> col:54 referenced __args '_Args &&...'
| |   |   |-CompoundStmt 0x7fe8b2146940 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fe8b2146928 <col:7, line:4271:91>
| |   |   |   `-CallExpr 0x7fe8b21468f8 <col:23, col:91> '<dependent type>'
| |   |   |     |-ParenExpr 0x7fe8b2146768 <col:23, col:57> '<dependent type>'
| |   |   |     | `-BinaryOperator 0x7fe8b2146740 <col:24, col:54> '<dependent type>' '.*'
| |   |   |     |   |-ParenExpr 0x7fe8b21466f8 <col:24, col:51> '<dependent type>'
| |   |   |     |   | `-UnaryOperator 0x7fe8b21466d8 <col:25, col:50> '<dependent type>' prefix '*'
| |   |   |     |   |   `-CallExpr 0x7fe8b21466a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4271:50> '<dependent type>'
| |   |   |     |   |     |-UnresolvedLookupExpr 0x7fe8b21465e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4271:44> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fe8b20f7d80 0x7fe8b20f82a0
| |   |   |     |   |     `-DeclRefExpr 0x7fe8b2146680 <col:46> '_A0' lvalue ParmVar 0x7fe8b2145ab8 '__a0' '_A0 &&'
| |   |   |     |   `-DeclRefExpr 0x7fe8b2146718 <col:54> '_Fp' lvalue ParmVar 0x7fe8b2145a18 '__f' '_Fp &&'
| |   |   |     `-PackExpansionExpr 0x7fe8b21468d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4271:88> '<dependent type>'
| |   |   |       `-CallExpr 0x7fe8b21468a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4271:87> '<dependent type>'
| |   |   |         |-UnresolvedLookupExpr 0x7fe8b21467e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4271:79> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fe8b20f7d80 0x7fe8b20f82a0
| |   |   |         `-DeclRefExpr 0x7fe8b2146880 <col:81> '_Args &&...' lvalue ParmVar 0x7fe8b2145b98 '__args' '_Args &&...'
| |   |   |-AlwaysInlineAttr 0x7fe8b2146530 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fe8b2146578 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fe8b2147b38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4275:1, line:4221:27> line:4279:1 __invoke
| |   | |-TemplateTypeParmDecl 0x7fe8b2146960 <line:4275:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fe8b21469c8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fe8b21473f8 <line:4276:11, col:47> col:11 class depth 0 index 2
| |   | | `-TemplateArgument type '__enable_if_bullet4<_Fp, _A0>':'typename enable_if<is_member_object_pointer<typename decay<type-parameter-0-0>::type>::value && is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fe8b2147aa0 <line:4277:1, line:4221:27> line:4279:1 __invoke 'auto (_Fp &&, _A0 &&) noexcept(noexcept(std::__1::forward<_A0>(__a0) .* __f)) -> decltype(std::__1::forward<_A0>(__a0) .* __f)' inline
| |   |   |-ParmVarDecl 0x7fe8b21474f8 <col:10, col:16> col:16 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fe8b2147598 <col:21, col:27> col:27 referenced __a0 '_A0 &&'
| |   |   |-CompoundStmt 0x7fe8b2147da8 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fe8b2147d90 <col:7, line:4280:50>
| |   |   |   `-BinaryOperator 0x7fe8b2147d68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4280:50> '<dependent type>' '.*'
| |   |   |     |-CallExpr 0x7fe8b2147d10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4280:47> '<dependent type>'
| |   |   |     | |-UnresolvedLookupExpr 0x7fe8b2147c48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4280:41> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fe8b20f7d80 0x7fe8b20f82a0
| |   |   |     | `-DeclRefExpr 0x7fe8b2147ce8 <col:43> '_A0' lvalue ParmVar 0x7fe8b2147598 '__a0' '_A0 &&'
| |   |   |     `-DeclRefExpr 0x7fe8b2147d40 <col:50> '_Fp' lvalue ParmVar 0x7fe8b21474f8 '__f' '_Fp &&'
| |   |   |-AlwaysInlineAttr 0x7fe8b2147b98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fe8b2147be0 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fe8b2148d48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4282:1, line:4221:27> line:4286:1 __invoke_constexpr
| |   | |-TemplateTypeParmDecl 0x7fe8b2147dc8 <line:4282:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fe8b2147e38 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fe8b2148688 <line:4283:11, col:47> col:11 class depth 0 index 2
| |   | | `-TemplateArgument type '__enable_if_bullet4<_Fp, _A0>':'typename enable_if<is_member_object_pointer<typename decay<type-parameter-0-0>::type>::value && is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fe8b2148cb0 <line:4284:1, line:4221:27> line:4286:1 constexpr __invoke_constexpr 'auto (_Fp &&, _A0 &&) noexcept(noexcept(std::__1::forward<_A0>(__a0) .* __f)) -> decltype(std::__1::forward<_A0>(__a0) .* __f)' inline
| |   |   |-ParmVarDecl 0x7fe8b2148788 <col:20, col:26> col:26 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fe8b2148828 <col:31, col:37> col:37 referenced __a0 '_A0 &&'
| |   |   |-CompoundStmt 0x7fe8b2148fb8 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fe8b2148fa0 <col:7, line:4287:50>
| |   |   |   `-BinaryOperator 0x7fe8b2148f78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4287:50> '<dependent type>' '.*'
| |   |   |     |-CallExpr 0x7fe8b2148f20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4287:47> '<dependent type>'
| |   |   |     | |-UnresolvedLookupExpr 0x7fe8b2148e58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4287:41> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fe8b20f7d80 0x7fe8b20f82a0
| |   |   |     | `-DeclRefExpr 0x7fe8b2148ef8 <col:43> '_A0' lvalue ParmVar 0x7fe8b2148828 '__a0' '_A0 &&'
| |   |   |     `-DeclRefExpr 0x7fe8b2148f50 <col:50> '_Fp' lvalue ParmVar 0x7fe8b2148788 '__f' '_Fp &&'
| |   |   |-AlwaysInlineAttr 0x7fe8b2148da8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fe8b2148df0 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fe8b2149e98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4289:1, line:4221:27> line:4293:1 __invoke
| |   | |-TemplateTypeParmDecl 0x7fe8b2148fd8 <line:4289:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fe8b2149048 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fe8b21498a8 <line:4290:11, col:47> col:11 class depth 0 index 2
| |   | | `-TemplateArgument type '__enable_if_bullet5<_Fp, _A0>':'typename enable_if<is_member_object_pointer<typename decay<type-parameter-0-0>::type>::value && __is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fe8b2149e00 <line:4291:1, line:4221:27> line:4293:1 __invoke 'auto (_Fp &&, _A0 &&) noexcept(noexcept(__a0.get() .* __f)) -> decltype(__a0.get() .* __f)' inline
| |   |   |-ParmVarDecl 0x7fe8b21499a8 <col:10, col:16> col:16 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fe8b2149a48 <col:21, col:27> col:27 referenced __a0 '_A0 &&'
| |   |   |-CompoundStmt 0x7fe8b214a068 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fe8b214a050 <col:7, line:4294:35>
| |   |   |   `-BinaryOperator 0x7fe8b214a028 <col:23, col:35> '<dependent type>' '.*'
| |   |   |     |-CallExpr 0x7fe8b2149fd0 <col:23, col:32> '<dependent type>'
| |   |   |     | `-CXXDependentScopeMemberExpr 0x7fe8b2149f78 <col:23, col:28> '<dependent type>' lvalue .get
| |   |   |     |   `-DeclRefExpr 0x7fe8b2149f50 <col:23> '_A0' lvalue ParmVar 0x7fe8b2149a48 '__a0' '_A0 &&'
| |   |   |     `-DeclRefExpr 0x7fe8b214a000 <col:35> '_Fp' lvalue ParmVar 0x7fe8b21499a8 '__f' '_Fp &&'
| |   |   |-AlwaysInlineAttr 0x7fe8b2149ef8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fe8b2149f40 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fe8b214ad58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4296:1, line:4221:27> line:4300:1 __invoke_constexpr
| |   | |-TemplateTypeParmDecl 0x7fe8b214a088 <line:4296:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fe8b214a0f8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fe8b214a7e8 <line:4297:11, col:47> col:11 class depth 0 index 2
| |   | | `-TemplateArgument type '__enable_if_bullet5<_Fp, _A0>':'typename enable_if<is_member_object_pointer<typename decay<type-parameter-0-0>::type>::value && __is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fe8b214acc0 <line:4298:1, line:4221:27> line:4300:1 constexpr __invoke_constexpr 'auto (_Fp &&, _A0 &&) noexcept(noexcept(__a0.get() .* __f)) -> decltype(__a0.get() .* __f)' inline
| |   |   |-ParmVarDecl 0x7fe8b214a8e8 <col:20, col:26> col:26 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fe8b214a988 <col:31, col:37> col:37 referenced __a0 '_A0 &&'
| |   |   |-CompoundStmt 0x7fe8b214af20 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fe8b214af08 <col:7, line:4301:35>
| |   |   |   `-BinaryOperator 0x7fe8b214aee0 <col:23, col:35> '<dependent type>' '.*'
| |   |   |     |-CallExpr 0x7fe8b214ae90 <col:23, col:32> '<dependent type>'
| |   |   |     | `-CXXDependentScopeMemberExpr 0x7fe8b214ae38 <col:23, col:28> '<dependent type>' lvalue .get
| |   |   |     |   `-DeclRefExpr 0x7fe8b214ae10 <col:23> '_A0' lvalue ParmVar 0x7fe8b214a988 '__a0' '_A0 &&'
| |   |   |     `-DeclRefExpr 0x7fe8b214aeb8 <col:35> '_Fp' lvalue ParmVar 0x7fe8b214a8e8 '__f' '_Fp &&'
| |   |   |-AlwaysInlineAttr 0x7fe8b214adb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fe8b214ae00 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fe8b214c298 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4303:1, line:4221:27> line:4307:1 __invoke
| |   | |-TemplateTypeParmDecl 0x7fe8b214af40 <line:4303:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fe8b214afa8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fe8b214bad8 <line:4304:11, col:47> col:11 class depth 0 index 2
| |   | | `-TemplateArgument type '__enable_if_bullet6<_Fp, _A0>':'typename enable_if<is_member_object_pointer<typename decay<type-parameter-0-0>::type>::value && !is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value && !__is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fe8b214c200 <line:4305:1, line:4221:27> line:4307:1 __invoke 'auto (_Fp &&, _A0 &&) noexcept(noexcept((*std::__1::forward<_A0>(__a0)) .* __f)) -> decltype((*std::__1::forward<_A0>(__a0)) .* __f)' inline
| |   |   |-ParmVarDecl 0x7fe8b214bbd8 <col:10, col:16> col:16 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fe8b214bc78 <col:21, col:27> col:27 referenced __a0 '_A0 &&'
| |   |   |-CompoundStmt 0x7fe8b214c548 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fe8b214c530 <col:7, line:4308:53>
| |   |   |   `-BinaryOperator 0x7fe8b214c508 <col:23, col:53> '<dependent type>' '.*'
| |   |   |     |-ParenExpr 0x7fe8b214c4c0 <col:23, col:50> '<dependent type>'
| |   |   |     | `-UnaryOperator 0x7fe8b214c4a0 <col:24, col:49> '<dependent type>' prefix '*'
| |   |   |     |   `-CallExpr 0x7fe8b214c470 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4308:49> '<dependent type>'
| |   |   |     |     |-UnresolvedLookupExpr 0x7fe8b214c3a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4308:43> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fe8b20f7d80 0x7fe8b20f82a0
| |   |   |     |     `-DeclRefExpr 0x7fe8b214c448 <col:45> '_A0' lvalue ParmVar 0x7fe8b214bc78 '__a0' '_A0 &&'
| |   |   |     `-DeclRefExpr 0x7fe8b214c4e0 <col:53> '_Fp' lvalue ParmVar 0x7fe8b214bbd8 '__f' '_Fp &&'
| |   |   |-AlwaysInlineAttr 0x7fe8b214c2f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fe8b214c340 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fe8b214d6a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4310:1, line:4221:27> line:4314:1 __invoke_constexpr
| |   | |-TemplateTypeParmDecl 0x7fe8b214c568 <line:4310:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fe8b214c5d8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A0
| |   | |-TemplateTypeParmDecl 0x7fe8b214cf68 <line:4311:11, col:47> col:11 class depth 0 index 2
| |   | | `-TemplateArgument type '__enable_if_bullet6<_Fp, _A0>':'typename enable_if<is_member_object_pointer<typename decay<type-parameter-0-0>::type>::value && !is_base_of<typename __member_pointer_class_type<typename decay<type-parameter-0-0>::type>::type, typename decay<type-parameter-0-1>::type>::value && !__is_reference_wrapper<typename decay<type-parameter-0-1>::type>::value, void>::type'
| |   | `-FunctionDecl 0x7fe8b214d610 <line:4312:1, line:4221:27> line:4314:1 constexpr __invoke_constexpr 'auto (_Fp &&, _A0 &&) noexcept(noexcept((*std::__1::forward<_A0>(__a0)) .* __f)) -> decltype((*std::__1::forward<_A0>(__a0)) .* __f)' inline
| |   |   |-ParmVarDecl 0x7fe8b214d068 <col:20, col:26> col:26 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fe8b214d108 <col:31, col:37> col:37 referenced __a0 '_A0 &&'
| |   |   |-CompoundStmt 0x7fe8b214d958 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fe8b214d940 <col:7, line:4315:53>
| |   |   |   `-BinaryOperator 0x7fe8b214d918 <col:23, col:53> '<dependent type>' '.*'
| |   |   |     |-ParenExpr 0x7fe8b214d8d0 <col:23, col:50> '<dependent type>'
| |   |   |     | `-UnaryOperator 0x7fe8b214d8b0 <col:24, col:49> '<dependent type>' prefix '*'
| |   |   |     |   `-CallExpr 0x7fe8b214d880 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4315:49> '<dependent type>'
| |   |   |     |     |-UnresolvedLookupExpr 0x7fe8b214d7b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4315:43> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fe8b20f7d80 0x7fe8b20f82a0
| |   |   |     |     `-DeclRefExpr 0x7fe8b214d858 <col:45> '_A0' lvalue ParmVar 0x7fe8b214d108 '__a0' '_A0 &&'
| |   |   |     `-DeclRefExpr 0x7fe8b214d8f0 <col:53> '_Fp' lvalue ParmVar 0x7fe8b214d068 '__f' '_Fp &&'
| |   |   |-AlwaysInlineAttr 0x7fe8b214d708 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fe8b214d750 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fe8b214f478 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4319:1, line:4221:27> line:4322:1 __invoke
| |   | |-TemplateTypeParmDecl 0x7fe8b214d978 <line:4319:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fe8b214d9e8 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | `-FunctionDecl 0x7fe8b214f3e0 <line:4320:1, line:4221:27> line:4322:1 __invoke 'auto (_Fp &&, _Args &&...) noexcept(noexcept(std::__1::forward<_Fp>(__f)(std::__1::forward<_Args>(__args)...))) -> decltype(std::__1::forward<_Fp>(__f)(std::__1::forward<_Args>(__args)...))' inline
| |   |   |-ParmVarDecl 0x7fe8b214dae8 <col:10, col:16> col:16 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fe8b214dc28 <col:21, col:32> col:32 referenced __args '_Args &&...'
| |   |   |-CompoundStmt 0x7fe8b214f838 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fe8b214f820 <col:7, line:4323:80>
| |   |   |   `-CallExpr 0x7fe8b214f7f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4323:80> '<dependent type>'
| |   |   |     |-CallExpr 0x7fe8b214f650 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4323:46> '<dependent type>'
| |   |   |     | |-UnresolvedLookupExpr 0x7fe8b214f588 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4323:41> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fe8b20f7d80 0x7fe8b20f82a0
| |   |   |     | `-DeclRefExpr 0x7fe8b214f628 <col:43> '_Fp' lvalue ParmVar 0x7fe8b214dae8 '__f' '_Fp &&'
| |   |   |     `-PackExpansionExpr 0x7fe8b214f7d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4323:77> '<dependent type>'
| |   |   |       `-CallExpr 0x7fe8b214f7a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4323:76> '<dependent type>'
| |   |   |         |-UnresolvedLookupExpr 0x7fe8b214f6d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4323:68> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fe8b20f7d80 0x7fe8b20f82a0
| |   |   |         `-DeclRefExpr 0x7fe8b214f778 <col:70> '_Args &&...' lvalue ParmVar 0x7fe8b214dc28 '__args' '_Args &&...'
| |   |   |-AlwaysInlineAttr 0x7fe8b214f4d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fe8b214f520 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fe8b2150268 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4325:1, line:4221:27> line:4328:1 __invoke_constexpr
| |   | |-TemplateTypeParmDecl 0x7fe8b214f858 <line:4325:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fe8b214f8c8 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | `-FunctionDecl 0x7fe8b21501d0 <line:4326:1, line:4221:27> line:4328:1 constexpr __invoke_constexpr 'auto (_Fp &&, _Args &&...) noexcept(noexcept(std::__1::forward<_Fp>(__f)(std::__1::forward<_Args>(__args)...))) -> decltype(std::__1::forward<_Fp>(__f)(std::__1::forward<_Args>(__args)...))' inline
| |   |   |-ParmVarDecl 0x7fe8b214f9c8 <col:20, col:26> col:26 referenced __f '_Fp &&'
| |   |   |-ParmVarDecl 0x7fe8b214faa8 <col:31, col:42> col:42 referenced __args '_Args &&...'
| |   |   |-CompoundStmt 0x7fe8b2150628 <line:4221:5, col:27>
| |   |   | `-ReturnStmt 0x7fe8b2150610 <col:7, line:4329:80>
| |   |   |   `-CallExpr 0x7fe8b21505e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4329:80> '<dependent type>'
| |   |   |     |-CallExpr 0x7fe8b2150440 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4329:46> '<dependent type>'
| |   |   |     | |-UnresolvedLookupExpr 0x7fe8b2150378 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4329:41> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fe8b20f7d80 0x7fe8b20f82a0
| |   |   |     | `-DeclRefExpr 0x7fe8b2150418 <col:43> '_Fp' lvalue ParmVar 0x7fe8b214f9c8 '__f' '_Fp &&'
| |   |   |     `-PackExpansionExpr 0x7fe8b21505c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4329:77> '<dependent type>'
| |   |   |       `-CallExpr 0x7fe8b2150590 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4329:76> '<dependent type>'
| |   |   |         |-UnresolvedLookupExpr 0x7fe8b21504c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4329:68> '<dependent type>' lvalue (no ADL) = 'forward' 0x7fe8b20f7d80 0x7fe8b20f82a0
| |   |   |         `-DeclRefExpr 0x7fe8b2150568 <col:70> '_Args &&...' lvalue ParmVar 0x7fe8b214faa8 '__args' '_Args &&...'
| |   |   |-AlwaysInlineAttr 0x7fe8b21502c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fe8b2150310 <col:51, col:74> Hidden
| |   |-ClassTemplateDecl 0x7fe8b2150858 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4335:1, line:4352:1> line:4336:8 __invokable_r
| |   | |-TemplateTypeParmDecl 0x7fe8b2150648 <line:4335:11, col:17> col:17 referenced class depth 0 index 0 _Ret
| |   | |-TemplateTypeParmDecl 0x7fe8b21506b8 <col:23, col:29> col:29 referenced class depth 0 index 1 _Fp
| |   | |-TemplateTypeParmDecl 0x7fe8b2150728 <col:34, col:43> col:43 referenced class depth 0 index 2 ... _Args
| |   | `-CXXRecordDecl 0x7fe8b21507c0 <line:4336:1, line:4352:1> line:4336:8 struct __invokable_r definition
| |   |   |-private '__check_complete<_Fp>'
| |   |   |-CXXRecordDecl 0x7fe8b2150c78 <col:1, col:8> col:8 implicit struct __invokable_r
| |   |   |-TypeAliasDecl 0x7fe8b21510b8 <line:4339:5, col:21> col:11 referenced _Result 'decltype(std::__1::__invoke(std::__1::declval<_Fp>(), std::__1::declval<_Args>()...))'
| |   |   | `-DecltypeType 0x7fe8b2151080 'decltype(std::__1::__invoke(std::__1::declval<_Fp>(), std::__1::declval<_Args>()...))' dependent
| |   |   |   `-CallExpr 0x7fe8b2151000 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4340:74> '<dependent type>'
| |   |   |     |-UnresolvedLookupExpr 0x7fe8b2150d40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4340:16> '<overloaded function type>' lvalue (no ADL) = '__invoke' 0x7fe8b213aa48 0x7fe8b213e6e8 0x7fe8b2141888 0x7fe8b2144a08 0x7fe8b2147b38 0x7fe8b2149e98 0x7fe8b214c298 0x7fe8b214f478
| |   |   |     |-CallExpr 0x7fe8b2150ea8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4340:45> '<dependent type>'
| |   |   |     | `-UnresolvedLookupExpr 0x7fe8b2150e10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4340:43> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fe8b2082050
| |   |   |     `-PackExpansionExpr 0x7fe8b2150fd0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4340:71> '<dependent type>'
| |   |   |       `-CallExpr 0x7fe8b2150fa8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4340:70> '<dependent type>'
| |   |   |         `-UnresolvedLookupExpr 0x7fe8b2150f10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4340:68> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fe8b2082050
| |   |   `-VarDecl 0x7fe8b2151128 <line:4342:5, line:4351:18> line:4342:23 value 'const _Bool' static cinit
| |   |     `-DependentScopeDeclRefExpr 0x7fe8b2151a40 <line:4343:9, line:4351:18> '<dependent type>' lvalue
| |   |-TypeAliasTemplateDecl 0x7fe8b2151e58 <line:4354:1, line:4355:54> col:1 __invokable
| |   | |-TemplateTypeParmDecl 0x7fe8b2151aa0 <line:4354:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fe8b2151b08 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | `-TypeAliasDecl 0x7fe8b2151df8 <line:4355:1, col:54> col:7 __invokable '__invokable_r<void, _Fp, _Args...>'
| |   |   `-TemplateSpecializationType 0x7fe8b2151cc0 '__invokable_r<void, _Fp, _Args...>' dependent __invokable_r
| |   |     |-TemplateArgument type 'void'
| |   |     |-TemplateArgument type '_Fp'
| |   |     `-TemplateArgument type '_Args...'
| |   |-ClassTemplateDecl 0x7fe8b21521c8 <line:4357:1, line:4360:1> line:4358:8 __nothrow_invokable_r_imp
| |   | |-NonTypeTemplateParmDecl 0x7fe8b2151eb8 <line:4357:11, col:16> col:16 '_Bool' depth 0 index 0 _IsInvokable
| |   | |-NonTypeTemplateParmDecl 0x7fe8b2151f20 <col:30, col:35> col:35 '_Bool' depth 0 index 1 _IsCVVoid
| |   | |-TemplateTypeParmDecl 0x7fe8b2151f78 <col:46, col:52> col:52 class depth 0 index 2 _Ret
| |   | |-TemplateTypeParmDecl 0x7fe8b2151fe8 <col:58, col:64> col:64 class depth 0 index 3 _Fp
| |   | |-TemplateTypeParmDecl 0x7fe8b2152058 <col:69, col:78> col:78 class depth 0 index 4 ... _Args
| |   | `-CXXRecordDecl 0x7fe8b2152130 <line:4358:1, line:4360:1> line:4358:8 struct __nothrow_invokable_r_imp definition
| |   |   |-CXXRecordDecl 0x7fe8b21525e0 <col:1, col:8> col:8 implicit struct __nothrow_invokable_r_imp
| |   |   `-VarDecl 0x7fe8b2152688 <line:4359:3, col:29> col:21 value 'const _Bool' static cinit
| |   |     `-CXXBoolLiteralExpr 0x7fe8b21526e8 <col:29> '_Bool' false
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b2152bb8 <line:4362:1, line:4372:1> line:4363:8 struct __nothrow_invokable_r_imp definition
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 0
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-2...'
| |   | |-TemplateTypeParmDecl 0x7fe8b2152720 <line:4362:11, col:17> col:17 referenced class depth 0 index 0 _Ret
| |   | |-TemplateTypeParmDecl 0x7fe8b2152788 <col:23, col:29> col:29 referenced class depth 0 index 1 _Fp
| |   | |-TemplateTypeParmDecl 0x7fe8b21527f8 <col:34, col:43> col:43 referenced class depth 0 index 2 ... _Args
| |   | |-CXXRecordDecl 0x7fe8b2154200 <line:4363:1, col:8> col:8 implicit referenced struct __nothrow_invokable_r_imp
| |   | |-TypedefDecl 0x7fe8b21542a8 <line:4365:5, col:39> col:39 referenced _ThisT '__nothrow_invokable_r_imp<true, false, type-parameter-0-0, type-parameter-0-1, type-parameter-0-2...>'
| |   | | `-InjectedClassNameType 0x7fe8b2152d20 '__nothrow_invokable_r_imp<true, false, type-parameter-0-0, type-parameter-0-1, type-parameter-0-2...>' dependent
| |   | |   `-ClassTemplatePartialSpecialization 0x7fe8b2152bb8 '__nothrow_invokable_r_imp'
| |   | |-FunctionTemplateDecl 0x7fe8b2154560 <line:4367:5, line:4368:38> col:17 __test_noexcept
| |   | | |-TemplateTypeParmDecl 0x7fe8b2154300 <line:4367:15, col:21> col:21 referenced class depth 1 index 0 _Tp
| |   | | `-CXXMethodDecl 0x7fe8b21544c8 <line:4368:5, col:38> col:17 __test_noexcept 'void (_Tp) noexcept' static
| |   | |   `-ParmVarDecl 0x7fe8b2154390 <col:33> col:36 '_Tp'
| |   | `-VarDecl 0x7fe8b21545c8 <line:4370:5, line:4371:76> line:4370:23 value 'const _Bool' static cinit
| |   |   `-CXXNoexceptExpr 0x7fe8b2154aa8 <col:31, line:4371:76> '_Bool'
| |   |     `-CallExpr 0x7fe8b2154a78 <line:4370:40, line:4371:75> '<dependent type>'
| |   |       |-UnresolvedLookupExpr 0x7fe8b21546c8 <line:4370:40, col:68> '<dependent type>' lvalue (no ADL) = '__test_noexcept' 0x7fe8b2154560
| |   |       `-CallExpr 0x7fe8b2154a40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4371:74> '<dependent type>'
| |   |         |-UnresolvedLookupExpr 0x7fe8b2154790 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4371:16> '<overloaded function type>' lvalue (no ADL) = '__invoke' 0x7fe8b213aa48 0x7fe8b213e6e8 0x7fe8b2141888 0x7fe8b2144a08 0x7fe8b2147b38 0x7fe8b2149e98 0x7fe8b214c298 0x7fe8b214f478
| |   |         |-CallExpr 0x7fe8b21548f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4371:45> '<dependent type>'
| |   |         | `-UnresolvedLookupExpr 0x7fe8b2154860 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4371:43> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fe8b2082050
| |   |         `-PackExpansionExpr 0x7fe8b2154a20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4371:71> '<dependent type>'
| |   |           `-CallExpr 0x7fe8b21549f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4371:70> '<dependent type>'
| |   |             `-UnresolvedLookupExpr 0x7fe8b2154960 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4371:68> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fe8b2082050
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b2154f88 <line:4374:1, line:4379:1> line:4375:8 struct __nothrow_invokable_r_imp definition
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument integral 1
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument pack
| |   | | `-TemplateArgument type 'type-parameter-0-2...'
| |   | |-TemplateTypeParmDecl 0x7fe8b2154af0 <line:4374:11, col:17> col:17 referenced class depth 0 index 0 _Ret
| |   | |-TemplateTypeParmDecl 0x7fe8b2154b58 <col:23, col:29> col:29 referenced class depth 0 index 1 _Fp
| |   | |-TemplateTypeParmDecl 0x7fe8b2154bc8 <col:34, col:43> col:43 referenced class depth 0 index 2 ... _Args
| |   | |-CXXRecordDecl 0x7fe8b2155360 <line:4375:1, col:8> col:8 implicit struct __nothrow_invokable_r_imp
| |   | `-VarDecl 0x7fe8b2155408 <line:4377:5, line:4378:75> line:4377:23 value 'const _Bool' static cinit
| |   |   `-CXXNoexceptExpr 0x7fe8b2155780 <col:31, line:4378:75> '_Bool'
| |   |     `-CallExpr 0x7fe8b2155748 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4378:74> '<dependent type>'
| |   |       |-UnresolvedLookupExpr 0x7fe8b2155498 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4378:16> '<overloaded function type>' lvalue (no ADL) = '__invoke' 0x7fe8b213aa48 0x7fe8b213e6e8 0x7fe8b2141888 0x7fe8b2144a08 0x7fe8b2147b38 0x7fe8b2149e98 0x7fe8b214c298 0x7fe8b214f478
| |   |       |-CallExpr 0x7fe8b2155600 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4378:45> '<dependent type>'
| |   |       | `-UnresolvedLookupExpr 0x7fe8b2155568 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4378:43> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fe8b2082050
| |   |       `-PackExpansionExpr 0x7fe8b2155728 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4378:71> '<dependent type>'
| |   |         `-CallExpr 0x7fe8b2155700 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4378:70> '<dependent type>'
| |   |           `-UnresolvedLookupExpr 0x7fe8b2155668 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4378:68> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fe8b2082050
| |   |-TypeAliasTemplateDecl 0x7fe8b2155fd8 <line:4381:1, line:4387:5> line:4382:1 __nothrow_invokable_r
| |   | |-TemplateTypeParmDecl 0x7fe8b21557c8 <line:4381:11, col:17> col:17 referenced class depth 0 index 0 _Ret
| |   | |-TemplateTypeParmDecl 0x7fe8b2155838 <col:23, col:29> col:29 referenced class depth 0 index 1 _Fp
| |   | |-TemplateTypeParmDecl 0x7fe8b21558a8 <col:34, col:43> col:43 referenced class depth 0 index 2 ... _Args
| |   | `-TypeAliasDecl 0x7fe8b2155f78 <line:4382:1, line:4387:5> line:4382:7 __nothrow_invokable_r '__nothrow_invokable_r_imp<__invokable_r<_Ret, _Fp, _Args...>::value, is_void<_Ret>::value, _Ret, _Fp, _Args...>'
| |   |   `-TemplateSpecializationType 0x7fe8b2155db0 '__nothrow_invokable_r_imp<__invokable_r<_Ret, _Fp, _Args...>::value, is_void<_Ret>::value, _Ret, _Fp, _Args...>' dependent __nothrow_invokable_r_imp
| |   |     |-TemplateArgument expr
| |   |     | `-DependentScopeDeclRefExpr 0x7fe8b2155b10 <line:4384:13, col:49> '<dependent type>' lvalue
| |   |     |-TemplateArgument expr
| |   |     | `-DependentScopeDeclRefExpr 0x7fe8b2155c30 <line:4385:13, col:28> '<dependent type>' lvalue
| |   |     |-TemplateArgument type '_Ret'
| |   |     |-TemplateArgument type '_Fp'
| |   |     `-TemplateArgument type '_Args...'
| |   |-ClassTemplateDecl 0x7fe8b2156200 <line:4389:1, line:4395:1> line:4390:8 __invoke_of
| |   | |-TemplateTypeParmDecl 0x7fe8b2156028 <line:4389:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fe8b2156098 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | `-CXXRecordDecl 0x7fe8b2156128 <line:4390:1, line:4395:1> line:4390:8 struct __invoke_of definition
| |   |   |-public 'enable_if<__invokable<_Fp, _Args...>::value, typename __invokable_r<void, _Fp, _Args...>::_Result>'
| |   |   `-CXXRecordDecl 0x7fe8b2156c68 <col:1, col:8> col:8 implicit struct __invoke_of
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b2157028 <line:4399:1, line:4403:1> line:4400:28 class result_of definition
| |   | |-public '__invoke_of<_Fp, _Args...>'
| |   | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1...)'
| |   | |-TemplateTypeParmDecl 0x7fe8b2156d20 <line:4399:11, col:17> col:17 referenced class depth 0 index 0 _Fp
| |   | |-TemplateTypeParmDecl 0x7fe8b2156d88 <col:22, col:31> col:31 referenced class depth 0 index 1 ... _Args
| |   | |-TypeVisibilityAttr 0x7fe8b2157180 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | `-CXXRecordDecl 0x7fe8b21573f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4400:1, col:28> col:28 implicit class result_of
| |   |-TypeAliasTemplateDecl 0x7fe8b21576f0 <line:4406:1, col:67> col:22 result_of_t
| |   | |-TemplateTypeParmDecl 0x7fe8b21574b0 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fe8b2157690 <col:22, col:67> col:28 result_of_t 'typename result_of<_Tp>::type'
| |   |   `-DependentNameType 0x7fe8b2157620 'typename result_of<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fe8b2157858 <line:4440:1, col:29> col:29 __is_swappable
| |   | |-TemplateTypeParmDecl 0x7fe8b2157740 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b21577c0 <col:22, col:29> col:29 struct __is_swappable
| |   |-ClassTemplateDecl 0x7fe8b2157b88 <line:4441:1, col:29> col:29 __is_nothrow_swappable
| |   | |-TemplateTypeParmDecl 0x7fe8b2157a68 <col:11, col:17> col:17 class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b2157af0 <col:22, col:29> col:29 struct __is_nothrow_swappable
| |   |-FunctionTemplateDecl 0x7fe8b2158768 <line:4443:1, line:4460:1> line:4454:1 swap
| |   | |-TemplateTypeParmDecl 0x7fe8b2157d98 <line:4443:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fe8b21586d0 <line:4444:1, line:4460:1> line:4454:1 swap 'typename enable_if<is_move_constructible<_Tp>::value && is_move_assignable<_Tp>::value>::type (_Tp &, _Tp &) noexcept(is_nothrow_move_constructible<_Tp>::value && is_nothrow_move_assignable<_Tp>::value)' inline
| |   |   |-ParmVarDecl 0x7fe8b21582b8 <col:6, col:11> col:11 referenced __x '_Tp &'
| |   |   |-ParmVarDecl 0x7fe8b2158328 <col:16, col:21> col:21 referenced __y '_Tp &'
| |   |   |-CompoundStmt 0x7fe8b2158c48 <line:4456:1, line:4460:1>
| |   |   | |-DeclStmt 0x7fe8b21589d0 <line:4457:5, col:30>
| |   |   | | `-VarDecl 0x7fe8b21588b8 <col:5, col:29> col:9 referenced __t '_Tp' callinit
| |   |   | |   `-ParenListExpr 0x7fe8b21589a0 <col:12, col:29> 'NULL TYPE'
| |   |   | |     `-CallExpr 0x7fe8b2158940 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4457:28> '<dependent type>'
| |   |   | |       |-UnresolvedLookupExpr 0x7fe8b2158850 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4457:20> '<overloaded function type>' lvalue (no ADL) = 'move' 0x7fe8b20f7638
| |   |   | |       `-DeclRefExpr 0x7fe8b2158918 <col:25> '_Tp' lvalue ParmVar 0x7fe8b21582b8 '__x' '_Tp &'
| |   |   | |-BinaryOperator 0x7fe8b2158af0 <line:4458:5, col:26> '<dependent type>' '='
| |   |   | | |-DeclRefExpr 0x7fe8b21589e8 <col:5> '_Tp' lvalue ParmVar 0x7fe8b21582b8 '__x' '_Tp &'
| |   |   | | `-CallExpr 0x7fe8b2158ac0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4458:26> '<dependent type>'
| |   |   | |   |-UnresolvedLookupExpr 0x7fe8b2158a40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4458:18> '<overloaded function type>' lvalue (no ADL) = 'move' 0x7fe8b20f7638
| |   |   | |   `-DeclRefExpr 0x7fe8b2158a98 <col:23> '_Tp' lvalue ParmVar 0x7fe8b2158328 '__y' '_Tp &'
| |   |   | `-BinaryOperator 0x7fe8b2158c20 <line:4459:5, col:26> '<dependent type>' '='
| |   |   |   |-DeclRefExpr 0x7fe8b2158b18 <col:5> '_Tp' lvalue ParmVar 0x7fe8b2158328 '__y' '_Tp &'
| |   |   |   `-CallExpr 0x7fe8b2158bf0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4459:26> '<dependent type>'
| |   |   |     |-UnresolvedLookupExpr 0x7fe8b2158b70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4459:18> '<overloaded function type>' lvalue (no ADL) = 'move' 0x7fe8b20f7638
| |   |   |     `-DeclRefExpr 0x7fe8b2158bc8 <col:23> '_Tp' lvalue Var 0x7fe8b21588b8 '__t' '_Tp'
| |   |   |-AlwaysInlineAttr 0x7fe8b21587c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fe8b2158810 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fe8b21595d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4462:1, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:759:35> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4467:1 swap
| |   | |-TemplateTypeParmDecl 0x7fe8b2158c78 <line:4462:10, col:16> col:16 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fe8b2158cf8 <col:21, col:28> col:28 referenced 'size_t':'unsigned long' depth 0 index 1 _Np
| |   | `-FunctionDecl 0x7fe8b2159540 <line:4463:1, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:759:35> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4467:1 swap 'typename enable_if<__is_swappable<_Tp>::value>::type (_Tp (&)[_Np], _Tp (&)[_Np]) noexcept(__is_nothrow_swappable<_Tp>::value)' inline
| |   |   |-ParmVarDecl 0x7fe8b2159198 <col:6, col:20> col:12 __a '_Tp (&)[_Np]'
| |   |   |-ParmVarDecl 0x7fe8b21592e8 <col:23, col:37> col:29 __b '_Tp (&)[_Np]'
| |   |   |-AlwaysInlineAttr 0x7fe8b2159638 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fe8b2159680 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fe8b2159cf8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4469:1, line:4478:1> line:4472:1 iter_swap
| |   | |-TemplateTypeParmDecl 0x7fe8b2159690 <line:4469:11, col:17> col:17 referenced class depth 0 index 0 _ForwardIterator1
| |   | |-TemplateTypeParmDecl 0x7fe8b21596f8 <col:36, col:42> col:42 referenced class depth 0 index 1 _ForwardIterator2
| |   | `-FunctionDecl 0x7fe8b2159c60 <line:4470:1, line:4478:1> line:4472:1 iter_swap 'void (_ForwardIterator1, _ForwardIterator2) noexcept(noexcept(swap(*std::__1::declval<_ForwardIterator1>(), *std::__1::declval<_ForwardIterator2>())))' inline
| |   |   |-ParmVarDecl 0x7fe8b21597c8 <col:11, col:29> col:29 referenced __a '_ForwardIterator1'
| |   |   |-ParmVarDecl 0x7fe8b2159838 <col:34, col:52> col:52 referenced __b '_ForwardIterator2'
| |   |   |-CompoundStmt 0x7fe8b2159ed8 <line:4476:1, line:4478:1>
| |   |   | `-CallExpr 0x7fe8b2159ea0 <line:4477:5, col:20> '<dependent type>'
| |   |   |   |-UnresolvedLookupExpr 0x7fe8b2159db0 <col:5> '<overloaded function type>' lvalue (ADL) = 'swap' 0x7fe8b21595d8 0x7fe8b2158768
| |   |   |   |-UnaryOperator 0x7fe8b2159e38 <col:10, col:11> '<dependent type>' prefix '*'
| |   |   |   | `-DeclRefExpr 0x7fe8b2159e10 <col:11> '_ForwardIterator1' lvalue ParmVar 0x7fe8b21597c8 '__a' '_ForwardIterator1'
| |   |   |   `-UnaryOperator 0x7fe8b2159e80 <col:16, col:17> '<dependent type>' prefix '*'
| |   |   |     `-DeclRefExpr 0x7fe8b2159e58 <col:17> '_ForwardIterator2' lvalue ParmVar 0x7fe8b2159838 '__b' '_ForwardIterator2'
| |   |   |-AlwaysInlineAttr 0x7fe8b2159d58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fe8b2159da0 <col:51, col:74> Hidden
| |   |-NamespaceDecl 0x7fe8b2159ef8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4482:1, line:4521:1> line:4482:11 __detail
| |   | |-ClassTemplateDecl 0x7fe8b215a3f8 <line:4486:1, line:4502:1> line:4488:8 __swappable_with
| |   | | |-TemplateTypeParmDecl 0x7fe8b2159f60 <line:4486:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | | |-TemplateTypeParmDecl 0x7fe8b2159fd8 <col:22, col:34> col:28 referenced class depth 0 index 1 _Up
| |   | | | `-TemplateArgument type '_Tp'
| |   | | |-NonTypeTemplateParmDecl 0x7fe8b215a2e0 <line:4487:11, col:66> col:16 '_Bool' depth 0 index 2 _NotVoid
| |   | | | `-TemplateArgument expr
| |   | | |   `-BinaryOperator 0x7fe8b215a2a8 <col:27, col:66> '<dependent type>' '&&'
| |   | | |     |-UnaryOperator 0x7fe8b215a158 <col:27, col:42> '<dependent type>' prefix '!'
| |   | | |     | `-DependentScopeDeclRefExpr 0x7fe8b215a118 <col:28, col:42> '<dependent type>' lvalue
| |   | | |     `-UnaryOperator 0x7fe8b215a288 <col:51, col:66> '<dependent type>' prefix '!'
| |   | | |       `-DependentScopeDeclRefExpr 0x7fe8b215a248 <col:52, col:66> '<dependent type>' lvalue
| |   | | `-CXXRecordDecl 0x7fe8b215a360 <line:4488:1, line:4502:1> line:4488:8 struct __swappable_with definition
| |   | |   |-CXXRecordDecl 0x7fe8b215a700 <col:1, col:8> col:8 implicit struct __swappable_with
| |   | |   |-FunctionTemplateDecl 0x7fe8b215adb8 <line:4490:5, line:4492:20> col:5 __test_swap
| |   | |   | |-TemplateTypeParmDecl 0x7fe8b215a798 <line:4490:15, col:21> col:21 referenced class depth 1 index 0 _LHS
| |   | |   | |-TemplateTypeParmDecl 0x7fe8b215a808 <col:27, col:33> col:33 referenced class depth 1 index 1 _RHS
| |   | |   | `-CXXMethodDecl 0x7fe8b215ad20 <line:4491:5, line:4492:20> col:5 __test_swap 'decltype(swap(std::__1::declval<_LHS>(), std::__1::declval<_RHS>())) (int)' static
| |   | |   |   `-ParmVarDecl 0x7fe8b215ab78 <col:17> col:20 'int'
| |   | |   |-FunctionTemplateDecl 0x7fe8b215b078 <line:4493:5, line:4494:34> col:18 __test_swap
| |   | |   | |-TemplateTypeParmDecl 0x7fe8b215ae10 <line:4493:15> col:15 class depth 1 index 0
| |   | |   | |-TemplateTypeParmDecl 0x7fe8b215ae78 <col:22> col:22 class depth 1 index 1
| |   | |   | `-CXXMethodDecl 0x7fe8b215afe0 <line:4494:5, col:34> col:18 __test_swap 'struct std::__1::__nat (long)' static
| |   | |   |   `-ParmVarDecl 0x7fe8b215af20 <col:30> col:34 'long'
| |   | |   |-TypedefDecl 0x7fe8b215b2c8 <line:4497:5, col:50> col:50 referenced __swap1 'decltype((__test_swap<_Tp, _Up>(0)))'
| |   | |   | `-DecltypeType 0x7fe8b215b290 'decltype((__test_swap<_Tp, _Up>(0)))' dependent
| |   | |   |   `-ParenExpr 0x7fe8b215b228 <col:22, col:47> '<dependent type>'
| |   | |   |     `-CallExpr 0x7fe8b215b1f8 <col:23, col:46> '<dependent type>'
| |   | |   |       |-UnresolvedLookupExpr 0x7fe8b215b108 <col:23, col:43> '<dependent type>' lvalue (no ADL) = '__test_swap' 0x7fe8b215b078 0x7fe8b215adb8
| |   | |   |       `-IntegerLiteral 0x7fe8b215b1d8 <col:45> 'int' 0
| |   | |   |-TypedefDecl 0x7fe8b215b518 <line:4498:5, col:50> col:50 referenced __swap2 'decltype((__test_swap<_Up, _Tp>(0)))'
| |   | |   | `-DecltypeType 0x7fe8b215b4e0 'decltype((__test_swap<_Up, _Tp>(0)))' dependent
| |   | |   |   `-ParenExpr 0x7fe8b215b478 <col:22, col:47> '<dependent type>'
| |   | |   |     `-CallExpr 0x7fe8b215b448 <col:23, col:46> '<dependent type>'
| |   | |   |       |-UnresolvedLookupExpr 0x7fe8b215b358 <col:23, col:43> '<dependent type>' lvalue (no ADL) = '__test_swap' 0x7fe8b215b078 0x7fe8b215adb8
| |   | |   |       `-IntegerLiteral 0x7fe8b215b428 <col:45> 'int' 0
| |   | |   `-VarDecl 0x7fe8b215b580 <line:4500:5, line:4501:57> line:4500:23 value 'const _Bool' static cinit
| |   | |     `-BinaryOperator 0x7fe8b215b9b8 <col:31, line:4501:57> '<dependent type>' '&&'
| |   | |       |-UnaryOperator 0x7fe8b215b7a8 <line:4500:31, col:57> '<dependent type>' prefix '!'
| |   | |       | `-DependentScopeDeclRefExpr 0x7fe8b215b768 <col:32, col:57> '<dependent type>' lvalue
| |   | |       `-UnaryOperator 0x7fe8b215b998 <line:4501:31, col:57> '<dependent type>' prefix '!'
| |   | |         `-DependentScopeDeclRefExpr 0x7fe8b215b958 <col:32, col:57> '<dependent type>' lvalue
| |   | |-ClassTemplatePartialSpecializationDecl 0x7fe8b215bcc8 <line:4504:1, line:4505:57> col:8 struct __swappable_with definition
| |   | | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | |-TemplateArgument type 'type-parameter-0-1'
| |   | | |-TemplateArgument integral 0
| |   | | |-TemplateTypeParmDecl 0x7fe8b215ba00 <line:4504:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | | |-TemplateTypeParmDecl 0x7fe8b215ba68 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   | | `-CXXRecordDecl 0x7fe8b215bff0 <line:4505:1, col:8> col:8 implicit struct __swappable_with
| |   | |-ClassTemplateDecl 0x7fe8b215c740 <line:4507:1, line:4516:1> line:4508:8 __nothrow_swappable_with
| |   | | |-TemplateTypeParmDecl 0x7fe8b215c0a8 <line:4507:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | | |-TemplateTypeParmDecl 0x7fe8b215c128 <col:22, col:34> col:28 referenced class depth 0 index 1 _Up
| |   | | | `-TemplateArgument type '_Tp'
| |   | | |-NonTypeTemplateParmDecl 0x7fe8b215c628 <col:39, col:85> col:44 '_Bool' depth 0 index 2 _Swappable
| |   | | | `-TemplateArgument expr
| |   | | |   `-DependentScopeDeclRefExpr 0x7fe8b215c5d8 <col:57, col:85> '<dependent type>' lvalue
| |   | | `-CXXRecordDecl 0x7fe8b215c6a8 <line:4508:1, line:4516:1> line:4508:8 struct __nothrow_swappable_with definition
| |   | |   |-CXXRecordDecl 0x7fe8b215ca40 <col:1, col:8> col:8 implicit struct __nothrow_swappable_with
| |   | |   `-VarDecl 0x7fe8b215cae8 <line:4509:3, line:4512:66> line:4509:21 value 'const _Bool' static cinit
| |   | |     `-BinaryOperator 0x7fe8b215d0c8 <line:4511:7, line:4512:66> '_Bool' '&&'
| |   | |       |-CXXNoexceptExpr 0x7fe8b215cde0 <line:4511:7, col:66> '_Bool'
| |   | |       | `-CallExpr 0x7fe8b215cda8 <col:16, col:65> '<dependent type>'
| |   | |       |   |-UnresolvedLookupExpr 0x7fe8b215cb48 <col:16> '<overloaded function type>' lvalue (ADL) = 'swap' 0x7fe8b21595d8 0x7fe8b2158768
| |   | |       |   |-CallExpr 0x7fe8b215cc80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4511:41> '<dependent type>'
| |   | |       |   | `-UnresolvedLookupExpr 0x7fe8b215cbe8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4511:39> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fe8b2082050
| |   | |       |   `-CallExpr 0x7fe8b215cd80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4511:64> '<dependent type>'
| |   | |       |     `-UnresolvedLookupExpr 0x7fe8b215cce8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4511:62> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fe8b2082050
| |   | |       `-CXXNoexceptExpr 0x7fe8b215d0a0 <line:4512:7, col:66> '_Bool'
| |   | |         `-CallExpr 0x7fe8b215d068 <col:16, col:65> '<dependent type>'
| |   | |           |-UnresolvedLookupExpr 0x7fe8b215ce08 <col:16> '<overloaded function type>' lvalue (ADL) = 'swap' 0x7fe8b21595d8 0x7fe8b2158768
| |   | |           |-CallExpr 0x7fe8b215cf40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4512:41> '<dependent type>'
| |   | |           | `-UnresolvedLookupExpr 0x7fe8b215cea8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4512:39> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fe8b2082050
| |   | |           `-CallExpr 0x7fe8b215d040 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4512:64> '<dependent type>'
| |   | |             `-UnresolvedLookupExpr 0x7fe8b215cfa8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4512:62> '<dependent type>' lvalue (no ADL) = 'declval' 0x7fe8b2082050
| |   | `-ClassTemplatePartialSpecializationDecl 0x7fe8b215d3d8 <line:4518:1, line:4519:64> col:8 struct __nothrow_swappable_with definition
| |   |   |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   |   |-TemplateArgument type 'type-parameter-0-0'
| |   |   |-TemplateArgument type 'type-parameter-0-1'
| |   |   |-TemplateArgument integral 0
| |   |   |-TemplateTypeParmDecl 0x7fe8b215d110 <line:4518:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   |   |-TemplateTypeParmDecl 0x7fe8b215d178 <col:22, col:28> col:28 referenced class depth 0 index 1 _Up
| |   |   `-CXXRecordDecl 0x7fe8b215d700 <line:4519:1, col:8> col:8 implicit struct __nothrow_swappable_with
| |   |-ClassTemplateDecl 0x7fe8b215d8d8 prev 0x7fe8b2157858 <line:4523:1, line:4527:1> line:4524:8 __is_swappable
| |   | |-TemplateTypeParmDecl 0x7fe8b215d7b8 <line:4523:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b215d840 prev 0x7fe8b21577c0 <line:4524:1, line:4527:1> line:4524:8 struct __is_swappable definition
| |   |   |-public 'integral_constant<_Bool, __detail::__swappable_with<_Tp &>::value>'
| |   |   `-CXXRecordDecl 0x7fe8b215e048 <col:1, col:8> col:8 implicit struct __is_swappable
| |   |-ClassTemplateDecl 0x7fe8b215e298 prev 0x7fe8b2157b88 <line:4529:1, line:4533:1> line:4530:8 __is_nothrow_swappable
| |   | |-TemplateTypeParmDecl 0x7fe8b215e100 <line:4529:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b215e200 prev 0x7fe8b2157af0 <line:4530:1, line:4533:1> line:4530:8 struct __is_nothrow_swappable definition
| |   |   |-public 'integral_constant<_Bool, __detail::__nothrow_swappable_with<_Tp &>::value>'
| |   |   `-CXXRecordDecl 0x7fe8b215eac8 <col:1, col:8> col:8 implicit struct __is_nothrow_swappable
| |   |-ClassTemplateDecl 0x7fe8b215ec98 <line:4589:1, line:4593:1> line:4590:8 underlying_type
| |   | |-TemplateTypeParmDecl 0x7fe8b215eb80 <line:4589:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b215ec00 <line:4590:1, line:4593:1> line:4590:8 struct underlying_type definition
| |   |   |-CXXRecordDecl 0x7fe8b215ef10 <col:1, col:8> col:8 implicit struct underlying_type
| |   |   `-TypedefDecl 0x7fe8b215f050 <line:4592:5, col:42> col:42 type '__underlying_type(_Tp)'
| |   |     `-UnaryTransformType 0x7fe8b215f000 '__underlying_type(_Tp)' dependent underlying_type
| |   |       `-TemplateTypeParmType 0x7fe8b215ebc0 '_Tp' dependent depth 0 index 0
| |   |         `-TemplateTypeParm 0x7fe8b215eb80 '_Tp'
| |   |-TypeAliasTemplateDecl 0x7fe8b215f310 <line:4596:1, col:79> col:22 underlying_type_t
| |   | |-TemplateTypeParmDecl 0x7fe8b215f0c8 <col:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-TypeAliasDecl 0x7fe8b215f2b0 <col:22, col:79> col:28 underlying_type_t 'typename underlying_type<_Tp>::type'
| |   |   `-DependentNameType 0x7fe8b215f240 'typename underlying_type<_Tp>::type' dependent
| |   |-ClassTemplateDecl 0x7fe8b215f5f8 <line:4612:1, line:4617:1> line:4613:8 __sfinae_underlying_type
| |   | |-TemplateTypeParmDecl 0x7fe8b215f360 <line:4612:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fe8b215f4e8 <col:22, col:43> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fe8b215f498 <col:29, col:43> '<dependent type>' lvalue
| |   | `-CXXRecordDecl 0x7fe8b215f560 <line:4613:1, line:4617:1> line:4613:8 struct __sfinae_underlying_type definition
| |   |   |-CXXRecordDecl 0x7fe8b215f8c0 <col:1, col:8> col:8 implicit struct __sfinae_underlying_type
| |   |   |-TypedefDecl 0x7fe8b215fa80 <line:4615:5, col:49> col:49 referenced type 'typename underlying_type<_Tp>::type'
| |   |   | `-DependentNameType 0x7fe8b215fa10 'typename underlying_type<_Tp>::type' dependent
| |   |   `-TypedefDecl 0x7fe8b215fc38 <line:4616:5, col:37> col:37 __promoted_type 'decltype(((std::__1::__sfinae_underlying_type::type)1) + 0)'
| |   |     `-DecltypeType 0x7fe8b215fc00 'decltype(((std::__1::__sfinae_underlying_type::type)1) + 0)' dependent
| |   |       `-BinaryOperator 0x7fe8b215fb98 <col:22, col:34> '<dependent type>' '+'
| |   |         |-ParenExpr 0x7fe8b215fb58 <col:22, col:30> 'std::__1::__sfinae_underlying_type::type':'typename underlying_type<_Tp>::type'
| |   |         | `-CStyleCastExpr 0x7fe8b215fb30 <col:23, col:29> 'std::__1::__sfinae_underlying_type::type':'typename underlying_type<_Tp>::type' <Dependent>
| |   |         |   `-IntegerLiteral 0x7fe8b215fb00 <col:29> 'int' 1
| |   |         `-IntegerLiteral 0x7fe8b215fb78 <col:34> 'int' 0
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b215fe90 <line:4619:1, line:4620:46> col:8 struct __sfinae_underlying_type definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fe8b215fcb0 <line:4619:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b2160120 <line:4620:1, col:8> col:8 implicit struct __sfinae_underlying_type
| |   |-FunctionDecl 0x7fe8b21612e8 <line:4622:1, line:4623:54> col:5 __convert_to_integral 'int (int)' inline
| |   | |-ParmVarDecl 0x7fe8b2161220 <col:27, col:31> col:31 used __val 'int'
| |   | |-CompoundStmt 0x7fe8b2161438 <col:38, col:54>
| |   | | `-ReturnStmt 0x7fe8b2161420 <col:40, col:47>
| |   | |   `-ImplicitCastExpr 0x7fe8b2161408 <col:47> 'int' <LValueToRValue>
| |   | |     `-DeclRefExpr 0x7fe8b21613e0 <col:47> 'int' lvalue ParmVar 0x7fe8b2161220 '__val' 'int'
| |   | |-AlwaysInlineAttr 0x7fe8b2161388 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | `-VisibilityAttr 0x7fe8b21613d0 <col:51, col:74> Hidden
| |   |-FunctionDecl 0x7fe8b2161568 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4625:1, line:4626:64> col:10 __convert_to_integral 'unsigned int (unsigned int)' inline
| |   | |-ParmVarDecl 0x7fe8b21614a0 <col:32, col:41> col:41 used __val 'unsigned int'
| |   | |-CompoundStmt 0x7fe8b21616b8 <col:48, col:64>
| |   | | `-ReturnStmt 0x7fe8b21616a0 <col:50, col:57>
| |   | |   `-ImplicitCastExpr 0x7fe8b2161688 <col:57> 'unsigned int' <LValueToRValue>
| |   | |     `-DeclRefExpr 0x7fe8b2161660 <col:57> 'unsigned int' lvalue ParmVar 0x7fe8b21614a0 '__val' 'unsigned int'
| |   | |-AlwaysInlineAttr 0x7fe8b2161608 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | `-VisibilityAttr 0x7fe8b2161650 <col:51, col:74> Hidden
| |   |-FunctionDecl 0x7fe8b21617e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4628:1, line:4629:56> col:6 __convert_to_integral 'long (long)' inline
| |   | |-ParmVarDecl 0x7fe8b2161720 <col:28, col:33> col:33 used __val 'long'
| |   | |-CompoundStmt 0x7fe8b2161938 <col:40, col:56>
| |   | | `-ReturnStmt 0x7fe8b2161920 <col:42, col:49>
| |   | |   `-ImplicitCastExpr 0x7fe8b2161908 <col:49> 'long' <LValueToRValue>
| |   | |     `-DeclRefExpr 0x7fe8b21618e0 <col:49> 'long' lvalue ParmVar 0x7fe8b2161720 '__val' 'long'
| |   | |-AlwaysInlineAttr 0x7fe8b2161888 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | `-VisibilityAttr 0x7fe8b21618d0 <col:51, col:74> Hidden
| |   |-FunctionDecl 0x7fe8b2161a68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4631:1, line:4632:74> col:15 __convert_to_integral 'unsigned long (unsigned long)' inline
| |   | |-ParmVarDecl 0x7fe8b21619a0 <col:37, col:51> col:51 used __val 'unsigned long'
| |   | |-CompoundStmt 0x7fe8b2161bb8 <col:58, col:74>
| |   | | `-ReturnStmt 0x7fe8b2161ba0 <col:60, col:67>
| |   | |   `-ImplicitCastExpr 0x7fe8b2161b88 <col:67> 'unsigned long' <LValueToRValue>
| |   | |     `-DeclRefExpr 0x7fe8b2161b60 <col:67> 'unsigned long' lvalue ParmVar 0x7fe8b21619a0 '__val' 'unsigned long'
| |   | |-AlwaysInlineAttr 0x7fe8b2161b08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | `-VisibilityAttr 0x7fe8b2161b50 <col:51, col:74> Hidden
| |   |-FunctionDecl 0x7fe8b2161ce8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4634:1, line:4635:66> col:11 __convert_to_integral 'long long (long long)' inline
| |   | |-ParmVarDecl 0x7fe8b2161c20 <col:33, col:43> col:43 used __val 'long long'
| |   | |-CompoundStmt 0x7fe8b2161e38 <col:50, col:66>
| |   | | `-ReturnStmt 0x7fe8b2161e20 <col:52, col:59>
| |   | |   `-ImplicitCastExpr 0x7fe8b2161e08 <col:59> 'long long' <LValueToRValue>
| |   | |     `-DeclRefExpr 0x7fe8b2161de0 <col:59> 'long long' lvalue ParmVar 0x7fe8b2161c20 '__val' 'long long'
| |   | |-AlwaysInlineAttr 0x7fe8b2161d88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | `-VisibilityAttr 0x7fe8b2161dd0 <col:51, col:74> Hidden
| |   |-FunctionDecl 0x7fe8b2161f68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4637:1, line:4638:83> col:20 __convert_to_integral 'unsigned long long (unsigned long long)' inline
| |   | |-ParmVarDecl 0x7fe8b2161ea0 <col:42, col:61> col:61 used __val 'unsigned long long'
| |   | |-CompoundStmt 0x7fe8b21620b8 <col:68, col:83>
| |   | | `-ReturnStmt 0x7fe8b21620a0 <col:69, col:76>
| |   | |   `-ImplicitCastExpr 0x7fe8b2162088 <col:76> 'unsigned long long' <LValueToRValue>
| |   | |     `-DeclRefExpr 0x7fe8b2162060 <col:76> 'unsigned long long' lvalue ParmVar 0x7fe8b2161ea0 '__val' 'unsigned long long'
| |   | |-AlwaysInlineAttr 0x7fe8b2162008 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | `-VisibilityAttr 0x7fe8b2162050 <col:51, col:74> Hidden
| |   |-FunctionDecl 0x7fe8b2162220 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4641:1, line:4642:68> col:12 __convert_to_integral '__int128_t (__int128_t)' inline
| |   | |-ParmVarDecl 0x7fe8b2162118 <col:34, col:45> col:45 used __val '__int128_t':'__int128'
| |   | |-CompoundStmt 0x7fe8b2162370 <col:52, col:68>
| |   | | `-ReturnStmt 0x7fe8b2162358 <col:54, col:61>
| |   | |   `-ImplicitCastExpr 0x7fe8b2162340 <col:61> '__int128_t':'__int128' <LValueToRValue>
| |   | |     `-DeclRefExpr 0x7fe8b2162318 <col:61> '__int128_t':'__int128' lvalue ParmVar 0x7fe8b2162118 '__val' '__int128_t':'__int128'
| |   | |-AlwaysInlineAttr 0x7fe8b21622c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | `-VisibilityAttr 0x7fe8b2162308 <col:51, col:74> Hidden
| |   |-FunctionDecl 0x7fe8b21624d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4644:1, line:4645:70> col:13 __convert_to_integral '__uint128_t (__uint128_t)' inline
| |   | |-ParmVarDecl 0x7fe8b21623d0 <col:35, col:47> col:47 used __val '__uint128_t':'unsigned __int128'
| |   | |-CompoundStmt 0x7fe8b2162620 <col:54, col:70>
| |   | | `-ReturnStmt 0x7fe8b2162608 <col:56, col:63>
| |   | |   `-ImplicitCastExpr 0x7fe8b21625f0 <col:63> '__uint128_t':'unsigned __int128' <LValueToRValue>
| |   | |     `-DeclRefExpr 0x7fe8b21625c8 <col:63> '__uint128_t':'unsigned __int128' lvalue ParmVar 0x7fe8b21623d0 '__val' '__uint128_t':'unsigned __int128'
| |   | |-AlwaysInlineAttr 0x7fe8b2162570 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | `-VisibilityAttr 0x7fe8b21625b8 <col:51, col:74> Hidden
| |   |-FunctionTemplateDecl 0x7fe8b2162b68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4648:1, line:4651:50> col:1 __convert_to_integral
| |   | |-TemplateTypeParmDecl 0x7fe8b2162640 <line:4648:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-FunctionDecl 0x7fe8b2162ad0 <line:4649:1, line:4651:50> col:1 __convert_to_integral 'typename __sfinae_underlying_type<_Tp>::__promoted_type (_Tp)' inline
| |   |   |-ParmVarDecl 0x7fe8b21629c0 <col:23, col:27> col:27 referenced __val '_Tp'
| |   |   |-CompoundStmt 0x7fe8b2162c58 <col:34, col:50>
| |   |   | `-ReturnStmt 0x7fe8b2162c40 <col:36, col:43>
| |   |   |   `-DeclRefExpr 0x7fe8b2162c18 <col:43> '_Tp' lvalue ParmVar 0x7fe8b21629c0 '__val' '_Tp'
| |   |   |-AlwaysInlineAttr 0x7fe8b2162bc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   `-VisibilityAttr 0x7fe8b2162c08 <col:51, col:74> Hidden
| |   |-ClassTemplateDecl 0x7fe8b2162d98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:4655:1, line:4665:1> line:4656:8 __has_operator_addressof_member_imp
| |   | |-TemplateTypeParmDecl 0x7fe8b2162c78 <line:4655:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b2162d00 <line:4656:1, line:4665:1> line:4656:8 struct __has_operator_addressof_member_imp definition
| |   |   |-CXXRecordDecl 0x7fe8b2163010 <col:1, col:8> col:8 implicit struct __has_operator_addressof_member_imp
| |   |   |-FunctionTemplateDecl 0x7fe8b2163718 <line:4658:5, line:4660:95> line:4659:21 __test
| |   |   | |-TemplateTypeParmDecl 0x7fe8b21630a8 <line:4658:15, col:21> col:21 referenced class depth 1 index 0 _Up
| |   |   | `-CXXMethodDecl 0x7fe8b2163680 <line:4659:9, line:4660:95> line:4659:21 __test 'auto (int) -> typename __select_2nd<decltype(std::__1::declval<_Up>().operator&()), true_type>::type' static
| |   |   |   `-ParmVarDecl 0x7fe8b2163148 <col:28> col:31 'int'
| |   |   |-FunctionTemplateDecl 0x7fe8b21639b8 <line:4661:5, line:4662:37> col:21 __test
| |   |   | |-TemplateTypeParmDecl 0x7fe8b2163770 <line:4661:15> col:15 class depth 1 index 0
| |   |   | `-CXXMethodDecl 0x7fe8b2163920 <line:4662:9, col:37> col:21 __test 'auto (long) -> std::__1::false_type' static
| |   |   |   `-ParmVarDecl 0x7fe8b2163808 <col:28> col:32 'long'
| |   |   `-VarDecl 0x7fe8b2163a20 <line:4664:5, col:57> col:23 value 'const _Bool' static cinit
| |   |     `-DependentScopeDeclRefExpr 0x7fe8b2163c58 <col:31, col:57> '<dependent type>' lvalue
| |   |-ClassTemplateDecl 0x7fe8b2163dd8 <line:4667:1, line:4677:1> line:4668:8 __has_operator_addressof_free_imp
| |   | |-TemplateTypeParmDecl 0x7fe8b2163cb8 <line:4667:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b2163d40 <line:4668:1, line:4677:1> line:4668:8 struct __has_operator_addressof_free_imp definition
| |   |   |-CXXRecordDecl 0x7fe8b2164050 <col:1, col:8> col:8 implicit struct __has_operator_addressof_free_imp
| |   |   |-FunctionTemplateDecl 0x7fe8b2164758 <line:4670:5, line:4672:94> line:4671:21 __test
| |   |   | |-TemplateTypeParmDecl 0x7fe8b21640e8 <line:4670:15, col:21> col:21 referenced class depth 1 index 0 _Up
| |   |   | `-CXXMethodDecl 0x7fe8b21646c0 <line:4671:9, line:4672:94> line:4671:21 __test 'auto (int) -> typename __select_2nd<decltype(operator&(std::__1::declval<_Up>())), true_type>::type' static
| |   |   |   `-ParmVarDecl 0x7fe8b2164188 <col:28> col:31 'int'
| |   |   |-FunctionTemplateDecl 0x7fe8b2164978 <line:4673:5, line:4674:37> col:21 __test
| |   |   | |-TemplateTypeParmDecl 0x7fe8b21647b0 <line:4673:15> col:15 class depth 1 index 0
| |   |   | `-CXXMethodDecl 0x7fe8b21648e0 <line:4674:9, col:37> col:21 __test 'auto (long) -> std::__1::false_type' static
| |   |   |   `-ParmVarDecl 0x7fe8b2164848 <col:28> col:32 'long'
| |   |   `-VarDecl 0x7fe8b21649e0 <line:4676:5, col:57> col:23 value 'const _Bool' static cinit
| |   |     `-DependentScopeDeclRefExpr 0x7fe8b2164bd8 <col:31, col:57> '<dependent type>' lvalue
| |   |-ClassTemplateDecl 0x7fe8b2164d58 <line:4679:1, line:4683:2> line:4680:8 __has_operator_addressof
| |   | |-TemplateTypeParmDecl 0x7fe8b2164c38 <line:4679:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b2164cc0 <line:4680:1, line:4683:2> line:4680:8 struct __has_operator_addressof definition
| |   |   |-public 'integral_constant<_Bool, __has_operator_addressof_member_imp<_Tp>::value || __has_operator_addressof_free_imp<_Tp>::value>'
| |   |   `-CXXRecordDecl 0x7fe8b21653f8 <col:1, col:8> col:8 implicit struct __has_operator_addressof
| |   |-CXXRecordDecl 0x7fe8b21654b0 <line:4709:1, col:32> col:8 referenced struct __extract_key_fail_tag definition
| |   | `-CXXRecordDecl 0x7fe8b21655d8 <col:1, col:8> col:8 implicit struct __extract_key_fail_tag
| |   |-CXXRecordDecl 0x7fe8b2165690 <line:4710:1, col:32> col:8 referenced struct __extract_key_self_tag definition
| |   | `-CXXRecordDecl 0x7fe8b21657b8 <col:1, col:8> col:8 implicit struct __extract_key_self_tag
| |   |-CXXRecordDecl 0x7fe8b2165870 <line:4711:1, col:33> col:8 referenced struct __extract_key_first_tag definition
| |   | `-CXXRecordDecl 0x7fe8b2165998 <col:1, col:8> col:8 implicit struct __extract_key_first_tag
| |   |-ClassTemplateDecl 0x7fe8b2165db8 <line:4713:1, line:4717:50> line:4715:8 __can_extract_key
| |   | |-TemplateTypeParmDecl 0x7fe8b2165a50 <line:4713:11, col:17> col:17 referenced class depth 0 index 0 _ValTy
| |   | |-TemplateTypeParmDecl 0x7fe8b2165ab8 <col:25, col:31> col:31 referenced class depth 0 index 1 _Key
| |   | |-TemplateTypeParmDecl 0x7fe8b2165c90 <line:4714:11, col:60> col:17 referenced class depth 0 index 2 _RawValTy
| |   | | `-TemplateArgument type 'typename __unconstref<_ValTy>::type'
| |   | `-CXXRecordDecl 0x7fe8b2165d20 <line:4715:1, line:4717:50> line:4715:8 struct __can_extract_key definition
| |   |   |-public 'conditional<is_same<_RawValTy, _Key>::value, struct __extract_key_self_tag, struct __extract_key_fail_tag>::type'
| |   |   `-CXXRecordDecl 0x7fe8b21664f0 <col:1, col:8> col:8 implicit struct __can_extract_key
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b2166ac8 <line:4719:1, line:4722:75> line:4720:8 struct __can_extract_key definition
| |   | |-public 'conditional<is_same<typename remove_const<_First>::type, _Key>::value, struct __extract_key_first_tag, struct __extract_key_fail_tag>::type'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument type 'pair<type-parameter-0-2, type-parameter-0-3>'
| |   | |-TemplateTypeParmDecl 0x7fe8b21665a8 <line:4719:11, col:17> col:17 referenced class depth 0 index 0 _Pair
| |   | |-TemplateTypeParmDecl 0x7fe8b2166618 <col:24, col:30> col:30 referenced class depth 0 index 1 _Key
| |   | |-TemplateTypeParmDecl 0x7fe8b2166688 <col:36, col:42> col:42 referenced class depth 0 index 2 _First
| |   | |-TemplateTypeParmDecl 0x7fe8b21666f8 <col:50, col:56> col:56 referenced class depth 0 index 3 _Second
| |   | `-CXXRecordDecl 0x7fe8b2178460 <line:4720:1, col:8> col:8 implicit struct __can_extract_key
| |   |-ClassTemplateDecl 0x7fe8b21788c0 <line:4727:1, line:4730:65> line:4729:8 __can_extract_map_key
| |   | |-TemplateTypeParmDecl 0x7fe8b2178518 <line:4727:11, col:17> col:17 referenced class depth 0 index 0 _ValTy
| |   | |-TemplateTypeParmDecl 0x7fe8b2178588 <col:25, col:31> col:31 referenced class depth 0 index 1 _Key
| |   | |-TemplateTypeParmDecl 0x7fe8b21785f8 <col:37, col:43> col:43 class depth 0 index 2 _ContainerValueTy
| |   | |-TemplateTypeParmDecl 0x7fe8b2178790 <line:4728:11, col:60> col:17 referenced class depth 0 index 3 _RawValTy
| |   | | `-TemplateArgument type 'typename __unconstref<_ValTy>::type'
| |   | `-CXXRecordDecl 0x7fe8b2178828 <line:4729:1, line:4730:65> line:4729:8 struct __can_extract_map_key definition
| |   |   |-public 'integral_constant<_Bool, is_same<_RawValTy, _Key>::value>'
| |   |   `-CXXRecordDecl 0x7fe8b2178f08 <col:1, col:8> col:8 implicit struct __can_extract_map_key
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b2179360 <line:4734:1, line:4736:19> line:4735:8 struct __can_extract_map_key definition
| |   | |-public 'std::__1::false_type':'struct std::__1::integral_constant<_Bool, false>'
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | |-TemplateArgument type 'type-parameter-0-2'
| |   | |-TemplateTypeParmDecl 0x7fe8b2178fc0 <line:4734:11, col:17> col:17 referenced class depth 0 index 0 _ValTy
| |   | |-TemplateTypeParmDecl 0x7fe8b2179028 <col:25, col:31> col:31 referenced class depth 0 index 1 _Key
| |   | |-TemplateTypeParmDecl 0x7fe8b2179098 <col:37, col:43> col:43 referenced class depth 0 index 2 _RawValTy
| |   | `-CXXRecordDecl 0x7fe8b21796e0 <line:4735:1, col:8> col:8 implicit struct __can_extract_map_key
| |   `-VarDecl 0x7fe8b21c4c78 parent 0x7fe8b2041980 prev 0x7fe8b2042750 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:812:27, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:518:58> col:58 referenced value 'const _Bool':'const _Bool' constexpr
| |-NamespaceDecl 0x7fe8b2179798 prev 0x7fe8b20380c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:438:37, line:439:38> line:438:47 std
| | |-original Namespace 0x7fe8b1865658 'std'
| | `-NamespaceDecl 0x7fe8b2179800 prev 0x7fe8b2038130 <col:52, line:439:36> <scratch space>:432:1 __1 inline
| |   |-original Namespace 0x7fe8b18656c0 '__1'
| |   |-EnumDecl 0x7fe8b2179868 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:125:1, line:132:1> line:125:6 referenced float_round_style
| |   | |-EnumConstantDecl 0x7fe8b2179960 <line:127:5, col:34> col:5 round_indeterminate 'enum std::__1::float_round_style'
| |   | | `-UnaryOperator 0x7fe8b2179940 <col:33, col:34> 'int' prefix '-'
| |   | |   `-IntegerLiteral 0x7fe8b2179920 <col:34> 'int' 1
| |   | |-EnumConstantDecl 0x7fe8b21799c8 <line:128:5, col:34> col:5 referenced round_toward_zero 'enum std::__1::float_round_style'
| |   | | `-IntegerLiteral 0x7fe8b21799a8 <col:34> 'int' 0
| |   | |-EnumConstantDecl 0x7fe8b2179a30 <line:129:5, col:34> col:5 referenced round_to_nearest 'enum std::__1::float_round_style'
| |   | | `-IntegerLiteral 0x7fe8b2179a10 <col:34> 'int' 1
| |   | |-EnumConstantDecl 0x7fe8b2179a98 <line:130:5, col:34> col:5 round_toward_infinity 'enum std::__1::float_round_style'
| |   | | `-IntegerLiteral 0x7fe8b2179a78 <col:34> 'int' 2
| |   | `-EnumConstantDecl 0x7fe8b2179b00 <line:131:5, col:34> col:5 round_toward_neg_infinity 'enum std::__1::float_round_style'
| |   |   `-IntegerLiteral 0x7fe8b2179ae0 <col:34> 'int' 3
| |   |-EnumDecl 0x7fe8b2179b48 <line:134:1, line:139:1> line:134:6 referenced float_denorm_style
| |   | |-EnumConstantDecl 0x7fe8b2179c40 <line:136:5, col:29> col:5 denorm_indeterminate 'enum std::__1::float_denorm_style'
| |   | | `-UnaryOperator 0x7fe8b2179c20 <col:28, col:29> 'int' prefix '-'
| |   | |   `-IntegerLiteral 0x7fe8b2179c00 <col:29> 'int' 1
| |   | |-EnumConstantDecl 0x7fe8b2179ca8 <line:137:5, col:21> col:5 referenced denorm_absent 'enum std::__1::float_denorm_style'
| |   | | `-IntegerLiteral 0x7fe8b2179c88 <col:21> 'int' 0
| |   | `-EnumConstantDecl 0x7fe8b2179d10 <line:138:5, col:22> col:5 referenced denorm_present 'enum std::__1::float_denorm_style'
| |   |   `-IntegerLiteral 0x7fe8b2179cf0 <col:22> 'int' 1
| |   |-ClassTemplateDecl 0x7fe8b2179ff8 <line:141:1, line:184:1> line:142:7 __libcpp_numeric_limits
| |   | |-TemplateTypeParmDecl 0x7fe8b2179d58 <line:141:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fe8b2179ee8 <col:22, col:49> col:27 '_Bool' depth 0 index 1
| |   | | `-TemplateArgument expr
| |   | |   `-DependentScopeDeclRefExpr 0x7fe8b2179e98 <col:29, col:49> '<dependent type>' lvalue
| |   | |-CXXRecordDecl 0x7fe8b2179f60 <line:142:1, line:184:1> line:142:7 class __libcpp_numeric_limits definition
| |   | | |-CXXRecordDecl 0x7fe8b20d2af0 <col:1, col:7> col:7 implicit class __libcpp_numeric_limits
| |   | | |-AccessSpecDecl 0x7fe8b20d2b88 <line:144:1, col:10> col:1 protected
| |   | | |-TypedefDecl 0x7fe8b20d2bc0 <line:145:5, col:17> col:17 referenced type '_Tp'
| |   | | | `-TemplateTypeParmType 0x7fe8b2179da0 '_Tp' dependent depth 0 index 0
| |   | | |   `-TemplateTypeParm 0x7fe8b2179d58 '_Tp'
| |   | | |-VarDecl 0x7fe8b20d2c28 <line:147:5, col:59> col:42 is_specialized 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fe8b20d2c88 <col:59> '_Bool' false
| |   | | |-CXXMethodDecl 0x7fe8b20d2da8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:148:92> col:61 constexpr min 'std::__1::__libcpp_numeric_limits::type (void) noexcept' static
| |   | | | |-CompoundStmt 0x7fe8b20d4598 <col:77, col:92>
| |   | | | | `-ReturnStmt 0x7fe8b20d4580 <col:78, col:90>
| |   | | | |   `-CXXUnresolvedConstructExpr 0x7fe8b20d4558 <col:85, col:90> 'std::__1::__libcpp_numeric_limits::type':'_Tp'
| |   | | | |-AlwaysInlineAttr 0x7fe8b20d2e40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | | `-VisibilityAttr 0x7fe8b20d2e88 <col:51, col:74> Hidden
| |   | | |-CXXMethodDecl 0x7fe8b20d2ef0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:149:92> col:61 constexpr max 'std::__1::__libcpp_numeric_limits::type (void) noexcept' static
| |   | | | |-CompoundStmt 0x7fe8b20d4608 <col:77, col:92>
| |   | | | | `-ReturnStmt 0x7fe8b20d45f0 <col:78, col:90>
| |   | | | |   `-CXXUnresolvedConstructExpr 0x7fe8b20d45c8 <col:85, col:90> 'std::__1::__libcpp_numeric_limits::type':'_Tp'
| |   | | | |-AlwaysInlineAttr 0x7fe8b20d2f88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | | `-VisibilityAttr 0x7fe8b20d2fd0 <col:51, col:74> Hidden
| |   | | |-CXXMethodDecl 0x7fe8b20d3038 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:150:95> col:61 constexpr lowest 'std::__1::__libcpp_numeric_limits::type (void) noexcept' static
| |   | | | |-CompoundStmt 0x7fe8b20d4678 <col:80, col:95>
| |   | | | | `-ReturnStmt 0x7fe8b20d4660 <col:81, col:93>
| |   | | | |   `-CXXUnresolvedConstructExpr 0x7fe8b20d4638 <col:88, col:93> 'std::__1::__libcpp_numeric_limits::type':'_Tp'
| |   | | | |-AlwaysInlineAttr 0x7fe8b20d30d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | | `-VisibilityAttr 0x7fe8b20d3118 <col:51, col:74> Hidden
| |   | | |-VarDecl 0x7fe8b20d3140 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:152:5, col:50> col:41 digits 'const int' static constexpr cinit
| |   | | | `-IntegerLiteral 0x7fe8b20d31a0 <col:50> 'int' 0
| |   | | |-VarDecl 0x7fe8b20d31d8 <line:153:5, col:52> col:41 digits10 'const int' static constexpr cinit
| |   | | | `-IntegerLiteral 0x7fe8b20d3238 <col:52> 'int' 0
| |   | | |-VarDecl 0x7fe8b20d3270 <line:154:5, col:56> col:41 max_digits10 'const int' static constexpr cinit
| |   | | | `-IntegerLiteral 0x7fe8b20d32d0 <col:56> 'int' 0
| |   | | |-VarDecl 0x7fe8b20d3300 <line:155:5, col:53> col:41 is_signed 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fe8b20d3360 <col:53> '_Bool' false
| |   | | |-VarDecl 0x7fe8b20d3388 <line:156:5, col:54> col:41 is_integer 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fe8b20d33e8 <col:54> '_Bool' false
| |   | | |-VarDecl 0x7fe8b20d3410 <line:157:5, col:52> col:41 is_exact 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fe8b20d3470 <col:52> '_Bool' false
| |   | | |-VarDecl 0x7fe8b20d34a0 <line:158:5, col:49> col:41 radix 'const int' static constexpr cinit
| |   | | | `-IntegerLiteral 0x7fe8b20d3500 <col:49> 'int' 0
| |   | | |-CXXMethodDecl 0x7fe8b20d3578 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:159:96> col:61 constexpr epsilon 'std::__1::__libcpp_numeric_limits::type (void) noexcept' static
| |   | | | |-CompoundStmt 0x7fe8b20d46e8 <col:81, col:96>
| |   | | | | `-ReturnStmt 0x7fe8b20d46d0 <col:82, col:94>
| |   | | | |   `-CXXUnresolvedConstructExpr 0x7fe8b20d46a8 <col:89, col:94> 'std::__1::__libcpp_numeric_limits::type':'_Tp'
| |   | | | |-AlwaysInlineAttr 0x7fe8b20d3610 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | | `-VisibilityAttr 0x7fe8b20d3658 <col:51, col:74> Hidden
| |   | | |-CXXMethodDecl 0x7fe8b20d36c0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:160:100> col:61 constexpr round_error 'std::__1::__libcpp_numeric_limits::type (void) noexcept' static
| |   | | | |-CompoundStmt 0x7fe8b20d4758 <col:85, col:100>
| |   | | | | `-ReturnStmt 0x7fe8b20d4740 <col:86, col:98>
| |   | | | |   `-CXXUnresolvedConstructExpr 0x7fe8b20d4718 <col:93, col:98> 'std::__1::__libcpp_numeric_limits::type':'_Tp'
| |   | | | |-AlwaysInlineAttr 0x7fe8b20d3758 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | | `-VisibilityAttr 0x7fe8b20d37a0 <col:51, col:74> Hidden
| |   | | |-VarDecl 0x7fe8b20d37c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:162:5, col:56> col:41 min_exponent 'const int' static constexpr cinit
| |   | | | `-IntegerLiteral 0x7fe8b20d3828 <col:56> 'int' 0
| |   | | |-VarDecl 0x7fe8b20d3860 <line:163:5, col:58> col:41 min_exponent10 'const int' static constexpr cinit
| |   | | | `-IntegerLiteral 0x7fe8b20d38c0 <col:58> 'int' 0
| |   | | |-VarDecl 0x7fe8b20d38f8 <line:164:5, col:56> col:41 max_exponent 'const int' static constexpr cinit
| |   | | | `-IntegerLiteral 0x7fe8b20d3958 <col:56> 'int' 0
| |   | | |-VarDecl 0x7fe8b20d3990 <line:165:5, col:58> col:41 max_exponent10 'const int' static constexpr cinit
| |   | | | `-IntegerLiteral 0x7fe8b20d39f0 <col:58> 'int' 0
| |   | | |-VarDecl 0x7fe8b20d3a20 <line:167:5, col:56> col:41 has_infinity 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fe8b20d3a80 <col:56> '_Bool' false
| |   | | |-VarDecl 0x7fe8b20d3aa8 <line:168:5, col:57> col:41 has_quiet_NaN 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fe8b20d3b08 <col:57> '_Bool' false
| |   | | |-VarDecl 0x7fe8b20d3b30 <line:169:5, col:61> col:41 has_signaling_NaN 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fe8b20d3b90 <col:61> '_Bool' false
| |   | | |-VarDecl 0x7fe8b20d3bb8 <line:170:5, col:68> col:55 has_denorm 'const enum std::__1::float_denorm_style' static constexpr cinit
| |   | | | `-DeclRefExpr 0x7fe8b20d3c18 <col:68> 'enum std::__1::float_denorm_style' EnumConstant 0x7fe8b2179ca8 'denorm_absent' 'enum std::__1::float_denorm_style'
| |   | | |-VarDecl 0x7fe8b20d3c50 <line:171:5, col:59> col:41 has_denorm_loss 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fe8b20d3cb0 <col:59> '_Bool' false
| |   | | |-CXXMethodDecl 0x7fe8b20d3d20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:172:97> col:61 constexpr infinity 'std::__1::__libcpp_numeric_limits::type (void) noexcept' static
| |   | | | |-CompoundStmt 0x7fe8b20d47c8 <col:82, col:97>
| |   | | | | `-ReturnStmt 0x7fe8b20d47b0 <col:83, col:95>
| |   | | | |   `-CXXUnresolvedConstructExpr 0x7fe8b20d4788 <col:90, col:95> 'std::__1::__libcpp_numeric_limits::type':'_Tp'
| |   | | | |-AlwaysInlineAttr 0x7fe8b20d3db8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | | `-VisibilityAttr 0x7fe8b20d3e00 <col:51, col:74> Hidden
| |   | | |-CXXMethodDecl 0x7fe8b20d3e68 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:173:98> col:61 constexpr quiet_NaN 'std::__1::__libcpp_numeric_limits::type (void) noexcept' static
| |   | | | |-CompoundStmt 0x7fe8b20d4838 <col:83, col:98>
| |   | | | | `-ReturnStmt 0x7fe8b20d4820 <col:84, col:96>
| |   | | | |   `-CXXUnresolvedConstructExpr 0x7fe8b20d47f8 <col:91, col:96> 'std::__1::__libcpp_numeric_limits::type':'_Tp'
| |   | | | |-AlwaysInlineAttr 0x7fe8b20d3f00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | | `-VisibilityAttr 0x7fe8b20d3f48 <col:51, col:74> Hidden
| |   | | |-CXXMethodDecl 0x7fe8b20d3fb0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:174:102> col:61 constexpr signaling_NaN 'std::__1::__libcpp_numeric_limits::type (void) noexcept' static
| |   | | | |-CompoundStmt 0x7fe8b20d48a8 <col:87, col:102>
| |   | | | | `-ReturnStmt 0x7fe8b20d4890 <col:88, col:100>
| |   | | | |   `-CXXUnresolvedConstructExpr 0x7fe8b20d4868 <col:95, col:100> 'std::__1::__libcpp_numeric_limits::type':'_Tp'
| |   | | | |-AlwaysInlineAttr 0x7fe8b20d4048 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | | `-VisibilityAttr 0x7fe8b20d4090 <col:51, col:74> Hidden
| |   | | |-CXXMethodDecl 0x7fe8b20d40f8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:175:99> col:61 constexpr denorm_min 'std::__1::__libcpp_numeric_limits::type (void) noexcept' static
| |   | | | |-CompoundStmt 0x7fe8b20d4918 <col:84, col:99>
| |   | | | | `-ReturnStmt 0x7fe8b20d4900 <col:85, col:97>
| |   | | | |   `-CXXUnresolvedConstructExpr 0x7fe8b20d48d8 <col:92, col:97> 'std::__1::__libcpp_numeric_limits::type':'_Tp'
| |   | | | |-AlwaysInlineAttr 0x7fe8b20d4190 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | | `-VisibilityAttr 0x7fe8b20d41d8 <col:51, col:74> Hidden
| |   | | |-VarDecl 0x7fe8b20d41f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:177:5, col:53> col:41 is_iec559 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fe8b20d4258 <col:53> '_Bool' false
| |   | | |-VarDecl 0x7fe8b20d4280 <line:178:5, col:54> col:41 is_bounded 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fe8b20d42e0 <col:54> '_Bool' false
| |   | | |-VarDecl 0x7fe8b20d4308 <line:179:5, col:53> col:41 is_modulo 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fe8b20d4368 <col:53> '_Bool' false
| |   | | |-VarDecl 0x7fe8b20d4390 <line:181:5, col:49> col:41 traps 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fe8b20d43f0 <col:49> '_Bool' false
| |   | | |-VarDecl 0x7fe8b20d4418 <line:182:5, col:59> col:41 tinyness_before 'const _Bool' static constexpr cinit
| |   | | | `-CXXBoolLiteralExpr 0x7fe8b20d4478 <col:59> '_Bool' false
| |   | | `-VarDecl 0x7fe8b20d44a0 <line:183:5, col:68> col:54 round_style 'const enum std::__1::float_round_style' static constexpr cinit
| |   | |   `-DeclRefExpr 0x7fe8b20d4500 <col:68> 'enum std::__1::float_round_style' EnumConstant 0x7fe8b21799c8 'round_toward_zero' 'enum std::__1::float_round_style'
| |   | |-ClassTemplateSpecialization 0x7fe8b20d8de0 '__libcpp_numeric_limits'
| |   | |-ClassTemplateSpecialization 0x7fe8b2195c80 '__libcpp_numeric_limits'
| |   | |-ClassTemplateSpecialization 0x7fe8b2198d60 '__libcpp_numeric_limits'
| |   | `-ClassTemplateSpecialization 0x7fe8b219be90 '__libcpp_numeric_limits'
| |   |-ClassTemplateDecl 0x7fe8b20d5380 <line:186:1, line:190:1> line:187:8 __libcpp_compute_min
| |   | |-TemplateTypeParmDecl 0x7fe8b20d4938 <line:186:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fe8b20d5200 <col:22, col:26> col:26 referenced 'int' depth 0 index 1 __digits
| |   | |-NonTypeTemplateParmDecl 0x7fe8b20d5268 <col:36, col:41> col:41 '_Bool' depth 0 index 2 _IsSigned
| |   | `-CXXRecordDecl 0x7fe8b20d52e8 <line:187:1, line:190:1> line:187:8 struct __libcpp_compute_min definition
| |   |   |-CXXRecordDecl 0x7fe8b20d56b0 <col:1, col:8> col:8 implicit struct __libcpp_compute_min
| |   |   `-VarDecl 0x7fe8b20d5758 <line:189:5, col:70> col:40 value 'const _Tp' static constexpr cinit
| |   |     `-CXXUnresolvedConstructExpr 0x7fe8b20d5878 <col:48, col:70> '_Tp'
| |   |       `-BinaryOperator 0x7fe8b20d5850 <col:52, col:62> '<dependent type>' '<<'
| |   |         |-CXXUnresolvedConstructExpr 0x7fe8b20d57f8 <col:52, col:57> '_Tp'
| |   |         | `-IntegerLiteral 0x7fe8b20d57d8 <col:56> 'int' 1
| |   |         `-DeclRefExpr 0x7fe8b20d5828 <col:62> 'int' NonTypeTemplateParm 0x7fe8b20d5200 '__digits' 'int'
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b20d5bb8 <line:192:1, line:196:1> line:193:8 struct __libcpp_compute_min definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument expr
| |   | | `-DeclRefExpr 0x7fe8b20d59d8 <col:34> 'int' NonTypeTemplateParm 0x7fe8b20d5950 '__digits' 'int'
| |   | |-TemplateArgument integral 0
| |   | |-TemplateTypeParmDecl 0x7fe8b20d58c8 <line:192:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-NonTypeTemplateParmDecl 0x7fe8b20d5950 <col:22, col:26> col:26 referenced 'int' depth 0 index 1 __digits
| |   | |-CXXRecordDecl 0x7fe8b20d5e90 <line:193:1, col:8> col:8 implicit struct __libcpp_compute_min
| |   | `-VarDecl 0x7fe8b20d5f38 <line:195:5, col:53> col:40 value 'const _Tp' static constexpr cinit
| |   |   `-CXXUnresolvedConstructExpr 0x7fe8b20d5fc8 <col:48, col:53> '_Tp'
| |   |     `-IntegerLiteral 0x7fe8b20d5fa8 <col:52> 'int' 0
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b20d6200 <line:198:1, line:249:1> line:199:7 class __libcpp_numeric_limits definition
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |-TemplateArgument integral 1
| |   | |-TemplateTypeParmDecl 0x7fe8b20d6018 <line:198:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-CXXRecordDecl 0x7fe8b20d6490 <line:199:1, col:7> col:7 implicit class __libcpp_numeric_limits
| |   | |-AccessSpecDecl 0x7fe8b20d6528 <line:201:1, col:10> col:1 protected
| |   | |-TypedefDecl 0x7fe8b20d6560 <line:202:5, col:17> col:17 referenced type '_Tp'
| |   | | `-TemplateTypeParmType 0x7fe8b20d6060 '_Tp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fe8b20d6018 '_Tp'
| |   | |-VarDecl 0x7fe8b20d65c8 <line:204:5, col:58> col:41 is_specialized 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fe8b20d6628 <col:58> '_Bool' true
| |   | |-VarDecl 0x7fe8b20d6650 <line:206:5, col:70> col:41 referenced is_signed 'const _Bool' static constexpr cinit
| |   | | `-BinaryOperator 0x7fe8b20d67b0 <col:53, col:70> '<dependent type>' '<'
| |   | |   |-CXXUnresolvedConstructExpr 0x7fe8b20d6720 <col:53, col:60> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | |   | `-UnaryOperator 0x7fe8b20d6700 <col:58, col:59> 'int' prefix '-'
| |   | |   |   `-IntegerLiteral 0x7fe8b20d66e0 <col:59> 'int' 1
| |   | |   `-CXXUnresolvedConstructExpr 0x7fe8b20d6780 <col:64, col:70> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | |     `-IntegerLiteral 0x7fe8b20d6760 <col:69> 'int' 0
| |   | |-VarDecl 0x7fe8b20d67f0 <line:207:5, col:106> col:41 referenced digits 'const int' static constexpr cinit
| |   | | `-CXXStaticCastExpr 0x7fe8b20d6990 <col:50, col:106> 'int' static_cast<int> <NoOp>
| |   | |   `-ImplicitCastExpr 0x7fe8b20d6978 <col:67, col:97> 'int' <IntegralCast>
| |   | |     `-BinaryOperator 0x7fe8b20d6938 <col:67, col:97> 'unsigned long' '-'
| |   | |       |-BinaryOperator 0x7fe8b20d68b8 <col:67, <built-in>:66:22> 'unsigned long' '*'
| |   | |       | |-UnaryExprOrTypeTraitExpr 0x7fe8b20d6860 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:207:67, col:78> 'unsigned long' sizeof 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | |       | `-ImplicitCastExpr 0x7fe8b20d68a0 <<built-in>:66:22> 'unsigned long' <IntegralCast>
| |   | |       |   `-IntegerLiteral 0x7fe8b20d6880 <col:22> 'int' 8
| |   | |       `-ImplicitCastExpr 0x7fe8b20d6920 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:207:97> 'unsigned long' <IntegralCast>
| |   | |         `-ImplicitCastExpr 0x7fe8b20d6908 <col:97> '_Bool' <LValueToRValue>
| |   | |           `-DeclRefExpr 0x7fe8b20d68e0 <col:97> 'const _Bool' lvalue Var 0x7fe8b20d6650 'is_signed' 'const _Bool'
| |   | |-VarDecl 0x7fe8b20d69d8 <line:208:5, col:65> col:41 digits10 'const int' static constexpr cinit
| |   | | `-BinaryOperator 0x7fe8b20d6ae0 <col:52, col:65> 'int' '/'
| |   | |   |-BinaryOperator 0x7fe8b20d6a98 <col:52, col:61> 'int' '*'
| |   | |   | |-ImplicitCastExpr 0x7fe8b20d6a80 <col:52> 'int' <LValueToRValue>
| |   | |   | | `-DeclRefExpr 0x7fe8b20d6a38 <col:52> 'const int' lvalue Var 0x7fe8b20d67f0 'digits' 'const int'
| |   | |   | `-IntegerLiteral 0x7fe8b20d6a60 <col:61> 'int' 3
| |   | |   `-IntegerLiteral 0x7fe8b20d6ac0 <col:65> 'int' 10
| |   | |-VarDecl 0x7fe8b20d6b20 <line:209:5, col:56> col:41 max_digits10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fe8b20d6b80 <col:56> 'int' 0
| |   | |-VarDecl 0x7fe8b20d6bb0 <line:210:5, col:96> col:41 referenced __min 'const std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'const _Tp' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fe8b20d6e38 <col:49, col:96> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fe8b20d6e88 <line:211:5, col:93> col:41 referenced __max 'const std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'const _Tp' static constexpr cinit
| |   | | `-ConditionalOperator 0x7fe8b20d70b8 <col:49, col:93> '<dependent type>'
| |   | |   |-ImplicitCastExpr 0x7fe8b20d70a0 <col:49> '_Bool' <LValueToRValue>
| |   | |   | `-DeclRefExpr 0x7fe8b20d6ee8 <col:49> 'const _Bool' lvalue Var 0x7fe8b20d6650 'is_signed' 'const _Bool'
| |   | |   |-CXXUnresolvedConstructExpr 0x7fe8b20d6ff0 <col:61, col:82> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | |   | `-BinaryOperator 0x7fe8b20d6fc8 <col:66, col:77> '<dependent type>' '^'
| |   | |   |   |-CXXUnresolvedConstructExpr 0x7fe8b20d6f70 <col:66, col:73> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | |   |   | `-UnaryOperator 0x7fe8b20d6f50 <col:71, col:72> 'int' prefix '~'
| |   | |   |   |   `-IntegerLiteral 0x7fe8b20d6f30 <col:72> 'int' 0
| |   | |   |   `-DeclRefExpr 0x7fe8b20d6fa0 <col:77> 'const std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'const _Tp' lvalue Var 0x7fe8b20d6bb0 '__min' 'const std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'const _Tp'
| |   | |   `-CXXUnresolvedConstructExpr 0x7fe8b20d7070 <col:86, col:93> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | |     `-UnaryOperator 0x7fe8b20d7050 <col:91, col:92> 'int' prefix '~'
| |   | |       `-IntegerLiteral 0x7fe8b20d7030 <col:92> 'int' 0
| |   | |-CXXMethodDecl 0x7fe8b20d7200 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:212:91> col:61 referenced constexpr min 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fe8b20d8910 <col:77, col:91>
| |   | | | `-ReturnStmt 0x7fe8b20d88f8 <col:78, col:85>
| |   | | |   `-DeclRefExpr 0x7fe8b20d88d0 <col:85> 'const std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'const _Tp' lvalue Var 0x7fe8b20d6bb0 '__min' 'const std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'const _Tp'
| |   | | |-AlwaysInlineAttr 0x7fe8b20d7298 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fe8b20d72e0 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fe8b20d7348 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:213:91> col:61 constexpr max 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fe8b20d8970 <col:77, col:91>
| |   | | | `-ReturnStmt 0x7fe8b20d8958 <col:78, col:85>
| |   | | |   `-DeclRefExpr 0x7fe8b20d8930 <col:85> 'const std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'const _Tp' lvalue Var 0x7fe8b20d6e88 '__max' 'const std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'const _Tp'
| |   | | |-AlwaysInlineAttr 0x7fe8b20d73e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fe8b20d7428 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fe8b20d7490 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:214:94> col:61 constexpr lowest 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fe8b20d89f8 <col:80, col:94>
| |   | | | `-ReturnStmt 0x7fe8b20d89e0 <col:81, col:92>
| |   | | |   `-CallExpr 0x7fe8b20d89b8 <col:88, col:92> '<dependent type>'
| |   | | |     `-DeclRefExpr 0x7fe8b20d8990 <col:88> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept' lvalue CXXMethod 0x7fe8b20d7200 'min' 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept'
| |   | | |-AlwaysInlineAttr 0x7fe8b20d7528 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fe8b20d7570 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fe8b20d7590 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:216:5, col:54> col:41 is_integer 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fe8b20d75f0 <col:54> '_Bool' true
| |   | |-VarDecl 0x7fe8b20d7618 <line:217:5, col:52> col:41 is_exact 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fe8b20d7678 <col:52> '_Bool' true
| |   | |-VarDecl 0x7fe8b20d76a8 <line:218:5, col:49> col:41 radix 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fe8b20d7708 <col:49> 'int' 2
| |   | |-CXXMethodDecl 0x7fe8b20d7780 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:219:97> col:61 constexpr epsilon 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fe8b20d8a90 <col:81, col:97>
| |   | | | `-ReturnStmt 0x7fe8b20d8a78 <col:82, col:95>
| |   | | |   `-CXXUnresolvedConstructExpr 0x7fe8b20d8a48 <col:89, col:95> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | | |     `-IntegerLiteral 0x7fe8b20d8a28 <col:94> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7fe8b20d7818 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fe8b20d7860 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fe8b20d78c8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:220:101> col:61 constexpr round_error 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fe8b20d8b28 <col:85, col:101>
| |   | | | `-ReturnStmt 0x7fe8b20d8b10 <col:86, col:99>
| |   | | |   `-CXXUnresolvedConstructExpr 0x7fe8b20d8ae0 <col:93, col:99> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | | |     `-IntegerLiteral 0x7fe8b20d8ac0 <col:98> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7fe8b20d7960 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fe8b20d79a8 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fe8b20d79d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:222:5, col:56> col:41 min_exponent 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fe8b20d7a30 <col:56> 'int' 0
| |   | |-VarDecl 0x7fe8b20d7a68 <line:223:5, col:58> col:41 min_exponent10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fe8b20d7ac8 <col:58> 'int' 0
| |   | |-VarDecl 0x7fe8b20d7b00 <line:224:5, col:56> col:41 max_exponent 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fe8b20d7b60 <col:56> 'int' 0
| |   | |-VarDecl 0x7fe8b20d7b98 <line:225:5, col:58> col:41 max_exponent10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fe8b20d7bf8 <col:58> 'int' 0
| |   | |-VarDecl 0x7fe8b20d7c28 <line:227:5, col:56> col:41 has_infinity 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fe8b20d7c88 <col:56> '_Bool' false
| |   | |-VarDecl 0x7fe8b20d7cb0 <line:228:5, col:57> col:41 has_quiet_NaN 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fe8b20d7d10 <col:57> '_Bool' false
| |   | |-VarDecl 0x7fe8b20d7d38 <line:229:5, col:61> col:41 has_signaling_NaN 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fe8b20d7d98 <col:61> '_Bool' false
| |   | |-VarDecl 0x7fe8b20d7dc0 <line:230:5, col:68> col:55 has_denorm 'const enum std::__1::float_denorm_style' static constexpr cinit
| |   | | `-DeclRefExpr 0x7fe8b20d7e20 <col:68> 'enum std::__1::float_denorm_style' EnumConstant 0x7fe8b2179ca8 'denorm_absent' 'enum std::__1::float_denorm_style'
| |   | |-VarDecl 0x7fe8b20d7e58 <line:231:5, col:59> col:41 has_denorm_loss 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fe8b20d7eb8 <col:59> '_Bool' false
| |   | |-CXXMethodDecl 0x7fe8b20d7f28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:232:98> col:61 constexpr infinity 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fe8b20d8bc0 <col:82, col:98>
| |   | | | `-ReturnStmt 0x7fe8b20d8ba8 <col:83, col:96>
| |   | | |   `-CXXUnresolvedConstructExpr 0x7fe8b20d8b78 <col:90, col:96> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | | |     `-IntegerLiteral 0x7fe8b20d8b58 <col:95> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7fe8b20d7fc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fe8b20d8008 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fe8b20d8070 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:233:99> col:61 constexpr quiet_NaN 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fe8b20d8c58 <col:83, col:99>
| |   | | | `-ReturnStmt 0x7fe8b20d8c40 <col:84, col:97>
| |   | | |   `-CXXUnresolvedConstructExpr 0x7fe8b20d8c10 <col:91, col:97> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | | |     `-IntegerLiteral 0x7fe8b20d8bf0 <col:96> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7fe8b20d8108 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fe8b20d8150 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fe8b20d81b8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:234:103> col:61 constexpr signaling_NaN 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fe8b20d8cf0 <col:87, col:103>
| |   | | | `-ReturnStmt 0x7fe8b20d8cd8 <col:88, col:101>
| |   | | |   `-CXXUnresolvedConstructExpr 0x7fe8b20d8ca8 <col:95, col:101> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | | |     `-IntegerLiteral 0x7fe8b20d8c88 <col:100> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7fe8b20d8250 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fe8b20d8298 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fe8b20d8300 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:235:100> col:61 constexpr denorm_min 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fe8b20d8d88 <col:84, col:100>
| |   | | | `-ReturnStmt 0x7fe8b20d8d70 <col:85, col:98>
| |   | | |   `-CXXUnresolvedConstructExpr 0x7fe8b20d8d40 <col:92, col:98> 'std::__1::__libcpp_numeric_limits<type-parameter-0-0, true>::type':'_Tp'
| |   | | |     `-IntegerLiteral 0x7fe8b20d8d20 <col:97> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7fe8b20d8398 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fe8b20d83e0 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fe8b20d8400 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:237:5, col:53> col:41 is_iec559 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fe8b20d8460 <col:53> '_Bool' false
| |   | |-VarDecl 0x7fe8b20d8488 <line:238:5, col:54> col:41 is_bounded 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fe8b20d84e8 <col:54> '_Bool' true
| |   | |-VarDecl 0x7fe8b20d8510 <line:239:5, col:77> col:41 is_modulo 'const _Bool' static constexpr cinit
| |   | | `-UnaryOperator 0x7fe8b20d86e8 <col:53, col:77> '<dependent type>' prefix '!'
| |   | |   `-DependentScopeDeclRefExpr 0x7fe8b20d86a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:440:15, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:239:77> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fe8b20d8718 <line:243:5, col:49> col:41 traps 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fe8b20d8778 <col:49> '_Bool' true
| |   | |-VarDecl 0x7fe8b20d87a0 <line:247:5, col:59> col:41 tinyness_before 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fe8b20d8800 <col:59> '_Bool' false
| |   | `-VarDecl 0x7fe8b20d8828 <line:248:5, col:68> col:54 round_style 'const enum std::__1::float_round_style' static constexpr cinit
| |   |   `-DeclRefExpr 0x7fe8b20d8888 <col:68> 'enum std::__1::float_round_style' EnumConstant 0x7fe8b21799c8 'round_toward_zero' 'enum std::__1::float_round_style'
| |   |-ClassTemplateSpecializationDecl 0x7fe8b20d8de0 <line:251:1, line:297:1> line:252:7 class __libcpp_numeric_limits definition
| |   | |-TemplateArgument type '_Bool'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fe8b20d9050 <col:1, col:7> col:7 implicit class __libcpp_numeric_limits
| |   | |-AccessSpecDecl 0x7fe8b20d90e8 <line:254:1, col:10> col:1 protected
| |   | |-TypedefDecl 0x7fe8b20d9120 <line:255:5, col:18> col:18 referenced type '_Bool'
| |   | | `-BuiltinType 0x7fe8b1832540 '_Bool'
| |   | |-VarDecl 0x7fe8b20d9188 <line:257:5, col:58> col:41 is_specialized 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fe8b20d91e8 <col:58> '_Bool' true
| |   | |-VarDecl 0x7fe8b2193468 <line:259:5, col:53> col:41 is_signed 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fe8b21934c8 <col:53> '_Bool' false
| |   | |-VarDecl 0x7fe8b2193550 <line:260:5, col:50> col:41 digits 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fe8b21935b0 <col:50> 'int' 1
| |   | |-VarDecl 0x7fe8b2193640 <line:261:5, col:52> col:41 digits10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fe8b21936a0 <col:52> 'int' 0
| |   | |-VarDecl 0x7fe8b2193730 <line:262:5, col:56> col:41 max_digits10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fe8b2193790 <col:56> 'int' 0
| |   | |-VarDecl 0x7fe8b2193840 <line:263:5, col:49> col:41 referenced __min 'const std::__1::__libcpp_numeric_limits<_Bool, true>::type':'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fe8b21938a0 <col:49> '_Bool' false
| |   | |-VarDecl 0x7fe8b2193920 <line:264:5, col:49> col:41 referenced __max 'const std::__1::__libcpp_numeric_limits<_Bool, true>::type':'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fe8b2193980 <col:49> '_Bool' true
| |   | |-CXXMethodDecl 0x7fe8b2193ad8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:265:91> col:61 used constexpr min 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fe8b21956b8 <col:77, col:91>
| |   | | | `-ReturnStmt 0x7fe8b21956a0 <col:78, col:85>
| |   | | |   `-ImplicitCastExpr 0x7fe8b2195688 <col:85> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type':'_Bool' <LValueToRValue>
| |   | | |     `-DeclRefExpr 0x7fe8b2195660 <col:85> 'const std::__1::__libcpp_numeric_limits<_Bool, true>::type':'const _Bool' lvalue Var 0x7fe8b2193840 '__min' 'const std::__1::__libcpp_numeric_limits<_Bool, true>::type':'const _Bool'
| |   | | |-AlwaysInlineAttr 0x7fe8b2193b70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fe8b2193bb8 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fe8b2193c20 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:266:91> col:61 constexpr max 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fe8b2195730 <col:77, col:91>
| |   | | | `-ReturnStmt 0x7fe8b2195718 <col:78, col:85>
| |   | | |   `-ImplicitCastExpr 0x7fe8b2195700 <col:85> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type':'_Bool' <LValueToRValue>
| |   | | |     `-DeclRefExpr 0x7fe8b21956d8 <col:85> 'const std::__1::__libcpp_numeric_limits<_Bool, true>::type':'const _Bool' lvalue Var 0x7fe8b2193920 '__max' 'const std::__1::__libcpp_numeric_limits<_Bool, true>::type':'const _Bool'
| |   | | |-AlwaysInlineAttr 0x7fe8b2193cb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fe8b2193d00 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fe8b2193d68 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:267:94> col:61 constexpr lowest 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fe8b2195830 <col:80, col:94>
| |   | | | `-ReturnStmt 0x7fe8b2195818 <col:81, col:92>
| |   | | |   `-CallExpr 0x7fe8b21957f0 <col:88, col:92> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type':'_Bool'
| |   | | |     `-ImplicitCastExpr 0x7fe8b21957d8 <col:88> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (*)(void) noexcept' <FunctionToPointerDecay>
| |   | | |       `-DeclRefExpr 0x7fe8b2195750 <col:88> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept' lvalue CXXMethod 0x7fe8b2193ad8 'min' 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept'
| |   | | |-AlwaysInlineAttr 0x7fe8b2193e00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fe8b2193e48 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fe8b2193e68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:269:5, col:54> col:41 is_integer 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fe8b2193ec8 <col:54> '_Bool' true
| |   | |-VarDecl 0x7fe8b2193f48 <line:270:5, col:52> col:41 is_exact 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fe8b2193fa8 <col:52> '_Bool' true
| |   | |-VarDecl 0x7fe8b2194030 <line:271:5, col:49> col:41 radix 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fe8b2194090 <col:49> 'int' 2
| |   | |-CXXMethodDecl 0x7fe8b2194160 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:272:97> col:61 constexpr epsilon 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fe8b21958d8 <col:81, col:97>
| |   | | | `-ReturnStmt 0x7fe8b21958c0 <col:82, col:95>
| |   | | |   `-CXXFunctionalCastExpr 0x7fe8b2195898 <col:89, col:95> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type':'_Bool' functional cast to std::__1::__libcpp_numeric_limits<_Bool, true>::type <NoOp>
| |   | | |     `-ImplicitCastExpr 0x7fe8b2195880 <col:94> '_Bool' <IntegralToBoolean>
| |   | | |       `-IntegerLiteral 0x7fe8b2195860 <col:94> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7fe8b21941f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fe8b2194240 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fe8b21942a8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:273:101> col:61 constexpr round_error 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fe8b2195980 <col:85, col:101>
| |   | | | `-ReturnStmt 0x7fe8b2195968 <col:86, col:99>
| |   | | |   `-CXXFunctionalCastExpr 0x7fe8b2195940 <col:93, col:99> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type':'_Bool' functional cast to std::__1::__libcpp_numeric_limits<_Bool, true>::type <NoOp>
| |   | | |     `-ImplicitCastExpr 0x7fe8b2195928 <col:98> '_Bool' <IntegralToBoolean>
| |   | | |       `-IntegerLiteral 0x7fe8b2195908 <col:98> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7fe8b2194340 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fe8b2194388 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fe8b21943b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:275:5, col:56> col:41 min_exponent 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fe8b2194410 <col:56> 'int' 0
| |   | |-VarDecl 0x7fe8b21944a0 <line:276:5, col:58> col:41 min_exponent10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fe8b2194500 <col:58> 'int' 0
| |   | |-VarDecl 0x7fe8b2194590 <line:277:5, col:56> col:41 max_exponent 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fe8b21945f0 <col:56> 'int' 0
| |   | |-VarDecl 0x7fe8b2194680 <line:278:5, col:58> col:41 max_exponent10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fe8b21946e0 <col:58> 'int' 0
| |   | |-VarDecl 0x7fe8b2194768 <line:280:5, col:56> col:41 has_infinity 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fe8b21947c8 <col:56> '_Bool' false
| |   | |-VarDecl 0x7fe8b2194848 <line:281:5, col:57> col:41 has_quiet_NaN 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fe8b21948a8 <col:57> '_Bool' false
| |   | |-VarDecl 0x7fe8b2194928 <line:282:5, col:61> col:41 has_signaling_NaN 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fe8b2194988 <col:61> '_Bool' false
| |   | |-VarDecl 0x7fe8b2194a08 <line:283:5, col:68> col:55 has_denorm 'const enum std::__1::float_denorm_style' static constexpr cinit
| |   | | `-DeclRefExpr 0x7fe8b2194a68 <col:68> 'enum std::__1::float_denorm_style' EnumConstant 0x7fe8b2179ca8 'denorm_absent' 'enum std::__1::float_denorm_style'
| |   | |-VarDecl 0x7fe8b2194af8 <line:284:5, col:59> col:41 has_denorm_loss 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fe8b2194b58 <col:59> '_Bool' false
| |   | |-CXXMethodDecl 0x7fe8b2194c20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:285:98> col:61 constexpr infinity 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fe8b2195a28 <col:82, col:98>
| |   | | | `-ReturnStmt 0x7fe8b2195a10 <col:83, col:96>
| |   | | |   `-CXXFunctionalCastExpr 0x7fe8b21959e8 <col:90, col:96> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type':'_Bool' functional cast to std::__1::__libcpp_numeric_limits<_Bool, true>::type <NoOp>
| |   | | |     `-ImplicitCastExpr 0x7fe8b21959d0 <col:95> '_Bool' <IntegralToBoolean>
| |   | | |       `-IntegerLiteral 0x7fe8b21959b0 <col:95> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7fe8b2194cb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fe8b2194d00 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fe8b2194d68 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:286:99> col:61 constexpr quiet_NaN 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fe8b2195ad0 <col:83, col:99>
| |   | | | `-ReturnStmt 0x7fe8b2195ab8 <col:84, col:97>
| |   | | |   `-CXXFunctionalCastExpr 0x7fe8b2195a90 <col:91, col:97> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type':'_Bool' functional cast to std::__1::__libcpp_numeric_limits<_Bool, true>::type <NoOp>
| |   | | |     `-ImplicitCastExpr 0x7fe8b2195a78 <col:96> '_Bool' <IntegralToBoolean>
| |   | | |       `-IntegerLiteral 0x7fe8b2195a58 <col:96> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7fe8b2194e00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fe8b2194e48 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fe8b2194eb0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:287:103> col:61 constexpr signaling_NaN 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fe8b2195b78 <col:87, col:103>
| |   | | | `-ReturnStmt 0x7fe8b2195b60 <col:88, col:101>
| |   | | |   `-CXXFunctionalCastExpr 0x7fe8b2195b38 <col:95, col:101> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type':'_Bool' functional cast to std::__1::__libcpp_numeric_limits<_Bool, true>::type <NoOp>
| |   | | |     `-ImplicitCastExpr 0x7fe8b2195b20 <col:100> '_Bool' <IntegralToBoolean>
| |   | | |       `-IntegerLiteral 0x7fe8b2195b00 <col:100> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7fe8b2194f48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fe8b2194f90 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fe8b2194ff8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:288:100> col:61 constexpr denorm_min 'std::__1::__libcpp_numeric_limits<_Bool, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fe8b2195c20 <col:84, col:100>
| |   | | | `-ReturnStmt 0x7fe8b2195c08 <col:85, col:98>
| |   | | |   `-CXXFunctionalCastExpr 0x7fe8b2195be0 <col:92, col:98> 'std::__1::__libcpp_numeric_limits<_Bool, true>::type':'_Bool' functional cast to std::__1::__libcpp_numeric_limits<_Bool, true>::type <NoOp>
| |   | | |     `-ImplicitCastExpr 0x7fe8b2195bc8 <col:97> '_Bool' <IntegralToBoolean>
| |   | | |       `-IntegerLiteral 0x7fe8b2195ba8 <col:97> 'int' 0
| |   | | |-AlwaysInlineAttr 0x7fe8b2195090 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fe8b21950d8 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fe8b21950f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:290:5, col:53> col:41 is_iec559 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fe8b2195158 <col:53> '_Bool' false
| |   | |-VarDecl 0x7fe8b21951d8 <line:291:5, col:54> col:41 is_bounded 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fe8b2195238 <col:54> '_Bool' true
| |   | |-VarDecl 0x7fe8b21952b8 <line:292:5, col:53> col:41 is_modulo 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fe8b2195318 <col:53> '_Bool' false
| |   | |-VarDecl 0x7fe8b2195398 <line:294:5, col:49> col:41 traps 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fe8b2195400 <col:49> '_Bool' false
| |   | |-VarDecl 0x7fe8b2195480 <line:295:5, col:59> col:41 tinyness_before 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fe8b21954e0 <col:59> '_Bool' false
| |   | `-VarDecl 0x7fe8b2195560 <line:296:5, col:68> col:54 round_style 'const enum std::__1::float_round_style' static constexpr cinit
| |   |   `-DeclRefExpr 0x7fe8b21955c0 <col:68> 'enum std::__1::float_round_style' EnumConstant 0x7fe8b21799c8 'round_toward_zero' 'enum std::__1::float_round_style'
| |   |-ClassTemplateSpecializationDecl 0x7fe8b2195c80 <line:299:1, line:343:1> line:300:7 class __libcpp_numeric_limits definition
| |   | |-TemplateArgument type 'float'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fe8b2195ef0 <col:1, col:7> col:7 implicit class __libcpp_numeric_limits
| |   | |-AccessSpecDecl 0x7fe8b2195f88 <line:302:1, col:10> col:1 protected
| |   | |-TypedefDecl 0x7fe8b2195fc8 <line:303:5, col:19> col:19 referenced type 'float'
| |   | | `-BuiltinType 0x7fe8b18326c0 'float'
| |   | |-VarDecl 0x7fe8b2196030 <line:305:5, col:58> col:41 is_specialized 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fe8b2196090 <col:58> '_Bool' true
| |   | |-VarDecl 0x7fe8b2196110 <line:307:5, col:53> col:41 is_signed 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fe8b2196170 <col:53> '_Bool' true
| |   | |-VarDecl 0x7fe8b21961f8 <line:308:5, <built-in>:139:26> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:308:41 referenced digits 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fe8b2196258 <<built-in>:139:26> 'int' 24
| |   | |-VarDecl 0x7fe8b21962e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:309:5, <built-in>:134:21> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:309:41 digits10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fe8b2196348 <<built-in>:134:21> 'int' 6
| |   | |-VarDecl 0x7fe8b21963d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:310:5, col:76> col:41 max_digits10 'const int' static constexpr cinit
| |   | | `-ImplicitCastExpr 0x7fe8b21965a0 <col:56, col:76> 'const int' <IntegralCast>
| |   | |   `-BinaryOperator 0x7fe8b2196578 <col:56, col:76> 'long' '+'
| |   | |     |-ImplicitCastExpr 0x7fe8b2196560 <col:56> 'long' <IntegralCast>
| |   | |     | `-IntegerLiteral 0x7fe8b2196438 <col:56> 'int' 2
| |   | |     `-BinaryOperator 0x7fe8b2196538 <col:58, col:76> 'long' '/'
| |   | |       |-ParenExpr 0x7fe8b21964f8 <col:58, col:74> 'long'
| |   | |       | `-BinaryOperator 0x7fe8b21964d0 <col:59, col:68> 'long' '*'
| |   | |       |   |-ImplicitCastExpr 0x7fe8b21964b8 <col:59> 'long' <IntegralCast>
| |   | |       |   | `-ImplicitCastExpr 0x7fe8b21964a0 <col:59> 'int' <LValueToRValue>
| |   | |       |   |   `-DeclRefExpr 0x7fe8b2196458 <col:59> 'const int' lvalue Var 0x7fe8b21961f8 'digits' 'const int'
| |   | |       |   `-IntegerLiteral 0x7fe8b2196480 <col:68> 'long' 30103
| |   | |       `-IntegerLiteral 0x7fe8b2196518 <col:76> 'long' 100000
| |   | |-CXXMethodDecl 0x7fe8b21966e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:311:97> col:61 constexpr min 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fe8b2198328 <col:77, col:97>
| |   | | | `-ReturnStmt 0x7fe8b2198310 <col:78, <built-in>:145:21>
| |   | | |   `-FloatingLiteral 0x7fe8b21982f0 <col:21> 'float' 1.175494e-38
| |   | | |-AlwaysInlineAttr 0x7fe8b2196780 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fe8b21967c8 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fe8b2196830 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:312:97> col:61 used constexpr max 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fe8b2198380 <col:77, col:97>
| |   | | | `-ReturnStmt 0x7fe8b2198368 <col:78, <built-in>:142:21>
| |   | | |   `-FloatingLiteral 0x7fe8b2198348 <col:21> 'float' 3.402823e+38
| |   | | |-AlwaysInlineAttr 0x7fe8b21968c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fe8b2196910 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fe8b2196978 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:313:95> col:61 constexpr lowest 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fe8b2198470 <col:80, col:95>
| |   | | | `-ReturnStmt 0x7fe8b2198458 <col:81, col:93>
| |   | | |   `-UnaryOperator 0x7fe8b2198438 <col:88, col:93> 'std::__1::__libcpp_numeric_limits<float, true>::type':'float' prefix '-'
| |   | | |     `-CallExpr 0x7fe8b2198410 <col:89, col:93> 'std::__1::__libcpp_numeric_limits<float, true>::type':'float'
| |   | | |       `-ImplicitCastExpr 0x7fe8b21983f8 <col:89> 'std::__1::__libcpp_numeric_limits<float, true>::type (*)(void) noexcept' <FunctionToPointerDecay>
| |   | | |         `-DeclRefExpr 0x7fe8b21983a0 <col:89> 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept' lvalue CXXMethod 0x7fe8b2196830 'max' 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept'
| |   | | |-AlwaysInlineAttr 0x7fe8b2196a10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fe8b2196a58 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fe8b2196a78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:315:5, col:54> col:41 is_integer 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fe8b2196ad8 <col:54> '_Bool' false
| |   | |-VarDecl 0x7fe8b2196b58 <line:316:5, col:52> col:41 is_exact 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fe8b2196bb8 <col:52> '_Bool' false
| |   | |-VarDecl 0x7fe8b2196c40 <line:317:5, <built-in>:332:23> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:317:41 radix 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fe8b2196ca0 <<built-in>:332:23> 'int' 2
| |   | |-CXXMethodDecl 0x7fe8b2196d70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:318:105> col:61 constexpr epsilon 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fe8b21984c8 <col:81, col:105>
| |   | | | `-ReturnStmt 0x7fe8b21984b0 <col:82, <built-in>:136:25>
| |   | | |   `-FloatingLiteral 0x7fe8b2198490 <col:25> 'float' 1.192093e-07
| |   | | |-AlwaysInlineAttr 0x7fe8b2196e08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fe8b2196e50 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fe8b2196eb8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:319:98> col:61 constexpr round_error 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fe8b2198520 <col:85, col:98>
| |   | | | `-ReturnStmt 0x7fe8b2198508 <col:86, col:93>
| |   | | |   `-FloatingLiteral 0x7fe8b21984e8 <col:93> 'float' 5.000000e-01
| |   | | |-AlwaysInlineAttr 0x7fe8b2196f50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fe8b2196f98 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fe8b2196fc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:321:5, <built-in>:144:30> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:321:41 min_exponent 'const int' static constexpr cinit
| |   | | `-ParenExpr 0x7fe8b2197060 <<built-in>:144:25, col:30> 'int'
| |   | |   `-UnaryOperator 0x7fe8b2197040 <col:26, col:27> 'int' prefix '-'
| |   | |     `-IntegerLiteral 0x7fe8b2197020 <col:27> 'int' 125
| |   | |-VarDecl 0x7fe8b21970f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:322:5, <built-in>:143:32> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:322:41 min_exponent10 'const int' static constexpr cinit
| |   | | `-ParenExpr 0x7fe8b2197190 <<built-in>:143:28, col:32> 'int'
| |   | |   `-UnaryOperator 0x7fe8b2197170 <col:29, col:30> 'int' prefix '-'
| |   | |     `-IntegerLiteral 0x7fe8b2197150 <col:30> 'int' 37
| |   | |-VarDecl 0x7fe8b2197220 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:323:5, <built-in>:141:25> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:323:41 max_exponent 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fe8b2197280 <<built-in>:141:25> 'int' 128
| |   | |-VarDecl 0x7fe8b2197310 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:324:5, <built-in>:140:28> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:324:41 max_exponent10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fe8b2197370 <<built-in>:140:28> 'int' 38
| |   | |-VarDecl 0x7fe8b2197400 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:326:5, col:56> col:41 has_infinity 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fe8b2197460 <col:56> '_Bool' true
| |   | |-VarDecl 0x7fe8b21974e0 <line:327:5, col:57> col:41 has_quiet_NaN 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fe8b2197540 <col:57> '_Bool' true
| |   | |-VarDecl 0x7fe8b21975c0 <line:328:5, col:61> col:41 has_signaling_NaN 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fe8b2197620 <col:61> '_Bool' true
| |   | |-VarDecl 0x7fe8b21976a0 <line:329:5, col:68> col:55 has_denorm 'const enum std::__1::float_denorm_style' static constexpr cinit
| |   | | `-DeclRefExpr 0x7fe8b2197700 <col:68> 'enum std::__1::float_denorm_style' EnumConstant 0x7fe8b2179d10 'denorm_present' 'enum std::__1::float_denorm_style'
| |   | |-VarDecl 0x7fe8b2197790 <line:330:5, col:59> col:41 has_denorm_loss 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fe8b21977f0 <col:59> '_Bool' false
| |   | |-CXXMethodDecl 0x7fe8b21978b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:331:112> col:61 constexpr infinity 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fe8b2198700 <col:82, col:112>
| |   | | | `-ReturnStmt 0x7fe8b21986e8 <col:83, col:110>
| |   | | |   `-CallExpr 0x7fe8b21986c0 <col:90, col:110> 'float'
| |   | | |     `-ImplicitCastExpr 0x7fe8b21986a8 <col:90> 'float (*)(void) noexcept' <BuiltinFnToFnPtr>
| |   | | |       `-DeclRefExpr 0x7fe8b2198680 <col:90> '<builtin fn type>' Function 0x7fe8b2198590 '__builtin_huge_valf' 'float (void) noexcept'
| |   | | |-AlwaysInlineAttr 0x7fe8b2197950 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fe8b2197998 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fe8b2197a00 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:332:110> col:61 constexpr quiet_NaN 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fe8b2198a00 <col:83, col:110>
| |   | | | `-ReturnStmt 0x7fe8b21989e8 <col:84, col:108>
| |   | | |   `-CallExpr 0x7fe8b21989a0 <col:91, col:108> 'float'
| |   | | |     |-ImplicitCastExpr 0x7fe8b2198988 <col:91> 'float (*)(const char *) noexcept' <BuiltinFnToFnPtr>
| |   | | |     | `-DeclRefExpr 0x7fe8b21988c8 <col:91> '<builtin fn type>' Function 0x7fe8b2198770 '__builtin_nanf' 'float (const char *) noexcept'
| |   | | |     `-ImplicitCastExpr 0x7fe8b21989d0 <col:106> 'const char *' <ArrayToPointerDecay>
| |   | | |       `-StringLiteral 0x7fe8b21988f0 <col:106> 'const char [1]' lvalue ""
| |   | | |-AlwaysInlineAttr 0x7fe8b2197a98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fe8b2197ae0 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fe8b2197b48 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:333:115> col:61 constexpr signaling_NaN 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fe8b2198ca8 <col:87, col:115>
| |   | | | `-ReturnStmt 0x7fe8b2198c90 <col:88, col:113>
| |   | | |   `-CallExpr 0x7fe8b2198c48 <col:95, col:113> 'float'
| |   | | |     |-ImplicitCastExpr 0x7fe8b2198c30 <col:95> 'float (*)(const char *) noexcept' <BuiltinFnToFnPtr>
| |   | | |     | `-DeclRefExpr 0x7fe8b2198bc8 <col:95> '<builtin fn type>' Function 0x7fe8b2198a70 '__builtin_nansf' 'float (const char *) noexcept'
| |   | | |     `-ImplicitCastExpr 0x7fe8b2198c78 <col:111> 'const char *' <ArrayToPointerDecay>
| |   | | |       `-StringLiteral 0x7fe8b2198bf0 <col:111> 'const char [1]' lvalue ""
| |   | | |-AlwaysInlineAttr 0x7fe8b2197be0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fe8b2197c28 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fe8b2197c90 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:334:111> col:61 constexpr denorm_min 'std::__1::__libcpp_numeric_limits<float, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fe8b2198d00 <col:84, col:111>
| |   | | | `-ReturnStmt 0x7fe8b2198ce8 <col:85, <built-in>:132:28>
| |   | | |   `-FloatingLiteral 0x7fe8b2198cc8 <col:28> 'float' 1.401298e-45
| |   | | |-AlwaysInlineAttr 0x7fe8b2197d28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fe8b2197d70 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fe8b2197d90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:336:5, col:53> col:41 is_iec559 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fe8b2197df0 <col:53> '_Bool' true
| |   | |-VarDecl 0x7fe8b2197e70 <line:337:5, col:54> col:41 is_bounded 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fe8b2197ed0 <col:54> '_Bool' true
| |   | |-VarDecl 0x7fe8b2197f50 <line:338:5, col:53> col:41 is_modulo 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fe8b2197fb0 <col:53> '_Bool' false
| |   | |-VarDecl 0x7fe8b2198030 <line:340:5, col:49> col:41 traps 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fe8b2198090 <col:49> '_Bool' false
| |   | |-VarDecl 0x7fe8b2198110 <line:341:5, col:59> col:41 tinyness_before 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fe8b2198170 <col:59> '_Bool' false
| |   | `-VarDecl 0x7fe8b21981f0 <line:342:5, col:68> col:54 round_style 'const enum std::__1::float_round_style' static constexpr cinit
| |   |   `-DeclRefExpr 0x7fe8b2198250 <col:68> 'enum std::__1::float_round_style' EnumConstant 0x7fe8b2179a30 'round_to_nearest' 'enum std::__1::float_round_style'
| |   |-ClassTemplateSpecializationDecl 0x7fe8b2198d60 <line:345:1, line:389:1> line:346:7 class __libcpp_numeric_limits definition
| |   | |-TemplateArgument type 'double'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fe8b2198fd0 <col:1, col:7> col:7 implicit class __libcpp_numeric_limits
| |   | |-AccessSpecDecl 0x7fe8b2199068 <line:348:1, col:10> col:1 protected
| |   | |-TypedefDecl 0x7fe8b21990a8 <line:349:5, col:20> col:20 referenced type 'double'
| |   | | `-BuiltinType 0x7fe8b18326e0 'double'
| |   | |-VarDecl 0x7fe8b2199110 <line:351:5, col:58> col:41 is_specialized 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fe8b2199170 <col:58> '_Bool' true
| |   | |-VarDecl 0x7fe8b21991f0 <line:353:5, col:53> col:41 is_signed 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fe8b2199250 <col:53> '_Bool' true
| |   | |-VarDecl 0x7fe8b21992d8 <line:354:5, <built-in>:153:26> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:354:41 referenced digits 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fe8b2199338 <<built-in>:153:26> 'int' 53
| |   | |-VarDecl 0x7fe8b2199400 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:355:5, <built-in>:148:21> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:355:41 digits10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fe8b2199460 <<built-in>:148:21> 'int' 15
| |   | |-VarDecl 0x7fe8b21994f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:356:5, col:76> col:41 max_digits10 'const int' static constexpr cinit
| |   | | `-ImplicitCastExpr 0x7fe8b21996b8 <col:56, col:76> 'const int' <IntegralCast>
| |   | |   `-BinaryOperator 0x7fe8b2199690 <col:56, col:76> 'long' '+'
| |   | |     |-ImplicitCastExpr 0x7fe8b2199678 <col:56> 'long' <IntegralCast>
| |   | |     | `-IntegerLiteral 0x7fe8b2199550 <col:56> 'int' 2
| |   | |     `-BinaryOperator 0x7fe8b2199650 <col:58, col:76> 'long' '/'
| |   | |       |-ParenExpr 0x7fe8b2199610 <col:58, col:74> 'long'
| |   | |       | `-BinaryOperator 0x7fe8b21995e8 <col:59, col:68> 'long' '*'
| |   | |       |   |-ImplicitCastExpr 0x7fe8b21995d0 <col:59> 'long' <IntegralCast>
| |   | |       |   | `-ImplicitCastExpr 0x7fe8b21995b8 <col:59> 'int' <LValueToRValue>
| |   | |       |   |   `-DeclRefExpr 0x7fe8b2199570 <col:59> 'const int' lvalue Var 0x7fe8b21992d8 'digits' 'const int'
| |   | |       |   `-IntegerLiteral 0x7fe8b2199598 <col:68> 'long' 30103
| |   | |       `-IntegerLiteral 0x7fe8b2199630 <col:76> 'long' 100000
| |   | |-CXXMethodDecl 0x7fe8b2199808 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:357:97> col:61 constexpr min 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fe8b219b458 <col:77, col:97>
| |   | | | `-ReturnStmt 0x7fe8b219b440 <col:78, <built-in>:159:21>
| |   | | |   `-FloatingLiteral 0x7fe8b219b420 <col:21> 'double' 2.225074e-308
| |   | | |-AlwaysInlineAttr 0x7fe8b21998a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fe8b21998e8 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fe8b2199950 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:358:97> col:61 used constexpr max 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fe8b219b4b0 <col:77, col:97>
| |   | | | `-ReturnStmt 0x7fe8b219b498 <col:78, <built-in>:156:21>
| |   | | |   `-FloatingLiteral 0x7fe8b219b478 <col:21> 'double' 1.797693e+308
| |   | | |-AlwaysInlineAttr 0x7fe8b21999e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fe8b2199a30 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fe8b2199a98 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:359:95> col:61 constexpr lowest 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fe8b219b5a0 <col:80, col:95>
| |   | | | `-ReturnStmt 0x7fe8b219b588 <col:81, col:93>
| |   | | |   `-UnaryOperator 0x7fe8b219b568 <col:88, col:93> 'std::__1::__libcpp_numeric_limits<double, true>::type':'double' prefix '-'
| |   | | |     `-CallExpr 0x7fe8b219b540 <col:89, col:93> 'std::__1::__libcpp_numeric_limits<double, true>::type':'double'
| |   | | |       `-ImplicitCastExpr 0x7fe8b219b528 <col:89> 'std::__1::__libcpp_numeric_limits<double, true>::type (*)(void) noexcept' <FunctionToPointerDecay>
| |   | | |         `-DeclRefExpr 0x7fe8b219b4d0 <col:89> 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept' lvalue CXXMethod 0x7fe8b2199950 'max' 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept'
| |   | | |-AlwaysInlineAttr 0x7fe8b2199b30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fe8b2199b78 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fe8b2199b98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:361:5, col:54> col:41 is_integer 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fe8b2199bf8 <col:54> '_Bool' false
| |   | |-VarDecl 0x7fe8b2199c78 <line:362:5, col:52> col:41 is_exact 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fe8b2199cd8 <col:52> '_Bool' false
| |   | |-VarDecl 0x7fe8b2199d60 <line:363:5, <built-in>:332:23> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:363:41 radix 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fe8b2199dc0 <<built-in>:332:23> 'int' 2
| |   | |-CXXMethodDecl 0x7fe8b2199e90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:364:105> col:61 constexpr epsilon 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fe8b219b5f8 <col:81, col:105>
| |   | | | `-ReturnStmt 0x7fe8b219b5e0 <col:82, <built-in>:150:25>
| |   | | |   `-FloatingLiteral 0x7fe8b219b5c0 <col:25> 'double' 2.220446e-16
| |   | | |-AlwaysInlineAttr 0x7fe8b2199f28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fe8b2199f70 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fe8b2199fd8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:365:97> col:61 constexpr round_error 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fe8b219b650 <col:85, col:97>
| |   | | | `-ReturnStmt 0x7fe8b219b638 <col:86, col:93>
| |   | | |   `-FloatingLiteral 0x7fe8b219b618 <col:93> 'double' 5.000000e-01
| |   | | |-AlwaysInlineAttr 0x7fe8b219a070 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fe8b219a0b8 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fe8b219a0e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:367:5, <built-in>:158:31> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:367:41 min_exponent 'const int' static constexpr cinit
| |   | | `-ParenExpr 0x7fe8b219a180 <<built-in>:158:25, col:31> 'int'
| |   | |   `-UnaryOperator 0x7fe8b219a160 <col:26, col:27> 'int' prefix '-'
| |   | |     `-IntegerLiteral 0x7fe8b219a140 <col:27> 'int' 1021
| |   | |-VarDecl 0x7fe8b219a210 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:368:5, <built-in>:157:33> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:368:41 min_exponent10 'const int' static constexpr cinit
| |   | | `-ParenExpr 0x7fe8b219a2b0 <<built-in>:157:28, col:33> 'int'
| |   | |   `-UnaryOperator 0x7fe8b219a290 <col:29, col:30> 'int' prefix '-'
| |   | |     `-IntegerLiteral 0x7fe8b219a270 <col:30> 'int' 307
| |   | |-VarDecl 0x7fe8b219a340 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:369:5, <built-in>:155:25> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:369:41 max_exponent 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fe8b219a3a0 <<built-in>:155:25> 'int' 1024
| |   | |-VarDecl 0x7fe8b219a430 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:370:5, <built-in>:154:28> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:370:41 max_exponent10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fe8b219a490 <<built-in>:154:28> 'int' 308
| |   | |-VarDecl 0x7fe8b219a518 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:372:5, col:56> col:41 has_infinity 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fe8b219a578 <col:56> '_Bool' true
| |   | |-VarDecl 0x7fe8b219a5f8 <line:373:5, col:57> col:41 has_quiet_NaN 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fe8b219a658 <col:57> '_Bool' true
| |   | |-VarDecl 0x7fe8b219a6d8 <line:374:5, col:61> col:41 has_signaling_NaN 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fe8b219a738 <col:61> '_Bool' true
| |   | |-VarDecl 0x7fe8b219a7b8 <line:375:5, col:68> col:55 has_denorm 'const enum std::__1::float_denorm_style' static constexpr cinit
| |   | | `-DeclRefExpr 0x7fe8b219a818 <col:68> 'enum std::__1::float_denorm_style' EnumConstant 0x7fe8b2179d10 'denorm_present' 'enum std::__1::float_denorm_style'
| |   | |-VarDecl 0x7fe8b219a8a8 <line:376:5, col:59> col:41 has_denorm_loss 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fe8b219a908 <col:59> '_Bool' false
| |   | |-CXXMethodDecl 0x7fe8b219a9d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:377:111> col:61 constexpr infinity 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fe8b219b830 <col:82, col:111>
| |   | | | `-ReturnStmt 0x7fe8b219b818 <col:83, col:109>
| |   | | |   `-CallExpr 0x7fe8b219b7f0 <col:90, col:109> 'double'
| |   | | |     `-ImplicitCastExpr 0x7fe8b219b7d8 <col:90> 'double (*)(void) noexcept' <BuiltinFnToFnPtr>
| |   | | |       `-DeclRefExpr 0x7fe8b219b7b0 <col:90> '<builtin fn type>' Function 0x7fe8b219b6c0 '__builtin_huge_val' 'double (void) noexcept'
| |   | | |-AlwaysInlineAttr 0x7fe8b219aa68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fe8b219aab0 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fe8b219ab18 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:378:109> col:61 constexpr quiet_NaN 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fe8b219bb30 <col:83, col:109>
| |   | | | `-ReturnStmt 0x7fe8b219bb18 <col:84, col:107>
| |   | | |   `-CallExpr 0x7fe8b219bad0 <col:91, col:107> 'double'
| |   | | |     |-ImplicitCastExpr 0x7fe8b219bab8 <col:91> 'double (*)(const char *) noexcept' <BuiltinFnToFnPtr>
| |   | | |     | `-DeclRefExpr 0x7fe8b219b9f8 <col:91> '<builtin fn type>' Function 0x7fe8b219b8a0 '__builtin_nan' 'double (const char *) noexcept'
| |   | | |     `-ImplicitCastExpr 0x7fe8b219bb00 <col:105> 'const char *' <ArrayToPointerDecay>
| |   | | |       `-StringLiteral 0x7fe8b219ba20 <col:105> 'const char [1]' lvalue ""
| |   | | |-AlwaysInlineAttr 0x7fe8b219abb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fe8b219abf8 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fe8b219ac60 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:379:114> col:61 constexpr signaling_NaN 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fe8b219bdd8 <col:87, col:114>
| |   | | | `-ReturnStmt 0x7fe8b219bdc0 <col:88, col:112>
| |   | | |   `-CallExpr 0x7fe8b219bd78 <col:95, col:112> 'double'
| |   | | |     |-ImplicitCastExpr 0x7fe8b219bd60 <col:95> 'double (*)(const char *) noexcept' <BuiltinFnToFnPtr>
| |   | | |     | `-DeclRefExpr 0x7fe8b219bcf8 <col:95> '<builtin fn type>' Function 0x7fe8b219bba0 '__builtin_nans' 'double (const char *) noexcept'
| |   | | |     `-ImplicitCastExpr 0x7fe8b219bda8 <col:110> 'const char *' <ArrayToPointerDecay>
| |   | | |       `-StringLiteral 0x7fe8b219bd20 <col:110> 'const char [1]' lvalue ""
| |   | | |-AlwaysInlineAttr 0x7fe8b219acf8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fe8b219ad40 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fe8b219ada8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:380:111> col:61 constexpr denorm_min 'std::__1::__libcpp_numeric_limits<double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fe8b219be30 <col:84, col:111>
| |   | | | `-ReturnStmt 0x7fe8b219be18 <col:85, <built-in>:146:28>
| |   | | |   `-FloatingLiteral 0x7fe8b219bdf8 <col:28> 'double' 4.940656e-324
| |   | | |-AlwaysInlineAttr 0x7fe8b219ae40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fe8b219ae88 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fe8b219aea8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:382:5, col:53> col:41 is_iec559 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fe8b219af08 <col:53> '_Bool' true
| |   | |-VarDecl 0x7fe8b219af88 <line:383:5, col:54> col:41 is_bounded 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fe8b219afe8 <col:54> '_Bool' true
| |   | |-VarDecl 0x7fe8b219b068 <line:384:5, col:53> col:41 is_modulo 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fe8b219b0c8 <col:53> '_Bool' false
| |   | |-VarDecl 0x7fe8b219b148 <line:386:5, col:49> col:41 traps 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fe8b219b1a8 <col:49> '_Bool' false
| |   | |-VarDecl 0x7fe8b219b228 <line:387:5, col:59> col:41 tinyness_before 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fe8b219b288 <col:59> '_Bool' false
| |   | `-VarDecl 0x7fe8b219b308 <line:388:5, col:68> col:54 round_style 'const enum std::__1::float_round_style' static constexpr cinit
| |   |   `-DeclRefExpr 0x7fe8b219b368 <col:68> 'enum std::__1::float_round_style' EnumConstant 0x7fe8b2179a30 'round_to_nearest' 'enum std::__1::float_round_style'
| |   |-ClassTemplateSpecializationDecl 0x7fe8b219be90 <line:391:1, line:439:1> line:392:7 class __libcpp_numeric_limits definition
| |   | |-TemplateArgument type 'long double'
| |   | |-TemplateArgument integral 1
| |   | |-CXXRecordDecl 0x7fe8b219c100 <col:1, col:7> col:7 implicit class __libcpp_numeric_limits
| |   | |-AccessSpecDecl 0x7fe8b219c198 <line:394:1, col:10> col:1 protected
| |   | |-TypedefDecl 0x7fe8b219c1d8 <line:395:5, col:25> col:25 referenced type 'long double'
| |   | | `-BuiltinType 0x7fe8b1832700 'long double'
| |   | |-VarDecl 0x7fe8b219c240 <line:397:5, col:58> col:41 is_specialized 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fe8b219c2a0 <col:58> '_Bool' true
| |   | |-VarDecl 0x7fe8b219c320 <line:399:5, col:53> col:41 is_signed 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fe8b219c380 <col:53> '_Bool' true
| |   | |-VarDecl 0x7fe8b219c408 <line:400:5, <built-in>:167:27> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:400:41 referenced digits 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fe8b219c468 <<built-in>:167:27> 'int' 64
| |   | |-VarDecl 0x7fe8b219c4f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:401:5, <built-in>:162:22> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:401:41 digits10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fe8b219c558 <<built-in>:162:22> 'int' 18
| |   | |-VarDecl 0x7fe8b219c5e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:402:5, col:76> col:41 max_digits10 'const int' static constexpr cinit
| |   | | `-ImplicitCastExpr 0x7fe8b219c7b0 <col:56, col:76> 'const int' <IntegralCast>
| |   | |   `-BinaryOperator 0x7fe8b219c788 <col:56, col:76> 'long' '+'
| |   | |     |-ImplicitCastExpr 0x7fe8b219c770 <col:56> 'long' <IntegralCast>
| |   | |     | `-IntegerLiteral 0x7fe8b219c648 <col:56> 'int' 2
| |   | |     `-BinaryOperator 0x7fe8b219c748 <col:58, col:76> 'long' '/'
| |   | |       |-ParenExpr 0x7fe8b219c708 <col:58, col:74> 'long'
| |   | |       | `-BinaryOperator 0x7fe8b219c6e0 <col:59, col:68> 'long' '*'
| |   | |       |   |-ImplicitCastExpr 0x7fe8b219c6c8 <col:59> 'long' <IntegralCast>
| |   | |       |   | `-ImplicitCastExpr 0x7fe8b219c6b0 <col:59> 'int' <LValueToRValue>
| |   | |       |   |   `-DeclRefExpr 0x7fe8b219c668 <col:59> 'const int' lvalue Var 0x7fe8b219c408 'digits' 'const int'
| |   | |       |   `-IntegerLiteral 0x7fe8b219c690 <col:68> 'long' 30103
| |   | |       `-IntegerLiteral 0x7fe8b219c728 <col:76> 'long' 100000
| |   | |-CXXMethodDecl 0x7fe8b219c8f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:403:98> col:61 constexpr min 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fe8b219e580 <col:77, col:98>
| |   | | | `-ReturnStmt 0x7fe8b219e568 <col:78, <built-in>:173:22>
| |   | | |   `-FloatingLiteral 0x7fe8b219e538 <col:22> 'long double' 0.000000e+00
| |   | | |-AlwaysInlineAttr 0x7fe8b219c990 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fe8b219c9d8 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fe8b219ca40 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:404:98> col:61 used constexpr max 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fe8b219e5e8 <col:77, col:98>
| |   | | | `-ReturnStmt 0x7fe8b219e5d0 <col:78, <built-in>:170:22>
| |   | | |   `-FloatingLiteral 0x7fe8b219e5a0 <col:22> 'long double' INF
| |   | | |-AlwaysInlineAttr 0x7fe8b219cad8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fe8b219cb20 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fe8b219cb88 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:405:95> col:61 constexpr lowest 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fe8b219e6d0 <col:80, col:95>
| |   | | | `-ReturnStmt 0x7fe8b219e6b8 <col:81, col:93>
| |   | | |   `-UnaryOperator 0x7fe8b219e698 <col:88, col:93> 'std::__1::__libcpp_numeric_limits<long double, true>::type':'long double' prefix '-'
| |   | | |     `-CallExpr 0x7fe8b219e670 <col:89, col:93> 'std::__1::__libcpp_numeric_limits<long double, true>::type':'long double'
| |   | | |       `-ImplicitCastExpr 0x7fe8b219e658 <col:89> 'std::__1::__libcpp_numeric_limits<long double, true>::type (*)(void) noexcept' <FunctionToPointerDecay>
| |   | | |         `-DeclRefExpr 0x7fe8b219e608 <col:89> 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept' lvalue CXXMethod 0x7fe8b219ca40 'max' 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept'
| |   | | |-AlwaysInlineAttr 0x7fe8b219cc20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fe8b219cc68 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fe8b219cc88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:407:5, col:54> col:41 is_integer 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fe8b219cce8 <col:54> '_Bool' false
| |   | |-VarDecl 0x7fe8b219cd68 <line:408:5, col:52> col:41 is_exact 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fe8b219cdc8 <col:52> '_Bool' false
| |   | |-VarDecl 0x7fe8b219ce50 <line:409:5, <built-in>:332:23> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:409:41 radix 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fe8b219ceb0 <<built-in>:332:23> 'int' 2
| |   | |-CXXMethodDecl 0x7fe8b219cf80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:410:106> col:61 constexpr epsilon 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fe8b219e738 <col:81, col:106>
| |   | | | `-ReturnStmt 0x7fe8b219e720 <col:82, <built-in>:164:26>
| |   | | |   `-FloatingLiteral 0x7fe8b219e6f0 <col:26> 'long double' 1.084202e-19
| |   | | |-AlwaysInlineAttr 0x7fe8b219d018 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fe8b219d060 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fe8b219d0c8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:411:97> col:61 constexpr round_error 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fe8b219e7a8 <col:85, col:97>
| |   | | | `-ReturnStmt 0x7fe8b219e790 <col:86, col:93>
| |   | | |   `-ImplicitCastExpr 0x7fe8b219e778 <col:93> 'std::__1::__libcpp_numeric_limits<long double, true>::type':'long double' <FloatingCast>
| |   | | |     `-FloatingLiteral 0x7fe8b219e758 <col:93> 'double' 5.000000e-01
| |   | | |-AlwaysInlineAttr 0x7fe8b219d160 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fe8b219d1a8 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fe8b219d1d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:413:5, <built-in>:172:33> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:413:41 min_exponent 'const int' static constexpr cinit
| |   | | `-ParenExpr 0x7fe8b219d270 <<built-in>:172:26, col:33> 'int'
| |   | |   `-UnaryOperator 0x7fe8b219d250 <col:27, col:28> 'int' prefix '-'
| |   | |     `-IntegerLiteral 0x7fe8b219d230 <col:28> 'int' 16381
| |   | |-VarDecl 0x7fe8b219d300 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:414:5, <built-in>:171:35> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:414:41 min_exponent10 'const int' static constexpr cinit
| |   | | `-ParenExpr 0x7fe8b219d3a0 <<built-in>:171:29, col:35> 'int'
| |   | |   `-UnaryOperator 0x7fe8b219d380 <col:30, col:31> 'int' prefix '-'
| |   | |     `-IntegerLiteral 0x7fe8b219d360 <col:31> 'int' 4931
| |   | |-VarDecl 0x7fe8b219d470 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:415:5, <built-in>:169:26> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:415:41 max_exponent 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fe8b219d4d0 <<built-in>:169:26> 'int' 16384
| |   | |-VarDecl 0x7fe8b219d560 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:416:5, <built-in>:168:29> /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:416:41 max_exponent10 'const int' static constexpr cinit
| |   | | `-IntegerLiteral 0x7fe8b219d5c0 <<built-in>:168:29> 'int' 4932
| |   | |-VarDecl 0x7fe8b219d648 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:418:5, col:56> col:41 has_infinity 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fe8b219d6a8 <col:56> '_Bool' true
| |   | |-VarDecl 0x7fe8b219d728 <line:419:5, col:57> col:41 has_quiet_NaN 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fe8b219d788 <col:57> '_Bool' true
| |   | |-VarDecl 0x7fe8b219d808 <line:420:5, col:61> col:41 has_signaling_NaN 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fe8b219d868 <col:61> '_Bool' true
| |   | |-VarDecl 0x7fe8b219d8e8 <line:421:5, col:68> col:55 has_denorm 'const enum std::__1::float_denorm_style' static constexpr cinit
| |   | | `-DeclRefExpr 0x7fe8b219d948 <col:68> 'enum std::__1::float_denorm_style' EnumConstant 0x7fe8b2179d10 'denorm_present' 'enum std::__1::float_denorm_style'
| |   | |-VarDecl 0x7fe8b219d9d8 <line:422:5, col:59> col:41 has_denorm_loss 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fe8b219da38 <col:59> '_Bool' false
| |   | |-CXXMethodDecl 0x7fe8b219db00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:423:112> col:61 constexpr infinity 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fe8b219e988 <col:82, col:112>
| |   | | | `-ReturnStmt 0x7fe8b219e970 <col:83, col:110>
| |   | | |   `-CallExpr 0x7fe8b219e948 <col:90, col:110> 'long double'
| |   | | |     `-ImplicitCastExpr 0x7fe8b219e930 <col:90> 'long double (*)(void) noexcept' <BuiltinFnToFnPtr>
| |   | | |       `-DeclRefExpr 0x7fe8b219e908 <col:90> '<builtin fn type>' Function 0x7fe8b219e818 '__builtin_huge_vall' 'long double (void) noexcept'
| |   | | |-AlwaysInlineAttr 0x7fe8b219db98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fe8b219dbe0 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fe8b219dc48 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:424:110> col:61 constexpr quiet_NaN 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fe8b219ec90 <col:83, col:110>
| |   | | | `-ReturnStmt 0x7fe8b219ec78 <col:84, col:108>
| |   | | |   `-CallExpr 0x7fe8b219ec30 <col:91, col:108> 'long double'
| |   | | |     |-ImplicitCastExpr 0x7fe8b219ec18 <col:91> 'long double (*)(const char *) noexcept' <BuiltinFnToFnPtr>
| |   | | |     | `-DeclRefExpr 0x7fe8b219eb50 <col:91> '<builtin fn type>' Function 0x7fe8b219e9f8 '__builtin_nanl' 'long double (const char *) noexcept'
| |   | | |     `-ImplicitCastExpr 0x7fe8b219ec60 <col:106> 'const char *' <ArrayToPointerDecay>
| |   | | |       `-StringLiteral 0x7fe8b219eb78 <col:106> 'const char [1]' lvalue ""
| |   | | |-AlwaysInlineAttr 0x7fe8b219dce0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fe8b219dd28 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fe8b219dd90 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:425:115> col:61 constexpr signaling_NaN 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fe8b219ef38 <col:87, col:115>
| |   | | | `-ReturnStmt 0x7fe8b219ef20 <col:88, col:113>
| |   | | |   `-CallExpr 0x7fe8b219eed8 <col:95, col:113> 'long double'
| |   | | |     |-ImplicitCastExpr 0x7fe8b219eec0 <col:95> 'long double (*)(const char *) noexcept' <BuiltinFnToFnPtr>
| |   | | |     | `-DeclRefExpr 0x7fe8b219ee58 <col:95> '<builtin fn type>' Function 0x7fe8b219ed00 '__builtin_nansl' 'long double (const char *) noexcept'
| |   | | |     `-ImplicitCastExpr 0x7fe8b219ef08 <col:111> 'const char *' <ArrayToPointerDecay>
| |   | | |       `-StringLiteral 0x7fe8b219ee80 <col:111> 'const char [1]' lvalue ""
| |   | | |-AlwaysInlineAttr 0x7fe8b219de28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fe8b219de70 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fe8b219ded8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:426:112> col:61 constexpr denorm_min 'std::__1::__libcpp_numeric_limits<long double, true>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fe8b219efa0 <col:84, col:112>
| |   | | | `-ReturnStmt 0x7fe8b219ef88 <col:85, <built-in>:160:29>
| |   | | |   `-FloatingLiteral 0x7fe8b219ef58 <col:29> 'long double' 0.000000e+00
| |   | | |-AlwaysInlineAttr 0x7fe8b219df70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fe8b219dfb8 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fe8b219dfd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:431:5, col:53> col:41 is_iec559 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fe8b219e038 <col:53> '_Bool' true
| |   | |-VarDecl 0x7fe8b219e0b8 <line:433:5, col:54> col:41 is_bounded 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fe8b219e118 <col:54> '_Bool' true
| |   | |-VarDecl 0x7fe8b219e198 <line:434:5, col:53> col:41 is_modulo 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fe8b219e1f8 <col:53> '_Bool' false
| |   | |-VarDecl 0x7fe8b219e278 <line:436:5, col:49> col:41 traps 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fe8b219e2d8 <col:49> '_Bool' false
| |   | |-VarDecl 0x7fe8b219e358 <line:437:5, col:59> col:41 tinyness_before 'const _Bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0x7fe8b219e3b8 <col:59> '_Bool' false
| |   | `-VarDecl 0x7fe8b219e438 <line:438:5, col:68> col:54 round_style 'const enum std::__1::float_round_style' static constexpr cinit
| |   |   `-DeclRefExpr 0x7fe8b219e498 <col:68> 'enum std::__1::float_round_style' EnumConstant 0x7fe8b2179a30 'round_to_nearest' 'enum std::__1::float_round_style'
| |   |-ClassTemplateDecl 0x7fe8b219f108 <line:441:1, line:485:1> line:442:28 numeric_limits
| |   | |-TemplateTypeParmDecl 0x7fe8b219efc0 <line:441:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | `-CXXRecordDecl 0x7fe8b219f070 <line:442:1, line:485:1> line:442:28 class numeric_limits definition
| |   |   |-private '__libcpp_numeric_limits<typename remove_cv<_Tp>::type>'
| |   |   |-TypeVisibilityAttr 0x7fe8b219f380 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   |   |-CXXRecordDecl 0x7fe8b219f7a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:442:1, col:28> col:28 implicit class numeric_limits
| |   |   |-TypedefDecl 0x7fe8b219faf8 <line:445:5, col:68> col:68 referenced __base '__libcpp_numeric_limits<typename remove_cv<_Tp>::type>'
| |   |   | `-TemplateSpecializationType 0x7fe8b219fa50 '__libcpp_numeric_limits<typename remove_cv<_Tp>::type>' dependent __libcpp_numeric_limits
| |   |   |   `-TemplateArgument type 'typename remove_cv<_Tp>::type'
| |   |   |-TypedefDecl 0x7fe8b219fc60 <line:446:5, col:35> col:35 referenced type 'typename __base::type'
| |   |   | `-DependentNameType 0x7fe8b219fbf0 'typename __base::type' dependent
| |   |   |-AccessSpecDecl 0x7fe8b219fcb8 <line:447:1, col:7> col:1 public
| |   |   |-VarDecl 0x7fe8b219fcf0 <line:448:5, col:66> col:41 is_specialized 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fe8b219fd88 <col:58, col:66> '<dependent type>' lvalue
| |   |   |-CXXMethodDecl 0x7fe8b219fed8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:449:99> col:61 constexpr min 'std::__1::numeric_limits::type (void) noexcept' static
| |   |   | |-CompoundStmt 0x7fe8b21a1f10 <col:77, col:99>
| |   |   | | `-ReturnStmt 0x7fe8b21a1ef8 <col:78, col:97>
| |   |   | |   `-CallExpr 0x7fe8b21a1ed0 <col:85, col:97> '<dependent type>'
| |   |   | |     `-DependentScopeDeclRefExpr 0x7fe8b21a1e90 <col:85, col:93> '<dependent type>' lvalue
| |   |   | |-AlwaysInlineAttr 0x7fe8b219ff70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   | `-VisibilityAttr 0x7fe8b219ffb8 <col:51, col:74> Hidden
| |   |   |-CXXMethodDecl 0x7fe8b21a0020 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:450:99> col:61 constexpr max 'std::__1::numeric_limits::type (void) noexcept' static
| |   |   | |-CompoundStmt 0x7fe8b21a1fe8 <col:77, col:99>
| |   |   | | `-ReturnStmt 0x7fe8b21a1fd0 <col:78, col:97>
| |   |   | |   `-CallExpr 0x7fe8b21a1fa8 <col:85, col:97> '<dependent type>'
| |   |   | |     `-DependentScopeDeclRefExpr 0x7fe8b21a1f68 <col:85, col:93> '<dependent type>' lvalue
| |   |   | |-AlwaysInlineAttr 0x7fe8b21a00b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   | `-VisibilityAttr 0x7fe8b21a0100 <col:51, col:74> Hidden
| |   |   |-CXXMethodDecl 0x7fe8b21a0168 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:451:105> col:61 constexpr lowest 'std::__1::numeric_limits::type (void) noexcept' static
| |   |   | |-CompoundStmt 0x7fe8b21a20c0 <col:80, col:105>
| |   |   | | `-ReturnStmt 0x7fe8b21a20a8 <col:81, col:103>
| |   |   | |   `-CallExpr 0x7fe8b21a2080 <col:88, col:103> '<dependent type>'
| |   |   | |     `-DependentScopeDeclRefExpr 0x7fe8b21a2040 <col:88, col:96> '<dependent type>' lvalue
| |   |   | |-AlwaysInlineAttr 0x7fe8b21a0200 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   | `-VisibilityAttr 0x7fe8b21a0248 <col:51, col:74> Hidden
| |   |   |-VarDecl 0x7fe8b21a0270 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:453:5, col:58> col:41 digits 'const int' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fe8b21a0308 <col:50, col:58> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fe8b21a0360 <line:454:5, col:60> col:41 digits10 'const int' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fe8b21a03f8 <col:52, col:60> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fe8b21a0450 <line:455:5, col:64> col:41 max_digits10 'const int' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fe8b21a04e8 <col:56, col:64> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fe8b21a0538 <line:456:5, col:61> col:41 is_signed 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fe8b21a05d0 <col:53, col:61> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fe8b21a0620 <line:457:5, col:62> col:41 is_integer 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fe8b21a06b8 <col:54, col:62> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fe8b21a0708 <line:458:5, col:60> col:41 is_exact 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fe8b21a07a0 <col:52, col:60> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fe8b21a07f8 <line:459:5, col:57> col:41 radix 'const int' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fe8b21a0890 <col:49, col:57> '<dependent type>' lvalue
| |   |   |-CXXMethodDecl 0x7fe8b21a0928 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:460:107> col:61 constexpr epsilon 'std::__1::numeric_limits::type (void) noexcept' static
| |   |   | |-CompoundStmt 0x7fe8b21a2198 <col:81, col:107>
| |   |   | | `-ReturnStmt 0x7fe8b21a2180 <col:82, col:105>
| |   |   | |   `-CallExpr 0x7fe8b21a2158 <col:89, col:105> '<dependent type>'
| |   |   | |     `-DependentScopeDeclRefExpr 0x7fe8b21a2118 <col:89, col:97> '<dependent type>' lvalue
| |   |   | |-AlwaysInlineAttr 0x7fe8b21a09c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   | `-VisibilityAttr 0x7fe8b21a0a08 <col:51, col:74> Hidden
| |   |   |-CXXMethodDecl 0x7fe8b21a0a70 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:461:115> col:61 constexpr round_error 'std::__1::numeric_limits::type (void) noexcept' static
| |   |   | |-CompoundStmt 0x7fe8b21a2270 <col:85, col:115>
| |   |   | | `-ReturnStmt 0x7fe8b21a2258 <col:86, col:113>
| |   |   | |   `-CallExpr 0x7fe8b21a2230 <col:93, col:113> '<dependent type>'
| |   |   | |     `-DependentScopeDeclRefExpr 0x7fe8b21a21f0 <col:93, col:101> '<dependent type>' lvalue
| |   |   | |-AlwaysInlineAttr 0x7fe8b21a0b08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   | `-VisibilityAttr 0x7fe8b21a0b50 <col:51, col:74> Hidden
| |   |   |-VarDecl 0x7fe8b21a0b78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:463:5, col:64> col:41 min_exponent 'const int' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fe8b21a0c10 <col:56, col:64> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fe8b21a0c68 <line:464:5, col:66> col:41 min_exponent10 'const int' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fe8b21a0d00 <col:58, col:66> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fe8b21a0d58 <line:465:5, col:64> col:41 max_exponent 'const int' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fe8b21a0df0 <col:56, col:64> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fe8b21a0e48 <line:466:5, col:66> col:41 max_exponent10 'const int' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fe8b21a0ee0 <col:58, col:66> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fe8b21a0f30 <line:468:5, col:64> col:41 has_infinity 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fe8b21a0fc8 <col:56, col:64> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fe8b21a1018 <line:469:5, col:65> col:41 has_quiet_NaN 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fe8b21a10b0 <col:57, col:65> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fe8b21a1100 <line:470:5, col:69> col:41 has_signaling_NaN 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fe8b21a1198 <col:61, col:69> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fe8b21a11e8 <line:471:5, col:76> col:55 has_denorm 'const enum std::__1::float_denorm_style' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fe8b21a1280 <col:68, col:76> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fe8b21a12d0 <line:472:5, col:67> col:41 has_denorm_loss 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fe8b21a1368 <col:59, col:67> '<dependent type>' lvalue
| |   |   |-CXXMethodDecl 0x7fe8b21a1400 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:473:109> col:61 constexpr infinity 'std::__1::numeric_limits::type (void) noexcept' static
| |   |   | |-CompoundStmt 0x7fe8b21a2348 <col:82, col:109>
| |   |   | | `-ReturnStmt 0x7fe8b21a2330 <col:83, col:107>
| |   |   | |   `-CallExpr 0x7fe8b21a2308 <col:90, col:107> '<dependent type>'
| |   |   | |     `-DependentScopeDeclRefExpr 0x7fe8b21a22c8 <col:90, col:98> '<dependent type>' lvalue
| |   |   | |-AlwaysInlineAttr 0x7fe8b21a1498 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   | `-VisibilityAttr 0x7fe8b21a14e0 <col:51, col:74> Hidden
| |   |   |-CXXMethodDecl 0x7fe8b21a1548 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:474:111> col:61 constexpr quiet_NaN 'std::__1::numeric_limits::type (void) noexcept' static
| |   |   | |-CompoundStmt 0x7fe8b21a2420 <col:83, col:111>
| |   |   | | `-ReturnStmt 0x7fe8b21a2408 <col:84, col:109>
| |   |   | |   `-CallExpr 0x7fe8b21a23e0 <col:91, col:109> '<dependent type>'
| |   |   | |     `-DependentScopeDeclRefExpr 0x7fe8b21a23a0 <col:91, col:99> '<dependent type>' lvalue
| |   |   | |-AlwaysInlineAttr 0x7fe8b21a15e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   | `-VisibilityAttr 0x7fe8b21a1628 <col:51, col:74> Hidden
| |   |   |-CXXMethodDecl 0x7fe8b21a1690 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:475:119> col:61 constexpr signaling_NaN 'std::__1::numeric_limits::type (void) noexcept' static
| |   |   | |-CompoundStmt 0x7fe8b21a24f8 <col:87, col:119>
| |   |   | | `-ReturnStmt 0x7fe8b21a24e0 <col:88, col:117>
| |   |   | |   `-CallExpr 0x7fe8b21a24b8 <col:95, col:117> '<dependent type>'
| |   |   | |     `-DependentScopeDeclRefExpr 0x7fe8b21a2478 <col:95, col:103> '<dependent type>' lvalue
| |   |   | |-AlwaysInlineAttr 0x7fe8b21a1728 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   | `-VisibilityAttr 0x7fe8b21a1770 <col:51, col:74> Hidden
| |   |   |-CXXMethodDecl 0x7fe8b21a17d8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:476:113> col:61 constexpr denorm_min 'std::__1::numeric_limits::type (void) noexcept' static
| |   |   | |-CompoundStmt 0x7fe8b21a25d0 <col:84, col:113>
| |   |   | | `-ReturnStmt 0x7fe8b21a25b8 <col:85, col:111>
| |   |   | |   `-CallExpr 0x7fe8b21a2590 <col:92, col:111> '<dependent type>'
| |   |   | |     `-DependentScopeDeclRefExpr 0x7fe8b21a2550 <col:92, col:100> '<dependent type>' lvalue
| |   |   | |-AlwaysInlineAttr 0x7fe8b21a1870 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   |   | `-VisibilityAttr 0x7fe8b21a18b8 <col:51, col:74> Hidden
| |   |   |-VarDecl 0x7fe8b21a18d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:478:5, col:61> col:41 is_iec559 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fe8b21a1970 <col:53, col:61> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fe8b21a19c0 <line:479:5, col:62> col:41 is_bounded 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fe8b21a1a58 <col:54, col:62> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fe8b21a1aa8 <line:480:5, col:61> col:41 is_modulo 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fe8b21a1b40 <col:53, col:61> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fe8b21a1b90 <line:482:5, col:57> col:41 traps 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fe8b21a1c28 <col:49, col:57> '<dependent type>' lvalue
| |   |   |-VarDecl 0x7fe8b21a1c78 <line:483:5, col:67> col:41 tinyness_before 'const _Bool' static constexpr cinit
| |   |   | `-DependentScopeDeclRefExpr 0x7fe8b21a1d10 <col:59, col:67> '<dependent type>' lvalue
| |   |   `-VarDecl 0x7fe8b21a1d60 <line:484:5, col:76> col:54 round_style 'const enum std::__1::float_round_style' static constexpr cinit
| |   |     `-DependentScopeDeclRefExpr 0x7fe8b21a1df8 <col:68, col:76> '<dependent type>' lvalue
| |   |-VarDecl 0x7fe8b21a27e0 parent 0x7fe8b219f070 prev 0x7fe8b219fcf0 <line:487:1, line:488:55> col:55 is_specialized 'const _Bool' constexpr
| |   |-VarDecl 0x7fe8b21a2a78 parent 0x7fe8b219f070 prev 0x7fe8b21a0270 <line:489:1, line:490:54> col:54 digits 'const int' constexpr
| |   |-VarDecl 0x7fe8b21a2d18 parent 0x7fe8b219f070 prev 0x7fe8b21a0360 <line:491:1, line:492:54> col:54 digits10 'const int' constexpr
| |   |-VarDecl 0x7fe8b21a2fb8 parent 0x7fe8b219f070 prev 0x7fe8b21a0450 <line:493:1, line:494:54> col:54 max_digits10 'const int' constexpr
| |   |-VarDecl 0x7fe8b21a3250 parent 0x7fe8b219f070 prev 0x7fe8b21a0538 <line:495:1, line:496:55> col:55 is_signed 'const _Bool' constexpr
| |   |-VarDecl 0x7fe8b20e6af0 parent 0x7fe8b219f070 prev 0x7fe8b21a0620 <line:497:1, line:498:55> col:55 is_integer 'const _Bool' constexpr
| |   |-VarDecl 0x7fe8b20e6d80 parent 0x7fe8b219f070 prev 0x7fe8b21a0708 <line:499:1, line:500:55> col:55 is_exact 'const _Bool' constexpr
| |   |-VarDecl 0x7fe8b20e7018 parent 0x7fe8b219f070 prev 0x7fe8b21a07f8 <line:501:1, line:502:54> col:54 radix 'const int' constexpr
| |   |-VarDecl 0x7fe8b20e72b8 parent 0x7fe8b219f070 prev 0x7fe8b21a0b78 <line:503:1, line:504:54> col:54 min_exponent 'const int' constexpr
| |   |-VarDecl 0x7fe8b20e7558 parent 0x7fe8b219f070 prev 0x7fe8b21a0c68 <line:505:1, line:506:54> col:54 min_exponent10 'const int' constexpr
| |   |-VarDecl 0x7fe8b20e77f8 parent 0x7fe8b219f070 prev 0x7fe8b21a0d58 <line:507:1, line:508:54> col:54 max_exponent 'const int' constexpr
| |   |-VarDecl 0x7fe8b20e7a98 parent 0x7fe8b219f070 prev 0x7fe8b21a0e48 <line:509:1, line:510:54> col:54 max_exponent10 'const int' constexpr
| |   |-VarDecl 0x7fe8b20e7d30 parent 0x7fe8b219f070 prev 0x7fe8b21a0f30 <line:511:1, line:512:55> col:55 has_infinity 'const _Bool' constexpr
| |   |-VarDecl 0x7fe8b20e7fc0 parent 0x7fe8b219f070 prev 0x7fe8b21a1018 <line:513:1, line:514:55> col:55 has_quiet_NaN 'const _Bool' constexpr
| |   |-VarDecl 0x7fe8b20e8250 parent 0x7fe8b219f070 prev 0x7fe8b21a1100 <line:515:1, line:516:55> col:55 has_signaling_NaN 'const _Bool' constexpr
| |   |-VarDecl 0x7fe8b20e84e0 parent 0x7fe8b219f070 prev 0x7fe8b21a11e8 <line:517:1, line:518:69> col:69 has_denorm 'const enum std::__1::float_denorm_style' constexpr
| |   |-VarDecl 0x7fe8b20e8770 parent 0x7fe8b219f070 prev 0x7fe8b21a12d0 <line:519:1, line:520:55> col:55 has_denorm_loss 'const _Bool' constexpr
| |   |-VarDecl 0x7fe8b20e9a00 parent 0x7fe8b219f070 prev 0x7fe8b21a18d8 <line:521:1, line:522:55> col:55 is_iec559 'const _Bool' constexpr
| |   |-VarDecl 0x7fe8b20e9c90 parent 0x7fe8b219f070 prev 0x7fe8b21a19c0 <line:523:1, line:524:55> col:55 is_bounded 'const _Bool' constexpr
| |   |-VarDecl 0x7fe8b20e9f20 parent 0x7fe8b219f070 prev 0x7fe8b21a1aa8 <line:525:1, line:526:55> col:55 is_modulo 'const _Bool' constexpr
| |   |-VarDecl 0x7fe8b20ea1b0 parent 0x7fe8b219f070 prev 0x7fe8b21a1b90 <line:527:1, line:528:55> col:55 traps 'const _Bool' constexpr
| |   |-VarDecl 0x7fe8b20ea440 parent 0x7fe8b219f070 prev 0x7fe8b21a1c78 <line:529:1, line:530:55> col:55 tinyness_before 'const _Bool' constexpr
| |   |-VarDecl 0x7fe8b20ea6d0 parent 0x7fe8b219f070 prev 0x7fe8b21a1d60 <line:531:1, line:532:68> col:68 round_style 'const enum std::__1::float_round_style' constexpr
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b20ea908 <line:534:1, line:578:1> line:535:28 class numeric_limits definition
| |   | |-private 'numeric_limits<_Tp>'
| |   | |-TemplateArgument type 'const type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fe8b20ea770 <line:534:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fe8b20eaa48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fe8b20eac38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:535:1, col:28> col:28 implicit class numeric_limits
| |   | |-TypedefDecl 0x7fe8b20ead88 <line:538:5, col:33> col:33 referenced __base 'numeric_limits<_Tp>'
| |   | | `-TemplateSpecializationType 0x7fe8b20eace0 'numeric_limits<_Tp>' dependent numeric_limits
| |   | |   `-TemplateArgument type '_Tp'
| |   | |-TypedefDecl 0x7fe8b20eadf0 <line:539:5, col:17> col:17 referenced type '_Tp'
| |   | | `-TemplateTypeParmType 0x7fe8b20ea7b0 '_Tp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fe8b20ea770 '_Tp'
| |   | |-AccessSpecDecl 0x7fe8b20eae48 <line:540:1, col:7> col:1 public
| |   | |-VarDecl 0x7fe8b20eae80 <line:541:5, col:66> col:41 is_specialized 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fe8b20eaf50 <col:58, col:66> '<dependent type>' lvalue
| |   | |-CXXMethodDecl 0x7fe8b20eb068 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:542:99> col:61 constexpr min 'std::__1::numeric_limits<const type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fe8b20ed0b0 <col:77, col:99>
| |   | | | `-ReturnStmt 0x7fe8b20ed098 <col:78, col:97>
| |   | | |   `-CallExpr 0x7fe8b20ed070 <col:85, col:97> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fe8b20ed030 <col:85, col:93> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fe8b20eb100 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fe8b20eb148 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fe8b20eb1b0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:543:99> col:61 constexpr max 'std::__1::numeric_limits<const type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fe8b20ed188 <col:77, col:99>
| |   | | | `-ReturnStmt 0x7fe8b20ed170 <col:78, col:97>
| |   | | |   `-CallExpr 0x7fe8b20ed148 <col:85, col:97> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fe8b20ed108 <col:85, col:93> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fe8b20eb248 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fe8b20eb290 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fe8b20eb2f8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:544:105> col:61 constexpr lowest 'std::__1::numeric_limits<const type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fe8b20ed260 <col:80, col:105>
| |   | | | `-ReturnStmt 0x7fe8b20ed248 <col:81, col:103>
| |   | | |   `-CallExpr 0x7fe8b20ed220 <col:88, col:103> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fe8b20ed1e0 <col:88, col:96> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fe8b20eb390 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fe8b20eb3d8 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fe8b20eb400 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:546:5, col:58> col:41 digits 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fe8b20eb498 <col:50, col:58> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fe8b20eb4f0 <line:547:5, col:60> col:41 digits10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fe8b20eb588 <col:52, col:60> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fe8b20eb5e0 <line:548:5, col:64> col:41 max_digits10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fe8b20eb678 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fe8b20eb6c8 <line:549:5, col:61> col:41 is_signed 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fe8b20eb760 <col:53, col:61> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fe8b20eb7b0 <line:550:5, col:62> col:41 is_integer 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fe8b20eb848 <col:54, col:62> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fe8b20eb898 <line:551:5, col:60> col:41 is_exact 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fe8b20eb930 <col:52, col:60> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fe8b20eb988 <line:552:5, col:57> col:41 radix 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fe8b20eba30 <col:49, col:57> '<dependent type>' lvalue
| |   | |-CXXMethodDecl 0x7fe8b20ebac8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:553:107> col:61 constexpr epsilon 'std::__1::numeric_limits<const type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fe8b20ed338 <col:81, col:107>
| |   | | | `-ReturnStmt 0x7fe8b20ed320 <col:82, col:105>
| |   | | |   `-CallExpr 0x7fe8b20ed2f8 <col:89, col:105> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fe8b20ed2b8 <col:89, col:97> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fe8b20ebb60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fe8b20ebba8 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fe8b20ebc10 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:554:115> col:61 constexpr round_error 'std::__1::numeric_limits<const type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fe8b20ed410 <col:85, col:115>
| |   | | | `-ReturnStmt 0x7fe8b20ed3f8 <col:86, col:113>
| |   | | |   `-CallExpr 0x7fe8b20ed3d0 <col:93, col:113> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fe8b20ed390 <col:93, col:101> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fe8b20ebca8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fe8b20ebcf0 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fe8b20ebd18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:556:5, col:64> col:41 min_exponent 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fe8b20ebdb0 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fe8b20ebe08 <line:557:5, col:66> col:41 min_exponent10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fe8b20ebea0 <col:58, col:66> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fe8b20ebef8 <line:558:5, col:64> col:41 max_exponent 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fe8b20ebf90 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fe8b20ebfe8 <line:559:5, col:66> col:41 max_exponent10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fe8b20ec080 <col:58, col:66> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fe8b20ec0d0 <line:561:5, col:64> col:41 has_infinity 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fe8b20ec168 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fe8b20ec1b8 <line:562:5, col:65> col:41 has_quiet_NaN 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fe8b20ec250 <col:57, col:65> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fe8b20ec2a0 <line:563:5, col:69> col:41 has_signaling_NaN 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fe8b20ec338 <col:61, col:69> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fe8b20ec388 <line:564:5, col:76> col:55 has_denorm 'const enum std::__1::float_denorm_style' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fe8b20ec420 <col:68, col:76> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fe8b20ec470 <line:565:5, col:67> col:41 has_denorm_loss 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fe8b20ec508 <col:59, col:67> '<dependent type>' lvalue
| |   | |-CXXMethodDecl 0x7fe8b20ec5a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:566:109> col:61 constexpr infinity 'std::__1::numeric_limits<const type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fe8b20ed4e8 <col:82, col:109>
| |   | | | `-ReturnStmt 0x7fe8b20ed4d0 <col:83, col:107>
| |   | | |   `-CallExpr 0x7fe8b20ed4a8 <col:90, col:107> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fe8b20ed468 <col:90, col:98> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fe8b20ec638 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fe8b20ec680 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fe8b20ec6e8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:567:111> col:61 constexpr quiet_NaN 'std::__1::numeric_limits<const type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fe8b20ed5c0 <col:83, col:111>
| |   | | | `-ReturnStmt 0x7fe8b20ed5a8 <col:84, col:109>
| |   | | |   `-CallExpr 0x7fe8b20ed580 <col:91, col:109> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fe8b20ed540 <col:91, col:99> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fe8b20ec780 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fe8b20ec7c8 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fe8b20ec830 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:568:119> col:61 constexpr signaling_NaN 'std::__1::numeric_limits<const type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fe8b20ed698 <col:87, col:119>
| |   | | | `-ReturnStmt 0x7fe8b20ed680 <col:88, col:117>
| |   | | |   `-CallExpr 0x7fe8b20ed658 <col:95, col:117> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fe8b20ed618 <col:95, col:103> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fe8b20ec8c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fe8b20ec910 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fe8b20ec978 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:569:113> col:61 constexpr denorm_min 'std::__1::numeric_limits<const type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fe8b20ed770 <col:84, col:113>
| |   | | | `-ReturnStmt 0x7fe8b20ed758 <col:85, col:111>
| |   | | |   `-CallExpr 0x7fe8b20ed730 <col:92, col:111> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fe8b20ed6f0 <col:92, col:100> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fe8b20eca10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fe8b20eca58 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fe8b20eca78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:571:5, col:61> col:41 is_iec559 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fe8b20ecb10 <col:53, col:61> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fe8b20ecb60 <line:572:5, col:62> col:41 is_bounded 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fe8b20ecbf8 <col:54, col:62> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fe8b20ecc48 <line:573:5, col:61> col:41 is_modulo 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fe8b20ecce0 <col:53, col:61> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fe8b20ecd30 <line:575:5, col:57> col:41 traps 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fe8b20ecdc8 <col:49, col:57> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fe8b20ece18 <line:576:5, col:67> col:41 tinyness_before 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fe8b20eceb0 <col:59, col:67> '<dependent type>' lvalue
| |   | `-VarDecl 0x7fe8b20ecf00 <line:577:5, col:76> col:54 round_style 'const enum std::__1::float_round_style' static constexpr cinit
| |   |   `-DependentScopeDeclRefExpr 0x7fe8b20ecf98 <col:68, col:76> '<dependent type>' lvalue
| |   |-VarDecl 0x7fe8b20ed980 parent 0x7fe8b20ea908 prev 0x7fe8b20eae80 <line:580:1, line:581:61> col:61 is_specialized 'const _Bool' constexpr
| |   |-VarDecl 0x7fe8b20ee038 parent 0x7fe8b20ea908 prev 0x7fe8b20eb400 <line:582:1, line:583:60> col:60 digits 'const int' constexpr
| |   |-VarDecl 0x7fe8b20ee2d8 parent 0x7fe8b20ea908 prev 0x7fe8b20eb4f0 <line:584:1, line:585:60> col:60 digits10 'const int' constexpr
| |   |-VarDecl 0x7fe8b20ee578 parent 0x7fe8b20ea908 prev 0x7fe8b20eb5e0 <line:586:1, line:587:60> col:60 max_digits10 'const int' constexpr
| |   |-VarDecl 0x7fe8b20ee810 parent 0x7fe8b20ea908 prev 0x7fe8b20eb6c8 <line:588:1, line:589:61> col:61 is_signed 'const _Bool' constexpr
| |   |-VarDecl 0x7fe8b20eeaa0 parent 0x7fe8b20ea908 prev 0x7fe8b20eb7b0 <line:590:1, line:591:61> col:61 is_integer 'const _Bool' constexpr
| |   |-VarDecl 0x7fe8b20eed30 parent 0x7fe8b20ea908 prev 0x7fe8b20eb898 <line:592:1, line:593:61> col:61 is_exact 'const _Bool' constexpr
| |   |-VarDecl 0x7fe8b20eefc8 parent 0x7fe8b20ea908 prev 0x7fe8b20eb988 <line:594:1, line:595:60> col:60 radix 'const int' constexpr
| |   |-VarDecl 0x7fe8b20ef268 parent 0x7fe8b20ea908 prev 0x7fe8b20ebd18 <line:596:1, line:597:60> col:60 min_exponent 'const int' constexpr
| |   |-VarDecl 0x7fe8b20ef508 parent 0x7fe8b20ea908 prev 0x7fe8b20ebe08 <line:598:1, line:599:60> col:60 min_exponent10 'const int' constexpr
| |   |-VarDecl 0x7fe8b20ef7a8 parent 0x7fe8b20ea908 prev 0x7fe8b20ebef8 <line:600:1, line:601:60> col:60 max_exponent 'const int' constexpr
| |   |-VarDecl 0x7fe8b20efa48 parent 0x7fe8b20ea908 prev 0x7fe8b20ebfe8 <line:602:1, line:603:60> col:60 max_exponent10 'const int' constexpr
| |   |-VarDecl 0x7fe8b20efce0 parent 0x7fe8b20ea908 prev 0x7fe8b20ec0d0 <line:604:1, line:605:61> col:61 has_infinity 'const _Bool' constexpr
| |   |-VarDecl 0x7fe8b20eff70 parent 0x7fe8b20ea908 prev 0x7fe8b20ec1b8 <line:606:1, line:607:61> col:61 has_quiet_NaN 'const _Bool' constexpr
| |   |-VarDecl 0x7fe8b20f0200 parent 0x7fe8b20ea908 prev 0x7fe8b20ec2a0 <line:608:1, line:609:61> col:61 has_signaling_NaN 'const _Bool' constexpr
| |   |-VarDecl 0x7fe8b20f0490 parent 0x7fe8b20ea908 prev 0x7fe8b20ec388 <line:610:1, line:611:75> col:75 has_denorm 'const enum std::__1::float_denorm_style' constexpr
| |   |-VarDecl 0x7fe8b20f0720 parent 0x7fe8b20ea908 prev 0x7fe8b20ec470 <line:612:1, line:613:61> col:61 has_denorm_loss 'const _Bool' constexpr
| |   |-VarDecl 0x7fe8b20f09b0 parent 0x7fe8b20ea908 prev 0x7fe8b20eca78 <line:614:1, line:615:61> col:61 is_iec559 'const _Bool' constexpr
| |   |-VarDecl 0x7fe8b20f0c40 parent 0x7fe8b20ea908 prev 0x7fe8b20ecb60 <line:616:1, line:617:61> col:61 is_bounded 'const _Bool' constexpr
| |   |-VarDecl 0x7fe8b20f0ed0 parent 0x7fe8b20ea908 prev 0x7fe8b20ecc48 <line:618:1, line:619:61> col:61 is_modulo 'const _Bool' constexpr
| |   |-VarDecl 0x7fe8b20f1160 parent 0x7fe8b20ea908 prev 0x7fe8b20ecd30 <line:620:1, line:621:61> col:61 traps 'const _Bool' constexpr
| |   |-VarDecl 0x7fe8b20f13f0 parent 0x7fe8b20ea908 prev 0x7fe8b20ece18 <line:622:1, line:623:61> col:61 tinyness_before 'const _Bool' constexpr
| |   |-VarDecl 0x7fe8b20f1680 parent 0x7fe8b20ea908 prev 0x7fe8b20ecf00 <line:624:1, line:625:74> col:74 round_style 'const enum std::__1::float_round_style' constexpr
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b20f18b8 <line:627:1, line:671:1> line:628:28 class numeric_limits definition
| |   | |-private 'numeric_limits<_Tp>'
| |   | |-TemplateArgument type 'volatile type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fe8b20f1720 <line:627:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fe8b20f19f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fe8b20f1be8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:628:1, col:28> col:28 implicit class numeric_limits
| |   | |-TypedefDecl 0x7fe8b20f1d38 <line:631:5, col:33> col:33 referenced __base 'numeric_limits<_Tp>'
| |   | | `-TemplateSpecializationType 0x7fe8b20f1c90 'numeric_limits<_Tp>' dependent numeric_limits
| |   | |   `-TemplateArgument type '_Tp'
| |   | |-TypedefDecl 0x7fe8b20f1da0 <line:632:5, col:17> col:17 referenced type '_Tp'
| |   | | `-TemplateTypeParmType 0x7fe8b20f1760 '_Tp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fe8b20f1720 '_Tp'
| |   | |-AccessSpecDecl 0x7fe8b21a3400 <line:633:1, col:7> col:1 public
| |   | |-VarDecl 0x7fe8b21a3438 <line:634:5, col:66> col:41 is_specialized 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fe8b21a3510 <col:58, col:66> '<dependent type>' lvalue
| |   | |-CXXMethodDecl 0x7fe8b21a3628 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:635:99> col:61 constexpr min 'std::__1::numeric_limits<volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fe8b21a5698 <col:77, col:99>
| |   | | | `-ReturnStmt 0x7fe8b21a5680 <col:78, col:97>
| |   | | |   `-CallExpr 0x7fe8b21a5658 <col:85, col:97> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fe8b21a5618 <col:85, col:93> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fe8b21a36c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fe8b21a3708 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fe8b21a3770 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:636:99> col:61 constexpr max 'std::__1::numeric_limits<volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fe8b21a5770 <col:77, col:99>
| |   | | | `-ReturnStmt 0x7fe8b21a5758 <col:78, col:97>
| |   | | |   `-CallExpr 0x7fe8b21a5730 <col:85, col:97> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fe8b21a56f0 <col:85, col:93> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fe8b21a3808 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fe8b21a3850 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fe8b21a38b8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:637:105> col:61 constexpr lowest 'std::__1::numeric_limits<volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fe8b21a5848 <col:80, col:105>
| |   | | | `-ReturnStmt 0x7fe8b21a5830 <col:81, col:103>
| |   | | |   `-CallExpr 0x7fe8b21a5808 <col:88, col:103> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fe8b21a57c8 <col:88, col:96> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fe8b21a3950 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fe8b21a3998 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fe8b21a39c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:639:5, col:58> col:41 digits 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fe8b21a3a58 <col:50, col:58> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fe8b21a3ab0 <line:640:5, col:60> col:41 digits10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fe8b21a3b48 <col:52, col:60> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fe8b21a3ba0 <line:641:5, col:64> col:41 max_digits10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fe8b21a3c38 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fe8b21a3c88 <line:642:5, col:61> col:41 is_signed 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fe8b21a3d20 <col:53, col:61> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fe8b21a3d70 <line:643:5, col:62> col:41 is_integer 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fe8b21a3e08 <col:54, col:62> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fe8b21a3e58 <line:644:5, col:60> col:41 is_exact 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fe8b21a3ef0 <col:52, col:60> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fe8b21a3f48 <line:645:5, col:57> col:41 radix 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fe8b21a3fe0 <col:49, col:57> '<dependent type>' lvalue
| |   | |-CXXMethodDecl 0x7fe8b21a4078 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:646:107> col:61 constexpr epsilon 'std::__1::numeric_limits<volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fe8b21a5920 <col:81, col:107>
| |   | | | `-ReturnStmt 0x7fe8b21a5908 <col:82, col:105>
| |   | | |   `-CallExpr 0x7fe8b21a58e0 <col:89, col:105> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fe8b21a58a0 <col:89, col:97> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fe8b21a4110 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fe8b21a4158 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fe8b21a41c0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:647:115> col:61 constexpr round_error 'std::__1::numeric_limits<volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fe8b21a59f8 <col:85, col:115>
| |   | | | `-ReturnStmt 0x7fe8b21a59e0 <col:86, col:113>
| |   | | |   `-CallExpr 0x7fe8b21a59b8 <col:93, col:113> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fe8b21a5978 <col:93, col:101> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fe8b21a4258 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fe8b21a42a0 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fe8b21a42c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:649:5, col:64> col:41 min_exponent 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fe8b21a4360 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fe8b21a43b8 <line:650:5, col:66> col:41 min_exponent10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fe8b21a4450 <col:58, col:66> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fe8b21a44a8 <line:651:5, col:64> col:41 max_exponent 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fe8b21a4540 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fe8b21a4598 <line:652:5, col:66> col:41 max_exponent10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fe8b21a4630 <col:58, col:66> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fe8b21a4680 <line:654:5, col:64> col:41 has_infinity 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fe8b21a4718 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fe8b21a4768 <line:655:5, col:65> col:41 has_quiet_NaN 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fe8b21a4800 <col:57, col:65> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fe8b21a4850 <line:656:5, col:69> col:41 has_signaling_NaN 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fe8b21a48e8 <col:61, col:69> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fe8b21a4938 <line:657:5, col:76> col:55 has_denorm 'const enum std::__1::float_denorm_style' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fe8b21a49d0 <col:68, col:76> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fe8b21a4a20 <line:658:5, col:67> col:41 has_denorm_loss 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fe8b21a4ab8 <col:59, col:67> '<dependent type>' lvalue
| |   | |-CXXMethodDecl 0x7fe8b21a4b50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:659:109> col:61 constexpr infinity 'std::__1::numeric_limits<volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fe8b21a5ad0 <col:82, col:109>
| |   | | | `-ReturnStmt 0x7fe8b21a5ab8 <col:83, col:107>
| |   | | |   `-CallExpr 0x7fe8b21a5a90 <col:90, col:107> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fe8b21a5a50 <col:90, col:98> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fe8b21a4be8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fe8b21a4c30 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fe8b21a4c98 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:660:111> col:61 constexpr quiet_NaN 'std::__1::numeric_limits<volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fe8b21a5ba8 <col:83, col:111>
| |   | | | `-ReturnStmt 0x7fe8b21a5b90 <col:84, col:109>
| |   | | |   `-CallExpr 0x7fe8b21a5b68 <col:91, col:109> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fe8b21a5b28 <col:91, col:99> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fe8b21a4d30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fe8b21a4d78 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fe8b21a4de0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:661:119> col:61 constexpr signaling_NaN 'std::__1::numeric_limits<volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fe8b21a5c80 <col:87, col:119>
| |   | | | `-ReturnStmt 0x7fe8b21a5c68 <col:88, col:117>
| |   | | |   `-CallExpr 0x7fe8b21a5c40 <col:95, col:117> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fe8b21a5c00 <col:95, col:103> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fe8b21a4e78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fe8b21a4ec0 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fe8b21a4f28 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:662:113> col:61 constexpr denorm_min 'std::__1::numeric_limits<volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fe8b21a5d58 <col:84, col:113>
| |   | | | `-ReturnStmt 0x7fe8b21a5d40 <col:85, col:111>
| |   | | |   `-CallExpr 0x7fe8b21a5d18 <col:92, col:111> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fe8b21a5cd8 <col:92, col:100> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fe8b21a4fc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fe8b21a5008 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fe8b21a5028 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:664:5, col:61> col:41 is_iec559 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fe8b21a50c0 <col:53, col:61> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fe8b21a5110 <line:665:5, col:62> col:41 is_bounded 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fe8b21a51a8 <col:54, col:62> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fe8b21a51f8 <line:666:5, col:61> col:41 is_modulo 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fe8b21a5290 <col:53, col:61> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fe8b21a52e0 <line:668:5, col:57> col:41 traps 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fe8b21a5378 <col:49, col:57> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fe8b21a5400 <line:669:5, col:67> col:41 tinyness_before 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fe8b21a5498 <col:59, col:67> '<dependent type>' lvalue
| |   | `-VarDecl 0x7fe8b21a54e8 <line:670:5, col:76> col:54 round_style 'const enum std::__1::float_round_style' static constexpr cinit
| |   |   `-DependentScopeDeclRefExpr 0x7fe8b21a5580 <col:68, col:76> '<dependent type>' lvalue
| |   |-VarDecl 0x7fe8b21a5f70 parent 0x7fe8b20f18b8 prev 0x7fe8b21a3438 <line:673:1, line:674:64> col:64 is_specialized 'const _Bool' constexpr
| |   |-VarDecl 0x7fe8b21a6208 parent 0x7fe8b20f18b8 prev 0x7fe8b21a39c0 <line:675:1, line:676:63> col:63 digits 'const int' constexpr
| |   |-VarDecl 0x7fe8b21a64a8 parent 0x7fe8b20f18b8 prev 0x7fe8b21a3ab0 <line:677:1, line:678:63> col:63 digits10 'const int' constexpr
| |   |-VarDecl 0x7fe8b21a6748 parent 0x7fe8b20f18b8 prev 0x7fe8b21a3ba0 <line:679:1, line:680:63> col:63 max_digits10 'const int' constexpr
| |   |-VarDecl 0x7fe8b21a69e0 parent 0x7fe8b20f18b8 prev 0x7fe8b21a3c88 <line:681:1, line:682:64> col:64 is_signed 'const _Bool' constexpr
| |   |-VarDecl 0x7fe8b21a6c70 parent 0x7fe8b20f18b8 prev 0x7fe8b21a3d70 <line:683:1, line:684:64> col:64 is_integer 'const _Bool' constexpr
| |   |-VarDecl 0x7fe8b21a6f00 parent 0x7fe8b20f18b8 prev 0x7fe8b21a3e58 <line:685:1, line:686:64> col:64 is_exact 'const _Bool' constexpr
| |   |-VarDecl 0x7fe8b21a7198 parent 0x7fe8b20f18b8 prev 0x7fe8b21a3f48 <line:687:1, line:688:63> col:63 radix 'const int' constexpr
| |   |-VarDecl 0x7fe8b21a7440 parent 0x7fe8b20f18b8 prev 0x7fe8b21a42c8 <line:689:1, line:690:63> col:63 min_exponent 'const int' constexpr
| |   |-VarDecl 0x7fe8b21a76d8 parent 0x7fe8b20f18b8 prev 0x7fe8b21a43b8 <line:691:1, line:692:63> col:63 min_exponent10 'const int' constexpr
| |   |-VarDecl 0x7fe8b21a7978 parent 0x7fe8b20f18b8 prev 0x7fe8b21a44a8 <line:693:1, line:694:63> col:63 max_exponent 'const int' constexpr
| |   |-VarDecl 0x7fe8b21a7c18 parent 0x7fe8b20f18b8 prev 0x7fe8b21a4598 <line:695:1, line:696:63> col:63 max_exponent10 'const int' constexpr
| |   |-VarDecl 0x7fe8b21a7eb0 parent 0x7fe8b20f18b8 prev 0x7fe8b21a4680 <line:697:1, line:698:64> col:64 has_infinity 'const _Bool' constexpr
| |   |-VarDecl 0x7fe8b21a8140 parent 0x7fe8b20f18b8 prev 0x7fe8b21a4768 <line:699:1, line:700:64> col:64 has_quiet_NaN 'const _Bool' constexpr
| |   |-VarDecl 0x7fe8b21a83d0 parent 0x7fe8b20f18b8 prev 0x7fe8b21a4850 <line:701:1, line:702:64> col:64 has_signaling_NaN 'const _Bool' constexpr
| |   |-VarDecl 0x7fe8b21a8660 parent 0x7fe8b20f18b8 prev 0x7fe8b21a4938 <line:703:1, line:704:78> col:78 has_denorm 'const enum std::__1::float_denorm_style' constexpr
| |   |-VarDecl 0x7fe8b21a88f0 parent 0x7fe8b20f18b8 prev 0x7fe8b21a4a20 <line:705:1, line:706:64> col:64 has_denorm_loss 'const _Bool' constexpr
| |   |-VarDecl 0x7fe8b21a8b80 parent 0x7fe8b20f18b8 prev 0x7fe8b21a5028 <line:707:1, line:708:64> col:64 is_iec559 'const _Bool' constexpr
| |   |-VarDecl 0x7fe8b21a8e10 parent 0x7fe8b20f18b8 prev 0x7fe8b21a5110 <line:709:1, line:710:64> col:64 is_bounded 'const _Bool' constexpr
| |   |-VarDecl 0x7fe8b21a90a0 parent 0x7fe8b20f18b8 prev 0x7fe8b21a51f8 <line:711:1, line:712:64> col:64 is_modulo 'const _Bool' constexpr
| |   |-VarDecl 0x7fe8b21a9330 parent 0x7fe8b20f18b8 prev 0x7fe8b21a52e0 <line:713:1, line:714:64> col:64 traps 'const _Bool' constexpr
| |   |-VarDecl 0x7fe8b21a95f0 parent 0x7fe8b20f18b8 prev 0x7fe8b21a5400 <line:715:1, line:716:64> col:64 tinyness_before 'const _Bool' constexpr
| |   |-VarDecl 0x7fe8b21a9880 parent 0x7fe8b20f18b8 prev 0x7fe8b21a54e8 <line:717:1, line:718:77> col:77 round_style 'const enum std::__1::float_round_style' constexpr
| |   |-ClassTemplatePartialSpecializationDecl 0x7fe8b21a9ab8 <line:720:1, line:764:1> line:721:28 class numeric_limits definition
| |   | |-private 'numeric_limits<_Tp>'
| |   | |-TemplateArgument type 'const volatile type-parameter-0-0'
| |   | |-TemplateTypeParmDecl 0x7fe8b21a9920 <line:720:11, col:17> col:17 referenced class depth 0 index 0 _Tp
| |   | |-TypeVisibilityAttr 0x7fe8b21a9bf8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:678:52, col:81> Default
| |   | |-CXXRecordDecl 0x7fe8b21a9de8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:721:1, col:28> col:28 implicit class numeric_limits
| |   | |-TypedefDecl 0x7fe8b21a9f38 <line:724:5, col:33> col:33 referenced __base 'numeric_limits<_Tp>'
| |   | | `-TemplateSpecializationType 0x7fe8b21a9e90 'numeric_limits<_Tp>' dependent numeric_limits
| |   | |   `-TemplateArgument type '_Tp'
| |   | |-TypedefDecl 0x7fe8b21a9fa0 <line:725:5, col:17> col:17 referenced type '_Tp'
| |   | | `-TemplateTypeParmType 0x7fe8b21a9960 '_Tp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x7fe8b21a9920 '_Tp'
| |   | |-AccessSpecDecl 0x7fe8b21a9ff8 <line:726:1, col:7> col:1 public
| |   | |-VarDecl 0x7fe8b21aa030 <line:727:5, col:66> col:41 is_specialized 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fe8b21aa100 <col:58, col:66> '<dependent type>' lvalue
| |   | |-CXXMethodDecl 0x7fe8b21aa218 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:728:99> col:61 constexpr min 'std::__1::numeric_limits<const volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fe8b21ac260 <col:77, col:99>
| |   | | | `-ReturnStmt 0x7fe8b21ac248 <col:78, col:97>
| |   | | |   `-CallExpr 0x7fe8b21ac220 <col:85, col:97> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fe8b21ac1e0 <col:85, col:93> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fe8b21aa2b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fe8b21aa2f8 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fe8b21aa360 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:729:99> col:61 constexpr max 'std::__1::numeric_limits<const volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fe8b21ac338 <col:77, col:99>
| |   | | | `-ReturnStmt 0x7fe8b21ac320 <col:78, col:97>
| |   | | |   `-CallExpr 0x7fe8b21ac2f8 <col:85, col:97> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fe8b21ac2b8 <col:85, col:93> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fe8b21aa3f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fe8b21aa440 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fe8b21aa4a8 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:730:105> col:61 constexpr lowest 'std::__1::numeric_limits<const volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fe8b21ac410 <col:80, col:105>
| |   | | | `-ReturnStmt 0x7fe8b21ac3f8 <col:81, col:103>
| |   | | |   `-CallExpr 0x7fe8b21ac3d0 <col:88, col:103> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fe8b21ac390 <col:88, col:96> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fe8b21aa540 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fe8b21aa588 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fe8b21aa5b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:732:5, col:58> col:41 digits 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fe8b21aa648 <col:50, col:58> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fe8b21aa6a0 <line:733:5, col:60> col:41 digits10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fe8b21aa738 <col:52, col:60> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fe8b21aa790 <line:734:5, col:64> col:41 max_digits10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fe8b21aa828 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fe8b21aa878 <line:735:5, col:61> col:41 is_signed 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fe8b21aa910 <col:53, col:61> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fe8b21aa960 <line:736:5, col:62> col:41 is_integer 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fe8b21aa9f8 <col:54, col:62> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fe8b21aaa48 <line:737:5, col:60> col:41 is_exact 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fe8b21aaae0 <col:52, col:60> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fe8b21aab38 <line:738:5, col:57> col:41 radix 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fe8b21aabd0 <col:49, col:57> '<dependent type>' lvalue
| |   | |-CXXMethodDecl 0x7fe8b21aac68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:739:107> col:61 constexpr epsilon 'std::__1::numeric_limits<const volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fe8b21ac4e8 <col:81, col:107>
| |   | | | `-ReturnStmt 0x7fe8b21ac4d0 <col:82, col:105>
| |   | | |   `-CallExpr 0x7fe8b21ac4a8 <col:89, col:105> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fe8b21ac468 <col:89, col:97> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fe8b21aad00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fe8b21aad48 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fe8b21aadb0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:740:115> col:61 constexpr round_error 'std::__1::numeric_limits<const volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fe8b21ac5c0 <col:85, col:115>
| |   | | | `-ReturnStmt 0x7fe8b21ac5a8 <col:86, col:113>
| |   | | |   `-CallExpr 0x7fe8b21ac580 <col:93, col:113> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fe8b21ac540 <col:93, col:101> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fe8b21aae48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fe8b21aae90 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fe8b21aaeb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:742:5, col:64> col:41 min_exponent 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fe8b21aaf50 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fe8b21aafa8 <line:743:5, col:66> col:41 min_exponent10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fe8b21ab040 <col:58, col:66> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fe8b21ab098 <line:744:5, col:64> col:41 max_exponent 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fe8b21ab130 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fe8b21ab188 <line:745:5, col:66> col:41 max_exponent10 'const int' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fe8b21ab220 <col:58, col:66> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fe8b21ab270 <line:747:5, col:64> col:41 has_infinity 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fe8b21ab308 <col:56, col:64> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fe8b21ab358 <line:748:5, col:65> col:41 has_quiet_NaN 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fe8b21ab400 <col:57, col:65> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fe8b21ab450 <line:749:5, col:69> col:41 has_signaling_NaN 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fe8b21ab4e8 <col:61, col:69> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fe8b21ab538 <line:750:5, col:76> col:55 has_denorm 'const enum std::__1::float_denorm_style' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fe8b21ab5d0 <col:68, col:76> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fe8b21ab620 <line:751:5, col:67> col:41 has_denorm_loss 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fe8b21ab6b8 <col:59, col:67> '<dependent type>' lvalue
| |   | |-CXXMethodDecl 0x7fe8b21ab750 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:752:109> col:61 constexpr infinity 'std::__1::numeric_limits<const volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fe8b21ac698 <col:82, col:109>
| |   | | | `-ReturnStmt 0x7fe8b21ac680 <col:83, col:107>
| |   | | |   `-CallExpr 0x7fe8b21ac658 <col:90, col:107> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fe8b21ac618 <col:90, col:98> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fe8b21ab7e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fe8b21ab830 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fe8b21ab898 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:753:111> col:61 constexpr quiet_NaN 'std::__1::numeric_limits<const volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fe8b21ac770 <col:83, col:111>
| |   | | | `-ReturnStmt 0x7fe8b21ac758 <col:84, col:109>
| |   | | |   `-CallExpr 0x7fe8b21ac730 <col:91, col:109> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fe8b21ac6f0 <col:91, col:99> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fe8b21ab930 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fe8b21ab978 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fe8b21ab9e0 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:754:119> col:61 constexpr signaling_NaN 'std::__1::numeric_limits<const volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fe8b21ac848 <col:87, col:119>
| |   | | | `-ReturnStmt 0x7fe8b21ac830 <col:88, col:117>
| |   | | |   `-CallExpr 0x7fe8b21ac808 <col:95, col:117> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fe8b21ac7c8 <col:95, col:103> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fe8b21aba78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fe8b21abac0 <col:51, col:74> Hidden
| |   | |-CXXMethodDecl 0x7fe8b21abb28 <col:35, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:755:113> col:61 constexpr denorm_min 'std::__1::numeric_limits<const volatile type-parameter-0-0>::type (void) noexcept' static
| |   | | |-CompoundStmt 0x7fe8b21ac920 <col:84, col:113>
| |   | | | `-ReturnStmt 0x7fe8b21ac908 <col:85, col:111>
| |   | | |   `-CallExpr 0x7fe8b21ac8e0 <col:92, col:111> '<dependent type>'
| |   | | |     `-DependentScopeDeclRefExpr 0x7fe8b21ac8a0 <col:92, col:100> '<dependent type>' lvalue
| |   | | |-AlwaysInlineAttr 0x7fe8b21abbc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   | | `-VisibilityAttr 0x7fe8b21abc08 <col:51, col:74> Hidden
| |   | |-VarDecl 0x7fe8b21abc28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:757:5, col:61> col:41 is_iec559 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fe8b21abcc0 <col:53, col:61> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fe8b21abd10 <line:758:5, col:62> col:41 is_bounded 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fe8b21abda8 <col:54, col:62> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fe8b21abdf8 <line:759:5, col:61> col:41 is_modulo 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fe8b21abe90 <col:53, col:61> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fe8b21abee0 <line:761:5, col:57> col:41 traps 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fe8b21abf78 <col:49, col:57> '<dependent type>' lvalue
| |   | |-VarDecl 0x7fe8b21abfc8 <line:762:5, col:67> col:41 tinyness_before 'const _Bool' static constexpr cinit
| |   | | `-DependentScopeDeclRefExpr 0x7fe8b21ac060 <col:59, col:67> '<dependent type>' lvalue
| |   | `-VarDecl 0x7fe8b21ac0b0 <line:763:5, col:76> col:54 round_style 'const enum std::__1::float_round_style' static constexpr cinit
| |   |   `-DependentScopeDeclRefExpr 0x7fe8b21ac148 <col:68, col:76> '<dependent type>' lvalue
| |   |-VarDecl 0x7fe8b21acb30 parent 0x7fe8b21a9ab8 prev 0x7fe8b21aa030 <line:766:1, line:767:70> col:70 is_specialized 'const _Bool' constexpr
| |   |-VarDecl 0x7fe8b21acdc8 parent 0x7fe8b21a9ab8 prev 0x7fe8b21aa5b0 <line:768:1, line:769:69> col:69 digits 'const int' constexpr
| |   |-VarDecl 0x7fe8b21ad068 parent 0x7fe8b21a9ab8 prev 0x7fe8b21aa6a0 <line:770:1, line:771:69> col:69 digits10 'const int' constexpr
| |   |-VarDecl 0x7fe8b21ad308 parent 0x7fe8b21a9ab8 prev 0x7fe8b21aa790 <line:772:1, line:773:69> col:69 max_digits10 'const int' constexpr
| |   |-VarDecl 0x7fe8b21ad5b0 parent 0x7fe8b21a9ab8 prev 0x7fe8b21aa878 <line:774:1, line:775:70> col:70 is_signed 'const _Bool' constexpr
| |   |-VarDecl 0x7fe8b21ad840 parent 0x7fe8b21a9ab8 prev 0x7fe8b21aa960 <line:776:1, line:777:70> col:70 is_integer 'const _Bool' constexpr
| |   |-VarDecl 0x7fe8b21adad0 parent 0x7fe8b21a9ab8 prev 0x7fe8b21aaa48 <line:778:1, line:779:70> col:70 is_exact 'const _Bool' constexpr
| |   |-VarDecl 0x7fe8b21add68 parent 0x7fe8b21a9ab8 prev 0x7fe8b21aab38 <line:780:1, line:781:69> col:69 radix 'const int' constexpr
| |   |-VarDecl 0x7fe8b21ae008 parent 0x7fe8b21a9ab8 prev 0x7fe8b21aaeb8 <line:782:1, line:783:69> col:69 min_exponent 'const int' constexpr
| |   |-VarDecl 0x7fe8b21ae2a8 parent 0x7fe8b21a9ab8 prev 0x7fe8b21aafa8 <line:784:1, line:785:69> col:69 min_exponent10 'const int' constexpr
| |   |-VarDecl 0x7fe8b21ae548 parent 0x7fe8b21a9ab8 prev 0x7fe8b21ab098 <line:786:1, line:787:69> col:69 max_exponent 'const int' constexpr
| |   |-VarDecl 0x7fe8b21ae7e8 parent 0x7fe8b21a9ab8 prev 0x7fe8b21ab188 <line:788:1, line:789:69> col:69 max_exponent10 'const int' constexpr
| |   |-VarDecl 0x7fe8b21aea80 parent 0x7fe8b21a9ab8 prev 0x7fe8b21ab270 <line:790:1, line:791:70> col:70 has_infinity 'const _Bool' constexpr
| |   |-VarDecl 0x7fe8b21aed10 parent 0x7fe8b21a9ab8 prev 0x7fe8b21ab358 <line:792:1, line:793:70> col:70 has_quiet_NaN 'const _Bool' constexpr
| |   |-VarDecl 0x7fe8b21aefa0 parent 0x7fe8b21a9ab8 prev 0x7fe8b21ab450 <line:794:1, line:795:70> col:70 has_signaling_NaN 'const _Bool' constexpr
| |   |-VarDecl 0x7fe8b21af230 parent 0x7fe8b21a9ab8 prev 0x7fe8b21ab538 <line:796:1, line:797:84> col:84 has_denorm 'const enum std::__1::float_denorm_style' constexpr
| |   |-VarDecl 0x7fe8b21af4c0 parent 0x7fe8b21a9ab8 prev 0x7fe8b21ab620 <line:798:1, line:799:70> col:70 has_denorm_loss 'const _Bool' constexpr
| |   |-VarDecl 0x7fe8b21af750 parent 0x7fe8b21a9ab8 prev 0x7fe8b21abc28 <line:800:1, line:801:70> col:70 is_iec559 'const _Bool' constexpr
| |   |-VarDecl 0x7fe8b21af9e0 parent 0x7fe8b21a9ab8 prev 0x7fe8b21abd10 <line:802:1, line:803:70> col:70 is_bounded 'const _Bool' constexpr
| |   |-VarDecl 0x7fe8b21afc70 parent 0x7fe8b21a9ab8 prev 0x7fe8b21abdf8 <line:804:1, line:805:70> col:70 is_modulo 'const _Bool' constexpr
| |   |-VarDecl 0x7fe8b21aff00 parent 0x7fe8b21a9ab8 prev 0x7fe8b21abee0 <line:806:1, line:807:70> col:70 traps 'const _Bool' constexpr
| |   |-VarDecl 0x7fe8b21b0190 parent 0x7fe8b21a9ab8 prev 0x7fe8b21abfc8 <line:808:1, line:809:70> col:70 tinyness_before 'const _Bool' constexpr
| |   `-VarDecl 0x7fe8b21b0420 parent 0x7fe8b21a9ab8 prev 0x7fe8b21ac0b0 <line:810:1, line:811:83> col:83 round_style 'const enum std::__1::float_round_style' constexpr
| |-FunctionTemplateDecl 0x7fe8b21b0720 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:316:1, line:322:1> line:319:1 __libcpp_signbit
| | |-TemplateTypeParmDecl 0x7fe8b21b04c0 <line:316:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fe8b21b0688 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:322:1> line:319:1 __libcpp_signbit '_Bool (_A1) noexcept'
| |   |-ParmVarDecl 0x7fe8b21b0580 <col:18, col:22> col:22 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fe8b21b0e90 <line:320:1, line:322:1>
| |   | `-ReturnStmt 0x7fe8b21b0e78 <line:321:5, /usr/include/math.h:186:72>
| |   |   `-ImplicitCastExpr 0x7fe8b21b0e60 <line:184:5, line:186:72> '_Bool' <IntegralToBoolean>
| |   |     `-ParenExpr 0x7fe8b21b0e40 <line:184:5, line:186:72> 'int'
| |   |       `-ConditionalOperator 0x7fe8b21b0e10 <line:184:7, line:186:71> 'int'
| |   |         |-BinaryOperator 0x7fe8b21b0870 <line:184:7, col:32> '_Bool' '=='
| |   |         | |-UnaryExprOrTypeTraitExpr 0x7fe8b21b0818 <col:7, col:15> 'unsigned long' sizeof
| |   |         | | `-ParenExpr 0x7fe8b21b07f8 <col:13, col:15> '_A1' lvalue
| |   |         | |   `-DeclRefExpr 0x7fe8b21b07d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:321:20> '_A1' lvalue ParmVar 0x7fe8b21b0580 '__lcpp_x' '_A1'
| |   |         | `-UnaryExprOrTypeTraitExpr 0x7fe8b21b0850 </usr/include/math.h:184:20, col:32> 'unsigned long' sizeof 'float'
| |   |         |-CallExpr 0x7fe8b21b09e8 <col:37, col:65> 'int'
| |   |         | |-ImplicitCastExpr 0x7fe8b21b09d0 <col:37> 'int (*)(float)' <FunctionToPointerDecay>
| |   |         | | `-DeclRefExpr 0x7fe8b21b09a8 <col:37> 'int (float)' lvalue Function 0x7fe8b1906668 '__inline_signbitf' 'int (float)'
| |   |         | `-CStyleCastExpr 0x7fe8b21b0980 <col:55, col:64> 'float' <Dependent>
| |   |         |   `-ParenExpr 0x7fe8b21b0960 <col:62, col:64> '_A1' lvalue
| |   |         |     `-DeclRefExpr 0x7fe8b21b08f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:321:20> '_A1' lvalue ParmVar 0x7fe8b21b0580 '__lcpp_x' '_A1'
| |   |         `-ConditionalOperator 0x7fe8b21b0de0 </usr/include/math.h:185:7, line:186:71> 'int'
| |   |           |-BinaryOperator 0x7fe8b21b0ab8 <line:185:7, col:33> '_Bool' '=='
| |   |           | |-UnaryExprOrTypeTraitExpr 0x7fe8b21b0a60 <col:7, col:15> 'unsigned long' sizeof
| |   |           | | `-ParenExpr 0x7fe8b21b0a40 <col:13, col:15> '_A1' lvalue
| |   |           | |   `-DeclRefExpr 0x7fe8b21b0a18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:321:20> '_A1' lvalue ParmVar 0x7fe8b21b0580 '__lcpp_x' '_A1'
| |   |           | `-UnaryExprOrTypeTraitExpr 0x7fe8b21b0a98 </usr/include/math.h:185:20, col:33> 'unsigned long' sizeof 'double'
| |   |           |-CallExpr 0x7fe8b21b0c30 <col:37, col:66> 'int'
| |   |           | |-ImplicitCastExpr 0x7fe8b21b0c18 <col:37> 'int (*)(double)' <FunctionToPointerDecay>
| |   |           | | `-DeclRefExpr 0x7fe8b21b0bf0 <col:37> 'int (double)' lvalue Function 0x7fe8b19083a0 '__inline_signbitd' 'int (double)'
| |   |           | `-CStyleCastExpr 0x7fe8b21b0bc8 <col:55, col:65> 'double' <Dependent>
| |   |           |   `-ParenExpr 0x7fe8b21b0ba8 <col:63, col:65> '_A1' lvalue
| |   |           |     `-DeclRefExpr 0x7fe8b21b0b38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:321:20> '_A1' lvalue ParmVar 0x7fe8b21b0580 '__lcpp_x' '_A1'
| |   |           `-CallExpr 0x7fe8b21b0db0 </usr/include/math.h:186:37, col:71> 'int'
| |   |             |-ImplicitCastExpr 0x7fe8b21b0d98 <col:37> 'int (*)(long double)' <FunctionToPointerDecay>
| |   |             | `-DeclRefExpr 0x7fe8b21b0d70 <col:37> 'int (long double)' lvalue Function 0x7fe8b190aa18 '__inline_signbitl' 'int (long double)'
| |   |             `-CStyleCastExpr 0x7fe8b21b0d48 <col:55, col:70> 'long double' <Dependent>
| |   |               `-ParenExpr 0x7fe8b21b0d28 <col:68, col:70> '_A1' lvalue
| |   |                 `-DeclRefExpr 0x7fe8b21b0cb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:321:20> '_A1' lvalue ParmVar 0x7fe8b21b0580 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fe8b21b0778 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7fe8b21b07c0 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fe8b21b1498 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:326:1, line:332:1> line:329:1 signbit
| | |-TemplateTypeParmDecl 0x7fe8b21b0eb0 <line:326:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fe8b21b1400 <line:327:1, line:332:1> line:329:1 signbit 'typename std::enable_if<std::is_floating_point<_A1>::value, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fe8b21b12c0 <col:9, col:13> col:13 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fe8b21b1848 <line:330:1, line:332:1>
| |   | `-ReturnStmt 0x7fe8b21b1830 <line:331:5, col:73>
| |   |   `-CallExpr 0x7fe8b21b1800 <col:12, col:73> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fe8b21b1548 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_signbit' 0x7fe8b21b0720
| |   |     `-CStyleCastExpr 0x7fe8b21b17d8 <col:29, col:65> 'typename std::__promote<_A1>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fe8b21b1790 <col:65> '_A1' lvalue ParmVar 0x7fe8b21b12c0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fe8b21b14f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fe8b21b1538 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fe8b21b1f90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:334:1, line:339:24> line:338:1 signbit
| | |-TemplateTypeParmDecl 0x7fe8b21b1868 <line:334:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fe8b21b1ef8 <line:335:1, line:339:24> line:338:1 signbit 'typename std::enable_if<std::is_integral<_A1>::value && std::is_signed<_A1>::value, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fe8b21b1de0 <col:9, col:13> col:13 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fe8b21b20c8 <line:339:1, col:24>
| |   | `-ReturnStmt 0x7fe8b21b20b0 <col:3, col:21>
| |   |   `-BinaryOperator 0x7fe8b21b2088 <col:10, col:21> '<dependent type>' '<'
| |   |     |-DeclRefExpr 0x7fe8b21b2040 <col:10> '_A1' lvalue ParmVar 0x7fe8b21b1de0 '__lcpp_x' '_A1'
| |   |     `-IntegerLiteral 0x7fe8b21b2068 <col:21> 'int' 0
| |   |-AlwaysInlineAttr 0x7fe8b21b1fe8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fe8b21b2030 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fe8b21b27e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:341:1, line:346:17> line:345:1 signbit
| | |-TemplateTypeParmDecl 0x7fe8b21b20e8 <line:341:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fe8b21b2748 <line:342:1, line:346:17> line:345:1 signbit 'typename std::enable_if<std::is_integral<_A1>::value && !std::is_signed<_A1>::value, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fe8b21b2630 <col:9> col:12 '_A1'
| |   |-CompoundStmt 0x7fe8b21b28c0 <line:346:1, col:17>
| |   | `-ReturnStmt 0x7fe8b21b28a8 <col:3, col:10>
| |   |   `-CXXBoolLiteralExpr 0x7fe8b21b2890 <col:10> '_Bool' false
| |   |-AlwaysInlineAttr 0x7fe8b21b2838 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fe8b21b2880 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fe8b21b2b48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:378:1, line:384:1> line:381:1 __libcpp_fpclassify
| | |-TemplateTypeParmDecl 0x7fe8b21b28e0 <line:378:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fe8b21b2ab0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:384:1> line:381:1 __libcpp_fpclassify 'int (_A1) noexcept'
| |   |-ParmVarDecl 0x7fe8b21b29a0 <col:21, col:25> col:25 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fe8b21b32a0 <line:382:1, line:384:1>
| |   | `-ReturnStmt 0x7fe8b21b3288 <line:383:5, /usr/include/math.h:142:68>
| |   |   `-ParenExpr 0x7fe8b21b3268 <line:140:5, line:142:68> 'int'
| |   |     `-ConditionalOperator 0x7fe8b21b3238 <line:140:7, line:142:67> 'int'
| |   |       |-BinaryOperator 0x7fe8b21b2c98 <line:140:7, col:32> '_Bool' '=='
| |   |       | |-UnaryExprOrTypeTraitExpr 0x7fe8b21b2c40 <col:7, col:15> 'unsigned long' sizeof
| |   |       | | `-ParenExpr 0x7fe8b21b2c20 <col:13, col:15> '_A1' lvalue
| |   |       | |   `-DeclRefExpr 0x7fe8b21b2bf8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:383:23> '_A1' lvalue ParmVar 0x7fe8b21b29a0 '__lcpp_x' '_A1'
| |   |       | `-UnaryExprOrTypeTraitExpr 0x7fe8b21b2c78 </usr/include/math.h:140:20, col:32> 'unsigned long' sizeof 'float'
| |   |       |-CallExpr 0x7fe8b21b2e10 <col:37, col:61> 'int'
| |   |       | |-ImplicitCastExpr 0x7fe8b21b2df8 <col:37> 'int (*)(float)' <FunctionToPointerDecay>
| |   |       | | `-DeclRefExpr 0x7fe8b21b2dd0 <col:37> 'int (float)' lvalue Function 0x7fe8b1865b98 '__fpclassifyf' 'int (float)'
| |   |       | `-CStyleCastExpr 0x7fe8b21b2da8 <col:51, col:60> 'float' <Dependent>
| |   |       |   `-ParenExpr 0x7fe8b21b2d88 <col:58, col:60> '_A1' lvalue
| |   |       |     `-DeclRefExpr 0x7fe8b21b2d18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:383:23> '_A1' lvalue ParmVar 0x7fe8b21b29a0 '__lcpp_x' '_A1'
| |   |       `-ConditionalOperator 0x7fe8b21b3208 </usr/include/math.h:141:7, line:142:67> 'int'
| |   |         |-BinaryOperator 0x7fe8b21b2ee0 <line:141:7, col:33> '_Bool' '=='
| |   |         | |-UnaryExprOrTypeTraitExpr 0x7fe8b21b2e88 <col:7, col:15> 'unsigned long' sizeof
| |   |         | | `-ParenExpr 0x7fe8b21b2e68 <col:13, col:15> '_A1' lvalue
| |   |         | |   `-DeclRefExpr 0x7fe8b21b2e40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:383:23> '_A1' lvalue ParmVar 0x7fe8b21b29a0 '__lcpp_x' '_A1'
| |   |         | `-UnaryExprOrTypeTraitExpr 0x7fe8b21b2ec0 </usr/include/math.h:141:20, col:33> 'unsigned long' sizeof 'double'
| |   |         |-CallExpr 0x7fe8b21b3058 <col:37, col:62> 'int'
| |   |         | |-ImplicitCastExpr 0x7fe8b21b3040 <col:37> 'int (*)(double)' <FunctionToPointerDecay>
| |   |         | | `-DeclRefExpr 0x7fe8b21b3018 <col:37> 'int (double)' lvalue Function 0x7fe8b1865d18 '__fpclassifyd' 'int (double)'
| |   |         | `-CStyleCastExpr 0x7fe8b21b2ff0 <col:51, col:61> 'double' <Dependent>
| |   |         |   `-ParenExpr 0x7fe8b21b2fd0 <col:59, col:61> '_A1' lvalue
| |   |         |     `-DeclRefExpr 0x7fe8b21b2f60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:383:23> '_A1' lvalue ParmVar 0x7fe8b21b29a0 '__lcpp_x' '_A1'
| |   |         `-CallExpr 0x7fe8b21b31d8 </usr/include/math.h:142:37, col:67> 'int'
| |   |           |-ImplicitCastExpr 0x7fe8b21b31c0 <col:37> 'int (*)(long double)' <FunctionToPointerDecay>
| |   |           | `-DeclRefExpr 0x7fe8b21b3198 <col:37> 'int (long double)' lvalue Function 0x7fe8b1865e98 '__fpclassifyl' 'int (long double)'
| |   |           `-CStyleCastExpr 0x7fe8b21b3170 <col:51, col:66> 'long double' <Dependent>
| |   |             `-ParenExpr 0x7fe8b21b3150 <col:64, col:66> '_A1' lvalue
| |   |               `-DeclRefExpr 0x7fe8b21b30e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:383:23> '_A1' lvalue ParmVar 0x7fe8b21b29a0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fe8b21b2ba0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7fe8b21b2be8 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fe8b21b3860 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:388:1, line:394:1> line:391:1 fpclassify
| | |-TemplateTypeParmDecl 0x7fe8b21b32c0 <line:388:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fe8b21b37c8 <line:389:1, line:394:1> line:391:1 fpclassify 'typename std::enable_if<std::is_floating_point<_A1>::value, int>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fe8b21b36b0 <col:12, col:16> col:16 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fe8b21b3b28 <line:392:1, line:394:1>
| |   | `-ReturnStmt 0x7fe8b21b3b10 <line:393:5, col:76>
| |   |   `-CallExpr 0x7fe8b21b3ae0 <col:12, col:76> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fe8b21b3910 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_fpclassify' 0x7fe8b21b2b48
| |   |     `-CStyleCastExpr 0x7fe8b21b3ab8 <col:32, col:68> 'typename std::__promote<_A1>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fe8b21b3a70 <col:68> '_A1' lvalue ParmVar 0x7fe8b21b36b0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fe8b21b38b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fe8b21b3900 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fe8b21b40e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:396:1, line:400:47> line:399:1 fpclassify
| | |-TemplateTypeParmDecl 0x7fe8b21b3b48 <line:396:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fe8b21b4048 <line:397:1, line:400:47> line:399:1 fpclassify 'typename std::enable_if<std::is_integral<_A1>::value, int>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fe8b21b3f30 <col:12, col:16> col:16 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fe8b21b4288 <line:400:1, col:47>
| |   | `-ReturnStmt 0x7fe8b21b4270 <col:3, /usr/include/math.h:77:25>
| |   |   `-ConditionalOperator 0x7fe8b21b4240 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:400:10, /usr/include/math.h:77:25> 'int'
| |   |     |-BinaryOperator 0x7fe8b21b41d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:400:10, col:22> '<dependent type>' '=='
| |   |     | |-DeclRefExpr 0x7fe8b21b4190 <col:10> '_A1' lvalue ParmVar 0x7fe8b21b3f30 '__lcpp_x' '_A1'
| |   |     | `-IntegerLiteral 0x7fe8b21b41b8 <col:22> 'int' 0
| |   |     |-IntegerLiteral 0x7fe8b21b4200 </usr/include/math.h:76:25> 'int' 3
| |   |     `-IntegerLiteral 0x7fe8b21b4220 <line:77:25> 'int' 4
| |   |-AlwaysInlineAttr 0x7fe8b21b4138 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fe8b21b4180 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fe8b21b44d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:424:1, line:430:1> line:427:1 __libcpp_isfinite
| | |-TemplateTypeParmDecl 0x7fe8b21b42a8 <line:424:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fe8b21b4438 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:430:1> line:427:1 __libcpp_isfinite '_Bool (_A1) noexcept'
| |   |-ParmVarDecl 0x7fe8b21b4370 <col:19, col:23> col:23 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fe8b21b4c40 <line:428:1, line:430:1>
| |   | `-ReturnStmt 0x7fe8b21b4c28 <line:429:5, /usr/include/math.h:171:73>
| |   |   `-ImplicitCastExpr 0x7fe8b21b4c10 <line:169:5, line:171:73> '_Bool' <IntegralToBoolean>
| |   |     `-ParenExpr 0x7fe8b21b4bf0 <line:169:5, line:171:73> 'int'
| |   |       `-ConditionalOperator 0x7fe8b21b4bc0 <line:169:7, line:171:72> 'int'
| |   |         |-BinaryOperator 0x7fe8b21b4620 <line:169:7, col:32> '_Bool' '=='
| |   |         | |-UnaryExprOrTypeTraitExpr 0x7fe8b21b45c8 <col:7, col:15> 'unsigned long' sizeof
| |   |         | | `-ParenExpr 0x7fe8b21b45a8 <col:13, col:15> '_A1' lvalue
| |   |         | |   `-DeclRefExpr 0x7fe8b21b4580 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:429:21> '_A1' lvalue ParmVar 0x7fe8b21b4370 '__lcpp_x' '_A1'
| |   |         | `-UnaryExprOrTypeTraitExpr 0x7fe8b21b4600 </usr/include/math.h:169:20, col:32> 'unsigned long' sizeof 'float'
| |   |         |-CallExpr 0x7fe8b21b4798 <col:37, col:66> 'int'
| |   |         | |-ImplicitCastExpr 0x7fe8b21b4780 <col:37> 'int (*)(float)' <FunctionToPointerDecay>
| |   |         | | `-DeclRefExpr 0x7fe8b21b4758 <col:37> 'int (float)' lvalue Function 0x7fe8b1903390 '__inline_isfinitef' 'int (float)'
| |   |         | `-CStyleCastExpr 0x7fe8b21b4730 <col:56, col:65> 'float' <Dependent>
| |   |         |   `-ParenExpr 0x7fe8b21b4710 <col:63, col:65> '_A1' lvalue
| |   |         |     `-DeclRefExpr 0x7fe8b21b46a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:429:21> '_A1' lvalue ParmVar 0x7fe8b21b4370 '__lcpp_x' '_A1'
| |   |         `-ConditionalOperator 0x7fe8b21b4b90 </usr/include/math.h:170:7, line:171:72> 'int'
| |   |           |-BinaryOperator 0x7fe8b21b4868 <line:170:7, col:33> '_Bool' '=='
| |   |           | |-UnaryExprOrTypeTraitExpr 0x7fe8b21b4810 <col:7, col:15> 'unsigned long' sizeof
| |   |           | | `-ParenExpr 0x7fe8b21b47f0 <col:13, col:15> '_A1' lvalue
| |   |           | |   `-DeclRefExpr 0x7fe8b21b47c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:429:21> '_A1' lvalue ParmVar 0x7fe8b21b4370 '__lcpp_x' '_A1'
| |   |           | `-UnaryExprOrTypeTraitExpr 0x7fe8b21b4848 </usr/include/math.h:170:20, col:33> 'unsigned long' sizeof 'double'
| |   |           |-CallExpr 0x7fe8b21b49e0 <col:37, col:67> 'int'
| |   |           | |-ImplicitCastExpr 0x7fe8b21b49c8 <col:37> 'int (*)(double)' <FunctionToPointerDecay>
| |   |           | | `-DeclRefExpr 0x7fe8b21b49a0 <col:37> 'int (double)' lvalue Function 0x7fe8b1903c00 '__inline_isfinited' 'int (double)'
| |   |           | `-CStyleCastExpr 0x7fe8b21b4978 <col:56, col:66> 'double' <Dependent>
| |   |           |   `-ParenExpr 0x7fe8b21b4958 <col:64, col:66> '_A1' lvalue
| |   |           |     `-DeclRefExpr 0x7fe8b21b48e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:429:21> '_A1' lvalue ParmVar 0x7fe8b21b4370 '__lcpp_x' '_A1'
| |   |           `-CallExpr 0x7fe8b21b4b60 </usr/include/math.h:171:37, col:72> 'int'
| |   |             |-ImplicitCastExpr 0x7fe8b21b4b48 <col:37> 'int (*)(long double)' <FunctionToPointerDecay>
| |   |             | `-DeclRefExpr 0x7fe8b21b4b20 <col:37> 'int (long double)' lvalue Function 0x7fe8b1904900 '__inline_isfinitel' 'int (long double)'
| |   |             `-CStyleCastExpr 0x7fe8b21b4af8 <col:56, col:71> 'long double' <Dependent>
| |   |               `-ParenExpr 0x7fe8b21b4ad8 <col:69, col:71> '_A1' lvalue
| |   |                 `-DeclRefExpr 0x7fe8b21b4a68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:429:21> '_A1' lvalue ParmVar 0x7fe8b21b4370 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fe8b21b4528 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7fe8b21b4570 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fe8b21b5380 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:434:1, line:442:1> line:439:1 isfinite
| | |-TemplateTypeParmDecl 0x7fe8b21b4c60 <line:434:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fe8b21b52e8 <line:435:1, line:442:1> line:439:1 isfinite 'typename std::enable_if<std::is_arithmetic<_A1>::value && std::numeric_limits<_A1>::has_infinity, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fe8b21b51d0 <col:10, col:14> col:14 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fe8b21b5658 <line:440:1, line:442:1>
| |   | `-ReturnStmt 0x7fe8b21b5640 <line:441:5, col:74>
| |   |   `-CallExpr 0x7fe8b21b5610 <col:12, col:74> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fe8b21b5448 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_isfinite' 0x7fe8b21b44d0
| |   |     `-CStyleCastExpr 0x7fe8b21b55e8 <col:30, col:66> 'typename std::__promote<_A1>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fe8b21b55a0 <col:66> '_A1' lvalue ParmVar 0x7fe8b21b51d0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fe8b21b53d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fe8b21b5438 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fe8b21b5d70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:444:1, line:450:16> line:449:1 isfinite
| | |-TemplateTypeParmDecl 0x7fe8b21b5678 <line:444:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fe8b21b5cd8 <line:445:1, line:450:16> line:449:1 isfinite 'typename std::enable_if<std::is_arithmetic<_A1>::value && !std::numeric_limits<_A1>::has_infinity, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fe8b21b5bc0 <col:10> col:13 '_A1'
| |   |-CompoundStmt 0x7fe8b21b5e50 <line:450:1, col:16>
| |   | `-ReturnStmt 0x7fe8b21b5e38 <col:3, col:10>
| |   |   `-CXXBoolLiteralExpr 0x7fe8b21b5e20 <col:10> '_Bool' true
| |   |-AlwaysInlineAttr 0x7fe8b21b5dc8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fe8b21b5e10 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fe8b21b6090 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:458:1, line:464:1> line:461:1 __libcpp_isinf
| | |-TemplateTypeParmDecl 0x7fe8b21b5e70 <line:458:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fe8b21b5ff8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:464:1> line:461:1 __libcpp_isinf '_Bool (_A1) noexcept'
| |   |-ParmVarDecl 0x7fe8b21b5f30 <col:16, col:20> col:20 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fe8b21b6800 <line:462:1, line:464:1>
| |   | `-ReturnStmt 0x7fe8b21b67e8 <line:463:5, /usr/include/math.h:176:70>
| |   |   `-ImplicitCastExpr 0x7fe8b21b67d0 <line:174:5, line:176:70> '_Bool' <IntegralToBoolean>
| |   |     `-ParenExpr 0x7fe8b21b67b0 <line:174:5, line:176:70> 'int'
| |   |       `-ConditionalOperator 0x7fe8b21b6780 <line:174:7, line:176:69> 'int'
| |   |         |-BinaryOperator 0x7fe8b21b61e0 <line:174:7, col:32> '_Bool' '=='
| |   |         | |-UnaryExprOrTypeTraitExpr 0x7fe8b21b6188 <col:7, col:15> 'unsigned long' sizeof
| |   |         | | `-ParenExpr 0x7fe8b21b6168 <col:13, col:15> '_A1' lvalue
| |   |         | |   `-DeclRefExpr 0x7fe8b21b6140 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:463:18> '_A1' lvalue ParmVar 0x7fe8b21b5f30 '__lcpp_x' '_A1'
| |   |         | `-UnaryExprOrTypeTraitExpr 0x7fe8b21b61c0 </usr/include/math.h:174:20, col:32> 'unsigned long' sizeof 'float'
| |   |         |-CallExpr 0x7fe8b21b6358 <col:37, col:63> 'int'
| |   |         | |-ImplicitCastExpr 0x7fe8b21b6340 <col:37> 'int (*)(float)' <FunctionToPointerDecay>
| |   |         | | `-DeclRefExpr 0x7fe8b21b6318 <col:37> 'int (float)' lvalue Function 0x7fe8b1905170 '__inline_isinff' 'int (float)'
| |   |         | `-CStyleCastExpr 0x7fe8b21b62f0 <col:53, col:62> 'float' <Dependent>
| |   |         |   `-ParenExpr 0x7fe8b21b62d0 <col:60, col:62> '_A1' lvalue
| |   |         |     `-DeclRefExpr 0x7fe8b21b6260 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:463:18> '_A1' lvalue ParmVar 0x7fe8b21b5f30 '__lcpp_x' '_A1'
| |   |         `-ConditionalOperator 0x7fe8b21b6750 </usr/include/math.h:175:7, line:176:69> 'int'
| |   |           |-BinaryOperator 0x7fe8b21b6428 <line:175:7, col:33> '_Bool' '=='
| |   |           | |-UnaryExprOrTypeTraitExpr 0x7fe8b21b63d0 <col:7, col:15> 'unsigned long' sizeof
| |   |           | | `-ParenExpr 0x7fe8b21b63b0 <col:13, col:15> '_A1' lvalue
| |   |           | |   `-DeclRefExpr 0x7fe8b21b6388 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:463:18> '_A1' lvalue ParmVar 0x7fe8b21b5f30 '__lcpp_x' '_A1'
| |   |           | `-UnaryExprOrTypeTraitExpr 0x7fe8b21b6408 </usr/include/math.h:175:20, col:33> 'unsigned long' sizeof 'double'
| |   |           |-CallExpr 0x7fe8b21b65a0 <col:37, col:64> 'int'
| |   |           | |-ImplicitCastExpr 0x7fe8b21b6588 <col:37> 'int (*)(double)' <FunctionToPointerDecay>
| |   |           | | `-DeclRefExpr 0x7fe8b21b6560 <col:37> 'int (double)' lvalue Function 0x7fe8b1905490 '__inline_isinfd' 'int (double)'
| |   |           | `-CStyleCastExpr 0x7fe8b21b6538 <col:53, col:63> 'double' <Dependent>
| |   |           |   `-ParenExpr 0x7fe8b21b6518 <col:61, col:63> '_A1' lvalue
| |   |           |     `-DeclRefExpr 0x7fe8b21b64a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:463:18> '_A1' lvalue ParmVar 0x7fe8b21b5f30 '__lcpp_x' '_A1'
| |   |           `-CallExpr 0x7fe8b21b6720 </usr/include/math.h:176:37, col:69> 'int'
| |   |             |-ImplicitCastExpr 0x7fe8b21b6708 <col:37> 'int (*)(long double)' <FunctionToPointerDecay>
| |   |             | `-DeclRefExpr 0x7fe8b21b66e0 <col:37> 'int (long double)' lvalue Function 0x7fe8b1905bb0 '__inline_isinfl' 'int (long double)'
| |   |             `-CStyleCastExpr 0x7fe8b21b66b8 <col:53, col:68> 'long double' <Dependent>
| |   |               `-ParenExpr 0x7fe8b21b6698 <col:66, col:68> '_A1' lvalue
| |   |                 `-DeclRefExpr 0x7fe8b21b6628 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:463:18> '_A1' lvalue ParmVar 0x7fe8b21b5f30 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fe8b21b60e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7fe8b21b6130 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fe8b21b6e00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:468:1, line:476:1> line:473:1 isinf
| | |-TemplateTypeParmDecl 0x7fe8b21b6820 <line:468:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fe8b21b6d68 <line:469:1, line:476:1> line:473:1 isinf 'typename std::enable_if<std::is_arithmetic<_A1>::value && std::numeric_limits<_A1>::has_infinity, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fe8b21b6c90 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fe8b21b70c8 <line:474:1, line:476:1>
| |   | `-ReturnStmt 0x7fe8b21b70b0 <line:475:5, col:71>
| |   |   `-CallExpr 0x7fe8b21b7080 <col:12, col:71> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fe8b21b6eb0 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_isinf' 0x7fe8b21b6090
| |   |     `-CStyleCastExpr 0x7fe8b21b7058 <col:27, col:63> 'typename std::__promote<_A1>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fe8b21b7010 <col:63> '_A1' lvalue ParmVar 0x7fe8b21b6c90 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fe8b21b6e58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fe8b21b6ea0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fe8b21b7700 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:478:1, line:484:17> line:483:1 isinf
| | |-TemplateTypeParmDecl 0x7fe8b21b70e8 <line:478:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fe8b21b7668 <line:479:1, line:484:17> line:483:1 isinf 'typename std::enable_if<std::is_arithmetic<_A1>::value && !std::numeric_limits<_A1>::has_infinity, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fe8b21b7590 <col:7> col:10 '_A1'
| |   |-CompoundStmt 0x7fe8b21b77e0 <line:484:1, col:17>
| |   | `-ReturnStmt 0x7fe8b21b77c8 <col:3, col:10>
| |   |   `-CXXBoolLiteralExpr 0x7fe8b21b77b0 <col:10> '_Bool' false
| |   |-AlwaysInlineAttr 0x7fe8b21b7758 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fe8b21b77a0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fe8b21b7a20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:492:1, line:498:1> line:495:1 __libcpp_isnan
| | |-TemplateTypeParmDecl 0x7fe8b21b7800 <line:492:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fe8b21b7988 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:498:1> line:495:1 __libcpp_isnan '_Bool (_A1) noexcept'
| |   |-ParmVarDecl 0x7fe8b21b78c0 <col:16, col:20> col:20 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fe8b21b8190 <line:496:1, line:498:1>
| |   | `-ReturnStmt 0x7fe8b21b8178 <line:497:5, /usr/include/math.h:181:70>
| |   |   `-ImplicitCastExpr 0x7fe8b21b8160 <line:179:5, line:181:70> '_Bool' <IntegralToBoolean>
| |   |     `-ParenExpr 0x7fe8b21b8140 <line:179:5, line:181:70> 'int'
| |   |       `-ConditionalOperator 0x7fe8b21b8110 <line:179:7, line:181:69> 'int'
| |   |         |-BinaryOperator 0x7fe8b21b7b70 <line:179:7, col:32> '_Bool' '=='
| |   |         | |-UnaryExprOrTypeTraitExpr 0x7fe8b21b7b18 <col:7, col:15> 'unsigned long' sizeof
| |   |         | | `-ParenExpr 0x7fe8b21b7af8 <col:13, col:15> '_A1' lvalue
| |   |         | |   `-DeclRefExpr 0x7fe8b21b7ad0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:497:18> '_A1' lvalue ParmVar 0x7fe8b21b78c0 '__lcpp_x' '_A1'
| |   |         | `-UnaryExprOrTypeTraitExpr 0x7fe8b21b7b50 </usr/include/math.h:179:20, col:32> 'unsigned long' sizeof 'float'
| |   |         |-CallExpr 0x7fe8b21b7ce8 <col:37, col:63> 'int'
| |   |         | |-ImplicitCastExpr 0x7fe8b21b7cd0 <col:37> 'int (*)(float)' <FunctionToPointerDecay>
| |   |         | | `-DeclRefExpr 0x7fe8b21b7ca8 <col:37> 'int (float)' lvalue Function 0x7fe8b1905ed0 '__inline_isnanf' 'int (float)'
| |   |         | `-CStyleCastExpr 0x7fe8b21b7c80 <col:53, col:62> 'float' <Dependent>
| |   |         |   `-ParenExpr 0x7fe8b21b7c60 <col:60, col:62> '_A1' lvalue
| |   |         |     `-DeclRefExpr 0x7fe8b21b7bf0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:497:18> '_A1' lvalue ParmVar 0x7fe8b21b78c0 '__lcpp_x' '_A1'
| |   |         `-ConditionalOperator 0x7fe8b21b80e0 </usr/include/math.h:180:7, line:181:69> 'int'
| |   |           |-BinaryOperator 0x7fe8b21b7db8 <line:180:7, col:33> '_Bool' '=='
| |   |           | |-UnaryExprOrTypeTraitExpr 0x7fe8b21b7d60 <col:7, col:15> 'unsigned long' sizeof
| |   |           | | `-ParenExpr 0x7fe8b21b7d40 <col:13, col:15> '_A1' lvalue
| |   |           | |   `-DeclRefExpr 0x7fe8b21b7d18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:497:18> '_A1' lvalue ParmVar 0x7fe8b21b78c0 '__lcpp_x' '_A1'
| |   |           | `-UnaryExprOrTypeTraitExpr 0x7fe8b21b7d98 </usr/include/math.h:180:20, col:33> 'unsigned long' sizeof 'double'
| |   |           |-CallExpr 0x7fe8b21b7f30 <col:37, col:64> 'int'
| |   |           | |-ImplicitCastExpr 0x7fe8b21b7f18 <col:37> 'int (*)(double)' <FunctionToPointerDecay>
| |   |           | | `-DeclRefExpr 0x7fe8b21b7ef0 <col:37> 'int (double)' lvalue Function 0x7fe8b1906158 '__inline_isnand' 'int (double)'
| |   |           | `-CStyleCastExpr 0x7fe8b21b7ec8 <col:53, col:63> 'double' <Dependent>
| |   |           |   `-ParenExpr 0x7fe8b21b7ea8 <col:61, col:63> '_A1' lvalue
| |   |           |     `-DeclRefExpr 0x7fe8b21b7e38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:497:18> '_A1' lvalue ParmVar 0x7fe8b21b78c0 '__lcpp_x' '_A1'
| |   |           `-CallExpr 0x7fe8b21b80b0 </usr/include/math.h:181:37, col:69> 'int'
| |   |             |-ImplicitCastExpr 0x7fe8b21b8098 <col:37> 'int (*)(long double)' <FunctionToPointerDecay>
| |   |             | `-DeclRefExpr 0x7fe8b21b8070 <col:37> 'int (long double)' lvalue Function 0x7fe8b19063e0 '__inline_isnanl' 'int (long double)'
| |   |             `-CStyleCastExpr 0x7fe8b21b8048 <col:53, col:68> 'long double' <Dependent>
| |   |               `-ParenExpr 0x7fe8b21b8028 <col:66, col:68> '_A1' lvalue
| |   |                 `-DeclRefExpr 0x7fe8b21b7fb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:497:18> '_A1' lvalue ParmVar 0x7fe8b21b78c0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fe8b21b7a78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7fe8b21b7ac0 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fe8b21b8650 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:502:1, line:508:1> line:505:1 isnan
| | |-TemplateTypeParmDecl 0x7fe8b21b81b0 <line:502:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fe8b21b85b8 <line:503:1, line:508:1> line:505:1 isnan 'typename std::enable_if<std::is_floating_point<_A1>::value, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fe8b21b84e0 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fe8b21b8918 <line:506:1, line:508:1>
| |   | `-ReturnStmt 0x7fe8b21b8900 <line:507:5, col:71>
| |   |   `-CallExpr 0x7fe8b21b88d0 <col:12, col:71> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fe8b21b8700 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_isnan' 0x7fe8b21b7a20
| |   |     `-CStyleCastExpr 0x7fe8b21b88a8 <col:27, col:63> 'typename std::__promote<_A1>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fe8b21b8860 <col:63> '_A1' lvalue ParmVar 0x7fe8b21b84e0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fe8b21b86a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fe8b21b86f0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fe8b21b8ed0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:510:1, line:514:17> line:513:1 isnan
| | |-TemplateTypeParmDecl 0x7fe8b21b8938 <line:510:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fe8b21b8e38 <line:511:1, line:514:17> line:513:1 isnan 'typename std::enable_if<std::is_integral<_A1>::value, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fe8b21b8d20 <col:7> col:10 '_A1'
| |   |-CompoundStmt 0x7fe8b21b8fb0 <line:514:1, col:17>
| |   | `-ReturnStmt 0x7fe8b21b8f98 <col:3, col:10>
| |   |   `-CXXBoolLiteralExpr 0x7fe8b21b8f80 <col:10> '_Bool' false
| |   |-AlwaysInlineAttr 0x7fe8b21b8f28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fe8b21b8f70 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fe8b21b91f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:522:1, line:528:1> line:525:1 __libcpp_isnormal
| | |-TemplateTypeParmDecl 0x7fe8b21b8fd0 <line:522:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fe8b21b9158 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:528:1> line:525:1 __libcpp_isnormal '_Bool (_A1) noexcept'
| |   |-ParmVarDecl 0x7fe8b21b9090 <col:19, col:23> col:23 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fe8b21b9978 <line:526:1, line:528:1>
| |   | `-ReturnStmt 0x7fe8b21b9960 <line:527:5, /usr/include/math.h:166:73>
| |   |   `-ImplicitCastExpr 0x7fe8b21b9948 <line:164:5, line:166:73> '_Bool' <IntegralToBoolean>
| |   |     `-ParenExpr 0x7fe8b21b9928 <line:164:5, line:166:73> 'int'
| |   |       `-ConditionalOperator 0x7fe8b21b98f8 <line:164:7, line:166:72> 'int'
| |   |         |-BinaryOperator 0x7fe8b21b9340 <line:164:7, col:32> '_Bool' '=='
| |   |         | |-UnaryExprOrTypeTraitExpr 0x7fe8b21b92e8 <col:7, col:15> 'unsigned long' sizeof
| |   |         | | `-ParenExpr 0x7fe8b21b92c8 <col:13, col:15> '_A1' lvalue
| |   |         | |   `-DeclRefExpr 0x7fe8b21b92a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:527:21> '_A1' lvalue ParmVar 0x7fe8b21b9090 '__lcpp_x' '_A1'
| |   |         | `-UnaryExprOrTypeTraitExpr 0x7fe8b21b9320 </usr/include/math.h:164:20, col:32> 'unsigned long' sizeof 'float'
| |   |         |-CallExpr 0x7fe8b21b94d0 <col:37, col:66> 'int'
| |   |         | |-ImplicitCastExpr 0x7fe8b21b94b8 <col:37> 'int (*)(float)' <FunctionToPointerDecay>
| |   |         | | `-DeclRefExpr 0x7fe8b21b9490 <col:37> 'int (float)' lvalue Function 0x7fe8b190c768 '__inline_isnormalf' 'int (float)'
| |   |         | `-CStyleCastExpr 0x7fe8b21b9468 <col:56, col:65> 'float' <Dependent>
| |   |         |   `-ParenExpr 0x7fe8b21b9448 <col:63, col:65> '_A1' lvalue
| |   |         |     `-DeclRefExpr 0x7fe8b21b93c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:527:21> '_A1' lvalue ParmVar 0x7fe8b21b9090 '__lcpp_x' '_A1'
| |   |         `-ConditionalOperator 0x7fe8b21b98c8 </usr/include/math.h:165:7, line:166:72> 'int'
| |   |           |-BinaryOperator 0x7fe8b21b95a0 <line:165:7, col:33> '_Bool' '=='
| |   |           | |-UnaryExprOrTypeTraitExpr 0x7fe8b21b9548 <col:7, col:15> 'unsigned long' sizeof
| |   |           | | `-ParenExpr 0x7fe8b21b9528 <col:13, col:15> '_A1' lvalue
| |   |           | |   `-DeclRefExpr 0x7fe8b21b9500 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:527:21> '_A1' lvalue ParmVar 0x7fe8b21b9090 '__lcpp_x' '_A1'
| |   |           | `-UnaryExprOrTypeTraitExpr 0x7fe8b21b9580 </usr/include/math.h:165:20, col:33> 'unsigned long' sizeof 'double'
| |   |           |-CallExpr 0x7fe8b21b9718 <col:37, col:67> 'int'
| |   |           | |-ImplicitCastExpr 0x7fe8b21b9700 <col:37> 'int (*)(double)' <FunctionToPointerDecay>
| |   |           | | `-DeclRefExpr 0x7fe8b21b96d8 <col:37> 'int (double)' lvalue Function 0x7fe8b190d000 '__inline_isnormald' 'int (double)'
| |   |           | `-CStyleCastExpr 0x7fe8b21b96b0 <col:56, col:66> 'double' <Dependent>
| |   |           |   `-ParenExpr 0x7fe8b21b9690 <col:64, col:66> '_A1' lvalue
| |   |           |     `-DeclRefExpr 0x7fe8b21b9620 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:527:21> '_A1' lvalue ParmVar 0x7fe8b21b9090 '__lcpp_x' '_A1'
| |   |           `-CallExpr 0x7fe8b21b9898 </usr/include/math.h:166:37, col:72> 'int'
| |   |             |-ImplicitCastExpr 0x7fe8b21b9880 <col:37> 'int (*)(long double)' <FunctionToPointerDecay>
| |   |             | `-DeclRefExpr 0x7fe8b21b9858 <col:37> 'int (long double)' lvalue Function 0x7fe8b190d448 '__inline_isnormall' 'int (long double)'
| |   |             `-CStyleCastExpr 0x7fe8b21b9830 <col:56, col:71> 'long double' <Dependent>
| |   |               `-ParenExpr 0x7fe8b21b9810 <col:69, col:71> '_A1' lvalue
| |   |                 `-DeclRefExpr 0x7fe8b21b97a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:527:21> '_A1' lvalue ParmVar 0x7fe8b21b9090 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fe8b21b9248 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7fe8b21b9290 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fe8b21b9e40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:532:1, line:538:1> line:535:1 isnormal
| | |-TemplateTypeParmDecl 0x7fe8b21b9998 <line:532:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fe8b21b9da8 <line:533:1, line:538:1> line:535:1 isnormal 'typename std::enable_if<std::is_floating_point<_A1>::value, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fe8b21b9cd0 <col:10, col:14> col:14 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fe8b21ba108 <line:536:1, line:538:1>
| |   | `-ReturnStmt 0x7fe8b21ba0f0 <line:537:5, col:74>
| |   |   `-CallExpr 0x7fe8b21ba0c0 <col:12, col:74> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fe8b21b9ef0 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_isnormal' 0x7fe8b21b91f0
| |   |     `-CStyleCastExpr 0x7fe8b21ba098 <col:30, col:66> 'typename std::__promote<_A1>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fe8b21ba050 <col:66> '_A1' lvalue ParmVar 0x7fe8b21b9cd0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fe8b21b9e98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fe8b21b9ee0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fe8b21ba5d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:540:1, line:544:25> line:543:1 isnormal
| | |-TemplateTypeParmDecl 0x7fe8b21ba128 <line:540:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fe8b21ba538 <line:541:1, line:544:25> line:543:1 isnormal 'typename std::enable_if<std::is_integral<_A1>::value, _Bool>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fe8b21ba460 <col:10, col:14> col:14 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fe8b21ba708 <line:544:1, col:25>
| |   | `-ReturnStmt 0x7fe8b21ba6f0 <col:3, col:22>
| |   |   `-BinaryOperator 0x7fe8b21ba6c8 <col:10, col:22> '<dependent type>' '!='
| |   |     |-DeclRefExpr 0x7fe8b21ba680 <col:10> '_A1' lvalue ParmVar 0x7fe8b21ba460 '__lcpp_x' '_A1'
| |   |     `-IntegerLiteral 0x7fe8b21ba6a8 <col:22> 'int' 0
| |   |-AlwaysInlineAttr 0x7fe8b21ba628 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fe8b21ba670 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fe8b21baa90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:552:1, line:558:1> line:555:1 __libcpp_isgreater
| | |-TemplateTypeParmDecl 0x7fe8b21ba728 <line:552:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fe8b21ba798 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fe8b21ba9f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:558:1> line:555:1 __libcpp_isgreater '_Bool (_A1, _A2) noexcept'
| |   |-ParmVarDecl 0x7fe8b21ba868 <col:20, col:24> col:24 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fe8b21ba8d8 <col:34, col:38> col:38 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fe8b21badf8 <line:556:1, line:558:1>
| |   | `-ReturnStmt 0x7fe8b21bade0 <line:557:5, /usr/include/math.h:557:52>
| |   |   `-CallExpr 0x7fe8b21bada8 <col:25, col:52> '<dependent type>'
| |   |     |-DeclRefExpr 0x7fe8b21bacf0 <col:25> '<builtin fn type>' Function 0x7fe8b21bac00 '__builtin_isgreater' 'int (...) noexcept'
| |   |     |-ParenExpr 0x7fe8b21bad40 <col:45, col:47> '_A1' lvalue
| |   |     | `-DeclRefExpr 0x7fe8b21bad18 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:557:22> '_A1' lvalue ParmVar 0x7fe8b21ba868 '__lcpp_x' '_A1'
| |   |     `-ParenExpr 0x7fe8b21bad88 </usr/include/math.h:557:49, col:51> '_A2' lvalue
| |   |       `-DeclRefExpr 0x7fe8b21bad60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:557:32> '_A2' lvalue ParmVar 0x7fe8b21ba8d8 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fe8b21baaf0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7fe8b21bab38 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fe8b21bb660 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:562:1, line:574:1> line:570:1 isgreater
| | |-TemplateTypeParmDecl 0x7fe8b21bae18 <line:562:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fe8b21bae88 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fe8b21bb5c8 <line:563:1, line:574:1> line:570:1 isgreater 'typename std::enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, _Bool>::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fe8b21bb430 <col:11, col:15> col:15 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fe8b21bb4a0 <col:25, col:29> col:29 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fe8b21bbb50 <line:571:1, line:574:1>
| |   | |-DeclStmt 0x7fe8b21bb9a8 <line:572:5, col:57>
| |   | | `-TypedefDecl 0x7fe8b21bb950 <col:5, col:53> col:53 referenced type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fe8b21bb8e0 'typename std::__promote<_A1, _A2>::type' dependent
| |   | `-ReturnStmt 0x7fe8b21bbb38 <line:573:5, col:61>
| |   |   `-CallExpr 0x7fe8b21bbb00 <col:12, col:61> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fe8b21bb9c0 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_isgreater' 0x7fe8b21baa90
| |   |     |-CStyleCastExpr 0x7fe8b21bba78 <col:31, col:37> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fe8b21bba40 <col:37> '_A1' lvalue ParmVar 0x7fe8b21bb430 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fe8b21bbad8 <col:47, col:53> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fe8b21bbaa0 <col:53> '_A2' lvalue ParmVar 0x7fe8b21bb4a0 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fe8b21bb6c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fe8b21bb708 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fe8b21bbea0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:582:1, line:588:1> line:585:1 __libcpp_isgreaterequal
| | |-TemplateTypeParmDecl 0x7fe8b21bbb78 <line:582:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fe8b21bbbe8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fe8b21bbe08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:588:1> line:585:1 __libcpp_isgreaterequal '_Bool (_A1, _A2) noexcept'
| |   |-ParmVarDecl 0x7fe8b21bbcb8 <col:25, col:29> col:29 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fe8b21bbd28 <col:39, col:43> col:43 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fe8b21bc1a0 <line:586:1, line:588:1>
| |   | `-ReturnStmt 0x7fe8b21bc188 <line:587:5, /usr/include/math.h:558:62>
| |   |   `-CallExpr 0x7fe8b21bc150 <col:30, col:62> '<dependent type>'
| |   |     |-DeclRefExpr 0x7fe8b21bc098 <col:30> '<builtin fn type>' Function 0x7fe8b21bbfa8 '__builtin_isgreaterequal' 'int (...) noexcept'
| |   |     |-ParenExpr 0x7fe8b21bc0e8 <col:55, col:57> '_A1' lvalue
| |   |     | `-DeclRefExpr 0x7fe8b21bc0c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:587:27> '_A1' lvalue ParmVar 0x7fe8b21bbcb8 '__lcpp_x' '_A1'
| |   |     `-ParenExpr 0x7fe8b21bc130 </usr/include/math.h:558:59, col:61> '_A2' lvalue
| |   |       `-DeclRefExpr 0x7fe8b21bc108 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:587:37> '_A2' lvalue ParmVar 0x7fe8b21bbd28 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fe8b21bbf00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7fe8b21bbf48 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fe8b21bc8a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:592:1, line:604:1> line:600:1 isgreaterequal
| | |-TemplateTypeParmDecl 0x7fe8b21bc1c0 <line:592:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fe8b21bc228 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fe8b21bc808 <line:593:1, line:604:1> line:600:1 isgreaterequal 'typename std::enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, _Bool>::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fe8b21bc6b0 <col:16, col:20> col:20 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fe8b21bc720 <col:30, col:34> col:34 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fe8b21bccc0 <line:601:1, line:604:1>
| |   | |-DeclStmt 0x7fe8b21bcb18 <line:602:5, col:57>
| |   | | `-TypedefDecl 0x7fe8b21bcac0 <col:5, col:53> col:53 referenced type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fe8b21bca50 'typename std::__promote<_A1, _A2>::type' dependent
| |   | `-ReturnStmt 0x7fe8b21bcca8 <line:603:5, col:66>
| |   |   `-CallExpr 0x7fe8b21bcc70 <col:12, col:66> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fe8b21bcb30 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_isgreaterequal' 0x7fe8b21bbea0
| |   |     |-CStyleCastExpr 0x7fe8b21bcbe8 <col:36, col:42> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fe8b21bcbb0 <col:42> '_A1' lvalue ParmVar 0x7fe8b21bc6b0 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fe8b21bcc48 <col:52, col:58> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fe8b21bcc10 <col:58> '_A2' lvalue ParmVar 0x7fe8b21bc720 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fe8b21bc900 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fe8b21bc948 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fe8b21bd010 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:612:1, line:618:1> line:615:1 __libcpp_isless
| | |-TemplateTypeParmDecl 0x7fe8b21bcce8 <line:612:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fe8b21bcd58 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fe8b21bcf78 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:618:1> line:615:1 __libcpp_isless '_Bool (_A1, _A2) noexcept'
| |   |-ParmVarDecl 0x7fe8b21bce28 <col:17, col:21> col:21 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fe8b21bce98 <col:31, col:35> col:35 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fe8b21bd310 <line:616:1, line:618:1>
| |   | `-ReturnStmt 0x7fe8b21bd2f8 <line:617:5, /usr/include/math.h:559:46>
| |   |   `-CallExpr 0x7fe8b21bd2c0 <col:22, col:46> '<dependent type>'
| |   |     |-DeclRefExpr 0x7fe8b21bd208 <col:22> '<builtin fn type>' Function 0x7fe8b21bd118 '__builtin_isless' 'int (...) noexcept'
| |   |     |-ParenExpr 0x7fe8b21bd258 <col:39, col:41> '_A1' lvalue
| |   |     | `-DeclRefExpr 0x7fe8b21bd230 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:617:19> '_A1' lvalue ParmVar 0x7fe8b21bce28 '__lcpp_x' '_A1'
| |   |     `-ParenExpr 0x7fe8b21bd2a0 </usr/include/math.h:559:43, col:45> '_A2' lvalue
| |   |       `-DeclRefExpr 0x7fe8b21bd278 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:617:29> '_A2' lvalue ParmVar 0x7fe8b21bce98 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fe8b21bd070 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7fe8b21bd0b8 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fe8b21bda30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:622:1, line:634:1> line:630:1 isless
| | |-TemplateTypeParmDecl 0x7fe8b21bd330 <line:622:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fe8b21bd398 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fe8b21bd998 <line:623:1, line:634:1> line:630:1 isless 'typename std::enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, _Bool>::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fe8b21bd840 <col:8, col:12> col:12 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fe8b21bd8b0 <col:22, col:26> col:26 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fe8b21bde50 <line:631:1, line:634:1>
| |   | |-DeclStmt 0x7fe8b21bdca8 <line:632:5, col:57>
| |   | | `-TypedefDecl 0x7fe8b21bdc50 <col:5, col:53> col:53 referenced type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fe8b21bdbe0 'typename std::__promote<_A1, _A2>::type' dependent
| |   | `-ReturnStmt 0x7fe8b21bde38 <line:633:5, col:58>
| |   |   `-CallExpr 0x7fe8b21bde00 <col:12, col:58> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fe8b21bdcc0 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_isless' 0x7fe8b21bd010
| |   |     |-CStyleCastExpr 0x7fe8b21bdd78 <col:28, col:34> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fe8b21bdd40 <col:34> '_A1' lvalue ParmVar 0x7fe8b21bd840 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fe8b21bddd8 <col:44, col:50> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fe8b21bdda0 <col:50> '_A2' lvalue ParmVar 0x7fe8b21bd8b0 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fe8b21bda90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fe8b21bdad8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fe8b21be1a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:642:1, line:648:1> line:645:1 __libcpp_islessequal
| | |-TemplateTypeParmDecl 0x7fe8b21bde78 <line:642:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fe8b21bdee8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fe8b21be108 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:648:1> line:645:1 __libcpp_islessequal '_Bool (_A1, _A2) noexcept'
| |   |-ParmVarDecl 0x7fe8b21bdfb8 <col:22, col:26> col:26 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fe8b21be028 <col:36, col:40> col:40 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fe8b21be4a0 <line:646:1, line:648:1>
| |   | `-ReturnStmt 0x7fe8b21be488 <line:647:5, /usr/include/math.h:560:56>
| |   |   `-CallExpr 0x7fe8b21be450 <col:27, col:56> '<dependent type>'
| |   |     |-DeclRefExpr 0x7fe8b21be398 <col:27> '<builtin fn type>' Function 0x7fe8b21be2a8 '__builtin_islessequal' 'int (...) noexcept'
| |   |     |-ParenExpr 0x7fe8b21be3e8 <col:49, col:51> '_A1' lvalue
| |   |     | `-DeclRefExpr 0x7fe8b21be3c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:647:24> '_A1' lvalue ParmVar 0x7fe8b21bdfb8 '__lcpp_x' '_A1'
| |   |     `-ParenExpr 0x7fe8b21be430 </usr/include/math.h:560:53, col:55> '_A2' lvalue
| |   |       `-DeclRefExpr 0x7fe8b21be408 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:647:34> '_A2' lvalue ParmVar 0x7fe8b21be028 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fe8b21be200 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7fe8b21be248 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fe8b21beba0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:652:1, line:664:1> line:660:1 islessequal
| | |-TemplateTypeParmDecl 0x7fe8b21be4c0 <line:652:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fe8b21be528 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fe8b21beb08 <line:653:1, line:664:1> line:660:1 islessequal 'typename std::enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, _Bool>::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fe8b21be9b0 <col:13, col:17> col:17 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fe8b21bea20 <col:27, col:31> col:31 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fe8b21befc0 <line:661:1, line:664:1>
| |   | |-DeclStmt 0x7fe8b21bee18 <line:662:5, col:57>
| |   | | `-TypedefDecl 0x7fe8b21bedc0 <col:5, col:53> col:53 referenced type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fe8b21bed50 'typename std::__promote<_A1, _A2>::type' dependent
| |   | `-ReturnStmt 0x7fe8b21befa8 <line:663:5, col:63>
| |   |   `-CallExpr 0x7fe8b21bef70 <col:12, col:63> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fe8b21bee30 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_islessequal' 0x7fe8b21be1a0
| |   |     |-CStyleCastExpr 0x7fe8b21beee8 <col:33, col:39> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fe8b21beeb0 <col:39> '_A1' lvalue ParmVar 0x7fe8b21be9b0 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fe8b21bef48 <col:49, col:55> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fe8b21bef10 <col:55> '_A2' lvalue ParmVar 0x7fe8b21bea20 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fe8b21bec00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fe8b21bec48 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fe8b21bf310 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:672:1, line:678:1> line:675:1 __libcpp_islessgreater
| | |-TemplateTypeParmDecl 0x7fe8b21befe8 <line:672:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fe8b21bf058 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fe8b21bf278 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:678:1> line:675:1 __libcpp_islessgreater '_Bool (_A1, _A2) noexcept'
| |   |-ParmVarDecl 0x7fe8b21bf128 <col:24, col:28> col:28 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fe8b21bf198 <col:38, col:42> col:42 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fe8b21bf648 <line:676:1, line:678:1>
| |   | `-ReturnStmt 0x7fe8b21bf630 <line:677:5, /usr/include/math.h:561:60>
| |   |   `-CallExpr 0x7fe8b21bf5f8 <col:29, col:60> '<dependent type>'
| |   |     |-DeclRefExpr 0x7fe8b21bf540 <col:29> '<builtin fn type>' Function 0x7fe8b21bf450 '__builtin_islessgreater' 'int (...) noexcept'
| |   |     |-ParenExpr 0x7fe8b21bf590 <col:53, col:55> '_A1' lvalue
| |   |     | `-DeclRefExpr 0x7fe8b21bf568 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:677:26> '_A1' lvalue ParmVar 0x7fe8b21bf128 '__lcpp_x' '_A1'
| |   |     `-ParenExpr 0x7fe8b21bf5d8 </usr/include/math.h:561:57, col:59> '_A2' lvalue
| |   |       `-DeclRefExpr 0x7fe8b21bf5b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:677:36> '_A2' lvalue ParmVar 0x7fe8b21bf198 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fe8b21bf370 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7fe8b21bf3b8 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fe8b21bfd50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:682:1, line:694:1> line:690:1 islessgreater
| | |-TemplateTypeParmDecl 0x7fe8b21bf668 <line:682:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fe8b21bf6d8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fe8b21bfcb8 <line:683:1, line:694:1> line:690:1 islessgreater 'typename std::enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, _Bool>::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fe8b21bfb60 <col:15, col:19> col:19 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fe8b21bfbd0 <col:29, col:33> col:33 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fe8b21c0170 <line:691:1, line:694:1>
| |   | |-DeclStmt 0x7fe8b21bffc8 <line:692:5, col:57>
| |   | | `-TypedefDecl 0x7fe8b21bff70 <col:5, col:53> col:53 referenced type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fe8b21bff00 'typename std::__promote<_A1, _A2>::type' dependent
| |   | `-ReturnStmt 0x7fe8b21c0158 <line:693:5, col:65>
| |   |   `-CallExpr 0x7fe8b21c0120 <col:12, col:65> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fe8b21bffe0 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_islessgreater' 0x7fe8b21bf310
| |   |     |-CStyleCastExpr 0x7fe8b21c0098 <col:35, col:41> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fe8b21c0060 <col:41> '_A1' lvalue ParmVar 0x7fe8b21bfb60 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fe8b21c00f8 <col:51, col:57> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fe8b21c00c0 <col:57> '_A2' lvalue ParmVar 0x7fe8b21bfbd0 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fe8b21bfdb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fe8b21bfdf8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fe8b21c04c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:702:1, line:708:1> line:705:1 __libcpp_isunordered
| | |-TemplateTypeParmDecl 0x7fe8b21c0198 <line:702:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fe8b21c0208 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fe8b21c0428 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:708:1> line:705:1 __libcpp_isunordered '_Bool (_A1, _A2) noexcept'
| |   |-ParmVarDecl 0x7fe8b21c02d8 <col:22, col:26> col:26 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fe8b21c0348 <col:36, col:40> col:40 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fe8b21c07c0 <line:706:1, line:708:1>
| |   | `-ReturnStmt 0x7fe8b21c07a8 <line:707:5, /usr/include/math.h:562:56>
| |   |   `-CallExpr 0x7fe8b21c0770 <col:27, col:56> '<dependent type>'
| |   |     |-DeclRefExpr 0x7fe8b21c06b8 <col:27> '<builtin fn type>' Function 0x7fe8b21c05c8 '__builtin_isunordered' 'int (...) noexcept'
| |   |     |-ParenExpr 0x7fe8b21c0708 <col:49, col:51> '_A1' lvalue
| |   |     | `-DeclRefExpr 0x7fe8b21c06e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:707:24> '_A1' lvalue ParmVar 0x7fe8b21c02d8 '__lcpp_x' '_A1'
| |   |     `-ParenExpr 0x7fe8b21c0750 </usr/include/math.h:562:53, col:55> '_A2' lvalue
| |   |       `-DeclRefExpr 0x7fe8b21c0728 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:707:34> '_A2' lvalue ParmVar 0x7fe8b21c0348 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fe8b21c0520 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
| |   `-VisibilityAttr 0x7fe8b21c0568 <col:48, col:71> Hidden
| |-FunctionTemplateDecl 0x7fe8b21c0ec0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:712:1, line:724:1> line:720:1 isunordered
| | |-TemplateTypeParmDecl 0x7fe8b21c07e0 <line:712:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fe8b21c0848 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fe8b21c0e28 <line:713:1, line:724:1> line:720:1 isunordered 'typename std::enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, _Bool>::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fe8b21c0cd0 <col:13, col:17> col:17 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fe8b21c0d40 <col:27, col:31> col:31 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fe8b21c12e0 <line:721:1, line:724:1>
| |   | |-DeclStmt 0x7fe8b21c1138 <line:722:5, col:57>
| |   | | `-TypedefDecl 0x7fe8b21c10e0 <col:5, col:53> col:53 referenced type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fe8b21c1070 'typename std::__promote<_A1, _A2>::type' dependent
| |   | `-ReturnStmt 0x7fe8b21c12c8 <line:723:5, col:63>
| |   |   `-CallExpr 0x7fe8b21c1290 <col:12, col:63> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fe8b21c1150 <col:12> '<overloaded function type>' lvalue (ADL) = '__libcpp_isunordered' 0x7fe8b21c04c0
| |   |     |-CStyleCastExpr 0x7fe8b21c1208 <col:33, col:39> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fe8b21c11d0 <col:39> '_A1' lvalue ParmVar 0x7fe8b21c0cd0 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fe8b21c1268 <col:49, col:55> 'type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fe8b21c1230 <col:55> '_A2' lvalue ParmVar 0x7fe8b21c0d40 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fe8b21c0f20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fe8b21c0f68 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21c2400 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:731:1, line:733:57> col:1 abs 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21c1350 <col:5, col:11> col:11 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fe8b21c25f0 <col:31, col:57>
| | | `-ReturnStmt 0x7fe8b21c25d8 <col:32, col:55>
| | |   `-CallExpr 0x7fe8b21c2590 <col:39, col:55> 'float'
| | |     |-ImplicitCastExpr 0x7fe8b21c2578 <col:39, col:41> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21c2518 <col:39, col:41> 'float (float)' lvalue Function 0x7fe8b200d8f0 'fabsf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fe8b21c25c0 <col:47> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21c2550 <col:47> 'float' lvalue ParmVar 0x7fe8b21c1350 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fe8b21c24a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21c24e8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21c26f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:735:1, line:737:57> col:1 abs 'double (double) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21c2658 <col:5, col:12> col:12 used __lcpp_x 'double'
| | |-CompoundStmt 0x7fe8b21c28e0 <col:32, col:57>
| | | `-ReturnStmt 0x7fe8b21c28c8 <col:33, col:55>
| | |   `-CallExpr 0x7fe8b21c2880 <col:40, col:55> 'double'
| | |     |-ImplicitCastExpr 0x7fe8b21c2868 <col:40, col:42> 'double (*)(double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21c2808 <col:40, col:42> 'double (double)' lvalue Function 0x7fe8b200da90 'fabs' 'double (double)'
| | |     `-ImplicitCastExpr 0x7fe8b21c28b0 <col:47> 'double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21c2840 <col:47> 'double' lvalue ParmVar 0x7fe8b21c2658 '__lcpp_x' 'double'
| | |-AlwaysInlineAttr 0x7fe8b21c2790 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21c27d8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21c29e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:739:1, line:741:63> col:1 abs 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21c2948 <col:5, col:17> col:17 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fe8b21c2bd0 <col:37, col:63>
| | | `-ReturnStmt 0x7fe8b21c2bb8 <col:38, col:61>
| | |   `-CallExpr 0x7fe8b21c2b70 <col:45, col:61> 'long double'
| | |     |-ImplicitCastExpr 0x7fe8b21c2b58 <col:45, col:47> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21c2af8 <col:45, col:47> 'long double (long double)' lvalue Function 0x7fe8b200dc30 'fabsl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fe8b21c2ba0 <col:53> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21c2b30 <col:53> 'long double' lvalue ParmVar 0x7fe8b21c2948 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fe8b21c2a80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21c2ac8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21c2cd0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:747:1, col:109> col:46 acos 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21c2c38 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fe8b21c2ec0 <col:83, col:109>
| | | `-ReturnStmt 0x7fe8b21c2ea8 <col:84, col:107>
| | |   `-CallExpr 0x7fe8b21c2e60 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fe8b21c2e48 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21c2de8 <col:91, col:93> 'float (float)' lvalue Function 0x7fe8b190d8a8 'acosf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fe8b21c2e90 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21c2e20 <col:99> 'float' lvalue ParmVar 0x7fe8b21c2c38 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fe8b21c2d70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21c2db8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21c2fc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:748:1, col:109> col:46 acos 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21c2f28 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fe8b21c31b0 <col:83, col:109>
| | | `-ReturnStmt 0x7fe8b21c3198 <col:84, col:107>
| | |   `-CallExpr 0x7fe8b21c3150 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fe8b21c3138 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21c30d8 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fe8b190dbe8 'acosl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fe8b21c3180 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21c3110 <col:99> 'long double' lvalue ParmVar 0x7fe8b21c2f28 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fe8b21c3060 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21c30a8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fe8b21c3760 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:751:1, line:754:63> col:1 acos
| | |-TemplateTypeParmDecl 0x7fe8b21c31d0 <line:751:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fe8b21c36c8 <line:752:1, line:754:63> col:1 acos 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fe8b21c35b0 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fe8b21c5260 <col:30, col:63>
| |   | `-ReturnStmt 0x7fe8b21c5248 <col:31, col:61>
| |   |   `-CallExpr 0x7fe8b21c5218 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fe8b21c5200 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fe8b21c51c8 <col:38, col:40> 'double (double)' lvalue Function 0x7fe8b190da48 'acos' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fe8b21c38e0 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fe8b21c38a0 <col:53> '_A1' lvalue ParmVar 0x7fe8b21c35b0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fe8b21c37b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fe8b21c3800 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21c5360 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:759:1, col:109> col:46 asin 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21c52c8 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fe8b21c5550 <col:83, col:109>
| | | `-ReturnStmt 0x7fe8b21c5538 <col:84, col:107>
| | |   `-CallExpr 0x7fe8b21c54f0 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fe8b21c54d8 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21c5478 <col:91, col:93> 'float (float)' lvalue Function 0x7fe8b190dd88 'asinf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fe8b21c5520 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21c54b0 <col:99> 'float' lvalue ParmVar 0x7fe8b21c52c8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fe8b21c5400 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21c5448 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21c5650 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:760:1, col:109> col:46 asin 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21c55b8 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fe8b21c5840 <col:83, col:109>
| | | `-ReturnStmt 0x7fe8b21c5828 <col:84, col:107>
| | |   `-CallExpr 0x7fe8b21c57e0 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fe8b21c57c8 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21c5768 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fe8b20000f0 'asinl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fe8b21c5810 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21c57a0 <col:99> 'long double' lvalue ParmVar 0x7fe8b21c55b8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fe8b21c56f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21c5738 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fe8b21c5d00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:763:1, line:766:63> col:1 asin
| | |-TemplateTypeParmDecl 0x7fe8b21c5860 <line:763:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fe8b21c5c68 <line:764:1, line:766:63> col:1 asin 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fe8b21c5b90 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fe8b21c6220 <col:30, col:63>
| |   | `-ReturnStmt 0x7fe8b21c6208 <col:31, col:61>
| |   |   `-CallExpr 0x7fe8b21c61d8 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fe8b21c61c0 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fe8b21c6188 <col:38, col:40> 'double (double)' lvalue Function 0x7fe8b190df28 'asin' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fe8b21c5e80 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fe8b21c5e40 <col:53> '_A1' lvalue ParmVar 0x7fe8b21c5b90 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fe8b21c5d58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fe8b21c5da0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21c6320 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:771:1, col:109> col:46 atan 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21c6288 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fe8b21c6540 <col:83, col:109>
| | | `-ReturnStmt 0x7fe8b21c6528 <col:84, col:107>
| | |   `-CallExpr 0x7fe8b21c64e0 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fe8b21c64c8 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21c6468 <col:91, col:93> 'float (float)' lvalue Function 0x7fe8b2000290 'atanf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fe8b21c6510 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21c64a0 <col:99> 'float' lvalue ParmVar 0x7fe8b21c6288 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fe8b21c63c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21c6438 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21c6640 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:772:1, col:109> col:46 atan 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21c65a8 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fe8b21c6830 <col:83, col:109>
| | | `-ReturnStmt 0x7fe8b21c6818 <col:84, col:107>
| | |   `-CallExpr 0x7fe8b21c67d0 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fe8b21c67b8 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21c6758 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fe8b20005d0 'atanl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fe8b21c6800 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21c6790 <col:99> 'long double' lvalue ParmVar 0x7fe8b21c65a8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fe8b21c66e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21c6728 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fe8b21c6cf0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:775:1, line:778:63> col:1 atan
| | |-TemplateTypeParmDecl 0x7fe8b21c6850 <line:775:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fe8b21c6c58 <line:776:1, line:778:63> col:1 atan 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fe8b21c6b80 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fe8b21c7210 <col:30, col:63>
| |   | `-ReturnStmt 0x7fe8b21c71f8 <col:31, col:61>
| |   |   `-CallExpr 0x7fe8b21c71c8 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fe8b21c71b0 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fe8b21c7178 <col:38, col:40> 'double (double)' lvalue Function 0x7fe8b2000430 'atan' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fe8b21c6e70 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fe8b21c6e30 <col:53> '_A1' lvalue ParmVar 0x7fe8b21c6b80 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fe8b21c6d48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fe8b21c6d90 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21c7390 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:783:1, col:143> col:46 atan2 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21c7278 <col:52, col:58> col:58 used __lcpp_y 'float'
| | |-ParmVarDecl 0x7fe8b21c72f0 <col:68, col:74> col:74 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fe8b21c7600 <col:106, col:143>
| | | `-ReturnStmt 0x7fe8b21c75e8 <col:107, col:141>
| | |   `-CallExpr 0x7fe8b21c7580 <col:114, col:141> 'float'
| | |     |-ImplicitCastExpr 0x7fe8b21c7568 <col:114, col:116> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21c74b0 <col:114, col:116> 'float (float, float)' lvalue Function 0x7fe8b2000838 'atan2f' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7fe8b21c75b8 <col:123> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fe8b21c74e8 <col:123> 'float' lvalue ParmVar 0x7fe8b21c7278 '__lcpp_y' 'float'
| | |     `-ImplicitCastExpr 0x7fe8b21c75d0 <col:133> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21c7510 <col:133> 'float' lvalue ParmVar 0x7fe8b21c72f0 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fe8b21c7438 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21c7480 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21c7780 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:784:1, col:143> col:46 atan2 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21c7668 <col:52, col:64> col:64 used __lcpp_y 'long double'
| | |-ParmVarDecl 0x7fe8b21c76e0 <col:74, col:86> col:86 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fe8b21c79f0 <col:106, col:143>
| | | `-ReturnStmt 0x7fe8b21c79d8 <col:107, col:141>
| | |   `-CallExpr 0x7fe8b21c7970 <col:114, col:141> 'long double'
| | |     |-ImplicitCastExpr 0x7fe8b21c7958 <col:114, col:116> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21c78a0 <col:114, col:116> 'long double (long double, long double)' lvalue Function 0x7fe8b2000d98 'atan2l' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fe8b21c79a8 <col:123> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fe8b21c78d8 <col:123> 'long double' lvalue ParmVar 0x7fe8b21c7668 '__lcpp_y' 'long double'
| | |     `-ImplicitCastExpr 0x7fe8b21c79c0 <col:133> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21c7900 <col:133> 'long double' lvalue ParmVar 0x7fe8b21c76e0 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fe8b21c7828 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21c7870 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fe8b21c8350 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:787:1, line:801:1> line:795:1 atan2
| | |-TemplateTypeParmDecl 0x7fe8b21c7a10 <line:787:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fe8b21c7a78 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fe8b21c82b8 <line:788:1, line:801:1> line:795:1 atan2 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fe8b21c8120 <col:7, col:11> col:11 referenced __lcpp_y '_A1'
| |   |-ParmVarDecl 0x7fe8b21c8190 <col:21, col:25> col:25 referenced __lcpp_x '_A2'
| |   |-CompoundStmt 0x7fe8b21c9c58 <line:796:1, line:801:1>
| |   | |-DeclStmt 0x7fe8b21c95c8 <line:797:5, col:66>
| |   | | `-TypedefDecl 0x7fe8b21c9570 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fe8b21c9500 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fe8b21c9aa0 <line:798:5, line:799:68>
| |   | | `-StaticAssertDecl 0x7fe8b21c9a68 <line:798:5, line:799:67> line:798:5
| |   | |   |-ParenExpr 0x7fe8b21c9a20 <col:19, line:799:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fe8b21c9a00 <line:798:20, line:799:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fe8b21c99e0 <line:798:21, line:799:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fe8b21c99b8 <line:798:22, line:799:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fe8b21c97b8 <line:798:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fe8b21c9978 <line:799:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fe8b21c9a40 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fe8b21c9c40 <line:800:5, col:68>
| |   |   `-CallExpr 0x7fe8b21c9c08 <col:12, col:68> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fe8b21c9ad8 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'atan2' 0x7fe8b2000ae8 0x7fe8b21c7390 0x7fe8b21c7780 0x7fe8b21c8350
| |   |     |-CStyleCastExpr 0x7fe8b21c9b80 <col:20, col:35> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fe8b21c9b48 <col:35> '_A1' lvalue ParmVar 0x7fe8b21c8120 '__lcpp_y' '_A1'
| |   |     `-CStyleCastExpr 0x7fe8b21c9be0 <col:45, col:60> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fe8b21c9ba8 <col:60> '_A2' lvalue ParmVar 0x7fe8b21c8190 '__lcpp_x' '_A2'
| |   |-AlwaysInlineAttr 0x7fe8b21c83b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fe8b21c9400 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21c9d68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:806:1, col:109> col:46 ceil 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21c9cd0 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fe8b21c9f58 <col:83, col:109>
| | | `-ReturnStmt 0x7fe8b21c9f40 <col:84, col:107>
| | |   `-CallExpr 0x7fe8b21c9ef8 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fe8b21c9ee0 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21c9e80 <col:91, col:93> 'float (float)' lvalue Function 0x7fe8b20108a8 'ceilf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fe8b21c9f28 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21c9eb8 <col:99> 'float' lvalue ParmVar 0x7fe8b21c9cd0 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fe8b21c9e08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21c9e50 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21ca058 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:807:1, col:109> col:46 ceil 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21c9fc0 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fe8b21ca248 <col:83, col:109>
| | | `-ReturnStmt 0x7fe8b21ca230 <col:84, col:107>
| | |   `-CallExpr 0x7fe8b21ca1e8 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fe8b21ca1d0 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21ca170 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fe8b2010be8 'ceill' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fe8b21ca218 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21ca1a8 <col:99> 'long double' lvalue ParmVar 0x7fe8b21c9fc0 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fe8b21ca0f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21ca140 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fe8b21ca710 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:810:1, line:813:63> col:1 ceil
| | |-TemplateTypeParmDecl 0x7fe8b21ca268 <line:810:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fe8b21ca678 <line:811:1, line:813:63> col:1 ceil 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fe8b21ca5a0 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fe8b21cac30 <col:30, col:63>
| |   | `-ReturnStmt 0x7fe8b21cac18 <col:31, col:61>
| |   |   `-CallExpr 0x7fe8b21cabe8 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fe8b21cabd0 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fe8b21cab98 <col:38, col:40> 'double (double)' lvalue Function 0x7fe8b2010a48 'ceil' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fe8b21ca890 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fe8b21ca850 <col:53> '_A1' lvalue ParmVar 0x7fe8b21ca5a0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fe8b21ca768 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fe8b21ca7b0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21cad30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:818:1, col:107> col:46 cos 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21cac98 <col:50, col:56> col:56 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fe8b21caf20 <col:82, col:107>
| | | `-ReturnStmt 0x7fe8b21caf08 <col:83, col:105>
| | |   `-CallExpr 0x7fe8b21caec0 <col:90, col:105> 'float'
| | |     |-ImplicitCastExpr 0x7fe8b21caea8 <col:90, col:92> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21cae48 <col:90, col:92> 'float (float)' lvalue Function 0x7fe8b2001800 'cosf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fe8b21caef0 <col:97> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21cae80 <col:97> 'float' lvalue ParmVar 0x7fe8b21cac98 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fe8b21cadd0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21cae18 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21cb020 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:819:1, col:107> col:46 cos 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21caf88 <col:50, col:62> col:62 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fe8b21cb210 <col:82, col:107>
| | | `-ReturnStmt 0x7fe8b21cb1f8 <col:83, col:105>
| | |   `-CallExpr 0x7fe8b21cb1b0 <col:90, col:105> 'long double'
| | |     |-ImplicitCastExpr 0x7fe8b21cb198 <col:90, col:92> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21cb138 <col:90, col:92> 'long double (long double)' lvalue Function 0x7fe8b2001b40 'cosl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fe8b21cb1e0 <col:97> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21cb170 <col:97> 'long double' lvalue ParmVar 0x7fe8b21caf88 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fe8b21cb0c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21cb108 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fe8b21cb700 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:822:1, line:825:61> col:1 cos
| | |-TemplateTypeParmDecl 0x7fe8b21cb230 <line:822:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fe8b21cb668 <line:823:1, line:825:61> col:1 cos 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fe8b21cb590 <col:5, col:9> col:9 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fe8b21cbc20 <col:29, col:61>
| |   | `-ReturnStmt 0x7fe8b21cbc08 <col:30, col:59>
| |   |   `-CallExpr 0x7fe8b21cbbd8 <col:37, col:59> 'double'
| |   |     |-ImplicitCastExpr 0x7fe8b21cbbc0 <col:37, col:39> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fe8b21cbb88 <col:37, col:39> 'double (double)' lvalue Function 0x7fe8b20019a0 'cos' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fe8b21cb880 <col:43, col:51> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fe8b21cb840 <col:51> '_A1' lvalue ParmVar 0x7fe8b21cb590 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fe8b21cb758 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fe8b21cb7a0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21cbd20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:830:1, col:109> col:46 cosh 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21cbc88 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fe8b21cbf10 <col:83, col:109>
| | | `-ReturnStmt 0x7fe8b21cbef8 <col:84, col:107>
| | |   `-CallExpr 0x7fe8b21cbeb0 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fe8b21cbe98 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21cbe38 <col:91, col:93> 'float (float)' lvalue Function 0x7fe8b2003d90 'coshf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fe8b21cbee0 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21cbe70 <col:99> 'float' lvalue ParmVar 0x7fe8b21cbc88 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fe8b21cbdc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21cbe08 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21cc010 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:831:1, col:109> col:46 cosh 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21cbf78 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fe8b21cc200 <col:83, col:109>
| | | `-ReturnStmt 0x7fe8b21cc1e8 <col:84, col:107>
| | |   `-CallExpr 0x7fe8b21cc1a0 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fe8b21cc188 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21cc128 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fe8b20048f0 'coshl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fe8b21cc1d0 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21cc160 <col:99> 'long double' lvalue ParmVar 0x7fe8b21cbf78 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fe8b21cc0b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21cc0f8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fe8b21cc6c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:834:1, line:837:63> col:1 cosh
| | |-TemplateTypeParmDecl 0x7fe8b21cc220 <line:834:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fe8b21cc628 <line:835:1, line:837:63> col:1 cosh 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fe8b21cc550 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fe8b21ccbe0 <col:30, col:63>
| |   | `-ReturnStmt 0x7fe8b21ccbc8 <col:31, col:61>
| |   |   `-CallExpr 0x7fe8b21ccb98 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fe8b21ccb80 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fe8b21ccb48 <col:38, col:40> 'double (double)' lvalue Function 0x7fe8b2003f30 'cosh' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fe8b21cc840 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fe8b21cc800 <col:53> '_A1' lvalue ParmVar 0x7fe8b21cc550 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fe8b21cc718 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fe8b21cc760 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21ccce0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:842:1, col:107> col:46 exp 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21ccc48 <col:50, col:56> col:56 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fe8b21cced0 <col:82, col:107>
| | | `-ReturnStmt 0x7fe8b21cceb8 <col:83, col:105>
| | |   `-CallExpr 0x7fe8b21cce70 <col:90, col:105> 'float'
| | |     |-ImplicitCastExpr 0x7fe8b21cce58 <col:90, col:92> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21ccdf8 <col:90, col:92> 'float (float)' lvalue Function 0x7fe8b2005450 'expf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fe8b21ccea0 <col:97> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21cce30 <col:97> 'float' lvalue ParmVar 0x7fe8b21ccc48 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fe8b21ccd80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21ccdc8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21ccfd0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:843:1, col:107> col:46 exp 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21ccf38 <col:50, col:62> col:62 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fe8b21cd1c0 <col:82, col:107>
| | | `-ReturnStmt 0x7fe8b21cd1a8 <col:83, col:105>
| | |   `-CallExpr 0x7fe8b21cd160 <col:90, col:105> 'long double'
| | |     |-ImplicitCastExpr 0x7fe8b21cd148 <col:90, col:92> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21cd0e8 <col:90, col:92> 'long double (long double)' lvalue Function 0x7fe8b2005800 'expl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fe8b21cd190 <col:97> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21cd120 <col:97> 'long double' lvalue ParmVar 0x7fe8b21ccf38 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fe8b21cd070 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21cd0b8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fe8b21cd6a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:846:1, line:849:61> col:1 exp
| | |-TemplateTypeParmDecl 0x7fe8b21cd1e0 <line:846:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fe8b21cd608 <line:847:1, line:849:61> col:1 exp 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fe8b21cd530 <col:5, col:9> col:9 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fe8b21cdbc0 <col:29, col:61>
| |   | `-ReturnStmt 0x7fe8b21cdba8 <col:30, col:59>
| |   |   `-CallExpr 0x7fe8b21cdb78 <col:37, col:59> 'double'
| |   |     |-ImplicitCastExpr 0x7fe8b21cdb60 <col:37, col:39> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fe8b21cdb28 <col:37, col:39> 'double (double)' lvalue Function 0x7fe8b20055f0 'exp' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fe8b21cd820 <col:43, col:51> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fe8b21cd7e0 <col:51> '_A1' lvalue ParmVar 0x7fe8b21cd530 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fe8b21cd6f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fe8b21cd740 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21cdcc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:854:1, col:109> col:46 fabs 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21cdc28 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fe8b21cdeb0 <col:83, col:109>
| | | `-ReturnStmt 0x7fe8b21cde98 <col:84, col:107>
| | |   `-CallExpr 0x7fe8b21cde50 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fe8b21cde38 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21cddd8 <col:91, col:93> 'float (float)' lvalue Function 0x7fe8b200d8f0 'fabsf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fe8b21cde80 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21cde10 <col:99> 'float' lvalue ParmVar 0x7fe8b21cdc28 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fe8b21cdd60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21cdda8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21cdfb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:855:1, col:109> col:46 fabs 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21cdf18 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fe8b21ce1a0 <col:83, col:109>
| | | `-ReturnStmt 0x7fe8b21ce188 <col:84, col:107>
| | |   `-CallExpr 0x7fe8b21ce140 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fe8b21ce128 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21ce0c8 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fe8b200dc30 'fabsl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fe8b21ce170 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21ce100 <col:99> 'long double' lvalue ParmVar 0x7fe8b21cdf18 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fe8b21ce050 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21ce098 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fe8b21ce660 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:858:1, line:861:63> col:1 fabs
| | |-TemplateTypeParmDecl 0x7fe8b21ce1c0 <line:858:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fe8b21ce5c8 <line:859:1, line:861:63> col:1 fabs 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fe8b21ce4f0 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fe8b21ceb80 <col:30, col:63>
| |   | `-ReturnStmt 0x7fe8b21ceb68 <col:31, col:61>
| |   |   `-CallExpr 0x7fe8b21ceb38 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fe8b21ceb20 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fe8b21ceae8 <col:38, col:40> 'double (double)' lvalue Function 0x7fe8b200da90 'fabs' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fe8b21ce7e0 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fe8b21ce7a0 <col:53> '_A1' lvalue ParmVar 0x7fe8b21ce4f0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fe8b21ce6b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fe8b21ce700 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21cec80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:866:1, col:111> col:46 floor 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21cebe8 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fe8b21cee70 <col:84, col:111>
| | | `-ReturnStmt 0x7fe8b21cee58 <col:85, col:109>
| | |   `-CallExpr 0x7fe8b21cee10 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7fe8b21cedf8 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21ced98 <col:92, col:94> 'float (float)' lvalue Function 0x7fe8b2010d88 'floorf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fe8b21cee40 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21cedd0 <col:101> 'float' lvalue ParmVar 0x7fe8b21cebe8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fe8b21ced20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21ced68 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21cef70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:867:1, col:111> col:46 floor 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21ceed8 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fe8b21cf160 <col:84, col:111>
| | | `-ReturnStmt 0x7fe8b21cf148 <col:85, col:109>
| | |   `-CallExpr 0x7fe8b21cf100 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7fe8b21cf0e8 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21cf088 <col:92, col:94> 'long double (long double)' lvalue Function 0x7fe8b20110c8 'floorl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fe8b21cf130 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21cf0c0 <col:101> 'long double' lvalue ParmVar 0x7fe8b21ceed8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fe8b21cf010 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21cf058 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fe8b21cf640 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:870:1, line:873:65> col:1 floor
| | |-TemplateTypeParmDecl 0x7fe8b21cf180 <line:870:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fe8b21cf5a8 <line:871:1, line:873:65> col:1 floor 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fe8b21cf4d0 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fe8b21cfb60 <col:31, col:65>
| |   | `-ReturnStmt 0x7fe8b21cfb48 <col:32, col:63>
| |   |   `-CallExpr 0x7fe8b21cfb18 <col:39, col:63> 'double'
| |   |     |-ImplicitCastExpr 0x7fe8b21cfb00 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fe8b21cfac8 <col:39, col:41> 'double (double)' lvalue Function 0x7fe8b2010f28 'floor' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fe8b21cf7c0 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fe8b21cf780 <col:55> '_A1' lvalue ParmVar 0x7fe8b21cf4d0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fe8b21cf698 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fe8b21cf6e0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21cfce0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:878:1, col:141> col:46 fmod 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21cfbc8 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fe8b21cfc40 <col:67, col:73> col:73 used __lcpp_y 'float'
| | |-CompoundStmt 0x7fe8b21cff20 <col:105, col:141>
| | | `-ReturnStmt 0x7fe8b21cff08 <col:106, col:139>
| | |   `-CallExpr 0x7fe8b21cfea0 <col:113, col:139> 'float'
| | |     |-ImplicitCastExpr 0x7fe8b21cfe88 <col:113, col:115> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21cfe00 <col:113, col:115> 'float (float, float)' lvalue Function 0x7fe8b2013d60 'fmodf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7fe8b21cfed8 <col:121> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fe8b21cfe38 <col:121> 'float' lvalue ParmVar 0x7fe8b21cfbc8 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fe8b21cfef0 <col:131> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21cfe60 <col:131> 'float' lvalue ParmVar 0x7fe8b21cfc40 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7fe8b21cfd88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21cfdd0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21d00a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:879:1, col:141> col:46 fmod 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21cff88 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fe8b21d0000 <col:73, col:85> col:85 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fe8b21d02e0 <col:105, col:141>
| | | `-ReturnStmt 0x7fe8b21d02c8 <col:106, col:139>
| | |   `-CallExpr 0x7fe8b21d0260 <col:113, col:139> 'long double'
| | |     |-ImplicitCastExpr 0x7fe8b21d0248 <col:113, col:115> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21d01c0 <col:113, col:115> 'long double (long double, long double)' lvalue Function 0x7fe8b20141b0 'fmodl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fe8b21d0298 <col:121> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fe8b21d01f8 <col:121> 'long double' lvalue ParmVar 0x7fe8b21cff88 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fe8b21d02b0 <col:131> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21d0220 <col:131> 'long double' lvalue ParmVar 0x7fe8b21d0000 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fe8b21d0148 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21d0190 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fe8b21d0b40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:882:1, line:896:1> line:890:1 fmod
| | |-TemplateTypeParmDecl 0x7fe8b21d0300 <line:882:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fe8b21d0368 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fe8b21d0aa8 <line:883:1, line:896:1> line:890:1 fmod 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fe8b21d0950 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fe8b21d09c0 <col:20, col:24> col:24 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fe8b21d1368 <line:891:1, line:896:1>
| |   | |-DeclStmt 0x7fe8b21d0db8 <line:892:5, col:66>
| |   | | `-TypedefDecl 0x7fe8b21d0d60 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fe8b21d0cf0 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fe8b21d11b0 <line:893:5, line:894:68>
| |   | | `-StaticAssertDecl 0x7fe8b21d1178 <line:893:5, line:894:67> line:893:5
| |   | |   |-ParenExpr 0x7fe8b21d1130 <col:19, line:894:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fe8b21d1110 <line:893:20, line:894:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fe8b21d10f0 <line:893:21, line:894:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fe8b21d10c8 <line:893:22, line:894:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fe8b21d0f28 <line:893:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fe8b21d1088 <line:894:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fe8b21d1150 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fe8b21d1350 <line:895:5, col:67>
| |   |   `-CallExpr 0x7fe8b21d1318 <col:12, col:67> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fe8b21d11e8 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'fmod' 0x7fe8b2013f88 0x7fe8b21cfce0 0x7fe8b21d00a0 0x7fe8b21d0b40
| |   |     |-CStyleCastExpr 0x7fe8b21d1290 <col:19, col:34> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fe8b21d1258 <col:34> '_A1' lvalue ParmVar 0x7fe8b21d0950 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fe8b21d12f0 <col:44, col:59> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fe8b21d12b8 <col:59> '_A2' lvalue ParmVar 0x7fe8b21d09c0 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fe8b21d0ba0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fe8b21d0be8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21d1518 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:901:1, col:136> col:46 frexp 'float (float, int *) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21d1400 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fe8b21d1478 <col:68, col:73> col:73 used __lcpp_e 'int *'
| | |-CompoundStmt 0x7fe8b21d17b0 <col:99, col:136>
| | | `-ReturnStmt 0x7fe8b21d1798 <col:100, col:134>
| | |   `-CallExpr 0x7fe8b21d1730 <col:107, col:134> 'float'
| | |     |-ImplicitCastExpr 0x7fe8b21d1718 <col:107, col:109> 'float (*)(float, int *)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21d1638 <col:107, col:109> 'float (float, int *)' lvalue Function 0x7fe8b200ad88 'frexpf' 'float (float, int *)'
| | |     |-ImplicitCastExpr 0x7fe8b21d1768 <col:116> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fe8b21d1670 <col:116> 'float' lvalue ParmVar 0x7fe8b21d1400 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fe8b21d1780 <col:126> 'int *' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21d1698 <col:126> 'int *' lvalue ParmVar 0x7fe8b21d1478 '__lcpp_e' 'int *'
| | |-AlwaysInlineAttr 0x7fe8b21d15c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21d1608 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21d1930 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:902:1, col:136> col:46 frexp 'long double (long double, int *) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21d1818 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fe8b21d1890 <col:74, col:79> col:79 used __lcpp_e 'int *'
| | |-CompoundStmt 0x7fe8b21d1bd0 <col:99, col:136>
| | | `-ReturnStmt 0x7fe8b21d1bb8 <col:100, col:134>
| | |   `-CallExpr 0x7fe8b21d1b50 <col:107, col:134> 'long double'
| | |     |-ImplicitCastExpr 0x7fe8b21d1b38 <col:107, col:109> 'long double (*)(long double, int *)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21d1a50 <col:107, col:109> 'long double (long double, int *)' lvalue Function 0x7fe8b200b2c8 'frexpl' 'long double (long double, int *)'
| | |     |-ImplicitCastExpr 0x7fe8b21d1b88 <col:116> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fe8b21d1a88 <col:116> 'long double' lvalue ParmVar 0x7fe8b21d1818 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fe8b21d1ba0 <col:126> 'int *' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21d1ab0 <col:126> 'int *' lvalue ParmVar 0x7fe8b21d1890 '__lcpp_e' 'int *'
| | |-AlwaysInlineAttr 0x7fe8b21d19d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21d1a20 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fe8b21d2160 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:905:1, line:908:90> col:1 frexp
| | |-TemplateTypeParmDecl 0x7fe8b21d1bf0 <line:905:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fe8b21d20c8 <line:906:1, line:908:90> col:1 frexp 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1, int *) noexcept' inline
| |   |-ParmVarDecl 0x7fe8b21d1f20 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fe8b21d1f98 <col:21, col:26> col:26 referenced __lcpp_e 'int *'
| |   |-CompoundStmt 0x7fe8b21d26f8 <col:46, col:90>
| |   | `-ReturnStmt 0x7fe8b21d26e0 <col:47, col:88>
| |   |   `-CallExpr 0x7fe8b21d2690 <col:54, col:88> 'double'
| |   |     |-ImplicitCastExpr 0x7fe8b21d2678 <col:54, col:56> 'double (*)(double, int *)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fe8b21d2618 <col:54, col:56> 'double (double, int *)' lvalue Function 0x7fe8b200b028 'frexp' 'double (double, int *)'
| |   |     |-CStyleCastExpr 0x7fe8b21d22e8 <col:62, col:70> 'double' <Dependent>
| |   |     | `-DeclRefExpr 0x7fe8b21d22a8 <col:70> '_A1' lvalue ParmVar 0x7fe8b21d1f20 '__lcpp_x' '_A1'
| |   |     `-ImplicitCastExpr 0x7fe8b21d26c8 <col:80> 'int *' <LValueToRValue>
| |   |       `-DeclRefExpr 0x7fe8b21d2310 <col:80> 'int *' lvalue ParmVar 0x7fe8b21d1f98 '__lcpp_e' 'int *'
| |   |-AlwaysInlineAttr 0x7fe8b21d21c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fe8b21d2208 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21d2878 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:913:1, col:135> col:46 ldexp 'float (float, int) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21d2760 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fe8b21d27d8 <col:68, col:72> col:72 used __lcpp_e 'int'
| | |-CompoundStmt 0x7fe8b21d2ae0 <col:98, col:135>
| | | `-ReturnStmt 0x7fe8b21d2ac8 <col:99, col:133>
| | |   `-CallExpr 0x7fe8b21d2a60 <col:106, col:133> 'float'
| | |     |-ImplicitCastExpr 0x7fe8b21d2a48 <col:106, col:108> 'float (*)(float, int)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21d2998 <col:106, col:108> 'float (float, int)' lvalue Function 0x7fe8b2009538 'ldexpf' 'float (float, int)'
| | |     |-ImplicitCastExpr 0x7fe8b21d2a98 <col:115> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fe8b21d29d0 <col:115> 'float' lvalue ParmVar 0x7fe8b21d2760 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fe8b21d2ab0 <col:125> 'int' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21d29f8 <col:125> 'int' lvalue ParmVar 0x7fe8b21d27d8 '__lcpp_e' 'int'
| | |-AlwaysInlineAttr 0x7fe8b21d2920 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21d2968 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21d2c60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:914:1, col:135> col:46 ldexp 'long double (long double, int) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21d2b48 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fe8b21d2bc0 <col:74, col:78> col:78 used __lcpp_e 'int'
| | |-CompoundStmt 0x7fe8b21d2ed0 <col:98, col:135>
| | | `-ReturnStmt 0x7fe8b21d2eb8 <col:99, col:133>
| | |   `-CallExpr 0x7fe8b21d2e50 <col:106, col:133> 'long double'
| | |     |-ImplicitCastExpr 0x7fe8b21d2e38 <col:106, col:108> 'long double (*)(long double, int)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21d2d80 <col:106, col:108> 'long double (long double, int)' lvalue Function 0x7fe8b200aab8 'ldexpl' 'long double (long double, int)'
| | |     |-ImplicitCastExpr 0x7fe8b21d2e88 <col:115> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fe8b21d2db8 <col:115> 'long double' lvalue ParmVar 0x7fe8b21d2b48 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fe8b21d2ea0 <col:125> 'int' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21d2de0 <col:125> 'int' lvalue ParmVar 0x7fe8b21d2bc0 '__lcpp_e' 'int'
| | |-AlwaysInlineAttr 0x7fe8b21d2d08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21d2d50 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fe8b21d3498 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:917:1, line:920:89> col:1 ldexp
| | |-TemplateTypeParmDecl 0x7fe8b21d2ef0 <line:917:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fe8b21d3400 <line:918:1, line:920:89> col:1 ldexp 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1, int) noexcept' inline
| |   |-ParmVarDecl 0x7fe8b21d3220 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fe8b21d3298 <col:21, col:25> col:25 referenced __lcpp_e 'int'
| |   |-CompoundStmt 0x7fe8b21d3a38 <col:45, col:89>
| |   | `-ReturnStmt 0x7fe8b21d3a20 <col:46, col:87>
| |   |   `-CallExpr 0x7fe8b21d39d0 <col:53, col:87> 'double'
| |   |     |-ImplicitCastExpr 0x7fe8b21d39b8 <col:53, col:55> 'double (*)(double, int)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fe8b21d3958 <col:53, col:55> 'double (double, int)' lvalue Function 0x7fe8b200a800 'ldexp' 'double (double, int)'
| |   |     |-CStyleCastExpr 0x7fe8b21d3620 <col:61, col:69> 'double' <Dependent>
| |   |     | `-DeclRefExpr 0x7fe8b21d35e0 <col:69> '_A1' lvalue ParmVar 0x7fe8b21d3220 '__lcpp_x' '_A1'
| |   |     `-ImplicitCastExpr 0x7fe8b21d3a08 <col:79> 'int' <LValueToRValue>
| |   |       `-DeclRefExpr 0x7fe8b21d3648 <col:79> 'int' lvalue ParmVar 0x7fe8b21d3298 '__lcpp_e' 'int'
| |   |-AlwaysInlineAttr 0x7fe8b21d34f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fe8b21d3540 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21d3b38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:925:1, col:107> col:46 log 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21d3aa0 <col:50, col:56> col:56 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fe8b21d3d28 <col:82, col:107>
| | | `-ReturnStmt 0x7fe8b21d3d10 <col:83, col:105>
| | |   `-CallExpr 0x7fe8b21d3cc8 <col:90, col:105> 'float'
| | |     |-ImplicitCastExpr 0x7fe8b21d3cb0 <col:90, col:92> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21d3c50 <col:90, col:92> 'float (float)' lvalue Function 0x7fe8b2006360 'logf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fe8b21d3cf8 <col:97> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21d3c88 <col:97> 'float' lvalue ParmVar 0x7fe8b21d3aa0 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fe8b21d3bd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21d3c20 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21d3e28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:926:1, col:107> col:46 log 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21d3d90 <col:50, col:62> col:62 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fe8b21d4018 <col:82, col:107>
| | | `-ReturnStmt 0x7fe8b21d4000 <col:83, col:105>
| | |   `-CallExpr 0x7fe8b21d3fb8 <col:90, col:105> 'long double'
| | |     |-ImplicitCastExpr 0x7fe8b21d3fa0 <col:90, col:92> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21d3f40 <col:90, col:92> 'long double (long double)' lvalue Function 0x7fe8b20066a0 'logl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fe8b21d3fe8 <col:97> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21d3f78 <col:97> 'long double' lvalue ParmVar 0x7fe8b21d3d90 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fe8b21d3ec8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21d3f10 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fe8b21d44e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:929:1, line:932:61> col:1 log
| | |-TemplateTypeParmDecl 0x7fe8b21d4038 <line:929:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fe8b21d4448 <line:930:1, line:932:61> col:1 log 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fe8b21d4370 <col:5, col:9> col:9 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fe8b21d4a00 <col:29, col:61>
| |   | `-ReturnStmt 0x7fe8b21d49e8 <col:30, col:59>
| |   |   `-CallExpr 0x7fe8b21d49b8 <col:37, col:59> 'double'
| |   |     |-ImplicitCastExpr 0x7fe8b21d49a0 <col:37, col:39> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fe8b21d4968 <col:37, col:39> 'double (double)' lvalue Function 0x7fe8b2006500 'log' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fe8b21d4660 <col:43, col:51> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fe8b21d4620 <col:51> '_A1' lvalue ParmVar 0x7fe8b21d4370 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fe8b21d4538 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fe8b21d4580 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21d4b00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:937:1, col:111> col:46 log10 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21d4a68 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fe8b21d4cf0 <col:84, col:111>
| | | `-ReturnStmt 0x7fe8b21d4cd8 <col:85, col:109>
| | |   `-CallExpr 0x7fe8b21d4c90 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7fe8b21d4c78 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21d4c18 <col:92, col:94> 'float (float)' lvalue Function 0x7fe8b2006890 'log10f' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fe8b21d4cc0 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21d4c50 <col:101> 'float' lvalue ParmVar 0x7fe8b21d4a68 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fe8b21d4ba0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21d4be8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21d4df0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:938:1, col:111> col:46 log10 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21d4d58 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fe8b21d4fe0 <col:84, col:111>
| | | `-ReturnStmt 0x7fe8b21d4fc8 <col:85, col:109>
| | |   `-CallExpr 0x7fe8b21d4f80 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7fe8b21d4f68 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21d4f08 <col:92, col:94> 'long double (long double)' lvalue Function 0x7fe8b2006bd0 'log10l' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fe8b21d4fb0 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21d4f40 <col:101> 'long double' lvalue ParmVar 0x7fe8b21d4d58 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fe8b21d4e90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21d4ed8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fe8b21d54d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:941:1, line:944:65> col:1 log10
| | |-TemplateTypeParmDecl 0x7fe8b21d5000 <line:941:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fe8b21d5440 <line:942:1, line:944:65> col:1 log10 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fe8b21d5330 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fe8b21d5a00 <col:31, col:65>
| |   | `-ReturnStmt 0x7fe8b21d59e8 <col:32, col:63>
| |   |   `-CallExpr 0x7fe8b21d59b8 <col:39, col:63> 'double'
| |   |     |-ImplicitCastExpr 0x7fe8b21d59a0 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fe8b21d5968 <col:39, col:41> 'double (double)' lvalue Function 0x7fe8b2006a30 'log10' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fe8b21d5658 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fe8b21d5618 <col:55> '_A1' lvalue ParmVar 0x7fe8b21d5330 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fe8b21d5530 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fe8b21d5578 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21d5b80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:949:1, col:142> col:46 modf 'float (float, float *) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21d5a68 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fe8b21d5ae0 <col:67, col:74> col:74 used __lcpp_y 'float *'
| | |-CompoundStmt 0x7fe8b21d5e20 <col:106, col:142>
| | | `-ReturnStmt 0x7fe8b21d5e08 <col:107, col:140>
| | |   `-CallExpr 0x7fe8b21d5da0 <col:114, col:140> 'float'
| | |     |-ImplicitCastExpr 0x7fe8b21d5d88 <col:114, col:116> 'float (*)(float, float *)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21d5ca0 <col:114, col:116> 'float (float, float *)' lvalue Function 0x7fe8b2008d18 'modff' 'float (float, float *)'
| | |     |-ImplicitCastExpr 0x7fe8b21d5dd8 <col:122> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fe8b21d5cd8 <col:122> 'float' lvalue ParmVar 0x7fe8b21d5a68 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fe8b21d5df0 <col:132> 'float *' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21d5d00 <col:132> 'float *' lvalue ParmVar 0x7fe8b21d5ae0 '__lcpp_y' 'float *'
| | |-AlwaysInlineAttr 0x7fe8b21d5c28 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21d5c70 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21d5fa0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:950:1, col:142> col:46 modf 'long double (long double, long double *) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21d5e88 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fe8b21d5f00 <col:73, col:86> col:86 used __lcpp_y 'long double *'
| | |-CompoundStmt 0x7fe8b21d6240 <col:106, col:142>
| | | `-ReturnStmt 0x7fe8b21d6228 <col:107, col:140>
| | |   `-CallExpr 0x7fe8b21d61c0 <col:114, col:140> 'long double'
| | |     |-ImplicitCastExpr 0x7fe8b21d61a8 <col:114, col:116> 'long double (*)(long double, long double *)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21d60c0 <col:114, col:116> 'long double (long double, long double *)' lvalue Function 0x7fe8b2009298 'modfl' 'long double (long double, long double *)'
| | |     |-ImplicitCastExpr 0x7fe8b21d61f8 <col:122> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fe8b21d60f8 <col:122> 'long double' lvalue ParmVar 0x7fe8b21d5e88 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fe8b21d6210 <col:132> 'long double *' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21d6120 <col:132> 'long double *' lvalue ParmVar 0x7fe8b21d5f00 '__lcpp_y' 'long double *'
| | |-AlwaysInlineAttr 0x7fe8b21d6048 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21d6090 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21d63c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:956:1, col:139> col:46 pow 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21d62a8 <col:50, col:56> col:56 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fe8b21d6320 <col:66, col:72> col:72 used __lcpp_y 'float'
| | |-CompoundStmt 0x7fe8b21d6600 <col:104, col:139>
| | | `-ReturnStmt 0x7fe8b21d65e8 <col:105, col:137>
| | |   `-CallExpr 0x7fe8b21d6580 <col:112, col:137> 'float'
| | |     |-ImplicitCastExpr 0x7fe8b21d6568 <col:112, col:114> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21d64e0 <col:112, col:114> 'float (float, float)' lvalue Function 0x7fe8b200ea28 'powf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7fe8b21d65b8 <col:119> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fe8b21d6518 <col:119> 'float' lvalue ParmVar 0x7fe8b21d62a8 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fe8b21d65d0 <col:129> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21d6540 <col:129> 'float' lvalue ParmVar 0x7fe8b21d6320 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7fe8b21d6468 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21d64b0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21d6780 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:957:1, col:139> col:46 pow 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21d6668 <col:50, col:62> col:62 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fe8b21d66e0 <col:72, col:84> col:84 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fe8b21d69c0 <col:104, col:139>
| | | `-ReturnStmt 0x7fe8b21d69a8 <col:105, col:137>
| | |   `-CallExpr 0x7fe8b21d6940 <col:112, col:137> 'long double'
| | |     |-ImplicitCastExpr 0x7fe8b21d6928 <col:112, col:114> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21d68a0 <col:112, col:114> 'long double (long double, long double)' lvalue Function 0x7fe8b200ee78 'powl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fe8b21d6978 <col:119> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fe8b21d68d8 <col:119> 'long double' lvalue ParmVar 0x7fe8b21d6668 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fe8b21d6990 <col:129> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21d6900 <col:129> 'long double' lvalue ParmVar 0x7fe8b21d66e0 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fe8b21d6828 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21d6870 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fe8b21d7220 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:960:1, line:974:1> line:968:1 pow
| | |-TemplateTypeParmDecl 0x7fe8b21d69e0 <line:960:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fe8b21d6a48 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fe8b21d7188 <line:961:1, line:974:1> line:968:1 pow 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fe8b21d7030 <col:5, col:9> col:9 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fe8b21d70a0 <col:19, col:23> col:23 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fe8b21d7a48 <line:969:1, line:974:1>
| |   | |-DeclStmt 0x7fe8b21d7498 <line:970:5, col:66>
| |   | | `-TypedefDecl 0x7fe8b21d7440 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fe8b21d73d0 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fe8b21d7890 <line:971:5, line:972:68>
| |   | | `-StaticAssertDecl 0x7fe8b21d7858 <line:971:5, line:972:67> line:971:5
| |   | |   |-ParenExpr 0x7fe8b21d7810 <col:19, line:972:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fe8b21d77f0 <line:971:20, line:972:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fe8b21d77d0 <line:971:21, line:972:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fe8b21d77a8 <line:971:22, line:972:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fe8b21d7608 <line:971:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fe8b21d7768 <line:972:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fe8b21d7830 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fe8b21d7a30 <line:973:5, col:66>
| |   |   `-CallExpr 0x7fe8b21d79f8 <col:12, col:66> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fe8b21d78c8 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'pow' 0x7fe8b200ec50 0x7fe8b21d63c0 0x7fe8b21d6780 0x7fe8b21d7220
| |   |     |-CStyleCastExpr 0x7fe8b21d7970 <col:18, col:33> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fe8b21d7938 <col:33> '_A1' lvalue ParmVar 0x7fe8b21d7030 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fe8b21d79d0 <col:43, col:58> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fe8b21d7998 <col:58> '_A2' lvalue ParmVar 0x7fe8b21d70a0 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fe8b21d7280 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fe8b21d72c8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21d7b58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:979:1, col:107> col:46 sin 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21d7ac0 <col:50, col:56> col:56 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fe8b21d7d48 <col:82, col:107>
| | | `-ReturnStmt 0x7fe8b21d7d30 <col:83, col:105>
| | |   `-CallExpr 0x7fe8b21d7ce8 <col:90, col:105> 'float'
| | |     |-ImplicitCastExpr 0x7fe8b21d7cd0 <col:90, col:92> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21d7c70 <col:90, col:92> 'float (float)' lvalue Function 0x7fe8b2001ce0 'sinf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fe8b21d7d18 <col:97> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21d7ca8 <col:97> 'float' lvalue ParmVar 0x7fe8b21d7ac0 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fe8b21d7bf8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21d7c40 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21d7e48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:980:1, col:107> col:46 sin 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21d7db0 <col:50, col:62> col:62 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fe8b21d8038 <col:82, col:107>
| | | `-ReturnStmt 0x7fe8b21d8020 <col:83, col:105>
| | |   `-CallExpr 0x7fe8b21d7fd8 <col:90, col:105> 'long double'
| | |     |-ImplicitCastExpr 0x7fe8b21d7fc0 <col:90, col:92> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21d7f60 <col:90, col:92> 'long double (long double)' lvalue Function 0x7fe8b2002020 'sinl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fe8b21d8008 <col:97> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21d7f98 <col:97> 'long double' lvalue ParmVar 0x7fe8b21d7db0 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fe8b21d7ee8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21d7f30 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fe8b21d8500 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:983:1, line:986:61> col:1 sin
| | |-TemplateTypeParmDecl 0x7fe8b21d8058 <line:983:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fe8b21d8468 <line:984:1, line:986:61> col:1 sin 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fe8b21d8390 <col:5, col:9> col:9 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fe8b21d8a20 <col:29, col:61>
| |   | `-ReturnStmt 0x7fe8b21d8a08 <col:30, col:59>
| |   |   `-CallExpr 0x7fe8b21d89d8 <col:37, col:59> 'double'
| |   |     |-ImplicitCastExpr 0x7fe8b21d89c0 <col:37, col:39> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fe8b21d8988 <col:37, col:39> 'double (double)' lvalue Function 0x7fe8b2001e80 'sin' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fe8b21d8680 <col:43, col:51> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fe8b21d8640 <col:51> '_A1' lvalue ParmVar 0x7fe8b21d8390 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fe8b21d8558 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fe8b21d85a0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21d8b20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:991:1, col:109> col:46 sinh 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21d8a88 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fe8b21d8d10 <col:83, col:109>
| | | `-ReturnStmt 0x7fe8b21d8cf8 <col:84, col:107>
| | |   `-CallExpr 0x7fe8b21d8cb0 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fe8b21d8c98 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21d8c38 <col:91, col:93> 'float (float)' lvalue Function 0x7fe8b2004a90 'sinhf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fe8b21d8ce0 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21d8c70 <col:99> 'float' lvalue ParmVar 0x7fe8b21d8a88 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fe8b21d8bc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21d8c08 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21d8e10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:992:1, col:109> col:46 sinh 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21d8d78 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fe8b21d9000 <col:83, col:109>
| | | `-ReturnStmt 0x7fe8b21d8fe8 <col:84, col:107>
| | |   `-CallExpr 0x7fe8b21d8fa0 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fe8b21d8f88 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21d8f28 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fe8b2004dd0 'sinhl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fe8b21d8fd0 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21d8f60 <col:99> 'long double' lvalue ParmVar 0x7fe8b21d8d78 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fe8b21d8eb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21d8ef8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fe8b21db6d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:995:1, line:998:63> col:1 sinh
| | |-TemplateTypeParmDecl 0x7fe8b21d9020 <line:995:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fe8b21db640 <line:996:1, line:998:63> col:1 sinh 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fe8b21d9350 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fe8b21dbc00 <col:30, col:63>
| |   | `-ReturnStmt 0x7fe8b21dbbe8 <col:31, col:61>
| |   |   `-CallExpr 0x7fe8b21dbbb8 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fe8b21dbba0 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fe8b21dbb68 <col:38, col:40> 'double (double)' lvalue Function 0x7fe8b2004c30 'sinh' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fe8b21db858 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fe8b21db818 <col:53> '_A1' lvalue ParmVar 0x7fe8b21d9350 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fe8b21db730 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fe8b21db778 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21dbd00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1003:1, col:109> col:46 sqrt 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21dbc68 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fe8b21dbef0 <col:83, col:109>
| | | `-ReturnStmt 0x7fe8b21dbed8 <col:84, col:107>
| | |   `-CallExpr 0x7fe8b21dbe90 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fe8b21dbe78 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21dbe18 <col:91, col:93> 'float (float)' lvalue Function 0x7fe8b200f020 'sqrtf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fe8b21dbec0 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21dbe50 <col:99> 'float' lvalue ParmVar 0x7fe8b21dbc68 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fe8b21dbda0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21dbde8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21dbff0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1004:1, col:109> col:46 sqrt 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21dbf58 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fe8b21dc1e0 <col:83, col:109>
| | | `-ReturnStmt 0x7fe8b21dc1c8 <col:84, col:107>
| | |   `-CallExpr 0x7fe8b21dc180 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fe8b21dc168 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21dc108 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fe8b200f360 'sqrtl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fe8b21dc1b0 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21dc140 <col:99> 'long double' lvalue ParmVar 0x7fe8b21dbf58 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fe8b21dc090 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21dc0d8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fe8b21dc6a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1007:1, line:1010:63> col:1 sqrt
| | |-TemplateTypeParmDecl 0x7fe8b21dc200 <line:1007:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fe8b21dc608 <line:1008:1, line:1010:63> col:1 sqrt 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fe8b21dc530 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fe8b21dcbc0 <col:30, col:63>
| |   | `-ReturnStmt 0x7fe8b21dcba8 <col:31, col:61>
| |   |   `-CallExpr 0x7fe8b21dcb78 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fe8b21dcb60 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fe8b21dcb28 <col:38, col:40> 'double (double)' lvalue Function 0x7fe8b200f1c0 'sqrt' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fe8b21dc820 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fe8b21dc7e0 <col:53> '_A1' lvalue ParmVar 0x7fe8b21dc530 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fe8b21dc6f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fe8b21dc740 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21dccc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1015:1, col:107> col:46 tan 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21dcc28 <col:50, col:56> col:56 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fe8b21dceb0 <col:82, col:107>
| | | `-ReturnStmt 0x7fe8b21dce98 <col:83, col:105>
| | |   `-CallExpr 0x7fe8b21dce50 <col:90, col:105> 'float'
| | |     |-ImplicitCastExpr 0x7fe8b21dce38 <col:90, col:92> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21dcdd8 <col:90, col:92> 'float (float)' lvalue Function 0x7fe8b20021c0 'tanf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fe8b21dce80 <col:97> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21dce10 <col:97> 'float' lvalue ParmVar 0x7fe8b21dcc28 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fe8b21dcd60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21dcda8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21dcfb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1016:1, col:107> col:46 tan 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21dcf18 <col:50, col:62> col:62 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fe8b21dd1a0 <col:82, col:107>
| | | `-ReturnStmt 0x7fe8b21dd188 <col:83, col:105>
| | |   `-CallExpr 0x7fe8b21dd140 <col:90, col:105> 'long double'
| | |     |-ImplicitCastExpr 0x7fe8b21dd128 <col:90, col:92> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21dd0c8 <col:90, col:92> 'long double (long double)' lvalue Function 0x7fe8b2002500 'tanl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fe8b21dd170 <col:97> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21dd100 <col:97> 'long double' lvalue ParmVar 0x7fe8b21dcf18 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fe8b21dd050 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21dd098 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fe8b21dd698 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1019:1, line:1022:61> col:1 tan
| | |-TemplateTypeParmDecl 0x7fe8b21dd1c0 <line:1019:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fe8b21dd600 <line:1020:1, line:1022:61> col:1 tan 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fe8b21dd4f0 <col:5, col:9> col:9 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fe8b21ddbc0 <col:29, col:61>
| |   | `-ReturnStmt 0x7fe8b21ddba8 <col:30, col:59>
| |   |   `-CallExpr 0x7fe8b21ddb78 <col:37, col:59> 'double'
| |   |     |-ImplicitCastExpr 0x7fe8b21ddb60 <col:37, col:39> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fe8b21ddb28 <col:37, col:39> 'double (double)' lvalue Function 0x7fe8b2002360 'tan' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fe8b21dd818 <col:43, col:51> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fe8b21dd7d8 <col:51> '_A1' lvalue ParmVar 0x7fe8b21dd4f0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fe8b21dd6f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fe8b21dd738 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21ddcc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1027:1, col:109> col:46 tanh 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21ddc28 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fe8b21ddeb0 <col:83, col:109>
| | | `-ReturnStmt 0x7fe8b21dde98 <col:84, col:107>
| | |   `-CallExpr 0x7fe8b21dde50 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fe8b21dde38 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21dddd8 <col:91, col:93> 'float (float)' lvalue Function 0x7fe8b2004f70 'tanhf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fe8b21dde80 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21dde10 <col:99> 'float' lvalue ParmVar 0x7fe8b21ddc28 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fe8b21ddd60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21ddda8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21ddfb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1028:1, col:109> col:46 tanh 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21ddf18 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fe8b21de1a0 <col:83, col:109>
| | | `-ReturnStmt 0x7fe8b21de188 <col:84, col:107>
| | |   `-CallExpr 0x7fe8b21de140 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fe8b21de128 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21de0c8 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fe8b20052b0 'tanhl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fe8b21de170 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21de100 <col:99> 'long double' lvalue ParmVar 0x7fe8b21ddf18 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fe8b21de050 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21de098 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fe8b21de660 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1031:1, line:1034:63> col:1 tanh
| | |-TemplateTypeParmDecl 0x7fe8b21de1c0 <line:1031:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fe8b21de5c8 <line:1032:1, line:1034:63> col:1 tanh 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fe8b21de4f0 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fe8b21deb80 <col:30, col:63>
| |   | `-ReturnStmt 0x7fe8b21deb68 <col:31, col:61>
| |   |   `-CallExpr 0x7fe8b21deb38 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fe8b21deb20 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fe8b21deae8 <col:38, col:40> 'double (double)' lvalue Function 0x7fe8b2005110 'tanh' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fe8b21de7e0 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fe8b21de7a0 <col:53> '_A1' lvalue ParmVar 0x7fe8b21de4f0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fe8b21de6b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fe8b21de700 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21dec80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1038:1, col:111> col:46 acosh 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21debe8 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fe8b21dee70 <col:84, col:111>
| | | `-ReturnStmt 0x7fe8b21dee58 <col:85, col:109>
| | |   `-CallExpr 0x7fe8b21dee10 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7fe8b21dedf8 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21ded98 <col:92, col:94> 'float (float)' lvalue Function 0x7fe8b20026a0 'acoshf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fe8b21dee40 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21dedd0 <col:101> 'float' lvalue ParmVar 0x7fe8b21debe8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fe8b21ded20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21ded68 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21def70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1039:1, col:111> col:46 acosh 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21deed8 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fe8b21df160 <col:84, col:111>
| | | `-ReturnStmt 0x7fe8b21df148 <col:85, col:109>
| | |   `-CallExpr 0x7fe8b21df100 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7fe8b21df0e8 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21df088 <col:92, col:94> 'long double (long double)' lvalue Function 0x7fe8b2003230 'acoshl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fe8b21df130 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21df0c0 <col:101> 'long double' lvalue ParmVar 0x7fe8b21deed8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fe8b21df010 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21df058 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fe8b21df698 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1041:1, line:1044:65> col:1 acosh
| | |-TemplateTypeParmDecl 0x7fe8b21df180 <line:1041:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fe8b21df600 <line:1042:1, line:1044:65> col:1 acosh 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fe8b21df4b0 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fe8b21dfbc0 <col:31, col:65>
| |   | `-ReturnStmt 0x7fe8b21dfba8 <col:32, col:63>
| |   |   `-CallExpr 0x7fe8b21dfb78 <col:39, col:63> 'double'
| |   |     |-ImplicitCastExpr 0x7fe8b21dfb60 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fe8b21dfb28 <col:39, col:41> 'double (double)' lvalue Function 0x7fe8b2003090 'acosh' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fe8b21df818 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fe8b21df7d8 <col:55> '_A1' lvalue ParmVar 0x7fe8b21df4b0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fe8b21df6f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fe8b21df738 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21dfcc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1048:1, col:111> col:46 asinh 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21dfc28 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fe8b21dfeb0 <col:84, col:111>
| | | `-ReturnStmt 0x7fe8b21dfe98 <col:85, col:109>
| | |   `-CallExpr 0x7fe8b21dfe50 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7fe8b21dfe38 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21dfdd8 <col:92, col:94> 'float (float)' lvalue Function 0x7fe8b20033d0 'asinhf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fe8b21dfe80 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21dfe10 <col:101> 'float' lvalue ParmVar 0x7fe8b21dfc28 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fe8b21dfd60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21dfda8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21dffb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1049:1, col:111> col:46 asinh 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21dff18 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fe8b21e01a0 <col:84, col:111>
| | | `-ReturnStmt 0x7fe8b21e0188 <col:85, col:109>
| | |   `-CallExpr 0x7fe8b21e0140 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7fe8b21e0128 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21e00c8 <col:92, col:94> 'long double (long double)' lvalue Function 0x7fe8b2003710 'asinhl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fe8b21e0170 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21e0100 <col:101> 'long double' lvalue ParmVar 0x7fe8b21dff18 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fe8b21e0050 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21e0098 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fe8b21e0660 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1051:1, line:1054:65> col:1 asinh
| | |-TemplateTypeParmDecl 0x7fe8b21e01c0 <line:1051:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fe8b21e05c8 <line:1052:1, line:1054:65> col:1 asinh 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fe8b21e04f0 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fe8b21e0b80 <col:31, col:65>
| |   | `-ReturnStmt 0x7fe8b21e0b68 <col:32, col:63>
| |   |   `-CallExpr 0x7fe8b21e0b38 <col:39, col:63> 'double'
| |   |     |-ImplicitCastExpr 0x7fe8b21e0b20 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fe8b21e0ae8 <col:39, col:41> 'double (double)' lvalue Function 0x7fe8b2003570 'asinh' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fe8b21e07e0 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fe8b21e07a0 <col:55> '_A1' lvalue ParmVar 0x7fe8b21e04f0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fe8b21e06b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fe8b21e0700 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21e0c80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1058:1, col:111> col:46 atanh 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21e0be8 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fe8b21e0e70 <col:84, col:111>
| | | `-ReturnStmt 0x7fe8b21e0e58 <col:85, col:109>
| | |   `-CallExpr 0x7fe8b21e0e10 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7fe8b21e0df8 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21e0d98 <col:92, col:94> 'float (float)' lvalue Function 0x7fe8b20038b0 'atanhf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fe8b21e0e40 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21e0dd0 <col:101> 'float' lvalue ParmVar 0x7fe8b21e0be8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fe8b21e0d20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21e0d68 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21e0f70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1059:1, col:111> col:46 atanh 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21e0ed8 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fe8b21e1160 <col:84, col:111>
| | | `-ReturnStmt 0x7fe8b21e1148 <col:85, col:109>
| | |   `-CallExpr 0x7fe8b21e1100 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7fe8b21e10e8 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21e1088 <col:92, col:94> 'long double (long double)' lvalue Function 0x7fe8b2003bf0 'atanhl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fe8b21e1130 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21e10c0 <col:101> 'long double' lvalue ParmVar 0x7fe8b21e0ed8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fe8b21e1010 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21e1058 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fe8b21e1698 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1061:1, line:1064:65> col:1 atanh
| | |-TemplateTypeParmDecl 0x7fe8b21e1180 <line:1061:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fe8b21e1600 <line:1062:1, line:1064:65> col:1 atanh 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fe8b21e14b0 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fe8b21e1bc0 <col:31, col:65>
| |   | `-ReturnStmt 0x7fe8b21e1ba8 <col:32, col:63>
| |   |   `-CallExpr 0x7fe8b21e1b78 <col:39, col:63> 'double'
| |   |     |-ImplicitCastExpr 0x7fe8b21e1b60 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fe8b21e1b28 <col:39, col:41> 'double (double)' lvalue Function 0x7fe8b2003a50 'atanh' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fe8b21e1818 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fe8b21e17d8 <col:55> '_A1' lvalue ParmVar 0x7fe8b21e14b0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fe8b21e16f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fe8b21e1738 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21e1cc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1068:1, col:109> col:46 cbrt 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21e1c28 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fe8b21e1eb0 <col:83, col:109>
| | | `-ReturnStmt 0x7fe8b21e1e98 <col:84, col:107>
| | |   `-CallExpr 0x7fe8b21e1e50 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fe8b21e1e38 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21e1dd8 <col:91, col:93> 'float (float)' lvalue Function 0x7fe8b200ddd0 'cbrtf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fe8b21e1e80 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21e1e10 <col:99> 'float' lvalue ParmVar 0x7fe8b21e1c28 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fe8b21e1d60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21e1da8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21e1fb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1069:1, col:109> col:46 cbrt 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21e1f18 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fe8b21e21a0 <col:83, col:109>
| | | `-ReturnStmt 0x7fe8b21e2188 <col:84, col:107>
| | |   `-CallExpr 0x7fe8b21e2140 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fe8b21e2128 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21e20c8 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fe8b200e110 'cbrtl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fe8b21e2170 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21e2100 <col:99> 'long double' lvalue ParmVar 0x7fe8b21e1f18 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fe8b21e2050 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21e2098 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fe8b21e2660 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1071:1, line:1074:63> col:1 cbrt
| | |-TemplateTypeParmDecl 0x7fe8b21e21c0 <line:1071:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fe8b21e25c8 <line:1072:1, line:1074:63> col:1 cbrt 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fe8b21e24f0 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fe8b21e2b80 <col:30, col:63>
| |   | `-ReturnStmt 0x7fe8b21e2b68 <col:31, col:61>
| |   |   `-CallExpr 0x7fe8b21e2b38 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fe8b21e2b20 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fe8b21e2ae8 <col:38, col:40> 'double (double)' lvalue Function 0x7fe8b200df70 'cbrt' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fe8b21e27e0 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fe8b21e27a0 <col:53> '_A1' lvalue ParmVar 0x7fe8b21e24f0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fe8b21e26b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fe8b21e2700 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21e2d00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1078:1, line:1081:1> line:1078:40 copysign 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21e2be8 <col:49, col:55> col:55 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fe8b21e2c60 <line:1079:49, col:55> col:55 used __lcpp_y 'float'
| | |-CompoundStmt 0x7fe8b21e2f40 <col:75, line:1081:1>
| | | `-ReturnStmt 0x7fe8b21e2f28 <line:1080:3, col:40>
| | |   `-CallExpr 0x7fe8b21e2ec0 <col:10, col:40> 'float'
| | |     |-ImplicitCastExpr 0x7fe8b21e2ea8 <col:10, col:12> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21e2e20 <col:10, col:12> 'float (float, float)' lvalue Function 0x7fe8b2015240 'copysignf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7fe8b21e2ef8 <col:22> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fe8b21e2e58 <col:22> 'float' lvalue ParmVar 0x7fe8b21e2be8 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fe8b21e2f10 <col:32> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21e2e80 <col:32> 'float' lvalue ParmVar 0x7fe8b21e2c60 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7fe8b21e2da8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21e2df0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21e30c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1082:1, line:1085:1> line:1083:1 copysign 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21e2fa8 <col:10, col:22> col:22 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fe8b21e3020 <col:32, col:44> col:44 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fe8b21e3300 <col:64, line:1085:1>
| | | `-ReturnStmt 0x7fe8b21e32e8 <line:1084:3, col:40>
| | |   `-CallExpr 0x7fe8b21e3280 <col:10, col:40> 'long double'
| | |     |-ImplicitCastExpr 0x7fe8b21e3268 <col:10, col:12> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21e31e0 <col:10, col:12> 'long double (long double, long double)' lvalue Function 0x7fe8b2015690 'copysignl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fe8b21e32b8 <col:22> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fe8b21e3218 <col:22> 'long double' lvalue ParmVar 0x7fe8b21e2fa8 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fe8b21e32d0 <col:32> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21e3240 <col:32> 'long double' lvalue ParmVar 0x7fe8b21e3020 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fe8b21e3168 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21e31b0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fe8b21e3b80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1087:1, line:1101:1> line:1095:1 copysign
| | |-TemplateTypeParmDecl 0x7fe8b21e3320 <line:1087:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fe8b21e3388 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fe8b21e3ae8 <line:1088:1, line:1101:1> line:1095:1 copysign 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fe8b21e3990 <col:10, col:14> col:14 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fe8b21e3a00 <col:24, col:28> col:28 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fe8b21e43a8 <line:1096:1, line:1101:1>
| |   | |-DeclStmt 0x7fe8b21e3df8 <line:1097:5, col:66>
| |   | | `-TypedefDecl 0x7fe8b21e3da0 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fe8b21e3d30 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fe8b21e41f0 <line:1098:5, line:1099:68>
| |   | | `-StaticAssertDecl 0x7fe8b21e41b8 <line:1098:5, line:1099:67> line:1098:5
| |   | |   |-ParenExpr 0x7fe8b21e4170 <col:19, line:1099:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fe8b21e4150 <line:1098:20, line:1099:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fe8b21e4130 <line:1098:21, line:1099:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fe8b21e4108 <line:1098:22, line:1099:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fe8b21e3f68 <line:1098:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fe8b21e40c8 <line:1099:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fe8b21e4190 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fe8b21e4390 <line:1100:5, col:71>
| |   |   `-CallExpr 0x7fe8b21e4358 <col:12, col:71> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fe8b21e4228 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'copysign' 0x7fe8b2015468 0x7fe8b21e2d00 0x7fe8b21e30c0 0x7fe8b21e3b80
| |   |     |-CStyleCastExpr 0x7fe8b21e42d0 <col:23, col:38> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fe8b21e4298 <col:38> '_A1' lvalue ParmVar 0x7fe8b21e3990 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fe8b21e4330 <col:48, col:63> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fe8b21e42f8 <col:63> '_A2' lvalue ParmVar 0x7fe8b21e3a00 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fe8b21e3be0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fe8b21e3c28 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21e44b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1105:1, col:107> col:46 erf 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21e4420 <col:50, col:56> col:56 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fe8b21e46a8 <col:82, col:107>
| | | `-ReturnStmt 0x7fe8b21e4690 <col:83, col:105>
| | |   `-CallExpr 0x7fe8b21e4648 <col:90, col:105> 'float'
| | |     |-ImplicitCastExpr 0x7fe8b21e4630 <col:90, col:92> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21e45d0 <col:90, col:92> 'float (float)' lvalue Function 0x7fe8b200f500 'erff' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fe8b21e4678 <col:97> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21e4608 <col:97> 'float' lvalue ParmVar 0x7fe8b21e4420 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fe8b21e4558 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21e45a0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21e47a8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1106:1, col:107> col:46 erf 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21e4710 <col:50, col:62> col:62 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fe8b21e4998 <col:82, col:107>
| | | `-ReturnStmt 0x7fe8b21e4980 <col:83, col:105>
| | |   `-CallExpr 0x7fe8b21e4938 <col:90, col:105> 'long double'
| | |     |-ImplicitCastExpr 0x7fe8b21e4920 <col:90, col:92> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21e48c0 <col:90, col:92> 'long double (long double)' lvalue Function 0x7fe8b200f890 'erfl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fe8b21e4968 <col:97> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21e48f8 <col:97> 'long double' lvalue ParmVar 0x7fe8b21e4710 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fe8b21e4848 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21e4890 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fe8b21e4e60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1108:1, line:1111:61> col:1 erf
| | |-TemplateTypeParmDecl 0x7fe8b21e49b8 <line:1108:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fe8b21e4dc8 <line:1109:1, line:1111:61> col:1 erf 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fe8b21e4cf0 <col:5, col:9> col:9 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fe8b21e5380 <col:29, col:61>
| |   | `-ReturnStmt 0x7fe8b21e5368 <col:30, col:59>
| |   |   `-CallExpr 0x7fe8b21e5338 <col:37, col:59> 'double'
| |   |     |-ImplicitCastExpr 0x7fe8b21e5320 <col:37, col:39> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fe8b21e52e8 <col:37, col:39> 'double (double)' lvalue Function 0x7fe8b200f6a0 'erf' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fe8b21e4fe0 <col:43, col:51> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fe8b21e4fa0 <col:51> '_A1' lvalue ParmVar 0x7fe8b21e4cf0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fe8b21e4eb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fe8b21e4f00 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21e5480 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1115:1, col:109> col:46 erfc 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21e53e8 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fe8b21e6678 <col:83, col:109>
| | | `-ReturnStmt 0x7fe8b21e6660 <col:84, col:107>
| | |   `-CallExpr 0x7fe8b21e6618 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fe8b21e6600 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21e5598 <col:91, col:93> 'float (float)' lvalue Function 0x7fe8b200fa30 'erfcf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fe8b21e6648 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21e55d0 <col:99> 'float' lvalue ParmVar 0x7fe8b21e53e8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fe8b21e5520 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21e5568 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21e6778 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1116:1, col:109> col:46 erfc 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21e66e0 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fe8b21e6968 <col:83, col:109>
| | | `-ReturnStmt 0x7fe8b21e6950 <col:84, col:107>
| | |   `-CallExpr 0x7fe8b21e6908 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fe8b21e68f0 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21e6890 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fe8b200fd70 'erfcl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fe8b21e6938 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21e68c8 <col:99> 'long double' lvalue ParmVar 0x7fe8b21e66e0 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fe8b21e6818 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21e6860 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fe8b21e6e30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1118:1, line:1121:63> col:1 erfc
| | |-TemplateTypeParmDecl 0x7fe8b21e6988 <line:1118:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fe8b21e6d98 <line:1119:1, line:1121:63> col:1 erfc 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fe8b21e6cc0 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fe8b21e7350 <col:30, col:63>
| |   | `-ReturnStmt 0x7fe8b21e7338 <col:31, col:61>
| |   |   `-CallExpr 0x7fe8b21e7308 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fe8b21e72f0 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fe8b21e72b8 <col:38, col:40> 'double (double)' lvalue Function 0x7fe8b200fbd0 'erfc' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fe8b21e6fb0 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fe8b21e6f70 <col:53> '_A1' lvalue ParmVar 0x7fe8b21e6cc0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fe8b21e6e88 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fe8b21e6ed0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21e7450 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1125:1, col:109> col:46 exp2 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21e73b8 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fe8b21e7640 <col:83, col:109>
| | | `-ReturnStmt 0x7fe8b21e7628 <col:84, col:107>
| | |   `-CallExpr 0x7fe8b21e75e0 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fe8b21e75c8 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21e7568 <col:91, col:93> 'float (float)' lvalue Function 0x7fe8b20059a0 'exp2f' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fe8b21e7610 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21e75a0 <col:99> 'float' lvalue ParmVar 0x7fe8b21e73b8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fe8b21e74f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21e7538 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21e7740 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1126:1, col:109> col:46 exp2 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21e76a8 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fe8b21e7930 <col:83, col:109>
| | | `-ReturnStmt 0x7fe8b21e7918 <col:84, col:107>
| | |   `-CallExpr 0x7fe8b21e78d0 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fe8b21e78b8 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21e7858 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fe8b2005ce0 'exp2l' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fe8b21e7900 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21e7890 <col:99> 'long double' lvalue ParmVar 0x7fe8b21e76a8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fe8b21e77e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21e7828 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fe8b21e7df0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1128:1, line:1131:63> col:1 exp2
| | |-TemplateTypeParmDecl 0x7fe8b21e7950 <line:1128:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fe8b21e7d58 <line:1129:1, line:1131:63> col:1 exp2 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fe8b21e7c80 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fe8b21e8310 <col:30, col:63>
| |   | `-ReturnStmt 0x7fe8b21e82f8 <col:31, col:61>
| |   |   `-CallExpr 0x7fe8b21e82c8 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fe8b21e82b0 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fe8b21e8278 <col:38, col:40> 'double (double)' lvalue Function 0x7fe8b2005b40 'exp2' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fe8b21e7f70 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fe8b21e7f30 <col:53> '_A1' lvalue ParmVar 0x7fe8b21e7c80 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fe8b21e7e48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fe8b21e7e90 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21e8410 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1135:1, col:111> col:46 expm1 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21e8378 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fe8b21e8600 <col:84, col:111>
| | | `-ReturnStmt 0x7fe8b21e85e8 <col:85, col:109>
| | |   `-CallExpr 0x7fe8b21e85a0 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7fe8b21e8588 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21e8528 <col:92, col:94> 'float (float)' lvalue Function 0x7fe8b2005e80 'expm1f' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fe8b21e85d0 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21e8560 <col:101> 'float' lvalue ParmVar 0x7fe8b21e8378 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fe8b21e84b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21e84f8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21e8700 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1136:1, col:111> col:46 expm1 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21e8668 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fe8b21e88f0 <col:84, col:111>
| | | `-ReturnStmt 0x7fe8b21e88d8 <col:85, col:109>
| | |   `-CallExpr 0x7fe8b21e8890 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7fe8b21e8878 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21e8818 <col:92, col:94> 'long double (long double)' lvalue Function 0x7fe8b20061c0 'expm1l' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fe8b21e88c0 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21e8850 <col:101> 'long double' lvalue ParmVar 0x7fe8b21e8668 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fe8b21e87a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21e87e8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fe8b21e8db0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1138:1, line:1141:65> col:1 expm1
| | |-TemplateTypeParmDecl 0x7fe8b21e8910 <line:1138:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fe8b21e8d18 <line:1139:1, line:1141:65> col:1 expm1 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fe8b21e8c40 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fe8b21e92d0 <col:31, col:65>
| |   | `-ReturnStmt 0x7fe8b21e92b8 <col:32, col:63>
| |   |   `-CallExpr 0x7fe8b21e9288 <col:39, col:63> 'double'
| |   |     |-ImplicitCastExpr 0x7fe8b21e9270 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fe8b21e9238 <col:39, col:41> 'double (double)' lvalue Function 0x7fe8b2006020 'expm1' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fe8b21e8f30 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fe8b21e8ef0 <col:55> '_A1' lvalue ParmVar 0x7fe8b21e8c40 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fe8b21e8e08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fe8b21e8e50 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21e9450 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1145:1, col:141> col:46 fdim 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21e9338 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fe8b21e93b0 <col:67, col:73> col:73 used __lcpp_y 'float'
| | |-CompoundStmt 0x7fe8b21e9690 <col:105, col:141>
| | | `-ReturnStmt 0x7fe8b21e9678 <col:106, col:139>
| | |   `-CallExpr 0x7fe8b21e9610 <col:113, col:139> 'float'
| | |     |-ImplicitCastExpr 0x7fe8b21e95f8 <col:113, col:115> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21e9570 <col:113, col:115> 'float (float, float)' lvalue Function 0x7fe8b2007d68 'fdimf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7fe8b21e9648 <col:121> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fe8b21e95a8 <col:121> 'float' lvalue ParmVar 0x7fe8b21e9338 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fe8b21e9660 <col:131> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21e95d0 <col:131> 'float' lvalue ParmVar 0x7fe8b21e93b0 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7fe8b21e94f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21e9540 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21e9810 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1146:1, col:141> col:46 fdim 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21e96f8 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fe8b21e9770 <col:73, col:85> col:85 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fe8b21e9a50 <col:105, col:141>
| | | `-ReturnStmt 0x7fe8b21e9a38 <col:106, col:139>
| | |   `-CallExpr 0x7fe8b21e99d0 <col:113, col:139> 'long double'
| | |     |-ImplicitCastExpr 0x7fe8b21e99b8 <col:113, col:115> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21e9930 <col:113, col:115> 'long double (long double, long double)' lvalue Function 0x7fe8b20081b8 'fdiml' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fe8b21e9a08 <col:121> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fe8b21e9968 <col:121> 'long double' lvalue ParmVar 0x7fe8b21e96f8 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fe8b21e9a20 <col:131> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21e9990 <col:131> 'long double' lvalue ParmVar 0x7fe8b21e9770 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fe8b21e98b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21e9900 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fe8b21ea2b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1148:1, line:1162:1> line:1156:1 fdim
| | |-TemplateTypeParmDecl 0x7fe8b21e9a70 <line:1148:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fe8b21e9ad8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fe8b21ea218 <line:1149:1, line:1162:1> line:1156:1 fdim 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fe8b21ea0c0 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fe8b21ea130 <col:20, col:24> col:24 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fe8b21ecaf8 <line:1157:1, line:1162:1>
| |   | |-DeclStmt 0x7fe8b21ea528 <line:1158:5, col:66>
| |   | | `-TypedefDecl 0x7fe8b21ea4d0 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fe8b21ea460 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fe8b21ec940 <line:1159:5, line:1160:68>
| |   | | `-StaticAssertDecl 0x7fe8b21ec908 <line:1159:5, line:1160:67> line:1159:5
| |   | |   |-ParenExpr 0x7fe8b21ec8c0 <col:19, line:1160:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fe8b21ec8a0 <line:1159:20, line:1160:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fe8b21ec880 <line:1159:21, line:1160:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fe8b21ec858 <line:1159:22, line:1160:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fe8b21ec6b8 <line:1159:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fe8b21ec818 <line:1160:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fe8b21ec8e0 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fe8b21ecae0 <line:1161:5, col:67>
| |   |   `-CallExpr 0x7fe8b21ecaa8 <col:12, col:67> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fe8b21ec978 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'fdim' 0x7fe8b2007f90 0x7fe8b21e9450 0x7fe8b21e9810 0x7fe8b21ea2b0
| |   |     |-CStyleCastExpr 0x7fe8b21eca20 <col:19, col:34> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fe8b21ec9e8 <col:34> '_A1' lvalue ParmVar 0x7fe8b21ea0c0 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fe8b21eca80 <col:44, col:59> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fe8b21eca48 <col:59> '_A2' lvalue ParmVar 0x7fe8b21ea130 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fe8b21ea310 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fe8b21ea358 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21ecd08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1166:1, col:171> col:46 fma 'float (float, float, float) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21ecb70 <col:50, col:56> col:56 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fe8b21ecbe8 <col:66, col:72> col:72 used __lcpp_y 'float'
| | |-ParmVarDecl 0x7fe8b21ecc60 <col:82, col:88> col:88 used __lcpp_z 'float'
| | |-CompoundStmt 0x7fe8b21ecfc0 <col:126, col:171>
| | | `-ReturnStmt 0x7fe8b21ecfa8 <col:127, col:169>
| | |   `-CallExpr 0x7fe8b21ecf20 <col:134, col:169> 'float'
| | |     |-ImplicitCastExpr 0x7fe8b21ecf08 <col:134, col:136> 'float (*)(float, float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21ece30 <col:134, col:136> 'float (float, float, float)' lvalue Function 0x7fe8b201b1a8 'fmaf' 'float (float, float, float)'
| | |     |-ImplicitCastExpr 0x7fe8b21ecf60 <col:141> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fe8b21ece68 <col:141> 'float' lvalue ParmVar 0x7fe8b21ecb70 '__lcpp_x' 'float'
| | |     |-ImplicitCastExpr 0x7fe8b21ecf78 <col:151> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fe8b21ece90 <col:151> 'float' lvalue ParmVar 0x7fe8b21ecbe8 '__lcpp_y' 'float'
| | |     `-ImplicitCastExpr 0x7fe8b21ecf90 <col:161> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21eceb8 <col:161> 'float' lvalue ParmVar 0x7fe8b21ecc60 '__lcpp_z' 'float'
| | |-AlwaysInlineAttr 0x7fe8b21ecdb8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21ece00 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21ed1c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1167:1, col:171> col:46 fma 'long double (long double, long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21ed028 <col:50, col:62> col:62 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fe8b21ed0a0 <col:72, col:84> col:84 used __lcpp_y 'long double'
| | |-ParmVarDecl 0x7fe8b21ed118 <col:94, col:106> col:106 used __lcpp_z 'long double'
| | |-CompoundStmt 0x7fe8b21ed480 <col:126, col:171>
| | | `-ReturnStmt 0x7fe8b21ed468 <col:127, col:169>
| | |   `-CallExpr 0x7fe8b21ed3e0 <col:134, col:169> 'long double'
| | |     |-ImplicitCastExpr 0x7fe8b21ed3c8 <col:134, col:136> 'long double (*)(long double, long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21ed2e8 <col:134, col:136> 'long double (long double, long double, long double)' lvalue Function 0x7fe8b200b888 'fmal' 'long double (long double, long double, long double)'
| | |     |-ImplicitCastExpr 0x7fe8b21ed420 <col:141> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fe8b21ed320 <col:141> 'long double' lvalue ParmVar 0x7fe8b21ed028 '__lcpp_x' 'long double'
| | |     |-ImplicitCastExpr 0x7fe8b21ed438 <col:151> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fe8b21ed348 <col:151> 'long double' lvalue ParmVar 0x7fe8b21ed0a0 '__lcpp_y' 'long double'
| | |     `-ImplicitCastExpr 0x7fe8b21ed450 <col:161> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21ed370 <col:161> 'long double' lvalue ParmVar 0x7fe8b21ed118 '__lcpp_z' 'long double'
| | |-AlwaysInlineAttr 0x7fe8b21ed270 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21ed2b8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fe8b21ee0d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1169:1, line:1185:1> line:1178:1 fma
| | |-TemplateTypeParmDecl 0x7fe8b21ed4a0 <line:1169:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fe8b21ed508 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | |-TemplateTypeParmDecl 0x7fe8b21ed578 <col:33, col:39> col:39 referenced class depth 0 index 2 _A3
| | `-FunctionDecl 0x7fe8b21ee038 <line:1170:1, line:1185:1> line:1178:1 fma 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value && std::is_arithmetic<_A3>::value, std::__promote<_A1, _A2, _A3> >::type (_A1, _A2, _A3) noexcept' inline
| |   |-ParmVarDecl 0x7fe8b21ede10 <col:5, col:9> col:9 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fe8b21ede80 <col:19, col:23> col:23 referenced __lcpp_y '_A2'
| |   |-ParmVarDecl 0x7fe8b21edef0 <col:33, col:37> col:37 referenced __lcpp_z '_A3'
| |   |-CompoundStmt 0x7fe8b21eec90 <line:1179:1, line:1185:1>
| |   | |-DeclStmt 0x7fe8b21ee3d8 <line:1180:5, col:71>
| |   | | `-TypedefDecl 0x7fe8b21ee380 <col:5, col:58> col:58 referenced __result_type 'typename std::__promote<_A1, _A2, _A3>::type'
| |   | |   `-DependentNameType 0x7fe8b21ee310 'typename std::__promote<_A1, _A2, _A3>::type' dependent
| |   | |-DeclStmt 0x7fe8b21eea70 <line:1181:5, line:1183:68>
| |   | | `-StaticAssertDecl 0x7fe8b21eea38 <line:1181:5, line:1183:67> line:1181:5
| |   | |   |-ParenExpr 0x7fe8b21ee9f0 <col:19, line:1183:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fe8b21ee9d0 <line:1181:20, line:1183:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fe8b21ee9b0 <line:1181:21, line:1183:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fe8b21ee988 <line:1181:22, line:1183:56> '<dependent type>' '&&'
| |   | |   |       |-BinaryOperator 0x7fe8b21ee7a8 <line:1181:22, line:1182:56> '<dependent type>' '&&'
| |   | |   |       | |-DependentScopeDeclRefExpr 0x7fe8b21ee5a8 <line:1181:22, col:56> '<dependent type>' lvalue
| |   | |   |       | `-DependentScopeDeclRefExpr 0x7fe8b21ee768 <line:1182:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fe8b21ee948 <line:1183:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fe8b21eea10 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fe8b21eec78 <line:1184:5, col:91>
| |   |   `-CallExpr 0x7fe8b21eec38 <col:12, col:91> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fe8b21eeaa8 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'fma' 0x7fe8b201b4f8 0x7fe8b21ecd08 0x7fe8b21ed1c0 0x7fe8b21ee0d0
| |   |     |-CStyleCastExpr 0x7fe8b21eeb50 <col:18, col:33> '__result_type':'typename std::__promote<_A1, _A2, _A3>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fe8b21eeb18 <col:33> '_A1' lvalue ParmVar 0x7fe8b21ede10 '__lcpp_x' '_A1'
| |   |     |-CStyleCastExpr 0x7fe8b21eebb0 <col:43, col:58> '__result_type':'typename std::__promote<_A1, _A2, _A3>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fe8b21eeb78 <col:58> '_A2' lvalue ParmVar 0x7fe8b21ede80 '__lcpp_y' '_A2'
| |   |     `-CStyleCastExpr 0x7fe8b21eec10 <col:68, col:83> '__result_type':'typename std::__promote<_A1, _A2, _A3>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fe8b21eebd8 <col:83> '_A3' lvalue ParmVar 0x7fe8b21edef0 '__lcpp_z' '_A3'
| |   |-AlwaysInlineAttr 0x7fe8b21ee138 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fe8b21ee180 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21eee20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1189:1, col:141> col:46 fmax 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21eed08 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fe8b21eed80 <col:67, col:73> col:73 used __lcpp_y 'float'
| | |-CompoundStmt 0x7fe8b21ef060 <col:105, col:141>
| | | `-ReturnStmt 0x7fe8b21ef048 <col:106, col:139>
| | |   `-CallExpr 0x7fe8b21eefe0 <col:113, col:139> 'float'
| | |     |-ImplicitCastExpr 0x7fe8b21eefc8 <col:113, col:115> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21eef40 <col:113, col:115> 'float (float, float)' lvalue Function 0x7fe8b20083e0 'fmaxf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7fe8b21ef018 <col:121> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fe8b21eef78 <col:121> 'float' lvalue ParmVar 0x7fe8b21eed08 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fe8b21ef030 <col:131> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21eefa0 <col:131> 'float' lvalue ParmVar 0x7fe8b21eed80 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7fe8b21eeec8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21eef10 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21ef1e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1190:1, col:141> col:46 fmax 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21ef0c8 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fe8b21ef140 <col:73, col:85> col:85 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fe8b21ef420 <col:105, col:141>
| | | `-ReturnStmt 0x7fe8b21ef408 <col:106, col:139>
| | |   `-CallExpr 0x7fe8b21ef3a0 <col:113, col:139> 'long double'
| | |     |-ImplicitCastExpr 0x7fe8b21ef388 <col:113, col:115> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21ef300 <col:113, col:115> 'long double (long double, long double)' lvalue Function 0x7fe8b201a838 'fmaxl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fe8b21ef3d8 <col:121> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fe8b21ef338 <col:121> 'long double' lvalue ParmVar 0x7fe8b21ef0c8 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fe8b21ef3f0 <col:131> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21ef360 <col:131> 'long double' lvalue ParmVar 0x7fe8b21ef140 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fe8b21ef288 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21ef2d0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fe8b21efc80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1192:1, line:1206:1> line:1200:1 fmax
| | |-TemplateTypeParmDecl 0x7fe8b21ef440 <line:1192:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fe8b21ef4a8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fe8b21efbe8 <line:1193:1, line:1206:1> line:1200:1 fmax 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fe8b21efa90 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fe8b21efb00 <col:20, col:24> col:24 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fe8b21f04a8 <line:1201:1, line:1206:1>
| |   | |-DeclStmt 0x7fe8b21efef8 <line:1202:5, col:66>
| |   | | `-TypedefDecl 0x7fe8b21efea0 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fe8b21efe30 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fe8b21f02f0 <line:1203:5, line:1204:68>
| |   | | `-StaticAssertDecl 0x7fe8b21f02b8 <line:1203:5, line:1204:67> line:1203:5
| |   | |   |-ParenExpr 0x7fe8b21f0270 <col:19, line:1204:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fe8b21f0250 <line:1203:20, line:1204:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fe8b21f0230 <line:1203:21, line:1204:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fe8b21f0208 <line:1203:22, line:1204:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fe8b21f0068 <line:1203:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fe8b21f01c8 <line:1204:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fe8b21f0290 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fe8b21f0490 <line:1205:5, col:67>
| |   |   `-CallExpr 0x7fe8b21f0458 <col:12, col:67> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fe8b21f0328 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'fmax' 0x7fe8b2008608 0x7fe8b21eee20 0x7fe8b21ef1e0 0x7fe8b21efc80
| |   |     |-CStyleCastExpr 0x7fe8b21f03d0 <col:19, col:34> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fe8b21f0398 <col:34> '_A1' lvalue ParmVar 0x7fe8b21efa90 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fe8b21f0430 <col:44, col:59> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fe8b21f03f8 <col:59> '_A2' lvalue ParmVar 0x7fe8b21efb00 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fe8b21efce0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fe8b21efd28 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21f0640 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1210:1, col:141> col:46 fmin 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21f0520 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fe8b21f0598 <col:67, col:73> col:73 used __lcpp_y 'float'
| | |-CompoundStmt 0x7fe8b21f0880 <col:105, col:141>
| | | `-ReturnStmt 0x7fe8b21f0868 <col:106, col:139>
| | |   `-CallExpr 0x7fe8b21f0800 <col:113, col:139> 'float'
| | |     |-ImplicitCastExpr 0x7fe8b21f07e8 <col:113, col:115> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21f0760 <col:113, col:115> 'float (float, float)' lvalue Function 0x7fe8b201aa60 'fminf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7fe8b21f0838 <col:121> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fe8b21f0798 <col:121> 'float' lvalue ParmVar 0x7fe8b21f0520 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fe8b21f0850 <col:131> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21f07c0 <col:131> 'float' lvalue ParmVar 0x7fe8b21f0598 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7fe8b21f06e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21f0730 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21f0a00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1211:1, col:141> col:46 fmin 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21f08e8 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fe8b21f0960 <col:73, col:85> col:85 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fe8b21f0c40 <col:105, col:141>
| | | `-ReturnStmt 0x7fe8b21f0c28 <col:106, col:139>
| | |   `-CallExpr 0x7fe8b21f0bc0 <col:113, col:139> 'long double'
| | |     |-ImplicitCastExpr 0x7fe8b21f0ba8 <col:113, col:115> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21f0b20 <col:113, col:115> 'long double (long double, long double)' lvalue Function 0x7fe8b201aeb0 'fminl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fe8b21f0bf8 <col:121> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fe8b21f0b58 <col:121> 'long double' lvalue ParmVar 0x7fe8b21f08e8 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fe8b21f0c10 <col:131> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21f0b80 <col:131> 'long double' lvalue ParmVar 0x7fe8b21f0960 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fe8b21f0aa8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21f0af0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fe8b21f14a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1213:1, line:1227:1> line:1221:1 fmin
| | |-TemplateTypeParmDecl 0x7fe8b21f0c60 <line:1213:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fe8b21f0cc8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fe8b21f1408 <line:1214:1, line:1227:1> line:1221:1 fmin 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fe8b21f12b0 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fe8b21f1320 <col:20, col:24> col:24 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fe8b21f1cc8 <line:1222:1, line:1227:1>
| |   | |-DeclStmt 0x7fe8b21f1718 <line:1223:5, col:66>
| |   | | `-TypedefDecl 0x7fe8b21f16c0 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fe8b21f1650 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fe8b21f1b10 <line:1224:5, line:1225:68>
| |   | | `-StaticAssertDecl 0x7fe8b21f1ad8 <line:1224:5, line:1225:67> line:1224:5
| |   | |   |-ParenExpr 0x7fe8b21f1a90 <col:19, line:1225:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fe8b21f1a70 <line:1224:20, line:1225:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fe8b21f1a50 <line:1224:21, line:1225:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fe8b21f1a28 <line:1224:22, line:1225:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fe8b21f1888 <line:1224:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fe8b21f19e8 <line:1225:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fe8b21f1ab0 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fe8b21f1cb0 <line:1226:5, col:67>
| |   |   `-CallExpr 0x7fe8b21f1c78 <col:12, col:67> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fe8b21f1b48 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'fmin' 0x7fe8b201ac88 0x7fe8b21f0640 0x7fe8b21f0a00 0x7fe8b21f14a0
| |   |     |-CStyleCastExpr 0x7fe8b21f1bf0 <col:19, col:34> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fe8b21f1bb8 <col:34> '_A1' lvalue ParmVar 0x7fe8b21f12b0 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fe8b21f1c50 <col:44, col:59> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fe8b21f1c18 <col:59> '_A2' lvalue ParmVar 0x7fe8b21f1320 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fe8b21f1500 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fe8b21f1548 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21f1e58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1231:1, col:143> col:46 hypot 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21f1d40 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fe8b21f1db8 <col:68, col:74> col:74 used __lcpp_y 'float'
| | |-CompoundStmt 0x7fe8b21f2098 <col:106, col:143>
| | | `-ReturnStmt 0x7fe8b21f2080 <col:107, col:141>
| | |   `-CallExpr 0x7fe8b21f2018 <col:114, col:141> 'float'
| | |     |-ImplicitCastExpr 0x7fe8b21f2000 <col:114, col:116> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21f1f78 <col:114, col:116> 'float (float, float)' lvalue Function 0x7fe8b200e330 'hypotf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7fe8b21f2050 <col:123> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fe8b21f1fb0 <col:123> 'float' lvalue ParmVar 0x7fe8b21f1d40 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fe8b21f2068 <col:133> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21f1fd8 <col:133> 'float' lvalue ParmVar 0x7fe8b21f1db8 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7fe8b21f1f00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21f1f48 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21f2218 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1232:1, col:143> col:46 hypot 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21f2100 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fe8b21f2178 <col:74, col:86> col:86 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fe8b21f2458 <col:106, col:143>
| | | `-ReturnStmt 0x7fe8b21f2440 <col:107, col:141>
| | |   `-CallExpr 0x7fe8b21f23d8 <col:114, col:141> 'long double'
| | |     |-ImplicitCastExpr 0x7fe8b21f23c0 <col:114, col:116> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21f2338 <col:114, col:116> 'long double (long double, long double)' lvalue Function 0x7fe8b200e800 'hypotl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fe8b21f2410 <col:123> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fe8b21f2370 <col:123> 'long double' lvalue ParmVar 0x7fe8b21f2100 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fe8b21f2428 <col:133> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21f2398 <col:133> 'long double' lvalue ParmVar 0x7fe8b21f2178 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fe8b21f22c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21f2308 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fe8b21f2d00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1234:1, line:1248:1> line:1242:1 hypot
| | |-TemplateTypeParmDecl 0x7fe8b21f2478 <line:1234:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fe8b21f24e8 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fe8b21f2c68 <line:1235:1, line:1248:1> line:1242:1 hypot 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fe8b21f2b10 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fe8b21f2b80 <col:21, col:25> col:25 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fe8b21f3528 <line:1243:1, line:1248:1>
| |   | |-DeclStmt 0x7fe8b21f2f78 <line:1244:5, col:66>
| |   | | `-TypedefDecl 0x7fe8b21f2f20 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fe8b21f2eb0 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fe8b21f3370 <line:1245:5, line:1246:68>
| |   | | `-StaticAssertDecl 0x7fe8b21f3338 <line:1245:5, line:1246:67> line:1245:5
| |   | |   |-ParenExpr 0x7fe8b21f32f0 <col:19, line:1246:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fe8b21f32d0 <line:1245:20, line:1246:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fe8b21f32b0 <line:1245:21, line:1246:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fe8b21f3288 <line:1245:22, line:1246:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fe8b21f30e8 <line:1245:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fe8b21f3248 <line:1246:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fe8b21f3310 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fe8b21f3510 <line:1247:5, col:68>
| |   |   `-CallExpr 0x7fe8b21f34d8 <col:12, col:68> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fe8b21f33a8 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'hypot' 0x7fe8b200e558 0x7fe8b21f1e58 0x7fe8b21f2218 0x7fe8b21f2d00
| |   |     |-CStyleCastExpr 0x7fe8b21f3450 <col:20, col:35> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fe8b21f3418 <col:35> '_A1' lvalue ParmVar 0x7fe8b21f2b10 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fe8b21f34b0 <col:45, col:60> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fe8b21f3478 <col:60> '_A2' lvalue ParmVar 0x7fe8b21f2b80 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fe8b21f2d60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fe8b21f2da8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21f3638 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1252:1, col:103> col:38 ilogb 'int (float) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21f35a0 <col:44, col:50> col:50 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fe8b21f3828 <col:76, col:103>
| | | `-ReturnStmt 0x7fe8b21f3810 <col:77, col:101>
| | |   `-CallExpr 0x7fe8b21f37c8 <col:84, col:101> 'int'
| | |     |-ImplicitCastExpr 0x7fe8b21f37b0 <col:84, col:86> 'int (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21f3750 <col:84, col:86> 'int (float)' lvalue Function 0x7fe8b200b4a0 'ilogbf' 'int (float)'
| | |     `-ImplicitCastExpr 0x7fe8b21f37f8 <col:93> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21f3788 <col:93> 'float' lvalue ParmVar 0x7fe8b21f35a0 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fe8b21f36d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21f3720 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21f3928 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1253:1, col:103> col:38 ilogb 'int (long double) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21f3890 <col:44, col:56> col:56 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fe8b21f3b18 <col:76, col:103>
| | | `-ReturnStmt 0x7fe8b21f3b00 <col:77, col:101>
| | |   `-CallExpr 0x7fe8b21f3ab8 <col:84, col:101> 'int'
| | |     |-ImplicitCastExpr 0x7fe8b21f3aa0 <col:84, col:86> 'int (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21f3a40 <col:84, col:86> 'int (long double)' lvalue Function 0x7fe8b200c890 'ilogbl' 'int (long double)'
| | |     `-ImplicitCastExpr 0x7fe8b21f3ae8 <col:93> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21f3a78 <col:93> 'long double' lvalue ParmVar 0x7fe8b21f3890 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fe8b21f39c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21f3a10 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fe8b21f3fe0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1255:1, line:1258:65> col:1 ilogb
| | |-TemplateTypeParmDecl 0x7fe8b21f3b38 <line:1255:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fe8b21f3f48 <line:1256:1, line:1258:65> col:1 ilogb 'typename std::enable_if<std::is_integral<_A1>::value, int>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fe8b21f3e70 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fe8b21f47b8 <col:31, col:65>
| |   | `-ReturnStmt 0x7fe8b21f47a0 <col:32, col:63>
| |   |   `-CallExpr 0x7fe8b21f4770 <col:39, col:63> 'int'
| |   |     |-ImplicitCastExpr 0x7fe8b21f4758 <col:39, col:41> 'int (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fe8b21f4720 <col:39, col:41> 'int (double)' lvalue Function 0x7fe8b200b678 'ilogb' 'int (double)'
| |   |     `-CStyleCastExpr 0x7fe8b21f4160 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fe8b21f4120 <col:55> '_A1' lvalue ParmVar 0x7fe8b21f3e70 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fe8b21f4038 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fe8b21f4080 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21f48b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1262:1, col:113> col:46 lgamma 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21f4820 <col:53, col:59> col:59 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fe8b21f4aa8 <col:85, col:113>
| | | `-ReturnStmt 0x7fe8b21f4a90 <col:86, col:111>
| | |   `-CallExpr 0x7fe8b21f4a48 <col:93, col:111> 'float'
| | |     |-ImplicitCastExpr 0x7fe8b21f4a30 <col:93, col:95> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21f49d0 <col:93, col:95> 'float (float)' lvalue Function 0x7fe8b200ff10 'lgammaf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fe8b21f4a78 <col:103> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21f4a08 <col:103> 'float' lvalue ParmVar 0x7fe8b21f4820 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fe8b21f4958 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21f49a0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21f4ba8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1263:1, col:113> col:46 lgamma 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21f4b10 <col:53, col:65> col:65 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fe8b21f4d98 <col:85, col:113>
| | | `-ReturnStmt 0x7fe8b21f4d80 <col:86, col:111>
| | |   `-CallExpr 0x7fe8b21f4d38 <col:93, col:111> 'long double'
| | |     |-ImplicitCastExpr 0x7fe8b21f4d20 <col:93, col:95> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21f4cc0 <col:93, col:95> 'long double (long double)' lvalue Function 0x7fe8b2010230 'lgammal' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fe8b21f4d68 <col:103> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21f4cf8 <col:103> 'long double' lvalue ParmVar 0x7fe8b21f4b10 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fe8b21f4c48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21f4c90 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fe8b21f5260 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1265:1, line:1268:67> col:1 lgamma
| | |-TemplateTypeParmDecl 0x7fe8b21f4db8 <line:1265:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fe8b21f51c8 <line:1266:1, line:1268:67> col:1 lgamma 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fe8b21f50f0 <col:8, col:12> col:12 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fe8b21f5780 <col:32, col:67>
| |   | `-ReturnStmt 0x7fe8b21f5768 <col:33, col:65>
| |   |   `-CallExpr 0x7fe8b21f5738 <col:40, col:65> 'double'
| |   |     |-ImplicitCastExpr 0x7fe8b21f5720 <col:40, col:42> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fe8b21f56e8 <col:40, col:42> 'double (double)' lvalue Function 0x7fe8b20100a0 'lgamma' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fe8b21f53e0 <col:49, col:57> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fe8b21f53a0 <col:57> '_A1' lvalue ParmVar 0x7fe8b21f50f0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fe8b21f52b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fe8b21f5300 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21f5880 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1272:1, col:111> col:44 llrint 'long long (float) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21f57e8 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fe8b21f5aa0 <col:83, col:111>
| | | `-ReturnStmt 0x7fe8b21f5a88 <col:84, col:109>
| | |   `-CallExpr 0x7fe8b21f5a40 <col:91, col:109> 'long long'
| | |     |-ImplicitCastExpr 0x7fe8b21f5a28 <col:91, col:93> 'long long (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21f5998 <col:91, col:93> 'long long (float)' lvalue Function 0x7fe8b2012c88 'llrintf' 'long long (float)'
| | |     `-ImplicitCastExpr 0x7fe8b21f5a70 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21f59d0 <col:101> 'float' lvalue ParmVar 0x7fe8b21f57e8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fe8b21f5920 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21f5968 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21f5ba0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1273:1, col:111> col:44 llrint 'long long (long double) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21f5b08 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fe8b21f5dc0 <col:83, col:111>
| | | `-ReturnStmt 0x7fe8b21f5da8 <col:84, col:109>
| | |   `-CallExpr 0x7fe8b21f5d60 <col:91, col:109> 'long long'
| | |     |-ImplicitCastExpr 0x7fe8b21f5d48 <col:91, col:93> 'long long (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21f5cb8 <col:91, col:93> 'long long (long double)' lvalue Function 0x7fe8b20130c8 'llrintl' 'long long (long double)'
| | |     `-ImplicitCastExpr 0x7fe8b21f5d90 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21f5cf0 <col:101> 'long double' lvalue ParmVar 0x7fe8b21f5b08 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fe8b21f5c40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21f5c88 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fe8b21f6370 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1275:1, line:1278:67> col:1 llrint
| | |-TemplateTypeParmDecl 0x7fe8b21f5de0 <line:1275:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fe8b21f62d8 <line:1276:1, line:1278:67> col:1 llrint 'typename std::enable_if<std::is_integral<_A1>::value, long long>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fe8b21f61c0 <col:8, col:12> col:12 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fe8b21f6b48 <col:32, col:67>
| |   | `-ReturnStmt 0x7fe8b21f6b30 <col:33, col:65>
| |   |   `-CallExpr 0x7fe8b21f6b00 <col:40, col:65> 'long long'
| |   |     |-ImplicitCastExpr 0x7fe8b21f6ae8 <col:40, col:42> 'long long (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fe8b21f6a88 <col:40, col:42> 'long long (double)' lvalue Function 0x7fe8b2012ea8 'llrint' 'long long (double)'
| |   |     `-CStyleCastExpr 0x7fe8b21f64f0 <col:49, col:57> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fe8b21f64b0 <col:57> '_A1' lvalue ParmVar 0x7fe8b21f61c0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fe8b21f63c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fe8b21f6410 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21f6c48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1282:1, col:113> col:44 llround 'long long (float) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21f6bb0 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fe8b21f6e38 <col:84, col:113>
| | | `-ReturnStmt 0x7fe8b21f6e20 <col:85, col:111>
| | |   `-CallExpr 0x7fe8b21f6dd8 <col:92, col:111> 'long long'
| | |     |-ImplicitCastExpr 0x7fe8b21f6dc0 <col:92, col:94> 'long long (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21f6d60 <col:92, col:94> 'long long (float)' lvalue Function 0x7fe8b20132a8 'llroundf' 'long long (float)'
| | |     `-ImplicitCastExpr 0x7fe8b21f6e08 <col:103> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21f6d98 <col:103> 'float' lvalue ParmVar 0x7fe8b21f6bb0 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fe8b21f6ce8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21f6d30 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21f6f38 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1283:1, col:113> col:44 llround 'long long (long double) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21f6ea0 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fe8b21f7128 <col:84, col:113>
| | | `-ReturnStmt 0x7fe8b21f7110 <col:85, col:111>
| | |   `-CallExpr 0x7fe8b21f70c8 <col:92, col:111> 'long long'
| | |     |-ImplicitCastExpr 0x7fe8b21f70b0 <col:92, col:94> 'long long (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21f7050 <col:92, col:94> 'long long (long double)' lvalue Function 0x7fe8b20135e8 'llroundl' 'long long (long double)'
| | |     `-ImplicitCastExpr 0x7fe8b21f70f8 <col:103> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21f7088 <col:103> 'long double' lvalue ParmVar 0x7fe8b21f6ea0 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fe8b21f6fd8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21f7020 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fe8b21f75f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1285:1, line:1288:69> col:1 llround
| | |-TemplateTypeParmDecl 0x7fe8b21f7148 <line:1285:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fe8b21f7558 <line:1286:1, line:1288:69> col:1 llround 'typename std::enable_if<std::is_integral<_A1>::value, long long>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fe8b21f7480 <col:9, col:13> col:13 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fe8b21f7b10 <col:33, col:69>
| |   | `-ReturnStmt 0x7fe8b21f7af8 <col:34, col:67>
| |   |   `-CallExpr 0x7fe8b21f7ac8 <col:41, col:67> 'long long'
| |   |     |-ImplicitCastExpr 0x7fe8b21f7ab0 <col:41, col:43> 'long long (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fe8b21f7a78 <col:41, col:43> 'long long (double)' lvalue Function 0x7fe8b2013448 'llround' 'long long (double)'
| |   |     `-CStyleCastExpr 0x7fe8b21f7770 <col:51, col:59> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fe8b21f7730 <col:59> '_A1' lvalue ParmVar 0x7fe8b21f7480 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fe8b21f7648 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fe8b21f7690 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21f7c10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1292:1, col:111> col:46 log1p 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21f7b78 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fe8b21f7e00 <col:84, col:111>
| | | `-ReturnStmt 0x7fe8b21f7de8 <col:85, col:109>
| | |   `-CallExpr 0x7fe8b21f7da0 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7fe8b21f7d88 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21f7d28 <col:92, col:94> 'float (float)' lvalue Function 0x7fe8b2007250 'log1pf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fe8b21f7dd0 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21f7d60 <col:101> 'float' lvalue ParmVar 0x7fe8b21f7b78 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fe8b21f7cb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21f7cf8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21f7f00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1293:1, col:111> col:46 log1p 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21f7e68 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fe8b21f80f0 <col:84, col:111>
| | | `-ReturnStmt 0x7fe8b21f80d8 <col:85, col:109>
| | |   `-CallExpr 0x7fe8b21f8090 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7fe8b21f8078 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21f8018 <col:92, col:94> 'long double (long double)' lvalue Function 0x7fe8b2007590 'log1pl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fe8b21f80c0 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21f8050 <col:101> 'long double' lvalue ParmVar 0x7fe8b21f7e68 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fe8b21f7fa0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21f7fe8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fe8b21f85b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1295:1, line:1298:65> col:1 log1p
| | |-TemplateTypeParmDecl 0x7fe8b21f8110 <line:1295:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fe8b21f8518 <line:1296:1, line:1298:65> col:1 log1p 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fe8b21f8440 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fe8b21f8ad0 <col:31, col:65>
| |   | `-ReturnStmt 0x7fe8b21f8ab8 <col:32, col:63>
| |   |   `-CallExpr 0x7fe8b21f8a88 <col:39, col:63> 'double'
| |   |     |-ImplicitCastExpr 0x7fe8b21f8a70 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fe8b21f8a38 <col:39, col:41> 'double (double)' lvalue Function 0x7fe8b20073f0 'log1p' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fe8b21f8730 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fe8b21f86f0 <col:55> '_A1' lvalue ParmVar 0x7fe8b21f8440 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fe8b21f8608 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fe8b21f8650 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21f8bd0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1302:1, col:109> col:46 log2 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21f8b38 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fe8b21f8dc0 <col:83, col:109>
| | | `-ReturnStmt 0x7fe8b21f8da8 <col:84, col:107>
| | |   `-CallExpr 0x7fe8b21f8d60 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fe8b21f8d48 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21f8ce8 <col:91, col:93> 'float (float)' lvalue Function 0x7fe8b2006d70 'log2f' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fe8b21f8d90 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21f8d20 <col:99> 'float' lvalue ParmVar 0x7fe8b21f8b38 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fe8b21f8c70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21f8cb8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21f8ec0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1303:1, col:109> col:46 log2 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21f8e28 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fe8b21f90b0 <col:83, col:109>
| | | `-ReturnStmt 0x7fe8b21f9098 <col:84, col:107>
| | |   `-CallExpr 0x7fe8b21f9050 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fe8b21f9038 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21f8fd8 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fe8b20070b0 'log2l' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fe8b21f9080 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21f9010 <col:99> 'long double' lvalue ParmVar 0x7fe8b21f8e28 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fe8b21f8f60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21f8fa8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fe8b21f9570 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1305:1, line:1308:63> col:1 log2
| | |-TemplateTypeParmDecl 0x7fe8b21f90d0 <line:1305:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fe8b21f94d8 <line:1306:1, line:1308:63> col:1 log2 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fe8b21f9400 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fe8b21f9a90 <col:30, col:63>
| |   | `-ReturnStmt 0x7fe8b21f9a78 <col:31, col:61>
| |   |   `-CallExpr 0x7fe8b21f9a48 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fe8b21f9a30 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fe8b21f99f8 <col:38, col:40> 'double (double)' lvalue Function 0x7fe8b2006f10 'log2' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fe8b21f96f0 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fe8b21f96b0 <col:53> '_A1' lvalue ParmVar 0x7fe8b21f9400 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fe8b21f95c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fe8b21f9610 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21f9b90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1312:1, col:109> col:46 logb 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21f9af8 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fe8b21f9d80 <col:83, col:109>
| | | `-ReturnStmt 0x7fe8b21f9d68 <col:84, col:107>
| | |   `-CallExpr 0x7fe8b21f9d20 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fe8b21f9d08 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21f9ca8 <col:91, col:93> 'float (float)' lvalue Function 0x7fe8b2007730 'logbf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fe8b21f9d50 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21f9ce0 <col:99> 'float' lvalue ParmVar 0x7fe8b21f9af8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fe8b21f9c30 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21f9c78 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21f9e80 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1313:1, col:109> col:46 logb 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21f9de8 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fe8b21fa070 <col:83, col:109>
| | | `-ReturnStmt 0x7fe8b21fa058 <col:84, col:107>
| | |   `-CallExpr 0x7fe8b21fa010 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fe8b21f9ff8 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21f9f98 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fe8b2008a90 'logbl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fe8b21fa040 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21f9fd0 <col:99> 'long double' lvalue ParmVar 0x7fe8b21f9de8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fe8b21f9f20 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21f9f68 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fe8b21fa530 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1315:1, line:1318:63> col:1 logb
| | |-TemplateTypeParmDecl 0x7fe8b21fa090 <line:1315:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fe8b21fa498 <line:1316:1, line:1318:63> col:1 logb 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fe8b21fa3c0 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fe8b21faa50 <col:30, col:63>
| |   | `-ReturnStmt 0x7fe8b21faa38 <col:31, col:61>
| |   |   `-CallExpr 0x7fe8b21faa08 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fe8b21fa9f0 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fe8b21fa9b8 <col:38, col:40> 'double (double)' lvalue Function 0x7fe8b20088f0 'logb' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fe8b21fa6b0 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fe8b21fa670 <col:53> '_A1' lvalue ParmVar 0x7fe8b21fa3c0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fe8b21fa588 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fe8b21fa5d0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21fab50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1322:1, col:104> col:39 lrint 'long (float) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21faab8 <col:45, col:51> col:51 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fe8b21fad70 <col:77, col:104>
| | | `-ReturnStmt 0x7fe8b21fad58 <col:78, col:102>
| | |   `-CallExpr 0x7fe8b21fad10 <col:85, col:102> 'long'
| | |     |-ImplicitCastExpr 0x7fe8b21facf8 <col:85, col:87> 'long (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21fac68 <col:85, col:87> 'long (float)' lvalue Function 0x7fe8b2011c68 'lrintf' 'long (float)'
| | |     `-ImplicitCastExpr 0x7fe8b21fad40 <col:94> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21faca0 <col:94> 'float' lvalue ParmVar 0x7fe8b21faab8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fe8b21fabf0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21fac38 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21fae70 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1323:1, col:104> col:39 lrint 'long (long double) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21fadd8 <col:45, col:57> col:57 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fe8b21fb090 <col:77, col:104>
| | | `-ReturnStmt 0x7fe8b21fb078 <col:78, col:102>
| | |   `-CallExpr 0x7fe8b21fb030 <col:85, col:102> 'long'
| | |     |-ImplicitCastExpr 0x7fe8b21fb018 <col:85, col:87> 'long (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21faf88 <col:85, col:87> 'long (long double)' lvalue Function 0x7fe8b20120a8 'lrintl' 'long (long double)'
| | |     `-ImplicitCastExpr 0x7fe8b21fb060 <col:94> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21fafc0 <col:94> 'long double' lvalue ParmVar 0x7fe8b21fadd8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fe8b21faf10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21faf58 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fe8b21fb640 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1325:1, line:1328:65> col:1 lrint
| | |-TemplateTypeParmDecl 0x7fe8b21fb0b0 <line:1325:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fe8b21fb5a8 <line:1326:1, line:1328:65> col:1 lrint 'typename std::enable_if<std::is_integral<_A1>::value, long>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fe8b21fb490 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fe8b21fbdf8 <col:31, col:65>
| |   | `-ReturnStmt 0x7fe8b21fbde0 <col:32, col:63>
| |   |   `-CallExpr 0x7fe8b21fbdb0 <col:39, col:63> 'long'
| |   |     |-ImplicitCastExpr 0x7fe8b21fbd98 <col:39, col:41> 'long (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fe8b21fbd38 <col:39, col:41> 'long (double)' lvalue Function 0x7fe8b2011e88 'lrint' 'long (double)'
| |   |     `-CStyleCastExpr 0x7fe8b21fb7c0 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fe8b21fb780 <col:55> '_A1' lvalue ParmVar 0x7fe8b21fb490 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fe8b21fb698 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fe8b21fb6e0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21fbef8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1332:1, col:106> col:39 lround 'long (float) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21fbe60 <col:46, col:52> col:52 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fe8b21fc0e8 <col:78, col:106>
| | | `-ReturnStmt 0x7fe8b21fc0d0 <col:79, col:104>
| | |   `-CallExpr 0x7fe8b21fc088 <col:86, col:104> 'long'
| | |     |-ImplicitCastExpr 0x7fe8b21fc070 <col:86, col:88> 'long (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21fc010 <col:86, col:88> 'long (float)' lvalue Function 0x7fe8b2012768 'lroundf' 'long (float)'
| | |     `-ImplicitCastExpr 0x7fe8b21fc0b8 <col:96> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21fc048 <col:96> 'float' lvalue ParmVar 0x7fe8b21fbe60 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fe8b21fbf98 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21fbfe0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21fc1e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1333:1, col:106> col:39 lround 'long (long double) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21fc150 <col:46, col:58> col:58 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fe8b21fc3d8 <col:78, col:106>
| | | `-ReturnStmt 0x7fe8b21fc3c0 <col:79, col:104>
| | |   `-CallExpr 0x7fe8b21fc378 <col:86, col:104> 'long'
| | |     |-ImplicitCastExpr 0x7fe8b21fc360 <col:86, col:88> 'long (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21fc300 <col:86, col:88> 'long (long double)' lvalue Function 0x7fe8b2012aa8 'lroundl' 'long (long double)'
| | |     `-ImplicitCastExpr 0x7fe8b21fc3a8 <col:96> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21fc338 <col:96> 'long double' lvalue ParmVar 0x7fe8b21fc150 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fe8b21fc288 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21fc2d0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fe8b21fc8a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1335:1, line:1338:67> col:1 lround
| | |-TemplateTypeParmDecl 0x7fe8b21fc3f8 <line:1335:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fe8b21fc808 <line:1336:1, line:1338:67> col:1 lround 'typename std::enable_if<std::is_integral<_A1>::value, long>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fe8b21fc730 <col:8, col:12> col:12 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fe8b21fcdc0 <col:32, col:67>
| |   | `-ReturnStmt 0x7fe8b21fcda8 <col:33, col:65>
| |   |   `-CallExpr 0x7fe8b21fcd78 <col:40, col:65> 'long'
| |   |     |-ImplicitCastExpr 0x7fe8b21fcd60 <col:40, col:42> 'long (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fe8b21fcd28 <col:40, col:42> 'long (double)' lvalue Function 0x7fe8b2012908 'lround' 'long (double)'
| |   |     `-CStyleCastExpr 0x7fe8b21fca20 <col:49, col:57> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fe8b21fc9e0 <col:57> '_A1' lvalue ParmVar 0x7fe8b21fc730 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fe8b21fc8f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fe8b21fc940 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21fcec0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1344:1, col:119> col:46 nearbyint 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21fce28 <col:56, col:62> col:62 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fe8b21fd0b0 <col:88, col:119>
| | | `-ReturnStmt 0x7fe8b21fd098 <col:89, col:117>
| | |   `-CallExpr 0x7fe8b21fd050 <col:96, col:117> 'float'
| | |     |-ImplicitCastExpr 0x7fe8b21fd038 <col:96, col:98> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21fcfd8 <col:96, col:98> 'float (float)' lvalue Function 0x7fe8b2011268 'nearbyintf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fe8b21fd080 <col:109> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21fd010 <col:109> 'float' lvalue ParmVar 0x7fe8b21fce28 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fe8b21fcf60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21fcfa8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21fd1b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1345:1, col:119> col:46 nearbyint 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21fd118 <col:56, col:68> col:68 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fe8b21fd3a0 <col:88, col:119>
| | | `-ReturnStmt 0x7fe8b21fd388 <col:89, col:117>
| | |   `-CallExpr 0x7fe8b21fd340 <col:96, col:117> 'long double'
| | |     |-ImplicitCastExpr 0x7fe8b21fd328 <col:96, col:98> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21fd2c8 <col:96, col:98> 'long double (long double)' lvalue Function 0x7fe8b20115a8 'nearbyintl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fe8b21fd370 <col:109> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21fd300 <col:109> 'long double' lvalue ParmVar 0x7fe8b21fd118 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fe8b21fd250 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21fd298 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fe8b21fd860 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1347:1, line:1350:73> col:1 nearbyint
| | |-TemplateTypeParmDecl 0x7fe8b21fd3c0 <line:1347:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fe8b21fd7c8 <line:1348:1, line:1350:73> col:1 nearbyint 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fe8b21fd6f0 <col:11, col:15> col:15 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fe8b21fdd80 <col:35, col:73>
| |   | `-ReturnStmt 0x7fe8b21fdd68 <col:36, col:71>
| |   |   `-CallExpr 0x7fe8b21fdd38 <col:43, col:71> 'double'
| |   |     |-ImplicitCastExpr 0x7fe8b21fdd20 <col:43, col:45> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fe8b21fdce8 <col:43, col:45> 'double (double)' lvalue Function 0x7fe8b2011408 'nearbyint' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fe8b21fd9e0 <col:55, col:63> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fe8b21fd9a0 <col:63> '_A1' lvalue ParmVar 0x7fe8b21fd6f0 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fe8b21fd8b8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fe8b21fd900 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21fdf00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1354:1, col:151> col:46 nextafter 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21fdde8 <col:56, col:62> col:62 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fe8b21fde60 <col:72, col:78> col:78 used __lcpp_y 'float'
| | |-CompoundStmt 0x7fe8b21fe140 <col:110, col:151>
| | | `-ReturnStmt 0x7fe8b21fe128 <col:111, col:149>
| | |   `-CallExpr 0x7fe8b21fe0c0 <col:118, col:149> 'float'
| | |     |-ImplicitCastExpr 0x7fe8b21fe0a8 <col:118, col:120> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21fe020 <col:118, col:120> 'float (float, float)' lvalue Function 0x7fe8b2015f68 'nextafterf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7fe8b21fe0f8 <col:131> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fe8b21fe058 <col:131> 'float' lvalue ParmVar 0x7fe8b21fdde8 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fe8b21fe110 <col:141> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21fe080 <col:141> 'float' lvalue ParmVar 0x7fe8b21fde60 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7fe8b21fdfa8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21fdff0 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21fe2c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1355:1, col:151> col:46 nextafter 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21fe1a8 <col:56, col:68> col:68 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fe8b21fe220 <col:78, col:90> col:90 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fe8b21fe500 <col:110, col:151>
| | | `-ReturnStmt 0x7fe8b21fe4e8 <col:111, col:149>
| | |   `-CallExpr 0x7fe8b21fe480 <col:118, col:149> 'long double'
| | |     |-ImplicitCastExpr 0x7fe8b21fe468 <col:118, col:120> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21fe3e0 <col:118, col:120> 'long double (long double, long double)' lvalue Function 0x7fe8b20163b8 'nextafterl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fe8b21fe4b8 <col:131> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fe8b21fe418 <col:131> 'long double' lvalue ParmVar 0x7fe8b21fe1a8 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fe8b21fe4d0 <col:141> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21fe440 <col:141> 'long double' lvalue ParmVar 0x7fe8b21fe220 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fe8b21fe368 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21fe3b0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fe8b21fed60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1357:1, line:1371:1> line:1365:1 nextafter
| | |-TemplateTypeParmDecl 0x7fe8b21fe520 <line:1357:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fe8b21fe588 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fe8b21fecc8 <line:1358:1, line:1371:1> line:1365:1 nextafter 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fe8b21feb70 <col:11, col:15> col:15 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fe8b21febe0 <col:25, col:29> col:29 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fe8b21ff588 <line:1366:1, line:1371:1>
| |   | |-DeclStmt 0x7fe8b21fefd8 <line:1367:5, col:66>
| |   | | `-TypedefDecl 0x7fe8b21fef80 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fe8b21fef10 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fe8b21ff3d0 <line:1368:5, line:1369:68>
| |   | | `-StaticAssertDecl 0x7fe8b21ff398 <line:1368:5, line:1369:67> line:1368:5
| |   | |   |-ParenExpr 0x7fe8b21ff350 <col:19, line:1369:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fe8b21ff330 <line:1368:20, line:1369:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fe8b21ff310 <line:1368:21, line:1369:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fe8b21ff2e8 <line:1368:22, line:1369:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fe8b21ff148 <line:1368:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fe8b21ff2a8 <line:1369:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fe8b21ff370 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fe8b21ff570 <line:1370:5, col:72>
| |   |   `-CallExpr 0x7fe8b21ff538 <col:12, col:72> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fe8b21ff408 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'nextafter' 0x7fe8b2016190 0x7fe8b21fdf00 0x7fe8b21fe2c0 0x7fe8b21fed60
| |   |     |-CStyleCastExpr 0x7fe8b21ff4b0 <col:24, col:39> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fe8b21ff478 <col:39> '_A1' lvalue ParmVar 0x7fe8b21feb70 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fe8b21ff510 <col:49, col:64> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fe8b21ff4d8 <col:64> '_A2' lvalue ParmVar 0x7fe8b21febe0 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fe8b21fedc0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fe8b21fee08 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21ff718 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1375:1, col:153> col:46 nexttoward 'float (float, long double) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21ff600 <col:57, col:63> col:63 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fe8b21ff678 <col:73, col:85> col:85 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fe8b21ff980 <col:111, col:153>
| | | `-ReturnStmt 0x7fe8b21ff968 <col:112, col:151>
| | |   `-CallExpr 0x7fe8b21ff900 <col:119, col:151> 'float'
| | |     |-ImplicitCastExpr 0x7fe8b21ff8e8 <col:119, col:121> 'float (*)(float, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21ff838 <col:119, col:121> 'float (float, long double)' lvalue Function 0x7fe8b20078d8 'nexttowardf' 'float (float, long double)'
| | |     |-ImplicitCastExpr 0x7fe8b21ff938 <col:133> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fe8b21ff870 <col:133> 'float' lvalue ParmVar 0x7fe8b21ff600 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fe8b21ff950 <col:143> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21ff898 <col:143> 'long double' lvalue ParmVar 0x7fe8b21ff678 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fe8b21ff7c0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21ff808 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b21ffb00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1376:1, col:153> col:46 nexttoward 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fe8b21ff9e8 <col:57, col:69> col:69 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fe8b21ffa60 <col:79, col:91> col:91 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fe8b21ffd40 <col:111, col:153>
| | | `-ReturnStmt 0x7fe8b21ffd28 <col:112, col:151>
| | |   `-CallExpr 0x7fe8b21ffcc0 <col:119, col:151> 'long double'
| | |     |-ImplicitCastExpr 0x7fe8b21ffca8 <col:119, col:121> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b21ffc20 <col:119, col:121> 'long double (long double, long double)' lvalue Function 0x7fe8b2007b40 'nexttowardl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fe8b21ffcf8 <col:133> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fe8b21ffc58 <col:133> 'long double' lvalue ParmVar 0x7fe8b21ff9e8 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fe8b21ffd10 <col:143> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b21ffc80 <col:143> 'long double' lvalue ParmVar 0x7fe8b21ffa60 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fe8b21ffba8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b21ffbf0 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fe8b22002d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1378:1, line:1381:107> col:1 nexttoward
| | |-TemplateTypeParmDecl 0x7fe8b21ffd60 <line:1378:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fe8b2200238 <line:1379:1, line:1381:107> col:1 nexttoward 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1, long double) noexcept' inline
| |   |-ParmVarDecl 0x7fe8b2200090 <col:12, col:16> col:16 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fe8b2200108 <col:26, col:38> col:38 referenced __lcpp_y 'long double'
| |   |-CompoundStmt 0x7fe8b2200868 <col:58, col:107>
| |   | `-ReturnStmt 0x7fe8b2200850 <col:59, col:105>
| |   |   `-CallExpr 0x7fe8b2200800 <col:66, col:105> 'double'
| |   |     |-ImplicitCastExpr 0x7fe8b22007e8 <col:66, col:68> 'double (*)(double, long double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fe8b2200788 <col:66, col:68> 'double (double, long double)' lvalue Function 0x7fe8b2016628 'nexttoward' 'double (double, long double)'
| |   |     |-CStyleCastExpr 0x7fe8b2200458 <col:79, col:87> 'double' <Dependent>
| |   |     | `-DeclRefExpr 0x7fe8b2200418 <col:87> '_A1' lvalue ParmVar 0x7fe8b2200090 '__lcpp_x' '_A1'
| |   |     `-ImplicitCastExpr 0x7fe8b2200838 <col:97> 'long double' <LValueToRValue>
| |   |       `-DeclRefExpr 0x7fe8b2200480 <col:97> 'long double' lvalue ParmVar 0x7fe8b2200108 '__lcpp_y' 'long double'
| |   |-AlwaysInlineAttr 0x7fe8b2200330 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fe8b2200378 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b22009e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1385:1, col:151> col:46 remainder 'float (float, float) noexcept' inline
| | |-ParmVarDecl 0x7fe8b22008d0 <col:56, col:62> col:62 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fe8b2200948 <col:72, col:78> col:78 used __lcpp_y 'float'
| | |-CompoundStmt 0x7fe8b2200c28 <col:110, col:151>
| | | `-ReturnStmt 0x7fe8b2200c10 <col:111, col:149>
| | |   `-CallExpr 0x7fe8b2200ba8 <col:118, col:149> 'float'
| | |     |-ImplicitCastExpr 0x7fe8b2200b90 <col:118, col:120> 'float (*)(float, float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b2200b08 <col:118, col:120> 'float (float, float)' lvalue Function 0x7fe8b20143d8 'remainderf' 'float (float, float)'
| | |     |-ImplicitCastExpr 0x7fe8b2200be0 <col:131> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fe8b2200b40 <col:131> 'float' lvalue ParmVar 0x7fe8b22008d0 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fe8b2200bf8 <col:141> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b2200b68 <col:141> 'float' lvalue ParmVar 0x7fe8b2200948 '__lcpp_y' 'float'
| | |-AlwaysInlineAttr 0x7fe8b2200a90 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b2200ad8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b2200da8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1386:1, col:151> col:46 remainder 'long double (long double, long double) noexcept' inline
| | |-ParmVarDecl 0x7fe8b2200c90 <col:56, col:68> col:68 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fe8b2200d08 <col:78, col:90> col:90 used __lcpp_y 'long double'
| | |-CompoundStmt 0x7fe8b2200fe8 <col:110, col:151>
| | | `-ReturnStmt 0x7fe8b2200fd0 <col:111, col:149>
| | |   `-CallExpr 0x7fe8b2200f68 <col:118, col:149> 'long double'
| | |     |-ImplicitCastExpr 0x7fe8b2200f50 <col:118, col:120> 'long double (*)(long double, long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b2200ec8 <col:118, col:120> 'long double (long double, long double)' lvalue Function 0x7fe8b2014838 'remainderl' 'long double (long double, long double)'
| | |     |-ImplicitCastExpr 0x7fe8b2200fa0 <col:131> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fe8b2200f00 <col:131> 'long double' lvalue ParmVar 0x7fe8b2200c90 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fe8b2200fb8 <col:141> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b2200f28 <col:141> 'long double' lvalue ParmVar 0x7fe8b2200d08 '__lcpp_y' 'long double'
| | |-AlwaysInlineAttr 0x7fe8b2200e50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b2200e98 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fe8b2201850 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1388:1, line:1402:1> line:1396:1 remainder
| | |-TemplateTypeParmDecl 0x7fe8b2201008 <line:1388:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fe8b2201078 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fe8b22017b8 <line:1389:1, line:1402:1> line:1396:1 remainder 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2) noexcept' inline
| |   |-ParmVarDecl 0x7fe8b2201660 <col:11, col:15> col:15 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fe8b22016d0 <col:25, col:29> col:29 referenced __lcpp_y '_A2'
| |   |-CompoundStmt 0x7fe8b2202078 <line:1397:1, line:1402:1>
| |   | |-DeclStmt 0x7fe8b2201ac8 <line:1398:5, col:66>
| |   | | `-TypedefDecl 0x7fe8b2201a70 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fe8b2201a00 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fe8b2201ec0 <line:1399:5, line:1400:68>
| |   | | `-StaticAssertDecl 0x7fe8b2201e88 <line:1399:5, line:1400:67> line:1399:5
| |   | |   |-ParenExpr 0x7fe8b2201e40 <col:19, line:1400:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fe8b2201e20 <line:1399:20, line:1400:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fe8b2201e00 <line:1399:21, line:1400:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fe8b2201dd8 <line:1399:22, line:1400:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fe8b2201c38 <line:1399:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fe8b2201d98 <line:1400:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fe8b2201e60 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fe8b2202060 <line:1401:5, col:72>
| |   |   `-CallExpr 0x7fe8b2202028 <col:12, col:72> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fe8b2201ef8 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'remainder' 0x7fe8b2014600 0x7fe8b22009e8 0x7fe8b2200da8 0x7fe8b2201850
| |   |     |-CStyleCastExpr 0x7fe8b2201fa0 <col:24, col:39> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fe8b2201f68 <col:39> '_A1' lvalue ParmVar 0x7fe8b2201660 '__lcpp_x' '_A1'
| |   |     `-CStyleCastExpr 0x7fe8b2202000 <col:49, col:64> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |       `-DeclRefExpr 0x7fe8b2201fc8 <col:64> '_A2' lvalue ParmVar 0x7fe8b22016d0 '__lcpp_y' '_A2'
| |   |-AlwaysInlineAttr 0x7fe8b22018b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fe8b22018f8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b22022d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1406:1, col:170> col:46 remquo 'float (float, float, int *) noexcept' inline
| | |-ParmVarDecl 0x7fe8b22020f0 <col:53, col:59> col:59 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fe8b2202168 <col:69, col:75> col:75 used __lcpp_y 'float'
| | |-ParmVarDecl 0x7fe8b22021e0 <col:85, col:90> col:90 used __lcpp_z 'int *'
| | |-CompoundStmt 0x7fe8b2202590 <col:122, col:170>
| | | `-ReturnStmt 0x7fe8b2202578 <col:123, col:168>
| | |   `-CallExpr 0x7fe8b22024f0 <col:130, col:168> 'float'
| | |     |-ImplicitCastExpr 0x7fe8b22024d8 <col:130, col:132> 'float (*)(float, float, int *)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b22023f8 <col:130, col:132> 'float (float, float, int *)' lvalue Function 0x7fe8b2014b28 'remquof' 'float (float, float, int *)'
| | |     |-ImplicitCastExpr 0x7fe8b2202530 <col:140> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fe8b2202430 <col:140> 'float' lvalue ParmVar 0x7fe8b22020f0 '__lcpp_x' 'float'
| | |     |-ImplicitCastExpr 0x7fe8b2202548 <col:150> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fe8b2202458 <col:150> 'float' lvalue ParmVar 0x7fe8b2202168 '__lcpp_y' 'float'
| | |     `-ImplicitCastExpr 0x7fe8b2202560 <col:160> 'int *' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b2202480 <col:160> 'int *' lvalue ParmVar 0x7fe8b22021e0 '__lcpp_z' 'int *'
| | |-AlwaysInlineAttr 0x7fe8b2202380 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b22023c8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b22027e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1407:1, col:170> col:46 remquo 'long double (long double, long double, int *) noexcept' inline
| | |-ParmVarDecl 0x7fe8b2202600 <col:53, col:65> col:65 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fe8b2202678 <col:75, col:87> col:87 used __lcpp_y 'long double'
| | |-ParmVarDecl 0x7fe8b22026f0 <col:97, col:102> col:102 used __lcpp_z 'int *'
| | |-CompoundStmt 0x7fe8b2202aa0 <col:122, col:170>
| | | `-ReturnStmt 0x7fe8b2202a88 <col:123, col:168>
| | |   `-CallExpr 0x7fe8b2202a00 <col:130, col:168> 'long double'
| | |     |-ImplicitCastExpr 0x7fe8b22029e8 <col:130, col:132> 'long double (*)(long double, long double, int *)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b2202908 <col:130, col:132> 'long double (long double, long double, int *)' lvalue Function 0x7fe8b2015068 'remquol' 'long double (long double, long double, int *)'
| | |     |-ImplicitCastExpr 0x7fe8b2202a40 <col:140> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fe8b2202940 <col:140> 'long double' lvalue ParmVar 0x7fe8b2202600 '__lcpp_x' 'long double'
| | |     |-ImplicitCastExpr 0x7fe8b2202a58 <col:150> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fe8b2202968 <col:150> 'long double' lvalue ParmVar 0x7fe8b2202678 '__lcpp_y' 'long double'
| | |     `-ImplicitCastExpr 0x7fe8b2202a70 <col:160> 'int *' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b2202990 <col:160> 'int *' lvalue ParmVar 0x7fe8b22026f0 '__lcpp_z' 'int *'
| | |-AlwaysInlineAttr 0x7fe8b2202890 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b22028d8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fe8b22033e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1409:1, line:1423:1> line:1417:1 remquo
| | |-TemplateTypeParmDecl 0x7fe8b2202ac0 <line:1409:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | |-TemplateTypeParmDecl 0x7fe8b2202b28 <col:22, col:28> col:28 referenced class depth 0 index 1 _A2
| | `-FunctionDecl 0x7fe8b2203348 <line:1410:1, line:1423:1> line:1417:1 remquo 'typename std::__lazy_enable_if<std::is_arithmetic<_A1>::value && std::is_arithmetic<_A2>::value, std::__promote<_A1, _A2> >::type (_A1, _A2, int *) noexcept' inline
| |   |-ParmVarDecl 0x7fe8b2203110 <col:8, col:12> col:12 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fe8b2203180 <col:22, col:26> col:26 referenced __lcpp_y '_A2'
| |   |-ParmVarDecl 0x7fe8b22031f8 <col:36, col:41> col:41 referenced __lcpp_z 'int *'
| |   |-CompoundStmt 0x7fe8b2203c38 <line:1418:1, line:1423:1>
| |   | |-DeclStmt 0x7fe8b2203658 <line:1419:5, col:66>
| |   | | `-TypedefDecl 0x7fe8b2203600 <col:5, col:53> col:53 referenced __result_type 'typename std::__promote<_A1, _A2>::type'
| |   | |   `-DependentNameType 0x7fe8b2203590 'typename std::__promote<_A1, _A2>::type' dependent
| |   | |-DeclStmt 0x7fe8b2203a50 <line:1420:5, line:1421:68>
| |   | | `-StaticAssertDecl 0x7fe8b2203a18 <line:1420:5, line:1421:67> line:1420:5
| |   | |   |-ParenExpr 0x7fe8b22039d0 <col:19, line:1421:62> '<dependent type>'
| |   | |   | `-UnaryOperator 0x7fe8b22039b0 <line:1420:20, line:1421:61> '<dependent type>' prefix '!'
| |   | |   |   `-ParenExpr 0x7fe8b2203990 <line:1420:21, line:1421:61> '<dependent type>'
| |   | |   |     `-BinaryOperator 0x7fe8b2203968 <line:1420:22, line:1421:56> '<dependent type>' '&&'
| |   | |   |       |-DependentScopeDeclRefExpr 0x7fe8b22037c8 <line:1420:22, col:56> '<dependent type>' lvalue
| |   | |   |       `-DependentScopeDeclRefExpr 0x7fe8b2203928 <line:1421:22, col:56> '<dependent type>' lvalue
| |   | |   `-StringLiteral 0x7fe8b22039f0 <col:65> 'const char [1]' lvalue ""
| |   | `-ReturnStmt 0x7fe8b2203c20 <line:1422:5, col:79>
| |   |   `-CallExpr 0x7fe8b2203be0 <col:12, col:79> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x7fe8b2203a88 <col:12, col:14> '<overloaded function type>' lvalue (no ADL) = 'remquo' 0x7fe8b2014dc8 0x7fe8b22022d0 0x7fe8b22027e0 0x7fe8b22033e0
| |   |     |-CStyleCastExpr 0x7fe8b2203b30 <col:21, col:36> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fe8b2203af8 <col:36> '_A1' lvalue ParmVar 0x7fe8b2203110 '__lcpp_x' '_A1'
| |   |     |-CStyleCastExpr 0x7fe8b2203b90 <col:46, col:61> '__result_type':'typename std::__promote<_A1, _A2>::type' <Dependent>
| |   |     | `-DeclRefExpr 0x7fe8b2203b58 <col:61> '_A2' lvalue ParmVar 0x7fe8b2203180 '__lcpp_y' '_A2'
| |   |     `-DeclRefExpr 0x7fe8b2203bb8 <col:71> 'int *' lvalue ParmVar 0x7fe8b22031f8 '__lcpp_z' 'int *'
| |   |-AlwaysInlineAttr 0x7fe8b2203448 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fe8b2203490 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b2203d48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1427:1, col:109> col:46 rint 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fe8b2203cb0 <col:51, col:57> col:57 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fe8b2203f38 <col:83, col:109>
| | | `-ReturnStmt 0x7fe8b2203f20 <col:84, col:107>
| | |   `-CallExpr 0x7fe8b2203ed8 <col:91, col:107> 'float'
| | |     |-ImplicitCastExpr 0x7fe8b2203ec0 <col:91, col:93> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b2203e60 <col:91, col:93> 'float (float)' lvalue Function 0x7fe8b2011748 'rintf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fe8b2203f08 <col:99> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b2203e98 <col:99> 'float' lvalue ParmVar 0x7fe8b2203cb0 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fe8b2203de8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b2203e30 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b2204038 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1428:1, col:109> col:46 rint 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fe8b2203fa0 <col:51, col:63> col:63 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fe8b2204228 <col:83, col:109>
| | | `-ReturnStmt 0x7fe8b2204210 <col:84, col:107>
| | |   `-CallExpr 0x7fe8b22041c8 <col:91, col:107> 'long double'
| | |     |-ImplicitCastExpr 0x7fe8b22041b0 <col:91, col:93> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b2204150 <col:91, col:93> 'long double (long double)' lvalue Function 0x7fe8b2011a90 'rintl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fe8b22041f8 <col:99> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b2204188 <col:99> 'long double' lvalue ParmVar 0x7fe8b2203fa0 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fe8b22040d8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b2204120 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fe8b22046f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1430:1, line:1433:63> col:1 rint
| | |-TemplateTypeParmDecl 0x7fe8b2204248 <line:1430:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fe8b2204658 <line:1431:1, line:1433:63> col:1 rint 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fe8b2204580 <col:6, col:10> col:10 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fe8b2204c10 <col:30, col:63>
| |   | `-ReturnStmt 0x7fe8b2204bf8 <col:31, col:61>
| |   |   `-CallExpr 0x7fe8b2204bc8 <col:38, col:61> 'double'
| |   |     |-ImplicitCastExpr 0x7fe8b2204bb0 <col:38, col:40> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fe8b2204b78 <col:38, col:40> 'double (double)' lvalue Function 0x7fe8b20118f0 'rint' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fe8b2204870 <col:45, col:53> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fe8b2204830 <col:53> '_A1' lvalue ParmVar 0x7fe8b2204580 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fe8b2204748 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fe8b2204790 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b2204d10 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1437:1, col:111> col:46 round 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fe8b2204c78 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fe8b2204f00 <col:84, col:111>
| | | `-ReturnStmt 0x7fe8b2204ee8 <col:85, col:109>
| | |   `-CallExpr 0x7fe8b2204ea0 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7fe8b2204e88 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b2204e28 <col:92, col:94> 'float (float)' lvalue Function 0x7fe8b2012288 'roundf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fe8b2204ed0 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b2204e60 <col:101> 'float' lvalue ParmVar 0x7fe8b2204c78 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fe8b2204db0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b2204df8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b2205000 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1438:1, col:111> col:46 round 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fe8b2204f68 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fe8b22051f0 <col:84, col:111>
| | | `-ReturnStmt 0x7fe8b22051d8 <col:85, col:109>
| | |   `-CallExpr 0x7fe8b2205190 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7fe8b2205178 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b2205118 <col:92, col:94> 'long double (long double)' lvalue Function 0x7fe8b20125c8 'roundl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fe8b22051c0 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b2205150 <col:101> 'long double' lvalue ParmVar 0x7fe8b2204f68 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fe8b22050a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b22050e8 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fe8b22056b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1440:1, line:1443:65> col:1 round
| | |-TemplateTypeParmDecl 0x7fe8b2205210 <line:1440:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fe8b2205618 <line:1441:1, line:1443:65> col:1 round 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fe8b2205540 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fe8b2205bd0 <col:31, col:65>
| |   | `-ReturnStmt 0x7fe8b2205bb8 <col:32, col:63>
| |   |   `-CallExpr 0x7fe8b2205b88 <col:39, col:63> 'double'
| |   |     |-ImplicitCastExpr 0x7fe8b2205b70 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fe8b2205b38 <col:39, col:41> 'double (double)' lvalue Function 0x7fe8b2012428 'round' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fe8b2205830 <col:47, col:55> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fe8b22057f0 <col:55> '_A1' lvalue ParmVar 0x7fe8b2205540 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fe8b2205708 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fe8b2205750 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b2205d50 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1447:1, col:140> col:46 scalbln 'float (float, long) noexcept' inline
| | |-ParmVarDecl 0x7fe8b2205c38 <col:54, col:60> col:60 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fe8b2205cb0 <col:70, col:75> col:75 used __lcpp_y 'long'
| | |-CompoundStmt 0x7fe8b2205fc0 <col:101, col:140>
| | | `-ReturnStmt 0x7fe8b2205fa8 <col:102, col:138>
| | |   `-CallExpr 0x7fe8b2205f40 <col:109, col:138> 'float'
| | |     |-ImplicitCastExpr 0x7fe8b2205f28 <col:109, col:111> 'float (*)(float, long)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b2205e70 <col:109, col:111> 'float (float, long)' lvalue Function 0x7fe8b200d1a8 'scalblnf' 'float (float, long)'
| | |     |-ImplicitCastExpr 0x7fe8b2205f78 <col:120> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fe8b2205ea8 <col:120> 'float' lvalue ParmVar 0x7fe8b2205c38 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fe8b2205f90 <col:130> 'long' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b2205ed0 <col:130> 'long' lvalue ParmVar 0x7fe8b2205cb0 '__lcpp_y' 'long'
| | |-AlwaysInlineAttr 0x7fe8b2205df8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b2205e40 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b2206140 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1448:1, col:140> col:46 scalbln 'long double (long double, long) noexcept' inline
| | |-ParmVarDecl 0x7fe8b2206028 <col:54, col:66> col:66 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fe8b22060a0 <col:76, col:81> col:81 used __lcpp_y 'long'
| | |-CompoundStmt 0x7fe8b22063b0 <col:101, col:140>
| | | `-ReturnStmt 0x7fe8b2206398 <col:102, col:138>
| | |   `-CallExpr 0x7fe8b2206330 <col:109, col:138> 'long double'
| | |     |-ImplicitCastExpr 0x7fe8b2206318 <col:109, col:111> 'long double (*)(long double, long)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b2206260 <col:109, col:111> 'long double (long double, long)' lvalue Function 0x7fe8b200d708 'scalblnl' 'long double (long double, long)'
| | |     |-ImplicitCastExpr 0x7fe8b2206368 <col:120> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fe8b2206298 <col:120> 'long double' lvalue ParmVar 0x7fe8b2206028 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fe8b2206380 <col:130> 'long' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b22062c0 <col:130> 'long' lvalue ParmVar 0x7fe8b22060a0 '__lcpp_y' 'long'
| | |-AlwaysInlineAttr 0x7fe8b22061e8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b2206230 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fe8b2206970 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1450:1, line:1453:94> col:1 scalbln
| | |-TemplateTypeParmDecl 0x7fe8b22063d0 <line:1450:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fe8b22068d8 <line:1451:1, line:1453:94> col:1 scalbln 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1, long) noexcept' inline
| |   |-ParmVarDecl 0x7fe8b2206730 <col:9, col:13> col:13 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fe8b22067a8 <col:23, col:28> col:28 referenced __lcpp_y 'long'
| |   |-CompoundStmt 0x7fe8b2206f08 <col:48, col:94>
| |   | `-ReturnStmt 0x7fe8b2206ef0 <col:49, col:92>
| |   |   `-CallExpr 0x7fe8b2206ea0 <col:56, col:92> 'double'
| |   |     |-ImplicitCastExpr 0x7fe8b2206e88 <col:56, col:58> 'double (*)(double, long)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fe8b2206e28 <col:56, col:58> 'double (double, long)' lvalue Function 0x7fe8b200d458 'scalbln' 'double (double, long)'
| |   |     |-CStyleCastExpr 0x7fe8b2206af8 <col:66, col:74> 'double' <Dependent>
| |   |     | `-DeclRefExpr 0x7fe8b2206ab8 <col:74> '_A1' lvalue ParmVar 0x7fe8b2206730 '__lcpp_x' '_A1'
| |   |     `-ImplicitCastExpr 0x7fe8b2206ed8 <col:84> 'long' <LValueToRValue>
| |   |       `-DeclRefExpr 0x7fe8b2206b20 <col:84> 'long' lvalue ParmVar 0x7fe8b22067a8 '__lcpp_y' 'long'
| |   |-AlwaysInlineAttr 0x7fe8b22069d0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fe8b2206a18 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b2207088 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1457:1, col:137> col:46 scalbn 'float (float, int) noexcept' inline
| | |-ParmVarDecl 0x7fe8b2206f70 <col:53, col:59> col:59 used __lcpp_x 'float'
| | |-ParmVarDecl 0x7fe8b2206fe8 <col:69, col:73> col:73 used __lcpp_y 'int'
| | |-CompoundStmt 0x7fe8b22072c8 <col:99, col:137>
| | | `-ReturnStmt 0x7fe8b22072b0 <col:100, col:135>
| | |   `-CallExpr 0x7fe8b2207248 <col:107, col:135> 'float'
| | |     |-ImplicitCastExpr 0x7fe8b2207230 <col:107, col:109> 'float (*)(float, int)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b22071a8 <col:107, col:109> 'float (float, int)' lvalue Function 0x7fe8b200cae8 'scalbnf' 'float (float, int)'
| | |     |-ImplicitCastExpr 0x7fe8b2207280 <col:117> 'float' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fe8b22071e0 <col:117> 'float' lvalue ParmVar 0x7fe8b2206f70 '__lcpp_x' 'float'
| | |     `-ImplicitCastExpr 0x7fe8b2207298 <col:127> 'int' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b2207208 <col:127> 'int' lvalue ParmVar 0x7fe8b2206fe8 '__lcpp_y' 'int'
| | |-AlwaysInlineAttr 0x7fe8b2207130 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b2207178 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b2207448 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1458:1, col:137> col:46 scalbn 'long double (long double, int) noexcept' inline
| | |-ParmVarDecl 0x7fe8b2207330 <col:53, col:65> col:65 used __lcpp_x 'long double'
| | |-ParmVarDecl 0x7fe8b22073a8 <col:75, col:79> col:79 used __lcpp_y 'int'
| | |-CompoundStmt 0x7fe8b2207688 <col:99, col:137>
| | | `-ReturnStmt 0x7fe8b2207670 <col:100, col:135>
| | |   `-CallExpr 0x7fe8b2207608 <col:107, col:135> 'long double'
| | |     |-ImplicitCastExpr 0x7fe8b22075f0 <col:107, col:109> 'long double (*)(long double, int)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b2207568 <col:107, col:109> 'long double (long double, int)' lvalue Function 0x7fe8b200cf38 'scalbnl' 'long double (long double, int)'
| | |     |-ImplicitCastExpr 0x7fe8b2207640 <col:117> 'long double' <LValueToRValue>
| | |     | `-DeclRefExpr 0x7fe8b22075a0 <col:117> 'long double' lvalue ParmVar 0x7fe8b2207330 '__lcpp_x' 'long double'
| | |     `-ImplicitCastExpr 0x7fe8b2207658 <col:127> 'int' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b22075c8 <col:127> 'int' lvalue ParmVar 0x7fe8b22073a8 '__lcpp_y' 'int'
| | |-AlwaysInlineAttr 0x7fe8b22074f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b2207538 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fe8b2207be0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1460:1, line:1463:91> col:1 scalbn
| | |-TemplateTypeParmDecl 0x7fe8b22076a8 <line:1460:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fe8b2207b48 <line:1461:1, line:1463:91> col:1 scalbn 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1, int) noexcept' inline
| |   |-ParmVarDecl 0x7fe8b22079e0 <col:8, col:12> col:12 referenced __lcpp_x '_A1'
| |   |-ParmVarDecl 0x7fe8b2207a58 <col:22, col:26> col:26 referenced __lcpp_y 'int'
| |   |-CompoundStmt 0x7fe8b2208150 <col:46, col:91>
| |   | `-ReturnStmt 0x7fe8b2208138 <col:47, col:89>
| |   |   `-CallExpr 0x7fe8b22080e8 <col:54, col:89> 'double'
| |   |     |-ImplicitCastExpr 0x7fe8b22080d0 <col:54, col:56> 'double (*)(double, int)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fe8b2208098 <col:54, col:56> 'double (double, int)' lvalue Function 0x7fe8b200cd10 'scalbn' 'double (double, int)'
| |   |     |-CStyleCastExpr 0x7fe8b2207d68 <col:63, col:71> 'double' <Dependent>
| |   |     | `-DeclRefExpr 0x7fe8b2207d28 <col:71> '_A1' lvalue ParmVar 0x7fe8b22079e0 '__lcpp_x' '_A1'
| |   |     `-ImplicitCastExpr 0x7fe8b2208120 <col:81> 'int' <LValueToRValue>
| |   |       `-DeclRefExpr 0x7fe8b2207d90 <col:81> 'int' lvalue ParmVar 0x7fe8b2207a58 '__lcpp_y' 'int'
| |   |-AlwaysInlineAttr 0x7fe8b2207c40 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fe8b2207c88 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b2208250 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1467:1, col:113> col:46 tgamma 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fe8b22081b8 <col:53, col:59> col:59 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fe8b2208440 <col:85, col:113>
| | | `-ReturnStmt 0x7fe8b2208428 <col:86, col:111>
| | |   `-CallExpr 0x7fe8b22083e0 <col:93, col:111> 'float'
| | |     |-ImplicitCastExpr 0x7fe8b22083c8 <col:93, col:95> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b2208368 <col:93, col:95> 'float (float)' lvalue Function 0x7fe8b20103c0 'tgammaf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fe8b2208410 <col:103> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b22083a0 <col:103> 'float' lvalue ParmVar 0x7fe8b22081b8 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fe8b22082f0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b2208338 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b2208540 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1468:1, col:113> col:46 tgamma 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fe8b22084a8 <col:53, col:65> col:65 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fe8b2208730 <col:85, col:113>
| | | `-ReturnStmt 0x7fe8b2208718 <col:86, col:111>
| | |   `-CallExpr 0x7fe8b22086d0 <col:93, col:111> 'long double'
| | |     |-ImplicitCastExpr 0x7fe8b22086b8 <col:93, col:95> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b2208658 <col:93, col:95> 'long double (long double)' lvalue Function 0x7fe8b2010700 'tgammal' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fe8b2208700 <col:103> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b2208690 <col:103> 'long double' lvalue ParmVar 0x7fe8b22084a8 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fe8b22085e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b2208628 <col:51, col:74> Hidden
| |-FunctionTemplateDecl 0x7fe8b2208bf0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1470:1, line:1473:67> col:1 tgamma
| | |-TemplateTypeParmDecl 0x7fe8b2208750 <line:1470:11, col:17> col:17 referenced class depth 0 index 0 _A1
| | `-FunctionDecl 0x7fe8b2208b58 <line:1471:1, line:1473:67> col:1 tgamma 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
| |   |-ParmVarDecl 0x7fe8b2208a80 <col:8, col:12> col:12 referenced __lcpp_x '_A1'
| |   |-CompoundStmt 0x7fe8b2209110 <col:32, col:67>
| |   | `-ReturnStmt 0x7fe8b22090f8 <col:33, col:65>
| |   |   `-CallExpr 0x7fe8b22090c8 <col:40, col:65> 'double'
| |   |     |-ImplicitCastExpr 0x7fe8b22090b0 <col:40, col:42> 'double (*)(double)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x7fe8b2209078 <col:40, col:42> 'double (double)' lvalue Function 0x7fe8b2010560 'tgamma' 'double (double)'
| |   |     `-CStyleCastExpr 0x7fe8b2208d70 <col:49, col:57> 'double' <Dependent>
| |   |       `-DeclRefExpr 0x7fe8b2208d30 <col:57> '_A1' lvalue ParmVar 0x7fe8b2208a80 '__lcpp_x' '_A1'
| |   |-AlwaysInlineAttr 0x7fe8b2208c48 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| |   `-VisibilityAttr 0x7fe8b2208c90 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b2209210 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1477:1, col:111> col:46 trunc 'float (float) noexcept' inline
| | |-ParmVarDecl 0x7fe8b2209178 <col:52, col:58> col:58 used __lcpp_x 'float'
| | |-CompoundStmt 0x7fe8b2209400 <col:84, col:111>
| | | `-ReturnStmt 0x7fe8b22093e8 <col:85, col:109>
| | |   `-CallExpr 0x7fe8b22093a0 <col:92, col:109> 'float'
| | |     |-ImplicitCastExpr 0x7fe8b2209388 <col:92, col:94> 'float (*)(float)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b2209328 <col:92, col:94> 'float (float)' lvalue Function 0x7fe8b2013800 'truncf' 'float (float)'
| | |     `-ImplicitCastExpr 0x7fe8b22093d0 <col:101> 'float' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b2209360 <col:101> 'float' lvalue ParmVar 0x7fe8b2209178 '__lcpp_x' 'float'
| | |-AlwaysInlineAttr 0x7fe8b22092b0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b22092f8 <col:51, col:74> Hidden
| |-FunctionDecl 0x7fe8b2209500 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1478:1, col:111> col:46 trunc 'long double (long double) noexcept' inline
| | |-ParmVarDecl 0x7fe8b2209468 <col:52, col:64> col:64 used __lcpp_x 'long double'
| | |-CompoundStmt 0x7fe8b22096f0 <col:84, col:111>
| | | `-ReturnStmt 0x7fe8b22096d8 <col:85, col:109>
| | |   `-CallExpr 0x7fe8b2209690 <col:92, col:109> 'long double'
| | |     |-ImplicitCastExpr 0x7fe8b2209678 <col:92, col:94> 'long double (*)(long double)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x7fe8b2209618 <col:92, col:94> 'long double (long double)' lvalue Function 0x7fe8b2013b40 'truncl' 'long double (long double)'
| | |     `-ImplicitCastExpr 0x7fe8b22096c0 <col:101> 'long double' <LValueToRValue>
| | |       `-DeclRefExpr 0x7fe8b2209650 <col:101> 'long double' lvalue ParmVar 0x7fe8b2209468 '__lcpp_x' 'long double'
| | |-AlwaysInlineAttr 0x7fe8b22095a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
| | `-VisibilityAttr 0x7fe8b22095e8 <col:51, col:74> Hidden
| `-FunctionTemplateDecl 0x7fe8b2209bb0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/math.h:1480:1, line:1483:65> col:1 trunc
|   |-TemplateTypeParmDecl 0x7fe8b2209710 <line:1480:11, col:17> col:17 referenced class depth 0 index 0 _A1
|   `-FunctionDecl 0x7fe8b2209b18 <line:1481:1, line:1483:65> col:1 trunc 'typename std::enable_if<std::is_integral<_A1>::value, double>::type (_A1) noexcept' inline
|     |-ParmVarDecl 0x7fe8b2209a40 <col:7, col:11> col:11 referenced __lcpp_x '_A1'
|     |-CompoundStmt 0x7fe8b220a0d0 <col:31, col:65>
|     | `-ReturnStmt 0x7fe8b220a0b8 <col:32, col:63>
|     |   `-CallExpr 0x7fe8b220a088 <col:39, col:63> 'double'
|     |     |-ImplicitCastExpr 0x7fe8b220a070 <col:39, col:41> 'double (*)(double)' <FunctionToPointerDecay>
|     |     | `-DeclRefExpr 0x7fe8b220a038 <col:39, col:41> 'double (double)' lvalue Function 0x7fe8b20139a0 'trunc' 'double (double)'
|     |     `-CStyleCastExpr 0x7fe8b2209d30 <col:47, col:55> 'double' <Dependent>
|     |       `-DeclRefExpr 0x7fe8b2209cf0 <col:55> '_A1' lvalue ParmVar 0x7fe8b2209a40 '__lcpp_x' '_A1'
|     |-AlwaysInlineAttr 0x7fe8b2209c08 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:729:77> always_inline
|     `-VisibilityAttr 0x7fe8b2209c50 <col:51, col:74> Hidden
|-LinkageSpecDecl 0x7fe8b203f858 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/type_traits:439:12> col:12 implicit C
| `-FunctionDecl 0x7fe8b203f8a8 <col:12> col:12 implicit referenced __builtin_addressof 'void *(void &) noexcept' extern
|   |-ParmVarDecl 0x7fe8b203f940 <<invalid sloc>> <invalid sloc> 'void &'
|   |-NoThrowAttr 0x7fe8b203f9a8 <col:12> Implicit
|   `-ConstAttr 0x7fe8b203f9f0 <col:12> Implicit
|-LinkageSpecDecl 0x7fe8b2198540 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/limits:331:90> col:90 implicit C
| `-FunctionDecl 0x7fe8b2198590 <col:90> col:90 implicit used __builtin_huge_valf 'float (void) noexcept' extern
|   |-NoThrowAttr 0x7fe8b2198628 <col:90> Implicit
|   `-ConstAttr 0x7fe8b2198670 <col:90> Implicit
|-LinkageSpecDecl 0x7fe8b2198720 <line:332:91> col:91 implicit C
| `-FunctionDecl 0x7fe8b2198770 <col:91> col:91 implicit used __builtin_nanf 'float (const char *) noexcept' extern
|   |-ParmVarDecl 0x7fe8b2198808 <<invalid sloc>> <invalid sloc> 'const char *'
|   |-NoThrowAttr 0x7fe8b2198870 <col:91> Implicit
|   `-ConstAttr 0x7fe8b21988b8 <col:91> Implicit
|-LinkageSpecDecl 0x7fe8b2198a20 <line:333:95> col:95 implicit C
| `-FunctionDecl 0x7fe8b2198a70 <col:95> col:95 implicit used __builtin_nansf 'float (const char *) noexcept' extern
|   |-ParmVarDecl 0x7fe8b2198b08 <<invalid sloc>> <invalid sloc> 'const char *'
|   |-NoThrowAttr 0x7fe8b2198b70 <col:95> Implicit
|   `-ConstAttr 0x7fe8b2198bb8 <col:95> Implicit
|-LinkageSpecDecl 0x7fe8b219b670 <line:377:90> col:90 implicit C
| `-FunctionDecl 0x7fe8b219b6c0 <col:90> col:90 implicit used __builtin_huge_val 'double (void) noexcept' extern
|   |-NoThrowAttr 0x7fe8b219b758 <col:90> Implicit
|   `-ConstAttr 0x7fe8b219b7a0 <col:90> Implicit
|-LinkageSpecDecl 0x7fe8b219b850 <line:378:91> col:91 implicit C
| `-FunctionDecl 0x7fe8b219b8a0 <col:91> col:91 implicit used __builtin_nan 'double (const char *) noexcept' extern
|   |-ParmVarDecl 0x7fe8b219b938 <<invalid sloc>> <invalid sloc> 'const char *'
|   |-NoThrowAttr 0x7fe8b219b9a0 <col:91> Implicit
|   `-ConstAttr 0x7fe8b219b9e8 <col:91> Implicit
|-LinkageSpecDecl 0x7fe8b219bb50 <line:379:95> col:95 implicit C
| `-FunctionDecl 0x7fe8b219bba0 <col:95> col:95 implicit used __builtin_nans 'double (const char *) noexcept' extern
|   |-ParmVarDecl 0x7fe8b219bc38 <<invalid sloc>> <invalid sloc> 'const char *'
|   |-NoThrowAttr 0x7fe8b219bca0 <col:95> Implicit
|   `-ConstAttr 0x7fe8b219bce8 <col:95> Implicit
|-LinkageSpecDecl 0x7fe8b219e7c8 <line:423:90> col:90 implicit C
| `-FunctionDecl 0x7fe8b219e818 <col:90> col:90 implicit used __builtin_huge_vall 'long double (void) noexcept' extern
|   |-NoThrowAttr 0x7fe8b219e8b0 <col:90> Implicit
|   `-ConstAttr 0x7fe8b219e8f8 <col:90> Implicit
|-LinkageSpecDecl 0x7fe8b219e9a8 <line:424:91> col:91 implicit C
| `-FunctionDecl 0x7fe8b219e9f8 <col:91> col:91 implicit used __builtin_nanl 'long double (const char *) noexcept' extern
|   |-ParmVarDecl 0x7fe8b219ea90 <<invalid sloc>> <invalid sloc> 'const char *'
|   |-NoThrowAttr 0x7fe8b219eaf8 <col:91> Implicit
|   `-ConstAttr 0x7fe8b219eb40 <col:91> Implicit
|-LinkageSpecDecl 0x7fe8b219ecb0 <line:425:95> col:95 implicit C
| `-FunctionDecl 0x7fe8b219ed00 <col:95> col:95 implicit used __builtin_nansl 'long double (const char *) noexcept' extern
|   |-ParmVarDecl 0x7fe8b219ed98 <<invalid sloc>> <invalid sloc> 'const char *'
|   |-NoThrowAttr 0x7fe8b219ee00 <col:95> Implicit
|   `-ConstAttr 0x7fe8b219ee48 <col:95> Implicit
|-LinkageSpecDecl 0x7fe8b21babb0 </usr/include/math.h:557:25> col:25 implicit C
| `-FunctionDecl 0x7fe8b21bac00 <col:25> col:25 implicit referenced __builtin_isgreater 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7fe8b21bac98 <col:25> Implicit
|   `-ConstAttr 0x7fe8b21bace0 <col:25> Implicit
|-LinkageSpecDecl 0x7fe8b21bbf58 <line:558:30> col:30 implicit C
| `-FunctionDecl 0x7fe8b21bbfa8 <col:30> col:30 implicit referenced __builtin_isgreaterequal 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7fe8b21bc040 <col:30> Implicit
|   `-ConstAttr 0x7fe8b21bc088 <col:30> Implicit
|-LinkageSpecDecl 0x7fe8b21bd0c8 <line:559:22> col:22 implicit C
| `-FunctionDecl 0x7fe8b21bd118 <col:22> col:22 implicit referenced __builtin_isless 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7fe8b21bd1b0 <col:22> Implicit
|   `-ConstAttr 0x7fe8b21bd1f8 <col:22> Implicit
|-LinkageSpecDecl 0x7fe8b21be258 <line:560:27> col:27 implicit C
| `-FunctionDecl 0x7fe8b21be2a8 <col:27> col:27 implicit referenced __builtin_islessequal 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7fe8b21be340 <col:27> Implicit
|   `-ConstAttr 0x7fe8b21be388 <col:27> Implicit
|-LinkageSpecDecl 0x7fe8b21bf400 <line:561:29> col:29 implicit C
| `-FunctionDecl 0x7fe8b21bf450 <col:29> col:29 implicit referenced __builtin_islessgreater 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7fe8b21bf4e8 <col:29> Implicit
|   `-ConstAttr 0x7fe8b21bf530 <col:29> Implicit
|-LinkageSpecDecl 0x7fe8b21c0578 <line:562:27> col:27 implicit C
| `-FunctionDecl 0x7fe8b21c05c8 <col:27> col:27 implicit referenced __builtin_isunordered 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7fe8b21c0660 <col:27> Implicit
|   `-ConstAttr 0x7fe8b21c06a8 <col:27> Implicit
|-NamespaceDecl 0x7fe8b220a0f0 prev 0x7fe8b2179798 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:438:37, line:439:38> line:438:47 std
| |-original Namespace 0x7fe8b1865658 'std'
| `-NamespaceDecl 0x7fe8b220a158 prev 0x7fe8b2179800 <col:52, line:439:36> <scratch space>:440:1 __1 inline
|   |-original Namespace 0x7fe8b18656c0 '__1'
|   |-UsingDecl 0x7fe8b220a1c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:313:1, col:9> col:9 ::signbit
|   |-UsingShadowDecl 0x7fe8b220a218 <col:9> col:9 implicit FunctionTemplate 0x7fe8b21b1498 'signbit'
|   |-UsingShadowDecl 0x7fe8b220a260 <col:9> col:9 implicit FunctionTemplate 0x7fe8b21b1f90 'signbit'
|   |-UsingShadowDecl 0x7fe8b220a2a8 <col:9> col:9 implicit FunctionTemplate 0x7fe8b21b27e0 'signbit'
|   |-UsingDecl 0x7fe8b220a2f8 <line:314:1, col:9> col:9 ::fpclassify
|   |-UsingShadowDecl 0x7fe8b220a348 <col:9> col:9 implicit FunctionTemplate 0x7fe8b21b3860 'fpclassify'
|   |-UsingShadowDecl 0x7fe8b220a390 <col:9> col:9 implicit FunctionTemplate 0x7fe8b21b40e0 'fpclassify'
|   |-UsingDecl 0x7fe8b220a3e0 <line:315:1, col:9> col:9 ::isfinite
|   |-UsingShadowDecl 0x7fe8b220a430 <col:9> col:9 implicit FunctionTemplate 0x7fe8b21b5380 'isfinite'
|   |-UsingShadowDecl 0x7fe8b220a478 <col:9> col:9 implicit FunctionTemplate 0x7fe8b21b5d70 'isfinite'
|   |-UsingDecl 0x7fe8b220a4c8 <line:316:1, col:9> col:9 ::isinf
|   |-UsingShadowDecl 0x7fe8b220a518 <col:9> col:9 implicit FunctionTemplate 0x7fe8b21b6e00 'isinf'
|   |-UsingShadowDecl 0x7fe8b220a560 <col:9> col:9 implicit FunctionTemplate 0x7fe8b21b7700 'isinf'
|   |-UsingDecl 0x7fe8b220a5b0 <line:317:1, col:9> col:9 ::isnan
|   |-UsingShadowDecl 0x7fe8b220b600 <col:9> col:9 implicit FunctionTemplate 0x7fe8b21b8650 'isnan'
|   |-UsingShadowDecl 0x7fe8b220b648 <col:9> col:9 implicit FunctionTemplate 0x7fe8b21b8ed0 'isnan'
|   |-UsingDecl 0x7fe8b220b698 <line:318:1, col:9> col:9 ::isnormal
|   |-UsingShadowDecl 0x7fe8b220b6e8 <col:9> col:9 implicit FunctionTemplate 0x7fe8b21b9e40 'isnormal'
|   |-UsingShadowDecl 0x7fe8b220b730 <col:9> col:9 implicit FunctionTemplate 0x7fe8b21ba5d0 'isnormal'
|   |-UsingDecl 0x7fe8b220b780 <line:319:1, col:9> col:9 ::isgreater
|   |-UsingShadowDecl 0x7fe8b220b7d0 <col:9> col:9 implicit FunctionTemplate 0x7fe8b21bb660 'isgreater'
|   |-UsingDecl 0x7fe8b220b820 <line:320:1, col:9> col:9 ::isgreaterequal
|   |-UsingShadowDecl 0x7fe8b220b870 <col:9> col:9 implicit FunctionTemplate 0x7fe8b21bc8a0 'isgreaterequal'
|   |-UsingDecl 0x7fe8b220b8c0 <line:321:1, col:9> col:9 ::isless
|   |-UsingShadowDecl 0x7fe8b220b910 <col:9> col:9 implicit FunctionTemplate 0x7fe8b21bda30 'isless'
|   |-UsingDecl 0x7fe8b220b960 <line:322:1, col:9> col:9 ::islessequal
|   |-UsingShadowDecl 0x7fe8b220b9b0 <col:9> col:9 implicit FunctionTemplate 0x7fe8b21beba0 'islessequal'
|   |-UsingDecl 0x7fe8b220ba00 <line:323:1, col:9> col:9 ::islessgreater
|   |-UsingShadowDecl 0x7fe8b220ba50 <col:9> col:9 implicit FunctionTemplate 0x7fe8b21bfd50 'islessgreater'
|   |-UsingDecl 0x7fe8b220baa0 <line:324:1, col:9> col:9 ::isunordered
|   |-UsingShadowDecl 0x7fe8b220baf0 <col:9> col:9 implicit FunctionTemplate 0x7fe8b21c0ec0 'isunordered'
|   |-UsingDecl 0x7fe8b220bb40 <line:325:1, col:9> col:9 ::isunordered
|   |-UsingShadowDecl 0x7fe8b220bb90 prev 0x7fe8b220baf0 <col:9> col:9 implicit FunctionTemplate 0x7fe8b21c0ec0 'isunordered'
|   |-UsingDecl 0x7fe8b220bbe0 <line:327:1, col:9> col:9 ::float_t
|   |-UsingShadowDecl 0x7fe8b220bc30 <col:9> col:9 implicit Typedef 0x7fe8b1865840 'float_t'
|   | `-<<<NULL>>>
|   |-UsingDecl 0x7fe8b220bc80 <line:328:1, col:9> col:9 ::double_t
|   |-UsingShadowDecl 0x7fe8b220bcd0 <col:9> col:9 implicit Typedef 0x7fe8b18658b0 'double_t'
|   | `-<<<NULL>>>
|   |-UsingDecl 0x7fe8b220bd20 <line:331:1, col:9> col:9 ::abs
|   |-UsingShadowDecl 0x7fe8b220bd70 <col:9> col:9 implicit Function 0x7fe8b21c2400 'abs' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fe8b220bdb8 <col:9> col:9 implicit Function 0x7fe8b21c26f0 'abs' 'double (double) noexcept'
|   |-UsingShadowDecl 0x7fe8b220be00 <col:9> col:9 implicit Function 0x7fe8b21c29e0 'abs' 'long double (long double) noexcept'
|   |-UsingDecl 0x7fe8b220be50 <line:334:1, col:9> col:9 ::acos
|   |-UsingShadowDecl 0x7fe8b220bea0 <col:9> col:9 implicit Function 0x7fe8b190da48 'acos' 'double (double)'
|   |-UsingShadowDecl 0x7fe8b220bee8 <col:9> col:9 implicit Function 0x7fe8b21c2cd0 'acos' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fe8b220bf30 <col:9> col:9 implicit Function 0x7fe8b21c2fc0 'acos' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fe8b220bf78 <col:9> col:9 implicit FunctionTemplate 0x7fe8b21c3760 'acos'
|   |-UsingDecl 0x7fe8b220bfc8 <line:335:1, col:9> col:9 ::acosf
|   |-UsingShadowDecl 0x7fe8b220c018 <col:9> col:9 implicit Function 0x7fe8b190d8a8 'acosf' 'float (float)'
|   |-UsingDecl 0x7fe8b220c068 <line:336:1, col:9> col:9 ::asin
|   |-UsingShadowDecl 0x7fe8b220c0b8 <col:9> col:9 implicit Function 0x7fe8b190df28 'asin' 'double (double)'
|   |-UsingShadowDecl 0x7fe8b220c100 <col:9> col:9 implicit Function 0x7fe8b21c5360 'asin' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fe8b220c148 <col:9> col:9 implicit Function 0x7fe8b21c5650 'asin' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fe8b220c190 <col:9> col:9 implicit FunctionTemplate 0x7fe8b21c5d00 'asin'
|   |-UsingDecl 0x7fe8b220c1e0 <line:337:1, col:9> col:9 ::asinf
|   |-UsingShadowDecl 0x7fe8b220c230 <col:9> col:9 implicit Function 0x7fe8b190dd88 'asinf' 'float (float)'
|   |-UsingDecl 0x7fe8b220c280 <line:338:1, col:9> col:9 ::atan
|   |-UsingShadowDecl 0x7fe8b220c2d0 <col:9> col:9 implicit Function 0x7fe8b2000430 'atan' 'double (double)'
|   |-UsingShadowDecl 0x7fe8b220c318 <col:9> col:9 implicit Function 0x7fe8b21c6320 'atan' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fe8b220c360 <col:9> col:9 implicit Function 0x7fe8b21c6640 'atan' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fe8b220c3a8 <col:9> col:9 implicit FunctionTemplate 0x7fe8b21c6cf0 'atan'
|   |-UsingDecl 0x7fe8b220c3f8 <line:339:1, col:9> col:9 ::atanf
|   |-UsingShadowDecl 0x7fe8b220c448 <col:9> col:9 implicit Function 0x7fe8b2000290 'atanf' 'float (float)'
|   |-UsingDecl 0x7fe8b220c498 <line:340:1, col:9> col:9 ::atan2
|   |-UsingShadowDecl 0x7fe8b220c4e8 <col:9> col:9 implicit Function 0x7fe8b2000ae8 'atan2' 'double (double, double)'
|   |-UsingShadowDecl 0x7fe8b220c530 <col:9> col:9 implicit Function 0x7fe8b21c7390 'atan2' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7fe8b220c578 <col:9> col:9 implicit Function 0x7fe8b21c7780 'atan2' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fe8b220c5c0 <col:9> col:9 implicit FunctionTemplate 0x7fe8b21c8350 'atan2'
|   |-UsingDecl 0x7fe8b220c610 <line:341:1, col:9> col:9 ::atan2f
|   |-UsingShadowDecl 0x7fe8b220c660 <col:9> col:9 implicit Function 0x7fe8b2000838 'atan2f' 'float (float, float)'
|   |-UsingDecl 0x7fe8b220c6b0 <line:342:1, col:9> col:9 ::ceil
|   |-UsingShadowDecl 0x7fe8b220c700 <col:9> col:9 implicit Function 0x7fe8b2010a48 'ceil' 'double (double)'
|   |-UsingShadowDecl 0x7fe8b220c748 <col:9> col:9 implicit Function 0x7fe8b21c9d68 'ceil' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fe8b220c790 <col:9> col:9 implicit Function 0x7fe8b21ca058 'ceil' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fe8b220c7d8 <col:9> col:9 implicit FunctionTemplate 0x7fe8b21ca710 'ceil'
|   |-UsingDecl 0x7fe8b220c828 <line:343:1, col:9> col:9 ::ceilf
|   |-UsingShadowDecl 0x7fe8b220c878 <col:9> col:9 implicit Function 0x7fe8b20108a8 'ceilf' 'float (float)'
|   |-UsingDecl 0x7fe8b220c8c8 <line:344:1, col:9> col:9 ::cos
|   |-UsingShadowDecl 0x7fe8b220c918 <col:9> col:9 implicit Function 0x7fe8b20019a0 'cos' 'double (double)'
|   |-UsingShadowDecl 0x7fe8b220c960 <col:9> col:9 implicit Function 0x7fe8b21cad30 'cos' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fe8b220c9a8 <col:9> col:9 implicit Function 0x7fe8b21cb020 'cos' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fe8b220c9f0 <col:9> col:9 implicit FunctionTemplate 0x7fe8b21cb700 'cos'
|   |-UsingDecl 0x7fe8b220ca40 <line:345:1, col:9> col:9 ::cosf
|   |-UsingShadowDecl 0x7fe8b220ca90 <col:9> col:9 implicit Function 0x7fe8b2001800 'cosf' 'float (float)'
|   |-UsingDecl 0x7fe8b220cae0 <line:346:1, col:9> col:9 ::cosh
|   |-UsingShadowDecl 0x7fe8b220cb30 <col:9> col:9 implicit Function 0x7fe8b2003f30 'cosh' 'double (double)'
|   |-UsingShadowDecl 0x7fe8b220cb78 <col:9> col:9 implicit Function 0x7fe8b21cbd20 'cosh' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fe8b220cbc0 <col:9> col:9 implicit Function 0x7fe8b21cc010 'cosh' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fe8b220cc08 <col:9> col:9 implicit FunctionTemplate 0x7fe8b21cc6c0 'cosh'
|   |-UsingDecl 0x7fe8b220cc58 <line:347:1, col:9> col:9 ::coshf
|   |-UsingShadowDecl 0x7fe8b220cca8 <col:9> col:9 implicit Function 0x7fe8b2003d90 'coshf' 'float (float)'
|   |-UsingDecl 0x7fe8b220ccf8 <line:349:1, col:9> col:9 ::exp
|   |-UsingShadowDecl 0x7fe8b220cd48 <col:9> col:9 implicit Function 0x7fe8b20055f0 'exp' 'double (double)'
|   |-UsingShadowDecl 0x7fe8b220cd90 <col:9> col:9 implicit Function 0x7fe8b21ccce0 'exp' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fe8b220cdd8 <col:9> col:9 implicit Function 0x7fe8b21ccfd0 'exp' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fe8b220ce20 <col:9> col:9 implicit FunctionTemplate 0x7fe8b21cd6a0 'exp'
|   |-UsingDecl 0x7fe8b220ce70 <line:350:1, col:9> col:9 ::expf
|   |-UsingShadowDecl 0x7fe8b220cec0 <col:9> col:9 implicit Function 0x7fe8b2005450 'expf' 'float (float)'
|   |-UsingDecl 0x7fe8b220cf10 <line:352:1, col:9> col:9 ::fabs
|   |-UsingShadowDecl 0x7fe8b220cf60 <col:9> col:9 implicit Function 0x7fe8b200da90 'fabs' 'double (double)'
|   |-UsingShadowDecl 0x7fe8b220cfa8 <col:9> col:9 implicit Function 0x7fe8b21cdcc0 'fabs' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fe8b220cff0 <col:9> col:9 implicit Function 0x7fe8b21cdfb0 'fabs' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fe8b220d038 <col:9> col:9 implicit FunctionTemplate 0x7fe8b21ce660 'fabs'
|   |-UsingDecl 0x7fe8b220d088 <line:353:1, col:9> col:9 ::fabsf
|   |-UsingShadowDecl 0x7fe8b220d0d8 <col:9> col:9 implicit Function 0x7fe8b200d8f0 'fabsf' 'float (float)'
|   |-UsingDecl 0x7fe8b220d128 <line:354:1, col:9> col:9 ::floor
|   |-UsingShadowDecl 0x7fe8b220d178 <col:9> col:9 implicit Function 0x7fe8b2010f28 'floor' 'double (double)'
|   |-UsingShadowDecl 0x7fe8b220d1c0 <col:9> col:9 implicit Function 0x7fe8b21cec80 'floor' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fe8b220d208 <col:9> col:9 implicit Function 0x7fe8b21cef70 'floor' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fe8b220d250 <col:9> col:9 implicit FunctionTemplate 0x7fe8b21cf640 'floor'
|   |-UsingDecl 0x7fe8b220d2a0 <line:355:1, col:9> col:9 ::floorf
|   |-UsingShadowDecl 0x7fe8b220d2f0 <col:9> col:9 implicit Function 0x7fe8b2010d88 'floorf' 'float (float)'
|   |-UsingDecl 0x7fe8b220d340 <line:357:1, col:9> col:9 ::fmod
|   |-UsingShadowDecl 0x7fe8b220d390 <col:9> col:9 implicit Function 0x7fe8b2013f88 'fmod' 'double (double, double)'
|   |-UsingShadowDecl 0x7fe8b220d3d8 <col:9> col:9 implicit Function 0x7fe8b21cfce0 'fmod' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7fe8b220d420 <col:9> col:9 implicit Function 0x7fe8b21d00a0 'fmod' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fe8b220d468 <col:9> col:9 implicit FunctionTemplate 0x7fe8b21d0b40 'fmod'
|   |-UsingDecl 0x7fe8b220d4b8 <line:358:1, col:9> col:9 ::fmodf
|   |-UsingShadowDecl 0x7fe8b220d508 <col:9> col:9 implicit Function 0x7fe8b2013d60 'fmodf' 'float (float, float)'
|   |-UsingDecl 0x7fe8b220d558 <line:360:1, col:9> col:9 ::frexp
|   |-UsingShadowDecl 0x7fe8b220d5a8 <col:9> col:9 implicit Function 0x7fe8b200b028 'frexp' 'double (double, int *)'
|   |-UsingShadowDecl 0x7fe8b220d5f0 <col:9> col:9 implicit Function 0x7fe8b21d1518 'frexp' 'float (float, int *) noexcept'
|   |-UsingShadowDecl 0x7fe8b220d638 <col:9> col:9 implicit Function 0x7fe8b21d1930 'frexp' 'long double (long double, int *) noexcept'
|   |-UsingShadowDecl 0x7fe8b220d680 <col:9> col:9 implicit FunctionTemplate 0x7fe8b21d2160 'frexp'
|   |-UsingDecl 0x7fe8b220d6d0 <line:361:1, col:9> col:9 ::frexpf
|   |-UsingShadowDecl 0x7fe8b220d720 <col:9> col:9 implicit Function 0x7fe8b200ad88 'frexpf' 'float (float, int *)'
|   |-UsingDecl 0x7fe8b220d770 <line:362:1, col:9> col:9 ::ldexp
|   |-UsingShadowDecl 0x7fe8b220d7c0 <col:9> col:9 implicit Function 0x7fe8b200a800 'ldexp' 'double (double, int)'
|   |-UsingShadowDecl 0x7fe8b220d808 <col:9> col:9 implicit Function 0x7fe8b21d2878 'ldexp' 'float (float, int) noexcept'
|   |-UsingShadowDecl 0x7fe8b220d850 <col:9> col:9 implicit Function 0x7fe8b21d2c60 'ldexp' 'long double (long double, int) noexcept'
|   |-UsingShadowDecl 0x7fe8b220d898 <col:9> col:9 implicit FunctionTemplate 0x7fe8b21d3498 'ldexp'
|   |-UsingDecl 0x7fe8b220d8e8 <line:363:1, col:9> col:9 ::ldexpf
|   |-UsingShadowDecl 0x7fe8b220d938 <col:9> col:9 implicit Function 0x7fe8b2009538 'ldexpf' 'float (float, int)'
|   |-UsingDecl 0x7fe8b220d988 <line:365:1, col:9> col:9 ::log
|   |-UsingShadowDecl 0x7fe8b220d9d8 <col:9> col:9 implicit Function 0x7fe8b2006500 'log' 'double (double)'
|   |-UsingShadowDecl 0x7fe8b220da20 <col:9> col:9 implicit Function 0x7fe8b21d3b38 'log' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fe8b220da68 <col:9> col:9 implicit Function 0x7fe8b21d3e28 'log' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fe8b220dab0 <col:9> col:9 implicit FunctionTemplate 0x7fe8b21d44e0 'log'
|   |-UsingDecl 0x7fe8b220db00 <line:366:1, col:9> col:9 ::logf
|   |-UsingShadowDecl 0x7fe8b220db50 <col:9> col:9 implicit Function 0x7fe8b2006360 'logf' 'float (float)'
|   |-UsingDecl 0x7fe8b220dba0 <line:368:1, col:9> col:9 ::log10
|   |-UsingShadowDecl 0x7fe8b220dbf0 <col:9> col:9 implicit Function 0x7fe8b2006a30 'log10' 'double (double)'
|   |-UsingShadowDecl 0x7fe8b220dc38 <col:9> col:9 implicit Function 0x7fe8b21d4b00 'log10' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fe8b220dc80 <col:9> col:9 implicit Function 0x7fe8b21d4df0 'log10' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fe8b220dcc8 <col:9> col:9 implicit FunctionTemplate 0x7fe8b21d54d8 'log10'
|   |-UsingDecl 0x7fe8b220dd18 <line:369:1, col:9> col:9 ::log10f
|   |-UsingShadowDecl 0x7fe8b220dd68 <col:9> col:9 implicit Function 0x7fe8b2006890 'log10f' 'float (float)'
|   |-UsingDecl 0x7fe8b220ddb8 <line:370:1, col:9> col:9 ::modf
|   |-UsingShadowDecl 0x7fe8b220de08 <col:9> col:9 implicit Function 0x7fe8b2008fd8 'modf' 'double (double, double *)'
|   |-UsingShadowDecl 0x7fe8b220de50 <col:9> col:9 implicit Function 0x7fe8b21d5b80 'modf' 'float (float, float *) noexcept'
|   |-UsingShadowDecl 0x7fe8b220de98 <col:9> col:9 implicit Function 0x7fe8b21d5fa0 'modf' 'long double (long double, long double *) noexcept'
|   |-UsingDecl 0x7fe8b220dee8 <line:371:1, col:9> col:9 ::modff
|   |-UsingShadowDecl 0x7fe8b220df38 <col:9> col:9 implicit Function 0x7fe8b2008d18 'modff' 'float (float, float *)'
|   |-UsingDecl 0x7fe8b220df88 <line:373:1, col:9> col:9 ::pow
|   |-UsingShadowDecl 0x7fe8b220dfd8 <col:9> col:9 implicit Function 0x7fe8b200ec50 'pow' 'double (double, double)'
|   |-UsingShadowDecl 0x7fe8b220e020 <col:9> col:9 implicit Function 0x7fe8b21d63c0 'pow' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7fe8b220e068 <col:9> col:9 implicit Function 0x7fe8b21d6780 'pow' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fe8b220e0b0 <col:9> col:9 implicit FunctionTemplate 0x7fe8b21d7220 'pow'
|   |-UsingDecl 0x7fe8b220e100 <line:374:1, col:9> col:9 ::powf
|   |-UsingShadowDecl 0x7fe8b220e150 <col:9> col:9 implicit Function 0x7fe8b200ea28 'powf' 'float (float, float)'
|   |-UsingDecl 0x7fe8b220e1a0 <line:376:1, col:9> col:9 ::sin
|   |-UsingShadowDecl 0x7fe8b220e1f0 <col:9> col:9 implicit Function 0x7fe8b2001e80 'sin' 'double (double)'
|   |-UsingShadowDecl 0x7fe8b220e238 <col:9> col:9 implicit Function 0x7fe8b21d7b58 'sin' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fe8b220e280 <col:9> col:9 implicit Function 0x7fe8b21d7e48 'sin' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fe8b220e2c8 <col:9> col:9 implicit FunctionTemplate 0x7fe8b21d8500 'sin'
|   |-UsingDecl 0x7fe8b220e318 <line:377:1, col:9> col:9 ::sinf
|   |-UsingShadowDecl 0x7fe8b220e368 <col:9> col:9 implicit Function 0x7fe8b2001ce0 'sinf' 'float (float)'
|   |-UsingDecl 0x7fe8b220e3b8 <line:378:1, col:9> col:9 ::sinh
|   |-UsingShadowDecl 0x7fe8b220e408 <col:9> col:9 implicit Function 0x7fe8b2004c30 'sinh' 'double (double)'
|   |-UsingShadowDecl 0x7fe8b220e450 <col:9> col:9 implicit Function 0x7fe8b21d8b20 'sinh' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fe8b220e498 <col:9> col:9 implicit Function 0x7fe8b21d8e10 'sinh' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fe8b220e4e0 <col:9> col:9 implicit FunctionTemplate 0x7fe8b21db6d8 'sinh'
|   |-UsingDecl 0x7fe8b220e530 <line:379:1, col:9> col:9 ::sinhf
|   |-UsingShadowDecl 0x7fe8b220e580 <col:9> col:9 implicit Function 0x7fe8b2004a90 'sinhf' 'float (float)'
|   |-UsingDecl 0x7fe8b220e5d0 <line:381:1, col:9> col:9 ::sqrt
|   |-UsingShadowDecl 0x7fe8b220e620 <col:9> col:9 implicit Function 0x7fe8b200f1c0 'sqrt' 'double (double)'
|   |-UsingShadowDecl 0x7fe8b220e668 <col:9> col:9 implicit Function 0x7fe8b21dbd00 'sqrt' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fe8b220e6b0 <col:9> col:9 implicit Function 0x7fe8b21dbff0 'sqrt' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fe8b220e6f8 <col:9> col:9 implicit FunctionTemplate 0x7fe8b21dc6a0 'sqrt'
|   |-UsingDecl 0x7fe8b220e748 <line:382:1, col:9> col:9 ::sqrtf
|   |-UsingShadowDecl 0x7fe8b220e798 <col:9> col:9 implicit Function 0x7fe8b200f020 'sqrtf' 'float (float)'
|   |-UsingDecl 0x7fe8b220e7e8 <line:383:1, col:9> col:9 ::tan
|   |-UsingShadowDecl 0x7fe8b220e838 <col:9> col:9 implicit Function 0x7fe8b2002360 'tan' 'double (double)'
|   |-UsingShadowDecl 0x7fe8b220e880 <col:9> col:9 implicit Function 0x7fe8b21dccc0 'tan' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fe8b220e8c8 <col:9> col:9 implicit Function 0x7fe8b21dcfb0 'tan' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fe8b220e910 <col:9> col:9 implicit FunctionTemplate 0x7fe8b21dd698 'tan'
|   |-UsingDecl 0x7fe8b220e960 <line:384:1, col:9> col:9 ::tanf
|   |-UsingShadowDecl 0x7fe8b220e9b0 <col:9> col:9 implicit Function 0x7fe8b20021c0 'tanf' 'float (float)'
|   |-UsingDecl 0x7fe8b220ea00 <line:386:1, col:9> col:9 ::tanh
|   |-UsingShadowDecl 0x7fe8b220ea50 <col:9> col:9 implicit Function 0x7fe8b2005110 'tanh' 'double (double)'
|   |-UsingShadowDecl 0x7fe8b220ea98 <col:9> col:9 implicit Function 0x7fe8b21ddcc0 'tanh' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fe8b220eae0 <col:9> col:9 implicit Function 0x7fe8b21ddfb0 'tanh' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fe8b220eb28 <col:9> col:9 implicit FunctionTemplate 0x7fe8b21de660 'tanh'
|   |-UsingDecl 0x7fe8b220eb78 <line:387:1, col:9> col:9 ::tanhf
|   |-UsingShadowDecl 0x7fe8b220ebc8 <col:9> col:9 implicit Function 0x7fe8b2004f70 'tanhf' 'float (float)'
|   |-UsingDecl 0x7fe8b220ec18 <line:389:1, col:9> col:9 ::acosh
|   |-UsingShadowDecl 0x7fe8b220ec68 <col:9> col:9 implicit Function 0x7fe8b2003090 'acosh' 'double (double)'
|   |-UsingShadowDecl 0x7fe8b220ecb0 <col:9> col:9 implicit Function 0x7fe8b21dec80 'acosh' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fe8b220ecf8 <col:9> col:9 implicit Function 0x7fe8b21def70 'acosh' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fe8b220ed40 <col:9> col:9 implicit FunctionTemplate 0x7fe8b21df698 'acosh'
|   |-UsingDecl 0x7fe8b220ed90 <line:390:1, col:9> col:9 ::acoshf
|   |-UsingShadowDecl 0x7fe8b220ede0 <col:9> col:9 implicit Function 0x7fe8b20026a0 'acoshf' 'float (float)'
|   |-UsingDecl 0x7fe8b220ee30 <line:391:1, col:9> col:9 ::asinh
|   |-UsingShadowDecl 0x7fe8b220ee80 <col:9> col:9 implicit Function 0x7fe8b2003570 'asinh' 'double (double)'
|   |-UsingShadowDecl 0x7fe8b220eec8 <col:9> col:9 implicit Function 0x7fe8b21dfcc0 'asinh' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fe8b220ef10 <col:9> col:9 implicit Function 0x7fe8b21dffb0 'asinh' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fe8b220ef58 <col:9> col:9 implicit FunctionTemplate 0x7fe8b21e0660 'asinh'
|   |-UsingDecl 0x7fe8b220efa8 <line:392:1, col:9> col:9 ::asinhf
|   |-UsingShadowDecl 0x7fe8b220eff8 <col:9> col:9 implicit Function 0x7fe8b20033d0 'asinhf' 'float (float)'
|   |-UsingDecl 0x7fe8b220f048 <line:393:1, col:9> col:9 ::atanh
|   |-UsingShadowDecl 0x7fe8b220f098 <col:9> col:9 implicit Function 0x7fe8b2003a50 'atanh' 'double (double)'
|   |-UsingShadowDecl 0x7fe8b220f0e0 <col:9> col:9 implicit Function 0x7fe8b21e0c80 'atanh' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fe8b220f128 <col:9> col:9 implicit Function 0x7fe8b21e0f70 'atanh' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fe8b220f170 <col:9> col:9 implicit FunctionTemplate 0x7fe8b21e1698 'atanh'
|   |-UsingDecl 0x7fe8b220f1c0 <line:394:1, col:9> col:9 ::atanhf
|   |-UsingShadowDecl 0x7fe8b220f210 <col:9> col:9 implicit Function 0x7fe8b20038b0 'atanhf' 'float (float)'
|   |-UsingDecl 0x7fe8b220f260 <line:395:1, col:9> col:9 ::cbrt
|   |-UsingShadowDecl 0x7fe8b220f2b0 <col:9> col:9 implicit Function 0x7fe8b200df70 'cbrt' 'double (double)'
|   |-UsingShadowDecl 0x7fe8b220f2f8 <col:9> col:9 implicit Function 0x7fe8b21e1cc0 'cbrt' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fe8b220f340 <col:9> col:9 implicit Function 0x7fe8b21e1fb0 'cbrt' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fe8b220f388 <col:9> col:9 implicit FunctionTemplate 0x7fe8b21e2660 'cbrt'
|   |-UsingDecl 0x7fe8b220f3d8 <line:396:1, col:9> col:9 ::cbrtf
|   |-UsingShadowDecl 0x7fe8b220f428 <col:9> col:9 implicit Function 0x7fe8b200ddd0 'cbrtf' 'float (float)'
|   |-UsingDecl 0x7fe8b220f478 <line:398:1, col:9> col:9 ::copysign
|   |-UsingShadowDecl 0x7fe8b220f4c8 <col:9> col:9 implicit Function 0x7fe8b2015468 'copysign' 'double (double, double)'
|   |-UsingShadowDecl 0x7fe8b220f510 <col:9> col:9 implicit Function 0x7fe8b21e2d00 'copysign' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7fe8b220f558 <col:9> col:9 implicit Function 0x7fe8b21e30c0 'copysign' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fe8b220f5a0 <col:9> col:9 implicit FunctionTemplate 0x7fe8b21e3b80 'copysign'
|   |-UsingDecl 0x7fe8b220fe00 <line:399:1, col:9> col:9 ::copysignf
|   |-UsingShadowDecl 0x7fe8b220fe50 <col:9> col:9 implicit Function 0x7fe8b2015240 'copysignf' 'float (float, float)'
|   |-UsingDecl 0x7fe8b220fea0 <line:401:1, col:9> col:9 ::erf
|   |-UsingShadowDecl 0x7fe8b220fef0 <col:9> col:9 implicit Function 0x7fe8b200f6a0 'erf' 'double (double)'
|   |-UsingShadowDecl 0x7fe8b220ff38 <col:9> col:9 implicit Function 0x7fe8b21e44b8 'erf' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fe8b220ff80 <col:9> col:9 implicit Function 0x7fe8b21e47a8 'erf' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fe8b220ffc8 <col:9> col:9 implicit FunctionTemplate 0x7fe8b21e4e60 'erf'
|   |-UsingDecl 0x7fe8b2210018 <line:402:1, col:9> col:9 ::erff
|   |-UsingShadowDecl 0x7fe8b2210068 <col:9> col:9 implicit Function 0x7fe8b200f500 'erff' 'float (float)'
|   |-UsingDecl 0x7fe8b22100b8 <line:403:1, col:9> col:9 ::erfc
|   |-UsingShadowDecl 0x7fe8b2210108 <col:9> col:9 implicit Function 0x7fe8b200fbd0 'erfc' 'double (double)'
|   |-UsingShadowDecl 0x7fe8b2210150 <col:9> col:9 implicit Function 0x7fe8b21e5480 'erfc' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fe8b2210198 <col:9> col:9 implicit Function 0x7fe8b21e6778 'erfc' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fe8b22101e0 <col:9> col:9 implicit FunctionTemplate 0x7fe8b21e6e30 'erfc'
|   |-UsingDecl 0x7fe8b2210230 <line:404:1, col:9> col:9 ::erfcf
|   |-UsingShadowDecl 0x7fe8b2210280 <col:9> col:9 implicit Function 0x7fe8b200fa30 'erfcf' 'float (float)'
|   |-UsingDecl 0x7fe8b22102d0 <line:405:1, col:9> col:9 ::exp2
|   |-UsingShadowDecl 0x7fe8b2210320 <col:9> col:9 implicit Function 0x7fe8b2005b40 'exp2' 'double (double)'
|   |-UsingShadowDecl 0x7fe8b2210368 <col:9> col:9 implicit Function 0x7fe8b21e7450 'exp2' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fe8b22103b0 <col:9> col:9 implicit Function 0x7fe8b21e7740 'exp2' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fe8b22103f8 <col:9> col:9 implicit FunctionTemplate 0x7fe8b21e7df0 'exp2'
|   |-UsingDecl 0x7fe8b2210448 <line:406:1, col:9> col:9 ::exp2f
|   |-UsingShadowDecl 0x7fe8b2210498 <col:9> col:9 implicit Function 0x7fe8b20059a0 'exp2f' 'float (float)'
|   |-UsingDecl 0x7fe8b22104e8 <line:407:1, col:9> col:9 ::expm1
|   |-UsingShadowDecl 0x7fe8b2210538 <col:9> col:9 implicit Function 0x7fe8b2006020 'expm1' 'double (double)'
|   |-UsingShadowDecl 0x7fe8b2210580 <col:9> col:9 implicit Function 0x7fe8b21e8410 'expm1' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fe8b22105c8 <col:9> col:9 implicit Function 0x7fe8b21e8700 'expm1' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fe8b2210610 <col:9> col:9 implicit FunctionTemplate 0x7fe8b21e8db0 'expm1'
|   |-UsingDecl 0x7fe8b2210660 <line:408:1, col:9> col:9 ::expm1f
|   |-UsingShadowDecl 0x7fe8b22106b0 <col:9> col:9 implicit Function 0x7fe8b2005e80 'expm1f' 'float (float)'
|   |-UsingDecl 0x7fe8b2210700 <line:409:1, col:9> col:9 ::fdim
|   |-UsingShadowDecl 0x7fe8b2210750 <col:9> col:9 implicit Function 0x7fe8b2007f90 'fdim' 'double (double, double)'
|   |-UsingShadowDecl 0x7fe8b2210798 <col:9> col:9 implicit Function 0x7fe8b21e9450 'fdim' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7fe8b22107e0 <col:9> col:9 implicit Function 0x7fe8b21e9810 'fdim' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fe8b2210828 <col:9> col:9 implicit FunctionTemplate 0x7fe8b21ea2b0 'fdim'
|   |-UsingDecl 0x7fe8b2210878 <line:410:1, col:9> col:9 ::fdimf
|   |-UsingShadowDecl 0x7fe8b22108c8 <col:9> col:9 implicit Function 0x7fe8b2007d68 'fdimf' 'float (float, float)'
|   |-UsingDecl 0x7fe8b2210918 <line:411:1, col:9> col:9 ::fmaf
|   |-UsingShadowDecl 0x7fe8b2210968 <col:9> col:9 implicit Function 0x7fe8b201b1a8 'fmaf' 'float (float, float, float)'
|   |-UsingDecl 0x7fe8b22109b8 <line:412:1, col:9> col:9 ::fma
|   |-UsingShadowDecl 0x7fe8b2210a08 <col:9> col:9 implicit Function 0x7fe8b201b4f8 'fma' 'double (double, double, double)'
|   |-UsingShadowDecl 0x7fe8b2210a50 <col:9> col:9 implicit Function 0x7fe8b21ecd08 'fma' 'float (float, float, float) noexcept'
|   |-UsingShadowDecl 0x7fe8b2210a98 <col:9> col:9 implicit Function 0x7fe8b21ed1c0 'fma' 'long double (long double, long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fe8b2210ae0 <col:9> col:9 implicit FunctionTemplate 0x7fe8b21ee0d0 'fma'
|   |-UsingDecl 0x7fe8b2210b30 <line:413:1, col:9> col:9 ::fmax
|   |-UsingShadowDecl 0x7fe8b2210b80 <col:9> col:9 implicit Function 0x7fe8b2008608 'fmax' 'double (double, double)'
|   |-UsingShadowDecl 0x7fe8b2210bc8 <col:9> col:9 implicit Function 0x7fe8b21eee20 'fmax' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7fe8b2210c10 <col:9> col:9 implicit Function 0x7fe8b21ef1e0 'fmax' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fe8b2210c58 <col:9> col:9 implicit FunctionTemplate 0x7fe8b21efc80 'fmax'
|   |-UsingDecl 0x7fe8b2210ca8 <line:414:1, col:9> col:9 ::fmaxf
|   |-UsingShadowDecl 0x7fe8b2210cf8 <col:9> col:9 implicit Function 0x7fe8b20083e0 'fmaxf' 'float (float, float)'
|   |-UsingDecl 0x7fe8b2210d48 <line:415:1, col:9> col:9 ::fmin
|   |-UsingShadowDecl 0x7fe8b2210d98 <col:9> col:9 implicit Function 0x7fe8b201ac88 'fmin' 'double (double, double)'
|   |-UsingShadowDecl 0x7fe8b2210de0 <col:9> col:9 implicit Function 0x7fe8b21f0640 'fmin' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7fe8b2210e28 <col:9> col:9 implicit Function 0x7fe8b21f0a00 'fmin' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fe8b2210e70 <col:9> col:9 implicit FunctionTemplate 0x7fe8b21f14a0 'fmin'
|   |-UsingDecl 0x7fe8b2210ec0 <line:416:1, col:9> col:9 ::fminf
|   |-UsingShadowDecl 0x7fe8b2210f10 <col:9> col:9 implicit Function 0x7fe8b201aa60 'fminf' 'float (float, float)'
|   |-UsingDecl 0x7fe8b2210f60 <line:417:1, col:9> col:9 ::hypot
|   |-UsingShadowDecl 0x7fe8b2210fb0 <col:9> col:9 implicit Function 0x7fe8b200e558 'hypot' 'double (double, double)'
|   |-UsingShadowDecl 0x7fe8b2210ff8 <col:9> col:9 implicit Function 0x7fe8b21f1e58 'hypot' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7fe8b2211040 <col:9> col:9 implicit Function 0x7fe8b21f2218 'hypot' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fe8b2211088 <col:9> col:9 implicit FunctionTemplate 0x7fe8b21f2d00 'hypot'
|   |-UsingDecl 0x7fe8b22110d8 <line:418:1, col:9> col:9 ::hypotf
|   |-UsingShadowDecl 0x7fe8b2211128 <col:9> col:9 implicit Function 0x7fe8b200e330 'hypotf' 'float (float, float)'
|   |-UsingDecl 0x7fe8b2211178 <line:419:1, col:9> col:9 ::ilogb
|   |-UsingShadowDecl 0x7fe8b22111c8 <col:9> col:9 implicit Function 0x7fe8b200b678 'ilogb' 'int (double)'
|   |-UsingShadowDecl 0x7fe8b2211210 <col:9> col:9 implicit Function 0x7fe8b21f3638 'ilogb' 'int (float) noexcept'
|   |-UsingShadowDecl 0x7fe8b2211258 <col:9> col:9 implicit Function 0x7fe8b21f3928 'ilogb' 'int (long double) noexcept'
|   |-UsingShadowDecl 0x7fe8b22112a0 <col:9> col:9 implicit FunctionTemplate 0x7fe8b21f3fe0 'ilogb'
|   |-UsingDecl 0x7fe8b22112f0 <line:420:1, col:9> col:9 ::ilogbf
|   |-UsingShadowDecl 0x7fe8b2211340 <col:9> col:9 implicit Function 0x7fe8b200b4a0 'ilogbf' 'int (float)'
|   |-UsingDecl 0x7fe8b2211390 <line:421:1, col:9> col:9 ::lgamma
|   |-UsingShadowDecl 0x7fe8b22113e0 <col:9> col:9 implicit Function 0x7fe8b20100a0 'lgamma' 'double (double)'
|   |-UsingShadowDecl 0x7fe8b2211428 <col:9> col:9 implicit Function 0x7fe8b21f48b8 'lgamma' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fe8b2211470 <col:9> col:9 implicit Function 0x7fe8b21f4ba8 'lgamma' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fe8b22114b8 <col:9> col:9 implicit FunctionTemplate 0x7fe8b21f5260 'lgamma'
|   |-UsingDecl 0x7fe8b2211508 <line:422:1, col:9> col:9 ::lgammaf
|   |-UsingShadowDecl 0x7fe8b2211558 <col:9> col:9 implicit Function 0x7fe8b200ff10 'lgammaf' 'float (float)'
|   |-UsingDecl 0x7fe8b22115a8 <line:423:1, col:9> col:9 ::llrint
|   |-UsingShadowDecl 0x7fe8b22115f8 <col:9> col:9 implicit Function 0x7fe8b2012ea8 'llrint' 'long long (double)'
|   |-UsingShadowDecl 0x7fe8b2211640 <col:9> col:9 implicit Function 0x7fe8b21f5880 'llrint' 'long long (float) noexcept'
|   |-UsingShadowDecl 0x7fe8b2211688 <col:9> col:9 implicit Function 0x7fe8b21f5ba0 'llrint' 'long long (long double) noexcept'
|   |-UsingShadowDecl 0x7fe8b22116d0 <col:9> col:9 implicit FunctionTemplate 0x7fe8b21f6370 'llrint'
|   |-UsingDecl 0x7fe8b2211720 <line:424:1, col:9> col:9 ::llrintf
|   |-UsingShadowDecl 0x7fe8b2211770 <col:9> col:9 implicit Function 0x7fe8b2012c88 'llrintf' 'long long (float)'
|   |-UsingDecl 0x7fe8b22117c0 <line:425:1, col:9> col:9 ::llround
|   |-UsingShadowDecl 0x7fe8b2211810 <col:9> col:9 implicit Function 0x7fe8b2013448 'llround' 'long long (double)'
|   |-UsingShadowDecl 0x7fe8b2211858 <col:9> col:9 implicit Function 0x7fe8b21f6c48 'llround' 'long long (float) noexcept'
|   |-UsingShadowDecl 0x7fe8b22118a0 <col:9> col:9 implicit Function 0x7fe8b21f6f38 'llround' 'long long (long double) noexcept'
|   |-UsingShadowDecl 0x7fe8b22118e8 <col:9> col:9 implicit FunctionTemplate 0x7fe8b21f75f0 'llround'
|   |-UsingDecl 0x7fe8b2211938 <line:426:1, col:9> col:9 ::llroundf
|   |-UsingShadowDecl 0x7fe8b2211988 <col:9> col:9 implicit Function 0x7fe8b20132a8 'llroundf' 'long long (float)'
|   |-UsingDecl 0x7fe8b22119d8 <line:427:1, col:9> col:9 ::log1p
|   |-UsingShadowDecl 0x7fe8b2211a28 <col:9> col:9 implicit Function 0x7fe8b20073f0 'log1p' 'double (double)'
|   |-UsingShadowDecl 0x7fe8b2211a70 <col:9> col:9 implicit Function 0x7fe8b21f7c10 'log1p' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fe8b2211ab8 <col:9> col:9 implicit Function 0x7fe8b21f7f00 'log1p' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fe8b2211b00 <col:9> col:9 implicit FunctionTemplate 0x7fe8b21f85b0 'log1p'
|   |-UsingDecl 0x7fe8b2211b50 <line:428:1, col:9> col:9 ::log1pf
|   |-UsingShadowDecl 0x7fe8b2211ba0 <col:9> col:9 implicit Function 0x7fe8b2007250 'log1pf' 'float (float)'
|   |-UsingDecl 0x7fe8b2211bf0 <line:429:1, col:9> col:9 ::log2
|   |-UsingShadowDecl 0x7fe8b2211c40 <col:9> col:9 implicit Function 0x7fe8b2006f10 'log2' 'double (double)'
|   |-UsingShadowDecl 0x7fe8b2211c88 <col:9> col:9 implicit Function 0x7fe8b21f8bd0 'log2' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fe8b2211cd0 <col:9> col:9 implicit Function 0x7fe8b21f8ec0 'log2' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fe8b2211d18 <col:9> col:9 implicit FunctionTemplate 0x7fe8b21f9570 'log2'
|   |-UsingDecl 0x7fe8b2211d68 <line:430:1, col:9> col:9 ::log2f
|   |-UsingShadowDecl 0x7fe8b2211db8 <col:9> col:9 implicit Function 0x7fe8b2006d70 'log2f' 'float (float)'
|   |-UsingDecl 0x7fe8b2211e08 <line:431:1, col:9> col:9 ::logb
|   |-UsingShadowDecl 0x7fe8b2211e58 <col:9> col:9 implicit Function 0x7fe8b20088f0 'logb' 'double (double)'
|   |-UsingShadowDecl 0x7fe8b2211ea0 <col:9> col:9 implicit Function 0x7fe8b21f9b90 'logb' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fe8b2211ee8 <col:9> col:9 implicit Function 0x7fe8b21f9e80 'logb' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fe8b2211f30 <col:9> col:9 implicit FunctionTemplate 0x7fe8b21fa530 'logb'
|   |-UsingDecl 0x7fe8b2211f80 <line:432:1, col:9> col:9 ::logbf
|   |-UsingShadowDecl 0x7fe8b2211fd0 <col:9> col:9 implicit Function 0x7fe8b2007730 'logbf' 'float (float)'
|   |-UsingDecl 0x7fe8b2212020 <line:433:1, col:9> col:9 ::lrint
|   |-UsingShadowDecl 0x7fe8b2212070 <col:9> col:9 implicit Function 0x7fe8b2011e88 'lrint' 'long (double)'
|   |-UsingShadowDecl 0x7fe8b22120b8 <col:9> col:9 implicit Function 0x7fe8b21fab50 'lrint' 'long (float) noexcept'
|   |-UsingShadowDecl 0x7fe8b2212100 <col:9> col:9 implicit Function 0x7fe8b21fae70 'lrint' 'long (long double) noexcept'
|   |-UsingShadowDecl 0x7fe8b2212148 <col:9> col:9 implicit FunctionTemplate 0x7fe8b21fb640 'lrint'
|   |-UsingDecl 0x7fe8b2212198 <line:434:1, col:9> col:9 ::lrintf
|   |-UsingShadowDecl 0x7fe8b22121e8 <col:9> col:9 implicit Function 0x7fe8b2011c68 'lrintf' 'long (float)'
|   |-UsingDecl 0x7fe8b2212238 <line:435:1, col:9> col:9 ::lround
|   |-UsingShadowDecl 0x7fe8b2212288 <col:9> col:9 implicit Function 0x7fe8b2012908 'lround' 'long (double)'
|   |-UsingShadowDecl 0x7fe8b22122d0 <col:9> col:9 implicit Function 0x7fe8b21fbef8 'lround' 'long (float) noexcept'
|   |-UsingShadowDecl 0x7fe8b2212318 <col:9> col:9 implicit Function 0x7fe8b21fc1e8 'lround' 'long (long double) noexcept'
|   |-UsingShadowDecl 0x7fe8b2212360 <col:9> col:9 implicit FunctionTemplate 0x7fe8b21fc8a0 'lround'
|   |-UsingDecl 0x7fe8b22123b0 <line:436:1, col:9> col:9 ::lroundf
|   |-UsingShadowDecl 0x7fe8b2212400 <col:9> col:9 implicit Function 0x7fe8b2012768 'lroundf' 'long (float)'
|   |-UsingDecl 0x7fe8b2212450 <line:438:1, col:9> col:9 ::nan
|   |-UsingShadowDecl 0x7fe8b22124a0 <col:9> col:9 implicit Function 0x7fe8b2015ae8 'nan' 'double (const char *)'
|   |-UsingDecl 0x7fe8b22124f0 <line:439:1, col:9> col:9 ::nanf
|   |-UsingShadowDecl 0x7fe8b2212540 <col:9> col:9 implicit Function 0x7fe8b20158c8 'nanf' 'float (const char *)'
|   |-UsingDecl 0x7fe8b2212590 <line:441:1, col:9> col:9 ::nearbyint
|   |-UsingShadowDecl 0x7fe8b22125e0 <col:9> col:9 implicit Function 0x7fe8b2011408 'nearbyint' 'double (double)'
|   |-UsingShadowDecl 0x7fe8b2212628 <col:9> col:9 implicit Function 0x7fe8b21fcec0 'nearbyint' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fe8b2212670 <col:9> col:9 implicit Function 0x7fe8b21fd1b0 'nearbyint' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fe8b22126b8 <col:9> col:9 implicit FunctionTemplate 0x7fe8b21fd860 'nearbyint'
|   |-UsingDecl 0x7fe8b2212708 <line:442:1, col:9> col:9 ::nearbyintf
|   |-UsingShadowDecl 0x7fe8b2212758 <col:9> col:9 implicit Function 0x7fe8b2011268 'nearbyintf' 'float (float)'
|   |-UsingDecl 0x7fe8b22127a8 <line:443:1, col:9> col:9 ::nextafter
|   |-UsingShadowDecl 0x7fe8b22127f8 <col:9> col:9 implicit Function 0x7fe8b2016190 'nextafter' 'double (double, double)'
|   |-UsingShadowDecl 0x7fe8b2212840 <col:9> col:9 implicit Function 0x7fe8b21fdf00 'nextafter' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7fe8b2212888 <col:9> col:9 implicit Function 0x7fe8b21fe2c0 'nextafter' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fe8b22128d0 <col:9> col:9 implicit FunctionTemplate 0x7fe8b21fed60 'nextafter'
|   |-UsingDecl 0x7fe8b2212920 <line:444:1, col:9> col:9 ::nextafterf
|   |-UsingShadowDecl 0x7fe8b2212970 <col:9> col:9 implicit Function 0x7fe8b2015f68 'nextafterf' 'float (float, float)'
|   |-UsingDecl 0x7fe8b22129c0 <line:445:1, col:9> col:9 ::nexttoward
|   |-UsingShadowDecl 0x7fe8b2212a10 <col:9> col:9 implicit Function 0x7fe8b2016628 'nexttoward' 'double (double, long double)'
|   |-UsingShadowDecl 0x7fe8b2212a58 <col:9> col:9 implicit Function 0x7fe8b21ff718 'nexttoward' 'float (float, long double) noexcept'
|   |-UsingShadowDecl 0x7fe8b2212aa0 <col:9> col:9 implicit Function 0x7fe8b21ffb00 'nexttoward' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fe8b2212ae8 <col:9> col:9 implicit FunctionTemplate 0x7fe8b22002d0 'nexttoward'
|   |-UsingDecl 0x7fe8b2212b38 <line:446:1, col:9> col:9 ::nexttowardf
|   |-UsingShadowDecl 0x7fe8b2212b88 <col:9> col:9 implicit Function 0x7fe8b20078d8 'nexttowardf' 'float (float, long double)'
|   |-UsingDecl 0x7fe8b2212bd8 <line:447:1, col:9> col:9 ::remainder
|   |-UsingShadowDecl 0x7fe8b2212c28 <col:9> col:9 implicit Function 0x7fe8b2014600 'remainder' 'double (double, double)'
|   |-UsingShadowDecl 0x7fe8b2212c70 <col:9> col:9 implicit Function 0x7fe8b22009e8 'remainder' 'float (float, float) noexcept'
|   |-UsingShadowDecl 0x7fe8b2212cb8 <col:9> col:9 implicit Function 0x7fe8b2200da8 'remainder' 'long double (long double, long double) noexcept'
|   |-UsingShadowDecl 0x7fe8b2212d00 <col:9> col:9 implicit FunctionTemplate 0x7fe8b2201850 'remainder'
|   |-UsingDecl 0x7fe8b2212d50 <line:448:1, col:9> col:9 ::remainderf
|   |-UsingShadowDecl 0x7fe8b2212da0 <col:9> col:9 implicit Function 0x7fe8b20143d8 'remainderf' 'float (float, float)'
|   |-UsingDecl 0x7fe8b2212df0 <line:449:1, col:9> col:9 ::remquo
|   |-UsingShadowDecl 0x7fe8b2212e40 <col:9> col:9 implicit Function 0x7fe8b2014dc8 'remquo' 'double (double, double, int *)'
|   |-UsingShadowDecl 0x7fe8b2212e88 <col:9> col:9 implicit Function 0x7fe8b22022d0 'remquo' 'float (float, float, int *) noexcept'
|   |-UsingShadowDecl 0x7fe8b2212ed0 <col:9> col:9 implicit Function 0x7fe8b22027e0 'remquo' 'long double (long double, long double, int *) noexcept'
|   |-UsingShadowDecl 0x7fe8b2212f18 <col:9> col:9 implicit FunctionTemplate 0x7fe8b22033e0 'remquo'
|   |-UsingDecl 0x7fe8b2212f68 <line:450:1, col:9> col:9 ::remquof
|   |-UsingShadowDecl 0x7fe8b2212fb8 <col:9> col:9 implicit Function 0x7fe8b2014b28 'remquof' 'float (float, float, int *)'
|   |-UsingDecl 0x7fe8b2213008 <line:451:1, col:9> col:9 ::rint
|   |-UsingShadowDecl 0x7fe8b2213058 <col:9> col:9 implicit Function 0x7fe8b20118f0 'rint' 'double (double)'
|   |-UsingShadowDecl 0x7fe8b22130a0 <col:9> col:9 implicit Function 0x7fe8b2203d48 'rint' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fe8b22130e8 <col:9> col:9 implicit Function 0x7fe8b2204038 'rint' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fe8b2213130 <col:9> col:9 implicit FunctionTemplate 0x7fe8b22046f0 'rint'
|   |-UsingDecl 0x7fe8b2213180 <line:452:1, col:9> col:9 ::rintf
|   |-UsingShadowDecl 0x7fe8b22131d0 <col:9> col:9 implicit Function 0x7fe8b2011748 'rintf' 'float (float)'
|   |-UsingDecl 0x7fe8b2213220 <line:453:1, col:9> col:9 ::round
|   |-UsingShadowDecl 0x7fe8b2213270 <col:9> col:9 implicit Function 0x7fe8b2012428 'round' 'double (double)'
|   |-UsingShadowDecl 0x7fe8b22132b8 <col:9> col:9 implicit Function 0x7fe8b2204d10 'round' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fe8b2213300 <col:9> col:9 implicit Function 0x7fe8b2205000 'round' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fe8b2213348 <col:9> col:9 implicit FunctionTemplate 0x7fe8b22056b0 'round'
|   |-UsingDecl 0x7fe8b2213398 <line:454:1, col:9> col:9 ::roundf
|   |-UsingShadowDecl 0x7fe8b22133e8 <col:9> col:9 implicit Function 0x7fe8b2012288 'roundf' 'float (float)'
|   |-UsingDecl 0x7fe8b2213438 <line:455:1, col:9> col:9 ::scalbln
|   |-UsingShadowDecl 0x7fe8b2213488 <col:9> col:9 implicit Function 0x7fe8b200d458 'scalbln' 'double (double, long)'
|   |-UsingShadowDecl 0x7fe8b22134d0 <col:9> col:9 implicit Function 0x7fe8b2205d50 'scalbln' 'float (float, long) noexcept'
|   |-UsingShadowDecl 0x7fe8b2213518 <col:9> col:9 implicit Function 0x7fe8b2206140 'scalbln' 'long double (long double, long) noexcept'
|   |-UsingShadowDecl 0x7fe8b2213560 <col:9> col:9 implicit FunctionTemplate 0x7fe8b2206970 'scalbln'
|   |-UsingDecl 0x7fe8b22135b0 <line:456:1, col:9> col:9 ::scalblnf
|   |-UsingShadowDecl 0x7fe8b2213600 <col:9> col:9 implicit Function 0x7fe8b200d1a8 'scalblnf' 'float (float, long)'
|   |-UsingDecl 0x7fe8b2213650 <line:457:1, col:9> col:9 ::scalbn
|   |-UsingShadowDecl 0x7fe8b22136a0 <col:9> col:9 implicit Function 0x7fe8b200cd10 'scalbn' 'double (double, int)'
|   |-UsingShadowDecl 0x7fe8b22136e8 <col:9> col:9 implicit Function 0x7fe8b2207088 'scalbn' 'float (float, int) noexcept'
|   |-UsingShadowDecl 0x7fe8b2213730 <col:9> col:9 implicit Function 0x7fe8b2207448 'scalbn' 'long double (long double, int) noexcept'
|   |-UsingShadowDecl 0x7fe8b2213778 <col:9> col:9 implicit FunctionTemplate 0x7fe8b2207be0 'scalbn'
|   |-UsingDecl 0x7fe8b22137c8 <line:458:1, col:9> col:9 ::scalbnf
|   |-UsingShadowDecl 0x7fe8b2213818 <col:9> col:9 implicit Function 0x7fe8b200cae8 'scalbnf' 'float (float, int)'
|   |-UsingDecl 0x7fe8b2213868 <line:459:1, col:9> col:9 ::tgamma
|   |-UsingShadowDecl 0x7fe8b22138b8 <col:9> col:9 implicit Function 0x7fe8b2010560 'tgamma' 'double (double)'
|   |-UsingShadowDecl 0x7fe8b2213900 <col:9> col:9 implicit Function 0x7fe8b2208250 'tgamma' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fe8b2213948 <col:9> col:9 implicit Function 0x7fe8b2208540 'tgamma' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fe8b2213990 <col:9> col:9 implicit FunctionTemplate 0x7fe8b2208bf0 'tgamma'
|   |-UsingDecl 0x7fe8b22139e0 <line:460:1, col:9> col:9 ::tgammaf
|   |-UsingShadowDecl 0x7fe8b2213a30 <col:9> col:9 implicit Function 0x7fe8b20103c0 'tgammaf' 'float (float)'
|   |-UsingDecl 0x7fe8b2213a80 <line:461:1, col:9> col:9 ::trunc
|   |-UsingShadowDecl 0x7fe8b2213ad0 <col:9> col:9 implicit Function 0x7fe8b20139a0 'trunc' 'double (double)'
|   |-UsingShadowDecl 0x7fe8b2213b18 <col:9> col:9 implicit Function 0x7fe8b2209210 'trunc' 'float (float) noexcept'
|   |-UsingShadowDecl 0x7fe8b2213b60 <col:9> col:9 implicit Function 0x7fe8b2209500 'trunc' 'long double (long double) noexcept'
|   |-UsingShadowDecl 0x7fe8b2213ba8 <col:9> col:9 implicit FunctionTemplate 0x7fe8b2209bb0 'trunc'
|   |-UsingDecl 0x7fe8b2213bf8 <line:462:1, col:9> col:9 ::truncf
|   |-UsingShadowDecl 0x7fe8b2213c48 <col:9> col:9 implicit Function 0x7fe8b2013800 'truncf' 'float (float)'
|   |-UsingDecl 0x7fe8b2213c98 <line:464:1, col:9> col:9 ::acosl
|   |-UsingShadowDecl 0x7fe8b2213ce8 <col:9> col:9 implicit Function 0x7fe8b190dbe8 'acosl' 'long double (long double)'
|   |-UsingDecl 0x7fe8b2213d38 <line:465:1, col:9> col:9 ::asinl
|   |-UsingShadowDecl 0x7fe8b2213d88 <col:9> col:9 implicit Function 0x7fe8b20000f0 'asinl' 'long double (long double)'
|   |-UsingDecl 0x7fe8b2215e00 <line:466:1, col:9> col:9 ::atanl
|   |-UsingShadowDecl 0x7fe8b2215e50 <col:9> col:9 implicit Function 0x7fe8b20005d0 'atanl' 'long double (long double)'
|   |-UsingDecl 0x7fe8b2215ea0 <line:467:1, col:9> col:9 ::atan2l
|   |-UsingShadowDecl 0x7fe8b2215ef0 <col:9> col:9 implicit Function 0x7fe8b2000d98 'atan2l' 'long double (long double, long double)'
|   |-UsingDecl 0x7fe8b2215f40 <line:468:1, col:9> col:9 ::ceill
|   |-UsingShadowDecl 0x7fe8b2215f90 <col:9> col:9 implicit Function 0x7fe8b2010be8 'ceill' 'long double (long double)'
|   |-UsingDecl 0x7fe8b2215fe0 <line:469:1, col:9> col:9 ::cosl
|   |-UsingShadowDecl 0x7fe8b2216030 <col:9> col:9 implicit Function 0x7fe8b2001b40 'cosl' 'long double (long double)'
|   |-UsingDecl 0x7fe8b2216080 <line:470:1, col:9> col:9 ::coshl
|   |-UsingShadowDecl 0x7fe8b22160d0 <col:9> col:9 implicit Function 0x7fe8b20048f0 'coshl' 'long double (long double)'
|   |-UsingDecl 0x7fe8b2216120 <line:471:1, col:9> col:9 ::expl
|   |-UsingShadowDecl 0x7fe8b2216170 <col:9> col:9 implicit Function 0x7fe8b2005800 'expl' 'long double (long double)'
|   |-UsingDecl 0x7fe8b22161c0 <line:472:1, col:9> col:9 ::fabsl
|   |-UsingShadowDecl 0x7fe8b2216210 <col:9> col:9 implicit Function 0x7fe8b200dc30 'fabsl' 'long double (long double)'
|   |-UsingDecl 0x7fe8b2216260 <line:473:1, col:9> col:9 ::floorl
|   |-UsingShadowDecl 0x7fe8b22162b0 <col:9> col:9 implicit Function 0x7fe8b20110c8 'floorl' 'long double (long double)'
|   |-UsingDecl 0x7fe8b2216300 <line:474:1, col:9> col:9 ::fmodl
|   |-UsingShadowDecl 0x7fe8b2216350 <col:9> col:9 implicit Function 0x7fe8b20141b0 'fmodl' 'long double (long double, long double)'
|   |-UsingDecl 0x7fe8b22163a0 <line:475:1, col:9> col:9 ::frexpl
|   |-UsingShadowDecl 0x7fe8b22163f0 <col:9> col:9 implicit Function 0x7fe8b200b2c8 'frexpl' 'long double (long double, int *)'
|   |-UsingDecl 0x7fe8b2216440 <line:476:1, col:9> col:9 ::ldexpl
|   |-UsingShadowDecl 0x7fe8b2216490 <col:9> col:9 implicit Function 0x7fe8b200aab8 'ldexpl' 'long double (long double, int)'
|   |-UsingDecl 0x7fe8b22164e0 <line:477:1, col:9> col:9 ::logl
|   |-UsingShadowDecl 0x7fe8b2216530 <col:9> col:9 implicit Function 0x7fe8b20066a0 'logl' 'long double (long double)'
|   |-UsingDecl 0x7fe8b2216580 <line:478:1, col:9> col:9 ::log10l
|   |-UsingShadowDecl 0x7fe8b22165d0 <col:9> col:9 implicit Function 0x7fe8b2006bd0 'log10l' 'long double (long double)'
|   |-UsingDecl 0x7fe8b2216620 <line:479:1, col:9> col:9 ::modfl
|   |-UsingShadowDecl 0x7fe8b2216670 <col:9> col:9 implicit Function 0x7fe8b2009298 'modfl' 'long double (long double, long double *)'
|   |-UsingDecl 0x7fe8b22166c0 <line:480:1, col:9> col:9 ::powl
|   |-UsingShadowDecl 0x7fe8b2216710 <col:9> col:9 implicit Function 0x7fe8b200ee78 'powl' 'long double (long double, long double)'
|   |-UsingDecl 0x7fe8b2216760 <line:481:1, col:9> col:9 ::sinl
|   |-UsingShadowDecl 0x7fe8b22167b0 <col:9> col:9 implicit Function 0x7fe8b2002020 'sinl' 'long double (long double)'
|   |-UsingDecl 0x7fe8b2216800 <line:482:1, col:9> col:9 ::sinhl
|   |-UsingShadowDecl 0x7fe8b2216850 <col:9> col:9 implicit Function 0x7fe8b2004dd0 'sinhl' 'long double (long double)'
|   |-UsingDecl 0x7fe8b22168a0 <line:483:1, col:9> col:9 ::sqrtl
|   |-UsingShadowDecl 0x7fe8b22168f0 <col:9> col:9 implicit Function 0x7fe8b200f360 'sqrtl' 'long double (long double)'
|   |-UsingDecl 0x7fe8b2216940 <line:484:1, col:9> col:9 ::tanl
|   |-UsingShadowDecl 0x7fe8b2216990 <col:9> col:9 implicit Function 0x7fe8b2002500 'tanl' 'long double (long double)'
|   |-UsingDecl 0x7fe8b22169e0 <line:486:1, col:9> col:9 ::tanhl
|   |-UsingShadowDecl 0x7fe8b2216a30 <col:9> col:9 implicit Function 0x7fe8b20052b0 'tanhl' 'long double (long double)'
|   |-UsingDecl 0x7fe8b2216a80 <line:487:1, col:9> col:9 ::acoshl
|   |-UsingShadowDecl 0x7fe8b2216ad0 <col:9> col:9 implicit Function 0x7fe8b2003230 'acoshl' 'long double (long double)'
|   |-UsingDecl 0x7fe8b2216b20 <line:488:1, col:9> col:9 ::asinhl
|   |-UsingShadowDecl 0x7fe8b2216b70 <col:9> col:9 implicit Function 0x7fe8b2003710 'asinhl' 'long double (long double)'
|   |-UsingDecl 0x7fe8b2216bc0 <line:489:1, col:9> col:9 ::atanhl
|   |-UsingShadowDecl 0x7fe8b2216c10 <col:9> col:9 implicit Function 0x7fe8b2003bf0 'atanhl' 'long double (long double)'
|   |-UsingDecl 0x7fe8b2216c60 <line:490:1, col:9> col:9 ::cbrtl
|   |-UsingShadowDecl 0x7fe8b2216cb0 <col:9> col:9 implicit Function 0x7fe8b200e110 'cbrtl' 'long double (long double)'
|   |-UsingDecl 0x7fe8b2216d00 <line:492:1, col:9> col:9 ::copysignl
|   |-UsingShadowDecl 0x7fe8b2216d50 <col:9> col:9 implicit Function 0x7fe8b2015690 'copysignl' 'long double (long double, long double)'
|   |-UsingDecl 0x7fe8b2216da0 <line:494:1, col:9> col:9 ::erfl
|   |-UsingShadowDecl 0x7fe8b2216df0 <col:9> col:9 implicit Function 0x7fe8b200f890 'erfl' 'long double (long double)'
|   |-UsingDecl 0x7fe8b2216e40 <line:495:1, col:9> col:9 ::erfcl
|   |-UsingShadowDecl 0x7fe8b2216e90 <col:9> col:9 implicit Function 0x7fe8b200fd70 'erfcl' 'long double (long double)'
|   |-UsingDecl 0x7fe8b2216ee0 <line:496:1, col:9> col:9 ::exp2l
|   |-UsingShadowDecl 0x7fe8b2216f30 <col:9> col:9 implicit Function 0x7fe8b2005ce0 'exp2l' 'long double (long double)'
|   |-UsingDecl 0x7fe8b2216f80 <line:497:1, col:9> col:9 ::expm1l
|   |-UsingShadowDecl 0x7fe8b2216fd0 <col:9> col:9 implicit Function 0x7fe8b20061c0 'expm1l' 'long double (long double)'
|   |-UsingDecl 0x7fe8b2217020 <line:498:1, col:9> col:9 ::fdiml
|   |-UsingShadowDecl 0x7fe8b2217070 <col:9> col:9 implicit Function 0x7fe8b20081b8 'fdiml' 'long double (long double, long double)'
|   |-UsingDecl 0x7fe8b22170c0 <line:499:1, col:9> col:9 ::fmal
|   |-UsingShadowDecl 0x7fe8b2217110 <col:9> col:9 implicit Function 0x7fe8b200b888 'fmal' 'long double (long double, long double, long double)'
|   |-UsingDecl 0x7fe8b2217160 <line:500:1, col:9> col:9 ::fmaxl
|   |-UsingShadowDecl 0x7fe8b22171b0 <col:9> col:9 implicit Function 0x7fe8b201a838 'fmaxl' 'long double (long double, long double)'
|   |-UsingDecl 0x7fe8b2217200 <line:501:1, col:9> col:9 ::fminl
|   |-UsingShadowDecl 0x7fe8b2217250 <col:9> col:9 implicit Function 0x7fe8b201aeb0 'fminl' 'long double (long double, long double)'
|   |-UsingDecl 0x7fe8b22172a0 <line:502:1, col:9> col:9 ::hypotl
|   |-UsingShadowDecl 0x7fe8b22172f0 <col:9> col:9 implicit Function 0x7fe8b200e800 'hypotl' 'long double (long double, long double)'
|   |-UsingDecl 0x7fe8b2217340 <line:503:1, col:9> col:9 ::ilogbl
|   |-UsingShadowDecl 0x7fe8b2217390 <col:9> col:9 implicit Function 0x7fe8b200c890 'ilogbl' 'int (long double)'
|   |-UsingDecl 0x7fe8b22173e0 <line:504:1, col:9> col:9 ::lgammal
|   |-UsingShadowDecl 0x7fe8b2217430 <col:9> col:9 implicit Function 0x7fe8b2010230 'lgammal' 'long double (long double)'
|   |-UsingDecl 0x7fe8b2217480 <line:505:1, col:9> col:9 ::llrintl
|   |-UsingShadowDecl 0x7fe8b22174d0 <col:9> col:9 implicit Function 0x7fe8b20130c8 'llrintl' 'long long (long double)'
|   |-UsingDecl 0x7fe8b2217520 <line:506:1, col:9> col:9 ::llroundl
|   |-UsingShadowDecl 0x7fe8b2217570 <col:9> col:9 implicit Function 0x7fe8b20135e8 'llroundl' 'long long (long double)'
|   |-UsingDecl 0x7fe8b22175c0 <line:507:1, col:9> col:9 ::log1pl
|   |-UsingShadowDecl 0x7fe8b2217610 <col:9> col:9 implicit Function 0x7fe8b2007590 'log1pl' 'long double (long double)'
|   |-UsingDecl 0x7fe8b2217660 <line:508:1, col:9> col:9 ::log2l
|   |-UsingShadowDecl 0x7fe8b22176b0 <col:9> col:9 implicit Function 0x7fe8b20070b0 'log2l' 'long double (long double)'
|   |-UsingDecl 0x7fe8b2217700 <line:509:1, col:9> col:9 ::logbl
|   |-UsingShadowDecl 0x7fe8b2217750 <col:9> col:9 implicit Function 0x7fe8b2008a90 'logbl' 'long double (long double)'
|   |-UsingDecl 0x7fe8b22177a0 <line:510:1, col:9> col:9 ::lrintl
|   |-UsingShadowDecl 0x7fe8b22177f0 <col:9> col:9 implicit Function 0x7fe8b20120a8 'lrintl' 'long (long double)'
|   |-UsingDecl 0x7fe8b2217840 <line:511:1, col:9> col:9 ::lroundl
|   |-UsingShadowDecl 0x7fe8b2217890 <col:9> col:9 implicit Function 0x7fe8b2012aa8 'lroundl' 'long (long double)'
|   |-UsingDecl 0x7fe8b22178e0 <line:512:1, col:9> col:9 ::nanl
|   |-UsingShadowDecl 0x7fe8b2217930 <col:9> col:9 implicit Function 0x7fe8b2015d08 'nanl' 'long double (const char *)'
|   |-UsingDecl 0x7fe8b2217980 <line:513:1, col:9> col:9 ::nearbyintl
|   |-UsingShadowDecl 0x7fe8b22179d0 <col:9> col:9 implicit Function 0x7fe8b20115a8 'nearbyintl' 'long double (long double)'
|   |-UsingDecl 0x7fe8b2217a20 <line:514:1, col:9> col:9 ::nextafterl
|   |-UsingShadowDecl 0x7fe8b2217a70 <col:9> col:9 implicit Function 0x7fe8b20163b8 'nextafterl' 'long double (long double, long double)'
|   |-UsingDecl 0x7fe8b2217ac0 <line:515:1, col:9> col:9 ::nexttowardl
|   |-UsingShadowDecl 0x7fe8b2217b10 <col:9> col:9 implicit Function 0x7fe8b2007b40 'nexttowardl' 'long double (long double, long double)'
|   |-UsingDecl 0x7fe8b2217b60 <line:516:1, col:9> col:9 ::remainderl
|   |-UsingShadowDecl 0x7fe8b2217bb0 <col:9> col:9 implicit Function 0x7fe8b2014838 'remainderl' 'long double (long double, long double)'
|   |-UsingDecl 0x7fe8b2217c00 <line:517:1, col:9> col:9 ::remquol
|   |-UsingShadowDecl 0x7fe8b2217c50 <col:9> col:9 implicit Function 0x7fe8b2015068 'remquol' 'long double (long double, long double, int *)'
|   |-UsingDecl 0x7fe8b2217ca0 <line:518:1, col:9> col:9 ::rintl
|   |-UsingShadowDecl 0x7fe8b2217cf0 <col:9> col:9 implicit Function 0x7fe8b2011a90 'rintl' 'long double (long double)'
|   |-UsingDecl 0x7fe8b2217d40 <line:519:1, col:9> col:9 ::roundl
|   |-UsingShadowDecl 0x7fe8b2217d90 <col:9> col:9 implicit Function 0x7fe8b20125c8 'roundl' 'long double (long double)'
|   |-UsingDecl 0x7fe8b2217de0 <line:520:1, col:9> col:9 ::scalblnl
|   |-UsingShadowDecl 0x7fe8b2217e30 <col:9> col:9 implicit Function 0x7fe8b200d708 'scalblnl' 'long double (long double, long)'
|   |-UsingDecl 0x7fe8b2217e80 <line:521:1, col:9> col:9 ::scalbnl
|   |-UsingShadowDecl 0x7fe8b2217ed0 <col:9> col:9 implicit Function 0x7fe8b200cf38 'scalbnl' 'long double (long double, int)'
|   |-UsingDecl 0x7fe8b2217f20 <line:522:1, col:9> col:9 ::tgammal
|   |-UsingShadowDecl 0x7fe8b2217f70 <col:9> col:9 implicit Function 0x7fe8b2010700 'tgammal' 'long double (long double)'
|   |-UsingDecl 0x7fe8b2217fc0 <line:523:1, col:9> col:9 ::truncl
|   |-UsingShadowDecl 0x7fe8b2218010 <col:9> col:9 implicit Function 0x7fe8b2013b40 'truncl' 'long double (long double)'
|   |-FunctionTemplateDecl 0x7fe8b22184e0 <line:549:1, line:559:1> line:552:1 __libcpp_isnan
|   | |-TemplateTypeParmDecl 0x7fe8b2218058 <line:549:11, col:17> col:17 referenced class depth 0 index 0 _A1
|   | `-FunctionDecl 0x7fe8b2218448 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:559:1> line:552:1 constexpr __libcpp_isnan 'typename enable_if<is_floating_point<_A1>::value, _Bool>::type (_A1) noexcept'
|   |   |-ParmVarDecl 0x7fe8b2218370 <col:16, col:20> col:20 referenced __lcpp_x '_A1'
|   |   |-CompoundStmt 0x7fe8b2218768 <line:553:1, line:559:1>
|   |   | `-ReturnStmt 0x7fe8b2218750 <line:555:5, col:36>
|   |   |   `-CallExpr 0x7fe8b2218720 <col:12, col:36> '<dependent type>'
|   |   |     |-DeclRefExpr 0x7fe8b22186d0 <col:12> '<builtin fn type>' Function 0x7fe8b22185e0 '__builtin_isnan' 'int (...) noexcept'
|   |   |     `-DeclRefExpr 0x7fe8b22186f8 <col:28> '_A1' lvalue ParmVar 0x7fe8b2218370 '__lcpp_x' '_A1'
|   |   |-AlwaysInlineAttr 0x7fe8b2218538 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
|   |   `-VisibilityAttr 0x7fe8b2218580 <col:48, col:71> Hidden
|   |-FunctionTemplateDecl 0x7fe8b2218d00 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:561:1, line:567:1> line:564:1 __libcpp_isnan
|   | |-TemplateTypeParmDecl 0x7fe8b2218788 <line:561:11, col:17> col:17 referenced class depth 0 index 0 _A1
|   | `-FunctionDecl 0x7fe8b2218c68 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:567:1> line:564:1 constexpr __libcpp_isnan 'typename enable_if<!is_floating_point<_A1>::value, _Bool>::type (_A1) noexcept'
|   |   |-ParmVarDecl 0x7fe8b2218b50 <col:16, col:20> col:20 referenced __lcpp_x '_A1'
|   |   |-CompoundStmt 0x7fe8b2218e80 <line:565:1, line:567:1>
|   |   | `-ReturnStmt 0x7fe8b2218e68 <line:566:5, col:26>
|   |   |   `-CallExpr 0x7fe8b2218e38 <col:12, col:26> '<dependent type>'
|   |   |     |-UnresolvedLookupExpr 0x7fe8b2218db0 <col:12> '<overloaded function type>' lvalue (ADL) = 'isnan' 0x7fe8b220b648 0x7fe8b220b600
|   |   |     `-DeclRefExpr 0x7fe8b2218e10 <col:18> '_A1' lvalue ParmVar 0x7fe8b2218b50 '__lcpp_x' '_A1'
|   |   |-AlwaysInlineAttr 0x7fe8b2218d58 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
|   |   `-VisibilityAttr 0x7fe8b2218da0 <col:48, col:71> Hidden
|   |-FunctionTemplateDecl 0x7fe8b2219320 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:569:1, line:579:1> line:572:1 __libcpp_isinf
|   | |-TemplateTypeParmDecl 0x7fe8b2218ea0 <line:569:11, col:17> col:17 referenced class depth 0 index 0 _A1
|   | `-FunctionDecl 0x7fe8b2219288 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:579:1> line:572:1 constexpr __libcpp_isinf 'typename enable_if<is_floating_point<_A1>::value, _Bool>::type (_A1) noexcept'
|   |   |-ParmVarDecl 0x7fe8b22191b0 <col:16, col:20> col:20 referenced __lcpp_x '_A1'
|   |   |-CompoundStmt 0x7fe8b22195a8 <line:573:1, line:579:1>
|   |   | `-ReturnStmt 0x7fe8b2219590 <line:575:5, col:36>
|   |   |   `-CallExpr 0x7fe8b2219560 <col:12, col:36> '<dependent type>'
|   |   |     |-DeclRefExpr 0x7fe8b2219510 <col:12> '<builtin fn type>' Function 0x7fe8b2219420 '__builtin_isinf' 'int (...) noexcept'
|   |   |     `-DeclRefExpr 0x7fe8b2219538 <col:28> '_A1' lvalue ParmVar 0x7fe8b22191b0 '__lcpp_x' '_A1'
|   |   |-AlwaysInlineAttr 0x7fe8b2219378 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
|   |   `-VisibilityAttr 0x7fe8b22193c0 <col:48, col:71> Hidden
|   |-FunctionTemplateDecl 0x7fe8b2219a60 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:581:1, line:587:1> line:584:1 __libcpp_isinf
|   | |-TemplateTypeParmDecl 0x7fe8b22195c8 <line:581:11, col:17> col:17 referenced class depth 0 index 0 _A1
|   | `-FunctionDecl 0x7fe8b22199c8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:587:1> line:584:1 constexpr __libcpp_isinf 'typename enable_if<!is_floating_point<_A1>::value, _Bool>::type (_A1) noexcept'
|   |   |-ParmVarDecl 0x7fe8b22198f0 <col:16, col:20> col:20 referenced __lcpp_x '_A1'
|   |   |-CompoundStmt 0x7fe8b2219be0 <line:585:1, line:587:1>
|   |   | `-ReturnStmt 0x7fe8b2219bc8 <line:586:5, col:26>
|   |   |   `-CallExpr 0x7fe8b2219b98 <col:12, col:26> '<dependent type>'
|   |   |     |-UnresolvedLookupExpr 0x7fe8b2219b10 <col:12> '<overloaded function type>' lvalue (ADL) = 'isinf' 0x7fe8b220a560 0x7fe8b220a518
|   |   |     `-DeclRefExpr 0x7fe8b2219b70 <col:18> '_A1' lvalue ParmVar 0x7fe8b22198f0 '__lcpp_x' '_A1'
|   |   |-AlwaysInlineAttr 0x7fe8b2219ab8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
|   |   `-VisibilityAttr 0x7fe8b2219b00 <col:48, col:71> Hidden
|   |-FunctionTemplateDecl 0x7fe8b22220a0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:589:1, line:599:1> line:592:1 __libcpp_isfinite
|   | |-TemplateTypeParmDecl 0x7fe8b2219c00 <line:589:11, col:17> col:17 referenced class depth 0 index 0 _A1
|   | `-FunctionDecl 0x7fe8b2222008 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:599:1> line:592:1 constexpr __libcpp_isfinite 'typename enable_if<is_floating_point<_A1>::value, _Bool>::type (_A1) noexcept'
|   |   |-ParmVarDecl 0x7fe8b2221f30 <col:19, col:23> col:23 referenced __lcpp_x '_A1'
|   |   |-CompoundStmt 0x7fe8b2222328 <line:593:1, line:599:1>
|   |   | `-ReturnStmt 0x7fe8b2222310 <line:595:5, col:39>
|   |   |   `-CallExpr 0x7fe8b22222e0 <col:12, col:39> '<dependent type>'
|   |   |     |-DeclRefExpr 0x7fe8b2222290 <col:12> '<builtin fn type>' Function 0x7fe8b22221a0 '__builtin_isfinite' 'int (...) noexcept'
|   |   |     `-DeclRefExpr 0x7fe8b22222b8 <col:31> '_A1' lvalue ParmVar 0x7fe8b2221f30 '__lcpp_x' '_A1'
|   |   |-AlwaysInlineAttr 0x7fe8b22220f8 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
|   |   `-VisibilityAttr 0x7fe8b2222140 <col:48, col:71> Hidden
|   `-FunctionTemplateDecl 0x7fe8b22227e0 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:601:1, line:607:1> line:604:1 __libcpp_isfinite
|     |-TemplateTypeParmDecl 0x7fe8b2222348 <line:601:11, col:17> col:17 referenced class depth 0 index 0 _A1
|     `-FunctionDecl 0x7fe8b2222748 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:32, /usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:607:1> line:604:1 constexpr __libcpp_isfinite 'typename enable_if<!is_floating_point<_A1>::value, _Bool>::type (_A1) noexcept'
|       |-ParmVarDecl 0x7fe8b2222670 <col:19, col:23> col:23 referenced __lcpp_x '_A1'
|       |-CompoundStmt 0x7fe8b2222960 <line:605:1, line:607:1>
|       | `-ReturnStmt 0x7fe8b2222948 <line:606:5, col:29>
|       |   `-CallExpr 0x7fe8b2222918 <col:12, col:29> '<dependent type>'
|       |     |-UnresolvedLookupExpr 0x7fe8b2222890 <col:12> '<overloaded function type>' lvalue (ADL) = 'isfinite' 0x7fe8b220a478 0x7fe8b220a430
|       |     `-DeclRefExpr 0x7fe8b22228f0 <col:21> '_A1' lvalue ParmVar 0x7fe8b2222670 '__lcpp_x' '_A1'
|       |-AlwaysInlineAttr 0x7fe8b2222838 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/__config:737:74> always_inline
|       `-VisibilityAttr 0x7fe8b2222880 <col:48, col:71> Hidden
|-LinkageSpecDecl 0x7fe8b2218590 </usr/local/Cellar/llvm/5.0.0/bin/../include/c++/v1/cmath:555:12> col:12 implicit C
| `-FunctionDecl 0x7fe8b22185e0 <col:12> col:12 implicit referenced __builtin_isnan 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7fe8b2218678 <col:12> Implicit
|   `-ConstAttr 0x7fe8b22186c0 <col:12> Implicit
|-LinkageSpecDecl 0x7fe8b22193d0 <line:575:12> col:12 implicit C
| `-FunctionDecl 0x7fe8b2219420 <col:12> col:12 implicit referenced __builtin_isinf 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7fe8b22194b8 <col:12> Implicit
|   `-ConstAttr 0x7fe8b2219500 <col:12> Implicit
|-LinkageSpecDecl 0x7fe8b2222150 <line:595:12> col:12 implicit C
| `-FunctionDecl 0x7fe8b22221a0 <col:12> col:12 implicit referenced __builtin_isfinite 'int (...) noexcept' extern
|   |-NoThrowAttr 0x7fe8b2222238 <col:12> Implicit
|   `-ConstAttr 0x7fe8b2222280 <col:12> Implicit
|-CXXRecordDecl 0x7fe8b2222980 <object_model_refined/3_data/06_multiple_inheritance.cpp:3:1, line:5:1> line:3:8 referenced struct P1 definition
| |-CXXRecordDecl 0x7fe8b2222aa8 <col:1, col:8> col:8 implicit struct P1
| |-FieldDecl 0x7fe8b2222b58 <line:4:5, col:12> col:12 referenced x 'double'
| |-CXXConstructorDecl 0x7fe8b2224168 <line:3:8> col:8 implicit P1 'void (void) noexcept' inline default trivial
| |-CXXDestructorDecl 0x7fe8b2224248 <col:8> col:8 implicit ~P1 'void (void)' inline default trivial noexcept-unevaluated 0x7fe8b2224248
| |-CXXConstructorDecl 0x7fe8b2224508 <col:8> col:8 implicit constexpr P1 'void (const struct P1 &)' inline default trivial noexcept-unevaluated 0x7fe8b2224508
| | `-ParmVarDecl 0x7fe8b2224630 <col:8> col:8 'const struct P1 &'
| `-CXXConstructorDecl 0x7fe8b22246c8 <col:8> col:8 implicit constexpr P1 'void (struct P1 &&)' inline default trivial noexcept-unevaluated 0x7fe8b22246c8
|   `-ParmVarDecl 0x7fe8b22247f0 <col:8> col:8 'struct P1 &&'
|-CXXRecordDecl 0x7fe8b2222bc0 <line:7:1, line:9:1> line:7:8 referenced struct P2 definition
| |-CXXRecordDecl 0x7fe8b2222ce8 <col:1, col:8> col:8 implicit struct P2
| |-FieldDecl 0x7fe8b2222d98 <line:8:5, col:12> col:12 referenced y 'double'
| |-CXXConstructorDecl 0x7fe8b2224348 <line:7:8> col:8 implicit P2 'void (void) noexcept' inline default trivial
| |-CXXDestructorDecl 0x7fe8b2224428 <col:8> col:8 implicit ~P2 'void (void)' inline default trivial noexcept-unevaluated 0x7fe8b2224428
| |-CXXConstructorDecl 0x7fe8b2224858 <col:8> col:8 implicit constexpr P2 'void (const struct P2 &)' inline default trivial noexcept-unevaluated 0x7fe8b2224858
| | `-ParmVarDecl 0x7fe8b2224980 <col:8> col:8 'const struct P2 &'
| `-CXXConstructorDecl 0x7fe8b2224a18 <col:8> col:8 implicit constexpr P2 'void (struct P2 &&)' inline default trivial noexcept-unevaluated 0x7fe8b2224a18
|   `-ParmVarDecl 0x7fe8b2224b40 <col:8> col:8 'struct P2 &&'
|-CXXRecordDecl 0x7fe8b2222e00 <line:11:1, line:13:1> line:11:8 referenced struct P3 definition
| |-public 'struct P1'
| |-public 'struct P2'
| |-CXXRecordDecl 0x7fe8b2222fa8 <col:1, col:8> col:8 implicit struct P3
| |-FieldDecl 0x7fe8b2223058 <line:12:5, col:12> col:12 z 'double'
| |-CXXConstructorDecl 0x7fe8b2224068 <line:11:8> col:8 implicit referenced P3 'void (void) noexcept' inline default trivial
| |-CXXConstructorDecl 0x7fe8b2224ba8 <col:8> col:8 implicit constexpr P3 'void (const struct P3 &)' inline default trivial noexcept-unevaluated 0x7fe8b2224ba8
| | `-ParmVarDecl 0x7fe8b2224cd0 <col:8> col:8 'const struct P3 &'
| `-CXXConstructorDecl 0x7fe8b2224d68 <col:8> col:8 implicit constexpr P3 'void (struct P3 &&)' inline default trivial noexcept-unevaluated 0x7fe8b2224d68
|   `-ParmVarDecl 0x7fe8b2224e90 <col:8> col:8 'struct P3 &&'
|-FunctionDecl 0x7fe8b22231c8 <line:15:1, line:18:1> line:15:8 used func1 'double (const struct P1 &)'
| |-ParmVarDecl 0x7fe8b22230f8 <col:14, col:24> col:24 used p 'const struct P1 &'
| `-CompoundStmt 0x7fe8b2223398 <line:16:1, line:18:1>
|   `-ReturnStmt 0x7fe8b2223380 <line:17:5, col:20>
|     `-BinaryOperator 0x7fe8b2223358 <col:12, col:20> 'double' '*'
|       |-ImplicitCastExpr 0x7fe8b2223328 <col:12, col:14> 'double' <LValueToRValue>
|       | `-MemberExpr 0x7fe8b2223290 <col:12, col:14> 'const double' lvalue .x 0x7fe8b2222b58
|       |   `-DeclRefExpr 0x7fe8b2223268 <col:12> 'const struct P1' lvalue ParmVar 0x7fe8b22230f8 'p' 'const struct P1 &'
|       `-ImplicitCastExpr 0x7fe8b2223340 <col:18, col:20> 'double' <LValueToRValue>
|         `-MemberExpr 0x7fe8b22232f0 <col:18, col:20> 'const double' lvalue .x 0x7fe8b2222b58
|           `-DeclRefExpr 0x7fe8b22232c8 <col:18> 'const struct P1' lvalue ParmVar 0x7fe8b22230f8 'p' 'const struct P1 &'
|-FunctionDecl 0x7fe8b22234c8 <line:20:1, line:23:1> line:20:8 used func2 'double (const struct P2 &)'
| |-ParmVarDecl 0x7fe8b22233f8 <col:14, col:24> col:24 used p 'const struct P2 &'
| `-CompoundStmt 0x7fe8b2223698 <line:21:1, line:23:1>
|   `-ReturnStmt 0x7fe8b2223680 <line:22:5, col:20>
|     `-BinaryOperator 0x7fe8b2223658 <col:12, col:20> 'double' '*'
|       |-ImplicitCastExpr 0x7fe8b2223628 <col:12, col:14> 'double' <LValueToRValue>
|       | `-MemberExpr 0x7fe8b2223590 <col:12, col:14> 'const double' lvalue .y 0x7fe8b2222d98
|       |   `-DeclRefExpr 0x7fe8b2223568 <col:12> 'const struct P2' lvalue ParmVar 0x7fe8b22233f8 'p' 'const struct P2 &'
|       `-ImplicitCastExpr 0x7fe8b2223640 <col:18, col:20> 'double' <LValueToRValue>
|         `-MemberExpr 0x7fe8b22235f0 <col:18, col:20> 'const double' lvalue .y 0x7fe8b2222d98
|           `-DeclRefExpr 0x7fe8b22235c8 <col:18> 'const struct P2' lvalue ParmVar 0x7fe8b22233f8 'p' 'const struct P2 &'
|-FunctionDecl 0x7fe8b22237c8 <line:25:1, line:28:1> line:25:8 used func3 'double (const struct P3 &)'
| |-ParmVarDecl 0x7fe8b22236f8 <col:14, col:24> col:24 used p 'const struct P3 &'
| `-CompoundStmt 0x7fe8b2223e88 <line:26:1, line:28:1>
|   `-ReturnStmt 0x7fe8b2223e70 <line:27:5, col:41>
|     `-CallExpr 0x7fe8b2223e40 <col:12, col:41> 'double'
|       |-ImplicitCastExpr 0x7fe8b2223e28 <col:12, col:17> 'double (*)(double)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x7fe8b2223de8 <col:12, col:17> 'double (double)' lvalue Function 0x7fe8b200f1c0 'sqrt' 'double (double)' (UsingShadow 0x7fe8b220e620 'sqrt')
|       `-BinaryOperator 0x7fe8b2223b90 <col:22, col:40> 'double' '+'
|         |-CallExpr 0x7fe8b2223a00 <col:22, col:29> 'double'
|         | |-ImplicitCastExpr 0x7fe8b22239e8 <col:22> 'double (*)(const struct P1 &)' <FunctionToPointerDecay>
|         | | `-DeclRefExpr 0x7fe8b2223990 <col:22> 'double (const struct P1 &)' lvalue Function 0x7fe8b22231c8 'func1' 'double (const struct P1 &)'
|         | `-ImplicitCastExpr 0x7fe8b2223a30 <col:28> 'const struct P1' lvalue <DerivedToBase (P1)>
|         |   `-DeclRefExpr 0x7fe8b2223968 <col:28> 'const struct P3' lvalue ParmVar 0x7fe8b22236f8 'p' 'const struct P3 &'
|         `-CallExpr 0x7fe8b2223b40 <col:33, col:40> 'double'
|           |-ImplicitCastExpr 0x7fe8b2223b28 <col:33> 'double (*)(const struct P2 &)' <FunctionToPointerDecay>
|           | `-DeclRefExpr 0x7fe8b2223ad0 <col:33> 'double (const struct P2 &)' lvalue Function 0x7fe8b22234c8 'func2' 'double (const struct P2 &)'
|           `-ImplicitCastExpr 0x7fe8b2223b70 <col:39> 'const struct P2' lvalue <DerivedToBase (P2)>
|             `-DeclRefExpr 0x7fe8b2223aa8 <col:39> 'const struct P3' lvalue ParmVar 0x7fe8b22236f8 'p' 'const struct P3 &'
`-FunctionDecl 0x7fe8b2223ed0 <line:30:1, line:37:1> line:30:5 main 'int (void)'
  `-CompoundStmt 0x7fe8b2225520 <line:31:1, line:37:1>
    |-DeclStmt 0x7fe8b2225138 <line:32:5, col:12>
    | `-VarDecl 0x7fe8b2223fa8 <col:5, col:11> col:8 used p3 'struct P3' listinit
    |   `-CXXConstructExpr 0x7fe8b2224ef8 <col:8, col:11> 'struct P3' 'void (void) noexcept' zeroing
    |-DeclStmt 0x7fe8b2225278 <line:33:5, col:17>
    | `-VarDecl 0x7fe8b2225188 <col:5, col:15> col:9 pv 'struct P2 *' cinit
    |   `-ImplicitCastExpr 0x7fe8b2225258 <col:14, col:15> 'struct P2 *' <DerivedToBase (P2)>
    |     `-UnaryOperator 0x7fe8b2225238 <col:14, col:15> 'struct P3 *' prefix '&'
    |       `-DeclRefExpr 0x7fe8b22251e8 <col:15> 'struct P3' lvalue Var 0x7fe8b2223fa8 'p3' 'struct P3'
    |-DeclStmt 0x7fe8b22254d0 <line:35:5, col:23>
    | `-VarDecl 0x7fe8b22252a0 <col:5, col:22> col:10 v 'double':'double' cinit
    |   `-CallExpr 0x7fe8b22253f0 <col:14, col:22> 'double'
    |     |-ImplicitCastExpr 0x7fe8b22253d8 <col:14> 'double (*)(const struct P3 &)' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x7fe8b2225380 <col:14> 'double (const struct P3 &)' lvalue Function 0x7fe8b22237c8 'func3' 'double (const struct P3 &)'
    |     `-ImplicitCastExpr 0x7fe8b2225420 <col:20> 'const struct P3' lvalue <NoOp>
    |       `-DeclRefExpr 0x7fe8b2225358 <col:20> 'struct P3' lvalue Var 0x7fe8b2223fa8 'p3' 'struct P3'
    `-ReturnStmt 0x7fe8b2225508 <line:36:5, col:12>
      `-IntegerLiteral 0x7fe8b22254e8 <col:12> 'int' 0
