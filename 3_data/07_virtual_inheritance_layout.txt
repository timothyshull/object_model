
*** Dumping AST Record Layout
         0 | struct P2
         0 |   double x
         8 |   double y
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct P3
         0 |   (P3 vtable pointer)
         8 |   double z
        16 |   struct P2 (virtual base)
        16 |     double x
        24 |     double y
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x7f98c5855c58 <object_model/3_data/07_virtual_inheritance.cpp:1:1, line:4:1> line:1:8 referenced struct P2 definition
|-CXXRecordDecl 0x7f98c5855d78 <col:1, col:8> col:8 implicit struct P2
|-FieldDecl 0x7f98c5855e28 <line:2:5, col:12> col:12 referenced x 'double'
|-FieldDecl 0x7f98c5855e88 <line:3:5, col:12> col:12 referenced y 'double'
|-CXXMethodDecl 0x7f98c58563c8 <line:1:8, <invalid sloc>> col:8 implicit constexpr operator= 'struct P2 &(const struct P2 &)' inline default trivial noexcept-unevaluated 0x7f98c58563c8
| `-ParmVarDecl 0x7f98c58564e0 <col:8> col:8 'const struct P2 &'
|-CXXMethodDecl 0x7f98c5856578 <col:8, <invalid sloc>> col:8 implicit constexpr operator= 'struct P2 &(struct P2 &&)' inline default trivial noexcept-unevaluated 0x7f98c5856578
| `-ParmVarDecl 0x7f98c5856690 <col:8> col:8 'struct P2 &&'
`-CXXDestructorDecl 0x7f98c58569d8 <col:8> col:8 implicit ~P2 'void (void)' inline default trivial noexcept-unevaluated 0x7f98c58569d8

Layout: <CGRecordLayout
  LLVMType:%struct.P2 = type { double, double }
  NonVirtualBaseLLVMType:%struct.P2 = type { double, double }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x7f98c5856ab8 <object_model/3_data/07_virtual_inheritance.cpp:10:1, line:14:1> line:10:8 referenced struct P3 definition
|-virtual public 'struct P2'
|-CXXRecordDecl 0x7f98c5881830 <col:1, col:8> col:8 implicit referenced struct P3
|-FieldDecl 0x7f98c58818e0 <line:11:5, col:12> col:12 referenced z 'double'
|-CXXMethodDecl 0x7f98c5881a60 <line:13:5, col:34> col:10 operator+= 'void (const struct P3 &)'
| `-ParmVarDecl 0x7f98c5881968 <col:21, col:31> col:31 rhs 'const struct P3 &'
|-CXXMethodDecl 0x7f98c5881b28 <line:10:8, <invalid sloc>> col:8 implicit operator= 'struct P3 &(const struct P3 &)' inline default noexcept-unevaluated 0x7f98c5881b28
| `-ParmVarDecl 0x7f98c5881c40 <col:8> col:8 'const struct P3 &'
|-CXXMethodDecl 0x7f98c5881cd8 <col:8, <invalid sloc>> col:8 implicit operator= 'struct P3 &(struct P3 &&)' inline default noexcept-unevaluated 0x7f98c5881cd8
| `-ParmVarDecl 0x7f98c5881df0 <col:8> col:8 'struct P3 &&'
`-CXXDestructorDecl 0x7f98c5881e78 <col:8> col:8 implicit ~P3 'void (void)' inline default trivial noexcept-unevaluated 0x7f98c5881e78

Layout: <CGRecordLayout
  LLVMType:%struct.P3 = type { i32 (...)**, double, %struct.P2 }
  NonVirtualBaseLLVMType:%struct.P3.base = type { i32 (...)**, double }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct V
         0 |   (V vtable pointer)
         8 |   struct V * n
        16 |   struct P2 (virtual base)
        16 |     double x
        24 |     double y
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class V3
         0 |   struct P3 (primary base)
         0 |     (P3 vtable pointer)
         8 |     double z
        16 |   struct V (base)
        16 |     (V vtable pointer)
        24 |     struct V * n
        32 |   double m
        40 |   struct P2 (virtual base)
        40 |     double x
        48 |     double y
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x7f98c5855ef0 <object_model/3_data/07_virtual_inheritance.cpp:6:1, line:8:1> line:6:8 referenced struct V definition
|-virtual public 'struct P2'
|-CXXRecordDecl 0x7f98c5856070 <col:1, col:8> col:8 implicit referenced struct V
|-FieldDecl 0x7f98c5856148 <line:7:5, col:8> col:8 n 'struct V *'
|-CXXMethodDecl 0x7f98c58561e8 <line:6:8, <invalid sloc>> col:8 implicit operator= 'struct V &(const struct V &)' inline default noexcept-unevaluated 0x7f98c58561e8
| `-ParmVarDecl 0x7f98c5856300 <col:8> col:8 'const struct V &'
|-CXXMethodDecl 0x7f98c5856728 <col:8, <invalid sloc>> col:8 implicit operator= 'struct V &(struct V &&)' inline default noexcept-unevaluated 0x7f98c5856728
| `-ParmVarDecl 0x7f98c5856840 <col:8> col:8 'struct V &&'
|-CXXDestructorDecl 0x7f98c58568c8 <col:8> col:8 implicit ~V 'void (void)' inline default trivial noexcept-unevaluated 0x7f98c58568c8
|-CXXConstructorDecl 0x7f98c5883388 <col:8> col:8 implicit used V 'void (void) noexcept' inline default
| |-CXXCtorInitializer 'struct P2'
| | `-CXXConstructExpr 0x7f98c588b060 <col:8> 'struct P2' 'void (void) noexcept'
| `-CompoundStmt 0x7f98c588b0d0 <col:8>
|-CXXConstructorDecl 0x7f98c588aa08 <col:8> col:8 implicit V 'void (const struct V &)' inline default noexcept-unevaluated 0x7f98c588aa08
| `-ParmVarDecl 0x7f98c588ab30 <col:8> col:8 'const struct V &'
`-CXXConstructorDecl 0x7f98c588ab98 <col:8> col:8 implicit V 'void (struct V &&)' inline default noexcept-unevaluated 0x7f98c588ab98
  `-ParmVarDecl 0x7f98c588acc0 <col:8> col:8 'struct V &&'

Layout: <CGRecordLayout
  LLVMType:%struct.V = type { i32 (...)**, %struct.V*, %struct.P2 }
  NonVirtualBaseLLVMType:%struct.V.base = type { i32 (...)**, %struct.V* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x7f98c5881f58 <object_model/3_data/07_virtual_inheritance.cpp:16:1, line:18:1> line:16:7 referenced class V3 definition
|-public 'struct P3'
|-public 'struct V'
|-CXXRecordDecl 0x7f98c5882110 <col:1, col:7> col:7 implicit class V3
|-FieldDecl 0x7f98c58821c0 <line:17:5, col:12> col:12 m 'double'
|-CXXMethodDecl 0x7f98c5882268 <line:16:7, <invalid sloc>> col:7 implicit operator= 'class V3 &(const class V3 &)' inline default noexcept-unevaluated 0x7f98c5882268
| `-ParmVarDecl 0x7f98c5882380 <col:7> col:7 'const class V3 &'
|-CXXMethodDecl 0x7f98c5882418 <col:7, <invalid sloc>> col:7 implicit operator= 'class V3 &(class V3 &&)' inline default noexcept-unevaluated 0x7f98c5882418
| `-ParmVarDecl 0x7f98c5882530 <col:7> col:7 'class V3 &&'
|-CXXDestructorDecl 0x7f98c58825b8 <col:7> col:7 implicit ~V3 'void (void)' inline default trivial noexcept-unevaluated 0x7f98c58825b8
|-CXXConstructorDecl 0x7f98c5883088 <col:7> col:7 implicit used V3 'void (void) noexcept' inline default
| |-CXXCtorInitializer 'struct P2'
| | `-CXXConstructExpr 0x7f98c588af08 <col:7> 'struct P2' 'void (void) noexcept'
| |-CXXCtorInitializer 'struct P3'
| | `-CXXConstructExpr 0x7f98c588aff8 <col:7> 'struct P3' 'void (void) noexcept'
| |-CXXCtorInitializer 'struct V'
| | `-CXXConstructExpr 0x7f98c588b0e8 <col:7> 'struct V' 'void (void) noexcept'
| `-CompoundStmt 0x7f98c588b168 <col:7>
|-CXXConstructorDecl 0x7f98c5883468 <col:7> col:7 implicit V3 'void (const class V3 &)' inline default noexcept-unevaluated 0x7f98c5883468
| `-ParmVarDecl 0x7f98c5883590 <col:7> col:7 'const class V3 &'
`-CXXConstructorDecl 0x7f98c588ad28 <col:7> col:7 implicit V3 'void (class V3 &&)' inline default noexcept-unevaluated 0x7f98c588ad28
  `-ParmVarDecl 0x7f98c588ae50 <col:7> col:7 'class V3 &&'

Layout: <CGRecordLayout
  LLVMType:%class.V3 = type { %struct.P3.base, %struct.V.base, double, %struct.P2 }
  NonVirtualBaseLLVMType:%class.V3.base = type { %struct.P3.base, %struct.V.base, double }
  IsZeroInitializable:1
  BitFields:[
]>
