TranslationUnitDecl 0x7fa0160326d0
|-TypedefDecl implicit __int128_t '__int128'
| `-BuiltinType '__int128'
|-TypedefDecl implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 'unsigned __int128'
|-TypedefDecl implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 'struct __NSConstantString_tag'
|   `-CXXRecord '__NSConstantString_tag'
|-TypedefDecl implicit __builtin_ms_va_list 'char *'
| `-PointerType 'char *'
|   `-BuiltinType 'char'
|-TypedefDecl implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 'struct __va_list_tag [1]' 1
|   `-RecordType 'struct __va_list_tag'
|     `-CXXRecord '__va_list_tag'
|-CXXRecordDecl struct P3 definition
| |-CXXRecordDecl implicit referenced struct P3
| |-VarDecl o 'struct P3' static
| |-FieldDecl referenced x 'double'
| |-FieldDecl y 'double'
| |-FieldDecl z 'double'
| |-CXXConstructorDecl P3 'void (void)' default noexcept-unevaluated 0x7fa01701b240
| |-CXXDestructorDecl ~P3 'void (void) noexcept' virtual default
| `-CXXMethodDecl > implicit operator= 'struct P3 &(const struct P3 &)' inline default noexcept-unevaluated 0x7fa01701b478
|   `-ParmVarDecl 'const struct P3 &'
|-FunctionDecl implicit operator new 'void *(unsigned long)'
| |-ParmVarDecl implicit 'unsigned long'
| `-VisibilityAttr Implicit Default
|-FunctionDecl implicit operator new[] 'void *(unsigned long)'
| |-ParmVarDecl implicit 'unsigned long'
| `-VisibilityAttr Implicit Default
|-FunctionDecl implicit operator delete 'void (void *) noexcept'
| |-ParmVarDecl implicit 'void *'
| `-VisibilityAttr Implicit Default
|-FunctionDecl implicit operator delete[] 'void (void *) noexcept'
| |-ParmVarDecl implicit 'void *'
| `-VisibilityAttr Implicit Default
|-CXXRecordDecl referenced struct B1 definition
| |-CXXRecordDecl implicit struct B1
| |-FieldDecl v1 'int'
| |-CXXConstructorDecl implicit B1 'void (void) noexcept' inline default trivial
| |-CXXDestructorDecl implicit ~B1 'void (void)' inline default trivial noexcept-unevaluated 0x7fa017800ba8
| |-CXXConstructorDecl implicit constexpr B1 'void (const struct B1 &)' inline default trivial noexcept-unevaluated 0x7fa017800ec8
| | `-ParmVarDecl 'const struct B1 &'
| `-CXXConstructorDecl implicit constexpr B1 'void (struct B1 &&)' inline default trivial noexcept-unevaluated 0x7fa017801088
|   `-ParmVarDecl 'struct B1 &&'
|-CXXRecordDecl referenced struct B2 definition
| |-CXXRecordDecl implicit struct B2
| |-FieldDecl referenced v2 'int'
| |-CXXConstructorDecl implicit B2 'void (void) noexcept' inline default trivial
| |-CXXDestructorDecl implicit ~B2 'void (void)' inline default trivial noexcept-unevaluated 0x7fa017800d88
| |-CXXConstructorDecl implicit constexpr B2 'void (const struct B2 &)' inline default trivial noexcept-unevaluated 0x7fa017801248
| | `-ParmVarDecl 'const struct B2 &'
| `-CXXConstructorDecl implicit constexpr B2 'void (struct B2 &&)' inline default trivial noexcept-unevaluated 0x7fa017801828
|   `-ParmVarDecl 'struct B2 &&'
|-CXXRecordDecl referenced struct D definition
| |-public 'struct B1'
| |-public 'struct B2'
| |-CXXRecordDecl implicit struct D
| |-CXXConstructorDecl implicit referenced D 'void (void) noexcept' inline default trivial
| |-CXXConstructorDecl implicit constexpr D 'void (const struct D &)' inline default trivial noexcept-unevaluated 0x7fa0178019b8
| | `-ParmVarDecl 'const struct D &'
| `-CXXConstructorDecl implicit constexpr D 'void (struct D &&)' inline default trivial noexcept-unevaluated 0x7fa017801b78
|   `-ParmVarDecl 'struct D &&'
|-FunctionDecl used func1 'void (int struct D::*, struct D *)'
| |-ParmVarDecl used dmp 'int struct D::*'
| |-ParmVarDecl used pd 'struct D *'
| `-CompoundStmt
|   `-BinaryOperator 'int' lvalue '='
|     |-BinaryOperator 'int' lvalue '->*'
|     | |-ImplicitCastExpr 'struct D *' <LValueToRValue>
|     | | `-DeclRefExpr 'struct D *' lvalue ParmVar 0x7fa01704a8e8 'pd' 'struct D *'
|     | `-ImplicitCastExpr 'int struct D::*' <LValueToRValue>
|     |   `-DeclRefExpr 'int struct D::*' lvalue ParmVar 0x7fa01704a848 'dmp' 'int struct D::*'
|     `-IntegerLiteral 'int' 10
|-FunctionDecl used func2 'void (struct D *)'
| |-ParmVarDecl used pd 'struct D *'
| `-CompoundStmt
|   |-DeclStmt
|   | `-VarDecl used bmp 'int struct B2::*' cinit
|   |   `-UnaryOperator 'int struct B2::*' prefix '&'
|   |     `-DeclRefExpr 'int' lvalue Field 0x7fa01704a4e8 'v2' 'int'
|   `-CallExpr 'void'
|     |-ImplicitCastExpr 'void (*)(int struct D::*, struct D *)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 'void (int struct D::*, struct D *)' lvalue Function 0x7fa01704a9c0 'func1' 'void (int struct D::*, struct D *)'
|     |-ImplicitCastExpr 'int struct D::*' <BaseToDerivedMemberPointer (B2)>
|     | `-ImplicitCastExpr 'int struct B2::*' <LValueToRValue>
|     |   `-DeclRefExpr 'int struct B2::*' lvalue Var 0x7fa01704adc8 'bmp' 'int struct B2::*'
|     `-ImplicitCastExpr 'struct D *' <LValueToRValue>
|       `-DeclRefExpr 'struct D *' lvalue ParmVar 0x7fa01704abc8 'pd' 'struct D *'
`-FunctionDecl main 'int (void)'
  `-CompoundStmt
    |-DeclStmt
    | `-VarDecl used p1 'double struct P3::*' cinit
    |   `-ImplicitCastExpr 'double struct P3::*' <NullToMemberPointer>
    |     `-CXXNullPtrLiteralExpr 'nullptr_t'
    |-DeclStmt
    | `-VarDecl used p2 'double struct P3::*' cinit
    |   `-UnaryOperator 'double struct P3::*' prefix '&'
    |     `-DeclRefExpr 'double' lvalue Field 0x7fa01701b098 'x' 'double'
    |-IfStmt
    | |-<<<NULL>>>
    | |-<<<NULL>>>
    | |-BinaryOperator '_Bool' '=='
    | | |-ImplicitCastExpr 'double struct P3::*' <LValueToRValue>
    | | | `-DeclRefExpr 'double struct P3::*' lvalue Var 0x7fa017800448 'p1' 'double struct P3::*'
    | | `-ImplicitCastExpr 'double struct P3::*' <LValueToRValue>
    | |   `-DeclRefExpr 'double struct P3::*' lvalue Var 0x7fa017800540 'p2' 'double struct P3::*'
    | |-CompoundStmt
    | | `-DeclStmt
    | |   `-VarDecl p3 'double struct P3::*':'double struct P3::*' cinit
    | |     `-ImplicitCastExpr 'double struct P3::*' <LValueToRValue>
    | |       `-DeclRefExpr 'double struct P3::*' lvalue Var 0x7fa017800540 'p2' 'double struct P3::*'
    | `-<<<NULL>>>
    |-DeclStmt
    | `-VarDecl used d 'struct D' listinit
    |   `-CXXConstructExpr 'struct D' 'void (void) noexcept' zeroing
    |-CallExpr 'void'
    | |-ImplicitCastExpr 'void (*)(struct D *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 'void (struct D *)' lvalue Function 0x7fa01704ac90 'func2' 'void (struct D *)'
    | `-UnaryOperator 'struct D *' prefix '&'
    |   `-DeclRefExpr 'struct D' lvalue Var 0x7fa017800908 'd' 'struct D'
    `-ReturnStmt
      `-IntegerLiteral 'int' 0
