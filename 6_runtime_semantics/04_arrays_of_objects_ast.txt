TranslationUnitDecl 0x7f85fa0326d0 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x7f85fa032c60 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x7f85fa032940 '__int128'
|-TypedefDecl 0x7f85fa032cd0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x7f85fa032960 'unsigned __int128'
|-TypedefDecl 0x7f85fa033018 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x7f85fa032dc0 'struct __NSConstantString_tag'
|   `-CXXRecord 0x7f85fa032d28 '__NSConstantString_tag'
|-TypedefDecl 0x7f85fa0330b0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x7f85fa033070 'char *'
|   `-BuiltinType 0x7f85fa032760 'char'
|-TypedefDecl 0x7f85fa065c00 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x7f85fa033390 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x7f85fa0331a0 'struct __va_list_tag'
|     `-CXXRecord 0x7f85fa033108 '__va_list_tag'
|-CXXRecordDecl 0x7f85fa065c58 <object_model/6_runtime_semantics/04_arrays_of_objects.cpp:1:1, line:4:1> line:1:8 referenced struct P definition
| |-CXXRecordDecl 0x7f85fa065d78 <col:1, col:8> col:8 implicit struct P
| |-FieldDecl 0x7f85fa065e28 <line:2:5, col:12> col:12 referenced x 'double'
| |-FieldDecl 0x7f85fa065e88 <line:3:5, col:12> col:12 referenced y 'double'
| |-CXXDestructorDecl 0x7f85fa0662a8 <line:1:8> col:8 implicit referenced ~P 'void (void) noexcept' inline default trivial
| |-CXXConstructorDecl 0x7f85fa066648 <col:8> col:8 implicit used P 'void (void) noexcept' inline default trivial
| | `-CompoundStmt 0x7f85fb02afd0 <col:8>
| |-CXXConstructorDecl 0x7f85fa066758 <col:8> col:8 implicit constexpr P 'void (const struct P &)' inline default trivial noexcept-unevaluated 0x7f85fa066758
| | `-ParmVarDecl 0x7f85fa066880 <col:8> col:8 'const struct P &'
| `-CXXConstructorDecl 0x7f85fa066918 <col:8> col:8 implicit used constexpr P 'void (struct P &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x7f85fa066a40 <col:8> col:8 used 'struct P &&'
|   |-CXXCtorInitializer Field 0x7f85fa065e28 'x' 'double'
|   | `-ImplicitCastExpr 0x7f85fa066bd8 <col:8> 'double' <LValueToRValue>
|   |   `-MemberExpr 0x7f85fa066ba0 <col:8> 'double' xvalue .x 0x7f85fa065e28
|   |     `-CXXStaticCastExpr 0x7f85fa066b70 <col:8> 'struct P' xvalue static_cast<struct P &&> <NoOp>
|   |       `-DeclRefExpr 0x7f85fa066b38 <col:8> 'struct P' lvalue ParmVar 0x7f85fa066a40 '' 'struct P &&'
|   |-CXXCtorInitializer Field 0x7f85fa065e88 'y' 'double'
|   | `-ImplicitCastExpr 0x7f85fb02acc8 <col:8> 'double' <LValueToRValue>
|   |   `-MemberExpr 0x7f85fb02ac90 <col:8> 'double' xvalue .y 0x7f85fa065e88
|   |     `-CXXStaticCastExpr 0x7f85fb02ac60 <col:8> 'struct P' xvalue static_cast<struct P &&> <NoOp>
|   |       `-DeclRefExpr 0x7f85fb02ac28 <col:8> 'struct P' lvalue ParmVar 0x7f85fa066a40 '' 'struct P &&'
|   `-CompoundStmt 0x7f85fb02ad18 <col:8>
`-FunctionDecl 0x7f85fa065f48 <line:6:1, line:11:1> line:6:5 main 'int (void)'
  `-CompoundStmt 0x7f85fb02b068 <line:7:1, line:11:1>
    |-DeclStmt 0x7f85fb02af18 <line:8:5, col:60>
    | `-VarDecl 0x7f85fa066188 <col:5, col:59> col:7 pa1 'struct P [10]' cinit
    |   `-ExprWithCleanups 0x7f85fb02af00 <col:17, col:59> 'struct P [10]'
    |     `-InitListExpr 0x7f85fa066aa8 <col:17, col:59> 'struct P [10]'
    |       |-array filler
    |       | `-InitListExpr 0x7f85fb02ae90 <col:59> 'struct P'
    |       |   |-ImplicitValueInitExpr 0x7f85fb02aee0 <<invalid sloc>> 'double'
    |       |   `-ImplicitValueInitExpr 0x7f85fb02aef0 <<invalid sloc>> 'double'
    |       |-CXXConstructExpr 0x7f85fb02ad30 <col:18, col:20> 'struct P' 'void (struct P &&) noexcept' elidable
    |       | `-MaterializeTemporaryExpr 0x7f85fa066ae8 <col:18, col:20> 'struct P' xvalue
    |       |   `-CXXFunctionalCastExpr 0x7f85fa0663f0 <col:18, col:20> 'struct P' functional cast to struct P <NoOp>
    |       |     `-InitListExpr 0x7f85fa066238 <col:19, col:20> 'struct P'
    |       |       |-ImplicitValueInitExpr 0x7f85fa066288 <<invalid sloc>> 'double'
    |       |       `-ImplicitValueInitExpr 0x7f85fa066298 <<invalid sloc>> 'double'
    |       |-CXXConstructExpr 0x7f85fb02ad88 <col:23, col:33> 'struct P' 'void (struct P &&) noexcept' elidable
    |       | `-MaterializeTemporaryExpr 0x7f85fb02ad70 <col:23, col:33> 'struct P' xvalue
    |       |   `-CXXFunctionalCastExpr 0x7f85fa066508 <col:23, col:33> 'struct P' functional cast to struct P <NoOp>
    |       |     `-InitListExpr 0x7f85fa0664b8 <col:24, col:33> 'struct P'
    |       |       |-FloatingLiteral 0x7f85fa066428 <col:25> 'double' 1.000000e+00
    |       |       `-FloatingLiteral 0x7f85fa066448 <col:30> 'double' 1.000000e+00
    |       `-InitListExpr 0x7f85fb02add0 <col:36, col:58> 'struct P'
    |         |-CXXStaticCastExpr 0x7f85fa0665a0 <col:36, col:58> 'double' static_cast<double> <NoOp>
    |         | `-ImplicitCastExpr 0x7f85fa066588 <col:56, col:57> 'double' <IntegralToFloating>
    |         |   `-UnaryOperator 0x7f85fa066550 <col:56, col:57> 'int' prefix '-'
    |         |     `-IntegerLiteral 0x7f85fa066530 <col:57> 'int' 1
    |         `-ImplicitValueInitExpr 0x7f85fb02ae40 <<invalid sloc>> 'double'
    |-DeclStmt 0x7f85fb02b018 <line:9:5, col:14>
    | `-VarDecl 0x7f85fb02af70 <col:5, col:13> col:7 pa2 'struct P [10]' callinit
    |   `-CXXConstructExpr 0x7f85fb02afe8 <col:7> 'struct P [10]' 'void (void) noexcept'
    `-ReturnStmt 0x7f85fb02b050 <line:10:5, col:12>
      `-IntegerLiteral 0x7f85fb02b030 <col:12> 'int' 0
