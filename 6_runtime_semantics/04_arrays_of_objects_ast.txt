TranslationUnitDecl 0x7fed220324d0 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x7fed22032a60 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x7fed22032740 '__int128'
|-TypedefDecl 0x7fed22032ad0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x7fed22032760 'unsigned __int128'
|-TypedefDecl 0x7fed22032e18 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x7fed22032bc0 'struct __NSConstantString_tag'
|   `-CXXRecord 0x7fed22032b28 '__NSConstantString_tag'
|-TypedefDecl 0x7fed22032eb0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x7fed22032e70 'char *'
|   `-BuiltinType 0x7fed22032560 'char'
|-TypedefDecl 0x7fed22065600 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x7fed22033190 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x7fed22032fa0 'struct __va_list_tag'
|     `-CXXRecord 0x7fed22032f08 '__va_list_tag'
|-CXXRecordDecl 0x7fed22065658 <object_model_refined/6_runtime_semantics/04_arrays_of_objects.cpp:1:1, line:4:1> line:1:8 referenced struct P definition
| |-CXXRecordDecl 0x7fed22065778 <col:1, col:8> col:8 implicit struct P
| |-FieldDecl 0x7fed22065828 <line:2:5, col:12> col:12 referenced x 'double'
| |-FieldDecl 0x7fed22065888 <line:3:5, col:12> col:12 referenced y 'double'
| |-CXXDestructorDecl 0x7fed22065c98 <line:1:8> col:8 implicit referenced ~P 'void (void) noexcept' inline default trivial
| |-CXXConstructorDecl 0x7fed22066038 <col:8> col:8 implicit used P 'void (void) noexcept' inline default trivial
| | `-CompoundStmt 0x7fed220911e8 <col:8>
| |-CXXConstructorDecl 0x7fed22066148 <col:8> col:8 implicit constexpr P 'void (const struct P &)' inline default trivial noexcept-unevaluated 0x7fed22066148
| | `-ParmVarDecl 0x7fed22066270 <col:8> col:8 'const struct P &'
| `-CXXConstructorDecl 0x7fed22066308 <col:8> col:8 implicit used constexpr P 'void (struct P &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x7fed22066430 <col:8> col:8 used 'struct P &&'
|   |-CXXCtorInitializer Field 0x7fed22065828 'x' 'double'
|   | `-ImplicitCastExpr 0x7fed220665c8 <col:8> 'double' <LValueToRValue>
|   |   `-MemberExpr 0x7fed22066590 <col:8> 'double' xvalue .x 0x7fed22065828
|   |     `-CXXStaticCastExpr 0x7fed22066560 <col:8> 'struct P' xvalue static_cast<struct P &&> <NoOp>
|   |       `-DeclRefExpr 0x7fed22066528 <col:8> 'struct P' lvalue ParmVar 0x7fed22066430 '' 'struct P &&'
|   |-CXXCtorInitializer Field 0x7fed22065888 'y' 'double'
|   | `-ImplicitCastExpr 0x7fed22090ec8 <col:8> 'double' <LValueToRValue>
|   |   `-MemberExpr 0x7fed22090e90 <col:8> 'double' xvalue .y 0x7fed22065888
|   |     `-CXXStaticCastExpr 0x7fed22090e60 <col:8> 'struct P' xvalue static_cast<struct P &&> <NoOp>
|   |       `-DeclRefExpr 0x7fed22090e28 <col:8> 'struct P' lvalue ParmVar 0x7fed22066430 '' 'struct P &&'
|   `-CompoundStmt 0x7fed22090f18 <col:8>
`-FunctionDecl 0x7fed22065948 <line:6:1, line:11:1> line:6:5 main 'int (void)'
  `-CompoundStmt 0x7fed22091280 <line:7:1, line:11:1>
    |-DeclStmt 0x7fed22091130 <line:8:5, col:61>
    | `-VarDecl 0x7fed22065b78 <col:5, col:60> col:7 pa1 'struct P [10]' cinit
    |   `-ExprWithCleanups 0x7fed22091118 <col:17, col:60> 'struct P [10]'
    |     `-InitListExpr 0x7fed22066498 <col:17, col:60> 'struct P [10]'
    |       |-array filler
    |       | `-InitListExpr 0x7fed220910a8 <col:60> 'struct P'
    |       |   |-ImplicitValueInitExpr 0x7fed220910f8 <<invalid sloc>> 'double'
    |       |   `-ImplicitValueInitExpr 0x7fed22091108 <<invalid sloc>> 'double'
    |       |-CXXConstructExpr 0x7fed22090f30 <col:18, col:20> 'struct P' 'void (struct P &&) noexcept' elidable
    |       | `-MaterializeTemporaryExpr 0x7fed220664d8 <col:18, col:20> 'struct P' xvalue
    |       |   `-CXXFunctionalCastExpr 0x7fed22065de0 <col:18, col:20> 'struct P' functional cast to struct P <NoOp>
    |       |     `-InitListExpr 0x7fed22065c28 <col:19, col:20> 'struct P'
    |       |       |-ImplicitValueInitExpr 0x7fed22065c78 <<invalid sloc>> 'double'
    |       |       `-ImplicitValueInitExpr 0x7fed22065c88 <<invalid sloc>> 'double'
    |       |-CXXConstructExpr 0x7fed22090f88 <col:23, col:33> 'struct P' 'void (struct P &&) noexcept' elidable
    |       | `-MaterializeTemporaryExpr 0x7fed22090f70 <col:23, col:33> 'struct P' xvalue
    |       |   `-CXXFunctionalCastExpr 0x7fed22065ef8 <col:23, col:33> 'struct P' functional cast to struct P <NoOp>
    |       |     `-InitListExpr 0x7fed22065ea8 <col:24, col:33> 'struct P'
    |       |       |-FloatingLiteral 0x7fed22065e18 <col:25> 'double' 1.000000e+00
    |       |       `-FloatingLiteral 0x7fed22065e38 <col:30> 'double' 1.000000e+00
    |       `-InitListExpr 0x7fed22090fd0 <col:36, col:59> 'struct P'
    |         |-ImplicitCastExpr 0x7fed22091040 <col:36, col:59> 'double' <FloatingCast>
    |         | `-CXXStaticCastExpr 0x7fed22065f90 <col:36, col:59> 'float' static_cast<float> <NoOp>
    |         |   `-ImplicitCastExpr 0x7fed22065f78 <col:55, col:56> 'float' <FloatingCast>
    |         |     `-UnaryOperator 0x7fed22065f40 <col:55, col:56> 'double' prefix '-'
    |         |       `-FloatingLiteral 0x7fed22065f20 <col:56> 'double' 1.000000e+00
    |         `-ImplicitValueInitExpr 0x7fed22091058 <<invalid sloc>> 'double'
    |-DeclStmt 0x7fed22091230 <line:9:5, col:14>
    | `-VarDecl 0x7fed22091188 <col:5, col:13> col:7 pa2 'struct P [10]' callinit
    |   `-CXXConstructExpr 0x7fed22091200 <col:7> 'struct P [10]' 'void (void) noexcept'
    `-ReturnStmt 0x7fed22091268 <line:10:5, col:12>
      `-IntegerLiteral 0x7fed22091248 <col:12> 'int' 0
