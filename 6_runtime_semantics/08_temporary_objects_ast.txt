TranslationUnitDecl 0x7fefd8019cd0
|-TypedefDecl implicit __int128_t '__int128'
| `-BuiltinType '__int128'
|-TypedefDecl implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 'unsigned __int128'
|-TypedefDecl implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 'struct __NSConstantString_tag'
|   `-CXXRecord '__NSConstantString_tag'
|-TypedefDecl implicit __builtin_ms_va_list 'char *'
| `-PointerType 'char *'
|   `-BuiltinType 'char'
|-TypedefDecl implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 'struct __va_list_tag [1]' 1
|   `-RecordType 'struct __va_list_tag'
|     `-CXXRecord '__va_list_tag'
|-CXXRecordDecl referenced struct T definition
| |-CXXRecordDecl implicit referenced struct T
| |-FieldDecl referenced i 'int'
| |-CXXConstructorDecl used T 'void (void)'
| | `-CompoundStmt
| |-CXXConstructorDecl used T 'void (int)'
| | |-ParmVarDecl used j 'int'
| | |-CXXCtorInitializer Field 0x7fefd8800828 'i' 'int'
| | | `-InitListExpr 'int'
| | |   `-ImplicitCastExpr 'int' <LValueToRValue>
| | |     `-DeclRefExpr 'int' lvalue ParmVar 0x7fefd88009d0 'j' 'int'
| | `-CompoundStmt
| |-CXXDestructorDecl used ~T 'void (void) noexcept'
| | `-CompoundStmt
| |-CXXConstructorDecl implicit used constexpr T 'void (const struct T &) noexcept' inline default trivial
| | |-ParmVarDecl used 'const struct T &'
| | |-CXXCtorInitializer Field 0x7fefd8800828 'i' 'int'
| | | `-ImplicitCastExpr 'int' <LValueToRValue>
| | |   `-MemberExpr 'const int' lvalue .i 0x7fefd8800828
| | |     `-DeclRefExpr 'const struct T' lvalue ParmVar 0x7fefd8801230 '' 'const struct T &'
| | `-CompoundStmt
| `-CXXMethodDecl implicit used operator= 'struct T &(const struct T &) noexcept' inline default trivial
|   |-ParmVarDecl used 'const struct T &'
|   `-CompoundStmt
|     |-BinaryOperator 'int' lvalue '='
|     | |-MemberExpr 'int' lvalue ->i 0x7fefd8800828
|     | | `-CXXThisExpr 'struct T *' this
|     | `-ImplicitCastExpr 'int' <LValueToRValue>
|     |   `-MemberExpr 'const int' lvalue .i 0x7fefd8800828
|     |     `-DeclRefExpr 'const struct T' lvalue ParmVar 0x7fefd8831330 '' 'const struct T &'
|     `-ReturnStmt
|       `-UnaryOperator 'struct T' lvalue prefix '*'
|         `-CXXThisExpr 'struct T *' this
|-FunctionDecl used operator+ 'struct T (const struct T &, const struct T &)'
| |-ParmVarDecl used lhs 'const struct T &'
| |-ParmVarDecl used rhs 'const struct T &'
| `-CompoundStmt
|   |-DeclStmt
|   | `-VarDecl used t 'struct T' nrvo listinit
|   |   `-CXXConstructExpr 'struct T' 'void (void)'
|   |-BinaryOperator 'int' lvalue '='
|   | |-MemberExpr 'int' lvalue .i 0x7fefd8800828
|   | | `-DeclRefExpr 'struct T' lvalue Var 0x7fefd8801068 't' 'struct T'
|   | `-BinaryOperator 'int' '+'
|   |   |-ImplicitCastExpr 'int' <LValueToRValue>
|   |   | `-MemberExpr 'const int' lvalue .i 0x7fefd8800828
|   |   |   `-DeclRefExpr 'const struct T' lvalue ParmVar 0x7fefd8800e28 'lhs' 'const struct T &'
|   |   `-ImplicitCastExpr 'int' <LValueToRValue>
|   |     `-MemberExpr 'const int' lvalue .i 0x7fefd8800828
|   |       `-DeclRefExpr 'const struct T' lvalue ParmVar 0x7fefd8800e98 'rhs' 'const struct T &'
|   `-ReturnStmt
|     `-CXXConstructExpr 'struct T' 'void (const struct T &) noexcept' elidable
|       `-ImplicitCastExpr 'const struct T' lvalue <NoOp>
|         `-DeclRefExpr 'struct T' lvalue Var 0x7fefd8801068 't' 'struct T'
|-FunctionDecl used operator- 'struct T (struct T &, struct T &)'
| |-ParmVarDecl used lhs 'struct T &'
| |-ParmVarDecl used rhs 'struct T &'
| `-CompoundStmt
|   |-DeclStmt
|   | `-VarDecl used t 'struct T' nrvo listinit
|   |   `-CXXConstructExpr 'struct T' 'void (void)'
|   |-BinaryOperator 'int' lvalue '='
|   | |-MemberExpr 'int' lvalue .i 0x7fefd8800828
|   | | `-DeclRefExpr 'struct T' lvalue Var 0x7fefd8830158 't' 'struct T'
|   | `-BinaryOperator 'int' '-'
|   |   |-ImplicitCastExpr 'int' <LValueToRValue>
|   |   | `-MemberExpr 'int' lvalue .i 0x7fefd8800828
|   |   |   `-DeclRefExpr 'struct T' lvalue ParmVar 0x7fefd882ff58 'lhs' 'struct T &'
|   |   `-ImplicitCastExpr 'int' <LValueToRValue>
|   |     `-MemberExpr 'int' lvalue .i 0x7fefd8800828
|   |       `-DeclRefExpr 'struct T' lvalue ParmVar 0x7fefd882ffc8 'rhs' 'struct T &'
|   `-ReturnStmt
|     `-CXXConstructExpr 'struct T' 'void (const struct T &) noexcept' elidable
|       `-ImplicitCastExpr 'const struct T' lvalue <NoOp>
|         `-DeclRefExpr 'struct T' lvalue Var 0x7fefd8830158 't' 'struct T'
|-FunctionDecl used operator* 'struct T (struct T, struct T)'
| |-ParmVarDecl used lhs 'struct T'
| |-ParmVarDecl used rhs 'struct T'
| `-CompoundStmt
|   |-DeclStmt
|   | `-VarDecl used t 'struct T' nrvo listinit
|   |   `-CXXConstructExpr 'struct T' 'void (void)'
|   |-BinaryOperator 'int' lvalue '='
|   | |-MemberExpr 'int' lvalue .i 0x7fefd8800828
|   | | `-DeclRefExpr 'struct T' lvalue Var 0x7fefd88306a8 't' 'struct T'
|   | `-BinaryOperator 'int' '*'
|   |   |-ImplicitCastExpr 'int' <LValueToRValue>
|   |   | `-MemberExpr 'int' lvalue .i 0x7fefd8800828
|   |   |   `-DeclRefExpr 'struct T' lvalue ParmVar 0x7fefd88304b0 'lhs' 'struct T'
|   |   `-ImplicitCastExpr 'int' <LValueToRValue>
|   |     `-MemberExpr 'int' lvalue .i 0x7fefd8800828
|   |       `-DeclRefExpr 'struct T' lvalue ParmVar 0x7fefd8830520 'rhs' 'struct T'
|   `-ReturnStmt
|     `-CXXConstructExpr 'struct T' 'void (const struct T &) noexcept' elidable
|       `-ImplicitCastExpr 'const struct T' lvalue <NoOp>
|         `-DeclRefExpr 'struct T' lvalue Var 0x7fefd88306a8 't' 'struct T'
`-FunctionDecl main 'int (void)'
  `-CompoundStmt
    |-DeclStmt
    | `-VarDecl used t1 'struct T' listinit
    |   `-CXXConstructExpr 'struct T' 'void (int)'
    |     `-IntegerLiteral 'int' 1
    |-DeclStmt
    | `-VarDecl used t2 'struct T' listinit
    |   `-CXXConstructExpr 'struct T' 'void (int)'
    |     `-IntegerLiteral 'int' 2
    |-DeclStmt
    | `-VarDecl used t 'struct T':'struct T' cinit
    |   `-ExprWithCleanups 'struct T':'struct T'
    |     `-CXXConstructExpr 'struct T':'struct T' 'void (const struct T &) noexcept' elidable
    |       `-MaterializeTemporaryExpr 'const struct T' lvalue
    |         `-ImplicitCastExpr 'const struct T' <NoOp>
    |           `-CXXBindTemporaryExpr 'struct T' (CXXTemporary 0x7fefd8830f38)
    |             `-CXXOperatorCallExpr 'struct T'
    |               |-ImplicitCastExpr 'struct T (*)(const struct T &, const struct T &)' <FunctionToPointerDecay>
    |               | `-DeclRefExpr 'struct T (const struct T &, const struct T &)' lvalue Function 0x7fefd8800f70 'operator+' 'struct T (const struct T &, const struct T &)'
    |               |-ImplicitCastExpr 'const struct T' lvalue <NoOp>
    |               | `-DeclRefExpr 'struct T' lvalue Var 0x7fefd8830b18 't1' 'struct T'
    |               `-ImplicitCastExpr 'const struct T' lvalue <NoOp>
    |                 `-DeclRefExpr 'struct T' lvalue Var 0x7fefd8830c40 't2' 'struct T'
    |-ExprWithCleanups 'struct T' lvalue
    | `-CXXOperatorCallExpr 'struct T' lvalue
    |   |-ImplicitCastExpr 'struct T &(*)(const struct T &) noexcept' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 'struct T &(const struct T &) noexcept' lvalue CXXMethod 0x7fefd8831210 'operator=' 'struct T &(const struct T &) noexcept'
    |   |-DeclRefExpr 'struct T':'struct T' lvalue Var 0x7fefd8830d90 't' 'struct T':'struct T'
    |   `-MaterializeTemporaryExpr 'const struct T' lvalue
    |     `-ImplicitCastExpr 'const struct T' <NoOp>
    |       `-CXXBindTemporaryExpr 'struct T' (CXXTemporary 0x7fefd88311e8)
    |         `-CXXOperatorCallExpr 'struct T'
    |           |-ImplicitCastExpr 'struct T (*)(struct T &, struct T &)' <FunctionToPointerDecay>
    |           | `-DeclRefExpr 'struct T (struct T &, struct T &)' lvalue Function 0x7fefd88300a0 'operator-' 'struct T (struct T &, struct T &)'
    |           |-DeclRefExpr 'struct T' lvalue Var 0x7fefd8830b18 't1' 'struct T'
    |           `-DeclRefExpr 'struct T' lvalue Var 0x7fefd8830c40 't2' 'struct T'
    |-ExprWithCleanups 'struct T' lvalue
    | `-CXXOperatorCallExpr 'struct T' lvalue
    |   |-ImplicitCastExpr 'struct T &(*)(const struct T &) noexcept' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 'struct T &(const struct T &) noexcept' lvalue CXXMethod 0x7fefd8831210 'operator=' 'struct T &(const struct T &) noexcept'
    |   |-DeclRefExpr 'struct T':'struct T' lvalue Var 0x7fefd8830d90 't' 'struct T':'struct T'
    |   `-MaterializeTemporaryExpr 'const struct T' lvalue
    |     `-ImplicitCastExpr 'const struct T' <NoOp>
    |       `-CXXBindTemporaryExpr 'struct T' (CXXTemporary 0x7fefd8831888)
    |         `-CXXOperatorCallExpr 'struct T'
    |           |-ImplicitCastExpr 'struct T (*)(struct T, struct T)' <FunctionToPointerDecay>
    |           | `-DeclRefExpr 'struct T (struct T, struct T)' lvalue Function 0x7fefd88305f0 'operator*' 'struct T (struct T, struct T)'
    |           |-CXXBindTemporaryExpr 'struct T' (CXXTemporary 0x7fefd8831738)
    |           | `-CXXConstructExpr 'struct T' 'void (const struct T &) noexcept'
    |           |   `-ImplicitCastExpr 'const struct T' lvalue <NoOp>
    |           |     `-DeclRefExpr 'struct T' lvalue Var 0x7fefd8830b18 't1' 'struct T'
    |           `-CXXBindTemporaryExpr 'struct T' (CXXTemporary 0x7fefd88317b0)
    |             `-CXXConstructExpr 'struct T' 'void (const struct T &) noexcept'
    |               `-ImplicitCastExpr 'const struct T' lvalue <NoOp>
    |                 `-DeclRefExpr 'struct T' lvalue Var 0x7fefd8830c40 't2' 'struct T'
    `-ReturnStmt
      `-IntegerLiteral 'int' 0
